
<section 
	title="News:  Wineconf 2009"
	subject="News / WineConf"
	archive="http://www.winehq.org/pipermail/wine-devel/2009-May/076016.html"
	posts="10"
>
<topic>News / WineConf</topic>
<p>
Hans Leidekker has begun planning this year's WineConf.  A location and date have already been chosen.  Hans writes into wine-devel:
</p>
<quote>
<p>
Dear Wine developers,
</p><p>
You may recall that I volunteered to help host WineConf in the Netherlands
in 2007 when, after a vote, an offer by Dan Kegel to host at Google's offices
in Zurich won the bid.
</p><p>
Last year WineConf went across the pond to Minnesota, so it seems natural
that this year's WineConf will be hosted in the country with the highest
number of Wine developers per capita ;-)
</p><p>
At Twente University Campus to be precise, near the city of Enschede:
 <a href="http://maps.google.com/maps/ms?ie=UTF8&amp;hl=en&amp;msa=0&amp;msid=104770595427636833911.00044a70a58a75a8aaa2e&amp;ll=52.240573,6.852207&amp;spn=0.0226,0.057764&amp;z=15">http://maps.google.com/maps/ms?ie=UTF8&amp;hl=en&amp;msa=0&amp;msid=104770595427636833911.00044a70a58a75a8aaa2e&amp;ll=52.240573,6.852207&amp;spn=0.0226,0.057764&amp;z=15</a> 
</p><p>
From November 6-8 (Friday to Sunday).
</p><p>
I chose this place because of its good facilities and relatively low
costs; we want to make the conference accessible for as many developers
as possible.
</p><p>
Directions, agenda, etc. will be made available on this page:
</p><p>
  <a href="http://wiki.winehq.org/WineConf">http://wiki.winehq.org/WineConf</a> 
</p><p>
Please e-mail me at wineconf at meelstraat.net if you intend to come, so we
can make a better estimation of the number of attendees.
</p><p>
See you there!
</p><p>
 -Hans
</p>
</quote>

<p>
I mentioned last WWN that a new patchwatcher was in the works.  It is running now and the results are published to <a href="http://winepatch.stwing.upenn.edu/results2/.">http://winepatch.stwing.upenn.edu/results2/.</a>  This machine is running inside a virtual machine that does not have access to a real hardware graphics card.  Because of this the D3D tests are not run properly.  Hopefully in the next few weeks a solution will be found to allow the virtual machine access to a GPU and we'll get even better test results.
</p></section>
<section 
	title="A Wine Success Story"
	subject="Wine"
	archive="3"
	posts="1"
>
<topic>Wine</topic>
<p>
Dan Kegel had an opportunity recently to do an email interview with Tom&#225;s Kindl, a happy Wine user at his workplace
</p>
<p>
Q: Where is your firm located?
</p>
<quote>
<p>
A:<br />
 Our firm (Law office KINDL &amp; PARTNERS) is basically
 a branch of law office situated in Prague. Our seat is city
 Chomutov, Czech republic (GPS: 50&#176;27'34"N, 13&#176;24'44.637"E).
 All my answers are pertinent only to this Chomutov branch as
 I have no control over Prague HQ :-)
</p>
</quote>
<p>
Q: How many computers do you have at your office?
</p>
<quote>
<p>
A:<br />
 We have 4 desktops in office and our employees use their notebooks
 for working from home (either their own or lent from company), there's
 about 7 of them. We have 2 servers - one housed in Prague and one inhouse.

</p>
</quote>
<p>
Q: What operating systems / distros are they running?
</p>
<quote>
<p>
A:<br />
For both desktops and notebooks we use Mandriva (2009 with KDE3) and
 our servers use Gentoo.
</p>
</quote>
<p>
Q: How long have you been running Linux there?
</p>
<quote>
<p>
A:<br />
We've been running Linux on these computers for almost 2 years (I
should mention   that this Chomutov branch is open for almost 2 years
and we've been running Linux  there ever since). I myself use Linux since approx. '97 (Slackware
3.4 or 3.5) and  have been increasingly running it since that time (dual booting
first, single booting now...).

</p>
</quote>
<p>
Q: Which applications do you run natively?
</p>
<quote>
<p>
A:<br />
  Well as any law office we basically need few programs. We use
OpenOffice.org exclusively
 for usual office work. XSane for scanning documents (have network
ADF scanner - it was  real pain to find one...), KPDf for viewing them and basically
that's it. Our branch is running  a heavily modified version of Mantis bugtracker as its internal IS.
</p>
</quote>
<p>
Q: Which applications do you run under Wine?
</p>
<quote>
<p>
A:<br />
We run ASPI (http://appdb.winehq.org/objectManager.php?sClass=application&amp;iId=3194),
which stands as an acronym to 'Automated system of legal/law
information'. It's basically source of currently valid Czech laws and EU regulations and
accompanying literature and court decisions (European Court of Justice/Court of the First
Instance). No other Win apps
 are needed.

</p>
</quote>
<p>
Q: Were there any problems switching over to Linux or Wine?
</p>
<quote>
<p>
A:<br />
Aside from teaching our employees, that most applications have same
functionality but different  name and that they don't have to update anti-virus every morning any
more, no. Sometimes, very  occasionaly, (twice a year approx.) fonts in ASPI go crazy (they're
substituted with hard to read  Goth-like script). Purging wine directory and fresh install solves
it though :-) .
</p>
<p>
thank you for good work

T. Kindl
</p>
</quote>

</section>
<section 
	title="Modelling Wine Development"
	subject="Development Strategy"
	archive="http://yokozar.org/blog/archives/48"
	posts="10"
>
<topic>Development Strategy</topic>
<p>
Scott Ritchie has put together an interesting, as Einstein would call it, <a href="http://yokozar.org/blog/archives/48">gedanken experiment</a> (thought experiment) on the future of Wine based on how bugs are fixed.  Using different bug attack strategies Scott was interested in finding out the rate at which applications begin working and the rate at which Wine users become "happy"  Some of Scott's results:
</p>
<quote>
<p>
    * The strategy we use - the order we tackle various bugs - really does matter.  Every strategy gets to the perfect 100% end after solving all the bugs, but some get you ten times as many happy users when you're only half done.  In practice, having far more users likely translates into extra developers and a much faster rate of development.
</p><p>
    * Varying the difficulty of individual bugs didn't matter much.  The pictures came out pretty much the same
</p><p>
    * Prioritizing the last few bugs in apps that are almost done is one of the most productive ways to increase happy users - in the simulations I ran it even outperformed working on the most popular application.  Unfortunately in the real world it can sometimes be difficult to tell if an application "almost works" in Wine.
</p><p>
    * Similarly, "almost happy users" are the easiest to satisfy.  When we have many to choose from, picking one arbitrarily and ensuring he was happy before moving on to the next user significantly outperformed trying to satisfy almost happy users at random.
</p><p>
    * Instances of "collateral damage" - the fixing of one application causing another application to start working without any extra effort - are rather uncommon until most applications are almost working.  The wintrust API is needed by both Steam and iTunes, however when enough of wintrust was implemented to make Steam work there were still many unrelated bugs causing iTunes to remain broken.
</p><p>
    * Just about every reasonable way of generating bug difficulty, relative bug probability, applications, and users that I could think of lead to the same general picture: something that looks roughly linear for most of it before taking a very sharp upward turn near the very end.  In other words, the model tells us that we should expect to be pleasantly surprised.  At some point, Wine will get very good very fast.
</p>
</quote></section>
<section 
	title="Bug 61 - Resolved Fixed"
	subject="Long Standing Bugs"
	archive="http://www.winehq.org/pipermail/wine-patches/2009-April/071446.html"
	posts="4"
>
<topic>Long Standing Bugs</topic>
<p>
Andr&#233; Hentschel has been working hard on fixing one of the oldest bugs still remaining in the wine bugzilla tree.  He writes in:
</p>
<quote>
<p>
I was working on an very old Bug and learned Perl just to fix it!  It was Bug Number 61, the second oldest Bug not yet fixed. Reported on 2000-10-25 by Francois Gouget.
</p>
<p>
It was about enhancing 'winemaker' to read out project-files from Visual Studio and i found it 2009-01-25 thinking "wow, such old bugs?".
After weeks of work and much rejected patches it finally got in. And it supports .dsw, .vcproj and .sln files beside the .dsp file. So its ready for newer Visual Studio versions also.
</p>
<p>
Francois Gouget was a good mentor for that time.
</p>
</quote></section>
<section 
	title="Test suite passing on windows machines"
	subject="Wine Tests on Windows"
	archive="http://www.winehq.org/pipermail/wine-devel/2009-January/072559.html"
	posts="15"
>
<topic>Wine Tests on Windows</topic>
<p>
The hard work on making the Wine test suite pass has continued, and as of late January the first signs of success began appearing on windows machines.  Reece Dunn: 
</p>
<quote>
<p>
Hi,
</p><p>
The Wine tests are now passing on a Windows XP machine
(http://test.winehq.org/data/4b27dfec939d131c9d7e09f97f14dfc7dabe8843/#group_XP).
Two of the other four only have 2 or 3 failures.
</p><p>
The 2003 group has 3 machines with 1 failure each (urlmon:protocol on
one, user32:menu on the others).
</p><p>
Congratulations to everyone involved fixing the tests!
</p><p>
- Reece
</p>
</quote>
<p>
Since then progress has continued. The test <a href="http://test.winehq.org/data/">results page</a> now shows a number of operating systems namely W2000, W2003 and XP) as "yellow" (meaning some machines pass).  The test suite on Wine itself also consistently passes on a select few machines and nearly passes on the others.
</p></section>