From roy at cs.hmc.edu  Thu Nov  1 02:00:36 2007
From: roy at cs.hmc.edu (Roy Shea)
Date: Thu, 1 Nov 2007 00:00:36 -0700
Subject: New DLL, Server and Service Documentation
Message-ID: <20071101070036.GA7081@knuth.cs.hmc.edu>

Howdy All,

This autumn I began learning both Wine and COM.  A
combination of limited documentation and trouble finding the
right example code for my task at hand made this a difficult
process.  In an attempt to help other new Wine and COM
developers I wrote a tutorial on COM development the Wine
way.  This tutorial describes:

- A simple DLL providing a in-process COM object
- A simple server providing a local COM object
- A simple service that publishes a COM object and the
  corresponding proxy / stub required to use the service

with instructions on Wine integration and, for Windows users
or testers building for Windows, basic instructions on
building and running these same applications in Windows.
The tutorial is available at:

http://ambleramble.org/wine/

I hope other developers enjoy this documentation.  If you
see mistakes, either minor typos or conceptual problems,
please drop me an email and I'll clean up the docs.

Peace,
-Roy





From wine at electrozaur.com  Thu Nov  1 04:09:14 2007
From: wine at electrozaur.com (Boaz Harrosh)
Date: Thu, 01 Nov 2007 11:09:14 +0200
Subject: Wine Gecko packaging
In-Reply-To: <4728D580.3080609@codeweavers.com>
References: <471FCD6C.2020605@codeweavers.com>	<011801c819e4$12210190$6700fea9@DMITRY>
	<4728D580.3080609@codeweavers.com>
Message-ID: <472997BA.3040806@electrozaur.com>

----- Original Message -----
*From:* Jacek Caban <jacek at codeweavers.com>
*To:* Dmitry Timoshkov <dmitry at codeweavers.com>
*CC:* wine-devel at winehq.org
*Sent:* Wed, Oct 31 2007 at 21:20 +0200
*Subject:* Wine Gecko packaging


> Hi Dmitry,
>
> Dmitry Timoshkov wrote:
>   
>> http://source.winehq.org/winegecko.php still points to an old Gecko
>> package
>> (0.0.1). Please update it.
>>
>>     
>
> We can't change it due to compatibility with older Wine versions. We
> encode Gecko version in URL instead, so
> http://source.winehq.org/winegecko.php?v=0.1.0 will do what you want.
>
> Jacek
>   
Do you have a magic param to download the latest one available?
something like: winegecko.php?v=latest

Thanks
Boaz



From stefan at codeweavers.com  Thu Nov  1 06:54:31 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Thu, 1 Nov 2007 12:54:31 +0100
Subject: wined3d: Enable clip planes with GLSL shader backend
In-Reply-To: <4729255A.5050507@gmail.com>
References: <200710311850.32754.der.fabe@gmx.net> <4729255A.5050507@gmail.com>
Message-ID: <200711011254.34453.stefan@codeweavers.com>

Am Donnerstag, 1. November 2007 02:01:14 schrieb Ivan Gyurdiev:
> > +    if (use_vs(stateblock->wineD3DDevice) &&
> > stateblock->wineD3DDevice->vs_selected_mode == SHADER_ARB)
>
> GLSL specific logic should go in glsl_shader.c.
>
> Please try to get away from writing code in terms of flags and if
> statements - use the OOP model.
> Backend-specific logic should be removed from pixelshader and
> vertexshader too...
We've had this discussion over and over, but I'm not too fond of pressing 
everything into an OOP model by force. I agree it is useful in general, and 
I'm currently working on making the surface type organisation more OOPish. 
However, in this special case the state management collides with shader 
differences. Adding a shader model callback for every of those cases doesn't 
make the code more readable IMHO.

I agree that the backend specific code in GenerateShader in vertexshader.c / 
pixelshader.c should be moved to arb / glsl backends. Then we'd get vertex 
and pixel shader specifics into arb / glsl, but we can't avoid those anyway.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071101/74bb9e80/attachment.pgp 

From stefan at codeweavers.com  Thu Nov  1 06:56:51 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Thu, 1 Nov 2007 12:56:51 +0100
Subject: New DLL, Server and Service Documentation
In-Reply-To: <20071101070036.GA7081@knuth.cs.hmc.edu>
References: <20071101070036.GA7081@knuth.cs.hmc.edu>
Message-ID: <200711011256.53653.stefan@codeweavers.com>

Am Donnerstag, 1. November 2007 08:00:36 schrieb Roy Shea:
> Howdy All,
>
> This autumn I began learning both Wine and COM.  A
> combination of limited documentation and trouble finding the
> right example code for my task at hand made this a difficult
> process.  In an attempt to help other new Wine and COM
> developers I wrote a tutorial on COM development the Wine
> way.  This tutorial describes:
>
This should propably be linked from the wiki. Which would be the right place 
for that?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071101/e521d356/attachment.pgp 

From rob at codeweavers.com  Thu Nov  1 08:26:24 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Thu, 01 Nov 2007 13:26:24 +0000
Subject: setupapi: Add stub for SetupInstallServicesFromInfSectionW
In-Reply-To: <200711010411.16584.chris.kcat@gmail.com>
References: <200711010411.16584.chris.kcat@gmail.com>
Message-ID: <4729D400.9090000@codeweavers.com>

Chris Robinson wrote:
>  @ stdcall SetupInstallFromInfSectionA(long long str long long str long ptr ptr long ptr)
>  @ stdcall SetupInstallFromInfSectionW(long long wstr long long wstr long ptr ptr long ptr)
>  @ stdcall SetupInstallServicesFromInfSectionA(long str long)
> +@ stdcall SetupInstallServicesFromInfSectionW(long wstr long)
>  @ stub SetupInstallServicesFromInfSectionExA
>  @ stub SetupInstallServicesFromInfSectionExW
> -@ stub SetupInstallServicesFromInfSectionW
>  @ stdcall SetupIterateCabinetA(str long ptr ptr)
>  @ stdcall SetupIterateCabinetW(wstr long ptr ptr)
>  @ stub SetupLogErrorA
>   

There's no need to move the entry for 
SetupInstallServicesFromInfSectionW. The list was sorted alphabetically, 
but now it isn't.

-- 
Rob Shearman



From frank.richter at gmail.com  Thu Nov  1 09:32:50 2007
From: frank.richter at gmail.com (Frank Richter)
Date: Thu, 01 Nov 2007 15:32:50 +0100
Subject: setupapi: Add stub for SetupInstallServicesFromInfSectionW
In-Reply-To: <4729D400.9090000@codeweavers.com>
References: <200711010411.16584.chris.kcat@gmail.com>
	<4729D400.9090000@codeweavers.com>
Message-ID: <4729E392.8000307@gmail.com>

On 01.11.2007 14:26, Robert Shearman wrote:
> There's no need to move the entry for 
> SetupInstallServicesFromInfSectionW. The list was sorted alphabetically, 
> but now it isn't.

Unless you ignore the A/W suffix. One could argue that this is more
intuitive as you could locate an entry in the list by searching for the
undecorated name and then look for the one with the appropriate suffix,
which is at most one line away. If you sort strictly alphabetically, A/W
variants may be a couple of lines away (e.g. FooA/FooExA/FooExW/FooW)
which could make finding the right variant slightly counterintuitive.

-f.r.


From frank.richter at gmail.com  Thu Nov  1 09:32:50 2007
From: frank.richter at gmail.com (Frank Richter)
Date: Thu, 01 Nov 2007 15:32:50 +0100
Subject: setupapi: Add stub for SetupInstallServicesFromInfSectionW
In-Reply-To: <4729D400.9090000@codeweavers.com>
References: <200711010411.16584.chris.kcat@gmail.com>
	<4729D400.9090000@codeweavers.com>
Message-ID: <4729E392.8000307@gmail.com>

On 01.11.2007 14:26, Robert Shearman wrote:
> There's no need to move the entry for 
> SetupInstallServicesFromInfSectionW. The list was sorted alphabetically, 
> but now it isn't.

Unless you ignore the A/W suffix. One could argue that this is more
intuitive as you could locate an entry in the list by searching for the
undecorated name and then look for the one with the appropriate suffix,
which is at most one line away. If you sort strictly alphabetically, A/W
variants may be a couple of lines away (e.g. FooA/FooExA/FooExW/FooW)
which could make finding the right variant slightly counterintuitive.

-f.r.



From gerald at pfeifer.com  Thu Nov  1 09:02:08 2007
From: gerald at pfeifer.com (Gerald Pfeifer)
Date: Thu, 1 Nov 2007 15:02:08 +0100 (CET)
Subject: Bug in dlls/oleaut32/tests/vartype.c?
In-Reply-To: <47266507.8060403@palosanto.com>
References: <Pine.LNX.4.64.0710151513070.26054@acrux.dbai.tuwien.ac.at>
	<Pine.LNX.4.64.0710292340380.26054@acrux.dbai.tuwien.ac.at>
	<47266507.8060403@palosanto.com>
Message-ID: <Pine.LNX.4.64.0711011443050.26054@acrux.dbai.tuwien.ac.at>

[ Updated patch at the end, Alexandre. ]

On Mon, 29 Oct 2007, Alex Villac??s Lasso wrote:
> Sorry to object, but which version of exactly which compiler optimizes 
> away the negative sign?

You're right, I misread this, sorry.  My original patch wasn't wrong, 
but the explanation was, and there seems in fact a better patch.

> Consider the following program:

That's a very fair test, and I enhanced it as follows:

   #include <stdio.h>
   #include <stdlib.h>

   void print(const float f) {

     union x {
        float f;
        unsigned char b[4];
     } u;

     u.f = f;

     printf("Value as float is %f\n", u.f);
     printf("as bytes %02x %02x %02x %02x\n\n",u.b[0],u.b[1],u.b[2],u.b[3]);
   }

   int main() {
     print(-1e-400);
     print(-0.0);
   }

Both GCC 3.4 and GCC 4.2 snapshot give 00 00 00 80 in both cases.  (All 
the original warning referred to actually did was to indicate that the 
compiler actually made this change automatically; that was added with
GCC 4.3 it seems.)

Gerald


ChangeLog:
Use -0.0 directly in test_VarBstrFromR4().

Index: vartype.c
===================================================================
RCS file: /home/wine/wine/dlls/oleaut32/tests/vartype.c,v
retrieving revision 1.51
diff -u -3 -p -r1.51 vartype.c
--- vartype.c	20 Aug 2007 12:43:49 -0000	1.51
+++ vartype.c	1 Nov 2007 13:42:48 -0000
@@ -4747,7 +4747,7 @@ static void test_VarBstrFromR4(void)
     }
   }
 
-  f = -1e-400;    /* deliberately cause underflow */
+  f = -0.0;
   hres = pVarBstrFromR4(f, lcid, 0, &bstr);
   ok(hres == S_OK, "got hres 0x%08x\n", hres);
   if (bstr)

From astrand at cendio.se  Thu Nov  1 09:56:03 2007
From: astrand at cendio.se (=?UTF-8?Q?Peter_=C3=85strand?=)
Date: Thu, 1 Nov 2007 15:56:03 +0100 (CET)
Subject: [Bug 10266] Numpad keyboard handling is strange,   Del key
	produces two events
In-Reply-To: <E1InaAA-00083p-LB@wine.codeweavers.com>
References: <E1InaAA-00083p-LB@wine.codeweavers.com>
Message-ID: <Pine.LNX.4.64.0711011537590.11719@maggie.lkpg.cendio.se>


Perhaps we need to gather more input from other developers:

> http://bugs.winehq.org/show_bug.cgi?id=10266
>
> --- Comment #4 from Dmitry Timoshkov <dmitry at codeweavers.com>  2007-11-01 08:32:46 ---
> > But in that case, you will find all of your X11 applications on your desktop,
> > including Firefox etc, confusing as well?
> 
> Yes, and this behaviour is very annoying and not consistent IMO.

Let's break down this statement into two:

1) "Not consistent"

It might be interesting to compare with CapsLock. Shift can cancel 
CapsLock, but also substitute it. This is true on both Windows and Linux. 
Additionally, on Linux, NumLock works the same, ie Shift works in both 
directions. On Windows, however, Shift can only cancel NumLock, not 
substitute it. Regardless of whether users actually finds this useful or 
not, I think it's hard to argue for that this is "logical" or 
"consistent". 


2) "Annoying"

Can it be that you have a Windows background and are therefore used to the 
Windows behaviour? 


I haven't actually asked any users yet, but my general opinion is that all 
applications on the same desktop should behave the same, if possible. We 
are decorating the Windows windows with the normal window manager 
decorations etc so I think it's reasonable that the keyboard should behave 
according to the native system model. 

Another thing to keep in mind is that most users actually never use the 
numpad keys in conjunction with Shift. I know this from several years of 
experience of keyboard hacking - there have been plenty of bugs in many 
softwares in this area but very few actual bug reports. 


> Besides, I just tested with Wine's notepad and don't see the problem you
> are reporting.

Which keyboard layout are you using? On my system, Wine selects the 
Swedish keyboard layout. 

Regards, 
---
Peter ?strand		ThinLinc Chief Developer
Cendio AB		http://www.cendio.se
Wallenbergs gata 4
583 30 Link?ping	Phone: +46-13-21 46 00

ThinLinc User Group 2007 H?stkonferens --- 15-16 november, Link?ping.
Program och anm?lan: http://www.thinlincusergroup.se/aktiviteter

From l_bratch at yahoo.co.uk  Thu Nov  1 10:11:00 2007
From: l_bratch at yahoo.co.uk (Luke Bratch)
Date: Thu, 1 Nov 2007 15:11:00 +0000 (GMT)
Subject: iexplore proxy server
Message-ID: <415745.13381.qm@web26011.mail.ukl.yahoo.com>

Hello

Is there supposed to be a way to set a HTTP (or
otherwise) proxy server in Wine's iexplore at the
moment?

I can't find any such documentation, but searching
around has found a lot of people suggesting that
setting these keys will help:

[Software\\Microsoft\\Windows\\CurrentVersion\\Internet
Settings]
"ProxyEnable"=dword:00000001 
"ProxyServer"="proxyserver:8080"

Setting those didn't make any difference in iexplore,
but the attached patch which edits a file that the
Gecko installer creates, makes HTTP proxy support work
perfectly.

Is this the correct/only way to do this?

Thanks

Luke Bratch


      ___________________________________________________________
Yahoo! Answers - Got a question? Someone out there knows the answer. Try it
now.
http://uk.answers.yahoo.com/ 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: proxy.patch
Type: application/octet-stream
Size: 2120 bytes
Desc: 843534684-proxy.patch
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071101/bfb131ab/attachment.obj 

From dmitry at codeweavers.com  Thu Nov  1 10:16:19 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 1 Nov 2007 23:16:19 +0800
Subject: [Bug 10266] Numpad keyboard handling is strange,
	Del keyproduces two events
References: <E1InaAA-00083p-LB@wine.codeweavers.com>
	<Pine.LNX.4.64.0711011537590.11719@maggie.lkpg.cendio.se>
Message-ID: <020501c81c9a$29948640$6700fea9@DMITRY>

"Peter ?strand" <astrand at cendio.se> wrote:

> 1) "Not consistent"
>
> It might be interesting to compare with CapsLock. Shift can cancel
> CapsLock, but also substitute it. This is true on both Windows and Linux.
> Additionally, on Linux, NumLock works the same, ie Shift works in both
> directions. On Windows, however, Shift can only cancel NumLock, not
> substitute it. Regardless of whether users actually finds this useful or
> not, I think it's hard to argue for that this is "logical" or
> "consistent".

Current behaviour emulates what ToUnicodeEx does under Windows. And some
apps depend on it.

> 2) "Annoying"
>
> Can it be that you have a Windows background and are therefore used to the
> Windows behaviour?

When NumLock is off arrow kys on numpad should behave like normal arrow keys
IMO. Perhaps you have an idea how to use keypad with NumLock turned off to move
cursor, and to select text when needed with Shift just like arrow keys do?

> > Besides, I just tested with Wine's notepad and don't see the problem you
> > are reporting.
>
> Which keyboard layout are you using? On my system, Wine selects the
> Swedish keyboard layout.

I'm using us keyboard layout.

-- 
Dmitry. 



From fgouget at free.fr  Thu Nov  1 11:29:09 2007
From: fgouget at free.fr (Francois Gouget)
Date: Thu, 1 Nov 2007 17:29:09 +0100 (CET)
Subject: Make test drill, next steps, call for help with Winetest
In-Reply-To: <Pine.LNX.4.64.0710271340550.24558@amboise.dolphin>
References: <200710152215.44817.hans@it.vu.nl>
	<Pine.LNX.4.64.0710271340550.24558@amboise.dolphin>
Message-ID: <Pine.LNX.4.64.0711011704380.4895@amboise.dolphin>

On Sat, 27 Oct 2007, Francois Gouget wrote:
[...]
> There are other options to specify which version of winetest.exe to 
> grab, to set the timeout on the tests execution, etc.
> 
> Things still on the todo list:
>  * the script also grabs the winetest.exe signature and attempts to 
> verify it. But I don't know where to find the corresponding public key 
> (651FD487) so I don't know if this really works.

Hmm, as pointed out by Detlef, there a link on Paul's home page pointing 
to his public key and the required key is in there. Then it's just a 
matter of telling gpg to use it which I have now done and the signature 
checking code seems to work as intended.


>  * the script gets the 'latest' winetest.exe version by default, but 
> when there are compilation problems I guess this may stay stuck at the 
> same revision for some time. So it would be nice if the script could 
> know which version it's getting so it could skip the tests if that 
> version is too old, or has already been tested.

The script can now use a local cache containing the already downloaded 
files, and can be told to skip the tests if it finds that a file has not 
changed since the last time it has been used in a given vm+snapshot 
combination.

In fact I've been able to verify that it works in real life since 
winetest has not been updated since last monday :-(
Compilation problems?

I've attached the latest version of the script.


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                  Hiroshima '45 - Czernobyl '86 - Windows '95
-------------- next part --------------
#!/bin/sh
# Copyright (C) 2007 Francois Gouget
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
name0=`basename "$0"`

verbose=""
base_url="http://www.astro.gla.ac.uk/users/paulm/WRT/CrossBuilt"
vmware="/usr/local/opt/vmware/bin"
if [ -z "$DISPLAY" ]
then
    DISPLAY=":0.0"
    export DISPLAY
fi


verbose()
{
    if [ -n "$verbose" ]
    then
        echo "$@"
    fi
}

vm_is_busy()
{
    vm="$1"
    test -f "$vm.WRITELOCK"
    return $?
}

vm_is_running()
{
    # For VM matching purposes, only keep the last two elements of the path
    # to avoid trouble with symbolic links
    vm_match=`dirname "$opt_vm"`
    vm_match=`basename "$vm_match"`/`basename "$opt_vm"`
    vm_match=`echo "$vm_match" | sed -e 's/\([^a-zA-Z0-9_ /]\)/[\1]/g'`
    "$vmware/vmrun" list | egrep "$vm_match" >/dev/null
    return $?
}

cached_wget()
{
    url="$1"
    dst="$2"
    cache="$3"

    if [ -n "$cache" ]
    then
    filename=`basename "$url"`
    (
        cd "$cache" &&
        wget -N "$url" &&
        cp -pr "$filename" "$dst"
    )
    else
        wget -O "$dst" "$url"
    fi
}


### Main

opt_vm=""
opt_tag_prefix=""
opt_tag=""
opt_cache=""
opt_version=""
opt_check_sig=""
opt_submit=""
opt_timeout=""
opt_autorun=""
opt_snapshot=""
opt_cddevice=""
opt_usage=""
while [ $# -gt 0 ]
do
    arg="$1"
    shift
    case "$arg" in
    --tag-prefix)
        if [ -n "$opt_tag_prefix" ]
        then
            echo "$name0:error: --tag-prefix can only be used once" >&2
            opt_usage="2"
            break
        elif [ $# -eq 0 ]
        then
            echo "$name0:error: missing argument for the --tag-prefix option" >&2
            opt_usage="2"
            break
        else
            opt_tag_prefix="$1"
            shift
        fi
        ;;
    --tag)
        if [ -n "$opt_tag" ]
        then
            echo "$name0:error: --tag can only be used once" >&2
            opt_usage="2"
            break
        elif [ $# -eq 0 ]
        then
            echo "$name0:error: missing argument for the --tag option" >&2
            opt_usage="2"
            break
        else
            opt_tag="$1"
            shift
        fi
        ;;
    --cache)
        if [ -n "$opt_cache" ]
        then
            echo "$name0:error: --cache can only be used once" >&2
            opt_usage="2"
            break
        elif [ $# -eq 0 ]
        then
            echo "$name0:error: missing argument for the --cache option" >&2
            opt_usage="2"
            break
        else
            opt_cache="$1"
            shift
        fi
        ;;
    --skip-old)
        opt_skip_old="1"
        ;;
    --no-skip-old)
        opt_skip_old="0"
        ;;
    --version)
        if [ -n "$opt_version" ]
        then
            echo "$name0:error: --version can only be used once" >&2
            opt_usage="2"
            break
        elif [ $# -eq 0 ]
        then
            echo "$name0:error: missing argument for the --version option" >&2
            opt_usage="2"
            break
        else
            opt_version="$1"
            shift
        fi
        ;;
    --check-sig)
        opt_check_sig="1"
        ;;
    --no-check-sig)
        opt_check_sig="0"
        ;;
    --submit)
        opt_submit="1"
        ;;
    --no-submit)
        opt_submit="0"
        ;;
    --timeout)
        if [ -n "$opt_timeout" ]
        then
            echo "$name0:error: --timeout can only be used once" >&2
            opt_usage="2"
            break
        elif [ $# -eq 0 ]
        then
            echo "$name0:error: missing argument for the --timeout option" >&2
            opt_usage="2"
            break
        elif echo "$1" | egrep '^[0-9][0-9]*$' >/dev/null
        then
            opt_timeout="$1"
            shift
        else
            echo "$name0:error: the timeout value must be a decimal number" >&2
            opt_usage="2"
            break
        fi
        ;;
    --autorun)
        opt_autorun="1"
        ;;
    --no-autorun)
        opt_autorun="0"
        ;;
    --snapshot)
        if [ -n "$opt_snapshot" ]
        then
            echo "$name0:error: --snapshot can only be used once" >&2
            opt_usage="2"
            break
        elif [ $# -eq 0 ]
        then
            echo "$name0:error: missing argument for the --snapshot option" >&2
            opt_usage="2"
            break
        else
            opt_snapshot="$1"
            shift
        fi
        ;;
    --cddevice)
        if [ -n "$opt_cddevice" ]
        then
            echo "$name0:error: --cddevice can only be used once" >&2
            opt_usage="2"
            break
        elif [ $# -eq 0 ]
        then
            echo "$name0:error: missing argument for the --cddevice option" >&2
            opt_usage="2"
            break
        else
            opt_cddevice="$1"
            shift
        fi
        ;;
    --verbose)
        verbose="1"
        ;;
    --help|-help|-h|-?)
        opt_usage="0"
        break
        ;;
    *)
        if [ -z "$opt_vm" ]
        then
            opt_vm="$arg"
        else
            echo "$name0:error: unknown option '$arg'" >&2
            opt_usage="2"
            break
        fi
    esac
done

if [ -z "$opt_usage" ]
then
    if [ -n "$opt_tag_prefix" -a -n "$opt_tag" ]
    then
        echo "$name0:error: --tag-prefix and --tag are incompatible" >&2
        opt_usage="2"
    elif [ -z "$opt_tag_prefix" ]
    then
        opt_tag_prefix="vmware"
    fi
    if [ -z "$opt_vm" ]
    then
        echo "$name0:error: you must specify a VM path" >&2
        opt_usage="2"
    elif [ -z "$opt_tag" ]
    then
        opt_tag="$opt_tag_prefix-"`basename "$opt_vm" | sed -e 's/\.[cv][fm][gx]$//' -e 's/ //g'`
    fi
    [ -n "$opt_skip_old" ] || opt_skip_old="0"
    if [ -n "$opt_cache" -a ! -d "$opt_cache" ]
    then
        echo "$name0:error: --cache must point to a directory" >&2
        opt_usage="2"
    elif [ -z "$opt_cache" -a "$opt_skip_old" != "0" ]
    then
        echo "$name0:error: --skip-old can only be used with --cache" >&2
        opt_usage="2"
    fi
    [ -n "$opt_version" ] || opt_version="latest"
    if [ -z "$opt_snapshot" ]
    then
        opt_snapshot="winetest"
    fi
    [ -n "$opt_autorun" ] || opt_autorun="1"
    if [ "$opt_autorun" = "0" -a -n "$opt_submit" ]
    then
        echo "$name0:error: --(no-)submit can only be used with the --autorun option" >&2
        opt_usage="2"
    fi
    [ -n "$opt_submit" ] || opt_submit="1"
    if [ "$opt_submit" = "0" -a -z "$opt_timeout" ]
    then
        opt_timeout="0"
    fi
    if [ "$opt_submit" = "0" -a "$opt_skip_old" != "0" ]
    then
        echo "$name0:error: --no-submit and --skip-old are incompatible" >&2
        opt_usage="2"
    fi
    [ -n "$opt_timeout" ] || opt_timeout="30"
    [ -n "$opt_cddevice" ] || opt_cddevice="ide1:0"
fi

if [ -n "$opt_usage" ]
then
    if [ "$opt_usage" != "0" ]
    then
        echo "$name0:error: try '$name0 --help' for more information" >&2
        exit $opt_usage
    fi
    echo "Usage: $name0 [--version VERSION] [--cache DIR [--skip-old]] [--check-sig]"
    echo "                [--tag-prefix PREFIX] [--tag TAG] [--submit|--no-submit]"
    echo "                [--autorun|--no-autorun] [--cddevice DEVICE]"
    echo "                [--timeout TIMEOUT] [--snapshot SNAPSHOT] /path/to/vm.vmx"
    echo "                [--verbose] [--help]"
    echo
    echo "Downloads the latest winetest.exe, and runs it in a VMware virtual machine by"
    echo "putting it on a virtual CD. The state of the virtual machine is left"
    echo "undisturbed."
    echo
    echo "Options:"
    echo "   --version VERSION   Specifies which version of winetest.exe to download."
    echo "                       By default this is 'latest'."
    echo "   --cache DIR         Specifies where to cache the downloaded binaries. This"
    echo "                       is useful when running a test multiple times in"
    echo "                       different virtual machines."
    echo "   --skip-old          Exit without running the test if the test has not"
    echo "                       changed and has already been run in this virtual"
    echo "                       machine+snapshot combination."
    echo "   --check-sig         Specifies that winetest.exe should not be run if its"
    echo "                       signature cannot be checked. By default, the tests are"
    echo "                       only aborted if winetest.exe does not match its"
    echo "                       signature. If --no-check-sig is used, then the"
    echo "                       signature is not checked at all'."
    echo "   --tag-prefix PREFIX Specifies what to prefix to the virtual machine name"
    echo "                       with when building the default tag. By default this is"
    echo "                       'vmware'."
    echo "   --tag TAG           The tag to use when submitting the results. By default"
    echo "                       this is the tag prefix, followed by a dash and the"
    echo "                       basename of the virtual machine file."
    echo "   --timeout TIMEOUT   Specifies how long, in minutes, to give to winetest.exe"
    echo "                       to run. By default this is 30 minutes."
    echo "   --submit            Submit the test results to http://test.winehq.org/data/"
    echo "                       This is the default. Use --no-submit to not submit the"
    echo "                       results, and remove the 30 minutes timeout."
    echo "   --autorun           Generate an autorun.inf file so the tests are started"
    echo "                       automatically. This is the default. If you use"
    echo "                       --no-autorun, then you will need to make your own"
    echo "                       arrangements to start the tests from the CD."
    echo "   --cddevice DEVICE   The name of the virtual machine's device for the cdrom"
    echo "                       drive. By default this is 'ide1:0'."
    echo "   --snapshot SNAPSHOT The snapshot to use to run the tests. By default this"
    echo "                       is 'winetest'. Make sure that, in this snapshot, the"
    echo "                       cdrom device is connected. If you use the --autorun"
    echo "                       option, then autorun should also be enabled."
    echo "   /path/to/vm.vmx     This is the path to the virtual machine's vmx or cfg"
    echo "                       file."
    echo "   --verbose           Print some extra informational messages."
    echo "   --help              Show this help message."
    exit 0
fi


### Check that the VM is usable
verbose "Checking the VM..."

if vm_is_busy "$opt_vm"
then
    echo "$name0:error: '$opt_vm' is already opened or running." >&2
    if [ $opt_timeout -eq 0 ]
    then
        echo "$name0:error: Aborting." >&2
        exit 1
    fi
    count=`expr $opt_timeout + 2`
    while vm_is_busy "$opt_vm"
    do
        if [ $count -eq 0 ]
        then
            echo "$name0:error: '$opt_vm' is still in use. Giving up." >&2
            exit 1
        fi
        count=`expr $count - 1`
        sleep 60
    done
fi

"$vmware/vmrun" listSnapshots "$opt_vm" | egrep "^$opt_snapshot\$" >/dev/null
if [ $? -ne 0 ]
then
    echo "$name0:error: the '$opt_snapshot' snapshot does not exist. Aborting" >&2
    exit 1
fi


### Grab winetest and prepare the ISO
verbose "Downloading winetest.exe..."

[ -n "$TMPDIR" ] || TMPDIR="/tmp"
tmpdir="$TMPDIR/$name0-$$"
if ! mkdir -p "$tmpdir/master"
then
    echo "$name0:error: unable to create the '$tmpdir/master' directory" >&2
    exit 1
fi
logfile="$tmpdir/$name0.log"

cached_wget "$base_url/winetest-$opt_version.exe" "$tmpdir/master/winetest.exe" "$opt_cache" >"$logfile" 2>&1
if [ $? -ne 0 ]
then
    echo "$name0:error: unable to download winetest.exe" >&2
    echo
    cat "$logfile"
    exit 1
fi
if [ -n "$opt_cache" ]
then
    run="$vm $opt_snapshot"
    runfile="$opt_cache/winetest-$opt_version.exe.runs"

    egrep "^Server file no newer than local file" "$logfile" >/dev/null
    if [ $? -ne 0 ]
    then
        rm -f "$runfile"
    fi

    if [ "$opt_skip_old" = "1" ] && egrep "^$run\$" "$runfile" >/dev/null 2>&1
    then
        verbose "The test has already been run in $run."
        exit 0
    fi
fi

cached_wget "$base_url/winetest-$opt_version.exe.sig" "$tmpdir/master/winetest.exe.sig" "$opt_cache" >"$logfile" 2>&1
if [ $? -ne 0 -a "$opt_check_sig" != "0" ]
then
    echo "$name0:error: unable to download winetest.exe.sig" >&2
    echo
    cat "$logfile"
    exit 1
fi


### Check the winetest.exe signature
if [ "$opt_check_sig" != "0" ]
then
    verbose "Checking the winetest.exe signature..."

    type gpg >/dev/null 2>&1
    if [ $? -eq 0 ]
    then
        gpg --verify "$tmpdir/master/winetest.exe.sig"
        rc=$?
        if [ $rc -eq 0 ]
        then
            echo "Signature checked."
        elif [ $rc -eq 1 ]
        then
            echo "$name0:error: it looks like winetest.exe has been tampered with. Aborting" >&2
            exit 1
        elif [ "$opt_check_sig" = "1" ]
        then
            echo "$name0:warning: your system does not seem to be set up to check the signature. Aborting." >&2
            exit 1
        else
            echo "$name0:warning: your system does not seem to be set up to check the signature. Continuing anyway..." >&2
        fi
    elif [ "$opt_check_sig" = "1" ]
    then
        echo "$name0:error: gpg is not installed. Aborting." >&2
        exit 1
    else
        echo "$name0:warning: unable to check the winetest.exe signature because gpg is not installed. Continuing anyway..." >&2
    fi
fi


### Create the CD image
verbose "Creating the CD image..."
if [ "$opt_autorun" = "1" ]
then
    options=""
    if [ "$opt_submit" = "0" ]
    then
        options="-o c:\\winetest.log"
    fi
    cat >"$tmpdir/master/autorun.inf" <<_EOF_
[autorun]
open=winetest.exe -q -t $opt_tag $options
_EOF_
fi

mkisofs -o "$tmpdir/winetest.iso" "$tmpdir/master" >"$logfile" 2>&1
if [ $? -ne 0 ]
then
    echo "$name0:error: unable to create the CD image" >&2
    echo
    cat "$logfile"
    exit 1
fi


### Prepare the VM

tmp_snapshot="$name0-`date +%Y%m%d`"
"$vmware/vmrun" listSnapshots "$opt_vm" | egrep "^$tmp_snapshot\$" >/dev/null
if [ $? -eq 0 ]
then
    # This is not our snapshot so don't delete it after we're done
    delete_snapshot=0
else
    "$vmware/vmrun" snapshot "$opt_vm" "$tmp_snapshot"
    if [ $? -ne 0 ]
    then
        echo "$name0:error: an error occurred while saving the VM's current state" >&2
        exit 1
    fi
    delete_snapshot=1
fi

"$vmware/vmrun" revertToSnapshot "$opt_vm" "$opt_snapshot"
if [ $? -ne 0 ]
then
    echo "$name0:error: an error occurred while switching to the '$opt_snapshot' snapshot" >&2
    exit 1
fi


### Run the test
verbose "Running the tests..."
"$vmware/vmware" -s "$opt_cddevice.fileName=$tmpdir/winetest.iso" \
                 -s "$opt_cddevice.deviceType=cdrom-image" \
                 -x -q "$opt_vm" &
count=0
while [ $opt_timeout -eq 0 -o $count -lt $opt_timeout ]
do
    sleep 60
    if vm_is_running "$opt_vm"
    then
        count=`expr $count + 1`
    else
        break
    fi
done
if [ $opt_timeout -ne 0 -a $count -gt $opt_timeout ]
then
    "$vmware/vmrun" stop "$opt_vm"
fi
if [ "$opt_skip_old" = "1" ]
then
    echo "$run" >>"$runfile"
fi


### Restore the VM and cleanup
verbose "Cleaning up..."

"$vmware/vmrun" revertToSnapshot "$opt_vm" "$tmp_snapshot"
if [ $? -ne 0 ]
then
    echo "$name0:error: an error occurred while restoring the VM's to its initial state ($tmp_snapshot)" >&2
    exit 1
fi
if [ $delete_snapshot -ne 0 ]
then
    "$vmware/vmrun" deleteSnapshot "$opt_vm" "$tmp_snapshot"
fi

rm -rf "$tmpdir"

exit 0

From paul.vriens.wine at gmail.com  Thu Nov  1 11:35:01 2007
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 01 Nov 2007 17:35:01 +0100
Subject: Make test drill, next steps, call for help with Winetest
In-Reply-To: <Pine.LNX.4.64.0711011704380.4895@amboise.dolphin>
References: <200710152215.44817.hans@it.vu.nl>	<Pine.LNX.4.64.0710271340550.24558@amboise.dolphin>
	<Pine.LNX.4.64.0711011704380.4895@amboise.dolphin>
Message-ID: <472A0035.6070606@gmail.com>

Francois Gouget wrote:
> On Sat, 27 Oct 2007, Francois Gouget wrote:
> In fact I've been able to verify that it works in real life since 
> winetest has not been updated since last monday :-(
> Compilation problems?

Yeah, I guess due to the new d3dx8 tests. Have a look at 
http://quisquiliae.physics.gla.ac.uk/crossbuild-logs/ for more details.

-- 
Cheers,

Paul.


From a_villacis at palosanto.com  Thu Nov  1 11:47:44 2007
From: a_villacis at palosanto.com (=?UTF-8?B?QWxleCBWaWxsYWPDrcKtcyBMYXNzbw==?=)
Date: Thu, 01 Nov 2007 11:47:44 -0500
Subject: Cleanup of riched20 tests - request for help on test_WM_PASTE
In-Reply-To: <4726411A.7000702@palosanto.com>
References: <4726411A.7000702@palosanto.com>
Message-ID: <472A0330.5040702@palosanto.com>

Alex Villac??s Lasso escribi?:
> I am currently trying to clean up the riched20 tests that are failing in 
> WinXP. While doing this, I have encountered the following problem: on 
> the function test_WM_PASTE() (at line 1959 of 
> dlls/riched20/tests/editor.c in current git), the test is supposed to 
> feed simulated keystrokes corresponding to Ctrl-C, Ctrl-V, and so on, 
> supposedly to test copy and paste features via the keyboard. The problem 
> is that the verification at line 1989 fails on WinXP, because the text 
> on the control has not been modified - the control seems to disregard 
> simulated WM_CHAR messages of the Ctrl-<keystroke> variety. The test at 
> line 1977 succeeds accidentally, because the sequence of Ctrl-C, Ctrl-V, 
> Ctrl-Z that is being tested is equivalent to not modifying the control 
> text at all.
>
> A more through test would be to send WM_GETTEXT messages after each step 
> to ensure that the text is actually being modified, but the bigger 
> problem is how to make the control obey the keystrokes in the first 
> place. If I place a message loop right before the DestroyWindow() call, 
> I can send keystrokes manually and they work as expected. Only simulated 
> WM_CHAR messages are being discarded.
>
> I have tried changing the SendMessage() calls into PostMessage() calls 
> (since Visual Studio's Spy++ shows that WM_CHAR messages were posted, 
> not sent), but to no avail. I have also tried placing message loops 
> between messages, with no luck. I have even tried to simulate the 
> WM_KEYDOWN and WM_KEYUP messages with parameters exactly as seen by 
> Spy++, but this does not work either. So I am asking for help. What 
> could be going wrong with this test? How can I feed the expected 
> keystrokes so that the test works as expected? Has this test ever worked 
> before? It fails in both WinXP (real machine) and inside a QEMU session 
> running Win98.
>
> (All tests on WinXP were compiled with CygWin)
>
>   
Any thoughts on this? Do I need to supply more information in order to 
diagnose the problem?

-- 
perl -e '$x=2.4;print sprintf("%.0f + %.0f = %.0f\n",$x,$x,$x+$x);'



From jacek at codeweavers.com  Thu Nov  1 12:47:36 2007
From: jacek at codeweavers.com (Jacek Caban)
Date: Thu, 01 Nov 2007 18:47:36 +0100
Subject: mshtml: Set IE version when installing wine gecko
In-Reply-To: <200710310805.03594.chris.kcat@gmail.com>
References: <200710310805.03594.chris.kcat@gmail.com>
Message-ID: <472A1138.2080904@codeweavers.com>

Hi Chris,

This patch is already committed, but, I'm afraid, it's wrong. Setting
these registries has nothing to do with installing Gecko. Setting them
in Gecko installer will only make supporting it harder. We don't want to
tell user to "run iexplore about:blank" to get an app working.

I will send a better patch that always sets them. Last time Alexandre
didn't accept such a patch, because of apps that need native IE and
install it only when this key is not found. It looks like it's time for
such change.


Thanks,
    Jacek


From jacek at codeweavers.com  Thu Nov  1 12:48:27 2007
From: jacek at codeweavers.com (Jacek Caban)
Date: Thu, 01 Nov 2007 18:48:27 +0100
Subject: iexplore proxy server
In-Reply-To: <415745.13381.qm@web26011.mail.ukl.yahoo.com>
References: <415745.13381.qm@web26011.mail.ukl.yahoo.com>
Message-ID: <472A116B.80506@codeweavers.com>

Luke Bratch wrote:
> Hello
>
> Is there supposed to be a way to set a HTTP (or
> otherwise) proxy server in Wine's iexplore at the
> moment?
>
> I can't find any such documentation, but searching
> around has found a lot of people suggesting that
> setting these keys will help:
>
> [Software\\Microsoft\\Windows\\CurrentVersion\\Internet
> Settings]
> "ProxyEnable"=dword:00000001 
> "ProxyServer"="proxyserver:8080"
>
> Setting those didn't make any difference in iexplore,
> but the attached patch which edits a file that the
> Gecko installer creates, makes HTTP proxy support work
> perfectly.
>
> Is this the correct/only way to do this?
>
>   

There are two ways. First is to set these Gecko settings at runtime,
depending on IE settings. The right way would be to use wininet to
handle http/https/ftp connections. It's something we have to do sooner
or later and, while fixing other bugs, we are slowly getting to that
state. This is one of many problems that will be solved by it.

Jacek


From chris.kcat at gmail.com  Thu Nov  1 13:20:55 2007
From: chris.kcat at gmail.com (Chris Robinson)
Date: Thu, 1 Nov 2007 11:20:55 -0700
Subject: mshtml: Set IE version when installing wine gecko
In-Reply-To: <472A1138.2080904@codeweavers.com>
References: <200710310805.03594.chris.kcat@gmail.com>
	<472A1138.2080904@codeweavers.com>
Message-ID: <200711011120.55847.chris.kcat@gmail.com>

On Thursday 01 November 2007 10:47:36 am Jacek Caban wrote:
> Hi Chris,
>
> This patch is already committed, but, I'm afraid, it's wrong. Setting
> these registries has nothing to do with installing Gecko. Setting them
> in Gecko installer will only make supporting it harder. We don't want to
> tell user to "run iexplore about:blank" to get an app working.

Actually, Alexendre agreed to the patch *because* it sets the version when 
Gecko is installed. This allows people to still install native IE if they 
wish, and allows apps that need native IE to be able to have it, by 
installing IE before Gecko. Alexendre wasn't willing to have the version 
always set because some apps may need native IE, and because some people may 
want native IE.

However, setting the version when installing Gecko allows apps that need to 
detect IE by its version, to be able to do so.


From jacek at codeweavers.com  Thu Nov  1 14:40:25 2007
From: jacek at codeweavers.com (Jacek Caban)
Date: Thu, 01 Nov 2007 20:40:25 +0100
Subject: mshtml: Set IE version when installing wine gecko
In-Reply-To: <200711011120.55847.chris.kcat@gmail.com>
References: <200710310805.03594.chris.kcat@gmail.com>	<472A1138.2080904@codeweavers.com>
	<200711011120.55847.chris.kcat@gmail.com>
Message-ID: <472A2BA9.5080209@codeweavers.com>

Chris Robinson wrote:
> Actually, Alexendre agreed to the patch *because* it sets the version when 
> Gecko is installed. This allows people to still install native IE if they 
> wish, and allows apps that need native IE to be able to have it, by 
> installing IE before Gecko. Alexendre wasn't willing to have the version 
> always set because some apps may need native IE, and because some people may 
> want native IE.
>
> However, setting the version when installing Gecko allows apps that need to 
> detect IE by its version, to be able to do so.
>   

But currently, if you use the new installing way (from hard drive),
Gecko installs during wineprefixcreate if user has it set up correctly.
It means that some users will have always set IE version, others won't.
It's definitely not what we want. We may consider reverting installing
Gecko from DllRegisterServer to make it at least the same for all.

The real solution is to always set IE version. To do it we have to fix
apps that block it. The problem, apart from that I didn't have time to
make bug hunting on them yet, is that we don't really have a list of
such apps. Quicken is the main example, but who knows what are the
others? It would be great if we had it somewhere in bugzilla or wiki.

Jacek


From jacek at codeweavers.com  Thu Nov  1 14:43:24 2007
From: jacek at codeweavers.com (Jacek Caban)
Date: Thu, 01 Nov 2007 20:43:24 +0100
Subject: Wine Gecko packaging
In-Reply-To: <472997BA.3040806@electrozaur.com>
References: <471FCD6C.2020605@codeweavers.com>	<011801c819e4$12210190$6700fea9@DMITRY>
	<4728D580.3080609@codeweavers.com>
	<472997BA.3040806@electrozaur.com>
Message-ID: <472A2C5C.1060407@codeweavers.com>

Boaz Harrosh wrote:
> Do you have a magic param to download the latest one available?
> something like: winegecko.php?v=latest
>   

No, we don't have, but it sounds like a good idea. It's easy to add.

Jacek


From chris.kcat at gmail.com  Thu Nov  1 14:55:37 2007
From: chris.kcat at gmail.com (Chris Robinson)
Date: Thu, 1 Nov 2007 12:55:37 -0700
Subject: mshtml: Set IE version when installing wine gecko
In-Reply-To: <472A2BA9.5080209@codeweavers.com>
References: <200710310805.03594.chris.kcat@gmail.com>
	<200711011120.55847.chris.kcat@gmail.com>
	<472A2BA9.5080209@codeweavers.com>
Message-ID: <200711011255.37905.chris.kcat@gmail.com>

On Thursday 01 November 2007 12:40:25 pm Jacek Caban wrote:
> The real solution is to always set IE version. To do it we have to fix
> apps that block it. The problem, apart from that I didn't have time to
> make bug hunting on them yet, is that we don't really have a list of
> such apps. Quicken is the main example, but who knows what are the
> others? It would be great if we had it somewhere in bugzilla or wiki.

Even if you fix all the apps that have a problem with Gecko, native IE still 
has rendering differences. And short of reimplementing it ourselves, some 
people will have a need for native IE (eg. web developers wanting to see what 
their site looks like in IE). There may even be some other behavioral 
differences that the majority of people won't care about or even not prefer, 
while others do.


From julliard at winehq.org  Thu Nov  1 14:57:03 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 01 Nov 2007 20:57:03 +0100
Subject: mshtml: Set IE version when installing wine gecko
In-Reply-To: <472A2BA9.5080209@codeweavers.com> (Jacek Caban's message of
	"Thu, 01 Nov 2007 20:40:25 +0100")
References: <200710310805.03594.chris.kcat@gmail.com>
	<472A1138.2080904@codeweavers.com>
	<200711011120.55847.chris.kcat@gmail.com>
	<472A2BA9.5080209@codeweavers.com>
Message-ID: <87odedloxc.fsf@wine.dyndns.org>

Jacek Caban <jacek at codeweavers.com> writes:

> But currently, if you use the new installing way (from hard drive),
> Gecko installs during wineprefixcreate if user has it set up correctly.
> It means that some users will have always set IE version, others won't.
> It's definitely not what we want. We may consider reverting installing
> Gecko from DllRegisterServer to make it at least the same for all.

The idea would be that there should be an easy way to uninstall it, so
if Gecko is installed the app will try to use that, and if it doesn't
work we can tell users to uninstall Gecko and let the app install IE
instead.  Ultimately of course the goal is that they never need to do
that.

-- 
Alexandre Julliard
julliard at winehq.org


From gerald at pfeifer.com  Thu Nov  1 15:22:14 2007
From: gerald at pfeifer.com (Gerald Pfeifer)
Date: Thu, 1 Nov 2007 21:22:14 +0100 (CET)
Subject: Dead code in dlls/ntdll/tape.c
Message-ID: <Pine.LNX.4.64.0711011720570.26054@acrux.dbai.tuwien.ac.at>

We currently have the following code in tape.c:

        if (data->Offset.u.LowPart >= 0) {
            cmd.mt_op = MTFSF;
            cmd.mt_count = data->Offset.u.LowPart;
        }
        else {
            cmd.mt_op = MTBSF;
            cmd.mt_count = -data->Offset.u.LowPart;
        }

data is of type TAPE_SET_POSITION*, which in turn is defined as

  typedef struct _TAPE_SET_POSITION {
    ULONG Method;
    ULONG Partition;
    LARGE_INTEGER Offset;
    BOOLEAN Immediate;
  } TAPE_SET_POSITION, *PTAPE_SET_POSITION;

Offset is of type LARGE_INTEGER which is defined as

    struct {
        DWORD    LowPart;
        LONG     HighPart;
    } u;

Note how LowPart is unsigned (DWORD) here, so indeed the comparisons
for >= 0 is always going to evaluate to true.

Hans, I believe you originally wrote that code.  Do you remember what
you where trying to do here?

The patch below removes this dead code and is equivalent to what we
currently have.  I am not sure it is the desired way to fix what I
describe above, though.

Gerald

Index: dlls/ntdll/tape.c
===================================================================
RCS file: /home/wine/wine/dlls/ntdll/tape.c,v
retrieving revision 1.16
diff -u -3 -p -r1.16 tape.c
--- dlls/ntdll/tape.c	26 Jun 2007 12:14:34 -0000	1.16
+++ dlls/ntdll/tape.c	1 Nov 2007 16:32:29 -0000
@@ -427,25 +427,13 @@ static NTSTATUS TAPE_SetPosition( int fd
         break;
 #endif
     case TAPE_SPACE_FILEMARKS:
-        if (data->Offset.u.LowPart >= 0) {
-            cmd.mt_op = MTFSF;
-            cmd.mt_count = data->Offset.u.LowPart;
-        }
-        else {
-            cmd.mt_op = MTBSF;
-            cmd.mt_count = -data->Offset.u.LowPart;
-        }
+        cmd.mt_op = MTFSF;
+        cmd.mt_count = data->Offset.u.LowPart;
         break;
 #if defined(MTFSS) && defined(MTBSS)
     case TAPE_SPACE_SETMARKS:
-        if (data->Offset.u.LowPart >= 0) {
-            cmd.mt_op = MTFSS;
-            cmd.mt_count = data->Offset.u.LowPart;
-        }
-        else {
-            cmd.mt_op = MTBSS;
-            cmd.mt_count = -data->Offset.u.LowPart;
-        }
+        cmd.mt_op = MTFSS;
+        cmd.mt_count = data->Offset.u.LowPart;
         break;
 #endif
     case TAPE_LOGICAL_BLOCK:


From hans at it.vu.nl  Thu Nov  1 16:07:16 2007
From: hans at it.vu.nl (Hans Leidekker)
Date: Thu, 1 Nov 2007 22:07:16 +0100
Subject: Dead code in dlls/ntdll/tape.c
In-Reply-To: <Pine.LNX.4.64.0711011720570.26054@acrux.dbai.tuwien.ac.at>
References: <Pine.LNX.4.64.0711011720570.26054@acrux.dbai.tuwien.ac.at>
Message-ID: <200711012207.16507.hans@it.vu.nl>

On Thursday 01 November 2007 21:22:14 Gerald Pfeifer wrote:

> We currently have the following code in tape.c:
> 
>         if (data->Offset.u.LowPart >= 0) {
>             cmd.mt_op = MTFSF;
>             cmd.mt_count = data->Offset.u.LowPart;
>         }
>         else {
>             cmd.mt_op = MTBSF;
>             cmd.mt_count = -data->Offset.u.LowPart;
>         }

> Offset is of type LARGE_INTEGER which is defined as
> 
>     struct {
>         DWORD    LowPart;
>         LONG     HighPart;
>     } u;
> 
> Note how LowPart is unsigned (DWORD) here, so indeed the comparisons
> for >= 0 is always going to evaluate to true.

Yes, the comparison should be against data->Offset.QuadPart (which you
left out of the definition of LARGE_INTEGER).

I'll work on a fix.

 -Hans


From rob at codeweavers.com  Thu Nov  1 16:16:07 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Thu, 01 Nov 2007 21:16:07 +0000
Subject: Dead code in dlls/ntdll/tape.c
In-Reply-To: <Pine.LNX.4.64.0711011720570.26054@acrux.dbai.tuwien.ac.at>
References: <Pine.LNX.4.64.0711011720570.26054@acrux.dbai.tuwien.ac.at>
Message-ID: <472A4217.3030103@codeweavers.com>

Gerald Pfeifer wrote:
> We currently have the following code in tape.c:
>
>         if (data->Offset.u.LowPart >= 0) {
>             cmd.mt_op = MTFSF;
>             cmd.mt_count = data->Offset.u.LowPart;
>         }
>         else {
>             cmd.mt_op = MTBSF;
>             cmd.mt_count = -data->Offset.u.LowPart;
>         }
>
> data is of type TAPE_SET_POSITION*, which in turn is defined as
>
>   typedef struct _TAPE_SET_POSITION {
>     ULONG Method;
>     ULONG Partition;
>     LARGE_INTEGER Offset;
>     BOOLEAN Immediate;
>   } TAPE_SET_POSITION, *PTAPE_SET_POSITION;
>
> Offset is of type LARGE_INTEGER which is defined as
>
>     struct {
>         DWORD    LowPart;
>         LONG     HighPart;
>     } u;
>
> Note how LowPart is unsigned (DWORD) here, so indeed the comparisons
> for >= 0 is always going to evaluate to true.
>
> Hans, I believe you originally wrote that code.  Do you remember what
> you where trying to do here?
>
> The patch below removes this dead code and is equivalent to what we
> currently have.  I am not sure it is the desired way to fix what I
> describe above, though.
>   

The LARGE_INTEGER type without #ifdefs for clarity:
typedef union _LARGE_INTEGER {
    struct {
        DWORD    LowPart;
        LONG     HighPart;
    } u;
    LONGLONG QuadPart;
} LARGE_INTEGER, *PLARGE_INTEGER;

The type is meant to be wrap a signed integer, but the compiler 
legitimately flagged that it isn't in the way that it is being accessed 
currently. Therefore, I believe the code should be changed to this:
>         if (data->Offset.QuadPart >= 0) {
>             cmd.mt_op = MTFSF;
>             cmd.mt_count = (int)data->Offset.QuadPart;
>         }
>         else {
>             cmd.mt_op = MTBSF;
>             cmd.mt_count = -(int)data->Offset.QuadPart;
>         }

-- 
Rob Shearman



From dank at kegel.com  Thu Nov  1 19:27:09 2007
From: dank at kegel.com (Dan Kegel)
Date: Thu, 1 Nov 2007 17:27:09 -0700
Subject: valgrind results online
Message-ID: <a71bd89a0711011727l12f2ff7eq5ac139cd8ce8321c@mail.gmail.com>

I've posted results from running the entire conformance test suit
under Valgrind at
   http://kegel.com/wine/valgrind/20071001/
There are 100 files there; one for each test that had warnings.
(And one more file with everything concatenated together,
  http://kegel.com/wine/valgrind/20071001/vg-all.txt)

A lot of the warnings are probably just problems in our
conformance tests, not in Wine, and several of the warnings
might be problems in Valgrind.  But I wouldn't be surprised
if there were several dozen real problems in Wine,
so please take a look.
(Juan has already submitted a bunch of cleanups for
crypt32.  I'll probably run these tests daily for a while
and upload the results to a new directory for each day.)

I've also updated the instructions on how to run tests under Valgrind,
  http://wiki.winehq.org/Wine_and_Valgrind
and updated the Wine patch there to include a
bunch more suppressions.
- Dan

-- 
Wine for Windows ISVs: http://kegel.com/wine/isv


From tobert at gmail.com  Fri Nov  2 02:20:15 2007
From: tobert at gmail.com (Al Tobey)
Date: Fri, 2 Nov 2007 00:20:15 -0700
Subject: alsa->pulseaudio->alsa directsound hang
In-Reply-To: <47287DB7.3080104@gmail.com>
References: <5ac7acb10710300124u461f15c4pddd3f6a8807ffad6@mail.gmail.com>
	<47287DB7.3080104@gmail.com>
Message-ID: <5ac7acb10711020020n356a0b10j3b85f83dcbc29771@mail.gmail.com>

On 10/31/07, Maarten Lankhorst <m.b.lankhorst at gmail.com> wrote:
> Hi Al,
>
> Al Tobey schreef:
> > I spent some time this evening playing around with trying to get wine
> > sound output to go through pulseaudio on my fc8/rawhide (x86_64) box.
> >   I tried wine 0.9.43 (built), 0.9.47 (fc8 rpm), and Crossover 6.2.0.
> >   I was testing with Steam/TF2, but found that the same issue comes up
> > with a install of Winamp Lite using its default DirectSound output
> > plugin.    If I configure nothing and let wine grab the soundcard (I
> > have an Audigy, so it allows multiple streams), it works fine.    If I
> > configure it to use pulseaudio through the alsa plugin, it hangs.
> >
> Why would you do 'alsa -> pulseaudio -> alsa'? I'm not surprised it
> wouldn't work. It is more likely a problem with the audio system then
> with wine, however if you do WINEDEBUG=+wave,+tid,+dsalsa you have a
> chance of tracking it down yourself.

I'm just trying it out as it seems to be the recommended way of mixing
native alsa apps through pulseaudio.   It works fine for all the other
alsa apps I tried.

I'll try the debug stuff out this weekend and see if I can track
anything down.   Thanks for providing the right flags to start with.
It would be really neat to have all my audio piped through one mixer
with all of PA's features.

-Al


From paul.vriens.wine at gmail.com  Fri Nov  2 02:53:21 2007
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Fri, 02 Nov 2007 08:53:21 +0100
Subject: Exception but not when running with +relay
Message-ID: <472AD771.6060608@gmail.com>

Hi,

I just tried the latest PE Explorer 
(http://www.heaventools.com/download-pe-explorer.htm). When I stopped the 
application I ran into an exception within NtSetInformationThread.

If I however do a +relay I don't get into this exception.

What does such a difference point to?

-- 
Cheers,

Paul.


From astrand at cendio.se  Fri Nov  2 04:02:30 2007
From: astrand at cendio.se (=?UTF-8?Q?Peter_=C3=85strand?=)
Date: Fri, 2 Nov 2007 10:02:30 +0100 (CET)
Subject: [Bug 10266] Numpad keyboard handling is strange, Del keyproduces
	two events
In-Reply-To: <020501c81c9a$29948640$6700fea9@DMITRY>
References: <E1InaAA-00083p-LB@wine.codeweavers.com>
	<Pine.LNX.4.64.0711011537590.11719@maggie.lkpg.cendio.se>
	<020501c81c9a$29948640$6700fea9@DMITRY>
Message-ID: <Pine.LNX.4.64.0711020957360.30167@maggie.lkpg.cendio.se>

On Thu, 1 Nov 2007, Dmitry Timoshkov wrote:

> > > Besides, I just tested with Wine's notepad and don't see the problem you
> > > are reporting.
> >
> > Which keyboard layout are you using? On my system, Wine selects the
> > Swedish keyboard layout.
> 
> I'm using us keyboard layout.

That explains it. I can confirm that this problem does not occur with the 
us layout, but with the sv layout. 

Regards, 
---
Peter ?strand		ThinLinc Chief Developer
Cendio AB		http://www.cendio.se
Wallenbergs gata 4
583 30 Link?ping	Phone: +46-13-21 46 00

ThinLinc User Group 2007 H?stkonferens --- 15-16 november, Link?ping.
Program och anm?lan: http://www.thinlincusergroup.se/aktiviteter

From julliard at winehq.org  Fri Nov  2 04:18:01 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 02 Nov 2007 10:18:01 +0100
Subject: Valgrind and structs with holes
In-Reply-To: <a71bd89a0710311559g4d5b4fecl3b720472bd4c1795@mail.gmail.com>
	(Dan Kegel's message of "Wed, 31 Oct 2007 15:59:48 -0700")
References: <a71bd89a0710311559g4d5b4fecl3b720472bd4c1795@mail.gmail.com>
Message-ID: <87ejf9knue.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> For instance, the warning
> ==3415== Syscall param writev(vector[1]) points to uninitialised byte(s)
> ==3415==    at 0x40007F2: (within /lib/ld-2.6.1.so)
> ==3415==    by 0x4412E24: wine_server_call (server.c:244)
> ==3415==    by 0x43EBA73: server_ioctl_file (file.c:1010)
> ==3415==    by 0x43EC570: NtFsControlFile (file.c:1223)
> ==3415==    by 0x45394C1: WaitNamedPipeW (sync.c:1298)
> ==3415==    by 0x453963B: WaitNamedPipeA (sync.c:1225)
> ==3415==    by 0x46490B5: test_CreateNamedPipe (pipe.c:97)
> in kernel32/tests/sync.c can be silenced either by appeasing Valgrind
> with a patch like
>
> --- a/dlls/kernel32/sync.c
> +++ b/dlls/kernel32/sync.c
> @@ -1285,6 +1285,12 @@ BOOL WINAPI WaitNamedPipeW (LPCWSTR name, DWORD nTimeOut)
>          return FALSE;
>      }
>
> +    /* FILE_PIPE_WAIT_FOR_BUFFER has a hole after boolean TimeoutSpecified.
> +     * Clear the hole so valgrind doesn't get upset about uninitialized bytes.
> +     * No need to zero Name[1...], which is initialized ok later.
> +     */
> +    memset(pipe_wait, 0, sizeof(FILE_PIPE_WAIT_FOR_BUFFER));
>
> or by using a suppression like
> {
>    wine_struct_hole_FILE_PIPE_WAIT_FOR_BUFFER
>    Memcheck:Param
>    writev(vector[1])
>    obj:*
>    fun:wine_server_call
>    fun:server_ioctl_file
>    fun:NtFsControlFile
>    fun:WaitNamedPipeW
> }
>
> Alexandre, which approach would you prefer?  If you say #1, I'll eat my hat.

The same structure can be passed directly from the application, where
you couldn't add a memset anyway, so yes suppressing the warning seems
like the way to go.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Nov  2 04:19:02 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 02 Nov 2007 10:19:02 +0100
Subject: setupapi: Add stub for SetupInstallServicesFromInfSectionW
In-Reply-To: <4729E392.8000307@gmail.com> (Frank Richter's message of "Thu, 01
	Nov 2007 15:32:50 +0100")
References: <200711010411.16584.chris.kcat@gmail.com>
	<4729D400.9090000@codeweavers.com> <4729E392.8000307@gmail.com>
Message-ID: <87abpxknsp.fsf@wine.dyndns.org>

Frank Richter <frank.richter at gmail.com> writes:

> Unless you ignore the A/W suffix. One could argue that this is more
> intuitive as you could locate an entry in the list by searching for the
> undecorated name and then look for the one with the appropriate suffix,
> which is at most one line away. If you sort strictly alphabetically, A/W
> variants may be a couple of lines away (e.g. FooA/FooExA/FooExW/FooW)
> which could make finding the right variant slightly counterintuitive.

It may be counterintuitive, but it is sorted alphabetically on Windows
so we want to do it the same way.

-- 
Alexandre Julliard
julliard at winehq.org


From astrand at cendio.se  Fri Nov  2 05:10:30 2007
From: astrand at cendio.se (=?UTF-8?Q?Peter_=C3=85strand?=)
Date: Fri, 2 Nov 2007 11:10:30 +0100 (CET)
Subject: [Bug 10266] Numpad keyboard handling is strange, Del keyproduces
	two events
In-Reply-To: <020501c81c9a$29948640$6700fea9@DMITRY>
References: <E1InaAA-00083p-LB@wine.codeweavers.com>
	<Pine.LNX.4.64.0711011537590.11719@maggie.lkpg.cendio.se>
	<020501c81c9a$29948640$6700fea9@DMITRY>
Message-ID: <Pine.LNX.4.64.0711021002420.30167@maggie.lkpg.cendio.se>

On Thu, 1 Nov 2007, Dmitry Timoshkov wrote:

> > 1) "Not consistent"
> >
> > It might be interesting to compare with CapsLock. Shift can cancel
> > CapsLock, but also substitute it. This is true on both Windows and Linux.
> > Additionally, on Linux, NumLock works the same, ie Shift works in both
> > directions. On Windows, however, Shift can only cancel NumLock, not
> > substitute it. Regardless of whether users actually finds this useful or
> > not, I think it's hard to argue for that this is "logical" or
> > "consistent".
> 
> Current behaviour emulates what ToUnicodeEx does under Windows. And some
> apps depend on it.

We shouldn't forget that the Wine keyboard implementation is a total mess. 
The code is full of special cases, makes wrong assumptions about the 
platform (such as relying on X11 keycodes, bug 1181), contains race 
conditions (bug 4923) and is, in general, very ugly. There are a lot of 
special cases. Some looks at the virtual key, others are a keysym, others 
at keycodes etc etc. The code is a mess. It's a good idea to try to have 
ToUnicodeEx work mainly as it does on Windows, but we are miles away from 
reaching this goal. At this point, just "make the stuff work as we want it 
with most applications" is a more realistic goal. 

When it comes to my actual patch, I'm not sure it actually changes the 
ToUnicodeEx behaviour. As far as I know, ToUnicodeEx returns zero 
characters for VK_LEFT etc, regardless of the shift state. 

What my patch is mainly change which vkey is generated, which should be 
safe. 


> > Can it be that you have a Windows background and are therefore used to the
> > Windows behaviour?
> 
> When NumLock is off arrow kys on numpad should behave like normal arrow 
> keys IMO. Perhaps you have an idea how to use keypad with NumLock turned 
> off to move cursor, and to select text when needed with Shift just like 
> arrow keys do?

With the X11/QT model, this is not possible. You need to turn NumLock on 
to select text. 


This problem isn't just about "taste", it's a real compatibility problem. 
A typical way of generating a numpad dot in X11 is to press 
Shift+NumpadDel. This will typically generate the keysym XK_KP_Decimal. 
Or, in other layouts (such as Swedish), you will get XK_KP_Separator. In 
other words, the KeyPress event from the X server contains semantic 
information: "The user wants a keypad separator symbol". Translating this 
to "Mark the character to the left" is just plain wrong! 

One actual case when this is a problem is with VNC. When the VNC servers 
recieves a XK_KP_Separator keyboard event, it typically generates an event 
which contains the same XK_KP_Separator keysym. With most layouts, this 
means using Shift, since typical xmodmaps looks like:

keycode  XYZ = KP_Delete KP_Separator

Again, it's vital that Wine translates this into a separator symbol, or 
there will be no way of generating such a symbol via VNC. 


Btw, I've asked a dozen of people what they think. Most are advanced 
users, using different kinds of platforms. The result is pretty 
interesting. None knew the effect of Shift+Numlock, and only 25% were 
finding the behaviour of Shift (without NumLock) logic. Even more 
interesting is that 5 users actually preferred a model which doesn't exist 
on neither Linux nor Windows: The case where NumLock+shift is the same as 
just NumLock. Most users said that they were never using Shift with numpad 
keys at all. 

Another interesting fact is that none expected or preferred the current 
Wine behaviour. 


I've updated my HOWTO with some new information, still available as 
http://www.cendio.com/~astrand/keyboards/numpad.txt. 


Regards, 
---
Peter ?strand		ThinLinc Chief Developer
Cendio AB		http://www.cendio.se
Wallenbergs gata 4
583 30 Link?ping	Phone: +46-13-21 46 00

ThinLinc User Group 2007 H?stkonferens --- 15-16 november, Link?ping.
Program och anm?lan: http://www.thinlincusergroup.se/aktiviteter

From jan.wine at zerebecki.de  Fri Nov  2 06:26:33 2007
From: jan.wine at zerebecki.de (Jan Zerebecki)
Date: Fri, 2 Nov 2007 12:26:33 +0100
Subject: alsa->pulseaudio->alsa directsound hang
In-Reply-To: <5ac7acb10711020020n356a0b10j3b85f83dcbc29771@mail.gmail.com>
References: <5ac7acb10710300124u461f15c4pddd3f6a8807ffad6@mail.gmail.com>
	<47287DB7.3080104@gmail.com>
	<5ac7acb10711020020n356a0b10j3b85f83dcbc29771@mail.gmail.com>
Message-ID: <20071102112633.GD5380@crissy.swd.zerebecki.de>

I didn't test pulseaudio nor looked at your .asoundrc , but there
are some non-obvious pitfalls when configuring such stuff in
.asoundrc . But the fault may also be that the pulseaudio alsa
plugin doesn't fully behave like normal alsa does. Wine is pretty
sensitive to such things (even to e.g. non-default dmix
settings), but most other alsa applications are not.

I made tests with the alsa plugin from jack and wine and mplayer
also had problems with that.

And, yes, their alsa plugin should be the recommended way to use
wine (and other applications) with pulseaudio or jack. I imagine
it would be good for those projects to have their alsa plugin
working properly.

On Fri, Nov 02, 2007 at 12:20:15AM -0700, Al Tobey wrote:
> I'm just trying it out as it seems to be the recommended way of mixing
> native alsa apps through pulseaudio.   It works fine for all the other
> alsa apps I tried.

Does mplayer work that way without problems? It's the only other
application I know of where I experienced similar problems.


Jan



From wine.dev at web.de  Fri Nov  2 07:09:50 2007
From: wine.dev at web.de (Detlef Riekenberg)
Date: Fri, 02 Nov 2007 13:09:50 +0100
Subject: [PATCH 1/7] advapi32: Implement CredWriteW.
In-Reply-To: <4727256B.5060806@codeweavers.com>
References: <4727256B.5060806@codeweavers.com>
Message-ID: <1194005391.1374.12.camel@p4>

On Di, 2007-10-30 at 12:36 +0000, Robert Shearman wrote:
> +static DWORD open_cred_mgr_key(HKEY *hkey, BOOL open_for_write)
> +{
> +    return RegCreateKeyExW(HKEY_CURRENT_USER,
> wszCredentialManagerKey, 0,
> +                           NULL, REG_OPTION_NON_VOLATILE,
> +                           KEY_READ | KEY_WRITE, NULL, hkey, NULL);
> +}
> + 

What's the reason of the Parameter "BOOL open_for_write" ?

open_cred_mgr_key is called with (..., TRUE) and (..., FALSE), but
you always use "KEY_READ | KEY_WRITE".

On the other hand, gcc does not warn about that unused Parameter.
My first Idea was the optimizer in gcc, but removing "-O2" does not give
us a warning.

With "-pedantic", we lost (but still no warning for "open_for_write").


-- 
 
By by ... Detlef




From dmitry at codeweavers.com  Fri Nov  2 07:22:38 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Fri, 2 Nov 2007 20:22:38 +0800
Subject: [Bug 10266] Numpad keyboard handling is strange,
	Del keyproducestwo events
References: <E1InaAA-00083p-LB@wine.codeweavers.com><Pine.LNX.4.64.0711011537590.11719@maggie.lkpg.cendio.se><020501c81c9a$29948640$6700fea9@DMITRY>
	<Pine.LNX.4.64.0711021002420.30167@maggie.lkpg.cendio.se>
Message-ID: <003501c81d4b$1102fba0$6700fea9@DMITRY>

"Peter ?strand" <astrand at cendio.se> wrote:

> > Current behaviour emulates what ToUnicodeEx does under Windows. And some
> > apps depend on it.
>
> We shouldn't forget that the Wine keyboard implementation is a total mess.
> The code is full of special cases, makes wrong assumptions about the
> platform (such as relying on X11 keycodes, bug 1181), contains race
> conditions (bug 4923) and is, in general, very ugly. There are a lot of
> special cases. Some looks at the virtual key, others are a keysym, others
> at keycodes etc etc. The code is a mess.

The patches are always welcome, especially if they add a test case for each
fix.

> It's a good idea to try to have
> ToUnicodeEx work mainly as it does on Windows, but we are miles away from
> reaching this goal.

What goal are you talking about? Since I'm very closely track all locale and
keyboard input related problems current code works very well, including
international keyboard input. The only feature that is missing is support
for loadable keyboard layouts.

> At this point, just "make the stuff work as we want it
> with most applications" is a more realistic goal.

And the stuff really works.

> When it comes to my actual patch, I'm not sure it actually changes the
> ToUnicodeEx behaviour. As far as I know, ToUnicodeEx returns zero
> characters for VK_LEFT etc, regardless of the shift state.
>
> What my patch is mainly change which vkey is generated, which should be
> safe.

If you have a test case that doesn't pass without your patch and passes
with then your patch is acceptable, otherwise it's not.

> Btw, I've asked a dozen of people what they think. Most are advanced
> users, using different kinds of platforms. The result is pretty
> interesting. None knew the effect of Shift+Numlock, and only 25% were
> finding the behaviour of Shift (without NumLock) logic. Even more
> interesting is that 5 users actually preferred a model which doesn't exist
> on neither Linux nor Windows: The case where NumLock+shift is the same as
> just NumLock. Most users said that they were never using Shift with numpad
> keys at all.
>
> Another interesting fact is that none expected or preferred the current
> Wine behaviour.

It this case it doesn't really matter what users expect or prefer, behaviour
of ToUnicodeEx is predefined by what Windows does.

-- 
Dmitry. 



From paul.vriens.wine at gmail.com  Fri Nov  2 07:40:29 2007
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Fri, 02 Nov 2007 13:40:29 +0100
Subject: [PATCH 04/18] inetcomm: Add self-registration code.
In-Reply-To: <472b19ac.0788240a.4166.ffffbc0bSMTPIN_ADDED@mx.google.com>
References: <472b19ac.0788240a.4166.ffffbc0bSMTPIN_ADDED@mx.google.com>
Message-ID: <472B1ABD.1030203@gmail.com>

Robert Shearman wrote:
> ---

+static LONG recursive_delete_key(HKEY key);
+static LONG recursive_delete_keyA(HKEY base, char const *name);
+static LONG recursive_delete_keyW(HKEY base, WCHAR const *name);

We just got rid of all the self build recursive delete ones. Can you use 
RegDeleteTree[AW] (or is there a specific reason not to)?

-- 
Cheers,

Paul.


From wine-devel at kievinfo.com  Fri Nov  2 07:56:47 2007
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Fri, 02 Nov 2007 06:56:47 -0600
Subject: Fix type of loop variable in alloc_device().
In-Reply-To: <Pine.LNX.4.64.0711011804280.26054@acrux.dbai.tuwien.ac.at>
References: <Pine.LNX.4.64.0711011804280.26054@acrux.dbai.tuwien.ac.at>
Message-ID: <472B1E8F.70309@kievinfo.com>

Gerald Pfeifer wrote:
> We iterate between 0 and and the value of an usigned variable, so we
> should adjust the loop variable accordingly (not the list to silence
> GCC).

> -    int i;
> +    unsigned i;

If there is nothing wrong about it, then why do you change it? If even gcc 
does not complain about it.

Vitaliy.


From julliard at winehq.org  Fri Nov  2 08:02:48 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 02 Nov 2007 14:02:48 +0100
Subject: [PATCH 02/18] inetcomm: Add a framework for connecting to a
	server and sending/receiving data asynchronously with callbacks
	being called in the context of the original thread,
	using window messages.
In-Reply-To: <87pryskeqk.fsf@totally-fudged-out-message-id> (Robert Shearman's
	message of "Fri, 2 Nov 2007 11:39:03 +0000")
References: <87pryskeqk.fsf@totally-fudged-out-message-id>
Message-ID: <87fxzokdfr.fsf@wine.dyndns.org>

Robert Shearman <rob at codeweavers.com> writes:

> +#include "winsock2.h"
> +#include "winuser.h"
> +
> +#undef GetProp
> +#undef SendMessage
> +#undef SetProp
> +
> +#include "objbase.h"
> +#include "imnxport.h"

You forgot to submit the new imnxport.idl.

-- 
Alexandre Julliard
julliard at winehq.org


From wine-devel at kievinfo.com  Fri Nov  2 08:05:36 2007
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Fri, 02 Nov 2007 07:05:36 -0600
Subject: shell32: Use SHStrDupW in IShellFolder2::GetDetailsOf to allocate
	returned string
In-Reply-To: <472A4D11.9030206@reactsoft.com>
References: <472A4D11.9030206@reactsoft.com>
Message-ID: <472B20A0.7040905@kievinfo.com>

Thomas Weidenmueller wrote:
> Use SHStrDupW in IShellFolder2::GetDetailsOf to allocate the returned
> string. pOleStr in the STRRET structure has to be allocated using
> CoTaskMemAlloc(). SHStrDupW uses CoTaskMemAlloc() whereas StrDupW uses
> LocalAlloc().
> 
> - Thomas
> ------------------------------------------------------------------------
> 
> Index: recyclebin.c
> ===================================================================
> RCS file: /home/wine/wine/dlls/shell32/recyclebin.c,v
> retrieving revision 1.5
> diff -u -r1.5 recyclebin.c
> --- recyclebin.c	11 Jun 2007 13:47:57 -0000	1.5
> +++ recyclebin.c	1 Nov 2007 21:58:30 -0000

Please diff it from the top of the source tree. The above should say 
dlls/shell32/recyclebin.c

Vitaliy.


From wine-devel at kievinfo.com  Fri Nov  2 08:10:56 2007
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Fri, 02 Nov 2007 07:10:56 -0600
Subject: msxml - Fix Memory Leak
In-Reply-To: <fgdskv$ejk$1@ger.gmane.org>
References: <fgdskv$ejk$1@ger.gmane.org>
Message-ID: <472B21E0.8040208@kievinfo.com>

Alistair Leslie-Hughes wrote:
> Hi,
> 
> Changelog:
>     Fixed memory leak
> 
> 
> Regards
>  Alistair Leslie-Hughes 
> 
> 
> begin 666 xmlelem.diff

Please attach patches as a plain text. This patch is not an attachment and 
is unreadable.

Vitaliy.


From rob at codeweavers.com  Fri Nov  2 08:44:21 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Fri, 02 Nov 2007 13:44:21 +0000
Subject: [PATCH 1/7] advapi32: Implement CredWriteW.
In-Reply-To: <1194005391.1374.12.camel@p4>
References: <4727256B.5060806@codeweavers.com> <1194005391.1374.12.camel@p4>
Message-ID: <472B29B5.4020607@codeweavers.com>

Detlef Riekenberg wrote:
> On Di, 2007-10-30 at 12:36 +0000, Robert Shearman wrote:
>   
>> +static DWORD open_cred_mgr_key(HKEY *hkey, BOOL open_for_write)
>> +{
>> +    return RegCreateKeyExW(HKEY_CURRENT_USER,
>> wszCredentialManagerKey, 0,
>> +                           NULL, REG_OPTION_NON_VOLATILE,
>> +                           KEY_READ | KEY_WRITE, NULL, hkey, NULL);
>> +}
>> + 
>>     
>
> What's the reason of the Parameter "BOOL open_for_write" ?
>
> open_cred_mgr_key is called with (..., TRUE) and (..., FALSE), but
> you always use "KEY_READ | KEY_WRITE".
>
> On the other hand, gcc does not warn about that unused Parameter.
> My first Idea was the optimizer in gcc, but removing "-O2" does not give
> us a warning.
>
> With "-pedantic", we lost (but still no warning for "open_for_write").
>   

It was left over from a previous revision of the code. Opening that key 
with read-only access worked until I needed to store the encryption key 
in the root of it, so I fixed it without cleaning up the code properly.

There are two options now: fix the CredRead/CredEnumerate code to cope 
with the encryption key not being there, or just remove the BOOL 
parameter from open_cred_mgr_key. Since HKEY_CURRENT_USER should always 
be writable (except in specific cases on Windows w.r.t. restricted 
users, which we probably wouldn't want accessing this key anyway), I'm 
going do the latter option to fix it.

Thanks for spotting it,

-- 
Rob Shearman



From rob at codeweavers.com  Fri Nov  2 08:51:10 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Fri, 02 Nov 2007 13:51:10 +0000
Subject: [PATCH 04/18] inetcomm: Add self-registration code.
In-Reply-To: <472B1ABD.1030203@gmail.com>
References: <472b19ac.0788240a.4166.ffffbc0bSMTPIN_ADDED@mx.google.com>
	<472B1ABD.1030203@gmail.com>
Message-ID: <472B2B4E.6050509@codeweavers.com>

Paul Vriens wrote:
> Robert Shearman wrote:
>> ---
>
> +static LONG recursive_delete_key(HKEY key);
> +static LONG recursive_delete_keyA(HKEY base, char const *name);
> +static LONG recursive_delete_keyW(HKEY base, WCHAR const *name);
>
> We just got rid of all the self build recursive delete ones. Can you 
> use RegDeleteTree[AW] (or is there a specific reason not to)?

No reason, just that this code was written before the RegDeleteTree cleanup.

-- 
Rob Shearman



From huw at codeweavers.com  Fri Nov  2 08:54:01 2007
From: huw at codeweavers.com (Huw Davies)
Date: Fri, 2 Nov 2007 13:54:01 +0000
Subject: [PATCH 04/18] inetcomm: Add self-registration code.
In-Reply-To: <472B2B4E.6050509@codeweavers.com>
References: <472b19ac.0788240a.4166.ffffbc0bSMTPIN_ADDED@mx.google.com>
	<472B1ABD.1030203@gmail.com> <472B2B4E.6050509@codeweavers.com>
Message-ID: <20071102135401.GA23819@merlot.physics.ox.ac.uk>

On Fri, Nov 02, 2007 at 01:51:10PM +0000, Robert Shearman wrote:
> Paul Vriens wrote:
> > Robert Shearman wrote:
> >> ---
> >
> > +static LONG recursive_delete_key(HKEY key);
> > +static LONG recursive_delete_keyA(HKEY base, char const *name);
> > +static LONG recursive_delete_keyW(HKEY base, WCHAR const *name);
> >
> > We just got rid of all the self build recursive delete ones. Can you 
> > use RegDeleteTree[AW] (or is there a specific reason not to)?
> 
> No reason, just that this code was written before the RegDeleteTree cleanup.

I'm about to resubmit the patchset anyway and have made this change.

Huw.
-- 
Huw Davies
huw at codeweavers.com


From astrand at cendio.se  Fri Nov  2 09:01:08 2007
From: astrand at cendio.se (=?UTF-8?Q?Peter_=C3=85strand?=)
Date: Fri, 2 Nov 2007 15:01:08 +0100 (CET)
Subject: [Bug 10266] Numpad keyboard handling is strange,
	Del keyproducestwo events
In-Reply-To: <003501c81d4b$1102fba0$6700fea9@DMITRY>
References: <E1InaAA-00083p-LB@wine.codeweavers.com><Pine.LNX.4.64.0711011537590.11719@maggie.lkpg.cendio.se><020501c81c9a$29948640$6700fea9@DMITRY>
	<Pine.LNX.4.64.0711021002420.30167@maggie.lkpg.cendio.se>
	<003501c81d4b$1102fba0$6700fea9@DMITRY>
Message-ID: <Pine.LNX.4.64.0711021447520.3191@maggie.lkpg.cendio.se>

On Fri, 2 Nov 2007, Dmitry Timoshkov wrote:

> > It's a good idea to try to have
> > ToUnicodeEx work mainly as it does on Windows, but we are miles away from
> > reaching this goal.
> 
> What goal are you talking about? 

The goal of a implementation of ToUnicodeEx that is 100% compatible with 
Windows. 


> Since I'm very closely track all locale and keyboard input related 
> problems current code works very well, including international keyboard 
> input. The only feature that is missing is support

I disagree. Two examples: 

1) Shift-Numlock-Del generating Backspace AND a comma, using the sv 
layout. 

2) The race condition (bug 4923). We had to modify our Xserver to send 
keyboard events *slowly* to Wine, to avoid this. 

With these bugs still existing, I don't thinks reasonable to say that the 
implementation "works very well". There are several other bugs in the 
Bugzilla as well, as well as 22 FIXMEs in the source.


> > Another interesting fact is that none expected or preferred the current
> > Wine behaviour.
> 
> It this case it doesn't really matter what users expect or prefer, behaviour
> of ToUnicodeEx is predefined by what Windows does.

You are missing the point. We can have a 100% Windows compatible 
ToUnicodeEx but still select the model we want. It's just about what input 
we should feed to ToUnicodeEx. EVENT_event_to_vkey isn't a Windows API, so 
we can modify it how we want.


Rgds, 
---
Peter ?strand		ThinLinc Chief Developer
Cendio AB		http://www.cendio.se
Wallenbergs gata 4
583 30 Link?ping	Phone: +46-13-21 46 00

ThinLinc User Group 2007 H?stkonferens --- 15-16 november, Link?ping.
Program och anm?lan: http://www.thinlincusergroup.se/aktiviteter

From juan.lang at gmail.com  Fri Nov  2 09:15:23 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Fri, 2 Nov 2007 07:15:23 -0700
Subject: [PATCH 07/18] inetcomm: Add an implementation of an SMTP
	transport.
Message-ID: <3a768c550711020715kf7ceedct93c6afc48d881ccc@mail.gmail.com>

Hi Rob,

+    const char szHostName[] = "roblaptop"; /* FIXME */

Did you mean to leave that in?
--Juan


From gerald at pfeifer.com  Fri Nov  2 09:02:54 2007
From: gerald at pfeifer.com (Gerald Pfeifer)
Date: Fri, 2 Nov 2007 15:02:54 +0100 (CET)
Subject: Fix type of loop variable in alloc_device().
In-Reply-To: <472B1E8F.70309@kievinfo.com>
References: <Pine.LNX.4.64.0711011804280.26054@acrux.dbai.tuwien.ac.at>
	<472B1E8F.70309@kievinfo.com>
Message-ID: <Pine.LNX.4.64.0711021418260.26054@acrux.dbai.tuwien.ac.at>

On Fri, 2 Nov 2007, Vitaliy Margolen wrote:
>> We iterate between 0 and and the value of an usigned variable, so we
>> should adjust the loop variable accordingly (not the list to silence
>> GCC).
>
>> -    int i;
>> +    unsigned i;
> If there is nothing wrong about it, then why do you change it? If even gcc
> does not complain about it.

More recent versions of GCC do. ;-)

And while in many cases these warnings do not indicate a real problem,
in some they do (and we found just one such real problem yesterday).

Gerald


From huw at codeweavers.com  Fri Nov  2 09:48:11 2007
From: huw at codeweavers.com (Huw Davies)
Date: Fri, 2 Nov 2007 14:48:11 +0000
Subject: [PATCH 07/18] inetcomm: Add an implementation of an SMTP
	transport.
In-Reply-To: <3a768c550711020715kf7ceedct93c6afc48d881ccc@mail.gmail.com>
References: <3a768c550711020715kf7ceedct93c6afc48d881ccc@mail.gmail.com>
Message-ID: <20071102144810.GA662@merlot.physics.ox.ac.uk>

On Fri, Nov 02, 2007 at 07:15:23AM -0700, Juan Lang wrote:
> Hi Rob,
> 
> +    const char szHostName[] = "roblaptop"; /* FIXME */
> 
> Did you mean to leave that in?

Nice.  Ok, I've just resent the patchset without the smtp stuff.
Rob can tidy that up and submit it himself.

Thanks,
Huw.
-- 
Huw Davies
huw at codeweavers.com


From rob at codeweavers.com  Fri Nov  2 10:04:21 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Fri, 02 Nov 2007 15:04:21 +0000
Subject: [PATCH 07/18] inetcomm: Add an implementation of an SMTP
	transport.
In-Reply-To: <20071102144810.GA662@merlot.physics.ox.ac.uk>
References: <3a768c550711020715kf7ceedct93c6afc48d881ccc@mail.gmail.com>
	<20071102144810.GA662@merlot.physics.ox.ac.uk>
Message-ID: <472B3C75.8010403@codeweavers.com>

Huw Davies wrote:
> On Fri, Nov 02, 2007 at 07:15:23AM -0700, Juan Lang wrote:
>   
>> Hi Rob,
>>
>> +    const char szHostName[] = "roblaptop"; /* FIXME */
>>
>> Did you mean to leave that in?
>>     
>
> Nice.  Ok, I've just resent the patchset without the smtp stuff.
> Rob can tidy that up and submit it himself.
>   

Jeremy White always wonders why some stuff only works for me, and now my 
secret is out ;-)

-- 
Rob Shearman



From jacek at codeweavers.com  Fri Nov  2 10:23:42 2007
From: jacek at codeweavers.com (Jacek Caban)
Date: Fri, 02 Nov 2007 16:23:42 +0100
Subject: mshtml: Set IE version when installing wine gecko
In-Reply-To: <200711011255.37905.chris.kcat@gmail.com>
References: <200710310805.03594.chris.kcat@gmail.com>
	<200711011120.55847.chris.kcat@gmail.com>
	<472A2BA9.5080209@codeweavers.com>
	<200711011255.37905.chris.kcat@gmail.com>
Message-ID: <472B40FE.9020800@codeweavers.com>

Chris Robinson wrote:
> Even if you fix all the apps that have a problem with Gecko, native IE still 
> has rendering differences. And short of reimplementing it ourselves, some 
> people will have a need for native IE (eg. web developers wanting to see what 
> their site looks like in IE). There may even be some other behavioral 
> differences that the majority of people won't care about or even not prefer, 
> while others do.
>   

Sure, but user may always unregister IE before installing it. IMO it's
better to document such things than depend what user has done with Wine
prefix before trying to install IE. These keys will only make the
installing process more tricky but not impossible.

Jacek


From jacek at codeweavers.com  Fri Nov  2 10:24:03 2007
From: jacek at codeweavers.com (Jacek Caban)
Date: Fri, 02 Nov 2007 16:24:03 +0100
Subject: mshtml: Set IE version when installing wine gecko
In-Reply-To: <87odedloxc.fsf@wine.dyndns.org>
References: <200710310805.03594.chris.kcat@gmail.com>	<472A1138.2080904@codeweavers.com>	<200711011120.55847.chris.kcat@gmail.com>	<472A2BA9.5080209@codeweavers.com>
	<87odedloxc.fsf@wine.dyndns.org>
Message-ID: <472B4113.1010008@codeweavers.com>

Alexandre Julliard wrote:
>
> The idea would be that there should be an easy way to uninstall it, so
> if Gecko is installed the app will try to use that, and if it doesn't
> work we can tell users to uninstall Gecko and let the app install IE
> instead.  Ultimately of course the goal is that they never need to do
> that.
>   

How about the attached patch? It adds registration code to iexplore.exe,
so user may run
$ wine iexplore -unregserver
or even better, just for sure:
$ WINEDLLOVERRIDES=shdocvw,iexplore.exe=b wine iexplore -unregserver
to unregister iexplore.
It would be wine specific as native doesn't support self registration in
iexplore.exe.
An other option would be to put a separate section in wine.inf so user
could run rundll32 to unregister it, but IMO it is worse due to
complexity of the command.

Thanks,
    Jacek
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0001-iexplore-Added-self-registration-code.patch
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20071102/ce3120a7/attachment-0001.txt 

From jacek at codeweavers.com  Fri Nov  2 10:19:28 2007
From: jacek at codeweavers.com (Jacek Caban)
Date: Fri, 2 Nov 2007 16:19:28 +0100
Subject: [PATCH] iexplore: Added self-registration code.
Message-ID: <mailman.60.1194017129.4278.wine-devel@winehq.org>

<S-Insert>

---
 dlls/shdocvw/factory.c   |   34 +++++++++++++++++++++++++---------
 dlls/shdocvw/iexplore.c  |    9 ++++++++-
 dlls/shdocvw/shdocvw.h   |    1 +
 dlls/shdocvw/shdocvw.inf |   12 ++++++++++++
 tools/wine.inf           |    1 +
 5 files changed, 47 insertions(+), 10 deletions(-)

diff --git a/dlls/shdocvw/factory.c b/dlls/shdocvw/factory.c
index ad4330a..2ed62e6 100644
--- a/dlls/shdocvw/factory.c
+++ b/dlls/shdocvw/factory.c
@@ -172,6 +172,23 @@ HRESULT register_class_object(BOOL do_reg)
     return CoRevokeClassObject(cookie);
 }
 
+static HRESULT reg_install(LPCSTR section, STRTABLEA *strtable)
+{
+    typeof(RegInstallA) *pRegInstall;
+    HMODULE hadvpack;
+    HRESULT hres;
+
+    static const WCHAR advpackW[] = {'a','d','v','p','a','c','k','.','d','l','l',0};
+
+    hadvpack = LoadLibraryW(advpackW);
+    pRegInstall = (typeof(RegInstallA)*)GetProcAddress(hadvpack, "RegInstall");
+
+    hres = pRegInstall(shdocvw_hinstance, section, strtable);
+
+    FreeLibrary(hadvpack);
+    return hres;
+}
+
 static const GUID CLSID_MicrosoftBrowserArchitecture =
     {0xa5e46e3a, 0x8849, 0x11d1, {0x9d, 0x8c, 0x00, 0xc0, 0x4f, 0xc9, 0x9d, 0x61}};
 static const GUID CLSID_MruLongList =
@@ -188,15 +205,11 @@ static const GUID CLSID_MruLongList =
 
 static HRESULT register_server(BOOL doregister)
 {
-    HRESULT hres;
-    HMODULE hAdvpack;
-    typeof(RegInstallA) *pRegInstall;
     STRTABLEA strtable;
     STRENTRYA pse[13];
     static CLSID const *clsids[13];
     int i = 0;
-
-    static const WCHAR wszAdvpack[] = {'a','d','v','p','a','c','k','.','d','l','l',0};
+    HRESULT hres;
 
     INF_SET_CLSID(CUrlHistory);
     INF_SET_CLSID(Internet);
@@ -223,10 +236,7 @@ static HRESULT register_server(BOOL doregister)
     strtable.cEntries = sizeof(pse)/sizeof(pse[0]);
     strtable.pse = pse;
 
-    hAdvpack = LoadLibraryW(wszAdvpack);
-    pRegInstall = (typeof(RegInstallA)*)GetProcAddress(hAdvpack, "RegInstall");
-
-    hres = pRegInstall(shdocvw_hinstance, doregister ? "RegisterDll" : "UnregisterDll", &strtable);
+    hres = reg_install(doregister ? "RegisterDll" : "UnregisterDll", &strtable);
 
     for(i=0; i < sizeof(pse)/sizeof(pse[0]); i++)
         HeapFree(GetProcessHeap(), 0, pse[i].pszValue);
@@ -274,3 +284,9 @@ HRESULT WINAPI DllUnregisterServer(void)
 
     return UnRegisterTypeLib(&LIBID_SHDocVw, 1, 1, LOCALE_SYSTEM_DEFAULT, SYS_WIN32);
 }
+
+DWORD register_iexplore(BOOL doregister)
+{
+    HRESULT hres = reg_install(doregister ? "RegisterIE" : "UnregisterIE", NULL);
+    return !SUCCEEDED(hres);
+}
diff --git a/dlls/shdocvw/iexplore.c b/dlls/shdocvw/iexplore.c
index adcaeee..c8fa61d 100644
--- a/dlls/shdocvw/iexplore.c
+++ b/dlls/shdocvw/iexplore.c
@@ -192,7 +192,14 @@ DWORD WINAPI IEWinMain(LPSTR szCommandLine, int nShowWindow)
     MSG msg;
     HRESULT hres;
 
-    FIXME("%s %d\n", debugstr_a(szCommandLine), nShowWindow);
+    TRACE("%s %d\n", debugstr_a(szCommandLine), nShowWindow);
+
+    if(*szCommandLine == '-' || *szCommandLine == '/') {
+        if(!strcasecmp(szCommandLine+1, "regserver"))
+            return register_iexplore(TRUE);
+        if(!strcasecmp(szCommandLine+1, "unregserver"))
+            return register_iexplore(FALSE);
+    }
 
     CoInitialize(NULL);
 
diff --git a/dlls/shdocvw/shdocvw.h b/dlls/shdocvw/shdocvw.h
index db47b63..0b048eb 100644
--- a/dlls/shdocvw/shdocvw.h
+++ b/dlls/shdocvw/shdocvw.h
@@ -222,6 +222,7 @@ extern void unregister_iewindow_class(void);
 
 HRESULT register_class_object(BOOL);
 HRESULT get_typeinfo(ITypeInfo**);
+DWORD register_iexplore(BOOL);
 
 /* memory allocation functions */
 
diff --git a/dlls/shdocvw/shdocvw.inf b/dlls/shdocvw/shdocvw.inf
index 0cb6498..91de9ee 100644
--- a/dlls/shdocvw/shdocvw.inf
+++ b/dlls/shdocvw/shdocvw.inf
@@ -10,6 +10,14 @@ AddReg=Classes.Reg
 DelReg=Classes.Reg
 
 
+[RegisterIE]
+AddReg=IE.Reg
+
+
+[UnregisterIE]
+DelReg=IE.Reg
+
+
 [Classes.Reg]
 HKCR,"CLSID\%CLSID_InternetExplorer%",,,"Internet Explorer(Ver 1.0)"
 HKCR,"CLSID\%CLSID_InternetExplorer%\LocalServer32",,,"iexplore.exe"
@@ -101,5 +109,9 @@ HKCR,"Shell.Explorer.1",,,""
 HKCR,"Shell.Explorer.1\CLSID",,,"%CLSID_WebBrowser_V1%"
 
 
+[IE.Reg]
+HKLM,"Software\Microsoft\Internet Explorer","Version",,"6.0.2900.2180"
+
+
 [Strings]
 MODULE="shdocvw.dll"
diff --git a/tools/wine.inf b/tools/wine.inf
index e6f3dbd..fdb47b9 100644
--- a/tools/wine.inf
+++ b/tools/wine.inf
@@ -2174,6 +2174,7 @@ HKLM,%CurrentVersion%\Telephony\Country List\998,"SameAreaRule",,"G"
 11,,dxdiagn.dll,1
 11,,hhctrl.ocx,1
 11,,hlink.dll,1
+11,,iexplore.exe,1
 11,,infosoft.dll,1
 11,,inseng.dll,1
 11,,itss.dll,1
-- 
1.5.3.4


--------------000000000903040604020005--


From wine.dev at web.de  Fri Nov  2 13:02:52 2007
From: wine.dev at web.de (Detlef Riekenberg)
Date: Fri, 02 Nov 2007 19:02:52 +0100
Subject: Generic text printer driver
In-Reply-To: <4728D13E.8020905@terra.es>
References: <4728D13E.8020905@terra.es>
Message-ID: <1194026572.1374.24.camel@p4>

On Mi, 2007-10-31 at 20:02 +0100, Juan Luis Ramos wrote:

> is there anybody working in the generic text printer driver o raw
> printer driver?

There is some work going in this direction, but that is not in the main
tree yet.

> I've a problem with a compatible Epson POS printer so, 

Does the Printer work with CUPS?
When yes, then it should be doable to fix your Printing Problem.

> The function that send the data is
> PSDRV_ExtTextOut, but the LPCWSTR parameter passed (str) doesn't contain
> the ESCAPE codes sent to the printer. 

wineps.drv creates Postscript.
Pass through is only possible, when the application already send
Postscript to the Driver.

My knowledge of wineps.drv is not good enough to help here. sorry.


-- 
 
By by ... Detlef




From julliard at winehq.org  Fri Nov  2 13:13:02 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 02 Nov 2007 19:13:02 +0100
Subject: mshtml: Set IE version when installing wine gecko
In-Reply-To: <472B4113.1010008@codeweavers.com> (Jacek Caban's message of
	"Fri, 02 Nov 2007 16:24:03 +0100")
References: <200710310805.03594.chris.kcat@gmail.com>
	<472A1138.2080904@codeweavers.com>
	<200711011120.55847.chris.kcat@gmail.com>
	<472A2BA9.5080209@codeweavers.com> <87odedloxc.fsf@wine.dyndns.org>
	<472B4113.1010008@codeweavers.com>
Message-ID: <87r6j8iki9.fsf@wine.dyndns.org>

Jacek Caban <jacek at codeweavers.com> writes:

> Alexandre Julliard wrote:
>>
>> The idea would be that there should be an easy way to uninstall it, so
>> if Gecko is installed the app will try to use that, and if it doesn't
>> work we can tell users to uninstall Gecko and let the app install IE
>> instead.  Ultimately of course the goal is that they never need to do
>> that.
>
> How about the attached patch? It adds registration code to iexplore.exe,
> so user may run
> $ wine iexplore -unregserver
> or even better, just for sure:
> $ WINEDLLOVERRIDES=shdocvw,iexplore.exe=b wine iexplore -unregserver
> to unregister iexplore.

Yes, I think that's a good idea.

-- 
Alexandre Julliard
julliard at winehq.org


From dank at kegel.com  Fri Nov  2 13:59:10 2007
From: dank at kegel.com (Dan Kegel)
Date: Fri, 2 Nov 2007 11:59:10 -0700
Subject: today's valgrind results online
Message-ID: <a71bd89a0711021159l4d556580w527463f3250430f3@mail.gmail.com>

Online at http://kegel.com/wine/valgrind/20071002/
(I now include more info about memory leaks, but I still
only report anything if there was an invalid memory reference.)

The following tests were fixed in git yesterday, and no longer have
any valgrind warnings:
comctl32/rebar
comctl32/status
crypt32/chain
crypt32/crl
crypt32/msg
cryptnet/cryptnet
user32/msg
wintrust/softpub

Juan thinks nearly all of the remaining crypt32 errors can be suppressed
(some are intentional).

Here are the directories that still have warnings:

advapi32 advpack cabinet comctl32 crypt32 d3d8 d3d9 d3dx8
dplayx dsound gdi32 gdiplus hlink kernel32 mlang msacm32
mscms mshtml msi msvcrt msxml3 netapi32 ntdll ole32
oleaut32 quartz riched20 riched32 rpcrt4 rsaenh setupapi
shdocvw shell32 urlmon user32 usp10 wininet winmm wintrust
- Dan


From wine.dev at web.de  Fri Nov  2 14:20:48 2007
From: wine.dev at web.de (Detlef Riekenberg)
Date: Fri, 02 Nov 2007 20:20:48 +0100
Subject: mshtml: Set IE version when installing wine gecko
In-Reply-To: <472B4113.1010008@codeweavers.com>
References: <200710310805.03594.chris.kcat@gmail.com>
	<472A1138.2080904@codeweavers.com>
	<200711011120.55847.chris.kcat@gmail.com>
	<472A2BA9.5080209@codeweavers.com> <87odedloxc.fsf@wine.dyndns.org>
	<472B4113.1010008@codeweavers.com>
Message-ID: <1194031249.1374.69.camel@p4>

On Fr, 2007-11-02 at 16:24 +0100, Jacek Caban wrote:
>  11,,dxdiagn.dll,1
>  11,,hhctrl.ocx,1
>  11,,hlink.dll,1
> +11,,iexplore.exe,1

This is the wrong directory.

In [FakeDllsSection], we use the correct location:
16422,Internet Explorer,iexplore.exe


-- 
 
By by ... Detlef




From wine.dev at web.de  Fri Nov  2 15:16:57 2007
From: wine.dev at web.de (Detlef Riekenberg)
Date: Fri, 02 Nov 2007 21:16:57 +0100
Subject: [PATCH 04/14] inetcomm: Add self-registration code.
In-Reply-To: <1194026657.1374.53.camel@p4>
References: <1194026657.1374.53.camel@p4>
Message-ID: <1194034617.1374.81.camel@p4>

On Fr, 2007-11-02 at 13:46 +0000, Huw Davies wrote:
> +      NULL,

The char 0x0c looks wrong here.
(was already in the Patch from Rob)


The Patchset was send twice (xx/14 and xx/18) with the same times.

Example from Huw (Rob did the same before):
                           Subject: 
[PATCH 17/18] inetcomm: Add two
missing member functions.
                              Date: 
Fri, 2 Nov 2007 11:54:03 +0000
(12:54 CET)

                           Subject: 
[PATCH 13/14] inetcomm: Add two
missing member functions.
                              Date: 
Fri, 2 Nov 2007 11:54:03 +0000
(12:54 CET)


-- 
 
By by ... Detlef




From dank at kegel.com  Fri Nov  2 16:10:28 2007
From: dank at kegel.com (Dan Kegel)
Date: Fri, 2 Nov 2007 14:10:28 -0700
Subject: today's valgrind results online
In-Reply-To: <a71bd89a0711021159l4d556580w527463f3250430f3@mail.gmail.com>
References: <a71bd89a0711021159l4d556580w527463f3250430f3@mail.gmail.com>
Message-ID: <a71bd89a0711021410h7e8213c9o4c90f4d7ac163ddb@mail.gmail.com>

On 11/2/07, Dan Kegel <dank at kegel.com> wrote:
> Online at http://kegel.com/wine/valgrind/20071002/

I should mention: I'm not planning fixing any of these
myself for now (I'd love to, but I can't afford to type that
much).
I'm hoping other Wine developers will pitch in to clean the
real valgrind errors up & gather suppressions for the
false positives.   Juan and Lei have already done
some cleanup -- thanks, guys! -- but there's a lot more to do.

See http://wiki.winehq.org/Wine_and_Valgrind for more info.
- Dan


From kai.blin at gmail.com  Fri Nov  2 17:25:09 2007
From: kai.blin at gmail.com (Kai Blin)
Date: Fri, 2 Nov 2007 23:25:09 +0100
Subject: today's valgrind results online
In-Reply-To: <a71bd89a0711021159l4d556580w527463f3250430f3@mail.gmail.com>
References: <a71bd89a0711021159l4d556580w527463f3250430f3@mail.gmail.com>
Message-ID: <200711022325.17010.kai.blin@gmail.com>

On Friday 02 November 2007 19:59:10 Dan Kegel wrote:
> dplayx

I'm not sure if this is worth the effort right now. It seems to be leaking 
some memory, but everybody _using_ dplay with wine right now uses native, 
anyway.

> netapi32

That's my fault, working on it.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071102/c0e130fc/attachment.pgp 

From dank at kegel.com  Fri Nov  2 17:25:45 2007
From: dank at kegel.com (Dan Kegel)
Date: Fri, 2 Nov 2007 15:25:45 -0700
Subject: USER32: win16 applications should not see long filenames returned
	from dialog control
Message-ID: <a71bd89a0711021525y41a56745yc768f734788b6ceb@mail.gmail.com>

Alex wrote:
> Legacy Win16 applications display file/directory selection listboxes and
> expect to receive a short name from the control....
>The attached patch attempts to fix this
>by converting the about-to-be-returned name to a short name if the expected
>windows version is not at least Win95

How about converting to a short name in the win16 wrapper
code instead?


From stefan at codeweavers.com  Fri Nov  2 17:46:12 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Fri, 2 Nov 2007 23:46:12 +0100
Subject: today's valgrind results online
In-Reply-To: <a71bd89a0711021410h7e8213c9o4c90f4d7ac163ddb@mail.gmail.com>
References: <a71bd89a0711021159l4d556580w527463f3250430f3@mail.gmail.com>
	<a71bd89a0711021410h7e8213c9o4c90f4d7ac163ddb@mail.gmail.com>
Message-ID: <200711022346.26840.stefan@codeweavers.com>

Am Freitag, 2. November 2007 22:10:28 schrieb Dan Kegel:
> On 11/2/07, Dan Kegel <dank at kegel.com> wrote:
> > Online at http://kegel.com/wine/valgrind/20071002/
>
> I should mention: I'm not planning fixing any of these
> myself for now (I'd love to, but I can't afford to type that
> much).
> I'm hoping other Wine developers will pitch in to clean the
> real valgrind errors up & gather suppressions for the
> false positives.   Juan and Lei have already done
> some cleanup -- thanks, guys! -- but there's a lot more to do.
>
> See http://wiki.winehq.org/Wine_and_Valgrind for more info.
> - Dan
With the intel driver warnings filtered out, the d3d results are much easier 
to real. Looks like we have a bunch of memleaks there. I sent a patch for the 
CreateVertexDeclaration error already
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071102/cdd6a6cb/attachment.pgp 

From rob at codeweavers.com  Fri Nov  2 18:56:26 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Fri, 02 Nov 2007 23:56:26 +0000
Subject: [PATCH 04/14] inetcomm: Add self-registration code.
In-Reply-To: <1194034617.1374.81.camel@p4>
References: <1194026657.1374.53.camel@p4> <1194034617.1374.81.camel@p4>
Message-ID: <472BB92A.5070907@codeweavers.com>

Detlef Riekenberg wrote:
> On Fr, 2007-11-02 at 13:46 +0000, Huw Davies wrote:
>   
>> +      NULL,
>>     
>
> The char 0x0c looks wrong here.
> (was already in the Patch from Rob)
>
>
> The Patchset was send twice (xx/14 and xx/18) with the same times.
>
> Example from Huw (Rob did the same before):
>   

I just thought I'd note that while the From: header said these patches 
came from me, Huw actually sent them, which I think is a deficiency in 
some of the git tools. I suspect the time is also the same issue. Note 
that the reason the smaller xx/14 patchset was sent was in response to 
comments on wine-devel about issues with the SMTP patches.

-- 
Rob Shearman



From wine-devel at kievinfo.com  Fri Nov  2 20:00:35 2007
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Fri, 02 Nov 2007 19:00:35 -0600
Subject: msxml - Fix Memory Leak
In-Reply-To: <BAY117-W17AA8DE7C5345A59E96E36938D0@phx.gbl>
References: <fgdskv$ejk$1@ger.gmane.org> <472B21E0.8040208@kievinfo.com>
	<BAY117-W17AA8DE7C5345A59E96E36938D0@phx.gbl>
Message-ID: <472BC833.9000505@kievinfo.com>

Not really. Now it's an attachment of "application/octet-stream" type. Not 
plain/text. Try renaming the file to *.patch.txt.

Vitaliy.

Alistair Leslie-Hughes wrote:
>   Hi Vitaliy,
>  
>    Thanks for the information, I though I had fixed my News client.
> 
> Does this work better?  Ill forward to the patch list if this works.
>  
> Best Regards
> Alistair
> 
> 
> 
> 
> 00
>  > From: wine-devel at kievinfo.com
>  > To: wine-devel at winehq.org
>  > CC: leslie_alistair at hotmail.com
>  > Subject: Re: msxml - Fix Memory Leak
>  >
>  > Alistair Leslie-Hughes wrote:
>  > > Hi,
>  > >
>  > > Changelog:
>  > > Fixed memory leak
>  > >
>  > >
>  > > Regards
>  > > Alistair Leslie-Hughes
>  > >
>  > >
>  > > begin 666 xmlelem.diff
>  >
>  > Please attach patches as a plain text. This patch is not an 
> attachment and
>  > is unreadable.
>  >
>  > Vitaliy.
> 
> 



From wine.dev at web.de  Sat Nov  3 12:36:05 2007
From: wine.dev at web.de (Detlef Riekenberg)
Date: Sat, 03 Nov 2007 18:36:05 +0100
Subject: [PATCH 1/7] advapi32: Implement CredWriteW.
In-Reply-To: <472B29B5.4020607@codeweavers.com>
References: <4727256B.5060806@codeweavers.com> <1194005391.1374.12.camel@p4>
	<472B29B5.4020607@codeweavers.com>
Message-ID: <1194111365.7644.3.camel@p4>

On Fr, 2007-11-02 at 13:44 +0000, Robert Shearman wrote:

> > What's the reason of the Parameter "BOOL open_for_write" ?
> >
> > On the other hand, gcc does not warn about that unused Parameter.

"-Wunused" (included in "-Wall") is not enough:
We need "-W" with "-Wunused", but wine requires a lot of fixes for that.


-- 
 
By by ... Detlef




From gerald at pfeifer.com  Sat Nov  3 12:58:02 2007
From: gerald at pfeifer.com (Gerald Pfeifer)
Date: Sat, 3 Nov 2007 18:58:02 +0100 (CET)
Subject: Bugs in dlls/wsock32/socket.c
Message-ID: <Pine.LNX.4.64.0711031852260.26054@acrux.dbai.tuwien.ac.at>

dlls/wsock32/socket.c has the following code:

   DWORD routeTableSize, numRoutes, ndx, ret;

   numRoutes = min(routeTableSize - sizeof(MIB_IPFORWARDTABLE),
                   0) / sizeof(MIB_IPFORWARDROW) + 1;

The problem here is that both routeTableSize and sizeof(...) are of an
unsigned type, so their difference is also unsigned.  Which means that
the minimum between that difference and 0 always will be 0, the result
of the division will thus always be zero, and the result of the entire 
expressions is a constant 1.

I have a hunch this is not the intendend purpose of this code, is it? 
 
Gerald
-- 
Gerald (Jerry) Pfeifer   gerald at pfeifer.com   http://www.pfeifer.com/gerald/


From truiken at gmail.com  Sat Nov  3 16:15:46 2007
From: truiken at gmail.com (James Hawkins)
Date: Sat, 3 Nov 2007 16:15:46 -0500
Subject: dlls/msi/streams.c -- simplify and constify
In-Reply-To: <Pine.LNX.4.64.0711031906340.26054@acrux.dbai.tuwien.ac.at>
References: <Pine.LNX.4.64.0711031906340.26054@acrux.dbai.tuwien.ac.at>
Message-ID: <22821af30711031415h202a503agc789253167f89f11@mail.gmail.com>

On Nov 3, 2007 1:10 PM, Gerald Pfeifer <gerald at pfeifer.com> wrote:
> While removing the dead code I noticed that we can actually also
> strengthen the const-ness of this function.
>
> Gerald
>
> ChangeLog:
> Remove a check which never could trigger (due to the domain of the
> variable in question) and increase const-ness of STREAMS_CreateView().
>
> Index: dlls/msi/streams.c
> ===================================================================
> RCS file: /home/wine/wine/dlls/msi/streams.c,v
> retrieving revision 1.7
> diff -u -3 -p -r1.7 streams.c
> --- dlls/msi/streams.c  18 Oct 2007 13:00:57 -0000      1.7
> +++ dlls/msi/streams.c  3 Nov 2007 18:06:27 -0000
> @@ -430,7 +430,7 @@ static UINT add_streams_to_table(MSISTRE
>      return count;
>  }
>
> -UINT STREAMS_CreateView(MSIDATABASE *db, MSIVIEW **view)
> +UINT STREAMS_CreateView(const MSIDATABASE *db, MSIVIEW **view)
>  {
>      MSISTREAMSVIEW *sv;
>
> @@ -444,9 +444,6 @@ UINT STREAMS_CreateView(MSIDATABASE *db,
>      sv->db = db;
>      sv->num_rows = add_streams_to_table(sv);
>
> -    if (sv->num_rows < 0)
> -        return ERROR_FUNCTION_FAILED;
> -
>      *view = (MSIVIEW *)sv;
>
>      return ERROR_SUCCESS;
>

This change is wrong.  If you'd actually read what the code intended
to do instead of just fixing warnings, you'd see that
add_streams_to_table returns -1 on error.  While the check for < 0 is
not correct, removing the check entirely is wrong.  The check should
be if (sv->num_rows == -1) return ERROR_FUNCTION_FAILED.

-- 
James Hawkins


From dank at kegel.com  Sat Nov  3 16:36:31 2007
From: dank at kegel.com (Dan Kegel)
Date: Sat, 3 Nov 2007 14:36:31 -0700
Subject: valgrind results updated
Message-ID: <a71bd89a0711031436m53aa2747p90dc428bd73ce45@mail.gmail.com>

I've updated
  http://kegel.com/wine/valgrind/
Today's results are at
  http://kegel.com/wine/valgrind/20071103/

The only difference from yesterday is I've added
suppressions for the most common memory leaks,
on the theory that it's easier to see the module-specific
leaks that way.

(I haven't looked to see if they're false positives,
so I named them todo* to remind us to look at them
again later.)

As always, there are leaks and uninitialized memory references
aplenty!  Step right up, no waiting...


From dank at kegel.com  Sat Nov  3 16:36:31 2007
From: dank at kegel.com (Dan Kegel)
Date: Sat, 3 Nov 2007 14:36:31 -0700
Subject: valgrind results updated
Message-ID: <a71bd89a0711031436m53aa2747p90dc428bd73ce45@mail.gmail.com>

I've updated
  http://kegel.com/wine/valgrind/
Today's results are at
  http://kegel.com/wine/valgrind/20071103/

The only difference from yesterday is I've added
suppressions for the most common memory leaks,
on the theory that it's easier to see the module-specific
leaks that way.

(I haven't looked to see if they're false positives,
so I named them todo* to remind us to look at them
again later.)

As always, there are leaks and uninitialized memory references
aplenty!  Step right up, no waiting...


From dank at kegel.com  Sat Nov  3 17:52:32 2007
From: dank at kegel.com (Dan Kegel)
Date: Sat, 3 Nov 2007 15:52:32 -0700
Subject: dlls/msi/streams.c -- simplify and constify
Message-ID: <a71bd89a0711031552l68ec9a8aibd81ff36840361e7@mail.gmail.com>

James wrote:
> This change is wrong.  If you'd actually read what the code intended
> to do instead of just fixing warnings, you'd see that
> add_streams_to_table returns -1 on error.

Yeah, Gerald, I was getting the feeling reading your
patches that you were being too glib about rewriting
code based simply on looking at signedness issues.
Please be more careful.
- Dan

-- 
Wine for Windows ISVs: http://kegel.com/wine/isv


From gerald at pfeifer.com  Sat Nov  3 17:10:14 2007
From: gerald at pfeifer.com (Gerald Pfeifer)
Date: Sat, 3 Nov 2007 23:10:14 +0100 (CET)
Subject: dlls/msi/streams.c -- simplify and constify
In-Reply-To: <22821af30711031415h202a503agc789253167f89f11@mail.gmail.com>
References: <Pine.LNX.4.64.0711031906340.26054@acrux.dbai.tuwien.ac.at>
	<22821af30711031415h202a503agc789253167f89f11@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0711032244220.26054@acrux.dbai.tuwien.ac.at>

On Sat, 3 Nov 2007, James Hawkins wrote:
> This change is wrong.  If you'd actually read what the code intended to 
> do instead of just fixing warnings, you'd see that add_streams_to_table 
> returns -1 on error.

That's what I am actually doing -- trying to read the code, including all
invocations of functions that I modify.  And doing so I have encountered
(and fixed) more than one real bug.  It does mean I need to dig into many
different corner of Wine that I have never seen before and, well, errare
humanum est, so I really appreciate review and feedback like yours. ;-)

> While the check for < 0 is not correct, removing the check entirely
> is wrong.  The check should be if (sv->num_rows == -1) return 
> ERROR_FUNCTION_FAILED.

Good observation, though comparing an unsigned type against -1 is not
exactly good practice.  Delving more into msi/streams.c, I came up with 
the patch below which tries to address this (and some other issues).  

If Alexandre and you prefer, I can change the check and really make it
just read sv->num_rows == -1.  I just wanted to point out there also is
an alternative way.

Thanks again for your feedback.  It was very helpful, and I'll watch
out for cases like this.

Gerald

Index: streams.c
===================================================================
RCS file: /home/wine/wine/dlls/msi/streams.c,v
retrieving revision 1.7
diff -u -3 -p -r1.7 streams.c
--- streams.c	18 Oct 2007 13:00:57 -0000	1.7
+++ streams.c	3 Nov 2007 22:01:13 -0000
@@ -39,7 +39,7 @@ WINE_DEFAULT_DEBUG_CHANNEL(msidb);
 
 typedef struct tabSTREAM
 {
-    int str_index;
+    UINT str_index;
     LPWSTR name;
     IStream *stream;
 } STREAM;
@@ -54,7 +54,7 @@ typedef struct tagMSISTREAMSVIEW
     UINT row_size;
 } MSISTREAMSVIEW;
 
-static BOOL add_stream_to_table(MSISTREAMSVIEW *sv, STREAM *stream, int index)
+static BOOL add_stream_to_table(MSISTREAMSVIEW *sv, STREAM *stream, UINT index)
 {
     if (index >= sv->max_streams)
     {
@@ -315,7 +315,7 @@ static UINT STREAMS_modify(struct tagMSI
 static UINT STREAMS_delete(struct tagMSIVIEW *view)
 {
     MSISTREAMSVIEW *sv = (MSISTREAMSVIEW *)view;
-    int i;
+    UINT i;
 
     TRACE("(%p)\n", view);
 
@@ -381,7 +381,8 @@ static const MSIVIEWOPS streams_ops =
     NULL,
 };
 
-static UINT add_streams_to_table(MSISTREAMSVIEW *sv)
+static int add_streams_to_table(MSISTREAMSVIEW *sv)
+    /* Return -1 in case of error. */
 {
     IEnumSTATSTG *stgenum = NULL;
     STATSTG stat;
@@ -433,6 +434,7 @@ static UINT add_streams_to_table(MSISTRE
 UINT STREAMS_CreateView(MSIDATABASE *db, MSIVIEW **view)
 {
     MSISTREAMSVIEW *sv;
+    INT i;
 
     TRACE("(%p, %p)\n", db, view);
 
@@ -442,10 +444,12 @@ UINT STREAMS_CreateView(MSIDATABASE *db,
 
     sv->view.ops = &streams_ops;
     sv->db = db;
-    sv->num_rows = add_streams_to_table(sv);
 
-    if (sv->num_rows < 0)
-        return ERROR_FUNCTION_FAILED;
+    i = add_streams_to_table(sv);
+    if (i < 0)
+       return ERROR_FUNCTION_FAILED;
+    else
+       sv->num_rows = i;
 
     *view = (MSIVIEW *)sv;
 


From actong88 at gmail.com  Sat Nov  3 20:13:44 2007
From: actong88 at gmail.com (Allan Tong)
Date: Sat, 3 Nov 2007 21:13:44 -0400
Subject: shdocvw question
Message-ID: <d75158870711031813s119069ccl56080a2d481d9dc7@mail.gmail.com>

The attached patch should fix the crash in bug #6120, but I'm afraid I
don't understand enough to know if the patch is correct or not.  The
code that the patch removes was setting the client site pointer to
NULL.  A later dereference on that pointer causes the crash.  I guess
I don't understand why the client site pointer is being explicitly set
to NULL.  Shouldn't Release handle that when the reference count
reaches zero?

 - Allan
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: deactivate_document.diff
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20071103/0306eacb/attachment.txt 

From infyquest at gmail.com  Sat Nov  3 20:26:11 2007
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Sat, 3 Nov 2007 20:26:11 -0500
Subject: shdocvw question
In-Reply-To: <d75158870711031813s119069ccl56080a2d481d9dc7@mail.gmail.com>
References: <d75158870711031813s119069ccl56080a2d481d9dc7@mail.gmail.com>
Message-ID: <36bf289b0711031826l736bde03y9dfed3d99ba1c668@mail.gmail.com>

Hi,

I dont know about ole32 stuff.
I think we should not remove the stuff, you have just removed.
rather it would be better if there is null check for it, and decrease
reference count.

Thanks,
VJ
PS:
I really dont know about ole32 stuff.

On 11/3/07, Allan Tong <actong88 at gmail.com> wrote:
> The attached patch should fix the crash in bug #6120, but I'm afraid I
> don't understand enough to know if the patch is correct or not.  The
> code that the patch removes was setting the client site pointer to
> NULL.  A later dereference on that pointer causes the crash.  I guess
> I don't understand why the client site pointer is being explicitly set
> to NULL.  Shouldn't Release handle that when the reference count
> reaches zero?
>
>  - Allan
>
>
>
>
>


From m.bosner at c-t-b.info  Sat Nov  3 23:16:24 2007
From: m.bosner at c-t-b.info (Martin Bosner)
Date: Sun, 4 Nov 2007 05:16:24 +0100
Subject: Wine 1.0 bugs, release criteria
In-Reply-To: <a71bd89a0710060812m7700a099ne5dc28c7fd730774@mail.gmail.com>
References: <a71bd89a0710060441o1bdf8803s649dad6bf91a01a6@mail.gmail.com>
	<530468570710060805t42095c95hb4c7e6059b00194b@mail.gmail.com>
	<a71bd89a0710060812m7700a099ne5dc28c7fd730774@mail.gmail.com>
Message-ID: <200711040516.24086.m.bosner@c-t-b.info>

On Saturday 06 October 2007 17:12:51 Dan Kegel wrote:
> On 10/6/07, Jesse Allen <the3dfxdude at gmail.com> wrote:
> > > http://wiki.winehq.org/WineReleaseCriteria
> >
> > Can find get a timeline for the feature freeze and the 1.0 release?
>
> As the wiki page says, we hope to have a "final" list of bugs
> by the end of the year.  There have been some murmurings about
> trying to do the release by June, but they're just rumors.
>
> > Also are we going to have a stable branch and a development branch
> > post 1.0? That way I can know the window for merging the DIB engine.
> > It'll likely be post 1.0 because I'm too busy in school at the moment.
> > It doesn't need to be a 1.0 bug because it only affects performance
> > mainly.
>
> Yeah, I think post 1.0 is fine.  We can call it 1.1 for now.
Little bit late but maybe the "vote for a bug" feature in bugzilla should not 
only be a indicator for what should be fixed for 1.0 but also be more 
advertised. 

Martin Bosner


From fgouget at free.fr  Sun Nov  4 11:01:16 2007
From: fgouget at free.fr (Francois Gouget)
Date: Sun, 4 Nov 2007 18:01:16 +0100 (CET)
Subject: 'kernel32_test loader' causes BSOD on XP SP1
Message-ID: <Pine.LNX.4.64.0711041749210.2265@amboise.dolphin>


So I'm running tests in an XP SP1 VM and yet, you can see no such 
results on http://test.winehq.org/data/. The reason for is that the 
'kernel32_test loader' causes XP SP1 to crash, so that winetest.exe 
never has an opportunity to send the results.

So I investigated this and the specific test that causes the crash is 
this one:

         { &dos_header, sizeof(dos_header),
           1, sizeof(IMAGE_OPTIONAL_HEADER), 0x200, 0x200,
          sizeof(dos_header) + sizeof(nt_header) + sizeof(IMAGE_SECTION_HEADER) + 0x1000,
           sizeof(dos_header) + sizeof(nt_header) + sizeof(IMAGE_SECTION_HEADER),
           ERROR_SUCCESS
         },

I noticed the 0x1000. Shouldn't this be a 0x200? Or is that the whole 
point of this test? In any case, changing it to 0x200 avoids crashing 
SP1.

Another weird way to avoid the crash is to introduce a Sleep(1000) just 
before the LoadLibrary().

I've summed up both ways to avoid the crash in the patch below. 
Hopefully someone more familiar with the loader than me can have a look 
into this and suggest a proper fix.



diff --git a/dlls/kernel32/tests/loader.c b/dlls/kernel32/tests/loader.c
index 49af819..f9f9e0b 100644
--- a/dlls/kernel32/tests/loader.c
+++ b/dlls/kernel32/tests/loader.c
@@ -139,7 +139,7 @@ START_TEST(loader)
         },
         { &dos_header, sizeof(dos_header),
           1, sizeof(IMAGE_OPTIONAL_HEADER), 0x200, 0x200,
-          sizeof(dos_header) + sizeof(nt_header) + sizeof(IMAGE_SECTION_HEADER) + 0x1000,
+          sizeof(dos_header) + sizeof(nt_header) + sizeof(IMAGE_SECTION_HEADER) + 0xf00,
           sizeof(dos_header) + sizeof(nt_header) + sizeof(IMAGE_SECTION_HEADER),
           ERROR_SUCCESS
         },
@@ -321,6 +322,11 @@ START_TEST(loader)
         file_size = GetFileSize(hfile, NULL);
         CloseHandle(hfile);
 
+        if (0 && i == 4)
+        {
+            /* Required to avoid a crash on Windows XP SP1 */
+            Sleep(1000);
+        }
         SetLastError(0xdeadbeef);
         hlib = LoadLibrary(dll_name);
         if (td[i].error == ERROR_SUCCESS)



-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
     Linux, WinNT, MS-DOS - also known as the Good, the Bad and the Ugly.


From juan.lang at gmail.com  Sun Nov  4 16:45:41 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Sun, 4 Nov 2007 14:45:41 -0800
Subject: Bugs in dlls/wsock32/socket.c
In-Reply-To: <Pine.LNX.4.64.0711031852260.26054@acrux.dbai.tuwien.ac.at>
References: <Pine.LNX.4.64.0711031852260.26054@acrux.dbai.tuwien.ac.at>
Message-ID: <3a768c550711041445s108c28b6k8bd825603a58f9c1@mail.gmail.com>

Hi Gerald,

On Nov 3, 2007 9:58 AM, Gerald Pfeifer <gerald at pfeifer.com> wrote:
> dlls/wsock32/socket.c has the following code:
>
>    DWORD routeTableSize, numRoutes, ndx, ret;
>
>    numRoutes = min(routeTableSize - sizeof(MIB_IPFORWARDTABLE),
>                    0) / sizeof(MIB_IPFORWARDROW) + 1;
>
> The problem here is that both routeTableSize and sizeof(...) are of an
> unsigned type, so their difference is also unsigned.  Which means that
> the minimum between that difference and 0 always will be 0, the result
> of the division will thus always be zero, and the result of the entire
> expressions is a constant 1.
>
> I have a hunch this is not the intendend purpose of this code, is it?

Heh - no, that's not the intended purpose ;)  I'll send a patch.

Thanks,
--Juan


From gerald at pfeifer.com  Sun Nov  4 12:24:46 2007
From: gerald at pfeifer.com (Gerald Pfeifer)
Date: Sun, 4 Nov 2007 19:24:46 +0100 (CET)
Subject: dlls/comctl32/listview.c warning elimination
In-Reply-To: <87ejfenk7y.fsf@wine.dyndns.org>
References: <Pine.LNX.4.64.0710281356520.26054@acrux.dbai.tuwien.ac.at>
	<87ejfenk7y.fsf@wine.dyndns.org>
Message-ID: <Pine.LNX.4.64.0711041921400.26054@acrux.dbai.tuwien.ac.at>

On Mon, 29 Oct 2007, Alexandre Julliard wrote:
>> Not a patch I am particularily proud of, but the best way I found to get 
>> rid of
>>
>>   listview.c:5043: warning: 'strW' might be used uninitialized in this function
>>
>> issued by GCC, and apart from the added cast it actually is simpler than
>> the original.
> It was done the way it is precisely to avoid the non-const cast, which
> triggers a warning too.

Hmm, I didn't see that other warning, but I can easily see that some
versions of GCC or other compilers would do so.

The only patch I can think of that avoid *both* warnings is the one
below.  Not perfect, but I fair compromise.  What do you think?  Or
do you have any better idea that we might want to try?

Gerald

Index: dlls/comctl32/listview.c
===================================================================
RCS file: /home/wine/wine/dlls/comctl32/listview.c,v
retrieving revision 1.490
diff -u -3 -p -r1.490 listview.c
--- dlls/comctl32/listview.c	23 Oct 2007 18:16:28 -0000	1.490
+++ dlls/comctl32/listview.c	4 Nov 2007 18:21:34 -0000
@@ -5040,12 +5040,18 @@ static INT LISTVIEW_FindItemA(const LIST
     BOOL hasText = lpFindInfo->flags & (LVFI_STRING | LVFI_PARTIAL);
     LVFINDINFOW fiw;
     INT res;
-    LPWSTR strW;
 
     memcpy(&fiw, lpFindInfo, sizeof(fiw));
-    if (hasText) fiw.psz = strW = textdupTtoW((LPCWSTR)lpFindInfo->psz, FALSE);
-    res = LISTVIEW_FindItemW(infoPtr, nStart, &fiw);
-    if (hasText) textfreeT(strW, FALSE);
+
+    if (hasText)
+    {
+       LPWSTR strW;
+       fiw.psz = strW = textdupTtoW((LPCWSTR)lpFindInfo->psz, FALSE);
+       res = LISTVIEW_FindItemW(infoPtr, nStart, &fiw);
+       textfreeT(strW, FALSE);
+    } else
+       res = LISTVIEW_FindItemW(infoPtr, nStart, &fiw);
+    
     return res;
 }
 


From dsh at linux.ucla.edu  Sun Nov  4 17:58:55 2007
From: dsh at linux.ucla.edu (Dan Hipschman)
Date: Sun, 4 Nov 2007 15:58:55 -0800
Subject: libs/wpp: Avoid compiler warnings (-W)
In-Reply-To: <1194177843.7133.4.camel@p4>
References: <1194177843.7133.4.camel@p4>
Message-ID: <20071104235855.GA25848@linux.ucla.edu>

On Sun, Nov 04, 2007 at 01:04:02PM +0100, Detlef Riekenberg wrote:
> 
> Why is the code only used, when "WANT_NEAR_INDICATION" is defined?
> Should we remove the code or enable it always?
>
> @@ -591,18 +592,17 @@ static void generic_msg(const char *s, c
>  	fprintf(stderr, "%s:%d:%d: %s: ", pp_status.input ? pp_status.input : "stdin",
>                  pp_status.line_number, pp_status.char_number, t);
>  	vfprintf(stderr, s, ap);
> -#ifdef WANT_NEAR_INDICATION
> +	if(n)
>  	{
> +#ifdef WANT_NEAR_INDICATION
>  		char *cpy, *p;
> -		if(n)
> -		{
> -			cpy = pp_xstrdup(n);
> -			for (p = cpy; *p; p++) if(!isprint(*p)) *p = ' ';
> -			fprintf(stderr, " near '%s'", cpy);
> -			free(cpy);
> -		}
> -	}
> +
> +		cpy = pp_xstrdup(n);
> +		for (p = cpy; *p; p++) if(!isprint(*p)) *p = ' ';
> +		fprintf(stderr, " near '%s'", cpy);
> +		free(cpy);
>  #endif
> +	}
>  	fprintf(stderr, "\n");
>  }
>  

Related, although not really a great solution:

http://www.winehq.org/pipermail/wine-cvs/2006-September/026094.html

I forget, are the extra "near" messages actually helpful, or misleading?
In any case, whatever ends up happening here should probably also happen
in widl, since it uses wpp and consistent warning/error messages are
nice.


From mstefani at redhat.com  Sun Nov  4 20:20:52 2007
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Sun, 04 Nov 2007 21:20:52 -0500
Subject: libs/wine: Avoid compiler warnings about unused parameter(-W)
In-Reply-To: <1194177948.7133.7.camel@p4>
References: <1194177948.7133.7.camel@p4>
Message-ID: <472E7E04.9080800@redhat.com>

Detlef Riekenberg wrote:
> Changelog:
> libs/wine: Avoid compiler warnings about unused parameter(-W)
> 
> 
> The code-sequence is optimized away.
> Another option would be "__attribute__((unused__))"
> or removing the function.
> 
> ------------------------------------------------------------------------
> 
> From b865b71aff3b8b9c43dffe93f8f0de874cccab53 Mon Sep 17 00:00:00 2001
> From: Detlef Riekenberg <wine.dev at web.de>
> Date: Sun, 4 Nov 2007 12:58:39 +0100
> Subject: [PATCH] libs/wine: Avoid compiler warnings about unused parameter(-W)
> ---
>  libs/wine/debug.c |    2 ++
>  1 files changed, 2 insertions(+), 0 deletions(-)
> 
> diff --git a/libs/wine/debug.c b/libs/wine/debug.c
> index 67cc172..5fc56e7 100644
> --- a/libs/wine/debug.c
> +++ b/libs/wine/debug.c
> @@ -261,6 +261,8 @@ static char *get_temp_buffer( size_t siz
>  static void release_temp_buffer( char *buffer, size_t size )
>  {
>      /* don't bother doing anything */
> +    buffer = buffer;
> +    size = size;
That's just ugly. If removing the function is not an option leaving the 
function as is is the best approach.
-W is the old name for the gcc argument; the new name for it is -Wextra 
which describes the warnings better: extra warnings; might be legit but 
can be bogus.

>  }

bye
	michael
-- 
Michael Stefaniuc               Tel.: +49-711-96437-199
Sr. Network Engineer            Fax.: +49-711-96437-111
Red Hat GmbH                    Email: mstefani at redhat.com
Hauptstaetterstr. 58            http://www.redhat.de/
D-70178 Stuttgart


From febaen at gmail.com  Sun Nov  4 22:33:22 2007
From: febaen at gmail.com (feba thatl)
Date: Sun, 4 Nov 2007 22:33:22 -0600
Subject: #winehq admin troubles
Message-ID: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>

Sorry if this mailing list is less than appropriate, but from what
I've seen this is where the conversation was last time, and there
doesn't seem to be much better.

A while ago (Probably one-three months), I went to #winehq to ask
about something, and was treated rather rudely by vitamin. I got
annoyed by him, and made a somewhat rude comment myself (not as rude
as he was being, but still probably inappropriate), and he kicked me.
I rejoined the channel, and I don't really remember what happened
afterwards, but it can't have been too awful as I don't believe I was
banned. I do remember being left with a very sour taste with Wine, as
I googled vitamin, and found that this was nowhere near the first time
he had been needlessly rude to a user and had even given completely
unwarranted bans with seemingly no reprimand.

I gradually started going back to winehq for help and questions, with
no problems. Last night, I went in to ask if anyone wanted to help me
get a program working, and vitamin replied. I groaned to myself, but
we had a perfectly civil conversation. At one point he stopped
replying, but it's not like I haven't had to walk off myself for
various reasons, so I just left quietly.

Today, I joined #ubuntu to try to get something working, and found
someone else asking for help with Wine. I (amongst others) recommended
they go to #winehq. They joined, but commented in #ubuntu that, quote:

(09:27:58 PM) <Name removed>: man these #winehq people are not friendly at all

I joined #winehq and confirmed my fears that vitamin was being rude to
someone else. Vitamin asked what version they were running, they
answered with 9.46 (the version in the Ubuntu repos, last I checked),
and I recommended they go to winehq.org and follow the instructions on
how to add the Wine repos. Vitamin said something along the lines of
"that isn't the case here", I said that it's still helpful (to have an
up to date version of wine). I then asked if Vitamin had got the
program we talked about last night working, and seconds later was
kicked. No explanation, the kick line just had "(Vitamin)". Utterly
confused, I rejoined, for which I do have a chatlog:

(09:32:56 PM) The topic for #winehq is:[long topic removed]
(09:33:09 PM) ***vitamin fucking tired all knowning noobs!
(09:33:15 PM) <Name removed, same person from #ubuntu>: wine: cannot
find '/media/cdrom0/intro.exe'
(09:33:15 PM) vitamin: usrl, you better leave
(09:33:25 PM) usrl: Why?
(09:33:32 PM) mode (+b *!*n=feba@*.hsd1.ks.comcast.net ) by vitamin
(09:33:32 PM) You have been kicked by vitamin: (vitamin)

That's the entire chatlog of my second time joining (I didn't think to
save a copy of the first), with nothing removed but a bunch of topic
stuff nobody wants to read and the fellow from #ubuntu's nick.

Now, I not only have been banned for apparently being a noob (Again,
it's a best guess, Vitamin did not give any clue at all in his kick
messages, let alone a warning in the channel) in a channel that is
supposed to support end users, but a few minutes later, I see this,
again in #ubuntu:

(09:37:15 PM) <Name removed>: well I got banned from winehq for asking
a question


This person didn't seem rude at all when I was talking to them.
Thankfully, they were able to get their problems resolved in #ubuntu.

Given that vitamin seems to have had user abuse problems in the past,
what is going on here? I can understand not getting professional
service in an IRC channel, but why is someone who is so needlessly
abusive (again, kicking people for little more than asking a question;
when the channel is for support.) entrusted with admin abilities? From
what I read on another complaint, he seems to be in this position
because he is a developer, not because he is truly a good fit for
being a moderator or even a helper. While he might be great at coding,
his people skills definitely suffer. I can understand getting angry
over people asking their questions right, but when you're trying to
support end users, you have to be able to deal with at least some
stupidity-- and even disregarding that, if you're going to not only
kick someone, but ban them, give them some idea of what they did
wrong.

It almost seems to me as if he is banning people not because they did
something wrong, but because he had a bad day-- like I said, last
night he was fairly civil, even though I'm sure I made my share of
stupid questions and comments. I'm not sure if this is the only
moderator with these sorts of problems, but something needs to be
done. Wine is used by all sorts of people, heck, my mother uses it.
When all sorts of people are using a program, all sorts of people are
going to be having problems with it. I wouldn't expect my mother, or
anyone else's, to be able to phrase their question well and make a
support person happy, but I also wouldn't expect someone who is
supposed to be supporting users insulting them and banning them (not
only ignoring their need for help, but effectively making it
impossible for many other people to help them as well).

Something needs to change, Wine is something a lot of people switching
to non-Windows OS are going to use, and many people could be easily
turned off when they find the first place they turn to for help, the
place that winehq.org leads them to, not only has very rude people in
power, but has no checks or guards to keep said people from ruining a
user's experience.


From chmorgan at gmail.com  Sun Nov  4 23:12:42 2007
From: chmorgan at gmail.com (Chris Morgan)
Date: Mon, 5 Nov 2007 00:12:42 -0500
Subject: #winehq admin troubles
In-Reply-To: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
Message-ID: <f3f1b91a0711042112m2af5c932kbcb84a769ebf795c@mail.gmail.com>

On 11/4/07, feba thatl <febaen at gmail.com> wrote:
> Sorry if this mailing list is less than appropriate, but from what
> I've seen this is where the conversation was last time, and there
> doesn't seem to be much better.
>
> A while ago (Probably one-three months), I went to #winehq to ask
> about something, and was treated rather rudely by vitamin. I got
> annoyed by him, and made a somewhat rude comment myself (not as rude
> as he was being, but still probably inappropriate), and he kicked me.
> I rejoined the channel, and I don't really remember what happened
> afterwards, but it can't have been too awful as I don't believe I was
> banned. I do remember being left with a very sour taste with Wine, as
> I googled vitamin, and found that this was nowhere near the first time
> he had been needlessly rude to a user and had even given completely
> unwarranted bans with seemingly no reprimand.
>
> I gradually started going back to winehq for help and questions, with
> no problems. Last night, I went in to ask if anyone wanted to help me
> get a program working, and vitamin replied. I groaned to myself, but
> we had a perfectly civil conversation. At one point he stopped
> replying, but it's not like I haven't had to walk off myself for
> various reasons, so I just left quietly.
>
> Today, I joined #ubuntu to try to get something working, and found
> someone else asking for help with Wine. I (amongst others) recommended
> they go to #winehq. They joined, but commented in #ubuntu that, quote:
>
> (09:27:58 PM) <Name removed>: man these #winehq people are not friendly at all
>
> I joined #winehq and confirmed my fears that vitamin was being rude to
> someone else. Vitamin asked what version they were running, they
> answered with 9.46 (the version in the Ubuntu repos, last I checked),
> and I recommended they go to winehq.org and follow the instructions on
> how to add the Wine repos. Vitamin said something along the lines of
> "that isn't the case here", I said that it's still helpful (to have an
> up to date version of wine). I then asked if Vitamin had got the
> program we talked about last night working, and seconds later was
> kicked. No explanation, the kick line just had "(Vitamin)". Utterly
> confused, I rejoined, for which I do have a chatlog:
>
> (09:32:56 PM) The topic for #winehq is:[long topic removed]
> (09:33:09 PM) ***vitamin fucking tired all knowning noobs!
> (09:33:15 PM) <Name removed, same person from #ubuntu>: wine: cannot
> find '/media/cdrom0/intro.exe'
> (09:33:15 PM) vitamin: usrl, you better leave
> (09:33:25 PM) usrl: Why?
> (09:33:32 PM) mode (+b *!*n=feba@*.hsd1.ks.comcast.net ) by vitamin
> (09:33:32 PM) You have been kicked by vitamin: (vitamin)
>
> That's the entire chatlog of my second time joining (I didn't think to
> save a copy of the first), with nothing removed but a bunch of topic
> stuff nobody wants to read and the fellow from #ubuntu's nick.
>
> Now, I not only have been banned for apparently being a noob (Again,
> it's a best guess, Vitamin did not give any clue at all in his kick
> messages, let alone a warning in the channel) in a channel that is
> supposed to support end users, but a few minutes later, I see this,
> again in #ubuntu:
>
> (09:37:15 PM) <Name removed>: well I got banned from winehq for asking
> a question
>
>
> This person didn't seem rude at all when I was talking to them.
> Thankfully, they were able to get their problems resolved in #ubuntu.
>
> Given that vitamin seems to have had user abuse problems in the past,
> what is going on here? I can understand not getting professional
> service in an IRC channel, but why is someone who is so needlessly
> abusive (again, kicking people for little more than asking a question;
> when the channel is for support.) entrusted with admin abilities? From
> what I read on another complaint, he seems to be in this position
> because he is a developer, not because he is truly a good fit for
> being a moderator or even a helper. While he might be great at coding,
> his people skills definitely suffer. I can understand getting angry
> over people asking their questions right, but when you're trying to
> support end users, you have to be able to deal with at least some
> stupidity-- and even disregarding that, if you're going to not only
> kick someone, but ban them, give them some idea of what they did
> wrong.
>
> It almost seems to me as if he is banning people not because they did
> something wrong, but because he had a bad day-- like I said, last
> night he was fairly civil, even though I'm sure I made my share of
> stupid questions and comments. I'm not sure if this is the only
> moderator with these sorts of problems, but something needs to be
> done. Wine is used by all sorts of people, heck, my mother uses it.
> When all sorts of people are using a program, all sorts of people are
> going to be having problems with it. I wouldn't expect my mother, or
> anyone else's, to be able to phrase their question well and make a
> support person happy, but I also wouldn't expect someone who is
> supposed to be supporting users insulting them and banning them (not
> only ignoring their need for help, but effectively making it
> impossible for many other people to help them as well).
>
> Something needs to change, Wine is something a lot of people switching
> to non-Windows OS are going to use, and many people could be easily
> turned off when they find the first place they turn to for help, the
> place that winehq.org leads them to, not only has very rude people in
> power, but has no checks or guards to keep said people from ruining a
> user's experience.
>

I agree that this isn't something that should continue. Kicking should
be reserved for people being disruptive. There is no reason to be
anything other than polite to users asking for help.

Allowing this kind of behavior to continue reflects poorly on us as a
community. I'd like to suggest that this be the last time we hear
about issues like this. If it happens again I'd like to propose a
graduated scale of irc channel bans, starting at one month, for
Vitamin.

Chris


From wine-devel at kievinfo.com  Sun Nov  4 23:43:43 2007
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 04 Nov 2007 22:43:43 -0700
Subject: #winehq admin troubles
In-Reply-To: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
Message-ID: <472EAD8F.2020203@kievinfo.com>

feba thatl wrote:
> 
> (09:32:56 PM) The topic for #winehq is:[long topic removed]
> (09:33:09 PM) ***vitamin fucking tired all knowning noobs!
> (09:33:15 PM) <Name removed, same person from #ubuntu>: wine: cannot
> find '/media/cdrom0/intro.exe'
> (09:33:15 PM) vitamin: usrl, you better leave
> (09:33:25 PM) usrl: Why?
> (09:33:32 PM) mode (+b *!*n=feba@*.hsd1.ks.comcast.net ) by vitamin
> (09:33:32 PM) You have been kicked by vitamin: (vitamin)
> 

You omitted the reason:

Nov 04 20:30:56 <usrl>  Gunn: that's an old version. Go to winehq.org and 
follow their instructions to add them to your repos.
Nov 04 20:31:05 <vitamin>       fester, how are you "loading" that program?
Nov 04 20:31:09 <usrl>  Gunn: it will be more up to date that way
Nov 04 20:31:25 <vitamin>       usrl, that's not a problem here
Nov 04 20:31:37 <usrl>  vitamin: I know, but it's helpful anyway.

You got into middle of conversation, suggested something that user does not 
need (as 0.9.47 and 0.9.48 are still broken for most Source games).

But since it seems that no one really gives a rip about what's going on on 
the channel, please whoever has higher access then me, remove me from the 
ops list. I don't want to explain myself every time some some one feels 
"wronged" and have to run to the mailing list to complain about it.


Vitaliy.


From twickline at gmail.com  Mon Nov  5 01:09:03 2007
From: twickline at gmail.com (Tom Wickline)
Date: Mon, 5 Nov 2007 02:09:03 -0500
Subject: #winehq admin troubles
In-Reply-To: <f3f1b91a0711042112m2af5c932kbcb84a769ebf795c@mail.gmail.com>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
	<f3f1b91a0711042112m2af5c932kbcb84a769ebf795c@mail.gmail.com>
Message-ID: <53e3a9930711042309u674a9f96ua2abafeb0a2387c7@mail.gmail.com>

On 11/5/07, Chris Morgan <chmorgan at gmail.com> wrote:
>
> I agree that this isn't something that should continue. Kicking should
> be reserved for people being disruptive. There is no reason to be
> anything other than polite to users asking for help.
>
> Allowing this kind of behavior to continue reflects poorly on us as a
> community. I'd like to suggest that this be the last time we hear
> about issues like this. If it happens again I'd like to propose a
> graduated scale of irc channel bans, starting at one month, for
> Vitamin.
>
> Chris

I hope this is a joke! There is absolutely nothing wrong with they way
Vitamin handles himself in #winehq. When these people come crying to
wine-devel they leave out about 98% of the facts, 100% of the time.

Tom

>
>
>


From joshscholar at nightstudies.net  Sun Nov  4 19:48:51 2007
From: joshscholar at nightstudies.net (Joshua Scholar)
Date: Mon, 5 Nov 2007 01:48:51 +0000 (UTC)
Subject: Linux/Windows app connection, how?
Message-ID: <fglsq3$bup$2@ger.gmane.org>

I really want to have some way to communicate between a Linux program and 
a Windows program running under WINE.  The connection doesn't need to be 
high speed, a stream is fine - I'm just sending some unicode text.  I'm 
writing both programs myself, so I can implement this in the easiest way, 
though if there was some way to create and call a Windows COM object from 
Linux, that would be the most direct solution...

But reading what I can about WINE, I'm guessing that the only easy thing 
to do is to write a Windows server application with winegcc and either 
connect to it through a socket - or to have it spawn a Linux application 
that it has a stream to.  But I need some sample code to know how to do 
this, since I don't have too much time to experiment.

Just to make it clear why I'm doing this - I have some wonderful TTS 
voices (Neospeech's SAPI5 Japanese voices) installed in WINE and I need 
to be able to invoke them from a Linux program.

Thanks in advance for any pointers,

Joshua Scholar



From m.bosner at c-t-b.info  Mon Nov  5 01:39:33 2007
From: m.bosner at c-t-b.info (Martin Bosner)
Date: Mon, 5 Nov 2007 08:39:33 +0100
Subject: #winehq admin troubles
In-Reply-To: <53e3a9930711042309u674a9f96ua2abafeb0a2387c7@mail.gmail.com>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
	<f3f1b91a0711042112m2af5c932kbcb84a769ebf795c@mail.gmail.com>
	<53e3a9930711042309u674a9f96ua2abafeb0a2387c7@mail.gmail.com>
Message-ID: <200711050839.34068.m.bosner@c-t-b.info>

On Monday 05 November 2007 08:09:03 Tom Wickline wrote:
> On 11/5/07, Chris Morgan <chmorgan at gmail.com> wrote:
> > I agree that this isn't something that should continue. Kicking should
> > be reserved for people being disruptive. There is no reason to be
> > anything other than polite to users asking for help.
> >
> > Allowing this kind of behavior to continue reflects poorly on us as a
> > community. I'd like to suggest that this be the last time we hear
> > about issues like this. If it happens again I'd like to propose a
> > graduated scale of irc channel bans, starting at one month, for
> > Vitamin.
> >
> > Chris
>
> I hope this is a joke! There is absolutely nothing wrong with they way
> Vitamin handles himself in #winehq. When these people come crying to
> wine-devel they leave out about 98% of the facts, 100% of the time.
>
> Tom

but the resolution is not and shouldnt be a kick. as far as i know vitamin did the exact same some weeks ago. did that help? no. if he would tell them that upgrading is not a good idea because of XXX it could help more... or just change the topic... or or or.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071105/71882107/attachment.htm 

From patrol at sinus.cz  Mon Nov  5 02:50:46 2007
From: patrol at sinus.cz (Pavel Troller)
Date: Mon, 5 Nov 2007 09:50:46 +0100
Subject: #winehq admin troubles
In-Reply-To: <472EAD8F.2020203@kievinfo.com>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
	<472EAD8F.2020203@kievinfo.com>
Message-ID: <20071105085046.GA13212@tangens.sinus.cz>

Hi!
  Please, people, live in love and peace :-)! I think I see what happened...
Parts of the previous mail are swapped, it's better for the explanation.

Vitamin said:
> 
> You omitted the reason:
> 
> Nov 04 20:30:56 <usrl>  Gunn: that's an old version. Go to winehq.org and 
> follow their instructions to add them to your repos.
> Nov 04 20:31:05 <vitamin>       fester, how are you "loading" that program?
> Nov 04 20:31:09 <usrl>  Gunn: it will be more up to date that way
> Nov 04 20:31:25 <vitamin>       usrl, that's not a problem here
> Nov 04 20:31:37 <usrl>  vitamin: I know, but it's helpful anyway.

To <usrl>: This sentence was probably not clever. You are trying to explain
things to somebody who knows probably much more than you (and did you REALLY
know, that there is not a problem, as you write?). Some people are taking it
too personally and they don't like it. Maybe vitamin knew that there are more
regressions in those new versions (there are, I compiled wine this week and
my son complained loudly, I had to restore .45 or something about it), so he
thought that it's better not to recommend an update.

> 
> You got into middle of conversation, suggested something that user does not 
> need (as 0.9.47 and 0.9.48 are still broken for most Source games).

The line above is very important. I think it had to be sent to the channel.
Please imagine yourself saying:

(09:33:15 PM) vitamin: usrl, this will not help, as 0.9.47 and 0.9.48 are
still broken for most Source games.

> feba thatl wrote:
> > 
> > (09:32:56 PM) The topic for #winehq is:[long topic removed]
> > (09:33:09 PM) ***vitamin fucking tired all knowning noobs!
> > (09:33:15 PM) <Name removed, same person from #ubuntu>: wine: cannot
> > find '/media/cdrom0/intro.exe'
> > (09:33:15 PM) vitamin: usrl, you better leave
> > (09:33:25 PM) usrl: Why?
> > (09:33:32 PM) mode (+b *!*n=feba@*.hsd1.ks.comcast.net ) by vitamin

Banning instead of a single word of reply ? Please try to see the problem
from the usrl's perspective: 
  - He wanted to help somebody
  - He didn't know what you did know (see below)
  - You requested him to leave, without any explanation
  - When he asked why (exactly as I would do in his place), he was forcefully
    banned.

> > (09:33:32 PM) You have been kicked by vitamin: (vitamin)
> > 
> 
> But since it seems that no one really gives a rip about what's going on on 
> the channel, please whoever has higher access then me, remove me from the 
> ops list. I don't want to explain myself every time some some one feels 
> "wronged" and have to run to the mailing list to complain about it.
> 

No NO no :-). I think you are not bad, at all!!! I can exactly imagine what
did you feel - that you were doing your best to explain things to an user and
that usrl's entry and suggestions were wrong from your point of view. But
please try to imagine that you are a policeman, a lost driver is asking you
how to drive to a supermarket, and another person is trying to explain it
too, but he's wrong. Would you put the second person (and a few seconds later
the first one too) to a jail ? I hope no :-). And with your admin rights it's
similar. You have them to protect the channel from all unwanted traffic, keep
it going well and smooth. So the only thing you can maybe learn from those
cases (if you want) is that you can wait for a second, make a deep breath, 
and think twice, what are the users REALLY trying to do, before you decide to
kick/ban them.

> 
> Vitaliy.
> 

With regards, Pavel Troller


From cyrix12 at cox.net  Mon Nov  5 03:26:29 2007
From: cyrix12 at cox.net (darckness)
Date: Mon, 5 Nov 2007 04:26:29 -0500
Subject: #winehq admin troubles
Message-ID: <20071105042629.06da62a4@darctek.ath.cx>

>> I agree that this isn't something that should continue. Kicking
>> should be reserved for people being disruptive. There is no reason
>> to be anything other than polite to users asking for help.
>>
>> Allowing this kind of behavior to continue reflects poorly on us as a
>> community. I'd like to suggest that this be the last time we hear
>> about issues like this. If it happens again I'd like to propose a
>> graduated scale of irc channel bans, starting at one month, for
>> Vitamin.
>>
>> Chris  
>
>I hope this is a joke! There is absolutely nothing wrong with they way
>Vitamin handles himself in #winehq. When these people come crying to
>wine-devel they leave out about 98% of the facts, 100% of the time.
>
>Tom

I don't write in to wine-devel often, nor am I a developer, but I
completely agree with Tom on this one.  The amount of bad information
given out by users to other users in #winehq is positively staggering,
and I cannot fault Vitamin at all for the way he acts.  The fact
that he stays in that channel to try and help people after all the crap
he has to deal with is incredible.

If you come to #winehq with a question and a helpful attitude, Vitamin
will usually do his best to try and troubleshoot the issue, and he is
quite cordial while doing it.

If, however, you come in with a know-it-all attitude and try arguing
with him or giving out tips which are known to be erroneous, you do not
belong in #winehq until you can control yourself.  I've seen this happen
countless times, and people who get kicked never seem to understand
that they fit this negative, unhelpful mold all too well.

-darckness


From kai.blin at gmail.com  Mon Nov  5 03:39:32 2007
From: kai.blin at gmail.com (Kai Blin)
Date: Mon, 5 Nov 2007 10:39:32 +0100
Subject: #winehq admin troubles
In-Reply-To: <f3f1b91a0711042112m2af5c932kbcb84a769ebf795c@mail.gmail.com>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
	<f3f1b91a0711042112m2af5c932kbcb84a769ebf795c@mail.gmail.com>
Message-ID: <200711051039.41339.kai.blin@gmail.com>

On Monday 05 November 2007 06:12:42 Chris Morgan wrote:

> I agree that this isn't something that should continue. Kicking should
> be reserved for people being disruptive. There is no reason to be
> anything other than polite to users asking for help.

How much time do you spend in #winehq? I know I don't spend much time there, 
but I know it's a thankless job. four out of five people who ask for help 
there seem to
a) expect you to drop everything you're doing to help them
b) insult the person trying to help if the suggestion doesn't work
c) threaten to go back to windows and expect you care.
d) leave before you get around to answer

After we had talked about improving the user experience in #winehq on 
WineConf, I tried to actually be online there more often, and that's the 
usual pattern I see there.

> Allowing this kind of behavior to continue reflects poorly on us as a
> community.

This is true, I'm not going to argue about that. However, I think your 
conclusion is wrong.

> I'd like to suggest that this be the last time we hear 
> about issues like this. If it happens again I'd like to propose a
> graduated scale of irc channel bans, starting at one month, for
> Vitamin.

You're suggesting to ban the single most active supporter on #winehq. I think 
this is a bad idea. What we really need to do is to get more people in there 
doing support so that people like vitamin can take some time off if they're 
about to loose their temper as opposed to kicking annoying (whatever that 
means) users.

Personally, I would like to see more people stepping up to help run #winehq 
instead of just complaining about the work of one of the very few people who 
actually are out there helping users.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071105/b67267ff/attachment.pgp 

From m.b.lankhorst at gmail.com  Mon Nov  5 03:44:01 2007
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Mon, 05 Nov 2007 10:44:01 +0100
Subject: Linux/Windows app connection, how?
In-Reply-To: <fglsq3$bup$2@ger.gmane.org>
References: <fglsq3$bup$2@ger.gmane.org>
Message-ID: <472EE5E1.40201@gmail.com>

Hello Joshua,

Joshua Scholar schreef:
> I really want to have some way to communicate between a Linux program and 
> a Windows program running under WINE.  The connection doesn't need to be 
> high speed, a stream is fine - I'm just sending some unicode text.  I'm 
> writing both programs myself, so I can implement this in the easiest way, 
> though if there was some way to create and call a Windows COM object from 
> Linux, that would be the most direct solution...
>
> But reading what I can about WINE, I'm guessing that the only easy thing 
> to do is to write a Windows server application with winegcc and either 
> connect to it through a socket - or to have it spawn a Linux application 
> that it has a stream to.  But I need some sample code to know how to do 
> this, since I don't have too much time to experiment.
>   
This comes up from time to time, the solution is always compile a
winelib app with winegcc then use sockets or something to communicate.
In your server app you can use windows and linux code mixed together.

Regards,
Maarten.


From febaen at gmail.com  Mon Nov  5 04:22:20 2007
From: febaen at gmail.com (feba thatl)
Date: Mon, 5 Nov 2007 04:22:20 -0600
Subject: #winehq admin troubles
In-Reply-To: <200711051039.41339.kai.blin@gmail.com>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
	<f3f1b91a0711042112m2af5c932kbcb84a769ebf795c@mail.gmail.com>
	<200711051039.41339.kai.blin@gmail.com>
Message-ID: <e6cdb3980711050222q686cfeedj16b745d0609f6ec5@mail.gmail.com>

>The line above is very important. I think it had to be sent to the channel.
>Please imagine yourself saying:

>(09:33:15 PM) vitamin: usrl, this will not help, as 0.9.47 and 0.9.48 are
>still broken for most Source games.

See, exactly. There is no reason to kick someone for making a comment
and trying to help someone. If he had said that, or even just said
"Usrl, please shut up and just let me handle this." I wouldn't really
see a problem with it. It's the fact that I was banned for
recommending to someone to add the wine repos to their sources and
then asking why I was kicked that I find unacceptable.

>If, however, you come in with a know-it-all attitude and try arguing
>with him or giving out tips which are known to be erroneous,

That's exactly the thing. Even by Vitamin's own admission above, I
only said a few lines, none of which had a 'know-it-all' attitude
about them, and obviously I didn't think they were wrong. Worse
though, he didn't explain why they were wrong, or even that they were
wrong. And the thing is, this is the same advice Vitamin gave me
rather rudely a couple months ago, that my wine version was out of
date, and to get a more recent version. I was trying to help this
person, who again had been complaining about people being mean to
them.

I didn't argue with him a peep. I recommended to someone that they do
such a thing to upgrade Wine, stated that keeping upgraded is good
anyway, and then was kicked. I came back and asked why, and was
banned, as far as I can tell with no expiry date. I don't know what
the other user was kicked for, but I can't imagine it was much more
severe.

I'd really like those of you who claim I'm lying or not telling the
entire truth to stop though. I told the entire truth, I went in to try
to be nice to someone who felt like they were being treated harshly, I
made a couple innocent comments, and was kicked. I came back, asked
why, and was banned. Nowhere in there was I asked politely to refrain
from anything, or even warned for that matter.

I want to make it clear though, this is not entirely about Vitamin.
While I do find that his actions are unacceptable for what is probably
the first place a lot of Wine users go for help, I don't think it's
entirely his fault. It's also, like as mentioned above, probably
because he has to deal with a lot of crap in IRC because he feels like
he has to help everyone. I feel the same in other places, and I don't
think I can honestly say that I wouldn't abuse power if it was given
to me. I have no doubt that he has contributed much to the project and
helped many users.

The problem I see is that there does not seem to be any rules or
requirements for admin actions. This can be a good thing, but when
you're kicking people who are just trying to be helpful, without
warning or explanation, it isn't.

>If you come to #winehq with a question and a helpful attitude, Vitamin
>will usually do his best to try and troubleshoot the issue, and he is
>quite cordial while doing it.

Yes, I don't doubt this. Like I said, just last night I had a very
civil conversation with him, and he did try to help. Obviously if he
did nothing but sit around and ban people, there would be more
discussion of this than there is. I am not saying that he is horrible
or should have his op rights removed, just that there needs to be some
basic treatments established for handling people. Again, a ban without
a polite request to stop, a warning, or even an explanation, strikes
most people as not only very rude, but also just confusing.

>people who get kicked never seem to understand
>that they fit this negative, unhelpful mold all too well.

Perhaps it's because nobody ever brought it to their attention? Still,
I'd rather see someone who is sincerely trying to help get it wrong
than someone who can solve it in a heartbeat who kicks the people they
are helping when they don't like the answers they're getting.

Again, you have to consider, if your mother needed Wine support, is
#winehq really a place you think she'd find helpful? Ignoring the
mothers with computer science degrees, many probably wouldn't have a
clue what they're doing. It can be annoying, of course, but that comes
with being a channel that's supposed to support end users. This is not
to say I disagree with banning people who are rude to the people
trying to help them, the above mentioned 4 out of 5 people, just that
there need to be more guidelines on when and why someone can be kicked
or banned.


From hans at it.vu.nl  Mon Nov  5 04:49:52 2007
From: hans at it.vu.nl (Hans Leidekker)
Date: Mon, 5 Nov 2007 11:49:52 +0100
Subject: #winehq admin troubles
In-Reply-To: <200711051039.41339.kai.blin@gmail.com>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
	<f3f1b91a0711042112m2af5c932kbcb84a769ebf795c@mail.gmail.com>
	<200711051039.41339.kai.blin@gmail.com>
Message-ID: <200711051149.52633.hans@it.vu.nl>

On Monday 05 November 2007 10:39:32 Kai Blin wrote:

> Personally, I would like to see more people stepping up to help run #winehq 
> instead of just complaining about the work of one of the very few people who 
> actually are out there helping users.

As I understand this history feba thatl tried to do exactly that: help
others on our user channel... and got banned by vitamin. So if vitamin
is really under stress from all these complaining users, he's not helping
himself by kicking out others who try to help.

 -Hans


From dmitry at codeweavers.com  Mon Nov  5 05:03:24 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 5 Nov 2007 19:03:24 +0800
Subject: 'kernel32_test loader' causes BSOD on XP SP1
References: <Pine.LNX.4.64.0711041749210.2265@amboise.dolphin>
Message-ID: <000a01c81f9b$7fe1de40$6700fea9@DMITRY>

"Francois Gouget" <fgouget at free.fr> wrote:

> So I'm running tests in an XP SP1 VM and yet, you can see no such 
> results on http://test.winehq.org/data/. The reason for is that the 
> 'kernel32_test loader' causes XP SP1 to crash, so that winetest.exe 
> never has an opportunity to send the results.
> 
> So I investigated this and the specific test that causes the crash is 
> this one:
> 
>         { &dos_header, sizeof(dos_header),
>           1, sizeof(IMAGE_OPTIONAL_HEADER), 0x200, 0x200,
>          sizeof(dos_header) + sizeof(nt_header) + sizeof(IMAGE_SECTION_HEADER) + 0x1000,
>           sizeof(dos_header) + sizeof(nt_header) + sizeof(IMAGE_SECTION_HEADER),
>           ERROR_SUCCESS
>         },
> 
> I noticed the 0x1000. Shouldn't this be a 0x200? Or is that the whole 
> point of this test? In any case, changing it to 0x200 avoids crashing 
> SP1.
> 
> Another weird way to avoid the crash is to introduce a Sleep(1000) just 
> before the LoadLibrary().
> 
> I've summed up both ways to avoid the crash in the patch below. 
> Hopefully someone more familiar with the loader than me can have a look 
> into this and suggest a proper fix.

A proper fix would be either to remove that particular test altogether, or
replace 0x1000 by 0x200.

-- 
Dmitry.


From alex at thehandofagony.com  Mon Nov  5 05:09:18 2007
From: alex at thehandofagony.com (Alexander Nicolaysen =?iso-8859-1?q?S=F8rnes?=)
Date: Mon, 5 Nov 2007 12:09:18 +0100
Subject: #winehq admin troubles
In-Reply-To: <200711051149.52633.hans@it.vu.nl>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
	<200711051039.41339.kai.blin@gmail.com>
	<200711051149.52633.hans@it.vu.nl>
Message-ID: <200711051209.18951.alex@thehandofagony.com>

On Monday 05 November 2007 11:49:52 Hans Leidekker wrote:
> On Monday 05 November 2007 10:39:32 Kai Blin wrote:
> > Personally, I would like to see more people stepping up to help run
> > #winehq instead of just complaining about the work of one of the very few
> > people who actually are out there helping users.
>
> As I understand this history feba thatl tried to do exactly that: help
> others on our user channel... and got banned by vitamin. So if vitamin
> is really under stress from all these complaining users, he's not helping
> himself by kicking out others who try to help.
>
>  -Hans


No, he was just telling the user to upgrade Wine, which vitamin knew would 
have no effect whatsoever.  The only thing that could have benefited from 
that advice would have been his self-image.



Alexander N. S?rnes


From ead1234 at hotmail.com  Mon Nov  5 05:08:58 2007
From: ead1234 at hotmail.com (EA Durbin)
Date: Mon, 5 Nov 2007 05:08:58 -0600
Subject: #winehq admin troubles
In-Reply-To: <200711051209.18951.alex@thehandofagony.com>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
	<200711051039.41339.kai.blin@gmail.com>
	<200711051149.52633.hans@it.vu.nl> 
	<200711051209.18951.alex@thehandofagony.com>
Message-ID: <BAY128-W19CE963640FF37CE3A6C61AB880@phx.gbl>


----------------------------------------> From: alex at thehandofagony.com> To: wine-devel at winehq.org> Subject: Re: #winehq admin troubles> Date: Mon, 5 Nov 2007 12:09:18 +0100> CC: hans at it.vu.nl; kai.blin at gmail.com>> On Monday 05 November 2007 11:49:52 Hans Leidekker wrote:>> On Monday 05 November 2007 10:39:32 Kai Blin wrote:>>> Personally, I would like to see more people stepping up to help run>>> #winehq instead of just complaining about the work of one of the very few>>> people who actually are out there helping users.>>>> As I understand this history feba thatl tried to do exactly that: help>> others on our user channel... and got banned by vitamin. So if vitamin>> is really under stress from all these complaining users, he's not helping>> himself by kicking out others who try to help.>>>> -Hans>>> No, he was just telling the user to upgrade Wine, which vitamin knew would> have no effect whatsoever. The only thing that could have benefited from> that advice would have been his self-image.>>>> Alexander N. S?rnes>>

So we kick people who try to help, even though they may not know the proper answer?
_________________________________________________________________
Windows Live Hotmail and Microsoft Office Outlook ? together at last. ?Get it now.
http://office.microsoft.com/en-us/outlook/HA102225181033.aspx?pid=CL100626971033

From dmitry at codeweavers.com  Mon Nov  5 05:27:31 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 5 Nov 2007 19:27:31 +0800
Subject: USER32: win16 applications should not see long filenames returned
	from dialog control (try 2)
References: <a71bd89a0711021525y41a56745yc768f734788b6ceb@mail.gmail.com>
	<46262.200.110.83.214.1194107791.squirrel@www.palosanto.com>
Message-ID: <005c01c81f9e$dd0e12c0$6700fea9@DMITRY>

"Alex Villac?s Lasso" <a_villacis at palosanto.com> wrote:

>  BOOL16 WINAPI DlgDirSelectEx16( HWND16 hwnd, LPSTR str, INT16 len, INT16 id )
>  {
> -    return DlgDirSelectExA( WIN_Handle32(hwnd), str, len, id );
> +    BOOL16 ret = DlgDirSelectExA( WIN_Handle32(hwnd), str, len, id );
> +    GetShortPathNameA(str, str, len);
> +    return ret;
>  }

>  BOOL16 WINAPI DlgDirSelectComboBoxEx16( HWND16 hwnd, LPSTR str, INT16 len,
>                                          INT16 id )
>  {
> -    return DlgDirSelectComboBoxExA( WIN_Handle32(hwnd), str, len, id );
> +    BOOL16 ret = DlgDirSelectComboBoxExA( WIN_Handle32(hwnd), str, len, id );
> +    GetShortPathNameA(str, str, len);
> +    return ret;
>  }

You are passing garbage to GetShortPathNameA in the case of failure.

-- 
Dmitry. 



From fgouget at free.fr  Mon Nov  5 05:33:15 2007
From: fgouget at free.fr (Francois Gouget)
Date: Mon, 5 Nov 2007 12:33:15 +0100 (CET)
Subject: 'kernel32_test loader' causes BSOD on XP SP1
In-Reply-To: <000a01c81f9b$7fe1de40$6700fea9@DMITRY>
References: <Pine.LNX.4.64.0711041749210.2265@amboise.dolphin>
	<000a01c81f9b$7fe1de40$6700fea9@DMITRY>
Message-ID: <Pine.LNX.4.64.0711051231180.13679@amboise.dolphin>

On Mon, 5 Nov 2007, Dmitry Timoshkov wrote:
[...]
> A proper fix would be either to remove that particular test altogether, or
> replace 0x1000 by 0x200.

Oops, I see that in the patch I sent it was still set to 0xf00 which was 
just an experiment. Setting it to 0x200 works for me. I'm sending a 
patch.


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
In theory, theory and practice are the same, but in practice they're different.


From stefandoesinger at gmx.at  Mon Nov  5 05:51:10 2007
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Mon, 5 Nov 2007 12:51:10 +0100
Subject: #winehq admin troubles
In-Reply-To: <200711051039.41339.kai.blin@gmail.com>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
	<f3f1b91a0711042112m2af5c932kbcb84a769ebf795c@mail.gmail.com>
	<200711051039.41339.kai.blin@gmail.com>
Message-ID: <200711051251.17866.stefandoesinger@gmx.at>

Am Montag, 5. November 2007 10:39:32 schrieb Kai Blin:
> On Monday 05 November 2007 06:12:42 Chris Morgan wrote:
> > I agree that this isn't something that should continue. Kicking should
> > be reserved for people being disruptive. There is no reason to be
> > anything other than polite to users asking for help.
>
> How much time do you spend in #winehq? I know I don't spend much time
> there, but I know it's a thankless job. four out of five people who ask for
> help there seem to
> a) expect you to drop everything you're doing to help them
> b) insult the person trying to help if the suggestion doesn't work
> c) threaten to go back to windows and expect you care.
> d) leave before you get around to answer
I absolutely agree. Helping people in #winehq is a really bad job. Many people 
who go there seem to expect you to wave your magic wand to make their problem 
go away with zero effort from their side, and to make that instantly and free 
of charge. I did help in #winehq for about 6 months until I started working 
at codeweavers as now I'm paid to give support there.

Another aspect that was mentioned in Wineconf was that #winehq worked quite 
well until gamers started to use wine. The atmosphere in #winehq seems to be 
close to the general gaming atmosphere. Did you ever read the letters to the 
editor of a gaming magazine? I did that in two or 3, and I was shocked about 
that. Similarly the chat in an average counter-strike game(although cs is 
propably an extreme case).

What is also interesting that the atmosphere in #crossover is really sane. In 
the 18 months I've been in there, we had to ban only one person who asked me 
for a pirated copy of crossover. People there explain their problems well, 
and are good at following steps to fix them, and if it turns out that 
CrossOver is not the solution to their problems they do not threaten you. 
I've never seen a sentence like "I'll go to windows if you don't fix that 
instantly" or "Fix that ASAP or I'll get Parallels". This could be because we 
have separate means of support with dedicated support personal, but most 
people who go to crossover don't know about it even.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071105/42c79461/attachment.pgp 

From rob at codeweavers.com  Mon Nov  5 06:01:21 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Mon, 05 Nov 2007 12:01:21 +0000
Subject: USER32: win16 applications should not see long filenames returned
	from dialog control (try 2)
In-Reply-To: <005c01c81f9e$dd0e12c0$6700fea9@DMITRY>
References: <a71bd89a0711021525y41a56745yc768f734788b6ceb@mail.gmail.com>	<46262.200.110.83.214.1194107791.squirrel@www.palosanto.com>
	<005c01c81f9e$dd0e12c0$6700fea9@DMITRY>
Message-ID: <472F0611.7080408@codeweavers.com>

Dmitry Timoshkov wrote:
> "Alex Villac?s Lasso" <a_villacis at palosanto.com> wrote:
>
>   
>>  BOOL16 WINAPI DlgDirSelectEx16( HWND16 hwnd, LPSTR str, INT16 len, INT16 id )
>>  {
>> -    return DlgDirSelectExA( WIN_Handle32(hwnd), str, len, id );
>> +    BOOL16 ret = DlgDirSelectExA( WIN_Handle32(hwnd), str, len, id );
>> +    GetShortPathNameA(str, str, len);
>> +    return ret;
>>  }
>>     
>
>   
>>  BOOL16 WINAPI DlgDirSelectComboBoxEx16( HWND16 hwnd, LPSTR str, INT16 len,
>>                                          INT16 id )
>>  {
>> -    return DlgDirSelectComboBoxExA( WIN_Handle32(hwnd), str, len, id );
>> +    BOOL16 ret = DlgDirSelectComboBoxExA( WIN_Handle32(hwnd), str, len, id );
>> +    GetShortPathNameA(str, str, len);
>> +    return ret;
>>  }
>>     
>
> You are passing garbage to GetShortPathNameA in the case of failure.
>   

And more importantly, the code in this patch is relying on 
GetShortPathNameA creating a copy of the long filename before copying it 
back.

Furthermore, the long file name might exceed the limit of len, whilst 
the short file name might not, prematurely truncating the short file name.

-- 
Rob Shearman



From febaen at gmail.com  Mon Nov  5 06:06:23 2007
From: febaen at gmail.com (feba thatl)
Date: Mon, 5 Nov 2007 06:06:23 -0600
Subject: #winehq admin troubles
In-Reply-To: <e6cdb3980711050335n69bc6c68yc05bf1987bfcadfe@mail.gmail.com>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
	<200711051039.41339.kai.blin@gmail.com>
	<200711051149.52633.hans@it.vu.nl>
	<200711051209.18951.alex@thehandofagony.com>
	<e6cdb3980711050335n69bc6c68yc05bf1987bfcadfe@mail.gmail.com>
Message-ID: <e6cdb3980711050406t48189c20m8115bab711d6d07a@mail.gmail.com>

> On 11/5/07, Alexander Nicolaysen S?rnes <alex at thehandofagony.com> wrote:
> On Monday 05 November 2007 11:49:52 Hans Leidekker wrote:
> > On Monday 05 November 2007 10:39:32 Kai Blin wrote:
> > > Personally, I would like to see more people stepping up to help run
> > > #winehq instead of just complaining about the work of one of the very few
> > > people who actually are out there helping users.
> >
> > As I understand this history feba thatl tried to do exactly that: help
> > others on our user channel... and got banned by vitamin. So if vitamin
> > is really under stress from all these complaining users, he's not helping
> > himself by kicking out others who try to help.
> >
> >  -Hans
>
>
> No, he was just telling the user to upgrade Wine, which vitamin knew would
> have no effect whatsoever.  The only thing that could have benefited from
> that advice would have been his self-image.
>
>
>
> Alexander N. S?rnes
>
>
>

What? How does giving someone a basic bit of advice, usually the first
advice you hear (It's even in the channel's topic), do anything to
improve anyone's self-image? If I was going to try to feel better
about myself, it wouldn't be by sitting on IRC acting like I know all
the answers to something I don't. I no more help people for my
self-image than Vitamin kicks people for entertainment-- that's not
the case, and we shouldn't act like it is.

Even still, why should someone who helps others because it makes them
feel good be shunned? They can still help. Not to mention, where do
you draw the line? People who can only give basic advice and their
best guess? People who know more than that, but are off the mark?

People shouldn't be expected to think in code and memorize every
tidbit under the sun if they just want to try to help people, there's
no reason someone should be kicked for making a good faith effort,
especially without being told otherwise. I could understand if I had
been sitting in the channel, and popped in with a comment that was
obviously out of place based on what had already been mentioned, or if
I had been asked to stop, or if my advice was obviously and
intentionally harmful (telling people to rm -rf / and such), but it
wasn't.

If people really are expected to know everything there is to know
before they try to help, is it really such a wonder that there's only
a few solid contributors left, and they're stressed from it?

This really has little to do with myself, Vitamin, the other person,
or what happened; it's about winehq's problems where it should be
concerned with helping people. There are definite civility problems;
of course on the side of those that seek help (As many feel like
customers instead of part of a community), but also on the side of
those that give it. Now, I can obviously understand mistreating people
who are just screwing around, or treating people who are trying to
help them like crap, but it's treating people that are trying to give
or get help the same way that bugs me. I can understand it how it
happens, like I said above, I'm not saying I'd be better in such a
situation.

I have nothing to gain from this being corrected that anyone else
seeking help wouldn't, and I'm not asking for any action to be taken
against Vitamin for anything, at least yet. I've got nothing against
him-- I might have a sour taste in my mouth when I cross him, but I
don't think he's a bad person. He knows and cares a lot about
something, tries to improve and help people with it, and dislikes
people who he perceives as stupid or harmful; even to the point where
he becomes a bit too annoyed and starts mislabeling people, or
treating people who don't deserve it wrongly. I don't blame him for
this, as I've done the same myself. Multiple times. Under different
circumstances, I could easily see us being friends.

What I want to see changed here isn't treatment of any specific
person-- in fact I would probably disagree with any action major
enough to matter being taken against Vitamin, as again, from what I've
seen he seems to be a valuable asset to Wine and #winehq-- just for
some sort of adoption of rules for how to treat other people being
established, even if they're as simple as:

1. Users: Be nice to the helpers. We are volunteers, not employees,
and have no obligation to help you.
2. Helpers and Admins: Remember Hanlon's razor.


P.S. I accidentally only sent this to one email address, and had some
trouble digging up the sent message to try to get it out again. Sorry
about any trouble this might have.


From joshscholar at nightstudies.net  Mon Nov  5 04:27:27 2007
From: joshscholar at nightstudies.net (Josh Scholar)
Date: Mon, 5 Nov 2007 02:27:27 -0800
Subject: Linux/Windows app connection, how?
In-Reply-To: <472EE5E1.40201@gmail.com>
References: <fglsq3$bup$2@ger.gmane.org> <472EE5E1.40201@gmail.com>
Message-ID: <75939f220711050227j5141fd64p19e3323fc6dfad53@mail.gmail.com>

OK.  I need to access COM to do this, and I notice that in "What it WINELIB"
it says "Also missing are some of the more exotic features of Microsoft's
compiler like native COM support".

I'm hoping that "native COM support" just means some new fancy add-on that
wasn't in Visual Studio 6.0, and that I still do COM, but will have to find
old C and IDL examples from Petzold or something like that.

Is that correct?

Unfortunately, I've never really understood COM very well.  Is there an IDL
compiler for WINE?  I  know I need that much.

Josh Scholar

On 11/5/07, Maarten Lankhorst <m.b.lankhorst at gmail.com> wrote:
>
> Hello Joshua,
>
> Joshua Scholar schreef:
> > I really want to have some way to communicate between a Linux program
> and
> > a Windows program running under WINE.  The connection doesn't need to be
> > high speed, a stream is fine - I'm just sending some unicode text.  I'm
> > writing both programs myself, so I can implement this in the easiest
> way,
> > though if there was some way to create and call a Windows COM object
> from
> > Linux, that would be the most direct solution...
> >
> > But reading what I can about WINE, I'm guessing that the only easy thing
> > to do is to write a Windows server application with winegcc and either
> > connect to it through a socket - or to have it spawn a Linux application
> > that it has a stream to.  But I need some sample code to know how to do
> > this, since I don't have too much time to experiment.
> >
> This comes up from time to time, the solution is always compile a
> winelib app with winegcc then use sockets or something to communicate.
> In your server app you can use windows and linux code mixed together.
>
> Regards,
> Maarten.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071105/a4d11ac2/attachment-0001.htm 

From julliard at winehq.org  Mon Nov  5 07:10:23 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 05 Nov 2007 14:10:23 +0100
Subject: libs/wine: Avoid compiler warnings about unused parameter(-W)
In-Reply-To: <1194177948.7133.7.camel@p4> (Detlef Riekenberg's message of
	"Sun, 04 Nov 2007 13:05:48 +0100")
References: <1194177948.7133.7.camel@p4>
Message-ID: <87ejf4j0sg.fsf@wine.dyndns.org>

Detlef Riekenberg <wine.dev at web.de> writes:

> Changelog:
> libs/wine: Avoid compiler warnings about unused parameter(-W)
>
> The code-sequence is optimized away.
> Another option would be "__attribute__((unused__))"
> or removing the function.

The best option is to not enable the warning. There are plenty of cases
where it's legitimate to not use a parameter, that warning is not
useful.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Mon Nov  5 07:14:16 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 05 Nov 2007 14:14:16 +0100
Subject: mshtml #3: Store HTMLDocument pointer in BSCallback object.
In-Reply-To: <472B7231.3070201@codeweavers.com> (Jacek Caban's message of
	"Fri, 02 Nov 2007 19:53:37 +0100")
References: <472B7231.3070201@codeweavers.com>
Message-ID: <87abpsj0lz.fsf@wine.dyndns.org>

Jacek Caban <jacek at codeweavers.com> writes:

> ---
>  dlls/mshtml/mshtml_private.h |    5 ++++-
>  dlls/mshtml/navigate.c       |   27 ++++++++++++++++++++++++---
>  dlls/mshtml/persist.c        |    2 +-
>  dlls/mshtml/task.c           |    7 ++++---
>  4 files changed, 33 insertions(+), 8 deletions(-)

That one is broken here:

../../../tools/runtest -q -P wine -M mshtml.dll -T ../../.. -p mshtml_test.exe.so dom.c && touch dom.ok
wine: Unhandled page fault on write access to 0x006d005d at address 0x61dfd127 (thread 0009), starting debugger...
WineDbg starting on pid 0008
Unhandled exception: page fault on write access to 0x006d005d in 32-bit code (0x61dfd127).
Register dump:
 CS:0023 SS:002b DS:002b ES:002b FS:0063 GS:006b
 EIP:61dfd127 ESP:0033fc30 EBP:0033fc48 EFLAGS:00010206(   - 00      - RIP1)
 EAX:00129c78 EBX:61e34074 ECX:006d0065 EDX:00129c78
 ESI:006d0025 EDI:00129cf4
Stack dump:
0x0033fc30:  00ee0314 00f84550 00000000 00000000
0x0033fc40:  804b0000 00129c78 0033fda8 61e123ea
0x0033fc50:  00129c78 00f96da8 00000000 00000000
0x0033fc60:  00000000 00000000 0033fc88 7bc4125e
0x0033fc70:  00129c78 61e2de2a 00ee0000 7bc3283f
0x0033fc80:  00000000 00f84538 0033fd38 00f96da8
Backtrace:
=>1 0x61dfd127 set_document_bscallback+0x57(doc=0x129c78, callback=0xf96da8) [/home/julliard/wine/wine/dlls/mshtml/navigate.c:855] in mshtml (0x0033fc48)
  2 0x61e123ea set_moniker+0x69a(This=0x129c78, mon=0xf84538, pibc=0x0, bind_complete=0x0) [/home/julliard/wine/wine/dlls/mshtml/persist.c:327] in mshtml (0x0033fda8)
  3 0x61e12a26 PersistStreamInit_Load+0x66(iface=0x129cbc, pStm=0xf84510) [/home/julliard/wine/wine/dlls/mshtml/persist.c:676] in mshtml (0x0033fde8)
  4 0x60512eb1 run_domtest+0x131(str=0x605284c0, test=0x605142b0) [/home/julliard/wine/wine/dlls/mshtml/tests/dom.c:1161] in mshtml_test (0x0033fe58)
  5 0x6051326c func_dom+0x3c() [/home/julliard/wine/wine/dlls/mshtml/tests/dom.c:1254] in mshtml_test (0x0033fe68)
  6 0x6052713a run_test+0x14a(name=0x1103e7) [/home/julliard/wine/wine/dlls/mshtml/tests/../../../include/wine/test.h:389] in mshtml_test (0x0033fea8)
  7 0x6052779a main+0x15a(argc=<register ECX not in topmost frame>, argv=0x1103c8) [/home/julliard/wine/wine/dlls/mshtml/tests/../../../include/wine/test.h:437] in mshtml_test (0x0033fed8)
  8 0x6052786b __wine_spec_exe_entry+0x5b(peb=0x7ffdf000) [/home/julliard/wine/wine/dlls/winecrt0/exe_entry.c:36] in mshtml_test (0x0033ff08)
  9 0x7b873dae start_process+0xee(arg=0x0) [/home/julliard/wine/wine/dlls/kernel32/process.c:839] in kernel32 (0x0033ffe8)
  10 0x600288a7 wine_switch_to_stack+0x17() in libwine.so.1 (0x00000000)
0x61dfd127 set_document_bscallback+0x57 [/home/julliard/wine/wine/dlls/mshtml/navigate.c:855] in mshtml: movl	$0x0,0x38(%esi)
855	        iter->doc = NULL;

-- 
Alexandre Julliard
julliard at winehq.org


From mrmessiah at gmail.com  Mon Nov  5 07:20:02 2007
From: mrmessiah at gmail.com (Chris Howe)
Date: Mon, 5 Nov 2007 13:20:02 +0000
Subject: #winehq admin troubles
In-Reply-To: <200711051251.17866.stefandoesinger@gmx.at>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
	<f3f1b91a0711042112m2af5c932kbcb84a769ebf795c@mail.gmail.com>
	<200711051039.41339.kai.blin@gmail.com>
	<200711051251.17866.stefandoesinger@gmx.at>
Message-ID: <39c14e440711050520n6a466be3w50985db09a499948@mail.gmail.com>

On Nov 5, 2007 11:51 AM, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>
> I absolutely agree. Helping people in #winehq is a really bad job. Many people
> who go there seem to expect you to wave your magic wand to make their problem
> go away with zero effort from their side, and to make that instantly and free
> of charge.

> Another aspect that was mentioned in Wineconf was that #winehq worked quite
> well until gamers started to use wine. The atmosphere in #winehq seems to be
> close to the general gaming atmosphere. Did you ever read the letters to the
> editor of a gaming magazine? I did that in two or 3, and I was shocked about
> that. Similarly the chat in an average counter-strike game(although cs is
> propably an extreme case).

Well, you're involved in the right parts of Wine to know that the
demands of games are such that relatively small - I'm not even going
to say bugs, but unimplemented/unimplementable features - can cause
big usability problems over and above what you may see in a "normal"
app, especially with the fact that   support for the more office-y
apps has had a lot more of a headstart with work done to it so far.
You can see why an influx of gamers might seem to bring an influx of
problems.

But I think that the attitude thing is less to do with gaming and more
to do with the fact that Wine's getting better. When it did less, less
well, people could take it as they found it expecting that there were
going to be big problems. As it improves and grows, and the overall
satisfaction with it rises, people start to pick on the problems more,
and in harsher ways. It's like some kind of uncanny valley effect.
(The Unhappy Valley? ;) )

I only mention it in this thread because it's a sad fact but I fear
that as Wine improves, the tone of user support requests is going to
get more like this and be more of a problem. Particularly among the
section of the userbase, lets be charitable here, that are used to
expressing themselves in such terms anyway. It doesn't EXCUSE it, but
I think it behooves us to be ready for it.


From l_bratch at yahoo.co.uk  Mon Nov  5 08:48:39 2007
From: l_bratch at yahoo.co.uk (Luke Bratch)
Date: Mon, 5 Nov 2007 14:48:39 +0000 (GMT)
Subject: #winehq admin troubles
Message-ID: <237502.59201.qm@web26012.mail.ukl.yahoo.com>

Chris Morgan wrote:

> Allowing this kind of behavior to continue reflects
poorly on us as a
> community. I'd like to suggest that this be the last
time we hear
> about issues like this. If it happens again I'd like
to propose a
> graduated scale of irc channel bans, starting at one
month, for
> Vitamin.

I don't often hang out in #winehq, but I do follow
Bugzilla religiously, and I used to think bad things
about Vitamin too, because of the way he would reply
to various people (generally newcomers).

However as time goes on I can now see that he is quite
right in how he deals with people - it is good to be
strict with people, as it will hopefully give them a
kick up the backside in the right direction.

If I blundered into a new online community and didn't
behave in a constructive or useful manor, people
shouting at me would certainly make me get my act
sorted out, whereas people acting normally might make
me carry on in the same way.

After seeing Vitamin deal with people for a long time
now, I can say I totally agree with how he does
things.

Luke


      ___________________________________________________________ 
Want ideas for reducing your carbon footprint? Visit Yahoo! For Good  http://uk.promotions.yahoo.com/forgood/environment.html


From juan.lang at gmail.com  Mon Nov  5 09:10:49 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 5 Nov 2007 07:10:49 -0800
Subject: Linux/Windows app connection, how?
In-Reply-To: <75939f220711050227j5141fd64p19e3323fc6dfad53@mail.gmail.com>
References: <fglsq3$bup$2@ger.gmane.org> <472EE5E1.40201@gmail.com>
	<75939f220711050227j5141fd64p19e3323fc6dfad53@mail.gmail.com>
Message-ID: <3a768c550711050710s5c8efc0o994794728546bc38@mail.gmail.com>

Hi Josh,

(please bottom-post on this list.)

> OK.  I need to access COM to do this...

I don't know why you need COM to do this.  If you're writing the app
yourself, why not just use a socket?

> Unfortunately, I've never really understood COM very well.  Is there an IDL
> compiler for WINE?  I  know I need that much.

If you insist on using COM, yes, there's widl.
--Juan


From chmorgan at gmail.com  Mon Nov  5 10:10:54 2007
From: chmorgan at gmail.com (Chris Morgan)
Date: Mon, 5 Nov 2007 11:10:54 -0500
Subject: #winehq admin troubles
In-Reply-To: <200711051039.41339.kai.blin@gmail.com>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
	<f3f1b91a0711042112m2af5c932kbcb84a769ebf795c@mail.gmail.com>
	<200711051039.41339.kai.blin@gmail.com>
Message-ID: <f3f1b91a0711050810s6939ed7fyc4e11b1bda91cabd@mail.gmail.com>

On 11/5/07, Kai Blin <kai.blin at gmail.com> wrote:
> On Monday 05 November 2007 06:12:42 Chris Morgan wrote:
>
> > I agree that this isn't something that should continue. Kicking should
> > be reserved for people being disruptive. There is no reason to be
> > anything other than polite to users asking for help.
>
> How much time do you spend in #winehq? I know I don't spend much time there,
> but I know it's a thankless job. four out of five people who ask for help
> there seem to
> a) expect you to drop everything you're doing to help them
> b) insult the person trying to help if the suggestion doesn't work
> c) threaten to go back to windows and expect you care.
> d) leave before you get around to answer
>

I've spent a ton of time on #winehq helping users. Not so much time in
the last few years though.

I like Vitaliy and I think he is a smart guy. I was the one that
suggested he use Vitamin as his nick. What I don't like is that he
takes his frustration out on users looking for help. User support is
inherently difficult, users are typically not knowledgeable, hence
their reason for asking for support. I just don't want to see people
being kicked/banned because they are having trouble understanding or
because they are resistant to taking actions that have been suggested.

If its frustrating to help users, take a break from it. If there are
repetitive questions lets work on sharpening up the faq. There are
other routes to take beyond escalating things verbally or
kicking/banning people from the channel.



> > Allowing this kind of behavior to continue reflects poorly on us as a
> > community.
>
> This is true, I'm not going to argue about that. However, I think your
> conclusion is wrong.
>

If the general consensus is that we'd rather have Vitamin helping and
we are ok with his behaviour then I'll support that. I'm just
explaining my position on the matter.

Chris


From fgouget at free.fr  Mon Nov  5 10:49:41 2007
From: fgouget at free.fr (Francois Gouget)
Date: Mon, 5 Nov 2007 17:49:41 +0100 (CET)
Subject: Linux/Windows app connection, how?
In-Reply-To: <75939f220711050227j5141fd64p19e3323fc6dfad53@mail.gmail.com>
References: <fglsq3$bup$2@ger.gmane.org> <472EE5E1.40201@gmail.com>
	<75939f220711050227j5141fd64p19e3323fc6dfad53@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0711051738020.13063@amboise.dolphin>

On Mon, 5 Nov 2007, Josh Scholar wrote:
[...]
> OK.  I need to access COM to do this, and I notice that in "What it WINELIB"
> it says "Also missing are some of the more exotic features of Microsoft's
> compiler like native COM support".

What won't work is if you're using statements such as '#import' in your 
C files. See http://support.microsoft.com/kb/317217 for a sample of this 
type of construct. This was present in Visual C++ 6 already.

As long as you stick to standard C code you should be fine.


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
 Advice is what we ask for when we already know the answer but wish we didn't
                                 -- Eric Jong


From jwhite at winehq.org  Mon Nov  5 12:32:31 2007
From: jwhite at winehq.org (Jeremy White)
Date: Mon, 05 Nov 2007 12:32:31 -0600
Subject: #winehq admin troubles
In-Reply-To: <f3f1b91a0711050810s6939ed7fyc4e11b1bda91cabd@mail.gmail.com>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>	<f3f1b91a0711042112m2af5c932kbcb84a769ebf795c@mail.gmail.com>	<200711051039.41339.kai.blin@gmail.com>
	<f3f1b91a0711050810s6939ed7fyc4e11b1bda91cabd@mail.gmail.com>
Message-ID: <472F61BF.8050705@winehq.org>

Hi,

>>> I agree that this isn't something that should continue. Kicking should
>>> be reserved for people being disruptive. There is no reason to be
>>> anything other than polite to users asking for help.
>> How much time do you spend in #winehq? I know I don't spend much time there,
>> but I know it's a thankless job. four out of five people who ask for help
>> there seem to
>> a) expect you to drop everything you're doing to help them
>> b) insult the person trying to help if the suggestion doesn't work
>> c) threaten to go back to windows and expect you care.
>> d) leave before you get around to answer

[...]

> 
> If the general consensus is that we'd rather have Vitamin helping and
> we are ok with his behaviour then I'll support that. I'm just
> explaining my position on the matter.

I think there is clear consensus that we all deeply appreciate
the work that Vitaly is doing.  There is also clear consensus that
it would be great if more people could help out on #winehq
(and on bugzilla, and so on).  Further, I think there is even clear
consensus that we all want to support Vitaly as he does an amazing
job that few of us want to do.

However, I have to say that we have now had enough people complain
that it seems reasonable to conclude that he is kicking / banning
people too quickly, whatever the reason.

So, here is a proposal for consideration:
   1.  More known Wine developers keep a tab #winehq; we get them op access
   2.  We ask vitamin to run without op privileges, so he isn't tempted
   3.  When there is trouble, he has lots of people to ask for backup,
       and they can do the kicking.

In fact, wouldn't it be a nice way to show our support for Vitaly
by letting him be the good guy and we agree to take on the role of bad guy?

I've added #winehq to my tab now, and if someone ops me, I'm willing
to be a bad cop <grin>.

Cheers,

Jeremy


From mpartap at gmx.net  Mon Nov  5 12:53:21 2007
From: mpartap at gmx.net (Marcel Partap)
Date: Mon, 05 Nov 2007 19:53:21 +0100
Subject: #winehq admin troubles
In-Reply-To: <e6cdb3980711050406t48189c20m8115bab711d6d07a@mail.gmail.com>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>	<200711051039.41339.kai.blin@gmail.com>	<200711051149.52633.hans@it.vu.nl>	<200711051209.18951.alex@thehandofagony.com>	<e6cdb3980711050335n69bc6c68yc05bf1987bfcadfe@mail.gmail.com>
	<e6cdb3980711050406t48189c20m8115bab711d6d07a@mail.gmail.com>
Message-ID: <472F66A1.3020506@gmx.net>


> If people really are expected to know everything there is to know
> before they try to help, is it really such a wonder that there's only
> a few solid contributors left, and they're stressed from it?
Absolutly not. That's why imho, the #winehq should be taken off the homepage. The newly created wine-forum.org has
multiple advantages over an IRC chan:
- frequently asked questions can be easily found avoiding duplicates (this depends on good moderation of forum hierarchy
though, probably an approval queue)
- people having questions actually have to THINK before asking, instead of just opening up IRC and start bubbling
- of course moderators have more time to THINK before actually replying, too
- rules for civil communication and about form of inquiries can more easily be enforced
(Just thinking about it, the Drupal issue system has some nice features too, f.e. attribute fields for each post like
status, version, type of request and so on)
Of course this would need active forum herdsmen.. but it is probably less dissatisfying than directly confronting the
totally clueless in realtime.. and I for one would definitly volunteer (although I have just started coding WINE) as a
moderator.. the more the better though.. Mr Wickline, what's your take on that?

> a basic bit of advice, usually the first
> advice you hear (It's even in the channel's topic)
Good point. And it seems reasonable too, as statistically more fixes than regressions get commited for each new version
(else WINE would totally be so WINE for workgroups 3.1).. I don't think you have done any wrong with that. And
interpreting vitamin's reply "that's not a problem here" correctly as "this has not been fixed yet so updating wine will
not solve the problem" is really a tall order.

> If I was going to try to feel better about myself, it wouldn't be by sitting on IRC
SCNR: although depending on many factors, that is soo true from experience; almost anything else would work better.. *g

> against Vitamin for anything, at least yet. I've got nothing against
> him-- I might have a sour taste in my mouth when I cross him, but I
> don't think he's a bad person. He knows and cares a lot about
> something, tries to improve and help people with it, and dislikes
> people who he perceives as stupid or harmful; even to the point where
> he becomes a bit too annoyed and starts mislabeling people, or
Yeah, I've had this myself. He decided to ignore my argumentation and put me on his 'troll ignore list'. It pissed me
off but well, life goes on. Whatever.

> 1. Users: Be nice to the helpers. We are volunteers, not employees, and have no obligation to help you.
Yeah, stealing is forbidden, too. People just don't stop.

> 2. Helpers and Admins: Remember Hanlon's razor.
had to look this one up, quote:
> Hanlon's razor
> From Wikipedia, the free encyclopedia
> Hanlon's razor is an adage which reads:
> "Never attribute to malice that which can be adequately explained by stupidity."
>  Also worded as:
> "Never assume malice when stupidity will suffice."
Lol I like that. Vitamin give me your postal address and I'll send you a nice poster print of this ;)

anyways, back to work
regards marcel


From juan.lang at gmail.com  Mon Nov  5 13:08:50 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 5 Nov 2007 11:08:50 -0800
Subject: USER32: win16 applications should not see long filenames returned
	from dialog control (try 2)
Message-ID: <3a768c550711051108h9b08e25q5a045026fea6ec76@mail.gmail.com>

> What do you think about this version?

Better, but still not correct:
+    ret = DlgDirSelectExA( WIN_Handle32(hwnd), buffer, MAX_PATH, id );
+    if (GetLastError() == 0) GetShortPathNameA(buffer, str, len);

You shouldn't check GetLastError() for whether DlgDirSelectExA
succeeded.  Rather, just check ret.  You have the same problem in
DlgDirSelectComboBoxEx16.
--Juan


From twickline at gmail.com  Mon Nov  5 13:33:13 2007
From: twickline at gmail.com (Tom Wickline)
Date: Mon, 5 Nov 2007 14:33:13 -0500
Subject: #winehq admin troubles
In-Reply-To: <472F66A1.3020506@gmx.net>
References: <e6cdb3980711042033g21f6a0feu9e6345b199bf9992@mail.gmail.com>
	<200711051039.41339.kai.blin@gmail.com>
	<200711051149.52633.hans@it.vu.nl>
	<200711051209.18951.alex@thehandofagony.com>
	<e6cdb3980711050335n69bc6c68yc05bf1987bfcadfe@mail.gmail.com>
	<e6cdb3980711050406t48189c20m8115bab711d6d07a@mail.gmail.com>
	<472F66A1.3020506@gmx.net>
Message-ID: <53e3a9930711051133o1003a2a1q96fe3fa9519a98ec@mail.gmail.com>

On 11/5/07, Marcel Partap <mpartap at gmx.net> wrote:
>
> > If people really are expected to know everything there is to know
> > before they try to help, is it really such a wonder that there's only
> > a few solid contributors left, and they're stressed from it?
> Absolutly not. That's why imho, the #winehq should be taken off the homepage. The newly created wine-forum.org has
> multiple advantages over an IRC chan:
> - frequently asked questions can be easily found avoiding duplicates (this depends on good moderation of forum hierarchy
> though, probably an approval queue)
> - people having questions actually have to THINK before asking, instead of just opening up IRC and start bubbling
> - of course moderators have more time to THINK before actually replying, too
> - rules for civil communication and about form of inquiries can more easily be enforced
> (Just thinking about it, the Drupal issue system has some nice features too, f.e. attribute fields for each post like
> status, version, type of request and so on)
> Of course this would need active forum herdsmen.. but it is probably less dissatisfying than directly confronting the
> totally clueless in realtime.. and I for one would definitly volunteer (although I have just started coding WINE) as a
> moderator.. the more the better though.. Mr Wickline, what's your take on that?
>

Hello Marcel,

Everyone is welcome to register and use the forum, any Wine developer
or advanced user who wants Moderator status on the forum only needs to
send me a mail and ill set it up. I can set Moderator status on a per
forum basis. So be sure to let me know what forums your interested in
helping out in.

Cheers,

Tom


From a_villacis at palosanto.com  Mon Nov  5 14:04:28 2007
From: a_villacis at palosanto.com (=?ISO-8859-1?Q?Alex_Villac=ED=ADs_Lasso?=)
Date: Mon, 05 Nov 2007 15:04:28 -0500
Subject: [SPAM] Re: USER32: win16 applications should not see long
	filenames returned from dialog control (try 2)
In-Reply-To: <3a768c550711051108h9b08e25q5a045026fea6ec76@mail.gmail.com>
References: <3a768c550711051108h9b08e25q5a045026fea6ec76@mail.gmail.com>
Message-ID: <472F774C.7040602@palosanto.com>

Juan Lang escribi?:
>> What do you think about this version?
>>     
>
> Better, but still not correct:
> +    ret = DlgDirSelectExA( WIN_Handle32(hwnd), buffer, MAX_PATH, id );
> +    if (GetLastError() == 0) GetShortPathNameA(buffer, str, len);
>
> You shouldn't check GetLastError() for whether DlgDirSelectExA
> succeeded.  Rather, just check ret.  You have the same problem in
> DlgDirSelectComboBoxEx16.
> --Juan
>   
Sorry, but I have to object. According to the documentation in MSDN, 
DlgDirSelectExA returns nonzero when the current selection is a 
directory name, and zero when it is not. However, plain filenames do not 
qualify as directory names, so DlgDirSelectExA won't return nonzero on 
them either. I checked on wine's implementation just to be sure. So 
checking ret will not tell apart a case of failure from a case of a 
plain filename being returned. That is why I need to zero out the last 
error and check against it after return.

-- 
perl -e '$x=2.4;print sprintf("%.0f + %.0f = %.0f\n",$x,$x,$x+$x);'



From juan.lang at gmail.com  Mon Nov  5 14:08:38 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 5 Nov 2007 12:08:38 -0800
Subject: [SPAM] Re: USER32: win16 applications should not see long
	filenames returned from dialog control (try 2)
In-Reply-To: <472F774C.7040602@palosanto.com>
References: <3a768c550711051108h9b08e25q5a045026fea6ec76@mail.gmail.com>
	<472F774C.7040602@palosanto.com>
Message-ID: <3a768c550711051208y5b13ab8ah7116ce7ed765a993@mail.gmail.com>

> Sorry, but I have to object. According to the documentation in MSDN,
> DlgDirSelectExA returns nonzero when the current selection is a
> directory name, and zero when it is not.

Ah, right you are.  Thanks for correcting me.  Objection withdrawn.
--Juan


From dank at kegel.com  Mon Nov  5 15:27:42 2007
From: dank at kegel.com (Dan Kegel)
Date: Mon, 5 Nov 2007 13:27:42 -0800
Subject: #winehq admin troubles
Message-ID: <a71bd89a0711051327x4c7dbeb5hf78c1a0d2b0e14ce@mail.gmail.com>

Luke Bratch wrote:
> After seeing Vitamin deal with people for a long time
> now, I can say I totally agree with how he does
> things.

Technically, he's spot on.
It's his bedside manner that is broken.
We really don't want him on the front line of support,
somebody else should do that.
But once the newbies are filtered out, he's great.
- Dan

-- 
Wine for Windows ISVs: http://kegel.com/wine/isv


From julliard at winehq.org  Tue Nov  6 07:10:20 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 06 Nov 2007 14:10:20 +0100
Subject: [SPAM] Re: USER32: win16 applications should not see long
	filenames returned from dialog control (try 2)
In-Reply-To: <472F774C.7040602@palosanto.com> ("Alex =?utf-8?Q?Villac?=
	=?utf-8?Q?=C3=AD=22's?= message of
	"Mon, 05 Nov 2007 15:04:28 -0500")
References: <3a768c550711051108h9b08e25q5a045026fea6ec76@mail.gmail.com>
	<472F774C.7040602@palosanto.com>
Message-ID: <87zlxrh64j.fsf@wine.dyndns.org>

Alex Villac??s Lasso <a_villacis at palosanto.com> writes:

> Sorry, but I have to object. According to the documentation in MSDN, 
> DlgDirSelectExA returns nonzero when the current selection is a 
> directory name, and zero when it is not. However, plain filenames do not 
> qualify as directory names, so DlgDirSelectExA won't return nonzero on 
> them either. I checked on wine's implementation just to be sure. So 
> checking ret will not tell apart a case of failure from a case of a 
> plain filename being returned. That is why I need to zero out the last 
> error and check against it after return.

That still won't work, because our implementation doesn't set last error
on failure. Maybe it should, but that will require some test cases.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Nov  6 07:13:03 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 06 Nov 2007 14:13:03 +0100
Subject: [1/2] explorer: Store current display mode in the registry on
	startup
In-Reply-To: <E1IpEQv-0007Oh-UZ@mail.codeweavers.com> (Dmitry Timoshkov's
	message of "Tue, 6 Nov 2007 10:44:56 +0800")
References: <E1IpEQv-0007Oh-UZ@mail.codeweavers.com>
Message-ID: <87ve8fh600.fsf@wine.dyndns.org>

Dmitry Timoshkov <dmitry at codeweavers.com> writes:

> Changelog:
>     [1/2] explorer: Store current display mode in the registry on startup.

You should either do that only in the case of using the X11 root window,
or you need to use a different registry key for each virtual desktop
instance.

-- 
Alexandre Julliard
julliard at winehq.org


From tim at ipi.ac.ru  Tue Nov  6 08:11:01 2007
From: tim at ipi.ac.ru (Timofei V. Bondarenko)
Date: Tue, 06 Nov 2007 17:11:01 +0300
Subject: xrun handling in winealsa.drv
Message-ID: <473075F5.9030108@ipi.ac.ru>

Hi.

I've noticed the winealsa does not handle alsa XRUNs.
In the case of XRUN application hangs.

That's happened because return value of snd_pcm_avail_update() is not 
checked.

For example:
wavein.c
175             DWORD bytes;
180             /* read all the fragments accumulated so far */
181             frames = snd_pcm_avail_update(wwi->pcm);
182             bytes = snd_pcm_frames_to_bytes(wwi->pcm, frames);

waveout.c
476     DWORD               availInQ;
479     availInQ = snd_pcm_avail_update(wwo->pcm);
482     if (availInQ > 0) {

The snd_pcm_avail_update() returns a _signed_ type and it really does 
return negative number -EPIPE in the case of XRUN.

More over, any return value of less than period_size may indicate XRUN 
state too.
The snd_pcm_state() may help then.

Th dsoutput.c and dscapture.c do exactly the same wrong thigs.

BTW, using DWORD type causes problems.
Following fragment is from wavein.c too:

177             DWORD read;
181             frames = snd_pcm_avail_update(wwi->pcm);
182             bytes = snd_pcm_frames_to_bytes(wwi->pcm, frames);
193                     read = wwi->read(wwi->pcm, lpWaveHdr->lpData + 
194                     bytesRead = snd_pcm_frames_to_bytes(wwi->pcm, 
197                     if (bytesRead != (DWORD) -1)

This is obviously will not work as expected.

I hope someone will fix these issues :)

Regards,
	Tim.


From dank at kegel.com  Tue Nov  6 09:03:55 2007
From: dank at kegel.com (Dan Kegel)
Date: Tue, 6 Nov 2007 07:03:55 -0800
Subject: Monday's valgrind results - ten tests fixed!
Message-ID: <a71bd89a0711060703w3b889d8cpf3abcae1ff511550@mail.gmail.com>

Yesterday's git seems to have fixed all the valgrind warnings in ten tests:
 cabinet/extract cabinet/fdi
 crypt32/sip
 d3d8/device
 dsound/dsound8
 mscms/profile
 mshtml/dom mshtml/htmldoc
 netapi32/access
 shdocvw/webbrowser

Results are online at
  http://kegel.com/wine/valgrind/20071105/

(Sorry, I used an old suppressions file, so this
has a lot of leak records in it that should have
been suppressed.  I'll sort that for today's git results.)


From m.b.lankhorst at gmail.com  Tue Nov  6 10:27:38 2007
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Tue, 06 Nov 2007 17:27:38 +0100
Subject: xrun handling in winealsa.drv
In-Reply-To: <473075F5.9030108@ipi.ac.ru>
References: <473075F5.9030108@ipi.ac.ru>
Message-ID: <473095FA.40803@gmail.com>

Hello Timofei,

Timofei V. Bondarenko schreef:
> I've noticed the winealsa does not handle alsa XRUNs.
> In the case of XRUN application hangs.
>   
I'm aware of the xrun problems in alsa at least the accelerated parts
(dsoutput/dscapture), it's been on my todo list for a while but I've
been busy lately. The problems with the accelerated parts are not the
underruns themselves. They are handled correctly in the places where it
matters. The problem is how the underruns are handled in the directsound
software mixer. I haven't taken a look yet at how underruns are handled
for the not-accelerated system, but I believe that the chance of a
underrun there is already very low because buffers there usually have a
latency of at least 300ms.

Regards,
Maarten.


From dank at kegel.com  Tue Nov  6 12:21:33 2007
From: dank at kegel.com (Dan Kegel)
Date: Tue, 6 Nov 2007 10:21:33 -0800
Subject: valgrind results 20071106
Message-ID: <a71bd89a0711061021x1850dfd0qd9ea0405bad98fa5@mail.gmail.com>

http://kegel.com/wine/valgrind/20071106/

Most obvious change since yesterday is
Juan fixed the warnings in setupapi, so that DLL is
now clean by this test.


From pgquiles at elpauer.org  Tue Nov  6 13:21:53 2007
From: pgquiles at elpauer.org (Pau Garcia i Quiles)
Date: Tue, 06 Nov 2007 20:21:53 +0100
Subject: Develop .h for Wine by looking Microsoft Platform SDK
Message-ID: <20071106202153.q9wkfres0888k8kk@www.elpauer.org>

Hello,

How legal (if at all) would be to develop a header file by looking  
reading the corresponding header file from the Microsoft Platform SDK  
and adapting it to gcc (removing MSVC stuff, etc)?

I'm interested in supporting annotations[*] and before I start  
deducting everything from MSDN documentation, I'd like to know if  
there is a fast track.

[*] More information:
http://msdn2.microsoft.com/en-us/library/aa383701.aspx
http://msdn2.microsoft.com/en-us/library/ms235402(VS.80).aspx

Thank you.

-- 
Pau Garcia i Quiles
http://www.elpauer.org
(Due to my workload, I may need 10 days to answer)



From wine-devel at kievinfo.com  Tue Nov  6 13:45:39 2007
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Tue, 06 Nov 2007 12:45:39 -0700
Subject: Bugzilla rights
Message-ID: <4730C463.9020809@kievinfo.com>

Bugzilla admin, please disallow people to add/remove e-mail addresses 
to/from bugs unless they've been given that right. Or at least have rights 
to modify any aspect of the bug.

Thanks,
Vitaliy.


From a_villacis at palosanto.com  Tue Nov  6 14:26:30 2007
From: a_villacis at palosanto.com (=?ISO-8859-1?Q?Alex_Villac=ED=ADs_Lasso?=)
Date: Tue, 06 Nov 2007 15:26:30 -0500
Subject: RICHED20: fix test failure in test_WM_PASTE
In-Reply-To: <43997.200.125.199.77.1194148677.squirrel@www.palosanto.com>
References: <43997.200.125.199.77.1194148677.squirrel@www.palosanto.com>
Message-ID: <4730CDF6.1070001@palosanto.com>

Alex Villac?s Lasso escribi?:
> At last! I finally found the way to make native riched20 actually obey
> keystrokes involving Ctrl and some other key. It seems that native riched20
> checks the actual keyboard state during WM_KEYDOWN processing, and won't
> process keystrokes if the keyboard state does not match the messages being
> sent. However, with keybd_event(), native riched20 can be fooled into
> accepting
> simulated keystrokes.
>
> Changelog:
> * Native riched20 won't obey simple WM_CHAR or WM_KEYDOWN/WM_KEYUP messages
>   when processing Ctrl-Key keystrokes. Use keybd_event() instead. Fixes one
>   test failure in Win98 and WinXP-SP2.
> * Add more through tests to test_WM_PASTE, to check that text is actually
>   being modified in intermediate steps. Fixes false test success in Win98 and
>   WinXP-SP2. Additional tests pass under Win98, WinXP-SP2 and Wine.
> ------------------------------------------------------------------------
>
Was there something wrong with this patch? Two other patches of mine for 
riched20 have been committed, but not this one. As it currently stands, 
it removes the last test failure and also fixes a false test success in 
WinXP-SP2.


-- 
perl -e '$x=2.4;print sprintf("%.0f + %.0f = %.0f\n",$x,$x,$x+$x);'



From ead1234 at hotmail.com  Tue Nov  6 14:34:25 2007
From: ead1234 at hotmail.com (EA Durbin)
Date: Tue, 6 Nov 2007 14:34:25 -0600
Subject: Bugzilla rights
In-Reply-To: <4730C463.9020809@kievinfo.com>
References: <4730C463.9020809@kievinfo.com>
Message-ID: <BAY128-W333FD446612976EAB47A12AB890@phx.gbl>


----------------------------------------> Date: Tue, 6 Nov 2007 12:45:39 -0700> From: wine-devel at kievinfo.com> To: wine-devel at winehq.org> Subject: Bugzilla rights>> Bugzilla admin, please disallow people to add/remove e-mail addresses> to/from bugs unless they've been given that right. Or at least have rights> to modify any aspect of the bug.>> Thanks,> Vitaliy.>>

Doing this would break the ability of users to add the author of patches that cause a regression as outlined in the wiki.

http://wiki.winehq.org/RegressionTesting
_________________________________________________________________
Peek-a-boo FREE Tricks & Treats for You!
http://www.reallivemoms.com?ocid=TXT_TAGHM&loc=us

From hverbeet at gmail.com  Tue Nov  6 14:38:41 2007
From: hverbeet at gmail.com (H. Verbeet)
Date: Tue, 6 Nov 2007 21:38:41 +0100
Subject: [14/14] WineD3D: Release the pixel shader function when
	destroying the shader
In-Reply-To: <200711062057.28752.stefan@codeweavers.com>
References: <200711062057.28752.stefan@codeweavers.com>
Message-ID: <d658b69e0711061238n6754fc31gb06a5fd3b0a1a218@mail.gmail.com>

On 06/11/2007, Stefan D?singer <stefan at codeweavers.com> wrote:
>
It would probably be more proper to do stuff like this (destroying the
constants lists as well) in baseshader.c


From research at science.su  Tue Nov  6 15:09:14 2007
From: research at science.su (L. Rahyen)
Date: Tue, 6 Nov 2007 21:09:14 +0000
Subject: Bugzilla rights
In-Reply-To: <4730C463.9020809@kievinfo.com>
References: <4730C463.9020809@kievinfo.com>
Message-ID: <200711062109.14748.research@science.su>

On Tuesday November 6 2007 19:45, Vitaliy Margolen wrote:
> Bugzilla admin, please disallow people to add/remove e-mail addresses
> to/from bugs unless they've been given that right. Or at least have rights
> to modify any aspect of the bug.
>
> Thanks,
> Vitaliy.

	I think that we should remove the right to add/remove e-mail addresses ONLY 
from user who abuse his/her rights (like Toby Brommerich). All other users 
should have this right - at least the right to add others to CC list.


From stefan at codeweavers.com  Tue Nov  6 15:36:20 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Tue, 6 Nov 2007 22:36:20 +0100
Subject: [14/14] WineD3D: Release the pixel shader function when
	destroying the shader
In-Reply-To: <d658b69e0711061238n6754fc31gb06a5fd3b0a1a218@mail.gmail.com>
References: <200711062057.28752.stefan@codeweavers.com>
	<d658b69e0711061238n6754fc31gb06a5fd3b0a1a218@mail.gmail.com>
Message-ID: <200711062236.23464.stefan@codeweavers.com>

Am Dienstag, 6. November 2007 21:38:41 schrieb H. Verbeet:
> On 06/11/2007, Stefan D?singer <stefan at codeweavers.com> wrote:
>
> It would probably be more proper to do stuff like this (destroying the
> constants lists as well) in baseshader.c
Right yeah. I was just lazy and added it there because the rest was there 
already :-)

This applies to patch 13 as well. I'll send an updated patch tomorrow, please 
do not apply 13 and 14 yet.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071106/647caee0/attachment.pgp 

From actong88 at gmail.com  Tue Nov  6 16:41:40 2007
From: actong88 at gmail.com (Allan Tong)
Date: Tue, 6 Nov 2007 17:41:40 -0500
Subject: [10/14] WineD3D: Implement the varying map
In-Reply-To: <200711062054.46392.stefan@codeweavers.com>
References: <200711062054.46392.stefan@codeweavers.com>
Message-ID: <d75158870711061441h40c099ferad4190dfc4c31f3f@mail.gmail.com>

On 11/6/07, Stefan D?singer <stefan at codeweavers.com> wrote:
> +        /* Don't do any register mapping magic if it is not needed, or if we can't
> +         * achive anything anyway
> +         */
> +        if(highest_reg_used < (GL_LIMITS(glsl_varyings) / 4) ||
> +           num_regs_used >= (GL_LIMITS(glsl_varyings) / 4) ) {
> +            if(num_regs_used >= (GL_LIMITS(glsl_varyings) / 4)) {

Should it not be "num_regs_used > (GL_LIMITS(glsl_varyings) / 4)"?

 - Allan


From staf.verhaegen at skynet.be  Tue Nov  6 15:17:12 2007
From: staf.verhaegen at skynet.be (Staf Verhaegen)
Date: Tue, 06 Nov 2007 22:17:12 +0100
Subject: %fs, %gs on AROS hosted
Message-ID: <op.t1d2qyp6xnc239@evod500>

Hello wine developers,

I am an AROS developer (http://www.aros.org); that is an open source
implementation of the old AmigaOS. It has also the possiblity to run
hosted on other OSes and is thus very similar to wine. I know that this
group is for wine posts but I think I could reuse much of the knowledge
gained by the wine developers for AROS.

Recently there has been discussion about the use of the %fs and %gs
segment for AROS purposes and thus also for the hosted version.
As wine also has to handle these registers, I am interested to know how
wine handles these registers. Or doesn't wine have to take these registers
into account ?
I did download the 0.9.48 source code of wine and I only did find some
places where a proper saving and restoring of these registers was done. Is
there something I am overlooking ?

Currently wine seems to run on the following platforms:
    Linux version 2.0.36 or above
    FreeBSD 6.2 or later
    Solaris x86 2.5 or later
    NetBSD-current
    Mac OS X 10.4 or later
I found almost no OS specific code for each of the architectures in the
source. Are there special precautions to be taken in one of these OSes to
be able to use the segment register in user land code ?

My last question is related to an AROS version hosted on Windows. Would
Windows put any restrictions on the use of the segment registers for this
purpose. Is there a difference between 32bit and 64bit ?

thanks,
Staf.



From ngompa13 at gmail.com  Tue Nov  6 18:00:54 2007
From: ngompa13 at gmail.com (King InuYasha)
Date: Tue, 6 Nov 2007 18:00:54 -0600
Subject: Develop .h for Wine by looking Microsoft Platform SDK
In-Reply-To: <20071106202153.q9wkfres0888k8kk@www.elpauer.org>
References: <20071106202153.q9wkfres0888k8kk@www.elpauer.org>
Message-ID: <8278b1b0711061600r20c7677byb61ae2af98f7f917@mail.gmail.com>

It is not legal at all. Using Microsoft Platform SDK header code is not
under the GNU General Public License version 2.0 or its listed compatible
licenses, so you have to do it manually WITHOUT looking at the PSDK. I
recommend removing the PSDK from your system as a way to remove temptation.

On Nov 6, 2007 1:21 PM, Pau Garcia i Quiles <pgquiles at elpauer.org> wrote:

> Hello,
>
> How legal (if at all) would be to develop a header file by looking
> reading the corresponding header file from the Microsoft Platform SDK
> and adapting it to gcc (removing MSVC stuff, etc)?
>
> I'm interested in supporting annotations[*] and before I start
> deducting everything from MSDN documentation, I'd like to know if
> there is a fast track.
>
> [*] More information:
> http://msdn2.microsoft.com/en-us/library/aa383701.aspx
> http://msdn2.microsoft.com/en-us/library/ms235402(VS.80).aspx<http://msdn2.microsoft.com/en-us/library/ms235402%28VS.80%29.aspx>
>
> Thank you.
>
> --
> Pau Garcia i Quiles
> http://www.elpauer.org
> (Due to my workload, I may need 10 days to answer)
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071106/707d46fa/attachment.htm 

From wine-devel at kievinfo.com  Wed Nov  7 00:13:24 2007
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Tue, 06 Nov 2007 23:13:24 -0700
Subject: [5/14] D3D9: Use HAL devices in some tests
In-Reply-To: <200711062052.19894.stefan@codeweavers.com>
References: <200711062052.19894.stefan@codeweavers.com>
Message-ID: <47315784.1000808@kievinfo.com>

Stefan D?singer wrote:
> 
> ------------------------------------------------------------------------
> 
> 
> 
> @@ -343,7 +343,7 @@ static void test_refcount(void)
>      d3dpp.EnableAutoDepthStencil = TRUE;
>      d3dpp.AutoDepthStencilFormat = D3DFMT_D16;
>  
> -    hr = IDirect3D9_CreateDevice( pD3d, D3DADAPTER_DEFAULT, D3DDEVTYPE_NULLREF, hwnd,
> +    hr = IDirect3D9_CreateDevice( pD3d, D3DADAPTER_DEFAULT, D3DDEVTYPE_HAL, hwnd,
>                                    D3DCREATE_SOFTWARE_VERTEXPROCESSING, &d3dpp, &pDevice );
>      ok(SUCCEEDED(hr), "Failed to create IDirect3D9Device (%s)\n", DXGetErrorString9(hr));
>      if (FAILED(hr)) goto cleanup;


By doing this change you render all VMs useless to run d3d tests. This is much bigger loss
then broken tests on vista.

Vitaliy


From winehacker at gmail.com  Wed Nov  7 00:36:01 2007
From: winehacker at gmail.com (Steven Edwards)
Date: Wed, 7 Nov 2007 01:36:01 -0500
Subject: What the hell is up with searching google for wine-devel and
	wine-patches posts?
Message-ID: <19e31a080711062236h197b6106u376a73f7a26b6936@mail.gmail.com>

Hi,
I guess this issue is more directed at Dan and the rest of the google
guys we have lurking here but
has anyone else noticed how hard it is to do a google search for
discussions on wine-devel or
look for patches that have been submitted? I used to just be able to
search as follows

wine-patches Steven Edwards

and see every patch I ever submitted to wine. Ditto for most threads
on wine-devel. This is really
getting to be a pain for me because I need to be able to search for
patches that might not have
been merged in but still have merit for some of my customers.

Thanks
-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From stefan at codeweavers.com  Wed Nov  7 01:01:53 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Wed, 7 Nov 2007 08:01:53 +0100
Subject: [5/14] D3D9: Use HAL devices in some tests
In-Reply-To: <47315784.1000808@kievinfo.com>
References: <200711062052.19894.stefan@codeweavers.com>
	<47315784.1000808@kievinfo.com>
Message-ID: <200711070801.56611.stefan@codeweavers.com>

Am Mittwoch, 7. November 2007 07:13:24 schrieb Vitaliy Margolen:
> Stefan D?singer wrote:
> > ------------------------------------------------------------------------
> >
> >
> >
> > @@ -343,7 +343,7 @@ static void test_refcount(void)
> >      d3dpp.EnableAutoDepthStencil = TRUE;
> >      d3dpp.AutoDepthStencilFormat = D3DFMT_D16;
> >
> > -    hr = IDirect3D9_CreateDevice( pD3d, D3DADAPTER_DEFAULT,
> > D3DDEVTYPE_NULLREF, hwnd, +    hr = IDirect3D9_CreateDevice( pD3d,
> > D3DADAPTER_DEFAULT, D3DDEVTYPE_HAL, hwnd,
> > D3DCREATE_SOFTWARE_VERTEXPROCESSING, &d3dpp, &pDevice );
> > ok(SUCCEEDED(hr), "Failed to create IDirect3D9Device (%s)\n",
> > DXGetErrorString9(hr)); if (FAILED(hr)) goto cleanup;
>
> By doing this change you render all VMs useless to run d3d tests. This is
> much bigger loss then broken tests on vista.
IMHO VMs are useless for d3d tests anyway, see the past discussions.

Vista shows that HAL and NULLREF devices do not behave in the same way even at 
d3d9 API level, so apparently the NULLREF device should be taken with a grain 
of salt anyway. The games use HAL devices, not NULLREF ones.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071107/9204584a/attachment.pgp 

From stefan at codeweavers.com  Wed Nov  7 01:10:35 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Wed, 7 Nov 2007 08:10:35 +0100
Subject: [10/14] WineD3D: Implement the varying map
In-Reply-To: <d75158870711061441h40c099ferad4190dfc4c31f3f@mail.gmail.com>
References: <200711062054.46392.stefan@codeweavers.com>
	<d75158870711061441h40c099ferad4190dfc4c31f3f@mail.gmail.com>
Message-ID: <200711070810.38319.stefan@codeweavers.com>

Am Dienstag, 6. November 2007 23:41:40 schrieb Allan Tong:
> On 11/6/07, Stefan D?singer <stefan at codeweavers.com> wrote:
> > +        /* Don't do any register mapping magic if it is not needed, or
> > if we can't +         * achive anything anyway
> > +         */
> > +        if(highest_reg_used < (GL_LIMITS(glsl_varyings) / 4) ||
> > +           num_regs_used >= (GL_LIMITS(glsl_varyings) / 4) ) {
> > +            if(num_regs_used >= (GL_LIMITS(glsl_varyings) / 4)) {
>
> Should it not be "num_regs_used > (GL_LIMITS(glsl_varyings) / 4)"?
yes, I think you are right. Thanks for spotting this
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071107/88f8310c/attachment.pgp 

From scott at open-vote.org  Wed Nov  7 01:23:00 2007
From: scott at open-vote.org (Scott Ritchie)
Date: Tue, 06 Nov 2007 23:23:00 -0800
Subject: What the hell is up with searching google for wine-devel and
	wine-patches posts?
In-Reply-To: <19e31a080711062236h197b6106u376a73f7a26b6936@mail.gmail.com>
References: <19e31a080711062236h197b6106u376a73f7a26b6936@mail.gmail.com>
Message-ID: <473167D4.9080703@open-vote.org>

Steven Edwards wrote:
> Hi,
> I guess this issue is more directed at Dan and the rest of the google
> guys we have lurking here but
> has anyone else noticed how hard it is to do a google search for
> discussions on wine-devel or
> look for patches that have been submitted? I used to just be able to
> search as follows
> 
> wine-patches Steven Edwards
> 
> and see every patch I ever submitted to wine. Ditto for most threads
> on wine-devel. This is really
> getting to be a pain for me because I need to be able to search for
> patches that might not have
> been merged in but still have merit for some of my customers.
> 
> Thanks

Try:

site:http://www.winehq.org/pipermail/wine-patches/ Steven Edwards

Thanks,
Scott Ritchie


From stefandoesinger at gmx.at  Wed Nov  7 01:21:09 2007
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Wed, 7 Nov 2007 08:21:09 +0100
Subject: Develop .h for Wine by looking Microsoft Platform SDK
In-Reply-To: <8278b1b0711061600r20c7677byb61ae2af98f7f917@mail.gmail.com>
References: <20071106202153.q9wkfres0888k8kk@www.elpauer.org>
	<8278b1b0711061600r20c7677byb61ae2af98f7f917@mail.gmail.com>
Message-ID: <200711070821.09801.stefandoesinger@gmx.at>

Am Mittwoch, 7. November 2007 01:00:54 schrieb King InuYasha:
> It is not legal at all. Using Microsoft Platform SDK header code is not
> under the GNU General Public License version 2.0 or its listed compatible
> licenses, so you have to do it manually WITHOUT looking at the PSDK. I
> recommend removing the PSDK from your system as a way to remove temptation.
Headers contain facts, and facts cannot be copyrighted. Also the sdk headers 
are the only source of information. Collecting them from the msdn is not 
going to work.

The typing of the header itself is copyrighted though, so you must not 
copypaste from the MS Header. The wine header should be implemented as 
differently as possible, but still be 100% compatible. Especially watch out 
that the wine header includes the same files the other header does.


From marcus at jet.franken.de  Wed Nov  7 01:37:34 2007
From: marcus at jet.franken.de (Marcus Meissner)
Date: Wed, 7 Nov 2007 08:37:34 +0100
Subject: %fs, %gs on AROS hosted
In-Reply-To: <op.t1d2qyp6xnc239@evod500>
References: <op.t1d2qyp6xnc239@evod500>
Message-ID: <20071107073734.GA26859@galeere>

On Tue, Nov 06, 2007 at 10:17:12PM +0100, Staf Verhaegen wrote:
> Hello wine developers,
> 
> I am an AROS developer (http://www.aros.org); that is an open source
> implementation of the old AmigaOS. It has also the possiblity to run
> hosted on other OSes and is thus very similar to wine. I know that this
> group is for wine posts but I think I could reuse much of the knowledge
> gained by the wine developers for AROS.
> 
> Recently there has been discussion about the use of the %fs and %gs
> segment for AROS purposes and thus also for the hosted version.
> As wine also has to handle these registers, I am interested to know how
> wine handles these registers. Or doesn't wine have to take these registers
> into account ?
> I did download the 0.9.48 source code of wine and I only did find some
> places where a proper saving and restoring of these registers was done. Is
> there something I am overlooking ?
> 

Win32 (and so Wine) uses %fs as the thread selector.

It needs to stay constant over process switches (as in "saved") and the base
virtual address must be settable.

Older Wines allocate a (LDT?) selector themselves for %fs, newer ones have it use
a GDT (?) slot.

%gs is not used in 32bit mode usually, but Win16 programs use it and so it should
be allocatable and savable too.

Ciao, Marcus


From winehacker at gmail.com  Wed Nov  7 01:44:48 2007
From: winehacker at gmail.com (Steven Edwards)
Date: Wed, 7 Nov 2007 02:44:48 -0500
Subject: What the hell is up with searching google for wine-devel and
	wine-patches posts?
In-Reply-To: <473167D4.9080703@open-vote.org>
References: <19e31a080711062236h197b6106u376a73f7a26b6936@mail.gmail.com>
	<473167D4.9080703@open-vote.org>
Message-ID: <19e31a080711062344t77e7574dm176c1b0c062fb216@mail.gmail.com>

On Nov 7, 2007 2:23 AM, Scott Ritchie <scott at open-vote.org> wrote:

> Try:
>
> site:http://www.winehq.org/pipermail/wine-patches/ Steven Edwards

Thanks that works a little better, though normally I would do something like

wine-devel AUTHOR Subject

and depending on how much discussion a certain patch set had gotten
its relivancy
would be higher. Ditto for the patches list. Using site: seems to help
a bit but the
behavior of the search has still changed as is kind of annoying. Anyone have
any idea why?

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From laurent at vromman.org  Wed Nov  7 02:37:53 2007
From: laurent at vromman.org (Laurent Vromman)
Date: Wed, 7 Nov 2007 09:37:53 +0100
Subject: Mistakes in my yesterday evening patches
Message-ID: <b13b6e2140ba5740f1afb1cd9e59beba@maiou.hd.free.fr>



 I have send 4 patches yesterday. The 2 first of them are tagged
resend.  

 Please do not take those two first patches into account, they have
already been merged in the git tree. My proxy played me a trick, i
haven't see that before I sent them again.   
 Only the 2 last ones (3/4 and 4/4) are to be merged by now.  
 Sorry for my mistake,  
 Laurent  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071107/0ef43b5d/attachment.htm 

From zajec5polish at gmail.com  Wed Nov  7 03:56:31 2007
From: zajec5polish at gmail.com (=?UTF-8?Q?Rafa=C5=82_Mi=C5=82ecki?=)
Date: Wed, 7 Nov 2007 10:56:31 +0100
Subject: [keyboard] GetAsyncKeyState: request for fixing #5623
Message-ID: <14b026160711070156saade11qe2680cfbbb193068@mail.gmail.com>

Hello,

I have two favourite games (Diablo II & Ultima Online) and both of
them works great under Wine. Unfortunately this is quite hard to play
UO without additional tool called "EasyUO" which doesn't work under
Wine.

EasyUO generally works fine but it can not detect pressing any
key-combination in focued UO window. Possibility of detecting is the
main functionality for EUO. This problem is cuased by little bug in
support for GetAsyncKeyState function.

I am waiting about 8 months now for fixing this bug and I wonder if I
can ask sb to look info this bug. Just to make fixing this little
faster.

Bug is quite well decribed in:
http://bugs.winehq.org/show_bug.cgi?id=5623 but if you don't
understand this, I can try to explain more detailed.

So my request is someone try to fix this bug. Anyone have a free
moment for this, please?

-- 
Rafa? Mi?ecki

From julliard at winehq.org  Wed Nov  7 05:02:00 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 07 Nov 2007 12:02:00 +0100
Subject: ntdll: Architecture may be '*' in lookup_manifest_file so don't
	rely on the first '*' of the format indiacting where the
	version number is.
In-Reply-To: <4730A759.6040701@codeweavers.com> (Robert Shearman's message of
	"Tue, 06 Nov 2007 17:41:45 +0000")
References: <4730A759.6040701@codeweavers.com>
Message-ID: <878x5agvyv.fsf@wine.dyndns.org>

Robert Shearman <rob at codeweavers.com> writes:

> Instead use the underscores that separate the string fields.

Of course the assembly name can contain underscores too... I think that
the whole idea of checking the version number from the file name is
flawed.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Nov  7 06:18:37 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 07 Nov 2007 13:18:37 +0100
Subject: advapi32: fix buffer overrun in
	tests/registry.c:wine_debugstr_wn(), try 3
In-Reply-To: <a71bd89a0711031834h11dd624bs5efea05d42c44ea7@mail.gmail.com>
	(Dan Kegel's message of "Sat, 3 Nov 2007 18:34:21 -0700")
References: <a71bd89a0711031834h11dd624bs5efea05d42c44ea7@mail.gmail.com>
Message-ID: <874pfygsf6.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> Fixes an off-by-one buffer overflow in wine_debugstr_wn()
> in which the wchar after the end of the buffer was read.
>
> This is same as try 2, but is slightly clearer and more correct.
>
> Found via Valgrind warning:
>  Conditional jump or move depends on uninitialised value(s)
>     at 0x45F3219: wine_debugstr_wn (registry.c:151)
>     by 0x45F34F5: test_hkey_main_Value_W (registry.c:284)
>     by 0x45F7644: func_registry (registry.c:327)
>     by 0x460A127: run_test (test.h:387)
>
> Alexandre, if you don't like this 'un, please tell me why.

That function is really supposed to print n chars, not n-1.  The
terminating null probably needs to be included in the length.

-- 
Alexandre Julliard
julliard at winehq.org


From stefan at codeweavers.com  Wed Nov  7 03:34:32 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Wed, 7 Nov 2007 10:34:32 +0100
Subject: [10/14] WineD3D: Implement the varying map
In-Reply-To: <200711070810.38319.stefan@codeweavers.com>
References: <200711062054.46392.stefan@codeweavers.com>
	<d75158870711061441h40c099ferad4190dfc4c31f3f@mail.gmail.com>
	<200711070810.38319.stefan@codeweavers.com>
Message-ID: <200711071034.32459.stefan@codeweavers.com>

Am Mittwoch, 7. November 2007 08:10:35 schrieb Stefan D?singer:
> Am Dienstag, 6. November 2007 23:41:40 schrieb Allan Tong:
> > On 11/6/07, Stefan D?singer <stefan at codeweavers.com> wrote:
> > > +        /* Don't do any register mapping magic if it is not needed, or
> > > if we can't +         * achive anything anyway
> > > +         */
> > > +        if(highest_reg_used < (GL_LIMITS(glsl_varyings) / 4) ||
> > > +           num_regs_used >= (GL_LIMITS(glsl_varyings) / 4) ) {
> > > +            if(num_regs_used >= (GL_LIMITS(glsl_varyings) / 4)) {
> >
> > Should it not be "num_regs_used > (GL_LIMITS(glsl_varyings) / 4)"?
>
> yes, I think you are right. Thanks for spotting this
Here is a fixed patch
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0010-WineD3D-Implement-the-varying-map.patch
Type: text/x-diff
Size: 5391 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071107/00d6175e/attachment-0001.patch 

From xixsimplicityxix at gmail.com  Wed Nov  7 07:11:43 2007
From: xixsimplicityxix at gmail.com (John Klehm)
Date: Wed, 7 Nov 2007 07:11:43 -0600
Subject: Develop .h for Wine by looking Microsoft Platform SDK
In-Reply-To: <200711070821.09801.stefandoesinger@gmx.at>
References: <20071106202153.q9wkfres0888k8kk@www.elpauer.org>
	<8278b1b0711061600r20c7677byb61ae2af98f7f917@mail.gmail.com>
	<200711070821.09801.stefandoesinger@gmx.at>
Message-ID: <78a7dad00711070511g683d51acg3146cb27eb16d5b@mail.gmail.com>

On 11/7/07, Stefan D?singer <stefandoesinger at gmx.at> wrote:
> Am Mittwoch, 7. November 2007 01:00:54 schrieb King InuYasha:
> > It is not legal at all. Using Microsoft Platform SDK header code is not
> > under the GNU General Public License version 2.0 or its listed compatible
> > licenses, so you have to do it manually WITHOUT looking at the PSDK. I
> > recommend removing the PSDK from your system as a way to remove temptation.
> Headers contain facts, and facts cannot be copyrighted. Also the sdk headers
> are the only source of information. Collecting them from the msdn is not
> going to work.
>
> The typing of the header itself is copyrighted though, so you must not
> copypaste from the MS Header. The wine header should be implemented as
> differently as possible, but still be 100% compatible. Especially watch out
> that the wine header includes the same files the other header does.
>
>
>

Hrmm smells like another good FAQ item. =)

From dank at kegel.com  Wed Nov  7 08:31:49 2007
From: dank at kegel.com (Dan Kegel)
Date: Wed, 7 Nov 2007 06:31:49 -0800
Subject: advapi32: fix buffer overrun in
	tests/registry.c:wine_debugstr_wn(), try 3
In-Reply-To: <874pfygsf6.fsf@wine.dyndns.org>
References: <a71bd89a0711031834h11dd624bs5efea05d42c44ea7@mail.gmail.com>
	<874pfygsf6.fsf@wine.dyndns.org>
Message-ID: <a71bd89a0711070631jdb15941wae371ba4d6a6a3bd@mail.gmail.com>

On 11/7/07, Alexandre Julliard <julliard at winehq.org> wrote:
> That function is really supposed to print n chars, not n-1.  The
> terminating null probably needs to be included in the length.

Hmm.  The function is only called on registry keys and values,
none of which are really nul terminated (and some vendors
use embedded nuls on purpose).
I think the unconditional nul termination check is a bug
introduced when the author forked
the function from the copy in libs/wine/debug.c.
Patch coming...


From dank at kegel.com  Wed Nov  7 10:50:57 2007
From: dank at kegel.com (Dan Kegel)
Date: Wed, 7 Nov 2007 08:50:57 -0800
Subject: valgrind results for Oct 7
Message-ID: <a71bd89a0711070850h5a402152ue7f6654906514b00@mail.gmail.com>

This time I filtered out files whose only error was
trying to close(-1).

http://kegel.com/wine/valgrind/20071107/

Quite a few tests no longer show problems (partly because of the new filtering):
 comctl32/imagelist
 crypt32/oid crypt32/store
 d3d9/visual
 kernel32/console
 msi/package
 oleaut32/vartest
 rpcrt4/server
 shell32/shlfileop

That leaves 75 tests with problems.
- Dan

-- 
Wine for Windows ISVs: http://kegel.com/wine/isv


From staf.verhaegen at skynet.be  Wed Nov  7 14:25:51 2007
From: staf.verhaegen at skynet.be (Staf Verhaegen)
Date: Wed, 07 Nov 2007 21:25:51 +0100
Subject: %fs, %gs on AROS hosted
References: <op.t1d2qyp6xnc239@evod500> <20071107073734.GA26859@galeere>
Message-ID: <op.t1fu1di7xnc239@evod500>

On Wed, 07 Nov 2007 08:37:34 +0100, Marcus Meissner  
<marcus at jet.franken.de> wrote:

> On Tue, Nov 06, 2007 at 10:17:12PM +0100, Staf Verhaegen wrote:
>> Hello wine developers,
>>

> Win32 (and so Wine) uses %fs as the thread selector.
>
> It needs to stay constant over process switches (as in "saved") and the  
> base
> virtual address must be settable.
>

But the use of %fs by wine does not seem to conflict in any way with a  
possible usage of that segment register by the OS where wine is running  
on. Or is there some OS specific code that is handling it ?

greets,
Staf.



From tj at moka5.com  Wed Nov  7 15:41:03 2007
From: tj at moka5.com (T.J. Purtell)
Date: Wed, 7 Nov 2007 13:41:03 -0800
Subject: Wine LivePC
Message-ID: <A4EB21DB-2280-44B3-B6DC-1DC85E4FAF34@moka5.com>

Hey,
    I've build a Wine LivePC so that people can take a linux operating  
system capable of running Windows programs on a USB drive.  Its great  
for carrying a portable work environment with you, providing a  
container for safely running executables you download from the  
internet, or making an isolated environment for a family member that  
they can carry with them.

http://www.moka5.com/node/1620

   Obviously the LivePC is free, but registration on the site is  
required to download the free engine for using LivePC (Its based off  
VMware player).

   It has the latest version of Wine, so using this is an easy way to  
check if a particular application is well supported in Wine.

Cheers,
-T.J.



From roy at cs.hmc.edu  Wed Nov  7 19:47:09 2007
From: roy at cs.hmc.edu (Roy Shea)
Date: Wed, 7 Nov 2007 17:47:09 -0800
Subject: Problem with client manually starting services
Message-ID: <20071108014709.GA32388@knuth.cs.hmc.edu>

Howdy All,

I'm developing missing services in Wine and am running into problems
with how Wine starts services.  In Windows a service can be started
using "net start <service name>", assuming that the service is
properly added to the registry.  In Wine it appears that the user must
manually start the service before calling "net start <service name>",
or the service fails to start.  

This is blocking me from developing an svchost wrapped DLL.  I guess
its not surprising that the work around of first manually starting a
service fails for a DLL with no main function :-)

Dan Kegel mentioned a recollection of a known bug in Wine along these
lines where, as a work around, clients are manually starting servers.
Anyone know more details on this problem?  Any pointers to old emails
or knowledge of this problem would be a big help I start digging
through WINEDEBUG logs.

Thanks!
-Roy





From epssyis at gmail.com  Wed Nov  7 23:42:29 2007
From: epssyis at gmail.com (Edward Savage)
Date: Thu, 8 Nov 2007 15:42:29 +1000
Subject: #winehq admin troubles
In-Reply-To: <a71bd89a0711051327x4c7dbeb5hf78c1a0d2b0e14ce@mail.gmail.com>
References: <a71bd89a0711051327x4c7dbeb5hf78c1a0d2b0e14ce@mail.gmail.com>
Message-ID: <d6c5d7290711072142m8c0bc8escae41edb6e4a933c@mail.gmail.com>

This thread has become rather long and I don't have time to catch up
completely on it though I'd like to add weight to those commenting on
how Vitamin deals with the channel.

Being one of the many users to suffer his wrath when I first joined
the wine community I can comment on just how off putting he can be.
Having helped extensively in debian and several other channels I
however understand how painful it can be.  I wander in and help in
winehq as often as I can these days and I notice the users we tend to
get are worse than those of other channels, they rarely google, they
do their best not to understand, and they expect far to much.  Though
at the end of the day these are the people we need to be changing and
adding to the community.

Furthermore, I'd like to add the comment that the majority of the time
Vitamin is perfectly calm and collected in his moderating, I'd like to
stress this.  Though some times he acts far outside what is required
of him, no user in need should be banned, _ever_, and kicking should
be reserved for real pains.  Patience is really what is needed here
and it is some thing Vitamin lacks at least some of the time.

While I don't mind the snide attitudes of those helping in the
channel, as they are result of users being dealt with (and I am guilty
of it myself), I would like to see a reduction in the ability to
moderate those users so that they are not abused beyond reason.

At the end of the day you can use words far more effectively to deal
with a nuisance than a ban and this is some thing any one with OP
power needs to understand.

Edward

On Nov 6, 2007 7:27 AM, Dan Kegel <dank at kegel.com> wrote:
> Luke Bratch wrote:
> > After seeing Vitamin deal with people for a long time
> > now, I can say I totally agree with how he does
> > things.
>
> Technically, he's spot on.
> It's his bedside manner that is broken.
> We really don't want him on the front line of support,
> somebody else should do that.
> But once the newbies are filtered out, he's great.
> - Dan
>
> --
> Wine for Windows ISVs: http://kegel.com/wine/isv
>
>
>


From febaen at gmail.com  Thu Nov  8 01:33:07 2007
From: febaen at gmail.com (feba thatl)
Date: Thu, 8 Nov 2007 01:33:07 -0600
Subject: #winehq admin troubles
In-Reply-To: <d6c5d7290711072142m8c0bc8escae41edb6e4a933c@mail.gmail.com>
References: <a71bd89a0711051327x4c7dbeb5hf78c1a0d2b0e14ce@mail.gmail.com>
	<d6c5d7290711072142m8c0bc8escae41edb6e4a933c@mail.gmail.com>
Message-ID: <e6cdb3980711072333h5b4bd5a8j62cb86fba84bde64@mail.gmail.com>

Actually, Dan, I disagree. I don't think he needs to be taken off the
'frontlines' at all. I don't even think his ops permissions need to be taken
away, at least not yet. I think it's #winehq which needs to be taken care
of. We could ban Vitamin off the face of the internet, but that's not going
to fix anything. However, adding rules and conditions to the channel might.
First of all, if there are rules in place for how admins should act, it is
fairer for everyone. Admins don't get banned or de@'d for things they didn't
think were a problem, and users don't get banned or kicked for things they
didn't think were problems. In addition, a set of rules would increase
efficiency, as it could get better answers from users, and quicker, more
accurate replies from others; which apart from being nicer on users, would
also be less stressful for people supporting them. Lastly, and I think the
best benefit to rules, is that they somewhat 'dehumanize' the banning
process, if they're made correctly. Admins would know precisely when they
can or cannot ban someone, so they do not have to worry about getting in
trouble over it, and users have no one to be angry at but themselves when
they are removed by force.

Even simple rules could help. For example, add the following to the IRC page
of appdb, and link to that instead of the FAQ in the channel topic:

Rules for #winehq:
1. Before you do anything, read the FAQ.
2. After that, check the appdb and google to see if anyone has already had
your problem.
3. If you find nothing after an honest effort of searching, try #winehq, and
ask your question as follows:
a. Phrase your question in the best English you can (no chtspk, please), and
describe the problem as thoroughly as possible.
b. Include any information that may be of help, such as OS/distro, wine
--version, things you've already tried, <other thelpful info here>
4. After you have asked, be patient. #winehq is made up entirely of
volunteers, and even if someone who wants to help might not know what to do
in your case. On the other hand, someone who does might get annoyed by your
antics, and ignore you anyway.
5. Again, remember #winehq is made up of volunteers. Please do not mistreat
them, or you may be kicked at an admin's discretion.
6. If an admin asks you to stop doing something, please stop doing it. If
you do not, you may be kicked.

That would be simple and quick enough for any user who is going to get a
reply anyway. The admin rules would need to be a bit more complex (how to
try to treat people, what they can't ask people to stop doing, when they can
break out the banhammer), but not very much so.

This also has the benefit of any action taken against @s being purely a 'you
broke the rules' decision, instead of a 'convicted in the court of public
opinion' covering-of-#winehq's-ass.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071108/bfbb56e8/attachment.htm 

From twickline at gmail.com  Thu Nov  8 01:48:22 2007
From: twickline at gmail.com (Tom Wickline)
Date: Thu, 8 Nov 2007 02:48:22 -0500
Subject: #winehq admin troubles
In-Reply-To: <e6cdb3980711072333h5b4bd5a8j62cb86fba84bde64@mail.gmail.com>
References: <a71bd89a0711051327x4c7dbeb5hf78c1a0d2b0e14ce@mail.gmail.com>
	<d6c5d7290711072142m8c0bc8escae41edb6e4a933c@mail.gmail.com>
	<e6cdb3980711072333h5b4bd5a8j62cb86fba84bde64@mail.gmail.com>
Message-ID: <53e3a9930711072348l118ddc5bv46d59d03becd9b96@mail.gmail.com>

This thread has made me nothing but sick...... Chris suggest we ban
Vitamin, Jeremy suggested he not use his OP privileges for a time.
others bitch and cry that there being treated mean... But as the song
goes, one should never spit into the wind. So with that said until
Vitamin is asked to be a OP and is allowed to use those privileges as
he sees fit I will no longer be in #winehq


Tom Wickline


From marcus at jet.franken.de  Thu Nov  8 02:08:29 2007
From: marcus at jet.franken.de (Marcus Meissner)
Date: Thu, 8 Nov 2007 09:08:29 +0100
Subject: %fs, %gs on AROS hosted
In-Reply-To: <op.t1fu1di7xnc239@evod500>
References: <op.t1d2qyp6xnc239@evod500> <20071107073734.GA26859@galeere>
	<op.t1fu1di7xnc239@evod500>
Message-ID: <20071108080829.GA4661@galeere>

On Wed, Nov 07, 2007 at 09:25:51PM +0100, Staf Verhaegen wrote:
> On Wed, 07 Nov 2007 08:37:34 +0100, Marcus Meissner  
> <marcus at jet.franken.de> wrote:
> 
> > On Tue, Nov 06, 2007 at 10:17:12PM +0100, Staf Verhaegen wrote:
> >> Hello wine developers,
> >>
> 
> > Win32 (and so Wine) uses %fs as the thread selector.
> >
> > It needs to stay constant over process switches (as in "saved") and the  
> > base
> > virtual address must be settable.
> >
> 
> But the use of %fs by wine does not seem to conflict in any way with a  
> possible usage of that segment register by the OS where wine is running  
> on. Or is there some OS specific code that is handling it ?

No, it does not conflict. Your syscall / scheduler entry/exit points
however need to take care to save/restore it correctly, otherwise
you get interesting crashes ;)

Ciao, Marcus


From julliard at winehq.org  Thu Nov  8 05:12:10 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 08 Nov 2007 12:12:10 +0100
Subject: wininet: initialize a buffer
In-Reply-To: <558b2f5c0711072255u4aa57d6cu12ff358388907d9@mail.gmail.com> (Lei
	Zhang's message of "Wed, 7 Nov 2007 22:55:27 -0800")
References: <558b2f5c0711072255u4aa57d6cu12ff358388907d9@mail.gmail.com>
Message-ID: <87tznxf0tx.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> Valgrind is complaining we are doing strcmp() on the buffer without
> initializing it.

You should fix the code to not do the strcmp when we don't have a valid
buffer, instead of hiding the bug by clearing memory.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Thu Nov  8 05:15:52 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 08 Nov 2007 12:15:52 +0100
Subject: wininet: Fully initialize a variable
In-Reply-To: <3a768c550711071401t4cfbdedapb19fcca262417f10@mail.gmail.com>
	(Juan Lang's message of "Wed, 7 Nov 2007 14:01:45 -0800")
References: <3a768c550711071401t4cfbdedapb19fcca262417f10@mail.gmail.com>
Message-ID: <87prylf0nr.fsf@wine.dyndns.org>

"Juan Lang" <juan.lang at gmail.com> writes:

>  static void COOKIE_crackUrlSimple(LPCWSTR lpszUrl, LPWSTR hostName, int hostNameLen, LPWSTR path, int pathLen)
>  {
> -    URL_COMPONENTSW UrlComponents;
> +    URL_COMPONENTSW UrlComponents = { 0 };
>  
> -    UrlComponents.lpszExtraInfo = NULL;
> -    UrlComponents.lpszPassword = NULL;
> -    UrlComponents.lpszScheme = NULL;
>      UrlComponents.lpszUrlPath = path;
> -    UrlComponents.lpszUserName = NULL;
>      UrlComponents.lpszHostName = hostName;
>      UrlComponents.dwHostNameLength = hostNameLen;
>      UrlComponents.dwUrlPathLength = pathLen;

Please avoid that unportable array initialization syntax, and since the
code is already explicitly setting the fields you should simply add the
ones that are needed and missing.

-- 
Alexandre Julliard
julliard at winehq.org


From thunderbird2k at gmx.net  Thu Nov  8 05:40:19 2007
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Thu, 08 Nov 2007 12:40:19 +0100
Subject: d3dxof: return correct value for IDirectXFileDataImpl_GetType
In-Reply-To: <BAY128-W25600F766A22BF3C197071AB8B0@phx.gbl>
References: <BAY128-W25600F766A22BF3C197071AB8B0@phx.gbl>
Message-ID: <20071108114019.232100@gmx.net>

>  IDirectXFileDataImpl_GetType should return DXFILEERR_BADVALUE on failure,
> not S_FALSE
> 
> This patch fixes bug 10355
> 
> http://msdn2.microsoft.com/en-us/library/bb174490.aspx
> 

Sure this could fix that bug but it not a real fix. D3dxof.dll is mostly a stub and its real functionality (loading and parsing of .x files) is missing. This GetType function is also related to the parsing of the .x file. In short this file contains data and some 'templates' for describing the data. This function returns the guid of that template.

Returning a failure is not really an option in my opion as it won't get the app working. For the time being you should a native d3dxof.dll should be used or the rest of the .x file parsing should be added.

Roderick 

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger


From rob at codeweavers.com  Thu Nov  8 06:00:28 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Thu, 08 Nov 2007 12:00:28 +0000
Subject: Problem with client manually starting services
In-Reply-To: <20071108014709.GA32388@knuth.cs.hmc.edu>
References: <20071108014709.GA32388@knuth.cs.hmc.edu>
Message-ID: <4732FA5C.70701@codeweavers.com>

Roy Shea wrote:
> Howdy All,
>
> I'm developing missing services in Wine and am running into problems
> with how Wine starts services.  In Windows a service can be started
> using "net start <service name>", assuming that the service is
> properly added to the registry.  In Wine it appears that the user must
> manually start the service before calling "net start <service name>",
> or the service fails to start.

What makes you think that? There are quite a few programs, including 
InstallShield, that start their own services without the process being 
started beforehand.
You could start with pulling +advapi,+relay log of "net start" executing 
to try to figure out what is going wrong. My guess would be that either 
svchost or the DLL isn't notifying the SCM of its started status.

-- 
Rob Shearman



From rob at codeweavers.com  Thu Nov  8 06:10:49 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Thu, 08 Nov 2007 12:10:49 +0000
Subject: svchost: Implementation of svchost
In-Reply-To: <20071107174525.GA13230@knuth.cs.hmc.edu>
References: <20071107174525.GA13230@knuth.cs.hmc.edu>
Message-ID: <4732FCC9.1050405@codeweavers.com>

Roy Shea wrote:
> Changelog:
> * Implementation of svchost
>   

You've got a lot of global functions in this patch that should be static.

-- 
Rob Shearman



From febaen at gmail.com  Thu Nov  8 06:25:15 2007
From: febaen at gmail.com (feba thatl)
Date: Thu, 8 Nov 2007 06:25:15 -0600
Subject: #winehq admin troubles
In-Reply-To: <53e3a9930711080349t75a63a37j869e7b261fb3be97@mail.gmail.com>
References: <a71bd89a0711051327x4c7dbeb5hf78c1a0d2b0e14ce@mail.gmail.com>
	<d6c5d7290711072142m8c0bc8escae41edb6e4a933c@mail.gmail.com>
	<e6cdb3980711072333h5b4bd5a8j62cb86fba84bde64@mail.gmail.com>
	<53e3a9930711072348l118ddc5bv46d59d03becd9b96@mail.gmail.com>
	<e6cdb3980711080112g3ed803b2p276635789afb40d3@mail.gmail.com>
	<53e3a9930711080349t75a63a37j869e7b261fb3be97@mail.gmail.com>
Message-ID: <e6cdb3980711080425l25612c18v1f86f9613cb4ca20@mail.gmail.com>

Tom, you can try to guilt me, but I don't care.
There are two sides to this. Either you think that #winehq is a
support channel for end users, and should if not cater to them, at
least treat them with some respect until they've proved that they
deserve none, or you think that #winehq is a channel where people can
go for help if some one with an @ isn't in a mood to ban them.

If you can honestly say that you fully agree with the latter, and
would have no problem getting banned from a random channel when you
were seeking help, I don't know what to tell you.

If, however, you think the first thing, we're on the same side. I
don't think anyone here doesn't want to see #winehq, and the entire
project really, become a better place. There might be one or two
people exploiting this for personal reasons, but I cannot control
that.

I posted this in the hopes that #winehq would be made a better place,
not for me, but for everyone. Including vitamin and the rest of the
ops.

I have a question for you, what offends you so much about my comments
that you are not only refusing to help me, but also trying to pin me
with the blame for your refusal to help others? Is it because you feel
that your experience with wine gives you to the right to mistreat
users, or because you are offended by what a few other people said in
a thread that I started?

Do you not want #winehq to be a better place? Or do you not realize
the actual point of what I'm saying?


From gerald at pfeifer.com  Thu Nov  8 06:47:17 2007
From: gerald at pfeifer.com (Gerald Pfeifer)
Date: Thu, 8 Nov 2007 13:47:17 +0100 (CET)
Subject: Bugs in dlls/wsock32/socket.c
In-Reply-To: <3a768c550711041445s108c28b6k8bd825603a58f9c1@mail.gmail.com>
References: <Pine.LNX.4.64.0711031852260.26054@acrux.dbai.tuwien.ac.at>
	<3a768c550711041445s108c28b6k8bd825603a58f9c1@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0711081346580.8530@acrux.dbai.tuwien.ac.at>

On Sun, 4 Nov 2007, Juan Lang wrote:
> Heh - no, that's not the intended purpose ;)  I'll send a patch.

Cool, thanks a bunch! :-)

Gerald


From ead1234 at hotmail.com  Thu Nov  8 07:10:54 2007
From: ead1234 at hotmail.com (EA Durbin)
Date: Thu, 8 Nov 2007 07:10:54 -0600
Subject: d3dxof: return correct value for IDirectXFileDataImpl_GetType
In-Reply-To: <20071108114019.232100@gmx.net>
References: <BAY128-W25600F766A22BF3C197071AB8B0@phx.gbl>
	<20071108114019.232100@gmx.net>
Message-ID: <BAY128-W439ECE3C9D37AB4A3F5D0AB8B0@phx.gbl>


It is still returning the wrong value, S_FALSE is not in the possible list of return values, and this causes wine to crash.> Date: Thu, 8 Nov 2007 12:40:19 +0100> From: thunderbird2k at gmx.net> Subject: Re: d3dxof: return correct value for IDirectXFileDataImpl_GetType> To: wine-devel at winehq.org> > > IDirectXFileDataImpl_GetType should return DXFILEERR_BADVALUE on failure,> > not S_FALSE> > > > This patch fixes bug 10355> > > > http://msdn2.microsoft.com/en-us/library/bb174490.aspx> > > > Sure this could fix that bug but it not a real fix. D3dxof.dll is mostly a stub and its real functionality (loading and parsing of .x files) is missing. This GetType function is also related to the parsing of the .x file. In short this file contains data and some 'templates' for describing the data. This function returns the guid of that template.> > Returning a failure is not really an option in my opion as it won't get the app working. For the time being you should a native d3dxof.dll should be used or the rest of the .x file parsing should be added.> > Roderick > > -- > Psssst! Schon vom neuen GMX MultiMessenger geh?rt?> Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger> > 
_________________________________________________________________
Climb to the top of the charts!? Play Star Shuffle:? the word scramble challenge with star power.
http://club.live.com/star_shuffle.aspx?icid=starshuffle_wlmailtextlink_oct
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071108/1ac542cf/attachment.htm 

From dank at kegel.com  Thu Nov  8 08:56:40 2007
From: dank at kegel.com (Dan Kegel)
Date: Thu, 8 Nov 2007 06:56:40 -0800
Subject: #winehq admin troubles
In-Reply-To: <d6c5d7290711072142m8c0bc8escae41edb6e4a933c@mail.gmail.com>
References: <a71bd89a0711051327x4c7dbeb5hf78c1a0d2b0e14ce@mail.gmail.com>
	<d6c5d7290711072142m8c0bc8escae41edb6e4a933c@mail.gmail.com>
Message-ID: <a71bd89a0711080656y402af46ap904d7915dadcc824@mail.gmail.com>

On Nov 7, 2007 9:42 PM, Edward Savage <epssyis at gmail.com> wrote:
> Furthermore, I'd like to add the comment that the majority of the time
> Vitamin is perfectly calm and collected in his moderating, I'd like to
> stress this.  Though some times he acts far outside what is required
> of him, no user in need should be banned, _ever_, and kicking should
> be reserved for real pains.  Patience is really what is needed here
> and it is some thing Vitamin lacks at least some of the time.

Well said.  Maybe Vitaliy should simply walk away from the keyboard
whenever he runs into a user who was too annoying.
I once asked him to do something similar with Bugzilla replies,
and it helped for a while.
- Dan


From mk144210 at bcm.tmc.edu  Thu Nov  8 09:44:33 2007
From: mk144210 at bcm.tmc.edu (Koshelev, Misha Vladislavo)
Date: Thu, 8 Nov 2007 09:44:33 -0600
Subject: valgrind/urlmon & http/variable question
Message-ID: <10C24F7C4D05EB45B5F0E1B39789784901EB83ED@BCMEVS7.ad.bcm.edu>

Hi Dan et al.,

So I just wanted to let you know that I have looked somewhat at one (the only as far as I saw) of the valgrind results related to HttpProtocol in urlmon, and basically it involves passing a pointer to a PROTOCOLDATA from a local variable inside a function to the ProtocolSink call which ends up
sending a message with this pointer. When this pointer is processed later, since it is a pointer to a local variable which (presumably) exists only on the stack, it is not really valid.

Now this is quite easy to "fix" with a five-line patch that HeapAlloc's the proper structures. However, I was trying to figure out how native does this to copy it, and kind of ran into a dilemma. Namely, doing a simple patch like shown below (this probably won't really be a diff as I copy/pasted it
into WebMail which will probably mess it up, but it should give a general idea) and then doing a WINEDLLOVERRIDES with native urlmon and wininet and +relay WINEDEBUG I can see that the the PROTOCOLDATA pointers are pointing to stuff like 0x7d7ad790 and 0x7d7ad820. Now, much to my suprise, these
addresses, nor addresses in the proximate range (approximate) to that address don't seem to be part of any other relay calls, including any calls to any sort of allocation functions. Now this leaves me a little stumped ,as I can only see a few ways to properly implement these PROTOCOLDATA pointers
(without a memory leak):

1. A static PROTOCOLDATA variable (local or global). In this case, the address I see for native should never change I believe, but also this would not be correct as potentially you could have more than one HttpProtocol using the same structure.

2. Dynamic allocation of the PROTOCOLDATA structure. This seems like the best option to me, but native either does not seem to be using it or allocates it in some way in which the address or even partial versions of the address does not appear in any allocation functions (or really anywhere) in the
+relay log. Any ideas on what allocation functions I could be missing here?

3. Have one PROTOCOLDATA structure per IInternetProtocol implementation of http. This seems reasonable too, except I am also printing out the address of the IInternetProtocol structure and clearly PROTOCOLDATA is not in an address range anywhere near this structure, and it is never allocated so it
can't be a pointer within that structure.

So anyhow I am a little stuck on the "proper" fix for this. Any suggestiosn would be appreciated.

Thanks,

Misha

---

diff --git a/dlls/urlmon/tests/protocol.c b/dlls/urlmon/tests/protocol.c
index 00335b3..5b3579b 100644
--- a/dlls/urlmon/tests/protocol.c
+++ b/dlls/urlmon/tests/protocol.c
@@ -295,7 +295,9 @@ static HRESULT WINAPI ProtocolSink_Switch(IInternetProtocolSink *iface, PROTOCOL
     }

     SET_EXPECT(ReportData);
+    printf("!!! Continue %p -->\n", pProtocolData);
     hres = IInternetProtocol_Continue(http_protocol, pProtocolData);
+    printf("!!! Continue <--\n");
     ok(hres == S_OK, "Continue failed: %08x\n", hres);
     CHECK_CALLED(ReportData);

@@ -1255,6 +1257,7 @@ static void test_http_protocol_url(LPCWSTR url, BOOL is_first)
     hres = IClassFactory_CreateInstance(factory, NULL, &IID_IInternetProtocol,
                                         (void**)&http_protocol);
     ok(hres == S_OK, "Could not get IInternetProtocol: %08x\n", hres);
+    printf("!!! IInternetProtocol: %p %p\n", http_protocol, http_protocol+sizeof(IInternetProtocol));
     if(SUCCEEDED(hres)) {
         BYTE buf[3600];
         DWORD cb;


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071108/9c13be14/attachment.htm 

From pgquiles at elpauer.org  Thu Nov  8 11:06:55 2007
From: pgquiles at elpauer.org (Pau Garcia i Quiles)
Date: Thu, 08 Nov 2007 18:06:55 +0100
Subject: Develop .h for Wine by looking Microsoft Platform SDK
In-Reply-To: <78a7dad00711070511g683d51acg3146cb27eb16d5b@mail.gmail.com>
References: <20071106202153.q9wkfres0888k8kk@www.elpauer.org>
	<8278b1b0711061600r20c7677byb61ae2af98f7f917@mail.gmail.com>
	<200711070821.09801.stefandoesinger@gmx.at>
	<78a7dad00711070511g683d51acg3146cb27eb16d5b@mail.gmail.com>
Message-ID: <20071108180655.zae9bg7dkwskcc0g@www.elpauer.org>

Quoting John Klehm <xixsimplicityxix at gmail.com>:

> On 11/7/07, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>> Am Mittwoch, 7. November 2007 01:00:54 schrieb King InuYasha:
>> > It is not legal at all. Using Microsoft Platform SDK header code is not
>> > under the GNU General Public License version 2.0 or its listed compatible
>> > licenses, so you have to do it manually WITHOUT looking at the PSDK. I
>> > recommend removing the PSDK from your system as a way to remove   
>> temptation.
>> Headers contain facts, and facts cannot be copyrighted. Also the sdk headers
>> are the only source of information. Collecting them from the msdn is not
>> going to work.
>>
>> The typing of the header itself is copyrighted though, so you must not
>> copypaste from the MS Header. The wine header should be implemented as
>> differently as possible, but still be 100% compatible. Especially watch out
>> that the wine header includes the same files the other header does.
>
> Hrmm smells like another good FAQ item. =)

Given that Wine is a client of the Software Freedom Law Center,  
wouldn't it be interesting to ask them for an opinion from an actual  
lawyer?

-- 
Pau Garcia i Quiles
http://www.elpauer.org
(Due to my workload, I may need 10 days to answer)



From jiangyi178 at rogers.com  Thu Nov  8 12:07:42 2007
From: jiangyi178 at rogers.com (Jiang,Yi)
Date: Thu, 8 Nov 2007 13:07:42 -0500
Subject: Typing Chinese Online On FireFox
References: <mailman.1156.1194541628.4281.wine-devel@winehq.org>
Message-ID: <015e01c82232$41c26ff0$6500a8c0@pc1>

I developped a site for Typing Chinese Online: 
http://www.typingChinese.com.

It works on FireFox, IE, Mac. On test, I found FireFox is the fastest and 
used much less memory!

Regards to all,

Jiang,Yi



From thunder.m at email.cz  Thu Nov  8 13:12:48 2007
From: thunder.m at email.cz (=?ISO-8859-2?Q?Mirek_Sluge=F2?=)
Date: Thu, 08 Nov 2007 20:12:48 +0100
Subject: [1/6] WineD3D: Only glBindAttribLocation used attributes
In-Reply-To: <200711052119.21890.stefan@codeweavers.com>
References: <200711052119.21890.stefan@codeweavers.com>
Message-ID: <47335FB0.2060609@email.cz>

An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071108/ffe068c6/attachment.htm 

From stefan at codeweavers.com  Thu Nov  8 13:46:50 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-2?q?D=F6singer?=)
Date: Thu, 8 Nov 2007 20:46:50 +0100
Subject: [1/6] WineD3D: Only glBindAttribLocation used attributes
In-Reply-To: <47335FB0.2060609@email.cz>
References: <200711052119.21890.stefan@codeweavers.com>
	<47335FB0.2060609@email.cz>
Message-ID: <200711082046.53537.stefan@codeweavers.com>

Am Donnerstag, 8. November 2007 20:12:48 schrieb Mirek Sluge?:
>  Hi, there is big performance drop in some games (NFS ProStreet) with your
> latest patches (exactly this set), do you know why? Should I do some
> regression testing and find critical patch?
A regression test would be nice indeed.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071108/51c6c9f5/attachment.pgp 

From roy at cs.hmc.edu  Thu Nov  8 14:21:42 2007
From: roy at cs.hmc.edu (Roy Shea)
Date: Thu, 8 Nov 2007 12:21:42 -0800
Subject: Problem with client manually starting services
In-Reply-To: <4732FA5C.70701@codeweavers.com>
References: <20071108014709.GA32388@knuth.cs.hmc.edu>
	<4732FA5C.70701@codeweavers.com>
Message-ID: <20071108202141.GA32323@knuth.cs.hmc.edu>

On Thu, Nov 08, 2007 at 12:00:28PM +0000, Robert Shearman wrote:
> Roy Shea wrote:
> >Howdy All,
> >
> >I'm developing missing services in Wine and am running into problems
> >with how Wine starts services.  In Windows a service can be started
> >using "net start <service name>", assuming that the service is
> >properly added to the registry.  In Wine it appears that the user must
> >manually start the service before calling "net start <service name>",
> >or the service fails to start.
> 
> What makes you think that? There are quite a few programs, including 
> InstallShield, that start their own services without the process being 
> started beforehand.
> You could start with pulling +advapi,+relay log of "net start" executing 
> to try to figure out what is going wrong. My guess would be that either 
> svchost or the DLL isn't notifying the SCM of its started status.
> 
> -- 
> Rob Shearman

Further testing shows that a server process actually is started by
Wine.  Good!  What set me off on this goose chase was the output
generated when I tried to start a process:

----
$ ./programs/net/net start count_server
The count_server service is starting.
The count_server service failed to start.
----

Despite the notice that the service failed to start, it is happily up
and running.  A similar test for services started via svchost reveal
the same behavior; the service starts but "net" says that it did not
start.

Debug logs with +advapi,+relay looked odd.  In particular,
StartServiceW returns 0 (failure) triggering the error message from
net.  I dug into this and it looks like the problem is in either
"service_start_process" in dlls/advapi32/service.c or "CreateProcessW"
in dlls/kernel32/process.c.

The call to WaitForMultilpeObjectsEx from service_start_process fails
because the handle for the freshly created process is invalid.  This
triggers the error message from net.  This invalid process handle is
the result of CreateProcessW not setting process information when a
process started is a BINARY_UNIX_EXE.

Should process info be set when a BINARY_UNIX_EXE processes is
created?

Peace,
-Roy





From thunder.m at email.cz  Thu Nov  8 15:54:49 2007
From: thunder.m at email.cz (=?ISO-8859-2?Q?Mirek_Sluge=F2?=)
Date: Thu, 08 Nov 2007 22:54:49 +0100
Subject: [1/6] WineD3D: Only glBindAttribLocation used attributes
In-Reply-To: <200711082046.53537.stefan@codeweavers.com>
References: <200711052119.21890.stefan@codeweavers.com>
	<47335FB0.2060609@email.cz>
	<200711082046.53537.stefan@codeweavers.com>
Message-ID: <473385A9.70604@email.cz>

An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071108/a69fc606/attachment.htm 

From stefan at codeweavers.com  Thu Nov  8 16:12:07 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-2?q?D=F6singer?=)
Date: Thu, 8 Nov 2007 23:12:07 +0100
Subject: [1/6] WineD3D: Only glBindAttribLocation used attributes
In-Reply-To: <473385A9.70604@email.cz>
References: <200711052119.21890.stefan@codeweavers.com>
	<200711082046.53537.stefan@codeweavers.com>
	<473385A9.70604@email.cz>
Message-ID: <200711082312.09777.stefan@codeweavers.com>

Am Donnerstag, 8. November 2007 22:54:49 schrieb Mirek Sluge?:
>  Stefan D?singer napsal(a):
>  It is caused by those patches (they depends on each other):
>
>  [2/6] WineD3D: Make pixel shader input an array
>  [3/6] WineD3D: Pixel Shader varying indexing
>  [4/6] WineD3D: Add a max varyings member to the gl info structure
>  [5/6] WineD3D: Handle ps 3.0 varyings in a different way
>
>  You can easily test performance with Nvidia SDK demo
> AntiAliasingWithTransparency.exe not every game or application is affected
> by this regression. Every affected application is using PS 3.0 (NFS
> ProStreet, Call of Duty 4, Unreal Tournament 3).
I guess only the last patch finally "activates" the slowdown, right? It sounds 
like a fallback to software rendering by the driver. I thought the driver's 
shader optimizer can sort out issues like that, apparently this is not the 
case everywhere. What GPU do you have?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071108/35f4470f/attachment.pgp 

From thunder.m at email.cz  Thu Nov  8 16:34:04 2007
From: thunder.m at email.cz (=?ISO-8859-2?Q?Mirek_Sluge=F2?=)
Date: Thu, 08 Nov 2007 23:34:04 +0100
Subject: [1/6] WineD3D: Only glBindAttribLocation used attributes
In-Reply-To: <200711082312.09777.stefan@codeweavers.com>
References: <200711052119.21890.stefan@codeweavers.com>
	<200711082046.53537.stefan@codeweavers.com>
	<473385A9.70604@email.cz>
	<200711082312.09777.stefan@codeweavers.com>
Message-ID: <47338EDC.9020801@email.cz>

An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071108/61cf2c71/attachment.htm 

From stefan at codeweavers.com  Thu Nov  8 16:45:54 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-2?q?D=F6singer?=)
Date: Thu, 8 Nov 2007 23:45:54 +0100
Subject: [1/6] WineD3D: Only glBindAttribLocation used attributes
In-Reply-To: <473385A9.70604@email.cz>
References: <200711052119.21890.stefan@codeweavers.com>
	<200711082046.53537.stefan@codeweavers.com>
	<473385A9.70604@email.cz>
Message-ID: <200711082345.58071.stefan@codeweavers.com>

Am Donnerstag, 8. November 2007 22:54:49 schrieb Mirek Sluge?:
>  You can easily test performance with Nvidia SDK demo
> AntiAliasingWithTransparency.exe not every game or application is affected
> by this regression. Every affected application is using PS 3.0 (NFS
> ProStreet, Call of Duty 4, Unreal Tournament 3).
I found the problem, patch sent. Thanks for the constant testing work.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071108/a636b84d/attachment.pgp 

From stefan at codeweavers.com  Thu Nov  8 16:51:39 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Thu, 8 Nov 2007 23:51:39 +0100
Subject: WineD3D: flush gl buffers are blt to drawable [attempt2]
In-Reply-To: <20071108224018.146640@gmx.net>
References: <20071108224018.146640@gmx.net>
Message-ID: <200711082351.41516.stefan@codeweavers.com>

Am Donnerstag, 8. November 2007 23:40:18 schrieb Roderick Colenbrander:
> Hi,
>
> This patch makes sure the gl buffer is flushed after blitting to the
> screen. This fixes bug 9826 where traces of old frames appeared due to
> this.
You really shouldn't do this unconditionally, it is only needed if two 
contexts are drawing to the same drawable. A suggestion would be to mark the 
first use of a 2nd thread in a device in FindContext, and call the glFlush 
only if happened.

The same glFlush is needed in all other places that draw something to the 
drawable: drawprim, clear and BltOverride come to my mind.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071108/7651019e/attachment.pgp 

From roy at cs.hmc.edu  Thu Nov  8 17:00:24 2007
From: roy at cs.hmc.edu (Roy Shea)
Date: Thu, 8 Nov 2007 15:00:24 -0800
Subject: Problem with client manually starting services
In-Reply-To: <20071108202141.GA32323@knuth.cs.hmc.edu>
References: <20071108014709.GA32388@knuth.cs.hmc.edu>
	<4732FA5C.70701@codeweavers.com>
	<20071108202141.GA32323@knuth.cs.hmc.edu>
Message-ID: <20071108230024.GC32323@knuth.cs.hmc.edu>

On Thu, Nov 08, 2007 at 12:21:42PM -0800, Roy Shea wrote:
> On Thu, Nov 08, 2007 at 12:00:28PM +0000, Robert Shearman wrote:
> > Roy Shea wrote:
> > >Howdy All,
> > >
> > >I'm developing missing services in Wine and am running into problems
> > >with how Wine starts services.  In Windows a service can be started
> > >using "net start <service name>", assuming that the service is
> > >properly added to the registry.  In Wine it appears that the user must
> > >manually start the service before calling "net start <service name>",
> > >or the service fails to start.
> > 
> > What makes you think that? There are quite a few programs, including 
> > InstallShield, that start their own services without the process being 
> > started beforehand.
> > You could start with pulling +advapi,+relay log of "net start" executing 
> > to try to figure out what is going wrong. My guess would be that either 
> > svchost or the DLL isn't notifying the SCM of its started status.
> > 
> > -- 
> > Rob Shearman
> 
> Further testing shows that a server process actually is started by
> Wine.  Good!  What set me off on this goose chase was the output
> generated when I tried to start a process:
> 
> ----
> $ ./programs/net/net start count_server
> The count_server service is starting.
> The count_server service failed to start.
> ----
> 
> Despite the notice that the service failed to start, it is happily up
> and running.  A similar test for services started via svchost reveal
> the same behavior; the service starts but "net" says that it did not
> start.
> 
> Debug logs with +advapi,+relay looked odd.  In particular,
> StartServiceW returns 0 (failure) triggering the error message from
> net.  I dug into this and it looks like the problem is in either
> "service_start_process" in dlls/advapi32/service.c or "CreateProcessW"
> in dlls/kernel32/process.c.
> 
> The call to WaitForMultilpeObjectsEx from service_start_process fails
> because the handle for the freshly created process is invalid.  This
> triggers the error message from net.  This invalid process handle is
> the result of CreateProcessW not setting process information when a
> process started is a BINARY_UNIX_EXE.
> 
> Should process info be set when a BINARY_UNIX_EXE processes is
> created?
> 
> Peace,
> -Roy

Okay, a little more information on this.  The above email is specific
to registry settings using the "wrapped" version of the executable.
Ie. Specifying the symbolic link to winewrapper (named after the
executable and created by make) in the reigstry rather than
test_service.exe.  Specifying test_service.exe in the registry causes
the service to fail since CreateProcessW is unable to locate the file.
Finally, setting the registry value to svchost.exe.so works without
any errors.  Unfortunately, this last version is not compatible with
Windows registry configurations.

CreateProcessW already preforms a search for the binary it is
starting.  Perhaps we could have it also look for a binary ending in
".so".

Peace,
-Roy



From thunder.m at email.cz  Thu Nov  8 17:27:57 2007
From: thunder.m at email.cz (=?ISO-8859-2?Q?Mirek_Sluge=F2?=)
Date: Fri, 09 Nov 2007 00:27:57 +0100
Subject: [1/6] WineD3D: Only glBindAttribLocation used attributes
In-Reply-To: <200711082345.58071.stefan@codeweavers.com>
References: <200711052119.21890.stefan@codeweavers.com>
	<200711082046.53537.stefan@codeweavers.com>
	<473385A9.70604@email.cz>
	<200711082345.58071.stefan@codeweavers.com>
Message-ID: <47339B7D.2090303@email.cz>

An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071109/84bd93e4/attachment-0001.htm 

From rob at codeweavers.com  Thu Nov  8 17:28:21 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Thu, 08 Nov 2007 23:28:21 +0000
Subject: Problem with client manually starting services
In-Reply-To: <20071108230024.GC32323@knuth.cs.hmc.edu>
References: <20071108014709.GA32388@knuth.cs.hmc.edu>
	<4732FA5C.70701@codeweavers.com>
	<20071108202141.GA32323@knuth.cs.hmc.edu>
	<20071108230024.GC32323@knuth.cs.hmc.edu>
Message-ID: <47339B95.6040404@codeweavers.com>

Roy Shea wrote:
> Specifying test_service.exe in the registry causes
> the service to fail since CreateProcessW is unable to locate the file.
> Finally, setting the registry value to svchost.exe.so works without
> any errors.  Unfortunately, this last version is not compatible with
> Windows registry configurations.
>
> CreateProcessW already preforms a search for the binary it is
> starting.  Perhaps we could have it also look for a binary ending in
> ".so".

Or just create a fake executable for it by listing it in tools/wine.inf.

-- 
Rob Shearman



From dank at kegel.com  Thu Nov  8 20:26:52 2007
From: dank at kegel.com (Dan Kegel)
Date: Thu, 8 Nov 2007 18:26:52 -0800
Subject: Valgrind results for Oct 8: lots of hangs?!
Message-ID: <a71bd89a0711081826ue877010j68e1dc5b303f31cd@mail.gmail.com>

Data online at
  http://kegel.com/wine/valgrind/20071108/

For some reason, today I had to do 'wineserver -k'
about five times (yesterday and the day before
only once).  And one of those times was during
a d3d9 test which took over / hung the screen; not
even ctl-alt-backspace helped, I actually had to reboot
(I didn't try ssh'ing in).  Running the tests was like
pulling teeth.

That said, here are the changes in the list of bad tests;
- means test didn't show any valgrind errors today but did yesterday,
+ means it did show valgrind errors today but not yesterday.

-vg-d3d9_visual.txt  (might be one I had to reboot for)
-vg-iphlpapi_iphlpapi.txt
-vg-mlang_mlang.txt
+vg-mshtml_dom.txt
+vg-mshtml_htmldoc.txt
+vg-shdocvw_webbrowser.txt
-vg-wininet_ftp.txt


-- 
Wine for Windows ISVs: http://kegel.com/wine/isv


From mk144210 at bcm.edu  Thu Nov  8 20:35:37 2007
From: mk144210 at bcm.edu (Misha Koshelev)
Date: Thu, 08 Nov 2007 20:35:37 -0600
Subject: valgrind/urlmon & http/variable question
Message-ID: <1194575737.6023.1.camel@misha-laptop>

> Hi Dan et al.,
> 
> So I just wanted to let you know that I have looked somewhat at one (the only as far as I saw) of the valgrind results related to HttpProtocol in urlmon, and basically it involves passing a pointer to a PROTOCOLDATA from a local variable inside a function to the ProtocolSink call which ends up
> sending a message with this pointer. When this pointer is processed later, since it is a pointer to a local variable which (presumably) exists only on the stack, it is not really valid.
> 
> Now this is quite easy to "fix" with a five-line patch that HeapAlloc's the proper structures. However, I was trying to figure out how native does this to copy it, and kind of ran into a dilemma. Namely, doing a simple patch like shown below (this probably won't really be a diff as I copy/pasted it
> into WebMail which will probably mess it up, but it should give a general idea) and then doing a WINEDLLOVERRIDES with native urlmon and wininet and +relay WINEDEBUG I can see that the the PROTOCOLDATA pointers are pointing to stuff like 0x7d7ad790 and 0x7d7ad820. Now, much to my suprise, these
> addresses, nor addresses in the proximate range (approximate) to that address don't seem to be part of any other relay calls, including any calls to any sort of allocation functions. Now this leaves me a little stumped ,as I can only see a few ways to properly implement these PROTOCOLDATA pointers
> (without a memory leak):
> 
> 1. A static PROTOCOLDATA variable (local or global). In this case, the address I see for native should never change I believe, but also this would not be correct as potentially you could have more than one HttpProtocol using the same structure.
> 
> 2. Dynamic allocation of the PROTOCOLDATA structure. This seems like the best option to me, but native either does not seem to be using it or allocates it in some way in which the address or even partial versions of the address does not appear in any allocation functions (or really anywhere) in the
> +relay log. Any ideas on what allocation functions I could be missing here?
> 
> 3. Have one PROTOCOLDATA structure per IInternetProtocol implementation of http. This seems reasonable too, except I am also printing out the address of the IInternetProtocol structure and clearly PROTOCOLDATA is not in an address range anywhere near this structure, and it is never allocated so it
> can't be a pointer within that structure.
> 
> So anyhow I am a little stuck on the "proper" fix for this. Any suggestiosn would be appreciated.
> 
> Thanks,
> 
> Misha

Hmm... so it looks like upon investigation the address ranges for PROTOCOLDATA with antive dlls are actually
suspiciously similar to those I see in the current local variable implementation... which makes me think that
the implementation is dissimilar (and thus leaky) in the downstream ProtocolSink implementation in binding.c,
which will be a little harder to test...

Misha


From dmitry at codeweavers.com  Thu Nov  8 20:46:47 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Fri, 9 Nov 2007 10:46:47 +0800
Subject: valgrind results updated
References: <a71bd89a0711031436m53aa2747p90dc428bd73ce45@mail.gmail.com>
Message-ID: <010501c8227a$c7613450$6700fea9@DMITRY>

"Dan Kegel" <dank at kegel.com> wrote:

> I've updated
>  http://kegel.com/wine/valgrind/
> Today's results are at
>  http://kegel.com/wine/valgrind/20071103/
> 
> The only difference from yesterday is I've added
> suppressions for the most common memory leaks,
> on the theory that it's easier to see the module-specific
> leaks that way.

I looked at the vg-user32_win.txt warnings, and most of them are
triggered by test_gettext() which intentionally passes an invalid
memory address to SendMessage(WM_GETTEXT).

There is also one memry leak reported, but I couldn't figure out
the reason of that one.

-- 
Dmitry.


From dmitry at codeweavers.com  Thu Nov  8 20:58:16 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Fri, 9 Nov 2007 10:58:16 +0800
Subject: wininet: skip strcmp() in a test if the returned len is wrong
References: <558b2f5c0711081352k3eb934eam195c02683d258b14@mail.gmail.com>
Message-ID: <01b101c8227c$63216080$6700fea9@DMITRY>

"Lei Zhang" <thestig at google.com> wrote:

> We'll skip doing strcmp() on a potentially uninitialized buffer if the
> returned length is wrong.

> -  todo_wine ok(!strcmp(useragent,buffer),"Got wrong user agent string %s instead of %s\n",buffer,useragent);
> -  todo_wine ok(len == strlen(useragent),"Got wrong user agent length %d instead of %d\n",len,lstrlenA(useragent));
> +  len_ok = (len == strlen(useragent));
> +  todo_wine ok(len_ok,"Got wrong user agent length %d instead of %d\n",len,lstrlenA(useragent));
> +  if (len_ok)
> +    todo_wine ok(!strcmp(useragent,buffer),"Got wrong user agent string %s instead of %s\n",buffer,useragent);

Probably a better solution would be to actually check the return value of
InternetQueryOption before touching the returned buffers.

-- 
Dmitry.


From offer at fastscale.com  Thu Nov  8 21:00:51 2007
From: offer at fastscale.com (Richard Offer)
Date: Thu, 8 Nov 2007 19:00:51 -0800
Subject: Successful Virtualization startup looking for engineers with system
	level Windows and Linux experience
Message-ID: <E62D12694F598049AC8B0B761FBE91C6626D69BC23@EXVMBX015-1.exch015.msoutlookonline.net>


We are a well-funded software startup in the virtualization space that is
looking to hire several engineers with system level experience in Windows
and Linux - ideally in combination.

I can't tell you what you'd be doing but you can be re-assured that since
we are long-term open source supporters any modifications to Wine
or WineLib that you make will, of course, be contributed back to the community.

We are particularly interested in experiences in the areas of

 * Registry modification, manipulation and creation
 * Windows internals or system level user-space. Device drivers aren't
   very interesting to us.
 * Reverse engineering skills
 * Installable file systems
 * Windows server technologies such as IIS, AD, 2003, Longhorn etc
 * Virtualization technologies such as VMware, AppStream, Softricity and Xen.


If you or anyone you know have an interest and are eligible for working an a
small but rapidly growing company in Silicon Valley on things that are
novel and technically challenging, please send a current resume to
engr-jobs at fastscale.com - including WSE in the subject line of any emails.

For more information on the company, our technology and shipping products
please visit us at http://www.fastscale.com/


Yours truly,

Richard Offer



From dank at kegel.com  Thu Nov  8 22:28:30 2007
From: dank at kegel.com (Dan Kegel)
Date: Thu, 8 Nov 2007 20:28:30 -0800
Subject: valgrind results updated
In-Reply-To: <010501c8227a$c7613450$6700fea9@DMITRY>
References: <a71bd89a0711031436m53aa2747p90dc428bd73ce45@mail.gmail.com>
	<010501c8227a$c7613450$6700fea9@DMITRY>
Message-ID: <a71bd89a0711082028r3e5cf520qc1e7d58a6d57f261@mail.gmail.com>

On Nov 8, 2007 6:46 PM, Dmitry Timoshkov <dmitry at codeweavers.com> wrote:
> I looked at the vg-user32_win.txt warnings, and most of them are
> triggered by test_gettext() which intentionally passes an invalid
> memory address to SendMessage(WM_GETTEXT).

OK, I'll add a suppression for that.

BTW tests/win.c seems pretty racy.  It fails strangely with warn+heap
and differently strangely under valgrind.  Under Valgrind, I bet the test is
just bad at running really slowly.  No idea why it fails with warn+heap,
which doesn't seem too slow.

> There is also one memry leak reported, but I couldn't figure out
> the reason of that one.

I'm not so worried about those, a leak's not as bad as a wild pointer, and
it's probably just a missing free or close or something in the test code.
But thanks for looking.
- Dan


From infinitei at aapt.net.au  Thu Nov  8 19:38:03 2007
From: infinitei at aapt.net.au (Colin M Inglis)
Date: Fri,  9 Nov 2007 11:38:03 +1000
Subject: No subject
Message-ID: <1194572283.4733b9fb74550@webmail.aapt.net.au>

Hi!

I'm trying to install Wine for a client, a Mac house, who run some software only
supported under Windows or Classic. With the recent introduction of Intel Macs
(that no longer support Classic) into the business, the Windows version is,
unfortunately, their only upgrade path.

I have C development experience and am familiar with compiling C applications
under unix, although that was some years ago and processes seem to have changed
somewhat. In particular, I am unfamiliar with the 'configure' executable
described in your installation manual, which is raising an error.

Could you please look briefly at the attached config.log? I would be interested
to know if this is an issue to which I can attend, or whether it is a
deficiency in the configuration process itself. I would also appreciate a
workaround, if possible.

Thanks in anticipation of your assistance.

Regards,
    ////////// // // / /      Colin M Inglis  BInfoTech&Comm
 //////////// // // / /       Software Application Development
///   //\//\\  infinite       15 Jasmine St, Strathpine, Q, Australia
//   // // //                 Snailmail PO Box 2188 Strathpine Q 4500
///  \\//\//  interface       email     manager at infinitei.com.au
 ///////// // // / /          web       http://www.infinitei.com.au
   ////// // // / /           Ph/Fax    +61 7 3881 3494
    ABN: 40 030 880 342       Mobile    +61 414 388 134

              "infinite interface programmes programmes users use"
-------------- next part --------------
A non-text attachment was scrubbed...
Name: config.log
Type: application/octet-stream
Size: 7115 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071109/bf2af7ac/attachment-0001.obj 

From julliard at winehq.org  Fri Nov  9 04:47:52 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 09 Nov 2007 11:47:52 +0100
Subject: wininet: make a test pass on all versions of windows
In-Reply-To: <558b2f5c0711081350l3c194547n66126b4efb4c8c27@mail.gmail.com>
	(Lei Zhang's message of "Thu, 8 Nov 2007 13:50:32 -0800")
References: <558b2f5c0711081350l3c194547n66126b4efb4c8c27@mail.gmail.com>
Message-ID: <87lk97g0fb.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> +
> +  {
> +    OSVERSIONINFOEX foo;
> +    BOOL r;
> +    memset(&foo, 0, sizeof(foo));
> +    foo.dwOSVersionInfoSize = sizeof(foo);
> +    r = GetVersionEx((OSVERSIONINFO *) &foo);
> +    if (!r)
> +    {
> +      skip("could not get windows version\n");
> +      return;
> +    }
> +
> +    is_sp1 = -1;
> +    if (foo.dwMajorVersion > 5)
> +      is_sp1 = 1;
> +    else if (foo.dwMajorVersion == 5)
> +    {
> +      if (foo.dwMinorVersion > 1)
> +        is_sp1 = 1;
> +      else if (foo.dwMinorVersion == 1)
> +      {
> +        if (foo.wServicePackMajor > 1)
> +          is_sp1 = 1;
> +        else if (foo.wServicePackMajor == 1)
> +          is_sp1 = 0;
> +      }
> +    }

Please don't add version checks in tests.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Nov  9 05:53:44 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 09 Nov 2007 12:53:44 +0100
Subject: wininet: check the return value from HeapAlloc in a test
In-Reply-To: <558b2f5c0711081355v7ed72d73x8ee6f41642abdff5@mail.gmail.com>
	(Lei Zhang's message of "Thu, 8 Nov 2007 13:55:41 -0800")
References: <558b2f5c0711081355v7ed72d73x8ee6f41642abdff5@mail.gmail.com>
Message-ID: <87hcjvfxdj.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> We should skip a test if HeapAlloc() fails.

There's no need to clutter up the tests with allocations checks, if we
are out of memory pretty much everything in the test is going to fail
anyway.

-- 
Alexandre Julliard
julliard at winehq.org


From ben at atomnet.co.uk  Fri Nov  9 06:44:56 2007
From: ben at atomnet.co.uk (Ben Hodgetts (Enverex))
Date: Fri, 09 Nov 2007 12:44:56 +0000
Subject: #winehq admin troubles
In-Reply-To: <a71bd89a0711080656y402af46ap904d7915dadcc824@mail.gmail.com>
References: <a71bd89a0711051327x4c7dbeb5hf78c1a0d2b0e14ce@mail.gmail.com>	<d6c5d7290711072142m8c0bc8escae41edb6e4a933c@mail.gmail.com>
	<a71bd89a0711080656y402af46ap904d7915dadcc824@mail.gmail.com>
Message-ID: <47345648.7080308@atomnet.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

There's something many people are missing here and something that the
"noobs" enforce. They come in, know little about wine, then attempt to
"help" other people, of course they don't because their information and
suggestions are wrong and either a) do nothing, b) make more work for
other people or c) make it considerably worse. It's an annoying trend
and becomes infuriating for anyone (especially when they start insulting
you as well). I'm pretty sure Ghandi would have KO'ed someone with his
keyboard by now.

So remember kids, bad advice is worse than no advice.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)

iD8DBQFHNFZIuqCUopk11kIRAlK9AJ9K40UwG1cRniG/8pyYPwl7HaZSPACfdpJ4
+J934XIwR4ftWqjqMrE9cqM=
=e+yU
-----END PGP SIGNATURE-----


From tim at ipi.ac.ru  Fri Nov  9 09:24:11 2007
From: tim at ipi.ac.ru (Timofei V. Bondarenko)
Date: Fri, 09 Nov 2007 18:24:11 +0300
Subject: xrun handling in winealsa.drv
In-Reply-To: <473095FA.40803@gmail.com>
References: <473075F5.9030108@ipi.ac.ru> <473095FA.40803@gmail.com>
Message-ID: <47347B9B.5070107@ipi.ac.ru>

Maarten Lankhorst wrote:
> Hello Timofei,
> 
> Timofei V. Bondarenko schreef:
>> I've noticed the winealsa does not handle alsa XRUNs.
>> In the case of XRUN application hangs.
>>   
> I'm aware of the xrun problems in alsa at least the accelerated parts
> (dsoutput/dscapture), it's been on my todo list for a while but I've
> been busy lately. The problems with the accelerated parts are not the
> underruns themselves. They are handled correctly in the places where it
> matters. The problem is how the underruns are handled in the directsound
> software mixer. I haven't taken a look yet at how underruns are handled
> for the not-accelerated system, but I believe that the chance of a
> underrun there is already very low because buffers there usually have a
> latency of at least 300ms.

No matter how low the chance: sound is an real-time task while linux is 
not a real-time system. So underruns still possible.
And in case of XRUN widRecorder() tries to read about 4G of data.

Well, I'm a busy man too. So I've wrote a simple patch and sent it to 
wine-patches. Please look. May be it will be more clear in C than in my 
broken english.

Regards,
	Tim.


From juan.lang at gmail.com  Fri Nov  9 09:25:17 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Fri, 9 Nov 2007 07:25:17 -0800
Subject: 
In-Reply-To: <1194572283.4733b9fb74550@webmail.aapt.net.au>
References: <1194572283.4733b9fb74550@webmail.aapt.net.au>
Message-ID: <3a768c550711090725m4381bb08v44c7d8c88f01fd03@mail.gmail.com>

Hi Colin,

> In particular, I am unfamiliar with the 'configure' executable
> described in your installation manual.

This script is produced by autoconf.  It's the way many (most?)
packages are built these days.

I'm afraid I can't provide very direct assistance, but your configure
log indicates something pretty basic is screwed up:

configure:2404: checking for C compiler default output file name
configure:2431: gcc    conftest.c  >&5
/usr/bin/ld: can't locate file for: -lcrt1.o
collect2: ld returned 1 exit status

It reports the failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "Wine"
| #define PACKAGE_TARNAME "wine"
| #define PACKAGE_VERSION "0.9.37"
| #define PACKAGE_STRING "Wine 0.9.37"
| #define PACKAGE_BUGREPORT "wine-devel at winehq.org"
| /* end confdefs.h.  */
|
| int
| main ()
| {
|
|   ;
|   return 0;
| }

This is as basic a program as it gets.

So, try creating a similarly empty .c file by hand, and compiling it
yourself.  If you get a similar error, figure out what's wrong with
your compiler installation, and fix that.  If you don't, I don't know
what to tell you.

Good luck,
--Juan


From fgouget at free.fr  Fri Nov  9 09:34:30 2007
From: fgouget at free.fr (Francois Gouget)
Date: Fri, 9 Nov 2007 16:34:30 +0100 (CET)
Subject: 
In-Reply-To: <3a768c550711090725m4381bb08v44c7d8c88f01fd03@mail.gmail.com>
References: <1194572283.4733b9fb74550@webmail.aapt.net.au>
	<3a768c550711090725m4381bb08v44c7d8c88f01fd03@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0711091632570.29993@amboise.dolphin>

On Fri, 9 Nov 2007, Juan Lang wrote:
[...]
> I'm afraid I can't provide very direct assistance, but your configure
> log indicates something pretty basic is screwed up:
> 
> configure:2404: checking for C compiler default output file name
> configure:2431: gcc    conftest.c  >&5
> /usr/bin/ld: can't locate file for: -lcrt1.o
> collect2: ld returned 1 exit status

You're probably missing the libc6-dev and/or libgcc1 packages (the 
package names may be slightly different on your distribution).

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
     We are Pentium of Borg. You will be approximated. Division is futile.


From stefandoesinger at gmx.at  Fri Nov  9 09:29:22 2007
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Fri, 9 Nov 2007 16:29:22 +0100
Subject: Valgrind results for Oct 8: lots of hangs?!
In-Reply-To: <a71bd89a0711081826ue877010j68e1dc5b303f31cd@mail.gmail.com>
References: <a71bd89a0711081826ue877010j68e1dc5b303f31cd@mail.gmail.com>
Message-ID: <200711091629.26693.stefandoesinger@gmx.at>

Am Freitag, 9. November 2007 03:26:52 schrieb Dan Kegel:
> Data online at
>   http://kegel.com/wine/valgrind/20071108/
>
> For some reason, today I had to do 'wineserver -k'
> about five times (yesterday and the day before
> only once).  And one of those times was during
> a d3d9 test which took over / hung the screen; not
> even ctl-alt-backspace helped, I actually had to reboot
> (I didn't try ssh'ing in).  Running the tests was like
> pulling teeth.
>
> That said, here are the changes in the list of bad tests;
> - means test didn't show any valgrind errors today but did yesterday,
> + means it did show valgrind errors today but not yesterday.
Do you have time to do a regression test for the patch that broke the d3d9 
test? The most suspicious patch is 
b4b10d8bc2d6c7a9191898d3a03420bdcae9c6f2 . Finding the patch might give some 
hints to the X server crashes on Mesa drivers.

The d3d9:visual failures are gone, but I think this is because the test didn't 
run to completion. This patch fixes a memleak, but a few other memleaks are 
still left.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071109/e147d2db/attachment.pgp 

From stefandoesinger at gmx.at  Fri Nov  9 09:45:58 2007
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Fri, 9 Nov 2007 16:45:58 +0100
Subject: 
In-Reply-To: <Pine.LNX.4.64.0711091632570.29993@amboise.dolphin>
References: <1194572283.4733b9fb74550@webmail.aapt.net.au>
	<3a768c550711090725m4381bb08v44c7d8c88f01fd03@mail.gmail.com>
	<Pine.LNX.4.64.0711091632570.29993@amboise.dolphin>
Message-ID: <200711091646.00987.stefandoesinger@gmx.at>

Am Freitag, 9. November 2007 16:34:30 schrieb Francois Gouget:
> On Fri, 9 Nov 2007, Juan Lang wrote:
> [...]
>
> > I'm afraid I can't provide very direct assistance, but your configure
> > log indicates something pretty basic is screwed up:
> >
> > configure:2404: checking for C compiler default output file name
> > configure:2431: gcc    conftest.c  >&5
> > /usr/bin/ld: can't locate file for: -lcrt1.o
> > collect2: ld returned 1 exit status
>
> You're probably missing the libc6-dev and/or libgcc1 packages (the
> package names may be slightly different on your distribution).
uname -s = Darwin
uname -v = Darwin Kernel Version 8.10.1: Wed May 23 16:33:00 PDT 2007; 
root:xnu-792.22.5~1/RELEASE_I386

It is a mac it seems. Is Xcode installed?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071109/94d91049/attachment.pgp 

From thunder.m at email.cz  Fri Nov  9 09:50:54 2007
From: thunder.m at email.cz (=?ISO-8859-2?Q?Mirek_Sluge=F2?=)
Date: Fri, 09 Nov 2007 16:50:54 +0100
Subject: [6/15] WineD3D: Replace the position fixup mul-add-add with a MAD
In-Reply-To: <200711072020.29269.stefan@codeweavers.com>
References: <200711072020.29269.stefan@codeweavers.com>
Message-ID: <473481DE.6060708@email.cz>

An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071109/d9f65fa5/attachment.htm 

From stefandoesinger at gmx.at  Fri Nov  9 09:53:58 2007
From: stefandoesinger at gmx.at (Stefan =?utf-8?q?D=C3=B6singer?=)
Date: Fri, 9 Nov 2007 16:53:58 +0100
Subject: [6/15] WineD3D: Replace the position fixup mul-add-add with a MAD
In-Reply-To: <473481DE.6060708@email.cz>
References: <200711072020.29269.stefan@codeweavers.com>
	<473481DE.6060708@email.cz>
Message-ID: <200711091654.00262.stefandoesinger@gmx.at>

Am Freitag, 9. November 2007 16:50:54 schrieb Mirek Sluge?:
>  Hi, this patch caused regression in Nvidia SDK demo BloodShader.exe and
> some other games, the main problem is in geometry of some objects, so it
> colud be related to vertex shaders.
Can you describe the issues a bit more detailed? (e.g. screenshots?)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071109/40083d07/attachment.pgp 

From thunder.m at email.cz  Fri Nov  9 10:10:46 2007
From: thunder.m at email.cz (=?ISO-8859-2?Q?Mirek_Sluge=F2?=)
Date: Fri, 09 Nov 2007 17:10:46 +0100
Subject: [14/15] WineD3D: Get rid of the conditionals in
	shader_glsl_compare
In-Reply-To: <200711072027.39429.stefan@codeweavers.com>
References: <200711072027.39429.stefan@codeweavers.com>
Message-ID: <47348686.2070901@email.cz>

An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071109/9231a548/attachment.htm 

From wine.dev at web.de  Fri Nov  9 11:06:51 2007
From: wine.dev at web.de (Detlef Riekenberg)
Date: Fri, 09 Nov 2007 18:06:51 +0100
Subject: No Subject
In-Reply-To: <1194572283.4733b9fb74550@webmail.aapt.net.au>
References: <1194572283.4733b9fb74550@webmail.aapt.net.au>
Message-ID: <1194628011.6935.30.camel@p4>

On Fr, 2007-11-09 at 11:38 +1000, Colin M Inglis wrote:

your gcc is unable to compile this simple program:

| int
> | main ()
> | {
> | 
> |   ;
> |   return 0;
> | }

Reason:
> /usr/bin/ld: can't locate file for: -lcrt1.o

you need the development files for the c runtime library
(this is "libc6-dev" here)

--- cut ---
GNU C Library: Development Libraries and Header Files
Contains the symlinks, headers, and object files needed to compile
and link programs which use the standard C library.
--- cut ---



-- 
 
By by ... Detlef




From julliard at winehq.org  Fri Nov  9 11:38:53 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 09 Nov 2007 18:38:53 +0100
Subject: wininet: make a test pass on all versions of windows
In-Reply-To: <558b2f5c0711090914n5119777h66c39021be1af545@mail.gmail.com> (Lei
	Zhang's message of "Fri, 9 Nov 2007 09:14:38 -0800")
References: <558b2f5c0711081350l3c194547n66126b4efb4c8c27@mail.gmail.com>
	<87lk97g0fb.fsf@wine.dyndns.org>
	<558b2f5c0711090914n5119777h66c39021be1af545@mail.gmail.com>
Message-ID: <873avffhea.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> How do we know which set of result to expect then? Do we consider all
> three sets of behavior to be acceptable? Or just conform to the newest
> behavior?

Any results that are returned by Windows are by definition acceptable.
So yes, you just have to accept the various behaviors, and make Wine
conform to one of them (usually the newest is preferable).  There's no
reason to check that the behavior matches the reported Windows version,
unless there is a real app that does a version check at that point.

-- 
Alexandre Julliard
julliard at winehq.org


From thestig at google.com  Fri Nov  9 11:14:38 2007
From: thestig at google.com (Lei Zhang)
Date: Fri, 9 Nov 2007 09:14:38 -0800
Subject: wininet: make a test pass on all versions of windows
In-Reply-To: <87lk97g0fb.fsf@wine.dyndns.org>
References: <558b2f5c0711081350l3c194547n66126b4efb4c8c27@mail.gmail.com>
	<87lk97g0fb.fsf@wine.dyndns.org>
Message-ID: <558b2f5c0711090914n5119777h66c39021be1af545@mail.gmail.com>

On Nov 9, 2007 2:47 AM, Alexandre Julliard <julliard at winehq.org> wrote:
> "Lei Zhang" <thestig at google.com> writes:
>
> > +
> > +  {
> > +    OSVERSIONINFOEX foo;
> > +    BOOL r;
> > +    memset(&foo, 0, sizeof(foo));
> > +    foo.dwOSVersionInfoSize = sizeof(foo);
> > +    r = GetVersionEx((OSVERSIONINFO *) &foo);
> > +    if (!r)
> > +    {
> > +      skip("could not get windows version\n");
> > +      return;
> > +    }
> > +
> > +    is_sp1 = -1;
> > +    if (foo.dwMajorVersion > 5)
> > +      is_sp1 = 1;
> > +    else if (foo.dwMajorVersion == 5)
> > +    {
> > +      if (foo.dwMinorVersion > 1)
> > +        is_sp1 = 1;
> > +      else if (foo.dwMinorVersion == 1)
> > +      {
> > +        if (foo.wServicePackMajor > 1)
> > +          is_sp1 = 1;
> > +        else if (foo.wServicePackMajor == 1)
> > +          is_sp1 = 0;
> > +      }
> > +    }
>
> Please don't add version checks in tests.
>
> --
> Alexandre Julliard
> julliard at winehq.org
>

How do we know which set of result to expect then? Do we consider all
three sets of behavior to be acceptable? Or just conform to the newest
behavior?


From m.b.lankhorst at gmail.com  Fri Nov  9 11:19:43 2007
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Fri, 09 Nov 2007 18:19:43 +0100
Subject: xrun handling in winealsa.drv
In-Reply-To: <47347B9B.5070107@ipi.ac.ru>
References: <473075F5.9030108@ipi.ac.ru> <473095FA.40803@gmail.com>
	<47347B9B.5070107@ipi.ac.ru>
Message-ID: <473496AF.8020800@gmail.com>

Hello Timofei,

Timofei V. Bondarenko schreef:
> No matter how low the chance: sound is an real-time task while linux
> is not a real-time system. So underruns still possible.
> And in case of XRUN widRecorder() tries to read about 4G of data.
>
> Well, I'm a busy man too. So I've wrote a simple patch and sent it to
> wine-patches. Please look. May be it will be more clear in C than in
> my broken english.
I took a quick look, it's incorrect for dscapture and dsoutput,
underruns are already handled there in CheckXRUN, in case of _Stop it is
unneeded as well since it just stopped and restarted, no underruns
possible. The only thing needed in that part is that the < 0 checks need
to have a cast to sframes.

Regards,
Maarten.


From fgouget at free.fr  Fri Nov  9 12:25:13 2007
From: fgouget at free.fr (Francois Gouget)
Date: Fri, 9 Nov 2007 19:25:13 +0100 (CET)
Subject: notepad crashes in VNC @ 16bpp
Message-ID: <Pine.LNX.4.64.0711091913240.29993@amboise.dolphin>


So if I start a VNC server with the following command:

   vncserver :1 -depth 16 -geometry 1024x768

Then notepad crashes on startup while initializing OpenGL. More 
precisely the crash happens in X11DRV_WineGL_InitOpenglInfo() on line 
304 of winex11.drv/opengl.c. The reason for the crash is an OpenGL/X11 
assertion:

glxcmds.c:343: CreateContext: Assertion "mode != ((void *)0)" failed


This seems like a VNC/OpenGL/X11 bug because Wine works fine if VNC is 
started in 15bpp or 24bpp. Still, the problem is that as this is part of 
the winex11 initialization it impacts all applications (including the 
DIB conformance tests).

Does anyone see a way to avoid the crash?
(maybe detect VNC before that call, but how?)

Note: I'm using VNC 4.1.1+X4.3.0-2.
Here's the xdpyinfo output in that mode:

name of display:    :1.0
version number:    11.0
vendor string:    The XFree86 Project, Inc
vendor release number:    40300000
XFree86 version: 4.3.0
maximum request size:  4194300 bytes
motion buffer size:  256
bitmap unit, bit order, padding:    32, LSBFirst, 32
image byte order:    LSBFirst
number of supported pixmap formats:    2
supported pixmap formats:
    depth 1, bits_per_pixel 1, scanline_pad 32
    depth 16, bits_per_pixel 16, scanline_pad 32
keycode range:    minimum 8, maximum 255
focus:  window 0x400013, revert to Parent
number of extensions:    23
    BIG-REQUESTS
    DEC-XTRAP
    DOUBLE-BUFFER
    Extended-Visual-Information
    FontCache
    GLX
    LBX
    MIT-SCREEN-SAVER
    MIT-SHM
    MIT-SUNDRY-NONSTANDARD
    RECORD
    SECURITY
    SGI-GLX
    SHAPE
    SYNC
    TOG-CUP
    VNC-EXTENSION
    X-Resource
    XC-APPGROUP
    XC-MISC
    XFree86-Bigfont
    XTEST
    XVideo
default screen number:    0
number of screens:    1

screen #0:
  dimensions:    1024x768 pixels (260x195 millimeters)
  resolution:    100x100 dots per inch
  depths (2):    1, 16
  root window id:    0x2e
  depth of root window:    16 planes
  number of colormaps:    minimum 1, maximum 1
  default colormap:    0x21
  default number of colormap cells:    64
  preallocated pixels:    black 0, white 65535
  options:    backing-store YES, save-unders YES
  largest cursor:    1024x768
  current input event mask:    0xd83f3f
    KeyPressMask             KeyReleaseMask           ButtonPressMask          
    ButtonReleaseMask        EnterWindowMask          LeaveWindowMask          
    Button1MotionMask        Button2MotionMask        Button3MotionMask        
    Button4MotionMask        Button5MotionMask        ButtonMotionMask         
    SubstructureNotifyMask   SubstructureRedirectMask PropertyChangeMask       
    ColormapChangeMask       
  number of visuals:    8
  default visual id:  0x24
  visual:
    visual id:    0x24
    class:    TrueColor
    depth:    16 planes
    available colormap entries:    64 per subfield
    red, green, blue masks:    0xf800, 0x7e0, 0x1f
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x25
    class:    TrueColor
    depth:    16 planes
    available colormap entries:    64 per subfield
    red, green, blue masks:    0x3f, 0x7c0, 0xf800
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x26
    class:    TrueColor
    depth:    16 planes
    available colormap entries:    64 per subfield
    red, green, blue masks:    0x3f, 0x7c0, 0xf800
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x27
    class:    TrueColor
    depth:    16 planes
    available colormap entries:    64 per subfield
    red, green, blue masks:    0x3f, 0x7c0, 0xf800
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x28
    class:    DirectColor
    depth:    16 planes
    available colormap entries:    64 per subfield
    red, green, blue masks:    0x3f, 0x7c0, 0xf800
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x29
    class:    DirectColor
    depth:    16 planes
    available colormap entries:    64 per subfield
    red, green, blue masks:    0x3f, 0x7c0, 0xf800
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x2a
    class:    DirectColor
    depth:    16 planes
    available colormap entries:    64 per subfield
    red, green, blue masks:    0x3f, 0x7c0, 0xf800
    significant bits in color specification:    8 bits
  visual:
    visual id:    0x2b
    class:    DirectColor
    depth:    16 planes
    available colormap entries:    64 per subfield
    red, green, blue masks:    0x3f, 0x7c0, 0xf800
    significant bits in color specification:    8 bits


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                            1 + e ^ ( i * pi ) = 0


From thunder.m at email.cz  Fri Nov  9 12:00:46 2007
From: thunder.m at email.cz (=?ISO-8859-2?Q?Mirek_Sluge=F2?=)
Date: Fri, 09 Nov 2007 19:00:46 +0100
Subject: [6/15] WineD3D: Replace the position fixup mul-add-add with a MAD
In-Reply-To: <200711091654.00262.stefandoesinger@gmx.at>
References: <200711072020.29269.stefan@codeweavers.com>
	<473481DE.6060708@email.cz>
	<200711091654.00262.stefandoesinger@gmx.at>
Message-ID: <4734A04E.2060003@email.cz>

An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071109/ca1c0070/attachment-0001.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: right.png
Type: image/png
Size: 182250 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071109/ca1c0070/attachment-0002.png 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: wrong.png
Type: image/png
Size: 173956 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071109/ca1c0070/attachment-0003.png 

From stefandoesinger at gmx.at  Fri Nov  9 12:55:15 2007
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Fri, 9 Nov 2007 19:55:15 +0100
Subject: [14/15] WineD3D: Get rid of the conditionals in
	shader_glsl_compare
In-Reply-To: <47348686.2070901@email.cz>
References: <200711072027.39429.stefan@codeweavers.com>
	<47348686.2070901@email.cz>
Message-ID: <200711091955.15266.stefandoesinger@gmx.at>

Hi,
I wrote a test, and I think I found the issue. Can you try the attached patch?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0011-WineD3D-Partially-revert-Get-rid-of-the-conditiona.patch
Type: text/x-diff
Size: 10681 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071109/98df41d7/attachment.patch 

From maarten at codeweavers.com  Fri Nov  9 13:04:05 2007
From: maarten at codeweavers.com (Maarten Lankhorst)
Date: Fri, 09 Nov 2007 20:04:05 +0100
Subject: xrun handling in winealsa.drv
In-Reply-To: <47347B9B.5070107@ipi.ac.ru>
References: <473075F5.9030108@ipi.ac.ru> <473095FA.40803@gmail.com>
	<47347B9B.5070107@ipi.ac.ru>
Message-ID: <4734AF25.7060108@codeweavers.com>

Hello Timofei,

Timofei V. Bondarenko schreef:
> No matter how low the chance: sound is an real-time task while linux
> is not a real-time system. So underruns still possible.
> And in case of XRUN widRecorder() tries to read about 4G of data.
>
> Well, I'm a busy man too. So I've wrote a simple patch and sent it to
> wine-patches. Please look. May be it will be more clear in C than in
> my broken english.
I took a quick look, it's incorrect for dscapture and dsoutput,
underruns are already handled there in CheckXRUN, in case of _Stop it is
unneeded as well since it just stopped and restarted, no underruns
possible. The only thing needed in that part is that the < 0 checks need
to have a cast to sframes.

Regards,
Maarten.



From chris.kcat at gmail.com  Fri Nov  9 13:09:57 2007
From: chris.kcat at gmail.com (Chris Robinson)
Date: Fri, 9 Nov 2007 12:09:57 -0700
Subject: [6/15] WineD3D: Replace the position fixup mul-add-add with a MAD
In-Reply-To: <4734A04E.2060003@email.cz>
References: <200711072020.29269.stefan@codeweavers.com>
	<200711091654.00262.stefandoesinger@gmx.at>
	<4734A04E.2060003@email.cz>
Message-ID: <200711091109.57714.chris.kcat@gmail.com>

I think the problem is that the replacement has incorrect order of operations. 
Originally, it was adding the half-pixel fixup then multiplying to invert the 
Y, while the MAD replacement does the Y invert first then the half-pixel fix.

Also Mirek, can you please stop sending your messages as HTML? My client makes 
your messages nearly unreadable. Thanks.


From Stefan.Leichter at camline.com  Fri Nov  9 13:26:11 2007
From: Stefan.Leichter at camline.com (Stefan Leichter)
Date: Fri, 9 Nov 2007 20:26:11 +0100
Subject: winetest.exe broken
Message-ID: <200711092026.11784.Stefan.Leichter@camline.com>

Hello,

as you all may have noticed winetest.exe does not longer build (see 
http://quisquiliae.physics.gla.ac.uk/crossbuild-logs/20071109-11:05.txt ). 
The patch:

65d865d96313d96889bf8cbe88c931b5e1e9bb74 is first bad commit
commit 65d865d96313d96889bf8cbe88c931b5e1e9bb74
Author: Alexandre Julliard <julliard at winehq.org>
Date:   Thu Nov 8 12:21:10 2007 +0100

    libwine: Refuse to use a WINEPREFIX dir owned by a different user.

:040000 040000 1bf2b5da793741040732f222ce4a90ebd3f54b74 
ee36bfdcf5d65ec8bb1c8ee478e74e0af8679039 M      libs

broke the build. Can someone please fix this.

Thanks Stefan


From xixsimplicityxix at gmail.com  Fri Nov  9 13:37:43 2007
From: xixsimplicityxix at gmail.com (John Klehm)
Date: Fri, 9 Nov 2007 13:37:43 -0600
Subject: winetest.exe broken
In-Reply-To: <200711092026.11784.Stefan.Leichter@camline.com>
References: <200711092026.11784.Stefan.Leichter@camline.com>
Message-ID: <78a7dad00711091137o8713136g7178ee43dad24b66@mail.gmail.com>

Hi Stefan,

On Nov 9, 2007 1:26 PM, Stefan Leichter <Stefan.Leichter at camline.com> wrote:
> Hello,
>
> as you all may have noticed winetest.exe does not longer build (see
> http://quisquiliae.physics.gla.ac.uk/crossbuild-logs/20071109-11:05.txt ).
> The patch:
>
> 65d865d96313d96889bf8cbe88c931b5e1e9bb74 is first bad commit
> commit 65d865d96313d96889bf8cbe88c931b5e1e9bb74
> Author: Alexandre Julliard <julliard at winehq.org>
> Date:   Thu Nov 8 12:21:10 2007 +0100
>
>     libwine: Refuse to use a WINEPREFIX dir owned by a different user.
>
> :040000 040000 1bf2b5da793741040732f222ce4a90ebd3f54b74
> ee36bfdcf5d65ec8bb1c8ee478e74e0af8679039 M      libs
>
> broke the build. Can someone please fix this.


I think Paul Millar sent in a patch already:
http://www.winehq.org/pipermail/wine-patches/2007-November/046515.html

--John


From paul.vriens.wine at gmail.com  Fri Nov  9 13:38:33 2007
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Fri, 09 Nov 2007 20:38:33 +0100
Subject: winetest.exe broken
In-Reply-To: <200711092026.11784.Stefan.Leichter@camline.com>
References: <200711092026.11784.Stefan.Leichter@camline.com>
Message-ID: <4734B739.1040506@gmail.com>

Stefan Leichter wrote:
> Hello,
> 
> as you all may have noticed winetest.exe does not longer build (see 
> http://quisquiliae.physics.gla.ac.uk/crossbuild-logs/20071109-11:05.txt ). 
> The patch:
> 
> 65d865d96313d96889bf8cbe88c931b5e1e9bb74 is first bad commit
> commit 65d865d96313d96889bf8cbe88c931b5e1e9bb74
> Author: Alexandre Julliard <julliard at winehq.org>
> Date:   Thu Nov 8 12:21:10 2007 +0100
> 
>     libwine: Refuse to use a WINEPREFIX dir owned by a different user.
> 
> :040000 040000 1bf2b5da793741040732f222ce4a90ebd3f54b74 
> ee36bfdcf5d65ec8bb1c8ee478e74e0af8679039 M      libs
> 
> broke the build. Can someone please fix this.
> 
> Thanks Stefan
> 
> 
> 
I think Paul Millar sent a fix already.

-- 
Cheers,

Paul.


From infyquest at gmail.com  Fri Nov  9 14:12:43 2007
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Fri, 9 Nov 2007 14:12:43 -0600
Subject: CryptAcquireContext Failure, default/Type 024 requested
In-Reply-To: <bb4ad90a0709241104o6ad3d487y11dd03a8ed39c98@mail.gmail.com>
References: <bb4ad90a0709222152q7f366458w9e380859000e013f@mail.gmail.com>
	<bb4ad90a0709222219o4b1c8082ne278d5e0870513c6@mail.gmail.com>
	<3a768c550709240938t69b60d27w7d02f9c177174c8d@mail.gmail.com>
	<bb4ad90a0709241104o6ad3d487y11dd03a8ed39c98@mail.gmail.com>
Message-ID: <36bf289b0711091212p7793bd78y3b4564e29586efd0@mail.gmail.com>

Hi,

I have implemented the AES support for rsaenh.dll
Please test the attached patch.

Thanks,
VJ

On Sep 24, 2007 12:04 PM, Rob Seger <rob.seger at gmail.com> wrote:
> Sweet! Thanks!
>
> I'll see what I can do and probably end up asking some more specific
> questions later ;)
>
> Rob
>
>
> On 9/24/07, Juan Lang <juan.lang at gmail.com> wrote:
> > > I found the wincrypt.h #define line that says what type 024
> > > is: #define PROV_RSA_AES 24.
> >
> > In that case, it should be straightforward enough to add an AES
> > implementation to Wine's rsaenh.dll.  There's free (as in speech)
> > source available for it.  Take a look at rsaenh.c and implglue.c in
> > dlls/rsaenh; you'd want to add it as a new block cipher.
> >
> > --Juan
> >
>
>
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0002-Add-AES-support-to-rsaenh.dll-with-tests.patch
Type: text/x-diff
Size: 13780 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071109/3aef341f/attachment-0001.patch 

From juan.lang at gmail.com  Fri Nov  9 14:21:36 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Fri, 9 Nov 2007 12:21:36 -0800
Subject: CryptAcquireContext Failure, default/Type 024 requested
In-Reply-To: <36bf289b0711091212p7793bd78y3b4564e29586efd0@mail.gmail.com>
References: <bb4ad90a0709222152q7f366458w9e380859000e013f@mail.gmail.com>
	<bb4ad90a0709222219o4b1c8082ne278d5e0870513c6@mail.gmail.com>
	<3a768c550709240938t69b60d27w7d02f9c177174c8d@mail.gmail.com>
	<bb4ad90a0709241104o6ad3d487y11dd03a8ed39c98@mail.gmail.com>
	<36bf289b0711091212p7793bd78y3b4564e29586efd0@mail.gmail.com>
Message-ID: <3a768c550711091221n4fcd80abv28d61d7bb020377d@mail.gmail.com>

Hi Vijay,

you forgot aes.c in your patch - please remember to git add it, then
commit it along with the rest of the changes.


From dank at kegel.com  Fri Nov  9 14:34:21 2007
From: dank at kegel.com (Dan Kegel)
Date: Fri, 9 Nov 2007 12:34:21 -0800
Subject: Valgrind results for Oct 9: still lots of hangs
Message-ID: <a71bd89a0711091234r3eecb237v92ab435fa045e388@mail.gmail.com>

Results for today's git (plus my dde patch) are online at
 http://kegel.com/wine/valgrind/20071109/

ole32/tests/marshall.c has always been hanging
when run under valgrind.   In the last two days,
the following additional tests hang under valgrind:
 mshtml/tests/dom.c
 mshtml/tests/htmldoc.c
 ole32/tests/marshal.c
 shdocvw/tests/webbrowser.c

I can reproduce one hang with
  cd dlls/mshtml/tests
  make testclean
  wineserver -k
  RUNTEST_USE_VALGRIND=1 make test
(with the wine-vg-utils.patch I provide.
Make by itself does not behave well under valgrind,
so you can't just do "valgrind make test").

Sadly, I don't have time to do a regression test, but
it's pretty easy to repeat my results.  See
http://wiki.winehq.org/Wine_and_Valgrind
It'd be nice if somebody else verified that
these hangs occur for them too, that they didn't
occur with wine-0.9.48, and maybe
did a regression test to find out when they started...
- Dan


From infyquest at gmail.com  Fri Nov  9 14:49:55 2007
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Fri, 9 Nov 2007 14:49:55 -0600
Subject: CryptAcquireContext Failure, default/Type 024 requested
In-Reply-To: <3a768c550711091221n4fcd80abv28d61d7bb020377d@mail.gmail.com>
References: <bb4ad90a0709222152q7f366458w9e380859000e013f@mail.gmail.com>
	<bb4ad90a0709222219o4b1c8082ne278d5e0870513c6@mail.gmail.com>
	<3a768c550709240938t69b60d27w7d02f9c177174c8d@mail.gmail.com>
	<bb4ad90a0709241104o6ad3d487y11dd03a8ed39c98@mail.gmail.com>
	<36bf289b0711091212p7793bd78y3b4564e29586efd0@mail.gmail.com>
	<3a768c550711091221n4fcd80abv28d61d7bb020377d@mail.gmail.com>
Message-ID: <36bf289b0711091249m65798546u23cdeb8734b1e73d@mail.gmail.com>

Hi Juan

On Nov 9, 2007 2:21 PM, Juan Lang <juan.lang at gmail.com> wrote:
> Hi Vijay,
>
> you forgot aes.c in your patch - please remember to git add it, then
> commit it along with the rest of the changes.
>
> From what you've sent, your patch looks pretty good so far.  A few comments:
>
> @@ -161,6 +162,10 @@ static const PROV_ENUMALGS_EX
> aProvEnumAlgsEx[4][RSAENH_MAX_ENUMALGS+1] =
>    {CALG_RC2,       40, 40,   56,0,                    4,"RC2",
> 24,"RSA Data Security's RC2"},
>    {CALG_RC4,       40, 40,   56,0,                    4,"RC4",
> 24,"RSA Data Security's RC4"},
>    {CALG_DES,       56, 56,   56,0,                    4,"DES",
> 31,"Data Encryption Standard (DES)"},
> +  {CALG_AES,      128,128,  128,0,                    4,"AES",
> 35,"Advanced Encryption Standard (AES)"},
> +  {CALG_AES_128,  128,128,  128,0,                    8,"AES-128",
> 39,"Advanced Encryption Standard (AES-128)"},
> +  {CALG_AES_192,  192,192,  192,0,                    8,"AES-192",
> 39,"Advanced Encryption Standard (AES-192)"},
> +  {CALG_AES_256,  256,256,  256,0,                    8,"AES-256",
> 39,"Advanced Encryption Standard (AES-256)"},
>
> I'm not sure AES support should be included in every "personality" of
> rsaenh.  Specifically, some cryptographic providers don't support it.
> Here's a blog that mentions how the MS_ENHANCED_PROV provider doesn't
> support it, but the MS_ENH_RSA_AES_PROV does:
> http://sys.cs.rice.edu/~sethn/wordpress/?p=19
I think I'll split the patch into 3 parts
1) basic AES implementation in rsaenh
2) Add AES provider info with registering  MS_ENH_RSA_AES_PROV.
    I have to make aProvEnumAlgsEx[4][RSAENH_MAX_ENUMALGS+1] to
aProvEnumAlgsEx[5][RSAENH_MAX_ENUMALGS+1]
and add the new algorithms, can you help me what algo's should I add
to the new one.
Add the registering code for type24 provider.
3) Tests

>
> +    if (!result) {
> +        /* rsaenh compiled without OpenSSL */
> +        ok(GetLastError()==NTE_BAD_ALGID, "%08x\n", GetLastError());
> +        return;
> +    }
>
> Our rsaenh hasn't built against OpenSSL in some time, so this test
> should be removed from existing tests.  You don't need to do that if
> you don't want, but don't bother adding it to new tests.
>
> +    result = CryptEncrypt(hKey, (HCRYPTHASH)NULL, TRUE, 0, pbData, &dwLen, 16);
> +    ok(result, "%08x\n", GetLastError());
> +
> +    result = CryptDecrypt(hKey, (HCRYPTHASH)NULL, TRUE, 0, pbData, &dwLen);
> +    ok(result, "%08x\n", GetLastError());
>
> You should check that the encrypted output matches some expected
> value, and that the decrypted output matches the plaintext input.
Well, I have tested the decrypted output by putting printf's.
I will make sure we have good tests for it.
Will send new patch set soon.
>
> Thanks very much for getting this started.
> --Juan
>


From thunder.m at email.cz  Fri Nov  9 17:32:38 2007
From: thunder.m at email.cz (=?ISO-8859-2?Q?Mirek_Sluge=F2?=)
Date: Sat, 10 Nov 2007 00:32:38 +0100
Subject: [14/15] WineD3D: Get rid of the conditionals in
	shader_glsl_compare
In-Reply-To: <200711091955.15266.stefandoesinger@gmx.at>
References: <200711072027.39429.stefan@codeweavers.com>
	<47348686.2070901@email.cz>
	<200711091955.15266.stefandoesinger@gmx.at>
Message-ID: <4734EE16.8090605@email.cz>

Thanks, this patch works.

Mirek Slugen

Stefan D?singer napsal(a):
> Hi,
> I wrote a test, and I think I found the issue. Can you try the attached patch?
>   


From stefandoesinger at gmx.at  Fri Nov  9 19:27:24 2007
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sat, 10 Nov 2007 02:27:24 +0100
Subject: Valgrind results for Oct 9: still lots of hangs
In-Reply-To: <a71bd89a0711091234r3eecb237v92ab435fa045e388@mail.gmail.com>
References: <a71bd89a0711091234r3eecb237v92ab435fa045e388@mail.gmail.com>
Message-ID: <200711100227.32505.stefandoesinger@gmx.at>

Hi Dan,

Did the d3d9 test crash again? Or did it run this time?

> Results for today's git (plus my dde patch) are online at
>  http://kegel.com/wine/valgrind/20071109/
>
> ole32/tests/marshall.c has always been hanging
> when run under valgrind.   In the last two days,
> the following additional tests hang under valgrind:
>  mshtml/tests/dom.c
>  mshtml/tests/htmldoc.c
>  ole32/tests/marshal.c
>  shdocvw/tests/webbrowser.c
>
> I can reproduce one hang with
>   cd dlls/mshtml/tests
>   make testclean
>   wineserver -k
>   RUNTEST_USE_VALGRIND=1 make test
> (with the wine-vg-utils.patch I provide.
> Make by itself does not behave well under valgrind,
> so you can't just do "valgrind make test").
>
> Sadly, I don't have time to do a regression test, but
> it's pretty easy to repeat my results.  See
> http://wiki.winehq.org/Wine_and_Valgrind
> It'd be nice if somebody else verified that
> these hangs occur for them too, that they didn't
> occur with wine-0.9.48, and maybe
> did a regression test to find out when they started...
> - Dan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071110/93e532f0/attachment.pgp 

From dank at kegel.com  Fri Nov  9 21:07:46 2007
From: dank at kegel.com (Dan Kegel)
Date: Fri, 9 Nov 2007 19:07:46 -0800
Subject: Valgrind results for Oct 9: still lots of hangs
In-Reply-To: <200711100227.32505.stefandoesinger@gmx.at>
References: <a71bd89a0711091234r3eecb237v92ab435fa045e388@mail.gmail.com>
	<200711100227.32505.stefandoesinger@gmx.at>
Message-ID: <a71bd89a0711091907w23b79967p61af8d7c653acd7b@mail.gmail.com>

I think the d3d9 test ran ok this time.
I figured it would, after your attractively-titled patch
"d3d9: Release the window after the visual tests."
- Dan

On Nov 9, 2007 5:27 PM, Stefan D?singer <stefandoesinger at gmx.at> wrote:
> Hi Dan,
>
> Did the d3d9 test crash again? Or did it run this time?
>
>
> > Results for today's git (plus my dde patch) are online at
> >  http://kegel.com/wine/valgrind/20071109/
> >
> > ole32/tests/marshall.c has always been hanging
> > when run under valgrind.   In the last two days,
> > the following additional tests hang under valgrind:
> >  mshtml/tests/dom.c
> >  mshtml/tests/htmldoc.c
> >  ole32/tests/marshal.c
> >  shdocvw/tests/webbrowser.c
> >
> > I can reproduce one hang with
> >   cd dlls/mshtml/tests
> >   make testclean
> >   wineserver -k
> >   RUNTEST_USE_VALGRIND=1 make test
> > (with the wine-vg-utils.patch I provide.
> > Make by itself does not behave well under valgrind,
> > so you can't just do "valgrind make test").
> >
> > Sadly, I don't have time to do a regression test, but
> > it's pretty easy to repeat my results.  See
> > http://wiki.winehq.org/Wine_and_Valgrind
> > It'd be nice if somebody else verified that
> > these hangs occur for them too, that they didn't
> > occur with wine-0.9.48, and maybe
> > did a regression test to find out when they started...
> > - Dan
>



-- 
Wine for Windows ISVs: http://kegel.com/wine/isv


From infyquest at gmail.com  Fri Nov  9 17:44:24 2007
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Fri, 9 Nov 2007 17:44:24 -0600
Subject: CryptAcquireContext Failure, default/Type 024 requested
In-Reply-To: <36bf289b0711091249m65798546u23cdeb8734b1e73d@mail.gmail.com>
References: <bb4ad90a0709222152q7f366458w9e380859000e013f@mail.gmail.com>
	<bb4ad90a0709222219o4b1c8082ne278d5e0870513c6@mail.gmail.com>
	<3a768c550709240938t69b60d27w7d02f9c177174c8d@mail.gmail.com>
	<bb4ad90a0709241104o6ad3d487y11dd03a8ed39c98@mail.gmail.com>
	<36bf289b0711091212p7793bd78y3b4564e29586efd0@mail.gmail.com>
	<3a768c550711091221n4fcd80abv28d61d7bb020377d@mail.gmail.com>
	<36bf289b0711091249m65798546u23cdeb8734b1e73d@mail.gmail.com>
Message-ID: <36bf289b0711091544xaaac986s28a52be96755a420@mail.gmail.com>

Hi,

I am sending two patches one is the old patch.
The new patch contains the missing aes.c implementation and provider
implementation for AES.
Tests are failing for me.
Could you please tell why its failng?
I will improve   my tests once the failures are resolved.

Thanks,
VJ

On Nov 9, 2007 2:49 PM, Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
> Hi Juan
>
>
> On Nov 9, 2007 2:21 PM, Juan Lang <juan.lang at gmail.com> wrote:
> > Hi Vijay,
> >
> > you forgot aes.c in your patch - please remember to git add it, then
> > commit it along with the rest of the changes.
> >
> > From what you've sent, your patch looks pretty good so far.  A few comments:
> >
> > @@ -161,6 +162,10 @@ static const PROV_ENUMALGS_EX
> > aProvEnumAlgsEx[4][RSAENH_MAX_ENUMALGS+1] =
> >    {CALG_RC2,       40, 40,   56,0,                    4,"RC2",
> > 24,"RSA Data Security's RC2"},
> >    {CALG_RC4,       40, 40,   56,0,                    4,"RC4",
> > 24,"RSA Data Security's RC4"},
> >    {CALG_DES,       56, 56,   56,0,                    4,"DES",
> > 31,"Data Encryption Standard (DES)"},
> > +  {CALG_AES,      128,128,  128,0,                    4,"AES",
> > 35,"Advanced Encryption Standard (AES)"},
> > +  {CALG_AES_128,  128,128,  128,0,                    8,"AES-128",
> > 39,"Advanced Encryption Standard (AES-128)"},
> > +  {CALG_AES_192,  192,192,  192,0,                    8,"AES-192",
> > 39,"Advanced Encryption Standard (AES-192)"},
> > +  {CALG_AES_256,  256,256,  256,0,                    8,"AES-256",
> > 39,"Advanced Encryption Standard (AES-256)"},
> >
> > I'm not sure AES support should be included in every "personality" of
> > rsaenh.  Specifically, some cryptographic providers don't support it.
> > Here's a blog that mentions how the MS_ENHANCED_PROV provider doesn't
> > support it, but the MS_ENH_RSA_AES_PROV does:
> > http://sys.cs.rice.edu/~sethn/wordpress/?p=19
> I think I'll split the patch into 3 parts
> 1) basic AES implementation in rsaenh
> 2) Add AES provider info with registering  MS_ENH_RSA_AES_PROV.
>     I have to make aProvEnumAlgsEx[4][RSAENH_MAX_ENUMALGS+1] to
> aProvEnumAlgsEx[5][RSAENH_MAX_ENUMALGS+1]
> and add the new algorithms, can you help me what algo's should I add
> to the new one.
> Add the registering code for type24 provider.
> 3) Tests
>
> >
> > +    if (!result) {
> > +        /* rsaenh compiled without OpenSSL */
> > +        ok(GetLastError()==NTE_BAD_ALGID, "%08x\n", GetLastError());
> > +        return;
> > +    }
> >
> > Our rsaenh hasn't built against OpenSSL in some time, so this test
> > should be removed from existing tests.  You don't need to do that if
> > you don't want, but don't bother adding it to new tests.
> >
> > +    result = CryptEncrypt(hKey, (HCRYPTHASH)NULL, TRUE, 0, pbData, &dwLen, 16);
> > +    ok(result, "%08x\n", GetLastError());
> > +
> > +    result = CryptDecrypt(hKey, (HCRYPTHASH)NULL, TRUE, 0, pbData, &dwLen);
> > +    ok(result, "%08x\n", GetLastError());
> >
> > You should check that the encrypted output matches some expected
> > value, and that the decrypted output matches the plaintext input.
> Well, I have tested the decrypted output by putting printf's.
> I will make sure we have good tests for it.
> Will send new patch set soon.
>
> >
> > Thanks very much for getting this started.
> > --Juan
> >
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0002-Add-AES-support-to-rsaenh.dll-with-tests.patch
Type: text/x-diff
Size: 13780 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071109/e13cf133/attachment-0002.patch 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0003-Add-RSA-AES-Provider-for-rsaenh.dll.patch
Type: text/x-diff
Size: 99909 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071109/e13cf133/attachment-0003.patch 

From staf.verhaegen at skynet.be  Sat Nov 10 05:52:24 2007
From: staf.verhaegen at skynet.be (Staf Verhaegen)
Date: Sat, 10 Nov 2007 12:52:24 +0100
Subject: %fs, %gs on AROS hosted
References: <op.t1d2qyp6xnc239@evod500> <20071107073734.GA26859@galeere>
	<op.t1fu1di7xnc239@evod500> <20071108080829.GA4661@galeere>
Message-ID: <op.t1kq9m11xnc239@evod500>

On Thu, 08 Nov 2007 09:08:29 +0100, Marcus Meissner  
<marcus at jet.franken.de> wrote:

>> But the use of %fs by wine does not seem to conflict in any way with a
>> possible usage of that segment register by the OS where wine is running
>> on. Or is there some OS specific code that is handling it ?
>
> No, it does not conflict. Your syscall / scheduler entry/exit points
> however need to take care to save/restore it correctly, otherwise
> you get interesting crashes ;)

Already big thanks.

Do you know where this code for these entry/exit points handling is  
located for the different OSes in the wine source code?

Does Windows/wine also have such entry/exit points so I could freely use  
%fs,%gs in AROS hosted on Windows?

greets,
Staf.



From wine.dev at web.de  Sat Nov 10 16:41:03 2007
From: wine.dev at web.de (Detlef Riekenberg)
Date: Sat, 10 Nov 2007 23:41:03 +0100
Subject: How can we handle undcomented shell functionsAW, that MS declared
	now (WSTR version only)
Message-ID: <1194734463.6809.46.camel@p4>

Hi

There are a some undocumented Functions in shell32, which have
one entrypoint that use STR in win9x, but WSTR in NT:

- dlls/shell32/undocshell.h
- http://www.geocities.com/SiliconValley/4942/paths.html


Some of them are now declared without A/W suffix
(include/shobj.h from SDK 2003), but since win9x 
is no longer supported by MS, it's only for the Wide version.

Examples: PathProcessCommend, PathResolve, PathQualify

Question for include/shlobj.h:
What is the correct way to declare such functions?

In undocshell.h, we use functionAW with LPVOID for the first two,
but for PathQualify, we use:
//
BOOL WINAPI PathQualifyA(LPCSTR path);
BOOL WINAPI PathQualifyW(LPCWSTR path);
#define PathQualify WINELIB_NAME_AW(PathQualify)
BOOL  WINAPI PathQualifyAW(LPCVOID path);
//

And PathResolve in exported by name (see shell32.spec)

#############################################################

Next question for shell32.spec:
Are we fixed to "ptr" for such functions?
("str", "wstr" and "long" are all used and need to be fixed)

Is it possible / useful to add support for "awstr" (or a similar name)?
What about support for UNICODE-Strings ("ustr")?



-- 
 
By by ... Detlef




From truiken at gmail.com  Sat Nov 10 17:09:07 2007
From: truiken at gmail.com (James Hawkins)
Date: Sat, 10 Nov 2007 17:09:07 -0600
Subject: USER32: Patch 1 of 6: Fix returned value of LB_DIR
In-Reply-To: <52552.200.125.198.208.1194736086.squirrel@www.palosanto.com>
References: <52552.200.125.198.208.1194736086.squirrel@www.palosanto.com>
Message-ID: <22821af30711101509n1a40ee6eke5e703f48e82547f@mail.gmail.com>

On 11/10/07, Alex Villac?s Lasso <a_villacis at palosanto.com> wrote:
> Tests reveal that (on an unsorted listbox), LB_DIR returns the value of the
> highest index inserted, as if it had sorted the list of files before starting
> the insertion. This patch attempts to replicate this behavior.
>
> Changelog:
> * Make LB_DIR return an index value as if it had inserted filenames in sorted
>   order.
>

Tests?  Tests that aren't in the test suite that should be to verify
the patch is correct?

-- 
James Hawkins


From truiken at gmail.com  Sat Nov 10 17:10:34 2007
From: truiken at gmail.com (James Hawkins)
Date: Sat, 10 Nov 2007 17:10:34 -0600
Subject: USER32: Patch 1 of 6: Fix returned value of LB_DIR
In-Reply-To: <22821af30711101509n1a40ee6eke5e703f48e82547f@mail.gmail.com>
References: <52552.200.125.198.208.1194736086.squirrel@www.palosanto.com>
	<22821af30711101509n1a40ee6eke5e703f48e82547f@mail.gmail.com>
Message-ID: <22821af30711101510l1140e08bnbec3b7c37dec8a49@mail.gmail.com>

On 11/10/07, James Hawkins <truiken at gmail.com> wrote:
> On 11/10/07, Alex Villac?s Lasso <a_villacis at palosanto.com> wrote:
> > Tests reveal that (on an unsorted listbox), LB_DIR returns the value of the
> > highest index inserted, as if it had sorted the list of files before starting
> > the insertion. This patch attempts to replicate this behavior.
> >
> > Changelog:
> > * Make LB_DIR return an index value as if it had inserted filenames in sorted
> >   order.
> >
>
> Tests?  Tests that aren't in the test suite that should be to verify
> the patch is correct?
>

I'll go ahead and eat this one :)

-- 
James Hawkins


From jan.wine at zerebecki.de  Sat Nov 10 17:20:52 2007
From: jan.wine at zerebecki.de (Jan Zerebecki)
Date: Sun, 11 Nov 2007 00:20:52 +0100
Subject: alsa->pulseaudio->alsa directsound hang
In-Reply-To: <5ac7acb10710300124u461f15c4pddd3f6a8807ffad6@mail.gmail.com>
References: <5ac7acb10710300124u461f15c4pddd3f6a8807ffad6@mail.gmail.com>
Message-ID: <20071110232052.GI5380@crissy.swd.zerebecki.de>

I now tested wine (and mplayer) with pulseaudio through the alsa
plugin and it worked just fine. I'm positively impressed by
pulseaudio. The bug with alsa where it played random noise at the
start because the buffer was not correctly cleared also doesn't
appear with this setup. The winmm wave test hangs at some varying
point (but does not with plain alsa), but I didn't investigate
that, yet.

On Tue, Oct 30, 2007 at 01:24:20AM -0700, Al Tobey wrote:
> Did anybody actually write a patch to directly support pulseaudio or
> was the earlier discussion devoid of code?

Nobody showed up with any code. And AFAIK nobody who actually
codes on wine requested a winepulseaudio.

> My registry mods and .asoundrc for using the alsa/pulseaudio plugin
> are attached.   Getting pulseaudio is left as an exercise to the
> reader ;)

I didn't notice it the first time I read your mail, but you
didn't set pcm.!default and thus you manually need to select that
for alsa applications. Though you did that in the registry I
suspect it didn't work and wine tried the default. Pulseaudio
obviously blocks your soundcard as it requests a direct hw device
without dmix from alsa.


Jan



From jan.wine at zerebecki.de  Sat Nov 10 17:31:02 2007
From: jan.wine at zerebecki.de (Jan Zerebecki)
Date: Sun, 11 Nov 2007 00:31:02 +0100
Subject: Linux/Windows app connection, how?
In-Reply-To: <472EE5E1.40201@gmail.com>
References: <fglsq3$bup$2@ger.gmane.org> <472EE5E1.40201@gmail.com>
Message-ID: <20071110233102.GJ5380@crissy.swd.zerebecki.de>

> This comes up from time to time, the solution is always compile a
> winelib app with winegcc then use sockets or something to communicate.
> In your server app you can use windows and linux code mixed together.

If you don't need to use linux APIs in your windows application
you can also make a normal windows executable with a windows
compiler of your choice. So winegcc/winelib is not a requirement
for this style of client/server solution. (You could use winsock
to communicate over tcp with the linux application.)


Jan


From jan.wine at zerebecki.de  Sat Nov 10 17:47:32 2007
From: jan.wine at zerebecki.de (Jan Zerebecki)
Date: Sun, 11 Nov 2007 00:47:32 +0100
Subject: What the hell is up with searching google for wine-devel and
	wine-patches posts?
In-Reply-To: <19e31a080711062236h197b6106u376a73f7a26b6936@mail.gmail.com>
References: <19e31a080711062236h197b6106u376a73f7a26b6936@mail.gmail.com>
Message-ID: <20071110234732.GK5380@crissy.swd.zerebecki.de>

On Wed, Nov 07, 2007 at 01:36:01AM -0500, Steven Edwards wrote:
> I used to just be able to
> search as follows
> 
> wine-patches Steven Edwards
> 
> and see every patch I ever submitted to wine.

For searching mailinglists I found http://search.gmane.org/ (e.g.
use gmane.comp.emulators.wine.patches as group) very useful.


Jan


From jan.wine at zerebecki.de  Sun Nov 11 03:02:14 2007
From: jan.wine at zerebecki.de (Jan Zerebecki)
Date: Sun, 11 Nov 2007 10:02:14 +0100
Subject: Bugzilla rights
In-Reply-To: <200711062109.14748.research@science.su>
References: <4730C463.9020809@kievinfo.com>
	<200711062109.14748.research@science.su>
Message-ID: <20071111090214.GL5380@crissy.swd.zerebecki.de>

On Tue, Nov 06, 2007 at 09:09:14PM +0000, L. Rahyen wrote:
> On Tuesday November 6 2007 19:45, Vitaliy Margolen wrote:
> > Bugzilla admin, please disallow people to add/remove e-mail addresses
> > to/from bugs unless they've been given that right. Or at least have rights
> > to modify any aspect of the bug.
> 	I think that we should remove the right to add/remove e-mail addresses ONLY 
> from user who abuse his/her rights (like Toby Brommerich). All other users 
> should have this right - at least the right to add others to CC list.

Sorry, neither of these seem to be possible with bugzilla as it
currently is. I suppose in this case it was just an error from
which something was learned. If someone doesn't learn, we still
can disable their account.


Jan



From marcus at jet.franken.de  Sun Nov 11 13:36:12 2007
From: marcus at jet.franken.de (Marcus Meissner)
Date: Sun, 11 Nov 2007 20:36:12 +0100
Subject: %fs, %gs on AROS hosted
In-Reply-To: <op.t1kq9m11xnc239@evod500>
References: <op.t1d2qyp6xnc239@evod500> <20071107073734.GA26859@galeere>
	<op.t1fu1di7xnc239@evod500> <20071108080829.GA4661@galeere>
	<op.t1kq9m11xnc239@evod500>
Message-ID: <20071111193612.GB4389@galeere>

On Sat, Nov 10, 2007 at 12:52:24PM +0100, Staf Verhaegen wrote:
> On Thu, 08 Nov 2007 09:08:29 +0100, Marcus Meissner  
> <marcus at jet.franken.de> wrote:
> 
> >> But the use of %fs by wine does not seem to conflict in any way with a
> >> possible usage of that segment register by the OS where wine is running
> >> on. Or is there some OS specific code that is handling it ?
> >
> > No, it does not conflict. Your syscall / scheduler entry/exit points
> > however need to take care to save/restore it correctly, otherwise
> > you get interesting crashes ;)
> 
> Already big thanks.
> 
> Do you know where this code for these entry/exit points handling is  
> located for the different OSes in the wine source code?

These are in the Operating System itself.

Linux: arch/i386/kernel/entry.S
 
> Does Windows/wine also have such entry/exit points so I could freely use  
> %fs,%gs in AROS hosted on Windows?

See above.

Ciao, Marcus


From leslie_alistair at hotmail.com  Sun Nov 11 15:45:15 2007
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Mon, 12 Nov 2007 08:45:15 +1100
Subject: Patch Follow up
Message-ID: <fh7t6q$8kt$1@ger.gmane.org>

Hi,
  Are there any reason they following patches where missed?
Patch 1 of 2 - Return E_INVALIDARG on bad parameter

Patch 2 of 2 - Enable Test for Bad Argument / Fix Memory leak

clusapi: Corrected value in GetNodeClusterState


Best regards
 Alistair Leslie-Hughes 





From dmitry at codeweavers.com  Sun Nov 11 21:04:57 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 12 Nov 2007 11:04:57 +0800
Subject: OLEDLG: use wide strings
References: <200711112318.06660.lav@etersoft.ru>
Message-ID: <00f201c824d8$d0091090$6700fea9@DMITRY>

"Vitaly Lipatov" <lav at etersoft.ru> wrote:

> Changelog:
> - fix buffers size for registry functions
> - use unicode registry functions
> - do not requires ntdll anymore (remove RtlMultiByteToUnicodeN using)

This patch is extremely buggy, it passes wrong buffer sizes to various APIs
in many places.

-- 
Dmitry.


From dmitry at codeweavers.com  Sun Nov 11 21:09:31 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 12 Nov 2007 11:09:31 +0800
Subject: cmdlgtst: Rename to dialogtest
References: <1194820255.9043.29.camel@p4>
Message-ID: <012501c824d9$73a8bac0$6700fea9@DMITRY>

"Detlef Riekenberg" <wine.dev at web.de> wrote:

> Windows has a lot more Dialogs in shell32, user32, kernel32 and various
> other dlls.
> 
> This is only a rename, the only code that changed is the name of the
> debug-channel.

IMHO it's better to remove programs/cmdlgtst altogether, it doesn't really
test anything, and this is not a place for tests anyway.

-- 
Dmitry.


From junyoung at mogua.com  Sun Nov 11 23:07:41 2007
From: junyoung at mogua.com (Bang Jun-young)
Date: Mon, 12 Nov 2007 14:07:41 +0900
Subject: Valgrind results for Oct 9: still lots of hangs
In-Reply-To: <a71bd89a0711091234r3eecb237v92ab435fa045e388@mail.gmail.com>
References: <a71bd89a0711091234r3eecb237v92ab435fa045e388@mail.gmail.com>
Message-ID: <22aa2f590711112107l7eba675dtf82c06ceb80db3c@mail.gmail.com>

Just out of curiousity, is there a special reason for you to use "Oct" as the
abbreviation for November?

On 11/10/07, Dan Kegel <dank at kegel.com> wrote:
> Results for today's git (plus my dde patch) are online at
>  http://kegel.com/wine/valgrind/20071109/
>
> ole32/tests/marshall.c has always been hanging
> when run under valgrind.   In the last two days,
> the following additional tests hang under valgrind:
>  mshtml/tests/dom.c
>  mshtml/tests/htmldoc.c
>  ole32/tests/marshal.c
>  shdocvw/tests/webbrowser.c
>
> I can reproduce one hang with
>   cd dlls/mshtml/tests
>   make testclean
>   wineserver -k
>   RUNTEST_USE_VALGRIND=1 make test
> (with the wine-vg-utils.patch I provide.
> Make by itself does not behave well under valgrind,
> so you can't just do "valgrind make test").
>
> Sadly, I don't have time to do a regression test, but
> it's pretty easy to repeat my results.  See
> http://wiki.winehq.org/Wine_and_Valgrind
> It'd be nice if somebody else verified that
> these hangs occur for them too, that they didn't
> occur with wine-0.9.48, and maybe
> did a regression test to find out when they started...
> - Dan
>
>
>


From dank at kegel.com  Mon Nov 12 00:51:35 2007
From: dank at kegel.com (Dan Kegel)
Date: Sun, 11 Nov 2007 22:51:35 -0800
Subject: Valgrind results for Oct 9: still lots of hangs
In-Reply-To: <22aa2f590711112107l7eba675dtf82c06ceb80db3c@mail.gmail.com>
References: <a71bd89a0711091234r3eecb237v92ab435fa045e388@mail.gmail.com>
	<22aa2f590711112107l7eba675dtf82c06ceb80db3c@mail.gmail.com>
Message-ID: <a71bd89a0711112251y773cc4fdob4983b5c11843761@mail.gmail.com>

Yes, senility.  The next batch will have correct dates both numeric
and alphabetic...

On Nov 11, 2007 9:07 PM, Bang Jun-young <junyoung at mogua.com> wrote:
> Just out of curiousity, is there a special reason for you to use "Oct" as the
> abbreviation for November?


From julliard at winehq.org  Mon Nov 12 03:27:46 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 12 Nov 2007 10:27:46 +0100
Subject: Patch Follow up
In-Reply-To: <fh7t6q$8kt$1@ger.gmane.org> (Alistair Leslie-Hughes's message of
	"Mon, 12 Nov 2007 08:45:15 +1100")
References: <fh7t6q$8kt$1@ger.gmane.org>
Message-ID: <877ikn24q5.fsf@wine.dyndns.org>

"Alistair Leslie-Hughes" <leslie_alistair at hotmail.com> writes:

> Hi,
>   Are there any reason they following patches where missed?

They are not in a format that can be decoded automatically. They should
either be plain text, or MIME attachments with proper MIME headers.
Please fix your mail setup and resend.

-- 
Alexandre Julliard
julliard at winehq.org


From alex at thehandofagony.com  Mon Nov 12 04:26:11 2007
From: alex at thehandofagony.com (Alexander Nicolaysen =?iso-8859-1?q?S=F8rnes?=)
Date: Mon, 12 Nov 2007 11:26:11 +0100
Subject: cmdlgtst: Rename to dialogtest
In-Reply-To: <012501c824d9$73a8bac0$6700fea9@DMITRY>
References: <1194820255.9043.29.camel@p4>
	<012501c824d9$73a8bac0$6700fea9@DMITRY>
Message-ID: <200711121126.12214.alex@thehandofagony.com>

On Monday 12 November 2007 04:09:31 Dmitry Timoshkov wrote:
> "Detlef Riekenberg" <wine.dev at web.de> wrote:
> > Windows has a lot more Dialogs in shell32, user32, kernel32 and various
> > other dlls.
> >
> > This is only a rename, the only code that changed is the name of the
> > debug-channel.
>
> IMHO it's better to remove programs/cmdlgtst altogether, it doesn't really
> test anything, and this is not a place for tests anyway.

I seem to recall they were very useful when translating the dialogues.


Alexander N: S?rnes


From julliard at winehq.org  Mon Nov 12 04:38:55 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 12 Nov 2007 11:38:55 +0100
Subject: How can we handle undcomented shell functionsAW,
	that MS declared now (WSTR version only)
In-Reply-To: <1194734463.6809.46.camel@p4> (Detlef Riekenberg's message of
	"Sat, 10 Nov 2007 23:41:03 +0100")
References: <1194734463.6809.46.camel@p4>
Message-ID: <873avb21fk.fsf@wine.dyndns.org>

Detlef Riekenberg <wine.dev at web.de> writes:

> Examples: PathProcessCommend, PathResolve, PathQualify
>
> Question for include/shlobj.h:
> What is the correct way to declare such functions?

They should be declared exactly like they are on Windows. The AW
function is internal to shell32.

> Next question for shell32.spec:
> Are we fixed to "ptr" for such functions?
> ("str", "wstr" and "long" are all used and need to be fixed)

They should be ptr.

> Is it possible / useful to add support for "awstr" (or a similar name)?
> What about support for UNICODE-Strings ("ustr")?

I don't think it's worth the trouble.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Mon Nov 12 04:45:06 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 12 Nov 2007 11:45:06 +0100
Subject: wininet: update test to pass on newer versions of windows
In-Reply-To: <558b2f5c0711091024i7a230fe6p7f939c8672c1bf42@mail.gmail.com>
	(Lei Zhang's message of "Fri, 9 Nov 2007 10:24:16 -0800")
References: <558b2f5c0711091024i7a230fe6p7f939c8672c1bf42@mail.gmail.com>
Message-ID: <87sl3bzqrx.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> +
> +  /* sz is 14 on XP SP1 and beyond, 30 on XP and before */
> +  todo_wine ok( sz == 14, "sz wrong\n");

The tests have to pass on all Windows versions. If some return 30 and
some return 14 the test must accept both.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Mon Nov 12 04:50:27 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 12 Nov 2007 11:50:27 +0100
Subject: widl [2/9]: Add an option to use Wine exception handlers.
In-Reply-To: <20071110000604.GB11867@linux.ucla.edu> (Dan Hipschman's message
	of "Fri, 9 Nov 2007 16:06:04 -0800")
References: <20071110000604.GB11867@linux.ucla.edu>
Message-ID: <87oddzzqj0.fsf@wine.dyndns.org>

Dan Hipschman <dsh at linux.ucla.edu> writes:

> This patch adds a --wine-seh option to widl to use Wine's SEH instead of
> the Windows one.

This should not be a widl option. widl should generate a single version
of the C code that works on all compilers, using appropriate macros and
#ifdefs. Also you shouldn't use the wine/exception.h macros, since you
are generating the code you can output the code directly, in a much more
straightforward way than the convoluted __TRY macros.

-- 
Alexandre Julliard
julliard at winehq.org


From hans at it.vu.nl  Mon Nov 12 04:53:00 2007
From: hans at it.vu.nl (Hans Leidekker)
Date: Mon, 12 Nov 2007 11:53:00 +0100
Subject: wininet: update test to pass on newer versions of windows
In-Reply-To: <87sl3bzqrx.fsf@wine.dyndns.org>
References: <558b2f5c0711091024i7a230fe6p7f939c8672c1bf42@mail.gmail.com>
	<87sl3bzqrx.fsf@wine.dyndns.org>
Message-ID: <200711121153.00614.hans@it.vu.nl>

On Monday 12 November 2007 11:45:06 Alexandre Julliard wrote:

> > +  /* sz is 14 on XP SP1 and beyond, 30 on XP and before */
> > +  todo_wine ok( sz == 14, "sz wrong\n");
> 
> The tests have to pass on all Windows versions. If some return 30 and
> some return 14 the test must accept both.

FWIW, my patch named "#2 wininet: Fix a number of problems with InternetGetCookie."
corrects this.

 -Hans


From fgallego at dccia.ua.es  Mon Nov 12 09:20:49 2007
From: fgallego at dccia.ua.es (=?ISO-8859-1?Q?Francisco_Jos=E9_Gallego_Dur=E1n?=)
Date: Mon, 12 Nov 2007 16:20:49 +0100
Subject: Problem with wine + Dreamweaver + VNC
In-Reply-To: <7b5ae9630711120318i3edd7a9v32f088fed61f43b3@mail.gmail.com>
References: <7b5ae9630711120318i3edd7a9v32f088fed61f43b3@mail.gmail.com>
Message-ID: <7b5ae9630711120720t682596d5nec481db7777ea031@mail.gmail.com>

Hello,
 I am trying to run Dreamweaver.exe and Photoshop.exe in a remote
gnome-session through vnc4server. When I try to run it I get the following
message:

Xlib:  extension "XFree86-DRI" missing on display ": 3.0".
X Error of failed request:  BadValue (integer parameter out of range for
operation)
  Major opcode of failed request:  148 (GLX)
  Minor opcode of failed request:  3 (X_GLXCreateContext)
  Value in failed request:  0x24
  Serial number of failed request:  11
  Current serial number in output stream:  12

 Might it be a kind of a bug? I am running wine 0.9.49, Debian etch with
latest updates, and vnc4server.
 Thank you for your help.

Francisco Gallego.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071112/a33c2b2f/attachment-0001.htm 

From astrand at cendio.se  Mon Nov 12 14:37:28 2007
From: astrand at cendio.se (=?UTF-8?Q?Peter_=C3=85strand?=)
Date: Mon, 12 Nov 2007 21:37:28 +0100 (CET)
Subject: Too many WM_MOUSEACTIVATE
Message-ID: <Pine.LNX.4.64.0711122130080.14333@maggie.lkpg.cendio.se>


I have lot's of problems with WM_MOUSEACTIVATE messages in "Magna Cura". 
The effekt is that certain popup dialog doesn't work: After selecting 
something, say a date, the whole "form" is cleared. After much debugging, 
I've found out that WM_MOUSEACTIVATE is the problem. If I explicitly stop 
WM_MOUSEACTIVATE from propagating from dialogs to parents, then things 
works OK. I do this by addding:

	case WM_MOUSEACTIVATE: 
	    return MA_ACTIVATE;

in DefDlgProc{A,W}. I wonder how many things that will brake with a change 
like this....

Just a long shot, but has anyone else seen anything similiar to this?

(It turns out that there are multiple differences compared to Windows; one 
with two many messages generated when the popup is created, another with 
too few messages when changing tab in a SysTabControl32 (but zero messages 
works fine as well.)

Rgds, 
---
Peter ?strand		ThinLinc Chief Developer
Cendio AB		http://www.cendio.se
Wallenbergs gata 4
583 30 Link?ping	Phone: +46-13-21 46 00

ThinLinc User Group 2007 H?stkonferens --- 15-16 november, Link?ping.
Program och anm?lan: http://www.thinlincusergroup.se/aktiviteter

From hans at it.vu.nl  Mon Nov 12 14:57:48 2007
From: hans at it.vu.nl (Hans Leidekker)
Date: Mon, 12 Nov 2007 21:57:48 +0100
Subject: rpcrt4: Implement RpcCancelThread for the ncacn_ip_tcp protocol
	sequence.
In-Reply-To: <4738B32B.90703@codeweavers.com>
References: <4738B32B.90703@codeweavers.com>
Message-ID: <200711122157.48345.hans@it.vu.nl>

On Monday 12 November 2007 21:10:19 Robert Shearman wrote:

> +static CRITICAL_SECTION_DEBUG threaddata_cs_debug =
> +{
> +    0, 0, &uuid_cs,

I smell a copy/paste artifact ;)

 -Hans


From roy at cs.hmc.edu  Mon Nov 12 18:19:13 2007
From: roy at cs.hmc.edu (Roy Shea)
Date: Mon, 12 Nov 2007 16:19:13 -0800
Subject: svchost Patch Question
Message-ID: <20071113001913.GA14069@knuth.cs.hmc.edu>

Howdy,

I'm looking for advice on how to clean up the implementation of
svchost.  The latest version is available at:

http://www.winehq.org/pipermail/wine-patches/2007-November/046467.html

If the stopper for this patch is the lack of a DLL using it, I can
resend svchost later this week when I have a stub implementation of
BITS using svchost ready.

Thanks for any pointers!
-Roy





From dank at kegel.com  Tue Nov 13 01:27:26 2007
From: dank at kegel.com (Dan Kegel)
Date: Mon, 12 Nov 2007 23:27:26 -0800
Subject: Grumble. Lost the Valgrind magic.
Message-ID: <a71bd89a0711122327g30c28221uc4a0f545c018d072@mail.gmail.com>

I had to reinstall my main valgrind testing machine
(I foolishly ran the vmware server install script, and
it nuked my wireless), and since then, valgrind
isn't giving me stack traces.  I guess something's
wrong in my recipe, but I'm not sure what, the
vg-3.2.3 patch is being applied.

Sigh.  Is anybody else having luck building a valgrind
that gives good stack traces for wine?


From truiken at gmail.com  Tue Nov 13 01:36:58 2007
From: truiken at gmail.com (James Hawkins)
Date: Tue, 13 Nov 2007 01:36:58 -0600
Subject: Grumble. Lost the Valgrind magic.
In-Reply-To: <a71bd89a0711122327g30c28221uc4a0f545c018d072@mail.gmail.com>
References: <a71bd89a0711122327g30c28221uc4a0f545c018d072@mail.gmail.com>
Message-ID: <22821af30711122336m3ce0cb5bl4c356fea9b03e0a@mail.gmail.com>

On 11/13/07, Dan Kegel <dank at kegel.com> wrote:
> I had to reinstall my main valgrind testing machine
> (I foolishly ran the vmware server install script, and
> it nuked my wireless), and since then, valgrind
> isn't giving me stack traces.  I guess something's
> wrong in my recipe, but I'm not sure what, the
> vg-3.2.3 patch is being applied.
>
> Sigh.  Is anybody else having luck building a valgrind
> that gives good stack traces for wine?
>

On Gutsy, I haven't been able to get stack traces either.

-- 
James Hawkins


From tim at ipi.ac.ru  Tue Nov 13 07:23:26 2007
From: tim at ipi.ac.ru (Timofei V. Bondarenko)
Date: Tue, 13 Nov 2007 16:23:26 +0300
Subject: xrun handling in winealsa.drv
In-Reply-To: <473496AF.8020800@gmail.com>
References: <473075F5.9030108@ipi.ac.ru> <473095FA.40803@gmail.com>
	<47347B9B.5070107@ipi.ac.ru> <473496AF.8020800@gmail.com>
Message-ID: <4739A54E.5030703@ipi.ac.ru>

Maarten Lankhorst wrote:
> Hello Timofei,
> 
> Timofei V. Bondarenko schreef:
>> No matter how low the chance: sound is an real-time task while linux
>> is not a real-time system. So underruns still possible.
>> And in case of XRUN widRecorder() tries to read about 4G of data.
>>
>> Well, I'm a busy man too. So I've wrote a simple patch and sent it to
>> wine-patches. Please look. May be it will be more clear in C than in
>> my broken english.
> I took a quick look, it's incorrect for dscapture and dsoutput,
> underruns are already handled there in CheckXRUN, in case of _Stop it is
> unneeded as well since it just stopped and restarted, no underruns
> possible. The only thing needed in that part is that the < 0 checks need
> to have a cast to sframes.

Sure, you know better about it supposed to work ;-)
when  i can notice the obvious mistakes only.

My main concern is the widRecorder() not the ds though.

Regards,
	Tim.


From stefandoesinger at gmx.at  Tue Nov 13 16:14:11 2007
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Tue, 13 Nov 2007 23:14:11 +0100
Subject: svchost Patch Question
In-Reply-To: <20071113001913.GA14069@knuth.cs.hmc.edu>
References: <20071113001913.GA14069@knuth.cs.hmc.edu>
Message-ID: <200711132314.15664.stefandoesinger@gmx.at>

Am Dienstag, 13. November 2007 01:19:13 schrieb Roy Shea:
> Howdy,

> If the stopper for this patch is the lack of a DLL using it, I can
> resend svchost later this week when I have a stub implementation of
> BITS using svchost ready.
I have zero idea what svchost is doing, but the general approach in this case 
is to write tests using the service directly. (However, I am not sure if our 
build and test system currently supports tests for a app in programs/)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071113/c6288f61/attachment.pgp 

From scott at open-vote.org  Tue Nov 13 17:45:29 2007
From: scott at open-vote.org (Scott Ritchie)
Date: Tue, 13 Nov 2007 15:45:29 -0800
Subject: Asking Valve for Steam Survey Results
Message-ID: <473A3719.6090705@open-vote.org>

Valve regularly runs surveys of steam users, where they profile many
different things about the hardware.  They're nice enough to publish the
results:

http://www.steampowered.com/status/survey.html

Some of these provide a way to detect Wine users.  Everyone using the
"Wine waveout" audio driver, for instance, must be a Wine user.
Unfortunately, valve lumps all of these into "other" on the survey
results page.

Worries about sampling bias aside (maybe Wine users are less likely to
do the steam survey), if we had the raw data from Valve we could
determine the actual percentage of Steam users playing through Wine.

Looking at the data we do have, we may be able to make a good guess from
examining the video card driver name field.  Excluding NVidia, ATI, and
Intel leaves just over 4% of respondents using an "other" video driver
like the Wine one.  If even only a quarter of these "others" are using
Wine, that still gives us 1% of the entire 10 million+ Steam user base,
translating into hundreds of thousands of users.

Does anyone know whom we can contact at Valve for more specific results?

Thanks,
Scott Ritchie


From truiken at gmail.com  Tue Nov 13 19:04:28 2007
From: truiken at gmail.com (James Hawkins)
Date: Tue, 13 Nov 2007 19:04:28 -0600
Subject: msxml: Implement cloneNode and correct insertBefore
In-Reply-To: <fhdfno$21f$1@ger.gmane.org>
References: <fhdfno$21f$1@ger.gmane.org>
Message-ID: <22821af30711131704i354c6861q3d859b53cf871d67@mail.gmail.com>

On 11/12/07, Alistair Leslie-Hughes <leslie_alistair at hotmail.com> wrote:
> Hi,
>
> Changelog:
>         InsertBefore is allowed to have outNewChild as NULL
>         Implement cloneNode
>

One fix per patch please.  Also, please add tests for these fixes.

> Best Regards
>   Alistair Leslie-Hughes
>
> diff --git a/dlls/msxml3/node.c b/dlls/msxml3/node.c
> index 61d5ab2..86d7614 100644
> --- a/dlls/msxml3/node.c
> +++ b/dlls/msxml3/node.c
> @@ -373,7 +373,7 @@ static HRESULT WINAPI xmlnode_insertBefore(
>
>      TRACE("(%p)->(%p,var,%p)\n",This,newChild,outNewChild);
>
> -    if (!(newChild && outNewChild))
> +    if (!newChild)
>          return E_INVALIDARG;
>
>      switch(V_VT(&refChild))
> @@ -412,9 +412,13 @@ static HRESULT WINAPI xmlnode_insertBefore(
>          xmlAddChild(This->node, new_child_node);
>      }
>
> -    IXMLDOMNode_Release(new);
>      IXMLDOMNode_AddRef(newChild);
> -    *outNewChild = newChild;
> +    IXMLDOMNode_Release(new);
> +    if(outNewChild)
> +    {
> +        *outNewChild = newChild;
> +    }
> +
>      TRACE("ret S_OK\n");
>      return S_OK;
>  }
> @@ -517,8 +521,36 @@ static HRESULT WINAPI xmlnode_cloneNode(
>      VARIANT_BOOL deep,
>      IXMLDOMNode** cloneRoot)
>  {
> -    FIXME("\n");
> -    return E_NOTIMPL;
> +    xmlnode *This = impl_from_IXMLDOMNode( iface );
> +    xmlNodePtr pClone = NULL;
> +    IXMLDOMNode *pNode = NULL;
> +
> +    TRACE("%p (%d)\n", This, deep);
> +
> +    if(!cloneRoot)
> +        return E_INVALIDARG;
> +
> +    pClone = xmlCopyNode(This->node, deep ? 1 : 0);
> +    if(pClone)
> +    {
> +        pClone->doc = This->node->doc;
> +
> +        pNode = create_node(pClone);
> +        if(!pNode)
> +        {
> +            ERR("Copy failed\n");
> +            return E_FAIL;
> +        }
> +
> +        *cloneRoot = pNode;
> +    }
> +    else
> +    {
> +        ERR("Copy failed\n");
> +        return E_FAIL;
> +    }
> +
> +    return S_OK;
>  }
>
>  static HRESULT WINAPI xmlnode_get_nodeTypeString(
> @@ -832,7 +864,7 @@ static ULONG WINAPI Internal_Release(
>      if ( ref == 0 )
>      {
>          if( This->node )
> -           xmldoc_release( This->node->doc );
> +               xmldoc_release( This->node->doc );
>

Please don't make random whitespace changes.

-- 
James Hawkins


From truiken at gmail.com  Tue Nov 13 20:11:20 2007
From: truiken at gmail.com (James Hawkins)
Date: Tue, 13 Nov 2007 20:11:20 -0600
Subject: msxml: Implement cloneNode and correct insertBefore
In-Reply-To: <BAY117-W4B02649F7D36C975B4A3293810@phx.gbl>
References: <fhdfno$21f$1@ger.gmane.org>
	<22821af30711131704i354c6861q3d859b53cf871d67@mail.gmail.com>
	<BAY117-W4B02649F7D36C975B4A3293810@phx.gbl>
Message-ID: <22821af30711131811g27868935uf3423253ddaf5bcd@mail.gmail.com>

On 11/13/07, Alistair Leslie-Hughes <leslie_alistair at hotmail.com> wrote:
>
> Hi James,
>     Thanks for the pointers.
>
>  I resend the patches shortly.  Is there an easy way to split a Diff up? via
> git?  More to the point changes to a single file (without have to backup it
> up every change)
>
>  I just get frustrated with try to keep lots of diffs around.
>

mailing list etiquette: make sure to bottom-post on this ML and CC
wine-devel so others can share in the information exchange.

To answer your question, you have to get into the git mindset.  That
is, you make one fix, commit the fix, write the next fix, etc.  It's
really a development change.  You should know what to fix before you
go in to fix it, not hack around until an app works.

-- 
James Hawkins


From winehacker at gmail.com  Tue Nov 13 20:17:24 2007
From: winehacker at gmail.com (Steven Edwards)
Date: Tue, 13 Nov 2007 21:17:24 -0500
Subject: msxml: Implement Element removeAttribute
In-Reply-To: <fhderv$vlc$1@ger.gmane.org>
References: <fhderv$vlc$1@ger.gmane.org>
Message-ID: <19e31a080711131817m256ada62xc97dcca19fef6c6c@mail.gmail.com>

On Nov 12, 2007 3:57 AM, Alistair Leslie-Hughes
<leslie_alistair at hotmail.com> wrote:
>
> +
> +    TRACE("(%p)->%s\n", iface, debugstr_w(p));
> +    // TODO Replace if Attribute has a Default value.

Also another thing. No C++ style comments in Wine source code.

Thanks
Steven

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From leslie_alistair at hotmail.com  Tue Nov 13 20:44:51 2007
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Wed, 14 Nov 2007 13:44:51 +1100
Subject: msxml: Implement cloneNode and correct insertBefore
References: <fhdfno$21f$1@ger.gmane.org><22821af30711131704i354c6861q3d859b53cf871d67@mail.gmail.com><BAY117-W4B02649F7D36C975B4A3293810@phx.gbl>
	<22821af30711131811g27868935uf3423253ddaf5bcd@mail.gmail.com>
Message-ID: <fhdngn$jik$1@ger.gmane.org>


"James Hawkins" <truiken at gmail.com> wrote in message 
news:22821af30711131811g27868935uf3423253ddaf5bcd at mail.gmail.com...
> On 11/13/07, Alistair Leslie-Hughes <leslie_alistair at hotmail.com> wrote:
>>
>> Hi James,
>>     Thanks for the pointers.
>>
>>  I resend the patches shortly.  Is there an easy way to split a Diff up? 
>> via
>> git?  More to the point changes to a single file (without have to backup 
>> it
>> up every change)
>>
>>  I just get frustrated with try to keep lots of diffs around.
>>
>
> mailing list etiquette: make sure to bottom-post on this ML and CC
> wine-devel so others can share in the information exchange.
>
> To answer your question, you have to get into the git mindset.  That
> is, you make one fix, commit the fix, write the next fix, etc.  It's
> really a development change.  You should know what to fix before you
> go in to fix it, not hack around until an app works.
>
> -- 
> James Hawkins
>
Thanks again.

I should of read http://wiki.winehq.org/GitWine first.  Ill resend patches 
shortly.


Best Regards
Alistair Leslie-Hughes




From hverbeet at gmail.com  Wed Nov 14 02:46:02 2007
From: hverbeet at gmail.com (H. Verbeet)
Date: Wed, 14 Nov 2007 09:46:02 +0100
Subject: [4/8] WineD3D: Depth stencil fixes
In-Reply-To: <200711132307.35019.stefan@codeweavers.com>
References: <200711132307.35019.stefan@codeweavers.com>
Message-ID: <d658b69e0711140046o305cd42ds59082d4b97210668@mail.gmail.com>

On 13/11/2007, Stefan D?singer <stefan at codeweavers.com> wrote:
>  static void depth_copy(IWineD3DDevice *iface) {
>      IWineD3DDeviceImpl *This = (IWineD3DDeviceImpl *)iface;
> -    IWineD3DSurfaceImpl *depth_stencil = (IWineD3DSurfaceImpl *)This->depthStencilBuffer;
> +    IWineD3DSurfaceImpl *depth_stencil = (IWineD3DSurfaceImpl *)This->auto_depth_stencil_buffer;
>
>      /* Only copy the depth buffer if there is one. */
I think this one should be changed to use stencilBufferTarget instead,
although not in this patch.


From maarten at codeweavers.com  Wed Nov 14 02:30:26 2007
From: maarten at codeweavers.com (Maarten Lankhorst)
Date: Wed, 14 Nov 2007 09:30:26 +0100
Subject: msxml: Implement cloneNode and correct insertBefore
In-Reply-To: <22821af30711131811g27868935uf3423253ddaf5bcd@mail.gmail.com>
References: <fhdfno$21f$1@ger.gmane.org>	<22821af30711131704i354c6861q3d859b53cf871d67@mail.gmail.com>	<BAY117-W4B02649F7D36C975B4A3293810@phx.gbl>
	<22821af30711131811g27868935uf3423253ddaf5bcd@mail.gmail.com>
Message-ID: <473AB222.4030805@codeweavers.com>

Hi James,

James Hawkins schreef:
> mailing list etiquette: make sure to bottom-post on this ML and CC
> wine-devel so others can share in the information exchange.
>
> To answer your question, you have to get into the git mindset.  That
> is, you make one fix, commit the fix, write the next fix, etc.  It's
> really a development change.  You should know what to fix before you
> go in to fix it, not hack around until an app works.
>   
Strictly speaking not entirely true, a lot of the times I first hack
around till my app works before cleaning it up and sending in a proper
fix. You are right that missing the clean-up will mean that the code
won't be accepted into wine, sometimes that is even more work then the
stuff needed to make it work.

A: Top posting
> Q: What is the most annoying thing in the world?

Cheers,
Maarten




From stefandoesinger at gmx.at  Wed Nov 14 04:05:38 2007
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Wed, 14 Nov 2007 11:05:38 +0100
Subject: Asking Valve for Steam Survey Results
In-Reply-To: <473A3719.6090705@open-vote.org>
References: <473A3719.6090705@open-vote.org>
Message-ID: <200711141105.41962.stefandoesinger@gmx.at>

Am Mittwoch, 14. November 2007 00:45:29 schrieb Scott Ritchie:
> Looking at the data we do have, we may be able to make a good guess from
> examining the video card driver name field.  Excluding NVidia, ATI, and
> Intel leaves just over 4% of respondents using an "other" video driver
> like the Wine one.  If even only a quarter of these "others" are using
> Wine, that still gives us 1% of the entire 10 million+ Steam user base,
> translating into hundreds of thousands of users.
It depends on how they find the vendor. If they go for the d3d string, then 
wine shows up as "Direct3D HAL", which would be identifyable. If they go for 
the PCI ID, then Wine installations show up as either ATI, NVIDIA, or Intel, 
unless the detection failed.

More interesting is the "Video Card Driver Name":
Video Card Driver Name
 
nv4_disp.dll  10,269  
53.43 %#####################################################
  ati2dvag.dll  5,060  26.33 %##########################
  nvd3dum.dll  2,698  14.04 %##############
  atiumdag.dll  571  2.97 %###
  ialmrnt5.dll  302  1.57 %##
  Other  319  1.66 %##

This identifies the DLL, and wine has none of them. So we'd show up in the 
Other section here. Possible others in Windows space are matrox, sis and 
other chips, as well as the generic vesa driver.

The best identification is the sound card name, or if Wine's display driver 
shows up as winex11.drv
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071114/18d6cd19/attachment.pgp 

From rob at codeweavers.com  Wed Nov 14 04:34:33 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Wed, 14 Nov 2007 10:34:33 +0000
Subject: [4/4] msxml: Test for removeAttribute
In-Reply-To: <fhe01p$453$4@ger.gmane.org>
References: <fhe01p$453$4@ger.gmane.org>
Message-ID: <473ACF39.8080407@codeweavers.com>

Alistair Leslie-Hughes wrote:
> @@ -589,6 +589,10 @@ static void test_domnode( void )
>          ok( !lstrcmpW(V_BSTR(&var), szstr1), "wrong attr value\n");
>          VariantClear( &var );
>          SysFreeString( str );
> +
> +
> +        str = SysAllocString( szvr );
> +        SysFreeString( str );
>
>          r = IXMLDOMElement_get_attributes( element, &map );
>          ok( r == S_OK, "get_attributes returned wrong code\n");
> @@ -1077,7 +1081,7 @@ static void test_create(void)
>      ok( r == S_OK, "returns %08x\n", r );
>      r = IXMLDOMNamedNodeMap_get_length( attr_map, &num );
>      ok( r == S_OK, "returns %08x\n", r );
> -    ok( num == 1, "num %ld\n", num );
> +    ok( num == 1, "num %ld\n", num );
>      IXMLDOMNamedNodeMap_Release( attr_map );
>      VariantClear(&var);
>      r = IXMLDOMElement_getAttribute( element, name, &var );
>   

These two changes don't appear to be relevant to the test you're adding.

-- 
Rob Shearman



From stefan at codeweavers.com  Wed Nov 14 04:22:00 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Wed, 14 Nov 2007 11:22:00 +0100
Subject: [4/8] WineD3D: Depth stencil fixes
In-Reply-To: <d658b69e0711140046o305cd42ds59082d4b97210668@mail.gmail.com>
References: <200711132307.35019.stefan@codeweavers.com>
	<d658b69e0711140046o305cd42ds59082d4b97210668@mail.gmail.com>
Message-ID: <200711141122.03232.stefan@codeweavers.com>

Am Mittwoch, 14. November 2007 09:46:02 schrieb H. Verbeet:
> On 13/11/2007, Stefan D?singer <stefan at codeweavers.com> wrote:
> >  static void depth_copy(IWineD3DDevice *iface) {
> >      IWineD3DDeviceImpl *This = (IWineD3DDeviceImpl *)iface;
> > -    IWineD3DSurfaceImpl *depth_stencil = (IWineD3DSurfaceImpl
> > *)This->depthStencilBuffer; +    IWineD3DSurfaceImpl *depth_stencil =
> > (IWineD3DSurfaceImpl *)This->auto_depth_stencil_buffer;
> >
> >      /* Only copy the depth buffer if there is one. */
>
> I think this one should be changed to use stencilBufferTarget instead,
> although not in this patch.
I thought about that too, but does the depth copy ever apply to other stencil 
buffers than the implicit one?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071114/b07b225b/attachment-0001.pgp 

From hverbeet at gmail.com  Wed Nov 14 06:28:08 2007
From: hverbeet at gmail.com (H. Verbeet)
Date: Wed, 14 Nov 2007 13:28:08 +0100
Subject: [4/8] WineD3D: Depth stencil fixes
In-Reply-To: <200711141122.03232.stefan@codeweavers.com>
References: <200711132307.35019.stefan@codeweavers.com>
	<d658b69e0711140046o305cd42ds59082d4b97210668@mail.gmail.com>
	<200711141122.03232.stefan@codeweavers.com>
Message-ID: <d658b69e0711140428l5e5ed8f3w62190ac3f503f9cf@mail.gmail.com>

On 14/11/2007, Stefan D?singer <stefan at codeweavers.com> wrote:
> Am Mittwoch, 14. November 2007 09:46:02 schrieb H. Verbeet:
> > On 13/11/2007, Stefan D?singer <stefan at codeweavers.com> wrote:
> > >  static void depth_copy(IWineD3DDevice *iface) {
> > >      IWineD3DDeviceImpl *This = (IWineD3DDeviceImpl *)iface;
> > > -    IWineD3DSurfaceImpl *depth_stencil = (IWineD3DSurfaceImpl
> > > *)This->depthStencilBuffer; +    IWineD3DSurfaceImpl *depth_stencil =
> > > (IWineD3DSurfaceImpl *)This->auto_depth_stencil_buffer;
> > >
> > >      /* Only copy the depth buffer if there is one. */
> >
> > I think this one should be changed to use stencilBufferTarget instead,
> > although not in this patch.
> I thought about that too, but does the depth copy ever apply to other stencil
> buffers than the implicit one?
>
It applies to whatever depth stencil is active at the time you switch
between rendering onscreen/offscreen.


From julliard at winehq.org  Wed Nov 14 06:12:00 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 14 Nov 2007 13:12:00 +0100
Subject: USER32: Patch 3 of 6: DlgDirList converts path specification to
	uppercase.
In-Reply-To: <52553.200.125.198.208.1194736094.squirrel@www.palosanto.com>
	("Alex =?utf-8?Q?Villac=C3=ADs?= Lasso"'s message of "Sat, 10 Nov 2007
	18:08:14 -0500 (ECT)")
References: <52553.200.125.198.208.1194736094.squirrel@www.palosanto.com>
Message-ID: <87r6ityqjz.fsf@wine.dyndns.org>

Alex Villac?s Lasso <a_villacis at palosanto.com> writes:

> Observed while preparing conformance tests. The filepath (if valid) gets
> converted to uppercase on return.
>
> Changelog:
> * DlgDirList must convert path specification to uppercase.

You should do that after the SetCurrentDirectory, uppercasing it first
means we are much more likely to have to do a slow case-insensitive
search on the whole path.

-- 
Alexandre Julliard
julliard at winehq.org


From dank at kegel.com  Wed Nov 14 08:32:23 2007
From: dank at kegel.com (Dan Kegel)
Date: Wed, 14 Nov 2007 06:32:23 -0800
Subject: Valgrind results for Nov 12 & 13
Message-ID: <a71bd89a0711140632m411186f3r2ea7a2678f3b3dbe@mail.gmail.com>

It seems that valgrind doesn't like Ubuntu 7.10; I had
to drop back to my Feisty system to generate good
valgrind stack dumps.  And the tests didn't hang once!

Results for the last two days are at
http://kegel.com/wine/valgrind/20071112/
http://kegel.com/wine/valgrind/20071113/

The logs are trimmed a bit more to make diffs less noisy.
Diff now shows clearly that there were significant
improvements in three tests between those two runs:
ole32/compobj, ole32/marshal, and user32/dde
Errors still remain in all three tests, though.
- Dan


From brian.vincent at gmail.com  Wed Nov 14 10:52:50 2007
From: brian.vincent at gmail.com (Brian Vincent)
Date: Wed, 14 Nov 2007 09:52:50 -0700
Subject: Asking Valve for Steam Survey Results
In-Reply-To: <473A3719.6090705@open-vote.org>
References: <473A3719.6090705@open-vote.org>
Message-ID: <3010968c0711140852g35ea420n6183a1fea962ff9e@mail.gmail.com>

On Nov 13, 2007 4:45 PM, Scott Ritchie <scott at open-vote.org> wrote:
> Does anyone know whom we can contact at Valve for more specific results?

Here's the answer from Valve to your question:

----

Hey Brian, we would be more than happy to help. I just did a quick query
for the audio device and found 12 out of 8566 results to contain "wine"
in the name of the driver. I did the same for video card and found zero,
if you can give me more details on specific strings or signatures for a
wine user I could have a look for. We just started this survey today so
I can run the queries again once we have a larger sample set.

Our crash reporting system also collects information about the existence
of wine, about 0.4% of the reports are from Wine users (this is for a
couple months of data so a statistically significant sample). We have
around 3 million unique users in a month so that is around 12k wine
users. Given the large majority of crashes are game code related (and
not OS dependant) I suspect this is a fair measure for you.

----

-Brian


From leslie_alistair at hotmail.com  Wed Nov 14 05:23:02 2007
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Wed, 14 Nov 2007 22:23:02 +1100
Subject: [4/4] msxml: Test for removeAttribute (try 2)
In-Reply-To: <fhe01p$453$4@ger.gmane.org>
References: <fhe01p$453$4@ger.gmane.org>
Message-ID: <fhelsg$1u5$1@ger.gmane.org>

Hi,
  Changelog:
      msxml: Test for removeAttribute

Best Regards
Alistair Leslie-Hughes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0005-msxml-Test-for-removeAttribute.patch
Type: text/x-patch
Size: 862 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071114/10d9ff09/attachment.bin 

From scott at open-vote.org  Wed Nov 14 14:21:10 2007
From: scott at open-vote.org (Scott Ritchie)
Date: Wed, 14 Nov 2007 12:21:10 -0800
Subject: Asking Valve for Steam Survey Results
In-Reply-To: <3010968c0711140852g35ea420n6183a1fea962ff9e@mail.gmail.com>
References: <473A3719.6090705@open-vote.org>
	<3010968c0711140852g35ea420n6183a1fea962ff9e@mail.gmail.com>
Message-ID: <473B58B6.8020803@open-vote.org>

Brian Vincent wrote:
> On Nov 13, 2007 4:45 PM, Scott Ritchie <scott at open-vote.org> wrote:
>> Does anyone know whom we can contact at Valve for more specific results?
> 
> Here's the answer from Valve to your question:
> 
> ----
> 
> Hey Brian, we would be more than happy to help. I just did a quick query
> for the audio device and found 12 out of 8566 results to contain "wine"
> in the name of the driver. I did the same for video card and found zero,
> if you can give me more details on specific strings or signatures for a
> wine user I could have a look for. We just started this survey today so
> I can run the queries again once we have a larger sample set.
> 
> Our crash reporting system also collects information about the existence
> of wine, about 0.4% of the reports are from Wine users (this is for a
> couple months of data so a statistically significant sample). We have
> around 3 million unique users in a month so that is around 12k wine
> users. Given the large majority of crashes are game code related (and
> not OS dependant) I suspect this is a fair measure for you.
> 
> ----
> 
> -Brian

How are these crash reports generated?  I've never seen a method for
reporting a crash to steam when using it with Wine.

Thank you for taking the initiative on this Brian, and double thanks to
Valve :)

Thanks,
Scott Ritchie


From xixsimplicityxix at gmail.com  Wed Nov 14 14:42:01 2007
From: xixsimplicityxix at gmail.com (John Klehm)
Date: Wed, 14 Nov 2007 14:42:01 -0600
Subject: AppDB down =(
Message-ID: <78a7dad00711141242ic232325mf0ebd2d2bb3dd35e@mail.gmail.com>

Erm yeah the appdb is down... too many connections...sad times.

John


From kingofallhearts999 at gmail.com  Wed Nov 14 15:02:42 2007
From: kingofallhearts999 at gmail.com (Bryan Haskins)
Date: Wed, 14 Nov 2007 16:02:42 -0500
Subject: Asking Valve for Steam Survey Results
In-Reply-To: <3010968c0711140852g35ea420n6183a1fea962ff9e@mail.gmail.com>
References: <473A3719.6090705@open-vote.org>
	<3010968c0711140852g35ea420n6183a1fea962ff9e@mail.gmail.com>
Message-ID: <f85ab1ea0711141302wa02124cpe3db16c107bc60d0@mail.gmail.com>

That is pretty fricking cool. It's not an astronomical figure and
realistically could be contended from many directions but still some idea of
the userbase, I call that significant. =]

On Nov 14, 2007 11:52 AM, Brian Vincent <brian.vincent at gmail.com> wrote:

> On Nov 13, 2007 4:45 PM, Scott Ritchie <scott at open-vote.org> wrote:
> > Does anyone know whom we can contact at Valve for more specific results?
>
> Here's the answer from Valve to your question:
>
> ----
>
> Hey Brian, we would be more than happy to help. I just did a quick query
> for the audio device and found 12 out of 8566 results to contain "wine"
> in the name of the driver. I did the same for video card and found zero,
> if you can give me more details on specific strings or signatures for a
> wine user I could have a look for. We just started this survey today so
> I can run the queries again once we have a larger sample set.
>
> Our crash reporting system also collects information about the existence
> of wine, about 0.4% of the reports are from Wine users (this is for a
> couple months of data so a statistically significant sample). We have
> around 3 million unique users in a month so that is around 12k wine
> users. Given the large majority of crashes are game code related (and
> not OS dependant) I suspect this is a fair measure for you.
>
> ----
>
> -Brian
>
>
>


-- 
Cheers,
Bryan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071114/35016755/attachment-0001.htm 

From truiken at gmail.com  Wed Nov 14 14:34:18 2007
From: truiken at gmail.com (James Hawkins)
Date: Wed, 14 Nov 2007 14:34:18 -0600
Subject: [4/4] msxml: Test for removeAttribute (try 2)
In-Reply-To: <fhelsg$1u5$1@ger.gmane.org>
References: <fhe01p$453$4@ger.gmane.org> <fhelsg$1u5$1@ger.gmane.org>
Message-ID: <22821af30711141234v129deb3bx1833fba8eba7e03b@mail.gmail.com>

On 11/14/07, Alistair Leslie-Hughes <leslie_alistair at hotmail.com> wrote:
> Hi,
>   Changelog:
>       msxml: Test for removeAttribute
>

You sent the patch to the wrong mailing list.  Also, if you send a
'try X' patch, you should write a message saying what you changed from
the last submission.

-- 
James Hawkins


From jnewman at codeweavers.com  Wed Nov 14 16:22:00 2007
From: jnewman at codeweavers.com (Jeremy Newman)
Date: Wed, 14 Nov 2007 16:22:00 -0600
Subject: AppDB down =(
In-Reply-To: <78a7dad00711141242ic232325mf0ebd2d2bb3dd35e@mail.gmail.com>
References: <78a7dad00711141242ic232325mf0ebd2d2bb3dd35e@mail.gmail.com>
Message-ID: <1195078920.7957.1.camel@jnewman>

I restarted it. I still have no idea how it gets into this state. The
logs have not been much help. I think we have exposed a bug in mysql
itself, as we did not have these issues until we upgraded to ver 5.

On Wed, 2007-11-14 at 14:42 -0600, John Klehm wrote:
> Erm yeah the appdb is down... too many connections...sad times.
> 
> John
> 
> 



From bon at elektron.ikp.physik.tu-darmstadt.de  Wed Nov 14 16:58:31 2007
From: bon at elektron.ikp.physik.tu-darmstadt.de (Uwe Bonnes)
Date: Wed, 14 Nov 2007 23:58:31 +0100
Subject: server: Make timer id allocation algorithm conform to the Windows
	one
In-Reply-To: <E1Irv4V-00071U-8j@mail.codeweavers.com>
References: <E1Irv4V-00071U-8j@mail.codeweavers.com>
Message-ID: <18235.32151.31589.483116@hertz.ikp.physik.tu-darmstadt.de>

>>>>> "Dmitry" == Dmitry Timoshkov <dmitry at codeweavers.com> writes:

    Dmitry> Hello, this patch should fix the problem reported in the bug
    Dmitry> 10343. My test which calls SetTimer in an infinite loop shows
    Dmitry> that XP starts to allocate timer ids at 0x7fff and goes
    Dmitry> backwards to 0x101, then restarts from 0x7fff.

Isn't this worth a test suite case?

-- 
Uwe Bonnes                bon at elektron.ikp.physik.tu-darmstadt.de

Institut fuer Kernphysik  Schlossgartenstrasse 9  64289 Darmstadt
--------- Tel. 06151 162516 -------- Fax. 06151 164321 ----------


From dank at kegel.com  Thu Nov 15 03:02:46 2007
From: dank at kegel.com (Dan Kegel)
Date: Thu, 15 Nov 2007 01:02:46 -0800
Subject: Valgrind results for Nov 12 & 13
In-Reply-To: <001601c8274f$204372d0$6700fea9@DMITRY>
References: <a71bd89a0711140632m411186f3r2ea7a2678f3b3dbe@mail.gmail.com>
	<001601c8274f$204372d0$6700fea9@DMITRY>
Message-ID: <a71bd89a0711150102u156cd532g928d4a36a1c77eb@mail.gmail.com>

On Nov 14, 2007 10:16 PM, Dmitry Timoshkov
> While looking at the valgrind reports above I noticed that a lot of
> warnings are triggered in NTDLL_queue_process_apc by the fact that
> not the whole apc_call_t union is initialized before passing it to
> the server. In contrast SERVER_START_REQ always initializes
> __server_request_info to 0 before the client starts to fill the fields.
> Probably that's the question to Alexandre whether we should memset(0)
> apc_call_t before filling it, or just ignore valgrind warnings.

Oh, he'd undoubtedly prefer ignoring to memsetting.
But he would like it even better if we can
avoid sending unneeded bytes.  Are the extra
bytes at the end (they ought to be)?  If so,
whatever decides how many bytes to send could
be just a bit smarter.
- Dan

p.s. the mailing list archives seem to be not archiving new messages :-(


From dank at kegel.com  Thu Nov 15 00:01:34 2007
From: dank at kegel.com (Dan Kegel)
Date: Wed, 14 Nov 2007 22:01:34 -0800
Subject: server: avoid sending uninitialized bytes in break_thread()
Message-ID: <a71bd89a0711142201s1c4f4cf1t5e72df5a57e09f44@mail.gmail.com>

In break_thread(), generate_debug_event() seems to
send the entire ExceptionInformation array regardless of how
many entries are used.   The smart thing to do
would be to send only the used elements, but I
couldn't figure out how to do that.  So here's
a quick fix that just zeroes that array before calling
generate_debug_event().  Is there a better way?

Found by running the Word Viewer 97 under valgrind:
000d: wait_debug_event() = 0 { pid=000a, tid=000b, wait=(nil),
event={exception,{code=80000003,flags=0,rec=(nil),addr=0x40007f0,params={},first=1}
}
 Syscall param writev(vector[1]) points to uninitialised byte(s)
    at 0x40007F2: (within /lib/ld-2.5.so)
    by 0x806AF20: call_req_handler (request.c:249)
    by 0x8056075: main_loop (fd.c:523)
  Address 0x451AAB8 is 24 bytes inside a block of size 88 alloc'd
    by 0x806A167: set_reply_data_size (request.c:200)
    by 0x80510A6: req_wait_debug_event (request.h:96)
    by 0x806AFC7: call_req_handler (request.c:286)
    by 0x8056075: main_loop (fd.c:523)

BTW, here's how I ran word viewer under valgrind:

wordview.sh:

WINEDIR=$HOME/wine-git;
VALGRIND_CMD="/usr/local/valgrind-3.2.3-wine/bin/valgrind
--trace-children=yes --gen-suppressions=all
--suppressions=$WINEDIR/tools/valgrind-suppressions --leak-check=full
--num-callers=20 "
WINE=$WINEDIR/wine
wget http://downloads.pcworld.com/pub/new/business/word_processing/wordview.exe
cp wordview.exe ~/.wine/drive_c/wvinstall.exe
mv ~/.wine/dosdevices/z: ~/.wine/dosdevices/oldz
cd ~/.wine/drive_c
$VALGRIND_CMD $WINE wvinstall.exe /q
cd ../..
mv ~/.wine/dosdevices/oldz ~/.wine/dosdevices/z:


From dank at kegel.com  Thu Nov 15 00:12:14 2007
From: dank at kegel.com (Dan Kegel)
Date: Wed, 14 Nov 2007 22:12:14 -0800
Subject: server: avoid sending uninitialized bytes in break_thread()
In-Reply-To: <a71bd89a0711142201s1c4f4cf1t5e72df5a57e09f44@mail.gmail.com>
References: <a71bd89a0711142201s1c4f4cf1t5e72df5a57e09f44@mail.gmail.com>
Message-ID: <a71bd89a0711142212r3f309e7cw3593f6ebd0d18906@mail.gmail.com>

On Nov 14, 2007 10:01 PM, Dan Kegel <dank at kegel.com> wrote:
> In break_thread(), generate_debug_event() seems to
> send the entire ExceptionInformation array regardless of how
> many entries are used.   The smart thing to do
> would be to send only the used elements, but I
> couldn't figure out how to do that.  So here's
> a quick fix that just zeroes that array before calling
> generate_debug_event().  Is there a better way?

[This time with patch.]

(There's a similar problem on the client side,
but there I think I see how to fix it right in
send_debug_event().)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: server-exception-1.patch
Type: text/x-patch
Size: 545 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071114/a5f4ef2b/attachment-0001.bin 

From mikolaj at zalewski.pl  Wed Nov 14 17:46:07 2007
From: mikolaj at zalewski.pl (=?UTF-8?B?TWlrb8WCYWogWmFsZXdza2k=?=)
Date: Thu, 15 Nov 2007 00:46:07 +0100
Subject: [3/4] msxml: Implement removeAttribute
Message-ID: <473B88BF.8010204@zalewski.pl>

  A problem with this patch is that the user may have an IXMLDOMNode * 
reference to the attribute node being removed. The xmlFreeProp will free 
the xmlnode so accessing the IXMLDOMNode could result in memory 
corruption. Under MSXML it's possible to access such node and even 
reconnect it e.g. to a different documents (at least I seem to remember 
such a thing for element nodes).
  I don't think supporting it is possible with our current reference 
counting only for the whole document. I was thinking about also keeping 
reference counts for each connected component and each node. The 
connected component count could be used to determine if the node can be 
freed in such a situation and the node count could be used to update the 
connected component counts if the tree gets split. But so far I haven't 
written any code (Another possibility is to keep in each node the 
refcount of the whole subtree starting in this node. This is more 
elegant but it would take a linear time with respect to the tree height 
to update the refcount).

Miko?aj Zalewski


From alex at thehandofagony.com  Thu Nov 15 03:31:04 2007
From: alex at thehandofagony.com (Alexander Nicolaysen =?utf-8?q?S=C3=B8rnes?=)
Date: Thu, 15 Nov 2007 10:31:04 +0100
Subject: Patch to make Wine prettier
In-Reply-To: <f188924b0711110556s1cfb6d8dlaafc24a229750342@mail.gmail.com>
References: <f188924b0711110556s1cfb6d8dlaafc24a229750342@mail.gmail.com>
Message-ID: <200711151031.04971.alex@thehandofagony.com>

On Sunday 11 November 2007 14:56:21 Fred . wrote:
> Applications that run under Wine looks so legacy like Windows 95.
>
> This patch makes the software applications look a bit more modern and
> prettier by changing the colors from the Windows 95-look to the
> "Windows Classic"-look, the one in Windows ME/2000/2003.
>
> I have not yet tested the patch. Because I was unable to compile Wine
> on my computer.
>
> The file should goto;
> /wine/dlls/user32/resources/display.rc


Great idea, but the patch does not change anything.


Alexander N. S?rnes


From alex at thehandofagony.com  Wed Nov 14 18:00:17 2007
From: alex at thehandofagony.com (Alexander Nicolaysen =?iso-8859-1?q?S=F8rnes?=)
Date: Thu, 15 Nov 2007 01:00:17 +0100
Subject: AppDB down =(
In-Reply-To: <1195078920.7957.1.camel@jnewman>
References: <78a7dad00711141242ic232325mf0ebd2d2bb3dd35e@mail.gmail.com>
	<1195078920.7957.1.camel@jnewman>
Message-ID: <200711150100.18778.alex@thehandofagony.com>

On Wednesday 14 November 2007 23:22:00 Jeremy Newman wrote:
> I restarted it. I still have no idea how it gets into this state. The
> logs have not been much help. I think we have exposed a bug in mysql
> itself, as we did not have these issues until we upgraded to ver 5.
>
> On Wed, 2007-11-14 at 14:42 -0600, John Klehm wrote:
> > Erm yeah the appdb is down... too many connections...sad times.
> >
> > John


Actually it was because of a patch I sent yesterday.  The AppDB user tables 
are not exported so I missed a bug in my testing.  I sent a fix earlier 
today, Chris will probably apply it in a few hours.


Alexander N. S?rnes


From mckillroy at gmail.com  Thu Nov 15 06:12:07 2007
From: mckillroy at gmail.com (Chris McKillroy)
Date: Thu, 15 Nov 2007 13:12:07 +0100
Subject: Question: How to link kernel32.dll.so to get loaded at a fixed
	address (0x7bf0000) each time in a Solaris environment
Message-ID: <a99a83590711150412p8708e53g52468de48d3f4a60@mail.gmail.com>

Hello everybody,

I recently run into the following problem:

I tried to use a DLL injection into a process started by a controller
Process using an external code hooking dll
(http://www.madshi.net/madCodeHookDescription.htm)
to achieve some sort of datalink.
In a windows environment the solution works stable and perfectly.
(Controller Process NWNX4 as provided by nwnx4.org, child process
nwn2server.exe, as provided by Obsidian - all legal and intended use).

Under Solaris10 (wine version 0.9.49) the child process regularly
crashed upon creation, respectivley when the dll was injected.

After a lengthy debugging session it appeared that kernel32.dll.so
always gets loaded to a varying address by the runtime linker, which
seems to crash the whole procedure.

I succeeded making a kernel32.dll.so which gets loaded to a constant
address in Solaris by using the tool "crle" on Solarice, but I
couldn't control the address -
it appeared to be somewhat arbitrary which base address was chosen.
The crash problem remained.

I would like to try if the procedure would work if I could get a
kernel32.dll.so which always gets loaded to the same address
0x7bf0000, as in standard windows.

After a posting to the Solaris Linker mailing list we got an answer
(http://mail.opensolaris.org/pipermail/tools-linking/2007-November/000945.html)
which was designed to work with the SUN toolchain.

My question now is:
How would I have to change things (makefile or whatsever)  to get
kernel32.dll.so linked in a way to achive that it will be loaded to
address 0x7bf0000each time under Solaris.

Thanks
Chris


From julliard at winehq.org  Thu Nov 15 05:52:08 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 15 Nov 2007 12:52:08 +0100
Subject: taskmgr/perfpage.c simplification (RESEND)
In-Reply-To: <Pine.LNX.4.64.0711142215260.8530@acrux.dbai.tuwien.ac.at>
	(Gerald Pfeifer's message of "Wed, 14 Nov 2007 22:17:25 +0100 (CET)")
References: <Pine.LNX.4.64.0711142215260.8530@acrux.dbai.tuwien.ac.at>
Message-ID: <878x4zzpxz.fsf@wine.dyndns.org>

Gerald Pfeifer <gerald at pfeifer.com> writes:

> Another simplifcation I'd like to ping if you don't mind.
>
> ---------- Forwarded message ----------
> From: Gerald Pfeifer <gerald at pfeifer.com>
> To:  <wine-patches at winehq.org>
> Date: Thu, 1 Nov 2007 16:14:28 +0100 (CET)
> Subject: taskmgr/perfpage.c simplification
>
> CpuUsage and CpuKernelUsage are of type ULONG, so it does not make
> sense checking whether they are less than 0.

The checks should most likely done in PerfDataGetProcessorUsage before
converting to ULONG.

-- 
Alexandre Julliard
julliard at winehq.org


From dmitry at codeweavers.com  Thu Nov 15 04:33:36 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 15 Nov 2007 18:33:36 +0800
Subject: Valgrind results for Nov 12 & 13
References: <a71bd89a0711140632m411186f3r2ea7a2678f3b3dbe@mail.gmail.com>
	<001601c8274f$204372d0$6700fea9@DMITRY>
	<a71bd89a0711150102u156cd532g928d4a36a1c77eb@mail.gmail.com>
Message-ID: <000f01c82772$fcab9f40$6700fea9@DMITRY>

"Dan Kegel" <dank at kegel.com> wrote:

> On Nov 14, 2007 10:16 PM, Dmitry Timoshkov
>> While looking at the valgrind reports above I noticed that a lot of
>> warnings are triggered in NTDLL_queue_process_apc by the fact that
>> not the whole apc_call_t union is initialized before passing it to
>> the server. In contrast SERVER_START_REQ always initializes
>> __server_request_info to 0 before the client starts to fill the fields.
>> Probably that's the question to Alexandre whether we should memset(0)
>> apc_call_t before filling it, or just ignore valgrind warnings.
> 
> Oh, he'd undoubtedly prefer ignoring to memsetting.
> But he would like it even better if we can
> avoid sending unneeded bytes.  Are the extra
> bytes at the end (they ought to be)?  If so,
> whatever decides how many bytes to send could
> be just a bit smarter.

Since wineserver sequests are sent without an attempt to reduce the size of
written data (and memset(0) is a part of SERVER_START_REQ macro) I'd assume
that it's ok to do the same for server APC requests. Otherwise server calls
need to be optimized as well.

-- 
Dmitry.


From dmitry at codeweavers.com  Thu Nov 15 00:16:49 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 15 Nov 2007 14:16:49 +0800
Subject: Valgrind results for Nov 12 & 13
References: <a71bd89a0711140632m411186f3r2ea7a2678f3b3dbe@mail.gmail.com>
Message-ID: <001601c8274f$204372d0$6700fea9@DMITRY>

"Dan Kegel" <dank at kegel.com> wrote:

> It seems that valgrind doesn't like Ubuntu 7.10; I had
> to drop back to my Feisty system to generate good
> valgrind stack dumps.  And the tests didn't hang once!
> 
> Results for the last two days are at
> http://kegel.com/wine/valgrind/20071112/
> http://kegel.com/wine/valgrind/20071113/

While looking at the valgrind reports above I noticed that a lot of
warnings are triggered in NTDLL_queue_process_apc by the fact that
not the whole apc_call_t union is initialized before passing it to
the server. In contrast SERVER_START_REQ always initializes
__server_request_info to 0 before the client starts to fill the fields.
Probably that's the question to Alexandre whether we should memset(0)
apc_call_t before filling it, or just ignore valgrind warnings.

-- 
Dmitry.


From dmitry at codeweavers.com  Wed Nov 14 21:07:09 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 15 Nov 2007 11:07:09 +0800
Subject: server: Make timer id allocation algorithm conform to the Windows
	one
References: <E1Irv4V-00071U-8j@mail.codeweavers.com>
	<18235.32151.31589.483116@hertz.ikp.physik.tu-darmstadt.de>
Message-ID: <00bb01c82734$9e6040f0$6700fea9@DMITRY>

"Uwe Bonnes" <bon at elektron.ikp.physik.tu-darmstadt.de> wrote:

>    Dmitry> Hello, this patch should fix the problem reported in the bug
>    Dmitry> 10343. My test which calls SetTimer in an infinite loop shows
>    Dmitry> that XP starts to allocate timer ids at 0x7fff and goes
>    Dmitry> backwards to 0x101, then restarts from 0x7fff.
> 
> Isn't this worth a test suite case?

As explained in the referenced bug it's not very easy to test this
behaviour.

-- 
Dmitry.


From dmitry at codeweavers.com  Thu Nov 15 07:47:21 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 15 Nov 2007 21:47:21 +0800
Subject: [1/6] msvcrt: Implement strcpy_s
References: <200711151137.14670.stefan@codeweavers.com>
Message-ID: <011401c8278e$0da474a0$6700fea9@DMITRY>

"Stefan D?singer" <stefan at codeweavers.com> wrote:

> +int CDECL MSVCRT_strcpy_s( char* dst, size_t elem, const char* src )
> +{
> +    unsigned int i;
...
> +    for(i = 0; i < elem; i++)

Since 'i' is used to enumerate [0 < elem] and elem has type size_t, 'i' should
have type size_t as well.

> +static int (*pstrcpy_s)(char *dst, unsigned int len, const char *src);

But here 'len' has type 'unsigned int' for some reason.

-- 
Dmitry. 



From dmitry at codeweavers.com  Thu Nov 15 07:52:11 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 15 Nov 2007 21:52:11 +0800
Subject: [3/6] msvcrt: implement _mbsnbcpy_s
References: <200711151139.19906.stefan@codeweavers.com>
Message-ID: <014301c8278e$baa7af50$6700fea9@DMITRY>

"Stefan D?singer" <stefan at codeweavers.com> wrote:

> +int CDECL _mbsnbcpy_s(unsigned char* dst, MSVCRT_size_t size, const unsigned char* src, MSVCRT_size_t n)
> +{
> +    unsigned int pos = 0;

Same problem as with strcpy_s patch, and in addition MSVCRT_size_t is used.
Perhaps strcpy_s implementation should use MSVCRT_size_t as well.

> +@ cdecl _mbsnbcpy_s(ptr str long)

The spec entry has wrong number of parameters.

-- 
Dmitry. 



From dmitry at codeweavers.com  Thu Nov 15 07:55:35 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 15 Nov 2007 21:55:35 +0800
Subject: [2/6] msvcrt: Implement strcat_s
References: <200711151139.00621.stefan@codeweavers.com>
Message-ID: <016401c8278f$33c60080$6700fea9@DMITRY>

"Stefan D?singer" <stefan at codeweavers.com> wrote:

> +@ cdecl strcat_s(str str) MSVCRT_strcat_s
...
> +int CDECL MSVCRT_strcat_s( char* dst, size_t elem, const char* src )
> +{
> +    unsigned int i, j;
...
> +static int (*pstrcat_s)(char *dst, unsigned int len, const char *src);

This one has the same objections as 2 previous patches.

-- 
Dmitry. 



From dmitry at codeweavers.com  Thu Nov 15 09:33:39 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 15 Nov 2007 23:33:39 +0800
Subject: Start: Convert start to Unicode. [try4]
References: <473C6445.5070909@etersoft.ru>
Message-ID: <023701c8279c$e6ede170$6700fea9@DMITRY>

"Anatoly Lyutin" <vostok at etersoft.ru> wrote:

> Changelog:
> Convert start.exe to Unicode.

Please carefully check buffer sizes passed to Win32 APIs.

-- 
Dmitry.


From gerald at pfeifer.com  Thu Nov 15 07:06:59 2007
From: gerald at pfeifer.com (Gerald Pfeifer)
Date: Thu, 15 Nov 2007 14:06:59 +0100 (CET)
Subject: taskmgr/perfpage.c simplification (RESEND)
In-Reply-To: <878x4zzpxz.fsf@wine.dyndns.org>
References: <Pine.LNX.4.64.0711142215260.8530@acrux.dbai.tuwien.ac.at>
	<878x4zzpxz.fsf@wine.dyndns.org>
Message-ID: <Pine.LNX.4.64.0711151359360.8530@acrux.dbai.tuwien.ac.at>

On Thu, 15 Nov 2007, Alexandre Julliard wrote:
>> CpuUsage and CpuKernelUsage are of type ULONG, so it does not make
>> sense checking whether they are less than 0.
> The checks should most likely done in PerfDataGetProcessorUsage before
> converting to ULONG.

Fair enough.  I wasn't sure we want to incur that overhead, but it
also shouldn't be that much.  Updated patch below.

Gerald

ChangeLog:
Move out-of-domain checking into PerfDataGetProcessorUsage() and
PerfDataGetProcessorSystemUsage().

Index: programs/taskmgr/perfdata.c
===================================================================
RCS file: /home/wine/wine/programs/taskmgr/perfdata.c,v
retrieving revision 1.6
diff -u -3 -p -r1.6 perfdata.c
--- programs/taskmgr/perfdata.c	22 Oct 2007 14:57:58 -0000	1.6
+++ programs/taskmgr/perfdata.c	15 Nov 2007 13:01:27 -0000
@@ -332,11 +332,19 @@ ULONG PerfDataGetProcessCount(void)
 
 ULONG PerfDataGetProcessorUsage(void)
 {
+    if( dbIdleTime < 0.0 )
+        return 0;
+    if( dbIdleTime > 100.0 )
+        return 100;
     return (ULONG)dbIdleTime;
 }
 
 ULONG PerfDataGetProcessorSystemUsage(void)
 {
+    if( dbKernelTime < 0.0 )
+        return 0;
+    if( dbKernelTime > 100.0 )
+        return 100;
     return (ULONG)dbKernelTime;
 }
 
Index: programs/taskmgr/perfpage.c
===================================================================
RCS file: /home/wine/wine/programs/taskmgr/perfpage.c,v
retrieving revision 1.8
diff -u -3 -p -r1.8 perfpage.c
--- programs/taskmgr/perfpage.c	23 May 2006 12:49:22 -0000	1.8
+++ programs/taskmgr/perfpage.c	15 Nov 2007 13:01:27 -0000
@@ -234,10 +234,6 @@ static DWORD WINAPI PerformancePageRefre
                          */
                         CpuUsage = PerfDataGetProcessorUsage();
                         CpuKernelUsage = PerfDataGetProcessorSystemUsage();
-                        if (CpuUsage < 0 )        CpuUsage = 0;
-                        if (CpuUsage > 100)       CpuUsage = 100;
-                        if (CpuKernelUsage < 0)   CpuKernelUsage = 0;
-                        if (CpuKernelUsage > 100) CpuKernelUsage = 100;
 
                         /*
                          *  Get the memory usage


From dank at kegel.com  Thu Nov 15 09:38:57 2007
From: dank at kegel.com (Dan Kegel)
Date: Thu, 15 Nov 2007 07:38:57 -0800
Subject: Valgrind results for Nov 12 & 13
In-Reply-To: <000f01c82772$fcab9f40$6700fea9@DMITRY>
References: <a71bd89a0711140632m411186f3r2ea7a2678f3b3dbe@mail.gmail.com>
	<001601c8274f$204372d0$6700fea9@DMITRY>
	<a71bd89a0711150102u156cd532g928d4a36a1c77eb@mail.gmail.com>
	<000f01c82772$fcab9f40$6700fea9@DMITRY>
Message-ID: <a71bd89a0711150738r6a3e455fk22bb426333985541@mail.gmail.com>

On Nov 15, 2007 2:33 AM, Dmitry Timoshkov <dmitry at codeweavers.com> wrote:
> Since wineserver sequests are sent without an attempt to reduce the size of
> written data (and memset(0) is a part of SERVER_START_REQ macro) I'd assume
> that it's ok to do the same for server APC requests. Otherwise server calls
> need to be optimized as well.

I did optimize one recently for just this reason:
http://www.winehq.org/pipermail/wine-cvs/2007-October/037608.html

I haven't looked to see if the same technique can be used in the
NTDLL_queue_process_apc case.


From dank at kegel.com  Thu Nov 15 09:52:19 2007
From: dank at kegel.com (Dan Kegel)
Date: Thu, 15 Nov 2007 07:52:19 -0800
Subject: Question: How to link kernel32.dll.so to get loaded at a fixed
Message-ID: <a71bd89a0711150752v1732afd0kbaa51976a0123b7f@mail.gmail.com>

Chris McKillroy asked:
> I tried to use a DLL injection ...
> (http://www.madshi.net/madCodeHookDescription.htm)
> Under Solaris10 (wine version 0.9.49) the child process regularly
> crashed... [because] kernel32.dll.so
> always gets loaded to a varying address by the runtime linker

Yep.  Known problem with Wine.

> After a posting to the Solaris Linker mailing list we got an answer
> (http://mail.opensolaris.org/pipermail/tools-linking/2007-November/000945.html)
> ...
> My question now is:
> How would I have to change things (makefile or whatsever)  to get
> kernel32.dll.so linked in a way to achive that it will be loaded to
> address 0x7bf0000 each time under Solaris.

Good question.   It's probably pretty involved; you may have to wait
for an expert to try it and see what it breaks.  Alexandre suggested
it might not work recently (see
http://bugs.winehq.org/show_bug.cgi?id=10273#c17 ), but
perhaps he's being overly pessimistic.

BTW if that idea works for Solaris, it might work for Linux, too.
- Dan


From truiken at gmail.com  Thu Nov 15 09:59:43 2007
From: truiken at gmail.com (James Hawkins)
Date: Thu, 15 Nov 2007 09:59:43 -0600
Subject: dlls/msi/string.c -- fix use of signed versus unsigned (RESEND)
In-Reply-To: <Pine.LNX.4.64.0711142218370.8530@acrux.dbai.tuwien.ac.at>
References: <Pine.LNX.4.64.0711142218370.8530@acrux.dbai.tuwien.ac.at>
Message-ID: <22821af30711150759p32103857pd4392deda4be007f@mail.gmail.com>

On 11/14/07, Gerald Pfeifer <gerald at pfeifer.com> wrote:
> Last one for today, promised. ;-)
>
> Gerald
>
> ---------- Forwarded message ----------
> From: Gerald Pfeifer <gerald at pfeifer.com>
> To:  <wine-patches at winehq.org>
> Date: Sat, 3 Nov 2007 20:02:18 +0100 (CET)
> Subject: dlls/msi/string.c -- fix use of signed versus unsigned
>
> This was a bit more tricky, but I hope I got it right.  Basically the
> problem here was that we used a parameter/variable n of type UINT both
> as a true unsigned (the return of the hash function) and as a true signed
> variable (comparing against -1).
>
> This removes the following three compiler diagnostics that I've been
> seeing.  In other words, this is also addressing very real issues!
>
>   string.c: In function 'msi_addstring':
>   string.c:208: warning: comparison of unsigned expression < 0 is always false
>   string.c: In function 'msi_addstringW':
>   string.c:260: warning: comparison of unsigned expression < 0 is always false
>   string.c: In function 'msi_string2idW':
>   string.c:400: warning: comparison between signed and unsigned
>
> Gerald
>
> ChangeLog:
> Fix use of signed versus unsigned variables.
>

This change is unnecessarily complicated.  Also, the only actual bug
of this type that was in string.c (comparison..always false) has been
fixed:

commit 1c1cf26997cdf491642b2086ad817a79ced99a2e
Author: James Hawkins <truiken at gmail.com>
Date:   Mon Nov 5 04:49:07 2007 -0500

    msi: Explicitly check the returned value against -1 as the
variable is unsigned.

All these patches to silence extraneous warnings makes me wonder
whether you really understand the code or if you're just trying to get
rid of warnings...

-- 
James Hawkins


From julliard at winehq.org  Thu Nov 15 10:09:56 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 15 Nov 2007 17:09:56 +0100
Subject: Question: How to link kernel32.dll.so to get loaded at a fixed
In-Reply-To: <a71bd89a0711150752v1732afd0kbaa51976a0123b7f@mail.gmail.com>
	(Dan Kegel's message of "Thu, 15 Nov 2007 07:52:19 -0800")
References: <a71bd89a0711150752v1732afd0kbaa51976a0123b7f@mail.gmail.com>
Message-ID: <87y7czxzfv.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> Good question.   It's probably pretty involved; you may have to wait
> for an expert to try it and see what it breaks.  Alexandre suggested
> it might not work recently (see
> http://bugs.winehq.org/show_bug.cgi?id=10273#c17 ), but
> perhaps he's being overly pessimistic.
>
> BTW if that idea works for Solaris, it might work for Linux, too.

It works on Linux already, we are using prelink to set the kernel32 load
address. That doesn't mean you can avoid -fPIC since the address is not
guaranteed to be available.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Thu Nov 15 10:11:09 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 15 Nov 2007 17:11:09 +0100
Subject: Valgrind results for Nov 12 & 13
In-Reply-To: <a71bd89a0711150102u156cd532g928d4a36a1c77eb@mail.gmail.com> (Dan
	Kegel's message of "Thu, 15 Nov 2007 01:02:46 -0800")
References: <a71bd89a0711140632m411186f3r2ea7a2678f3b3dbe@mail.gmail.com>
	<001601c8274f$204372d0$6700fea9@DMITRY>
	<a71bd89a0711150102u156cd532g928d4a36a1c77eb@mail.gmail.com>
Message-ID: <87tznnxzdu.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> Oh, he'd undoubtedly prefer ignoring to memsetting.
> But he would like it even better if we can
> avoid sending unneeded bytes.  Are the extra
> bytes at the end (they ought to be)?  If so,
> whatever decides how many bytes to send could
> be just a bit smarter.

Actually memset is OK for server requests, not because of Valgrind but
because of backwards compatibility concerns. It makes it possible to
extend a request knowing that old clients will send 0 for the new
fields.

-- 
Alexandre Julliard
julliard at winehq.org


From jwhite at codeweavers.com  Thu Nov 15 10:42:25 2007
From: jwhite at codeweavers.com (Jeremy White)
Date: Thu, 15 Nov 2007 10:42:25 -0600
Subject: Valgrind results for Nov 12 & 13
In-Reply-To: <a71bd89a0711150102u156cd532g928d4a36a1c77eb@mail.gmail.com>
References: <a71bd89a0711140632m411186f3r2ea7a2678f3b3dbe@mail.gmail.com>	<001601c8274f$204372d0$6700fea9@DMITRY>
	<a71bd89a0711150102u156cd532g928d4a36a1c77eb@mail.gmail.com>
Message-ID: <473C76F1.8050309@codeweavers.com>

> p.s. the mailing list archives seem to be not archiving new messages :-(

Jer restarted mailman and it seems to be fixed now.  Presumably a side
effect of the db going nuts yesterday.

cheers,

Jeremy


From meissner at suse.de  Thu Nov 15 10:59:46 2007
From: meissner at suse.de (Marcus Meissner)
Date: Thu, 15 Nov 2007 17:59:46 +0100
Subject: Question: How to link kernel32.dll.so to get loaded at a fixed
	address (0x7bf0000) each time in a Solaris environment
In-Reply-To: <a99a83590711150412p8708e53g52468de48d3f4a60@mail.gmail.com>
References: <a99a83590711150412p8708e53g52468de48d3f4a60@mail.gmail.com>
Message-ID: <20071115165945.GB27139@suse.de>

On Thu, Nov 15, 2007 at 01:12:07PM +0100, Chris McKillroy wrote:
> Hello everybody,
> 
> I recently run into the following problem:
> 
> I tried to use a DLL injection into a process started by a controller
> Process using an external code hooking dll
> (http://www.madshi.net/madCodeHookDescription.htm)
> to achieve some sort of datalink.
> In a windows environment the solution works stable and perfectly.
> (Controller Process NWNX4 as provided by nwnx4.org, child process
> nwn2server.exe, as provided by Obsidian - all legal and intended use).
> 
> Under Solaris10 (wine version 0.9.49) the child process regularly
> crashed upon creation, respectivley when the dll was injected.
> 
> After a lengthy debugging session it appeared that kernel32.dll.so
> always gets loaded to a varying address by the runtime linker, which
> seems to crash the whole procedure.
> 
> I succeeded making a kernel32.dll.so which gets loaded to a constant
> address in Solaris by using the tool "crle" on Solarice, but I
> couldn't control the address -
> it appeared to be somewhat arbitrary which base address was chosen.
> The crash problem remained.
> 
> I would like to try if the procedure would work if I could get a
> kernel32.dll.so which always gets loaded to the same address
> 0x7bf0000, as in standard windows.
> 
> After a posting to the Solaris Linker mailing list we got an answer
> (http://mail.opensolaris.org/pipermail/tools-linking/2007-November/000945.html)
> which was designed to work with the SUN toolchain.
> 
> My question now is:
> How would I have to change things (makefile or whatsever)  to get
> kernel32.dll.so linked in a way to achive that it will be loaded to
> address 0x7bf0000each time under Solaris.

For Linux we use the ELF tool "prelink".

It should however be possible write a LD linker script to do the same.

Not sure if this is applicable to Solaris. 

Ciao, Marcus


From truiken at gmail.com  Thu Nov 15 11:08:01 2007
From: truiken at gmail.com (James Hawkins)
Date: Thu, 15 Nov 2007 11:08:01 -0600
Subject: dlls/msi/string.c -- fix use of signed versus unsigned (RESEND)
In-Reply-To: <Pine.LNX.4.64.0711151715530.8530@acrux.dbai.tuwien.ac.at>
References: <Pine.LNX.4.64.0711142218370.8530@acrux.dbai.tuwien.ac.at>
	<22821af30711150759p32103857pd4392deda4be007f@mail.gmail.com>
	<Pine.LNX.4.64.0711151715530.8530@acrux.dbai.tuwien.ac.at>
Message-ID: <22821af30711150908j29d386edi434aea1096bcfaf6@mail.gmail.com>

On 11/15/07, Gerald Pfeifer <gerald at pfeifer.com> wrote:
> On Thu, 15 Nov 2007, James Hawkins wrote:
> >> ChangeLog:
> >> Fix use of signed versus unsigned variables.
> > This change is unnecessarily complicated.
>
> How do you propose to address the following?
>
>   string.c: In function 'msi_addstring':
>   string.c:208: warning: comparison between signed and unsigned
>   string.c: In function 'msi_addstringW':
>   string.c:260: warning: comparison between signed and unsigned
>   string.c: In function 'msi_string2idW':
>   string.c:400: warning: comparison between signed and unsigned
>

Turn off the warning.

> > Also, the only actual bug of this type that was in string.c
> > (comparison..always false) has been fixed:
>
> Happy to hear that!
>
> > All these patches to silence extraneous warnings makes me wonder whether
> > you really understand the code or if you're just trying to get rid of
> > warnings...
>
> I'm mostly trying to get bugs fixed.  In the last couple of weeks my
> patches have addressed several realy bugs and/or triggered others to
> look into bugs, both of which I'd claim is a good thing. ;-)
>

Ok, but this patch didn't fix any bug and it's makes an already
complicated module that much more complicated.

> Reducing the number of warnings is one way to catch regressions easier
> and get bugs addressed (not all warnings really are due to real bugs,
> of course, but that's hard to see up front).
>

I don't see how silencing warnings catches any regression.  It's hard
to see for you because you're changing code you don't understand.

> And, no, I am not an expert of the entire Wine codebase, and certainly
> not to the level you and others are for those pieces you maintain.  And
> the MSI code apparently is one of the more tricky ones...
>

We all appreciate your effort, but we could use your resources in more
helpful ways.  I suggest you look through bugzilla, pick out a bug,
and try to fix that bug.  You'll become more familiar with the code
that way and you'll be fixing an actual reported bug.  If you really
want to keep sending in patches for these warnings, please be more
conservative.  Unsigned comparisons for less than 0 are actual bugs,
so you can be sure about those, but the other warnings you need to
spend a lot of time to see if there really is any bug.  Warnings are
just warnings, not errors, and there's a reason we don't turn all the
warnings on.

-- 
James Hawkins


From gerald at pfeifer.com  Thu Nov 15 10:29:38 2007
From: gerald at pfeifer.com (Gerald Pfeifer)
Date: Thu, 15 Nov 2007 17:29:38 +0100 (CET)
Subject: dlls/msi/string.c -- fix use of signed versus unsigned (RESEND)
In-Reply-To: <22821af30711150759p32103857pd4392deda4be007f@mail.gmail.com>
References: <Pine.LNX.4.64.0711142218370.8530@acrux.dbai.tuwien.ac.at>
	<22821af30711150759p32103857pd4392deda4be007f@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0711151715530.8530@acrux.dbai.tuwien.ac.at>

On Thu, 15 Nov 2007, James Hawkins wrote:
>> ChangeLog:
>> Fix use of signed versus unsigned variables.
> This change is unnecessarily complicated.

How do you propose to address the following?

  string.c: In function 'msi_addstring':
  string.c:208: warning: comparison between signed and unsigned
  string.c: In function 'msi_addstringW':
  string.c:260: warning: comparison between signed and unsigned
  string.c: In function 'msi_string2idW':
  string.c:400: warning: comparison between signed and unsigned

> Also, the only actual bug of this type that was in string.c 
> (comparison..always false) has been fixed:

Happy to hear that!

> All these patches to silence extraneous warnings makes me wonder whether 
> you really understand the code or if you're just trying to get rid of 
> warnings...

I'm mostly trying to get bugs fixed.  In the last couple of weeks my 
patches have addressed several realy bugs and/or triggered others to
look into bugs, both of which I'd claim is a good thing. ;-)

Reducing the number of warnings is one way to catch regressions easier
and get bugs addressed (not all warnings really are due to real bugs,
of course, but that's hard to see up front).

And, no, I am not an expert of the entire Wine codebase, and certainly
not to the level you and others are for those pieces you maintain.  And
the MSI code apparently is one of the more tricky ones...

Gerald


From saulius2 at ar.fi.lt  Thu Nov 15 14:16:59 2007
From: saulius2 at ar.fi.lt (Saulius Krasuckas)
Date: Thu, 15 Nov 2007 22:16:59 +0200 (EET)
Subject: Patch: ntoskrnl.exe - Added PsCreateSystemThread
In-Reply-To: <200709211106.08920.stefandoesinger@gmx.at>
References: <c61914570709191849l1e946ed1p12c10095e179cc65@mail.gmail.com>
	<200709211106.08920.stefandoesinger@gmx.at>
Message-ID: <Pine.LNX.4.62.0711152214280.13258@tvarka.ar.fi.lt>

* On Fri, 21 Sep 2007, Stefan [iso-8859-1] D?singer wrote:
> * Am Donnerstag, 20. September 2007 03:49:40 schrieb Carroll Vance:
> > I have tested this with a driver I made and it seemed to
> > work fine.
> 
> I don't know much about ntoskrnl.exe, but if you have a test driver, you 
> may want to include it in the patch. 

Doesn't that need to be product' licence compatible?

> Other libraries have a set of regression tests in dlls/<lib>/tests . 
> ntoskrnl.exe doesn't have any yet, but I don't know if that is a policy 
> or just because no one started it yet.

Cool idea, of course, but my old question is:  Does MinGW have any support 
for compiling KMD/WDM binaries today?

From gerald at pfeifer.com  Thu Nov 15 14:09:58 2007
From: gerald at pfeifer.com (Gerald Pfeifer)
Date: Thu, 15 Nov 2007 21:09:58 +0100 (CET)
Subject: dlls/msi/string.c -- fix use of signed versus unsigned (RESEND)
In-Reply-To: <22821af30711150908j29d386edi434aea1096bcfaf6@mail.gmail.com>
References: <Pine.LNX.4.64.0711142218370.8530@acrux.dbai.tuwien.ac.at> 
	<22821af30711150759p32103857pd4392deda4be007f@mail.gmail.com> 
	<Pine.LNX.4.64.0711151715530.8530@acrux.dbai.tuwien.ac.at>
	<22821af30711150908j29d386edi434aea1096bcfaf6@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0711152056340.8530@acrux.dbai.tuwien.ac.at>

On Thu, 15 Nov 2007, James Hawkins wrote:
> I don't see how silencing warnings catches any regression.

With default options older versions of GCC currently issue two warnings 
for all of Wine, so any warning regression immediately jumps out for 
analysis to see whether it is a real regression.  If instead of two the 
base is 2000, just another one is easy to miss.  That's the experience
we made with GCC, and some other projects I have worked on.

> If you really want to keep sending in patches for these warnings,
> please be more conservative.  Unsigned comparisons for less than 0
> are actual bugs, so you can be sure about those

I actually plan to focus on those.  There are about fifty left.  Just
for patches I have sent already or on my disk it would be nice to see
those considered because I did invest time on those.

Gerald


From wine.dev at web.de  Thu Nov 15 16:48:14 2007
From: wine.dev at web.de (Detlef Riekenberg)
Date: Thu, 15 Nov 2007 23:48:14 +0100
Subject: [PATCH] bits: Add implementation of
	BITS_IClassFactory_CreateInstance (9/12)
In-Reply-To: <20071115162413.GA11650@knuth.cs.hmc.edu>
References: <20071115162413.GA11650@knuth.cs.hmc.edu>
Message-ID: <1195166894.6928.7.camel@p4>

On Do, 2007-11-15 at 08:24 -0800, Roy Shea wrote:
> Implementation of BITS_IClassFactory_CreateInstance ond the support
> function
> BackgroundCopyManagerConstructor.
> ---
>  dlls/Makefile.in         |    5 +++++

> +       qmgrprxy \

> +       qmgrprxy/libqmgrprxy.$(IMPLIBEXT) \

This changes are unrelated for the actual Patch
You should never send any autogenerated code.
(<wine>/tools/make_makefiles does the changes during commit)


-- 
 
By by ... Detlef




From wine.dev at web.de  Thu Nov 15 17:06:13 2007
From: wine.dev at web.de (Detlef Riekenberg)
Date: Fri, 16 Nov 2007 00:06:13 +0100
Subject: [PATCH] bits: Added BITS IDL and standard header file (3/12)
In-Reply-To: <20071115162137.GA11517@knuth.cs.hmc.edu>
References: <20071115162137.GA11517@knuth.cs.hmc.edu>
Message-ID: <1195167973.6928.23.camel@p4>

On Do, 2007-11-15 at 08:21 -0800, Roy Shea wrote:

> +++ b/include/bitsmsg.h
> @@ -0,0 +1,83 @@
> +/*
> + * Return values that may be generated by BITS as described at:
> + *      http://msdn2.microsoft.com/en-us/library/aa362823.aspx


We want to remove all links to MSDN from wine (the URL changes to often)
and include/bitsmsg.h fit perfect in a seperate Patch.


-- 
 
By by ... Detlef




From wine.dev at web.de  Thu Nov 15 17:09:42 2007
From: wine.dev at web.de (Detlef Riekenberg)
Date: Fri, 16 Nov 2007 00:09:42 +0100
Subject: [PATCH] bits: Implemented BITS_IBackgroundCopyManager_Release
	and Test (12/12)
In-Reply-To: <20071115162456.GA11685@knuth.cs.hmc.edu>
References: <20071115162456.GA11685@knuth.cs.hmc.edu>
Message-ID: <1195168182.6928.26.camel@p4>

On Do, 2007-11-15 at 08:24 -0800, Roy Shea wrote:
>  dlls/qmgr/qmgr.c            |   19 ++++++++++++++-
>  dlls/qmgr/qmgr.spec         |    4 +-
>  dlls/qmgr/tests/Makefile.in |   17 ++++++++++++++
>  dlls/qmgr/tests/qmgr.c      |   50
> +++++++++++++++++++++++++++++++++++++++++++
>  4 files changed, 86 insertions(+), 4 deletions(-) 

The initial test can always be a seperate Patch.


-- 
 
By by ... Detlef




From wine.dev at web.de  Thu Nov 15 17:10:08 2007
From: wine.dev at web.de (Detlef Riekenberg)
Date: Fri, 16 Nov 2007 00:10:08 +0100
Subject: [PATCH] bits: Stub version of qmgr with svchost and proxy (5/12)
In-Reply-To: <20071115162224.GA11546@knuth.cs.hmc.edu>
References: <20071115162224.GA11546@knuth.cs.hmc.edu>
Message-ID: <1195168208.6928.28.camel@p4>

On Do, 2007-11-15 at 08:22 -0800, Roy Shea wrote:
> This adds svchost, proxying, and a stub version of the qmgr.dll
> process.  The
> functional code in this patch is boilerplate required to run a DLL as
> a
> service via svchost.
> ---
>  dlls/qmgr/Makefile.in       |    6 ++-
>  dlls/qmgr/factory.c         |   85 +++++++++++++++++++++++
>  dlls/qmgr/qmgr.c            |    8 ++-
>  dlls/qmgr/qmgr.inf          |   32 +++++++++
>  dlls/qmgr/qmgr.spec         |    1 +
>  dlls/qmgr/qmgr_main.c       |   98 +++++++++++++++++++++++++--
>  dlls/qmgr/qmgr_private.h    |   14 ++++-
>  dlls/qmgr/qmgr_service.c    |  156
> +++++++++++++++++++++++++++++++++++++++++++
>  dlls/qmgr/rsrc.rc           |   21 ++++++
>  dlls/qmgrprxy/Makefile.in   |   25 +++++++
>  dlls/qmgrprxy/qmgrprxy.idl  |   20 ++++++
>  dlls/qmgrprxy/qmgrprxy.spec |    5 ++
>  12 files changed, 461 insertions(+), 10 deletions(-) 

It would be better, when you can reduce the Patchsize,
but I have no knowledge about the code.
(must everything from factory.c, qmgr_main.c and qmgr_service.c
in the same Patch?)


qmgrprxy looks really splitable from the rest as a seperate Patch.
> -0,0 +1,5 @@
> +@ stdcall -private DllCanUnloadNow()
> +@ stdcall -private DllGetClassObject(ptr ptr ptr)
> +@ stdcall -private DllRegisterServer()
> +@ stdcall -private DllUnregisterServer()
> +@ stdcall GetProxyDllInfo(ptr ptr)

I'm unable to find the code for this functions.
Is everything build from qmgrprxy.idl ?



-- 
 
By by ... Detlef




From wine.dev at web.de  Thu Nov 15 17:45:47 2007
From: wine.dev at web.de (Detlef Riekenberg)
Date: Fri, 16 Nov 2007 00:45:47 +0100
Subject: [1/6] try 2: msvcrt: Implement strcpy_s
In-Reply-To: <200711151735.58322.stefan@codeweavers.com>
References: <200711151735.58322.stefan@codeweavers.com>
Message-ID: <1195170347.6928.57.camel@p4>

On Do, 2007-11-15 at 17:35 +0100, Stefan D?singer wrote:

> +    memset(dest, 'X', sizeof(dest));
> +    ret = pstrcpy_s(dest, sizeof(dest), small);
> +    ok(ret == 0, "Copying a string into a big enough destination
> returned %d, expected 0\n", ret);
> +    ok(dest[0] == 's' && dest[1] == 'm' && dest[2] == 'a' && dest[3]
> == 'l' &&
> +       dest[4] == 'l' && dest[5] == '\0'&& dest[6] == 'X' && dest[7]
> == 'X',


Is it really needed to check the memory after the end of the string?
Does an application depend on this?

--- cut ---
  memset(dest, 'X', sizeof(dest)-1);
  /* never read past the buffer, when we check the result */
  dest[sizeof(dest)-1] = '\0';

  ret = pstrcpy_s(dest, sizeof(dest), small);
  ok( !ret && !lstrcmpA(dest, small), 
      "got %d and '%s' (expected '0' and '%s')\n", ret, dest, small);

-- cut --


For my tests with buffers, i found it useful to test with:
- buffer present, but size is 0
- buffer one byte smaller as the string (no space left for the '\0')
- buffer large enough for the string, but no space left for the '\0' 
- buffer exact as needed
- buffer one byte larger as needed
- empty source string
- NULL source
- NULL target

This allow you to verify, how the terminating '\0' is handled.

Did you test with invalid pointers (crash / handled graceful)?


-- 
 
By by ... Detlef




From wine.dev at web.de  Thu Nov 15 17:53:58 2007
From: wine.dev at web.de (Detlef Riekenberg)
Date: Fri, 16 Nov 2007 00:53:58 +0100
Subject: [3/6] try 2: msvcrt: implement _mbsnbcpy_s
In-Reply-To: <200711151737.32566.stefan@codeweavers.com>
References: <200711151737.32566.stefan@codeweavers.com>
Message-ID: <1195170838.6928.64.camel@p4>

On Do, 2007-11-15 at 17:37 +0100, Stefan D?singer wrote:
> +    const unsigned char small[] = "small";
> +    int ret;

> +    memset(dest, 'X', sizeof(dest));
> +    ret = p_mbsnbcpy_s(dest, sizeof(dest), small, sizeof(small));
> +    ok(ret == 0, "_mbsnbcpy_s: Copying a string into a big enough
> destination returned %d, expected 0\n", ret);
> +    ok(dest[0] == 's' && dest[1] == 'm' && dest[2] == 'a' && dest[3]
> == 'l' &&
> +       dest[4] == 'l' && dest[5] == '\0'&& dest[6] == 'X' && dest[7]
> == 'X

you can use memcmp, when small is defined different:

+    const unsigned char small[] = "small\0XX";

I also suggest to make the buffer larger as
you tell the api and always terminate the buffer

 unsigned char dest[10];
 dest[sizeof(dest)-1] = '\0';


-- 
 
By by ... Detlef




From leslie_alistair at hotmail.com  Thu Nov 15 16:40:55 2007
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Fri, 16 Nov 2007 09:40:55 +1100
Subject: [3/4] msxml: Implement removeAttribute
In-Reply-To: <473B88BF.8010204@zalewski.pl>
References: <473B88BF.8010204@zalewski.pl>
Message-ID: <fhii16$odn$1@ger.gmane.org>

Miko?aj Zalewski wrote:
>   A problem with this patch is that the user may have an IXMLDOMNode * 
> reference to the attribute node being removed. The xmlFreeProp will free 
> the xmlnode so accessing the IXMLDOMNode could result in memory 
> corruption. Under MSXML it's possible to access such node and even 
> reconnect it e.g. to a different documents (at least I seem to remember 
> such a thing for element nodes).
>   I don't think supporting it is possible with our current reference 
> counting only for the whole document. I was thinking about also keeping 
> reference counts for each connected component and each node. The 
> connected component count could be used to determine if the node can be 
> freed in such a situation and the node count could be used to update the 
> connected component counts if the tree gets split. But so far I haven't 
> written any code (Another possibility is to keep in each node the 
> refcount of the whole subtree starting in this node. This is more 
> elegant but it would take a linear time with respect to the tree height 
> to update the refcount).
> 
> Miko?aj Zalewski
> 
> 
Thanks for pointing this out.  Ill write some tests, and retry again 
shortly.

Alistair Leslie-Hughes



From dmitry at codeweavers.com  Thu Nov 15 20:46:36 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Fri, 16 Nov 2007 10:46:36 +0800
Subject: [2/6] try 2: msvcrt: implement strcat_s
References: <200711151736.39789.stefan@codeweavers.com>
Message-ID: <007301c827fa$e926f1d0$6700fea9@DMITRY>

"Stefan D?singer" <stefan at codeweavers.com> wrote:

> +@ cdecl strcat_s(str str) MSVCRT_strcat_s
...
> +int CDECL MSVCRT_strcat_s( char* dst, MSVCRT_size_t elem, const char* src )

The spec file entry still has wrong number of parameters.

-- 
Dmitry. 



From dank at kegel.com  Thu Nov 15 22:18:58 2007
From: dank at kegel.com (Dan Kegel)
Date: Thu, 15 Nov 2007 20:18:58 -0800
Subject: dlls/msi/string.c -- fix use of signed versus unsigned (RESEND)
Message-ID: <a71bd89a0711152018o32bdf2eamf49149e539762fcf@mail.gmail.com>

Gerald Pfeifer wrote:
> How do you propose to address the following?
>  string.c: In function 'msi_addstring':
>  string.c:208: warning: comparison between signed and unsigned

For starters:

diff --git a/configure.ac b/configure.ac
index 3d62f45..c97aa8e 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1134,6 +1134,7 @@ then
   WINE_TRY_CFLAGS([-fno-strict-aliasing])
   WINE_TRY_CFLAGS([-Wdeclaration-after-statement])
   WINE_TRY_CFLAGS([-Wwrite-strings])
+  WINE_TRY_CFLAGS([-Wno-sign-compare])

   dnl Check for noisy string.h
   saved_CFLAGS="$CFLAGS"

Then, after we've fixed all the real bugs, maybe consider
going back and turning on the signed/unsigned comparison warning.


From stefan at codeweavers.com  Fri Nov 16 04:25:39 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Fri, 16 Nov 2007 11:25:39 +0100
Subject: [1/6] try 2: msvcrt: Implement strcpy_s
In-Reply-To: <1195170347.6928.57.camel@p4>
References: <200711151735.58322.stefan@codeweavers.com>
	<1195170347.6928.57.camel@p4>
Message-ID: <200711161125.42615.stefan@codeweavers.com>

Am Freitag, 16. November 2007 00:45:47 schrieb Detlef Riekenberg:
> On Do, 2007-11-15 at 17:35 +0100, Stefan D?singer wrote:
> > +    memset(dest, 'X', sizeof(dest));
> > +    ret = pstrcpy_s(dest, sizeof(dest), small);
> > +    ok(ret == 0, "Copying a string into a big enough destination
> > returned %d, expected 0\n", ret);
> > +    ok(dest[0] == 's' && dest[1] == 'm' && dest[2] == 'a' && dest[3]
> > == 'l' &&
> > +       dest[4] == 'l' && dest[5] == '\0'&& dest[6] == 'X' && dest[7]
> > == 'X',
>
> Is it really needed to check the memory after the end of the string?
> Does an application depend on this?
It shows that the msdn documents the function incorrectly: It says the string 
is unmodified, which is apparently not the case.

> Did you test with invalid pointers (crash / handled graceful)?
No, good idea, I'll try that now


-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071116/e7b46f3a/attachment.pgp 

From stefan at codeweavers.com  Fri Nov 16 04:33:18 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Fri, 16 Nov 2007 11:33:18 +0100
Subject: [1/6] try 2: msvcrt: Implement strcpy_s
In-Reply-To: <200711161125.42615.stefan@codeweavers.com>
References: <200711151735.58322.stefan@codeweavers.com>
	<1195170347.6928.57.camel@p4>
	<200711161125.42615.stefan@codeweavers.com>
Message-ID: <200711161133.20904.stefan@codeweavers.com>

Am Freitag, 16. November 2007 11:25:39 schrieb Stefan D?singer:
> > Did you test with invalid pointers (crash / handled graceful)?
>
> No, good idea, I'll try that now
This crashes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071116/d1e10aa2/attachment.pgp 

From rob at codeweavers.com  Fri Nov 16 05:06:47 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Fri, 16 Nov 2007 11:06:47 +0000
Subject: ntdll: send_debug_event: don't send uninitialized bytes
In-Reply-To: <a71bd89a0711152129vda57f77j39bc703e06761d79@mail.gmail.com>
References: <a71bd89a0711152129vda57f77j39bc703e06761d79@mail.gmail.com>
Message-ID: <473D79C7.4010501@codeweavers.com>

Dan Kegel wrote:
> +/* Returns size of initialized part of a particular EXCEPTION_RECORD */
> +static int exception_record_size( const EXCEPTION_RECORD *rec )
> +{
> +    return sizeof(*rec) 
> +    - (EXCEPTION_MAXIMUM_PARAMETERS-rec->NumberParameters) * sizeof(ULONG_PTR);
> +}

FIELD_OFFSET exists for this exact purpose.

-- 
Rob Shearman



From julliard at winehq.org  Fri Nov 16 05:11:22 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 16 Nov 2007 12:11:22 +0100
Subject: server: Add a call for retrieving the image file name of a
	process.
In-Reply-To: <473CBA96.1090907@codeweavers.com> (Robert Shearman's message of
	"Thu, 15 Nov 2007 21:31:02 +0000")
References: <473CBA96.1090907@codeweavers.com>
Message-ID: <87hcjmxx5x.fsf@wine.dyndns.org>

Robert Shearman <rob at codeweavers.com> writes:

> ---
>  dlls/ntdll/process.c    |   20 +++++++++++++++++++-
>  dlls/ntdll/tests/info.c |   36 ++++++++++++++++++++++++++++++++++++
>  server/process.c        |   31 +++++++++++++++++++++++++++++++
>  server/protocol.def     |    9 +++++++++
>  4 files changed, 95 insertions(+), 1 deletions(-)

You should use the existing get_dll_info request for that.

-- 
Alexandre Julliard
julliard at winehq.org


From paul.vriens.wine at gmail.com  Fri Nov 16 06:09:19 2007
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Fri, 16 Nov 2007 13:09:19 +0100
Subject: winetest_interactive : how does it work?
Message-ID: <473D886F.2090603@gmail.com>

Hi,

I just ran winetest (by double clicking on the executable) on my WinXP box. I 
was missing some advpack popups that were there before. Francois sent in a patch 
to only do some particular tests when winetest_interactive is true. I would 
assume that clicking on a executable is interactive, not?

AFAIK winetest_interactive is set to true|1 if the WINETEST_INTERACTIVE variable 
is set to 1 (include/wine/test.h).

In programs/winetest/main.c we however only set WINETEST_INTERACTIVE to 0:

692                     interactive_no[]    = "WINETEST_INTERACTIVE=0",

shouldn't WINETEST_INTERACTIVE be set according to the interactive variable in 
that same file?

-- 
Cheers,

Paul.


From rob at codeweavers.com  Fri Nov 16 06:20:37 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Fri, 16 Nov 2007 12:20:37 +0000
Subject: server: Add a call for retrieving the image file name of a
	process.
In-Reply-To: <87hcjmxx5x.fsf@wine.dyndns.org>
References: <473CBA96.1090907@codeweavers.com> <87hcjmxx5x.fsf@wine.dyndns.org>
Message-ID: <473D8B15.5030909@codeweavers.com>

Alexandre Julliard wrote:
> Robert Shearman <rob at codeweavers.com> writes:
>
>   
>> ---
>>  dlls/ntdll/process.c    |   20 +++++++++++++++++++-
>>  dlls/ntdll/tests/info.c |   36 ++++++++++++++++++++++++++++++++++++
>>  server/process.c        |   31 +++++++++++++++++++++++++++++++
>>  server/protocol.def     |    9 +++++++++
>>  4 files changed, 95 insertions(+), 1 deletions(-)
>>     
>
> You should use the existing get_dll_info request for that.

get_dll_info doesn't appear to be suitable for this purpose. We don't 
know what the base address of the EXE is and the call doesn't return the 
required size for the filename.

-- 
Rob Shearman



From julliard at winehq.org  Fri Nov 16 06:54:07 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 16 Nov 2007 13:54:07 +0100
Subject: server: Add a call for retrieving the image file name of a
	process.
In-Reply-To: <473D8B15.5030909@codeweavers.com> (Robert Shearman's message of
	"Fri, 16 Nov 2007 12:20:37 +0000")
References: <473CBA96.1090907@codeweavers.com>
	<87hcjmxx5x.fsf@wine.dyndns.org> <473D8B15.5030909@codeweavers.com>
Message-ID: <87abpexseo.fsf@wine.dyndns.org>

Robert Shearman <rob at codeweavers.com> writes:

> get_dll_info doesn't appear to be suitable for this purpose. We don't
> know what the base address of the EXE is and the call doesn't return
> the required size for the filename.

Well, you have to extend it a bit to support that, but it's better than
adding a new request.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Nov 16 07:56:58 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 16 Nov 2007 14:56:58 +0100
Subject: [PATCH] svchost: Added base implementation of svchost (1/12)
In-Reply-To: <20071115161915.GA11440@knuth.cs.hmc.edu> (Roy Shea's message of
	"Thu, 15 Nov 2007 08:19:15 -0800")
References: <20071115161915.GA11440@knuth.cs.hmc.edu>
Message-ID: <876402xphx.fsf@wine.dyndns.org>

Roy Shea <roy at cs.hmc.edu> writes:

> +/* Allocate and initializes an ANSI version of the Unicode string */
> +static LPSTR UnicodeToAnsi(const WCHAR *unicode)
> +{
> +    int size;
> +    LPSTR ansi;
> +
> +    size = WideCharToMultiByte(CP_UTF8, 0, unicode, -1, NULL, 0, NULL, NULL);
> +    ansi = HeapAlloc(GetProcessHeap(), 0, size);
> +    WideCharToMultiByte(CP_UTF8, 0, unicode, -1, ansi, size, NULL, NULL);
> +    return ansi;
> +}

UTF-8 is not the same thing as ANSI, this function is misleading. For
procedure names what you probably want is a special-purpose function
that rejects anything that isn't 7-bit ASCII.

> +    ret = RegOpenKeyExW(HKEY_LOCAL_MACHINE, service_param_key, 0,
> +            KEY_READ, &service_hkey);
> +    if (ret != ERROR_SUCCESS)
> +    {
> +        WINE_ERR("cannot open key %s, err=%d\n",
> +                wine_dbgstr_w(service_param_key), ret);
> +        HeapFree(GetProcessHeap(), 0, service_param_key);
> +        return FALSE;
> +    }
> +
> +    /* Find DLL associate with service from key */
> +    dll_name_short = GetRegValue(service_hkey, service_dll);
> +    if (!dll_name_short)
> +    {
> +        WINE_ERR("cannot find registry value %s for service %s\n",
> +                wine_dbgstr_w(service_dll), wine_dbgstr_w(service_name));
> +        HeapFree(GetProcessHeap(), 0, service_param_key);
> +        return FALSE;
> +    }

You are leaking registry handles pretty much everywhere.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Nov 16 08:04:51 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 16 Nov 2007 15:04:51 +0100
Subject: Start: Convert start to Unicode. [try5]
In-Reply-To: <473D5C1C.9050004@etersoft.ru> (Anatoly Lyutin's message of "Fri, 
	16 Nov 2007 12:00:12 +0300")
References: <473D5C1C.9050004@etersoft.ru>
Message-ID: <871waqxp4s.fsf@wine.dyndns.org>

Anatoly Lyutin <vostok at etersoft.ru> writes:

> @@ -202,9 +246,9 @@ int main(int argc, char *argv[])
>  		DWORD waitcode;
>  		waitcode = WaitForSingleObject(sei.hProcess, INFINITE);
>  		if (waitcode)
> -			fatal_error("WaitForSingleObject", GetLastError());
> +			fatal_error(WaitForSingleObjectW, GetLastError());
>  		if (!GetExitCodeProcess(sei.hProcess, &exitcode))
> -			fatal_error("GetExitCodeProcess", GetLastError());
> +			fatal_error(GetExitCodeProcessW, GetLastError());

This is way overkill, there's no reason to convert errors like these to
Unicode. WINE_ERR would work just as well.

-- 
Alexandre Julliard
julliard at winehq.org


From fgouget at free.fr  Fri Nov 16 08:18:55 2007
From: fgouget at free.fr (Francois Gouget)
Date: Fri, 16 Nov 2007 15:18:55 +0100 (CET)
Subject: winetest_interactive : how does it work?
In-Reply-To: <473D886F.2090603@gmail.com>
References: <473D886F.2090603@gmail.com>
Message-ID: <Pine.LNX.4.64.0711161512010.30522@amboise.dolphin>

On Fri, 16 Nov 2007, Paul Vriens wrote:

> Hi,
> 
> I just ran winetest (by double clicking on the executable) on my WinXP box. I 
> was missing some advpack popups that were there before. Francois sent in a patch 
> to only do some particular tests when winetest_interactive is true. I would 
> assume that clicking on a executable is interactive, not?

No, it's not.
The application (winetest.exe) cannot tell whether someone 
double-clicked on the exe in a file manager, whether it was started by 
some sort of a cron job, or whether it was started by autorun when you 
'inserted a CD in the drive' (which is what I usually do).

Plus the way you start winetest really tells nothing about whether you 
want to run the extra tests (which are going to resize your screen to a 
gazillion different resolutions, play tons of tunes, and ask for your 
attention again and again). Maybe you just started the test before goign 
to bed and expect them to run to completion and turn the computer off 
without your intervention.

One possibility would be to add a checkbox to the winetest GUI that 
you would check if you wanted to run the extra tests. Actually it would 
be nice if it also let you specify the debug level to run the tests 
with.

But right now the solution is to just do:

set WINETEST_INTERACTIVE=1
winetest.exe

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
        It really galls me that most of the computer power in the world
                          is wasted on screen savers.
                     Chris Caldwell from the GIMPS project
                       http://www.mersenne.org/prime.htm


From dank at kegel.com  Fri Nov 16 08:51:30 2007
From: dank at kegel.com (Dan Kegel)
Date: Fri, 16 Nov 2007 06:51:30 -0800
Subject: ntdll: send_debug_event: don't send uninitialized bytes
In-Reply-To: <473D79C7.4010501@codeweavers.com>
References: <a71bd89a0711152129vda57f77j39bc703e06761d79@mail.gmail.com>
	<473D79C7.4010501@codeweavers.com>
Message-ID: <a71bd89a0711160651x5607a07frc789d7299efc2345@mail.gmail.com>

On Nov 16, 2007 3:06 AM, Robert Shearman <rob at codeweavers.com> wrote:
> > +    return sizeof(*rec)
> > +    - (EXCEPTION_MAXIMUM_PARAMETERS-rec->NumberParameters) * sizeof(ULONG_PTR);
>
> FIELD_OFFSET exists for this exact purpose.

OK, I'll bite: is
+    return FIELD_OFFSET(EXCEPTION_RECORD, ExceptionInformation)
+    + rec->NumberParameters * sizeof(ULONG_PTR);
really clearer?
- Dan


From rob at codeweavers.com  Fri Nov 16 09:12:44 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Fri, 16 Nov 2007 15:12:44 +0000
Subject: ntdll: send_debug_event: don't send uninitialized bytes
In-Reply-To: <a71bd89a0711160651x5607a07frc789d7299efc2345@mail.gmail.com>
References: <a71bd89a0711152129vda57f77j39bc703e06761d79@mail.gmail.com>	
	<473D79C7.4010501@codeweavers.com>
	<a71bd89a0711160651x5607a07frc789d7299efc2345@mail.gmail.com>
Message-ID: <473DB36C.7030605@codeweavers.com>

Dan Kegel wrote:
> On Nov 16, 2007 3:06 AM, Robert Shearman <rob at codeweavers.com> wrote:
>   
>>> +    return sizeof(*rec)
>>> +    - (EXCEPTION_MAXIMUM_PARAMETERS-rec->NumberParameters) * sizeof(ULONG_PTR);
>>>       
>> FIELD_OFFSET exists for this exact purpose.
>>     
>
> OK, I'll bite: is
> +    return FIELD_OFFSET(EXCEPTION_RECORD, ExceptionInformation)
> +    + rec->NumberParameters * sizeof(ULONG_PTR);
> really clearer?

No, but this is:
    return FIELD_OFFSET(EXCEPTION_RECORD, 
ExceptionInformation[rec->NumberParameters]);

-- 
Rob Shearman



From a_villacis at palosanto.com  Fri Nov 16 15:37:05 2007
From: a_villacis at palosanto.com (=?ISO-8859-1?Q?Alex_Villac=ED=ADs_Lasso?=)
Date: Fri, 16 Nov 2007 16:37:05 -0500
Subject: USER32: win16 applications should not see long filenames returned
	from dialog control (try 4)
In-Reply-To: <51093.200.125.199.56.1194805824.squirrel@www.palosanto.com>
References: <51093.200.125.199.56.1194805824.squirrel@www.palosanto.com>
Message-ID: <473E0D81.6000401@palosanto.com>

Alex Villac?s Lasso escribi?:
> I hope this version addresses the fact DlgDirSelect does not modify the
> last error code, and therefore cannot be used to distinguish between a
> valid and an invalid file.
>
> Changelog:
> * Applications should not see long filenames returned from dialog control
>   
> ------------------------------------------------------------------------
>
>
This patch has not been applied, and has not been commented on either. 
Is there something wrong with it?

-- 
perl -e '$x=2.4;print sprintf("%.0f + %.0f = %.0f\n",$x,$x,$x+$x);'



From wp1083627-tobias at platen-software.de  Fri Nov 16 14:36:21 2007
From: wp1083627-tobias at platen-software.de (Tobias Platen)
Date: Fri, 16 Nov 2007 21:36:21 +0100
Subject: pglXMakeCurrent causes wine to crash on Mac os x
Message-ID: <473DFF45.9050205@platen-software.de>

Hello
if i run wine on Mac os x 10.4.10 with Apples X11 (opengl linked 
staticly) i get the
following runtime errors;

X Error of failed request:  BadValue (integer parameter out of range for 
operation)
  Major opcode of failed request:  129 (Apple-DRI)
  Minor opcode of failed request:  2 ()
  Value in failed request:  0x57
  Serial number of failed request:  16
  Current serial number in output stream:  16

I have found out that commenting out the bad code will not cause that X 
Error
wine crashes in a access violation (SIGSEGV)

if (ctx) {
     //   pglXMakeCurrent(gdi_display, win, ctx);
    } else {
        ERR(" couldn't initialize OpenGL, expect problems\n");
        wine_tsx11_unlock();
        return FALSE;
    }
Does anybody know how to get opengl working on the mac.




From truiken at gmail.com  Fri Nov 16 18:44:29 2007
From: truiken at gmail.com (James Hawkins)
Date: Fri, 16 Nov 2007 18:44:29 -0600
Subject: [Bug 10464] Regression when installing Skype
In-Reply-To: <E1ItBcp-000761-Tv@wine.codeweavers.com>
References: <bug-10464-11@http.bugs.winehq.org/>
	<E1ItBcp-000761-Tv@wine.codeweavers.com>
Message-ID: <22821af30711161644k15845910s842e75e01fb1819c@mail.gmail.com>

On 11/16/07, wine-bugs at winehq.org <wine-bugs at winehq.org> wrote:
> http://bugs.winehq.org/show_bug.cgi?id=10464
>
> --- Comment #5 from Austin English <austinenglish at gmail.com>  2007-11-16 18:33:31 ---
> James, you can disable bugzilla from e-mailing you for CC's and/or disable all
> e-mail.
>
>

Austin, it's not about that.  Disabling all emails is against the
point.  I'm subscribed to wine-bugs, so I don't need to be cc'ed.
This is the position of several other developers, so I don't see where
the confusion is coming from.  If anything, ask the developer whose
patch created a regression to assign the bug to himself.  I'm going to
stop now before I start ranting.

-- 
James Hawkins


From juan.lang at gmail.com  Fri Nov 16 19:40:09 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Fri, 16 Nov 2007 17:40:09 -0800
Subject: svchost: Added base implementation of svchost (1/27)
Message-ID: <3a768c550711161740i29e1152bia8d288b25b31504d@mail.gmail.com>

Hi Roy,

+#define WIN32_LEAN_AND_MEAN

That's not needed if you're not including windows.h (which you're not.)

+        if (unicode[i] > 129)

You have an off-by-two error here.  7-bit clean means if (unicode[i] >
127).  You can also use something like if (unicode[i] & 0x80).

Stylistic note, use or ignore at your option:
+        HeapFree(GetProcessHeap(), 0, service_param_key);
+        return FALSE;
(snip)
+        HeapFree(GetProcessHeap(), 0, service_param_key);
+        RegCloseKey(service_hkey);
+        return FALSE;
(snip)
+        HeapFree(GetProcessHeap(), 0, service_param_key);
+        HeapFree(GetProcessHeap(), 0, dll_name_short);
+        RegCloseKey(service_hkey);
+        return FALSE;
(snip)

Some judicious use of goto could reduce code for all your error paths.
 Remember that HeapFree of a NULL pointer is allowed.

+    dll_service_main = GetRegValue(service_hkey, service_main);
+    RegCloseKey(service_hkey);
+    if (!dll_service_main)
+    {
+        service_main_a = UnicodeToAscii(service_main);
+    }
+    else
+    {
+        service_main_a = UnicodeToAscii(dll_service_main);
+        HeapFree(GetProcessHeap(), 0, dll_service_main);

Why not just query dll_service_main and service_main from the registry
as an ASCII value to begin with?
--Juan


From scott at open-vote.org  Sat Nov 17 00:43:45 2007
From: scott at open-vote.org (Scott Ritchie)
Date: Fri, 16 Nov 2007 22:43:45 -0800
Subject: Removing Windows and Solaris from the Downloads page
Message-ID: <473E8DA1.2090101@open-vote.org>

It appears that the links for the Windows and Solaris versions on the
winehq downloads page are very, very old.  Since they're no longer
maintained, we should just remove them, yes?

Thanks,
Scott Ritchie


From thunderbird2k at gmx.net  Sat Nov 17 04:46:22 2007
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Sat, 17 Nov 2007 11:46:22 +0100
Subject: Removing Windows and Solaris from the Downloads page
In-Reply-To: <473E8DA1.2090101@open-vote.org>
References: <473E8DA1.2090101@open-vote.org>
Message-ID: <20071117104622.66250@gmx.net>

> It appears that the links for the Windows and Solaris versions on the
> winehq downloads page are very, very old.  Since they're no longer
> maintained, we should just remove them, yes?
> 
> Thanks,
> Scott Ritchie
> 

They should get updated. In case of Solaris there are some bugs which prevent it from running I think. In case of Windows someone needs to update the package. It is very useful to use some of the wine dlls (wined3d for instance) or tests on Windows.

Roderick
-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail


From maarten at codeweavers.com  Sat Nov 17 05:04:36 2007
From: maarten at codeweavers.com (Maarten Lankhorst)
Date: Sat, 17 Nov 2007 12:04:36 +0100
Subject: Removing Windows and Solaris from the Downloads page
In-Reply-To: <20071117104622.66250@gmx.net>
References: <473E8DA1.2090101@open-vote.org> <20071117104622.66250@gmx.net>
Message-ID: <473ECAC4.7000507@codeweavers.com>

Hi,

Roderick Colenbrander schreef:
> They should get updated. In case of Solaris there are some bugs which prevent it from running I think. In case of Windows someone needs to update the package. It is very useful to use some of the wine dlls (wined3d for instance) or tests on Windows.
>   
The question is what dlls should we include? Something like the d3d
dll's would be useful, and a lot of other dll's (mshtml, shdocvw, etc)
probably too. Unfortunately wine won't build on mingw properly,if you
try a 'make' in mingw, it will bomb out on building in dll's. If someone
wants to maintain windows dll's, the makefiles should be adjusted so
that it will build properly, and skip the dll's wine can't emulate in
windows. Such as ntdll, kernel32, advapi, to name a few, probably all
dll's with wineserver calls and perhaps a few more.

Regards,
Maarten.


From stefandoesinger at gmx.at  Sat Nov 17 06:58:31 2007
From: stefandoesinger at gmx.at (Stefan =?utf-8?q?D=C3=B6singer?=)
Date: Sat, 17 Nov 2007 13:58:31 +0100
Subject: #winehackers invite only?
Message-ID: <200711171358.33802.stefandoesinger@gmx.at>

Hello,
Did anyone change #winehackers to require an invite? What was the reason for 
this?

Thanks,
Stefan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071117/ff302a79/attachment.pgp 

From msclrhd at googlemail.com  Fri Nov 16 17:45:17 2007
From: msclrhd at googlemail.com (Reece Dunn)
Date: Fri, 16 Nov 2007 23:45:17 +0000
Subject: Add tests for RSA_AES provider in rsaenh
In-Reply-To: <36bf289b0711161434x712b044cw2d843230ddc7cd79@mail.gmail.com>
References: <36bf289b0711161434x712b044cw2d843230ddc7cd79@mail.gmail.com>
Message-ID: <3f4fd2640711161545s65c444b1y437db787b76a7f51@mail.gmail.com>

On 16/11/2007, Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
> ChangeLog
> --------------
> Add tests for RSA_AES provider in rsaenh
>
> Note:
> -------
> Some tests might fail as there is no RSA_AES provider in wine.
> These will be fixed once the implementation is in place, which will be
> sent next.

The recommended way to do this is mark the parts of the tests that
fail in Wine with todo_wine.

- Reece


From stefandoesinger at gmx.at  Sat Nov 17 07:04:50 2007
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sat, 17 Nov 2007 14:04:50 +0100
Subject: #winehackers invite only?
In-Reply-To: <200711171358.33802.stefandoesinger@gmx.at>
References: <200711171358.33802.stefandoesinger@gmx.at>
Message-ID: <200711171404.52618.stefandoesinger@gmx.at>

Am Samstag, 17. November 2007 13:58:31 schrieb Stefan D?singer:
> Hello,
> Did anyone change #winehackers to require an invite? What was the reason
> for this?
It's sorted out already
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071117/a30b0fa8/attachment.pgp 

From marcus at jet.franken.de  Sat Nov 17 07:10:42 2007
From: marcus at jet.franken.de (Marcus Meissner)
Date: Sat, 17 Nov 2007 14:10:42 +0100
Subject: #winehackers invite only?
In-Reply-To: <200711171358.33802.stefandoesinger@gmx.at>
References: <200711171358.33802.stefandoesinger@gmx.at>
Message-ID: <20071117131042.GA665@galeere>

On Sat, Nov 17, 2007 at 01:58:31PM +0100, Stefan D?singer wrote:
> Hello,
> Did anyone change #winehackers to require an invite? What was the reason for 
> this?

Sorry, we had a kiddie problem.

It is back to normal now.

Ciao, Marcus


From paul.vriens.wine at gmail.com  Sat Nov 17 08:24:39 2007
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Sat, 17 Nov 2007 15:24:39 +0100
Subject: Regression testing and cc-ing the author
Message-ID: <473EF9A7.4020609@gmail.com>

Hi,

I've opened a bug (which if fixed now btw) and the regression testing page at 
http://wiki.winehq.org/RegressionTesting said "Also be sure to add the author of 
the patch to the CC".

So this is what I did.

Should that line be removed from the wiki or do we generally want the author to 
be CC-ed?

-- 
Cheers,

Paul.


From dmitry at codeweavers.com  Sat Nov 17 08:44:26 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sat, 17 Nov 2007 22:44:26 +0800
Subject: Regression testing and cc-ing the author
References: <473EF9A7.4020609@gmail.com>
Message-ID: <019301c82928$5b731b00$6700fea9@DMITRY>

"Paul Vriens" <paul.vriens.wine at gmail.com> wrote:

> I've opened a bug (which if fixed now btw) and the regression testing page at 
> http://wiki.winehq.org/RegressionTesting said "Also be sure to add the author of 
> the patch to the CC".
> 
> So this is what I did.
> 
> Should that line be removed from the wiki or do we generally want the author to 
> be CC-ed?

IMHO that line should be left in the wiki, simply because not all patch
submitters are subscribed to wine-bugs mailing list. But I find nothing
wrong if somebody already subscribed asks to not add him to the cc: list.

-- 
Dmitry.


From paul.vriens.wine at gmail.com  Sat Nov 17 09:12:19 2007
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Sat, 17 Nov 2007 16:12:19 +0100
Subject: Regression testing and cc-ing the author
In-Reply-To: <019301c82928$5b731b00$6700fea9@DMITRY>
References: <473EF9A7.4020609@gmail.com>
	<019301c82928$5b731b00$6700fea9@DMITRY>
Message-ID: <229cc3050711170712s50198613x43a435d792bbc071@mail.gmail.com>

On Nov 17, 2007 3:44 PM, Dmitry Timoshkov <dmitry at codeweavers.com> wrote:
>
> "Paul Vriens" <paul.vriens.wine at gmail.com> wrote:
>
> > I've opened a bug (which if fixed now btw) and the regression testing page at
> > http://wiki.winehq.org/RegressionTesting said "Also be sure to add the author of
> > the patch to the CC".
> >
> > So this is what I did.
> >
> > Should that line be removed from the wiki or do we generally want the author to
> > be CC-ed?
>
> IMHO that line should be left in the wiki, simply because not all patch
> submitters are subscribed to wine-bugs mailing list. But I find nothing
> wrong if somebody already subscribed asks to not add him to the cc: list.
>
> --
> Dmitry.
>
I saw James' email after I wrote that email. I think it's fine as well
if somebody asks not to be added.
But not everybody that adds bug descriptions reads wine-devel.

At least I will not add anybody to the cc-list anymore and try to
contact the author.

Cheers,

Paul.


From dank06 at kegel.com  Sat Nov 17 11:05:33 2007
From: dank06 at kegel.com (Dan Kegel)
Date: Sat, 17 Nov 2007 09:05:33 -0800
Subject: ReadProcessMemory question
Message-ID: <a71bd89a0711170905o1fb4ad3ay8f183352c5e4bbd1@mail.gmail.com>

Dave wrote:
> I am trying to read the memory of another process with
> ReadProcessmemory and I can only get it to work when
> I commit the entire region I want to read with VirtualAllocEx -
> but as you probably know when I do this it
> initializes the entire memory region to 0s.
> So my question is how do I get ReadProcessmemory to read from the region??

What are you trying to do?  A little more context might help.

FWIW, ReadProcessMemory has some drawbacks as an IPC mechanism:
http://blogs.msdn.com/oldnewthing/archive/2006/01/17/513779.aspx

Here are a few examples of how to use ReadProcessMemory:
http://www.gamedev.net/community/forums/topic.asp?topic_id=328279
http://www.codeproject.com/threads/int64_memsteal.asp


From rob at codeweavers.com  Sat Nov 17 11:29:48 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Sat, 17 Nov 2007 17:29:48 +0000
Subject: ReadProcessMemory question
In-Reply-To: <537876.20219.qm@web54307.mail.re2.yahoo.com>
References: <537876.20219.qm@web54307.mail.re2.yahoo.com>
Message-ID: <473F250C.7090609@codeweavers.com>

Dave Cartright wrote:
> I am trying to read the memory of another process with 
> ReadProcessmemory and I can only get it to work when I commit the 
> entire region I want to read with VirtualAllocEx - but as you probably 
> know when I do this it initializes the entire memory region to 0s.
> So my question is how do I get ReadProcessmemory to read from the region??

It sounds to me like you're trying to read the previous contents of 
areas of memory. However, you don't seem to realise either that virtual 
memory is not physical memory or that uncommitted virtual memory is not 
backed by a page of memory in swap or physical memory, so calling 
ReadProcessMemory on it doesn't make sense as there is no data there to 
be read! Furthermore, when a page of virtual memory is deallocated then 
it free to be allocated again by any process in the system, and as you 
say it is initialised to all 0's as a security measure and you can't get 
that same page back again.

-- 
Rob Shearman



From infyquest at gmail.com  Sat Nov 17 11:34:12 2007
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Sat, 17 Nov 2007 11:34:12 -0600
Subject: Add tests for RSA_AES provider in rsaenh
In-Reply-To: <3f4fd2640711161545s65c444b1y437db787b76a7f51@mail.gmail.com>
References: <36bf289b0711161434x712b044cw2d843230ddc7cd79@mail.gmail.com>
	<3f4fd2640711161545s65c444b1y437db787b76a7f51@mail.gmail.com>
Message-ID: <36bf289b0711170934i3b8b61e1oac5b0bb46d4e21e3@mail.gmail.com>

There is a test in derive_key function that fails.
If I put a if condition to make it a todo_wine, it looks loke a hack
and its ugly
As that function is used alot.

---
VJ

On Nov 16, 2007 5:45 PM, Reece Dunn <msclrhd at googlemail.com> wrote:
>
> On 16/11/2007, Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
> > ChangeLog
> > --------------
> > Add tests for RSA_AES provider in rsaenh
> >
> > Note:
> > -------
> > Some tests might fail as there is no RSA_AES provider in wine.
> > These will be fixed once the implementation is in place, which will be
> > sent next.
>
> The recommended way to do this is mark the parts of the tests that
> fail in Wine with todo_wine.
>
> - Reece
>
>
>


From truiken at gmail.com  Sat Nov 17 11:39:23 2007
From: truiken at gmail.com (James Hawkins)
Date: Sat, 17 Nov 2007 09:39:23 -0800
Subject: Regression testing and cc-ing the author
In-Reply-To: <473EF9A7.4020609@gmail.com>
References: <473EF9A7.4020609@gmail.com>
Message-ID: <3D4D536A-6BF6-43EE-80F3-4F988A2B7C5B@gmail.com>



On Nov 17, 2007, at 6:24 AM, Paul Vriens <paul.vriens.wine at gmail.com>  
wrote:

> Hi,
>
> I've opened a bug (which if fixed now btw) and the regression  
> testing page at
> http://wiki.winehq.org/RegressionTesting said "Also be sure to add  
> the author of
> the patch to the CC".
>
> So this is what I did.
>
> Should that line be removed from the wiki or do we generally want  
> the author to
> be CC-ed?
>
> -- 
> Cheers,
>
> Paul.
>
>

It's not that cut and dry.  Some people don't mind being CC'ed.  Some  
people do mind being CC'ed, and I know I'm not the only one.  Some  
devels aren't subscribed to wine-bugs.  Like I said before, asking the  
devel to assign the bug to himself is a lot more respectful.

--
James


From truiken at gmail.com  Sat Nov 17 11:45:59 2007
From: truiken at gmail.com (James Hawkins)
Date: Sat, 17 Nov 2007 09:45:59 -0800
Subject: Add tests for RSA_AES provider in rsaenh
In-Reply-To: <36bf289b0711170934i3b8b61e1oac5b0bb46d4e21e3@mail.gmail.com>
References: <36bf289b0711161434x712b044cw2d843230ddc7cd79@mail.gmail.com>
	<3f4fd2640711161545s65c444b1y437db787b76a7f51@mail.gmail.com>
	<36bf289b0711170934i3b8b61e1oac5b0bb46d4e21e3@mail.gmail.com>
Message-ID: <39617828-CA48-4F58-88AD-ED6484CF64BD@gmail.com>



On Nov 17, 2007, at 9:34 AM, "Vijay Kiran Kamuju"  
<infyquest at gmail.com> wrote:

> There is a test in derive_key function that fails.
> If I put a if condition to make it a todo_wine, it looks loke a hack
> and its ugly
> As that function is used alot.
>
> ---
> VJ
>
> On Nov 16, 2007 5:45 PM, Reece Dunn <msclrhd at googlemail.com> wrote:
>>
>> On 16/11/2007, Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
>>> ChangeLog
>>> --------------
>>> Add tests for RSA_AES provider in rsaenh
>>>
>>> Note:
>>> -------
>>> Some tests might fail as there is no RSA_AES provider in wine.
>>> These will be fixed once the implementation is in place, which  
>>> will be
>>> sent next.
>>
>> The recommended way to do this is mark the parts of the tests that
>> fail in Wine with todo_wine.
>>
>> - Reece
>>
>>
>>
>
>

Ugly or not, the tests wont be accepted otherwise.  Also, please  
bottom-post on this list.

--
James


From infyquest at gmail.com  Sat Nov 17 11:53:33 2007
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Sat, 17 Nov 2007 11:53:33 -0600
Subject: Add tests for RSA_AES provider in rsaenh
In-Reply-To: <39617828-CA48-4F58-88AD-ED6484CF64BD@gmail.com>
References: <36bf289b0711161434x712b044cw2d843230ddc7cd79@mail.gmail.com>
	<3f4fd2640711161545s65c444b1y437db787b76a7f51@mail.gmail.com>
	<36bf289b0711170934i3b8b61e1oac5b0bb46d4e21e3@mail.gmail.com>
	<39617828-CA48-4F58-88AD-ED6484CF64BD@gmail.com>
Message-ID: <36bf289b0711170953m532d81a2jf49fa144bf57c2e4@mail.gmail.com>

On Nov 17, 2007 11:45 AM, James Hawkins <truiken at gmail.com> wrote:
>
>
> On Nov 17, 2007, at 9:34 AM, "Vijay Kiran Kamuju"
> <infyquest at gmail.com> wrote:
>
> > There is a test in derive_key function that fails.
> > If I put a if condition to make it a todo_wine, it looks loke a hack
> > and its ugly
> > As that function is used alot.
> >
> > ---
> > VJ
> >
> > On Nov 16, 2007 5:45 PM, Reece Dunn <msclrhd at googlemail.com> wrote:
> >>
> >> On 16/11/2007, Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
> >>> ChangeLog
> >>> --------------
> >>> Add tests for RSA_AES provider in rsaenh
> >>>
> >>> Note:
> >>> -------
> >>> Some tests might fail as there is no RSA_AES provider in wine.
> >>> These will be fixed once the implementation is in place, which
> >>> will be
> >>> sent next.
> >>
> >> The recommended way to do this is mark the parts of the tests that
> >> fail in Wine with todo_wine.
> >>
> >> - Reece
> >>
> >>
> >>
> >
> >
>
> Ugly or not, the tests wont be accepted otherwise.  Also, please
> bottom-post on this list.
>
> --
> James
>

It seems there is a bug in the tests,
Once this is fixed I will resend it again.
I have sent this to Juan Lang for review.
Once our expert tells me whats wrong I will resend.
Sorry for top posting, I was in a hurry.

---
VJ


From cedar1182 at yahoo.com  Sat Nov 17 09:26:16 2007
From: cedar1182 at yahoo.com (Dave Cartright)
Date: Sat, 17 Nov 2007 07:26:16 -0800 (PST)
Subject: ReadProcessMemory Question
Message-ID: <800204.85666.qm@web54303.mail.re2.yahoo.com>

I am trying to read the memory of another process with ReadProcessMemory but I can only get it to work when I use VirtualAllocEx to commit the region of memory - problem is (as you very well know) that VirtualAllocEx initializes the region with 0s.  So my question is how do I get ReadProcessMemory to work without using VirtualAllocEx??

       
---------------------------------
Be a better pen pal. Text or chat with friends inside Yahoo! Mail. See how.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071117/ac24cbb4/attachment.htm 

From mckillroy at gmail.com  Sat Nov 17 16:09:11 2007
From: mckillroy at gmail.com (Chris McKillroy)
Date: Sat, 17 Nov 2007 23:09:11 +0100
Subject: Removing Windows and Solaris from the Downloads page
In-Reply-To: <a99a83590711171408k57fd520dr5444f0eeda1f8350@mail.gmail.com>
References: <473E8DA1.2090101@open-vote.org> <20071117104622.66250@gmx.net>
	<473ECAC4.7000507@codeweavers.com>
	<a99a83590711171408k57fd520dr5444f0eeda1f8350@mail.gmail.com>
Message-ID: <a99a83590711171409h531e68b1kd052217f240ba16a@mail.gmail.com>

I compiled wine on Solaris using a .spec provided by the people of

http://pkgbuild.sourceforge.net/spec-files-extra/

Maybe contact them ?

My version runs quite nice as far as i can see.

Cheers


From scott at open-vote.org  Sat Nov 17 18:43:13 2007
From: scott at open-vote.org (Scott Ritchie)
Date: Sat, 17 Nov 2007 16:43:13 -0800
Subject: Regression testing and cc-ing the author
In-Reply-To: <3D4D536A-6BF6-43EE-80F3-4F988A2B7C5B@gmail.com>
References: <473EF9A7.4020609@gmail.com>
	<3D4D536A-6BF6-43EE-80F3-4F988A2B7C5B@gmail.com>
Message-ID: <473F8AA1.7000905@open-vote.org>

James Hawkins wrote:
> 
> On Nov 17, 2007, at 6:24 AM, Paul Vriens <paul.vriens.wine at gmail.com>  
> wrote:
> 
>> Hi,
>>
>> I've opened a bug (which if fixed now btw) and the regression  
>> testing page at
>> http://wiki.winehq.org/RegressionTesting said "Also be sure to add  
>> the author of
>> the patch to the CC".
>>
>> So this is what I did.
>>
>> Should that line be removed from the wiki or do we generally want  
>> the author to
>> be CC-ed?
>>
>> -- 
>> Cheers,
>>
>> Paul.
>>
>>
> 
> It's not that cut and dry.  Some people don't mind being CC'ed.  Some  
> people do mind being CC'ed, and I know I'm not the only one.  Some  
> devels aren't subscribed to wine-bugs.  Like I said before, asking the  
> devel to assign the bug to himself is a lot more respectful.
> 
> --
> James
> 
> 

Is there a bugzilla setting for this?  Eg "don't allow others to CC me"?

Thanks,
Scott Ritchie


From pawel.rozanski at gmail.com  Sat Nov 17 20:48:15 2007
From: pawel.rozanski at gmail.com (=?ISO-8859-2?Q?Pawe=B3_R=F3=BFa=F1ski?=)
Date: Sun, 18 Nov 2007 03:48:15 +0100
Subject: Hi, and a regression in bug 10486
Message-ID: <cd91cef90711171848k16c6f2f9y2259970a11761d84@mail.gmail.com>

Hi

I have found a regression in wine. a strange one. What is a  policy
about posting such regressions, here on malling list?

(Or is regression is worth enough to post it here?)

I don't play that particular game on wine and it's "minor" bug - but i
have found (via bitsect) that
"user32: Cache the window class name on the client side." produce
strange effects on directx code. I have faith that regressions are
supposed to post here as well.

More info in bug #10486

Take care & Hope that helps
-- 
Pawe? R??a?ski, a wine user witch occasionally post something on appdb/bugzilla

From rob at codeweavers.com  Sun Nov 18 05:00:03 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Sun, 18 Nov 2007 11:00:03 +0000
Subject: svchost: Added base implementation of svchost (1/27)
In-Reply-To: <20071117001508.GA9363@knuth.cs.hmc.edu>
References: <20071117001508.GA9363@knuth.cs.hmc.edu>
Message-ID: <47401B33.3060800@codeweavers.com>

Roy Shea wrote:
> +TOPSRCDIR = @top_srcdir@
> +TOPOBJDIR = ../..
> +SRCDIR    = @srcdir@
> +VPATH     = @srcdir@
> +MODULE    = svchost.exe
> +APPMODE   = -municode
> +IMPORTS   = advapi32 kernel32 ole32
>   

I can't see any reason why svchost needs to import ole32.

-- 
Rob Shearman



From paul at astro.gla.ac.uk  Sun Nov 18 05:42:40 2007
From: paul at astro.gla.ac.uk (Paul Millar)
Date: Sun, 18 Nov 2007 12:42:40 +0100
Subject: Removing Windows and Solaris from the Downloads page
In-Reply-To: <473ECAC4.7000507@codeweavers.com>
References: <473E8DA1.2090101@open-vote.org> <20071117104622.66250@gmx.net>
	<473ECAC4.7000507@codeweavers.com>
Message-ID: <200711181242.40243.paul@astro.gla.ac.uk>

On Saturday 17 November 2007 12:04:36 Maarten Lankhorst wrote:
> Roderick Colenbrander schreef:
> > They should get updated. In case of Solaris there are some bugs which
> > prevent it from running I think. In case of Windows someone needs to
> > update the package. It is very useful to use some of the wine dlls
> > (wined3d for instance) or tests on Windows.
>
> The question is what dlls should we include? Something like the d3d
> dll's would be useful, and a lot of other dll's (mshtml, shdocvw, etc)
> probably too. Unfortunately wine won't build on mingw properly,if you
> try a 'make' in mingw, it will bomb out on building in dll's. If someone
> wants to maintain windows dll's, the makefiles should be adjusted so
> that it will build properly, and skip the dll's wine can't emulate in
> windows. Such as ntdll, kernel32, advapi, to name a few, probably all
> dll's with wineserver calls and perhaps a few more.

That sounds promising.  I should be able to tweak the winetest.exe build 
infrastructure so it also build DLLs and executables without too much 
trouble.  Having a target that skips attempting to build DLLs that will never 
work would help.

Cheers,

Paul.


From dmitry at codeweavers.com  Sun Nov 18 07:15:23 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 18 Nov 2007 21:15:23 +0800
Subject: gdi32: Add stub for RemoveFontMemResourceEx
References: <200711181214.49163.klaus.layer@gmx.de>
Message-ID: <003201c829e5$159f4c30$6700fea9@DMITRY>

"Klaus Layer" <klaus.layer at gmx.de> wrote:

> Nokia PC Suite installation crashes due to missing function 
> RemoveFontMemResourceEx. This patch adds function RemoveFontMemResourceEx 
> which just calls WineEngRemoveFontMemResourceEx as stub

You forgot to create WineEngRemoveFontMemResourceEx implementation for
a case when HAVE_FREETYPE is not defined.

-- 
Dmitry.


From wine.dev at web.de  Sun Nov 18 08:43:26 2007
From: wine.dev at web.de (Detlef Riekenberg)
Date: Sun, 18 Nov 2007 15:43:26 +0100
Subject: bits: INF and resource file for qmgr registration (8/27)
In-Reply-To: <20071117001656.GA9440@knuth.cs.hmc.edu>
References: <20071117001656.GA9440@knuth.cs.hmc.edu>
Message-ID: <1195397006.7740.7.camel@p4>

On Fr, 2007-11-16 at 16:16 -0800, Roy Shea wrote:
>  dlls/qmgr/qmgr.inf |   32 ++++++++++++++++++++++++++++++++
>  dlls/qmgr/rsrc.rc  |   21 +++++++++++++++++++++
>  2 files changed, 53 insertions(+), 0 deletions(-) 

The change for Makefile.in to add rsrc.rc is missing here.
(found in the next patch)


-- 
 
By by ... Detlef




From wine.dev at web.de  Sun Nov 18 08:53:46 2007
From: wine.dev at web.de (Detlef Riekenberg)
Date: Sun, 18 Nov 2007 15:53:46 +0100
Subject: bits: Added framework for testing the BackgroundCopyJob
	interface (25/27)
In-Reply-To: <20071117002114.GA9814@knuth.cs.hmc.edu>
References: <20071117002114.GA9814@knuth.cs.hmc.edu>
Message-ID: <1195397627.7740.12.camel@p4>

On Fr, 2007-11-16 at 16:21 -0800, Roy Shea wrote:
> +/* Generic test setup */
> +static BOOL setup(void)

unused code

> +/* Generic test cleanup */
> +static void teardown(void)

unused code


+START_TEST(job)
> +{
> +    CoInitialize(NULL);
> +    CoUninitialize();
> +}

Do you want to call "setup()" and "teardown()" here?


-- 
 
By by ... Detlef




From shachar at shemesh.biz  Sun Nov 18 09:02:49 2007
From: shachar at shemesh.biz (Shachar Shemesh)
Date: Sun, 18 Nov 2007 17:02:49 +0200
Subject: Valgrind results for Nov 12 & 13
In-Reply-To: <a71bd89a0711150102u156cd532g928d4a36a1c77eb@mail.gmail.com>
References: <a71bd89a0711140632m411186f3r2ea7a2678f3b3dbe@mail.gmail.com>	<001601c8274f$204372d0$6700fea9@DMITRY>
	<a71bd89a0711150102u156cd532g928d4a36a1c77eb@mail.gmail.com>
Message-ID: <47405419.7010805@shemesh.biz>

Dan Kegel wrote:
> Oh, he'd undoubtedly prefer ignoring to memsetting.
>   
I believe the "official" answer is to teach valgrind which fields are
important for which server request. Granted, it a lot more work, but
it's the only way we will actually catch errors :-)

Shachar


From bon at elektron.ikp.physik.tu-darmstadt.de  Sun Nov 18 10:54:06 2007
From: bon at elektron.ikp.physik.tu-darmstadt.de (Uwe Bonnes)
Date: Sun, 18 Nov 2007 17:54:06 +0100
Subject: advapi32/service.c -- remove untriggerable check
In-Reply-To: <Pine.LNX.4.64.0711180701400.19271@acrux.dbai.tuwien.ac.at>
References: <Pine.LNX.4.64.0711180701400.19271@acrux.dbai.tuwien.ac.at>
Message-ID: <18240.28206.466662.459304@hertz.ikp.physik.tu-darmstadt.de>

>>>>> "Gerald" == Gerald Pfeifer <gerald at pfeifer.com> writes:

    Gerald> n is of type DWORD which is unsigned, so n < 0 always will
    Gerald> evaluate to false.

    Gerald> Gerald

    Gerald> ChangeLog: Remove untriggerable check.

    Gerald> Index: dlls/advapi32/service.c
    Gerald> ===================================================================
    Gerald> RCS file: /home/wine/wine/dlls/advapi32/service.c,v retrieving
    Gerald> revision 1.160 diff -u -3 -p -r1.160 service.c ---
    Gerald> dlls/advapi32/service.c 15 Oct 2007 16:29:59 -0000 1.160 +++
    Gerald> dlls/advapi32/service.c 18 Nov 2007 06:01:28 -0000 @@ -2107,9
    Gerald> +2107,6 @@ QueryServiceConfigW( SC_HANDLE hService, n -=
    Gerald> sizeof(WCHAR); }
 
    Gerald> - if( n < 0 ) - ERR("Buffer overflow!\n"); - TRACE("Image path =
    Gerald> %s\n", debugstr_w(lpServiceConfig->lpBinaryPathName) );
    Gerald> TRACE("Group = %s\n",
    Gerald> debugstr_w(lpServiceConfig->lpLoadOrderGroup) );
    Gerald> TRACE("Dependencies = %s\n",
    Gerald> debugstr_w(lpServiceConfig->lpDependencies) );

Is dropping the check the right answer? Shouldn't the check test for high
values like > 0xff00 and report a possible problem?
-- 
Uwe Bonnes                bon at elektron.ikp.physik.tu-darmstadt.de

Institut fuer Kernphysik  Schlossgartenstrasse 9  64289 Darmstadt
--------- Tel. 06151 162516 -------- Fax. 06151 164321 ----------


From dank at kegel.com  Sun Nov 18 11:46:44 2007
From: dank at kegel.com (Dan Kegel)
Date: Sun, 18 Nov 2007 09:46:44 -0800
Subject: advapi32/service.c -- remove untriggerable check
Message-ID: <a71bd89a0711180946r12cad1aancddb7873b929d5b5@mail.gmail.com>

Uwe wrote:
>Gerald Pfeifer writes:
>
>> n is of type DWORD which is unsigned, so n < 0 always will
>> evaluate to false.
>
> Is dropping the check the right answer? Shouldn't the check test for high
> values like > 0xff00 and report a possible problem?

Indeed.
IMHO we don't need patches like this, and Gerald
is not thinking hard enough.   Simplistic just-remove-the-warning
patches are a Bad Thing, and we Don't Want To Encourage Them.
Please stop.
- Dan

-- 
Wine for Windows ISVs: http://kegel.com/wine/isv


From klaus.layer at gmx.de  Sun Nov 18 12:29:37 2007
From: klaus.layer at gmx.de (Klaus Layer)
Date: Sun, 18 Nov 2007 19:29:37 +0100
Subject: gdi32: Add stub for RemoveFontMemResourceEx
In-Reply-To: <003201c829e5$159f4c30$6700fea9@DMITRY>
References: <200711181214.49163.klaus.layer@gmx.de>
	<003201c829e5$159f4c30$6700fea9@DMITRY>
Message-ID: <200711181929.37967.klaus.layer@gmx.de>

Am Sonntag, 18. November 2007 14:15:23 schrieb Dmitry Timoshkov:
> You forgot to create WineEngRemoveFontMemResourceEx implementation for
> a case when HAVE_FREETYPE is not defined.
> 
> -- 
> Dmitry.
> 
Dimitry, thanks for reviewing the patch. I just resent the patch together with 
the missing implementation.

Best regards,

Klaus


From lionel.tricon at free.fr  Sun Nov 18 10:13:20 2007
From: lionel.tricon at free.fr (Lionel Tricon)
Date: Sun, 18 Nov 2007 17:13:20 +0100
Subject: Wine and LD_PRELOAD
Message-ID: <200711181713.20173.lionel.tricon@free.fr>

Hi wine list,

I am currently working for the next generation of the klik project (1 
application = 1 file) and we actualy face some troubles with picasa which is 
running under linux thanks to wine.

It seems that wine deal badly with the LD_PRELOAD feature which is one of the 
main composant we use to virtualize and execute the application (with fuse 
for the underlying filesystem).

Is there a way to force wine to go through LD_PRELOAD (to overload some system 
calls) ? or this limitation is driven by the architecture ?

Thanks in advance,
Lionel Tricon


From stefandoesinger at gmx.at  Sun Nov 18 13:14:41 2007
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 18 Nov 2007 20:14:41 +0100
Subject: Wine and LD_PRELOAD
In-Reply-To: <200711181713.20173.lionel.tricon@free.fr>
References: <200711181713.20173.lionel.tricon@free.fr>
Message-ID: <200711182014.43381.stefandoesinger@gmx.at>

Am Sonntag, 18. November 2007 17:13:20 schrieb Lionel Tricon:
> Hi wine list,
>
> I am currently working for the next generation of the klik project (1
> application = 1 file) and we actualy face some troubles with picasa which
> is running under linux thanks to wine.
>
> It seems that wine deal badly with the LD_PRELOAD feature which is one of
> the main composant we use to virtualize and execute the application (with
> fuse for the underlying filesystem).
>
> Is there a way to force wine to go through LD_PRELOAD (to overload some
> system calls) ? or this limitation is driven by the architecture ?
I think wine dlopen()s many libraries instead of linking dynamically to them. 
This makes the build environment more independent of the runtime environment, 
and we can provide binary builds with all features enabled, and they will 
still run if the user's system does not have all the libs.

We had an issue like that with libGL.so a long time back, and it was fixed by 
changing some parameter to dlopen. Does anyone remember what that was, and if 
this can be done for the other libraries too?

Lionel, can you provide us with a list of libraries where LD_PRELOAD does not 
work correctly? This should help to track down the bad ldopen calls.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071118/001cff11/attachment.pgp 

From rob at codeweavers.com  Sun Nov 18 13:21:31 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Sun, 18 Nov 2007 19:21:31 +0000
Subject: advapi32/service.c -- remove untriggerable check
In-Reply-To: <a71bd89a0711180946r12cad1aancddb7873b929d5b5@mail.gmail.com>
References: <a71bd89a0711180946r12cad1aancddb7873b929d5b5@mail.gmail.com>
Message-ID: <474090BB.4070109@codeweavers.com>

Dan Kegel wrote:
> Uwe wrote:
>   
>> Gerald Pfeifer writes:
>>
>>     
>>> n is of type DWORD which is unsigned, so n < 0 always will
>>> evaluate to false.
>>>       
>> Is dropping the check the right answer? Shouldn't the check test for high
>> values like > 0xff00 and report a possible problem?
>>     
>
> Indeed.
> IMHO we don't need patches like this, and Gerald
> is not thinking hard enough.   Simplistic just-remove-the-warning
> patches are a Bad Thing, and we Don't Want To Encourage Them.
> Please stop.

Arguably, the check shouldn't be there anyway. Either the code always 
calculates the buffer size required correctly or it doesn't. As Gerald 
has pointed out, the extra check doesn't actually trigger so it is 
useless and makes people have a false sense of security in the code.

I'm not a big fan of turning on obscure warnings in gcc, but it has 
uncovered some real bugs and Gerald has argued before that uncovering 
real bugs is easier when there are less harmless warnings to sift 
through. Obviously, if the code becomes less readable through this 
process or it introduces bugs then this is not desirable, but that isn't 
the case with this patch.

-- 
Rob Shearman



From devzero at web.de  Sun Nov 18 13:38:34 2007
From: devzero at web.de (devzero at web.de)
Date: Sun, 18 Nov 2007 20:38:34 +0100
Subject: Unimplemented function KERNEL32.dll.FindFirstVolumeW
Message-ID: <2093117585@web.de>

Hello !

i`m new to wine.
I tried windirstat under  wine-0.9.44-15 and crossover-office 6.2.0-1 under opensuse10.3 - but it doesn`t work.

i`m getting
wine: Call from 0x7b8447d0 to unimplemented function KERNEL32.dll.FindFirstVolumeW, aborting
wine: Unimplemented function KERNEL32.dll.FindFirstVolumeW called at address 0x7b8447d0 (thread 0019), starting debugger...
Unhandled exception: unimplemented function KERNEL32.dll.FindFirstVolumeW called in 32-bit code (0x7b844852).

does somebody know when this function will be available ?

is this a rarely used function?

http://msdn2.microsoft.com/en-us/library/aa364425.aspx
tells "Retrieves the name of a volume on a computer. FindFirstVolume is used to begin scanning the volumes of a computer."

regards
roland



_____________________________________________________________________
Der WEB.DE SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen!
http://smartsurfer.web.de/?mc=100071&distributionid=000000000066



From hans at it.vu.nl  Sun Nov 18 14:45:24 2007
From: hans at it.vu.nl (Hans Leidekker)
Date: Sun, 18 Nov 2007 21:45:24 +0100
Subject: Unimplemented function KERNEL32.dll.FindFirstVolumeW
In-Reply-To: <2093117585@web.de>
References: <2093117585@web.de>
Message-ID: <200711182145.24714.hans@it.vu.nl>

On Sunday 18 November 2007 20:38:34 devzero at web.de wrote:

> i`m new to wine.
> I tried windirstat under  wine-0.9.44-15 and crossover-office 6.2.0-1 under opensuse10.3 - but it doesn`t work.
> 
> i`m getting
> wine: Call from 0x7b8447d0 to unimplemented function KERNEL32.dll.FindFirstVolumeW, aborting
> wine: Unimplemented function KERNEL32.dll.FindFirstVolumeW called at address 0x7b8447d0 (thread 0019), starting debugger...
> Unhandled exception: unimplemented function KERNEL32.dll.FindFirstVolumeW called in 32-bit code (0x7b844852).

I submitted a stub implementation for this function which makes
windirstat start up fine here.

 -Hans


From hans at it.vu.nl  Sun Nov 18 15:24:09 2007
From: hans at it.vu.nl (Hans Leidekker)
Date: Sun, 18 Nov 2007 22:24:09 +0100
Subject: Unimplemented function KERNEL32.dll.FindFirstVolumeW
In-Reply-To: <2093257654@web.de>
References: <2093257654@web.de>
Message-ID: <200711182224.10065.hans@it.vu.nl>

On Sunday 18 November 2007 22:14:17 devzero at web.de wrote:

> latest version i tried here is 
> 
> wine-0.9.49-11.3.i586.rpm    
> wine-snapshot-0.9.49.20071118-11.1.i586.rpm    
> 
> but same error.
> maybe that`s not recent enough ?
> 
> do i need to enable special option or add some files ?

You can either download, patch and compile wine yourself or wait for
Wine 0.9.50 to be released, which should happen within one to two weeks.

 -Hans


From winehacker at gmail.com  Sun Nov 18 16:52:03 2007
From: winehacker at gmail.com (Steven Edwards)
Date: Sun, 18 Nov 2007 17:52:03 -0500
Subject: Removing Windows and Solaris from the Downloads page
In-Reply-To: <473ECAC4.7000507@codeweavers.com>
References: <473E8DA1.2090101@open-vote.org> <20071117104622.66250@gmx.net>
	<473ECAC4.7000507@codeweavers.com>
Message-ID: <19e31a080711181452n422b74fv341e40023dd832a@mail.gmail.com>

On Nov 17, 2007 6:04 AM, Maarten Lankhorst <maarten at codeweavers.com> wrote:
> The question is what dlls should we include? Something like the d3d
> dll's would be useful, and a lot of other dll's (mshtml, shdocvw, etc)
> probably too. Unfortunately wine won't build on mingw properly,if you
> try a 'make' in mingw, it will bomb out on building in dll's. If someone
> wants to maintain windows dll's, the makefiles should be adjusted so
> that it will build properly, and skip the dll's wine can't emulate in
> windows. Such as ntdll, kernel32, advapi, to name a few, probably all
> dll's with wineserver calls and perhaps a few more.

And all of the dlls that make unix functional calls that don't exist
on windows. I seem to recall us having a discussion about a certain
WinMM patch...

The problem is not in the makefiles, a lot of the problem is that we
are not clear on which dlls would be of use for testing in windows. I
had to go through hoops to get wininet buildable on Windows because it
uses unix sockets on Wine rather than winsock. There was quite a
performance issue when running under Wine with winsock that did not
show up when using Unix sockets and I felt, and still do that hacking
around the problem rather than finding where the bottleneck was, is
not the right answer. That was my point in the winmm patch we
discussed also, if there is a bottleneck in wineserver or somewhere,
hacking around window portability for performance gain seems to just
be hiding the problems.

I don't have a solution that will always work mind you, I am just
venting. Mingw/MSVC and friends will always be second class citzen to
Wine on Unix.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From devzero at web.de  Sun Nov 18 15:14:17 2007
From: devzero at web.de (devzero at web.de)
Date: Sun, 18 Nov 2007 22:14:17 +0100
Subject: Unimplemented function KERNEL32.dll.FindFirstVolumeW
Message-ID: <2093257654@web.de>

Hello Hans, 

thanks for that info.

latest version i tried here is 

wine-0.9.49-11.3.i586.rpm    
wine-snapshot-0.9.49.20071118-11.1.i586.rpm    

but same error.
maybe that`s not recent enough ?

do i need to enable special option or add some files ?

sorry, i`m quite new to wine and maybe i should read deeper into the docs instead of posting :)

regards
roland


> -----Urspr?ngliche Nachricht-----
> Von: "Hans Leidekker" <hans at it.vu.nl>
> Gesendet: 18.11.07 21:45:34
> An: wine-devel at winehq.org
> Betreff: Re: Unimplemented function KERNEL32.dll.FindFirstVolumeW


> 
> On Sunday 18 November 2007 20:38:34 devzero at web.de wrote:
> 
> > i`m new to wine.
> > I tried windirstat under  wine-0.9.44-15 and crossover-office 6.2.0-1 under opensuse10.3 - but it doesn`t work.
> > 
> > i`m getting
> > wine: Call from 0x7b8447d0 to unimplemented function KERNEL32.dll.FindFirstVolumeW, aborting
> > wine: Unimplemented function KERNEL32.dll.FindFirstVolumeW called at address 0x7b8447d0 (thread 0019), starting debugger...
> > Unhandled exception: unimplemented function KERNEL32.dll.FindFirstVolumeW called in 32-bit code (0x7b844852).
> 
> I submitted a stub implementation for this function which makes
> windirstat start up fine here.
> 
>  -Hans
> 


______________________________________________________________________________
Jetzt neu! Im riesigen WEB.DE Club SmartDrive Dateien freigeben und mit 
Freunden teilen! http://www.freemail.web.de/club/smartdrive_ttc.htm/?mc=021134



From lionel.tricon at free.fr  Sun Nov 18 16:48:31 2007
From: lionel.tricon at free.fr (Lionel Tricon)
Date: Sun, 18 Nov 2007 23:48:31 +0100
Subject: Wine and LD_PRELOAD
In-Reply-To: <200711182014.43381.stefandoesinger@gmx.at>
References: <200711181713.20173.lionel.tricon@free.fr>
	<200711182014.43381.stefandoesinger@gmx.at>
Message-ID: <200711182348.31301.lionel.tricon@free.fr>

On Sunday 18 November 2007 20:14:41 Stefan D?singer wrote:
> I think wine dlopen()s many libraries instead of linking dynamically to
> them. This makes the build environment more independent of the runtime
> environment, and we can provide binary builds with all features enabled,
> and they will still run if the user's system does not have all the libs.

Hi Stefan,
Thanks for your reply.

> We had an issue like that with libGL.so a long time back, and it was fixed
> by changing some parameter to dlopen. Does anyone remember what that was,
> and if this can be done for the other libraries too?
>
> Lionel, can you provide us with a list of libraries where LD_PRELOAD does
> not work correctly? This should help to track down the bad ldopen calls.

In fact, we overload a lot of common system call from the standard libc. We 
have slightly modified the fackechroot library and we need to trap almost all 
system calls linked to the filesystem. To give you an idea, all the following 
system calls are reimplemented so that we can put the software into a jail 
(in most of them, we only change the local path before calling the real one).

As far as i understand the problem (and with the help of strace), it appears 
that the wine application ignore the LD_PRELOAD env var (LD_PRELOAD instructs 
the loader to load additional libraries into a program). I suppose that wine 
use its own internal mechanisme which is not compatible with the LD_PRELOAD 
one.

So, if you have some ideas ...

__lxstat
__lxstat64
__open
__open64
__opendir2
__xmknod
__lxstat
__lxstat64
__open
__open64
__opendir2
__xmknod
__xstat
__xstat64
_xftw
_xftw64
access
acct
canonicalize_file_name
chdir
chmod
chown
chroot
creat
creat64
dlmopen
dlopen
euidaccess
execl
__xstat
__xstat64
_xftw
_xftw64
access
acct
canonicalize_file_name
chdir
chmod
chown
chroot
creat
creat64
dlmopen
dlopen
euidaccess
execve
execvp
fopen
fopen64
freopen
freopen64
fts_open
ftw
ftw64
get_current_dir_name
getcwd
getwd
getxattr
glob
glob64
glob_pattern_p
lchmod
lchown
lgetxattr
link
listxattr
llistxattr
lremovexattr
lsetxattr
lstat
lstat64
lutimes
mkdir
mkdtemp
mknod
mkfifo
mkstemp
mkstemp64
mktemp
nftw
nftw64
open
open64
opendir
pathconf
readlink
realpath
remove
removexattr
rename
revoke
rmdir
scandir
scandir64
setxattr
stat
stat64
symlink
tempnam
tmpnam
truncate
truncate64
unlink
utime
utimes


From juan.lang at gmail.com  Sun Nov 18 19:03:59 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Sun, 18 Nov 2007 17:03:59 -0800
Subject: Removing Windows and Solaris from the Downloads page
In-Reply-To: <19e31a080711181452n422b74fv341e40023dd832a@mail.gmail.com>
References: <473E8DA1.2090101@open-vote.org> <20071117104622.66250@gmx.net>
	<473ECAC4.7000507@codeweavers.com>
	<19e31a080711181452n422b74fv341e40023dd832a@mail.gmail.com>
Message-ID: <3a768c550711181703v523e5aa6rbcfc9ad34666f564@mail.gmail.com>

Hi Steven,

> The problem is not in the makefiles, a lot of the problem is that we
> are not clear on which dlls would be of use for testing in windows. I
> had to go through hoops to get wininet buildable on Windows because it
> uses unix sockets on Wine rather than winsock. There was quite a
> performance issue when running under Wine with winsock that did not
> show up when using Unix sockets and I felt, and still do that hacking
> around the problem rather than finding where the bottleneck was, is
> not the right answer.

The problem with using winsock rather than UNIX sockets is in the I/O
between a client process and the wineserver.  The extra overhead it
imposes is really unavoidable, AFAICT.  We're doing a context switch
to a separate process that a UNIX socket call (or a winsock call on
Windows) does not require.  While we could speed up such I/O in
certain cases with hacks like the shared memory wineserver, or with a
wineserver kernel module, doing so is very error prone, and we'd lose
a lot of time chasing down errors that's better spent improving our
implementation of Windows dlls.  It may not be the "right" thing to do
in a purely abstract sense, but it's clearly the right thing given our
resources and our priorities.  If wineserver performance is ever the
thing preventing a large number of apps from working correctly, we
might invest more time in it.  Switching wininet to winsock might make
sense then, but not before.

> Mingw/MSVC and friends will always be second class citzen to Wine on Unix.

It's true, for several reasons:
1. We don't use MSVC to develop Wine (nor should we) so we don't catch
errors there as quickly.
2. MinGW's headers aren't in synch with ours, so building with it is
for the very patient.  I'm happy someone does it, but we can't all do
it without losing a lot of time.
3. We don't use MinGW in compile Wine, nor, again, should we.

--Juan


From truiken at gmail.com  Sun Nov 18 19:57:52 2007
From: truiken at gmail.com (James Hawkins)
Date: Sun, 18 Nov 2007 19:57:52 -0600
Subject: msi: Install Entire Feature
In-Reply-To: <fd12b1f40711180616w3155e6au7e6e1fa12d7b7760@mail.gmail.com>
References: <fd12b1f40711180616w3155e6au7e6e1fa12d7b7760@mail.gmail.com>
Message-ID: <22821af30711181757g13b6b23fra351da24a3bd5fa9@mail.gmail.com>

On 11/18/07, Daniel Sim <daniel.ssq89 at gmail.com> wrote:
> "Install entire feature" enabled and implemented.
>

What is this patch for?  Is this to fix a bug?

+    /* FIXME: Why 0x1000? */

Don't add random comments about things you don't understand in the code.

+msi_seltree_install_entire_feature(HWND hwnd, HTREEITEM hItem,
MSIPACKAGE *package, UINT r) {

Please use the style of the rest of the file (bracket below function).

+    for (
+    child = TreeView_GetChild (hwnd, hItem);
+    child;
+    child = TreeView_GetNextSibling (hwnd, child) )

Style changed again...and that's just ugly.

+        msi_seltree_install_entire_feature (hwnd, child, package, r);

Why are you doing this recursively?

-- 
James Hawkins


From winehacker at gmail.com  Sun Nov 18 20:55:20 2007
From: winehacker at gmail.com (Steven Edwards)
Date: Sun, 18 Nov 2007 21:55:20 -0500
Subject: Removing Windows and Solaris from the Downloads page
In-Reply-To: <3a768c550711181703v523e5aa6rbcfc9ad34666f564@mail.gmail.com>
References: <473E8DA1.2090101@open-vote.org> <20071117104622.66250@gmx.net>
	<473ECAC4.7000507@codeweavers.com>
	<19e31a080711181452n422b74fv341e40023dd832a@mail.gmail.com>
	<3a768c550711181703v523e5aa6rbcfc9ad34666f564@mail.gmail.com>
Message-ID: <19e31a080711181855w633b057cw94079a4fd3dd5498@mail.gmail.com>

Hi,

On Nov 18, 2007 8:03 PM, Juan Lang <juan.lang at gmail.com> wrote:
> The problem with using winsock rather than UNIX sockets is in the I/O
> between a client process and the wineserver.  The extra overhead it
> imposes is really unavoidable, AFAICT.  We're doing a context switch
> to a separate process that a UNIX socket call (or a winsock call on
> Windows) does not require.  While we could speed up such I/O in
> certain cases with hacks like the shared memory wineserver, or with a
> wineserver kernel module, doing so is very error prone, and we'd lose
> a lot of time chasing down errors that's better spent improving our
> implementation of Windows dlls.  It may not be the "right" thing to do
> in a purely abstract sense, but it's clearly the right thing given our
> resources and our priorities.  If wineserver performance is ever the
> thing preventing a large number of apps from working correctly, we
> might invest more time in it.  Switching wininet to winsock might make
> sense then, but not before.

I understand that, I'm just not being very pragmatic today.

> > Mingw/MSVC and friends will always be second class citzen to Wine on Unix.
>
> It's true, for several reasons:
> 1. We don't use MSVC to develop Wine (nor should we) so we don't catch
> errors there as quickly.
> 2. MinGW's headers aren't in synch with ours, so building with it is
> for the very patient.  I'm happy someone does it, but we can't all do
> it without losing a lot of time.
> 3. We don't use MinGW in compile Wine, nor, again, should we.

The headers are not an issue because we use the Wine headers and
import libraries for the dlls. The only place there is a problem is
with wine/programs and the regression tests. They use the native
import libraries. I don't really understand Alexandre's reasoning on
this as myself and Dmitry have both sent patches in to correct this
issue and his answer has always been that we should fix mingw w32api.
Wine always tends to break when cross-compiling because of this. If we
always defaulted to using the Wine headers and Import libs there never
would be a problem in that regards.

/rant off. I understand the reasoning behind it breaking and just
needed to vent about it because sometimes going back over old
problems, presents new solutions.

Thanks
-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From damjan.jov at gmail.com  Sun Nov 18 23:45:34 2007
From: damjan.jov at gmail.com (Damjan Jovanovic)
Date: Mon, 19 Nov 2007 07:45:34 +0200
Subject: Wine and LD_PRELOAD
In-Reply-To: <200711182348.31301.lionel.tricon@free.fr>
References: <200711181713.20173.lionel.tricon@free.fr>
	<200711182014.43381.stefandoesinger@gmx.at>
	<200711182348.31301.lionel.tricon@free.fr>
Message-ID: <9e89675b0711182145m7c9d8385sd3aadc139e0230a2@mail.gmail.com>

On Nov 19, 2007 12:48 AM, Lionel Tricon <lionel.tricon at free.fr> wrote:
> On Sunday 18 November 2007 20:14:41 Stefan D?singer wrote:
> > I think wine dlopen()s many libraries instead of linking dynamically to
> > them. This makes the build environment more independent of the runtime
> > environment, and we can provide binary builds with all features enabled,
> > and they will still run if the user's system does not have all the libs.
>
> Hi Stefan,
> Thanks for your reply.
>
> > We had an issue like that with libGL.so a long time back, and it was fixed
> > by changing some parameter to dlopen. Does anyone remember what that was,
> > and if this can be done for the other libraries too?
> >
> > Lionel, can you provide us with a list of libraries where LD_PRELOAD does
> > not work correctly? This should help to track down the bad ldopen calls.
>
> In fact, we overload a lot of common system call from the standard libc. We
> have slightly modified the fackechroot library and we need to trap almost all
> system calls linked to the filesystem. To give you an idea, all the following
> system calls are reimplemented so that we can put the software into a jail
> (in most of them, we only change the local path before calling the real one).
>
> As far as i understand the problem (and with the help of strace), it appears
> that the wine application ignore the LD_PRELOAD env var (LD_PRELOAD instructs
> the loader to load additional libraries into a program). I suppose that wine
> use its own internal mechanisme which is not compatible with the LD_PRELOAD
> one.

LD_PRELOAD will just affect the wine loader, I don't think wineserver
is affected. Try this instead:

wineserver -k
export LD_PRELOAD=...
wine ...

Also, IIRC, wine already looks for libraries in ../lib/wine relative
to the directory which contains the wine executable. If I'm right,
then there is no need to deprefix it further with LD_PRELOAD hacks.

Damjan


From marcus at jet.franken.de  Mon Nov 19 00:53:06 2007
From: marcus at jet.franken.de (Marcus Meissner)
Date: Mon, 19 Nov 2007 07:53:06 +0100
Subject: Unimplemented function KERNEL32.dll.FindFirstVolumeW
In-Reply-To: <2093257654@web.de>
References: <2093257654@web.de>
Message-ID: <20071119065306.GB18392@galeere>

On Sun, Nov 18, 2007 at 10:14:17PM +0100, devzero at web.de wrote:
> Hello Hans, 
> 
> thanks for that info.
> 
> latest version i tried here is 
> 
> wine-0.9.49-11.3.i586.rpm    
> wine-snapshot-0.9.49.20071118-11.1.i586.rpm    
> 
> but same error.
> maybe that`s not recent enough ?
> 
> do i need to enable special option or add some files ?
> 
> sorry, i`m quite new to wine and maybe i should read deeper into the docs instead of posting :)

It is not yet committed to the mainline repository. Once it
is it will show up in "wine-snapshot" of the openSUSE buildservice
of this day.

Ciao, Marcus 


From ead1234 at hotmail.com  Mon Nov 19 01:13:49 2007
From: ead1234 at hotmail.com (EA Durbin)
Date: Mon, 19 Nov 2007 01:13:49 -0600
Subject: recent cedega contributions to wine
Message-ID: <BAY128-W296B12DAECE77FBC0128F2AB7E0@phx.gbl>


http://www.cedega.com./devreports/
 
The latest Cedega dev report states it plans to include wine's msi implementation back into it's code base and they have been contributing back to wine.
 
"TransGaming's developers have been contributing some changes back to Wine as well, including in several networking and debugging libraries. "
 
Just out of curiousity, which patches are these?
 
_________________________________________________________________
Your smile counts. The more smiles you share, the more we donate.? Join in.
www.windowslive.com/smile?ocid=TXT_TAGLM_Wave2_oprsmilewlhmtagline
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071119/759879e1/attachment.htm 

From stefandoesinger at gmx.at  Mon Nov 19 01:37:23 2007
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Mon, 19 Nov 2007 08:37:23 +0100
Subject: recent cedega contributions to wine
In-Reply-To: <BAY128-W296B12DAECE77FBC0128F2AB7E0@phx.gbl>
References: <BAY128-W296B12DAECE77FBC0128F2AB7E0@phx.gbl>
Message-ID: <200711190837.29196.stefandoesinger@gmx.at>

Am Montag, 19. November 2007 08:13:49 schrieb EA Durbin:
> http://www.cedega.com./devreports/
>
> The latest Cedega dev report states it plans to include wine's msi
> implementation back into it's code base and they have been contributing
> back to wine.
>
> "TransGaming's developers have been contributing some changes back to Wine
> as well, including in several networking and debugging libraries. "
>
> Just out of curiousity, which patches are these?
A wine-patches archive search finds these:

http://article.gmane.org/gmane.comp.emulators.wine.patches/32979
http://article.gmane.org/gmane.comp.emulators.wine.patches/32981
http://article.gmane.org/gmane.comp.emulators.wine.patches/32982

http://article.gmane.org/gmane.comp.emulators.wine.patches/39016
http://article.gmane.org/gmane.comp.emulators.wine.patches/39017
http://article.gmane.org/gmane.comp.emulators.wine.patches/33632
http://article.gmane.org/gmane.comp.emulators.wine.patches/33633

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071119/e443cd13/attachment.pgp 

From hans at it.vu.nl  Mon Nov 19 04:40:59 2007
From: hans at it.vu.nl (Hans Leidekker)
Date: Mon, 19 Nov 2007 11:40:59 +0100
Subject: Removing Windows and Solaris from the Downloads page
In-Reply-To: <19e31a080711181855w633b057cw94079a4fd3dd5498@mail.gmail.com>
References: <473E8DA1.2090101@open-vote.org>
	<3a768c550711181703v523e5aa6rbcfc9ad34666f564@mail.gmail.com>
	<19e31a080711181855w633b057cw94079a4fd3dd5498@mail.gmail.com>
Message-ID: <200711191140.59761.hans@it.vu.nl>

On Monday 19 November 2007 03:55:20 Steven Edwards wrote:

> The headers are not an issue because we use the Wine headers and
> import libraries for the dlls. The only place there is a problem is
> with wine/programs and the regression tests. They use the native
> import libraries. I don't really understand Alexandre's reasoning on
> this as myself and Dmitry have both sent patches in to correct this
> issue and his answer has always been that we should fix mingw w32api.
> Wine always tends to break when cross-compiling because of this. If we
> always defaulted to using the Wine headers and Import libs there never
> would be a problem in that regards.

I recall Alexandre saying that he wants the exposure to alternative headers
and import libraries because it brings up bugs in Wine. He also suggested
that the wininet/winsock issue could be solved by making wininet build
against either Windows sockets or Unix sockets.

Here's a historical thread on this issue:

 http://www.kernel-traffic.org/wine/wn20040416_219.html#5

 -Hans


From julliard at winehq.org  Mon Nov 19 05:59:04 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 19 Nov 2007 12:59:04 +0100
Subject: Remove four useless checks in dlls/gdi32/enhmetafile.c (RESEND)
In-Reply-To: <Pine.LNX.4.64.0711170100300.8530@acrux.dbai.tuwien.ac.at>
	(Gerald Pfeifer's message of "Sat, 17 Nov 2007 01:01:46 +0100 (CET)")
References: <Pine.LNX.4.64.0711170100300.8530@acrux.dbai.tuwien.ac.at>
Message-ID: <87abpasayf.fsf@wine.dyndns.org>

Gerald Pfeifer <gerald at pfeifer.com> writes:

> One of the really uncontested ones, I think. ;-)
>
> ---------- Forwarded message ----------
> From: Gerald Pfeifer <gerald at pfeifer.com>
> To:  <wine-patches at winehq.org>
> Date: Thu, 1 Nov 2007 16:10:03 +0100 (CET)
> Subject: Remove four useless checks in dlls/gdi32/enhmetafile.c
>
> The members of EMRCREATEDIBPATTERNBRUSHPT are of type DWORD, so
> comparing them for >= 0 is a noop which always evaluates to true.
>
> Gerald
>
> ChangeLog:
> Remove four unnecessary comparisions of DWORD variables for >= 0.

Validating the record is not unnecessary, it just needs to be done
correctly by checking for wraparounds etc.

-- 
Alexandre Julliard
julliard at winehq.org


From twickline at gmail.com  Mon Nov 19 06:10:46 2007
From: twickline at gmail.com (Tom Wickline)
Date: Mon, 19 Nov 2007 07:10:46 -0500
Subject: recent cedega contributions to wine
In-Reply-To: <200711190837.29196.stefandoesinger@gmx.at>
References: <BAY128-W296B12DAECE77FBC0128F2AB7E0@phx.gbl>
	<200711190837.29196.stefandoesinger@gmx.at>
Message-ID: <53e3a9930711190410j4ae27b78m81f09d0c93f31649@mail.gmail.com>

On Nov 19, 2007 2:37 AM, Stefan D?singer <stefandoesinger at gmx.at> wrote:
> Am Montag, 19. November 2007 08:13:49 schrieb EA Durbin:
> > http://www.cedega.com./devreports/
> >
> > The latest Cedega dev report states it plans to include wine's msi
> > implementation back into it's code base and they have been contributing
> > back to wine.
> >
> > "TransGaming's developers have been contributing some changes back to Wine
> > as well, including in several networking and debugging libraries. "
> >
> > Just out of curiousity, which patches are these?
> A wine-patches archive search finds these:
>
> http://article.gmane.org/gmane.comp.emulators.wine.patches/32979
> http://article.gmane.org/gmane.comp.emulators.wine.patches/32981
> http://article.gmane.org/gmane.comp.emulators.wine.patches/32982
>
> http://article.gmane.org/gmane.comp.emulators.wine.patches/39016
> http://article.gmane.org/gmane.comp.emulators.wine.patches/39017
> http://article.gmane.org/gmane.comp.emulators.wine.patches/33632
> http://article.gmane.org/gmane.comp.emulators.wine.patches/33633
>
>

You can also grep the wine change log to see what actually made it in.


From twickline at gmail.com  Mon Nov 19 07:14:11 2007
From: twickline at gmail.com (Tom Wickline)
Date: Mon, 19 Nov 2007 08:14:11 -0500
Subject: recent cedega contributions to wine
In-Reply-To: <53e3a9930711190410j4ae27b78m81f09d0c93f31649@mail.gmail.com>
References: <BAY128-W296B12DAECE77FBC0128F2AB7E0@phx.gbl>
	<200711190837.29196.stefandoesinger@gmx.at>
	<53e3a9930711190410j4ae27b78m81f09d0c93f31649@mail.gmail.com>
Message-ID: <53e3a9930711190514g77bd84dg8680627ca8f725f9@mail.gmail.com>

WhooHoo five patches made it into the Wine tree in three YEARS!

Here is a list of patches over the past five years.. But five patches
in three years is grounds for a announcement?

:D

2007-07-11  Mark Adams <mark at transgaming.com>

	* dlls/iphlpapi/iphlpapi_main.c, dlls/iphlpapi/ipstats.c:
	iphlpapi: Fix byte ordering of Linux ports.

2007-07-10  Mark Adams <mark at transgaming.com>

	* configure, configure.ac, dlls/iphlpapi/iphlpapi_main.c,
	  dlls/iphlpapi/ipstats.c, dlls/iphlpapi/ipstats.h,
	  include/config.h.in:
	iphlpapi: Add support for GetTcpTable on Mac OS X.

2007-01-25  Mark Adams <mark at transgaming.com>

	* dlls/iphlpapi/ipstats.c:
	iphlpapi: Support for non-linux platforms, including Mac OS X.
	- Add error messages when unimplemented functions are called on
	non-linux platforms.
	- Implement retrieving the interface list on MacOS X (and other
	platforms that use NET_RT_DUMP).

	* dlls/iphlpapi/ifenum.c:
	iphlpapi: Filter out no-ip addresses when building ip address table.

	* dlls/iphlpapi/ifenum.c:
	iphlpapi: Clarify interface counting.

Before Wine 0.9.0 release -------->

2004-09-16  Alexandre Julliard  <julliard at winehq.com>

	* fonts/.cvsignore, fonts/Makefile.in, fonts/wine_marlett.sfd:
	TransGaming
	Add a Marlett replacement font.

2004-04-28  Alexandre Julliard  <julliard at winehq.com>

* dlls/winmm/winealsa/audio.c: Ove Kaaven <ovek at transgaming.com>
	Fixed a couple of bugs.

2004-04-19  Alexandre Julliard  <julliard at winehq.com>

* dlls/winmm/winealsa/audio.c: Ove Kaaven <ovek at transgaming.com>
	Added detection of 48kHz and 96kHz support. Fixed a thinko, and some
	misleading indentation.

* dlls/winmm/winealsa/audio.c: Ove Kaaven <ovek at transgaming.com>
	Code and concepts merged in from wineoss in order to get the
	non-dsound wave output performance in winealsa to an acceptable
	level. It's still possible to do better than the current code, but
	this should do for now.

2004-02-12  Alexandre Julliard  <julliard at winehq.com>

* dlls/kernel/sync.c: David Hammerton <david at transgaming.com>
	Mike McCormack <mike at codeweavers.com>
	Completed PeekNamedPipe implementation.
* dlls/rpcrt4/rpc_server.c: Ove Kaaven <ovek at transgaming.com>
	Avoid freeing request packet too early if an exception occurs.

	* dlls/rpcrt4/rpc_binding.c: Ove Kaaven <ovek at transgaming.com>
	Properly handle destroying the first connection in the connection
	cache.

2003-12-08  Alexandre Julliard  <julliard at winehq.com>

* dlls/msacm/winemp3/common.c, dlls/msacm/winemp3/interface.c:
	Ove Kaaven <ovek at transgaming.com>
	Remove an instance of exit(). We should return failure, not kill the
	thread, when a bad stream is encountered.

2003-09-11  Alexandre Julliard  <julliard at winehq.com>

* documentation/faq.sgml: Francois Gouget <fgouget at free.fr>
	Revert some word-splits to their normal form, e.g. InstallShield.
	Fix case of TransGaming in two places.
	Fix the URL to dosfs.

2003-08-05  Alexandre Julliard  <julliard at winehq.com>

* dlls/wininet/http.c: David Hammerton <david at transgaming.com>
	Added support for http-POST (well, any kind of http request that sends
	data in the lpOptional field).

2003-07-08  Alexandre Julliard  <julliard at winehq.com>

* graphics/x11drv/xfont.c: Ove Kaaven <ovek at transgaming.com>
	Fixed a memory allocation/corruption bug when growing the font cache.

2003-06-20  Alexandre Julliard  <julliard at winehq.com>

	* configure, configure.ac, dlls/wininet/Makefile.in,
	  dlls/wininet/cookie.c, dlls/wininet/http.c, dlls/wininet/internet.c,
	  dlls/wininet/internet.h, dlls/wininet/netconnection.c,
	  include/config.h.in:
	David Hammerton <david at transgaming.com>
	- implemented support for https protocol
	- fixes to the http protocol

2003-06-04  Alexandre Julliard  <julliard at winehq.com>

	* dlls/ole32/compobj.c, dlls/ole32/compobj_private.h,
	  dlls/ole32/errorinfo.c:
	Ove Kaaven <ovek at transgaming.com>
	Preliminary support for COM apartments.

2003-05-22  Alexandre Julliard  <julliard at winehq.com>

* dlls/ole32/dcom.h, dlls/ole32/dcom.idl:
	Ove Kaaven <ovek at transgaming.com>
	DCOM IDL file based on the DCOM specification.

	* dlls/rpcrt4/ndr_midl.c, dlls/rpcrt4/rpc_message.c,
	  dlls/rpcrt4/rpc_misc.h, dlls/rpcrt4/rpc_server.c:
	Ove Kaaven <ovek at transgaming.com>
	Initial support for RPC call failures, by catching RPC server
	exceptions and returning simple failure packets, and throwing
	exceptions on the client side when unmarshalling the failure packet.

2003-05-21  Alexandre Julliard  <julliard at winehq.com>

* dlls/rpcrt4/rpc_message.c, dlls/rpcrt4/rpc_server.c:
	Ove Kaaven <ovek at transgaming.com>
	For RPC servers, don't deallocate the RPC request packet before the
	RPC reply packet is sent, in case marshalling the reply needs any of
	the request data.

	* dlls/rpcrt4/ndr_midl.c, dlls/rpcrt4/rpcrt4.spec:
	Ove Kaaven <ovek at transgaming.com>
	Added semi-stub for NdrProxyErrorHandler.
	Fixed a case of potential stack trashing.

2003-05-20  Alexandre Julliard  <julliard at winehq.com>

* dlls/oleaut32/oleaut.c: Ove Kaaven <ovek at transgaming.com>
	Handle requests for CLSID_PSDispatch.

	* dlls/rpcrt4/cproxy.c, dlls/rpcrt4/cpsf.c, dlls/rpcrt4/cpsf.h,
	  dlls/rpcrt4/cstub.c:
	Ove Kaaven <ovek at transgaming.com>
	Fixed NdrDllRegisterProxy so it registers the key names that ole32
	expects. Better debug traces (include name of interface).

* dlls/rpcrt4/ndr_marshall.c, dlls/rpcrt4/rpcrt4.spec:
	Ove Kaaven <ovek at transgaming.com>
	Implemented "dereference" pointer flag.
	Added NdrClearOutParameters stub.

	* dlls/rpcrt4/ndr_ole.c: Ove Kaaven <ovek at transgaming.com>
	Portability fix. Better debug messages (display IID of interface to
	marshal).

2003-04-26  Alexandre Julliard  <julliard at winehq.com>

* dlls/oleaut32/Makefile.in, dlls/oleaut32/oaidl_p.c,
	  dlls/oleaut32/oleaut32.spec, dlls/oleaut32/usrmarshal.c:
	Ove Kaaven <ovek at transgaming.com>
	Preliminary implementation of proper IDispatch marshalling.

2003-04-19  Alexandre Julliard  <julliard at winehq.com>

* include/rpc.h: Ove Kaaven <ovek at transgaming.com>
	Dummy RPC exception macros.

	* dlls/rpcrt4/rpc_binding.c, dlls/rpcrt4/rpc_binding.h,
	  dlls/rpcrt4/rpc_server.c:
	Ove Kaaven <ovek at transgaming.com>
	Implemented simple caching of client connections.

 dlls/rpcrt4/rpc_server.c: Ove Kaaven <ovek at transgaming.com>
	Fixed a race condition on RPC worker thread creation, and a typo.

	* dlls/rpcrt4/cstub.c: Ove Kaaven <ovek at transgaming.com>
	Added missing AddRef.

2003-03-17  Alexandre Julliard  <julliard at winehq.com>

	* dlls/dsound/mixer.c: Ove Kaaven <ovek at transgaming.com>
	Somewhat more reliable dsound position notifications.

2003-02-28  Alexandre Julliard  <julliard at winehq.com>

* server/process.c, server/thread.c, server/thread.h:
	Peter Hunnisett <peter at transgaming.com>
	Suspended threads should not acquire synchronization objects.

2003-02-19  Alexandre Julliard  <julliard at winehq.com>

* dlls/rpcrt4/rpc_binding.c, dlls/rpcrt4/rpc_binding.h,
	  dlls/rpcrt4/rpc_message.c, dlls/rpcrt4/rpc_server.c,
	  dlls/rpcrt4/rpc_server.h:
	Ove Kaaven <ovek at transgaming.com>
	For better concurrency, separate the connections from the bindings.

* include/rpcproxy.h: Ove Kaaven <ovek at transgaming.com>
	"Implemented" IID_BS_* macros.

2003-02-17  Alexandre Julliard  <julliard at winehq.com>

* dlls/rpcrt4/ndr_marshall.c: Ove Kaaven <ovek at transgaming.com>
	NDR marshalling fixes.

	* dlls/rpcrt4/cpsf.c: Ove Kaaven <ovek at transgaming.com>
	Make NdrDllRegisterProxy use the interface stub header instead of the
	interface proxy header to avoid stubless proxy ambiguities.

2003-02-11  Alexandre Julliard  <julliard at winehq.com>

* dlls/dinput/dinput_main.c, dlls/dinput/dinput_private.h,
	  dlls/dinput/keyboard/main.c:
	Ove Kaaven <ovek at transgaming.com>
	Only install the keyboard hook on device creation.

2003-02-01  Alexandre Julliard  <julliard at winehq.com>

* dlls/rpcrt4/ndr_marshall.c, dlls/rpcrt4/ndr_misc.h,
	  dlls/rpcrt4/ndr_ole.c, dlls/rpcrt4/rpcrt4.spec:
	Ove Kaaven <ovek at transgaming.com>
	Implemented marshalling of pointers, simple and complex structures,
	conformant and complex arrays, and user-marshalled types.
	Improved marshalling of conformant strings and interface pointers a
	bit.

2003-01-31  Alexandre Julliard  <julliard at winehq.com>

* dlls/rpcrt4/ndr_midl.c: Ove Kaaven <ovek at transgaming.com>
	ReuseBuffer should be FALSE for RPC clients.
	Some cleanups and elimination of some duplicate code.

	* dlls/rpcrt4/rpc_binding.c: Ove Kaaven <ovek at transgaming.com>
	Fixed a bug in CompleteBindingA/W.

	* dlls/rpcrt4/rpcrt4.spec, dlls/rpcrt4/rpcrt4_main.c:
	Ove Kaaven <ovek at transgaming.com>
	Implemented RpcRaiseException.

	* include/rpcdce.h, include/rpcndr.h, include/wine/rpcfc.h:
	Ove Kaaven <ovek at transgaming.com>
	Some RPC definitions.

2003-01-09  Alexandre Julliard  <julliard at winehq.com>

* tools/widl/header.c, tools/widl/widl.c:
	Ove Kaaven <ovek at transgaming.com>
	Declare user-marshaller prototypes for types declared with [wire_marshal].
	Define __WIDL__ preprocessor macro, so Wine-specific IDL can be enclosed
	in #ifdef __WIDL__. Fixed a file output bug.

2003-01-05  Alexandre Julliard  <julliard at winehq.com>

* include/Makefile.in, include/oaidl.h, include/oaidl.idl,
	  include/wine/obj_errorinfo.h, include/wine/obj_oleaut.h:
	Ove Kaaven <ovek at transgaming.com>
	Wrote a new oaidl.idl to replace include/wine/obj_oleaut.h and
	include/wine/obj_errorinfo.h.

* include/docobj.h, include/ocidl.h: Ove Kaaven <ovek at transgaming.com>
	Include oaidl.h instead of wine/obj_oleaut.h.

	* include/oleidl.h: Ove Kaaven <ovek at transgaming.com>
	Temporarily include objbase.h from oleidl.h.
	Removed inclusion of obj_errorinfo.h.

	* dlls/oleaut32/variant.c: Ove Kaaven <ovek at transgaming.com>
	Avoid direct ICOM_CALL usage.

	* include/oleauto.h, include/wine/obj_oleaut.h, ole/dxguid.c:
	Ove Kaaven <ovek at transgaming.com>
	Moved a couple of definitions from include/wine/obj_oleaut.h to
	include/oleauto.h.

2002-12-23  Alexandre Julliard  <julliard at winehq.com>

* include/Makefile.in, include/objbase.h, include/unknwn.h,
	  include/unknwn.idl, include/wine/obj_base.h:
	Ove Kaaven <ovek at transgaming.com>
	Merge the rest of include/wine/obj_base.h into include/objbase.h.

* include/dinput.h, include/oaidl.h: Ove Kaaven <ovek at transgaming.com>
	Where ICOM macros are needed, include objbase.h.

2002-12-19  Alexandre Julliard  <julliard at winehq.com>

* include/Makefile.in, include/objidl.h, include/objidl.idl,
	  include/wine/obj_channel.h, include/wine/obj_clientserver.h,
	  include/wine/obj_dataobject.h, include/wine/obj_marshal.h,
	  include/wine/obj_misc.h, include/wine/obj_moniker.h,
	  include/wine/obj_propertystorage.h, include/wine/obj_storage.h:
	Ove Kaaven <ovek at transgaming.com>
	Wrote a new objidl.idl to replace a number of include/wine/obj_*.h
	files.

* include/wine/obj_misc.h, include/wine/obj_storage.h,
	  include/wtypes.h, include/wtypes.idl:
	Ove Kaaven <ovek at transgaming.com>
	Moved a couple of types from include/wine/obj_*.h to
	include/wtypes.idl.

* dlls/ole32/antimoniker.c, dlls/ole32/compositemoniker.c,
	  dlls/ole32/filemoniker.c, dlls/ole32/itemmoniker.c,
	  dlls/ole32/moniker.h, include/wine/obj_moniker.h:
	Ove Kaaven <ovek at transgaming.com>
	Moved some definitions from include/wine/obj_moniker.h to
	dlls/ole32/moniker.h.

2002-12-18  Alexandre Julliard  <julliard at winehq.com>

* include/wtypes.h, include/wtypes.idl:
	Ove Kaaven <ovek at transgaming.com>
	Unquoted some 16-bit types, so the IDL compiler can use them.

 include/objbase.h, include/wine/obj_clientserver.h,
	  include/wine/obj_dataobject.h, include/wine/obj_marshal.h,
	  include/wine/obj_misc.h, include/wine/obj_moniker.h,
	  include/wine/obj_storage.h:
	Ove Kaaven <ovek at transgaming.com>
	Moved COM API prototypes to objbase.h, from wine/obj_*.h.

	* dlls/ole32/ole2.c, dlls/shell32/dataobject.c,
	  dlls/shell32/shell32_main.h, ole/uuid.c:
	Ove Kaaven <ovek at transgaming.com>
	Removed a few more inclusions of deprecated wine/obj_*.h headers.

* include/rpc.h, include/rpcdce.h: Ove Kaaven <ovek at transgaming.com>
	Moved UUID type to rpcdce.h, as in the MS RPC headers.
	Removed redundant prototype.

2002-12-16  Alexandre Julliard  <julliard at winehq.com>

	* include/Makefile.in, include/unknwn.h, include/unknwn.idl,
	  include/wine/obj_base.h:
	Ove Kaaven <ovek at transgaming.com>
	Wrote a Wine-compatible unknwn.idl, moving the IUnknown definition
	from wine/obj_base.h to the generated unknwn.h.

2002-12-15  Alexandre Julliard  <julliard at winehq.com>

	* include/Makefile.in, tools/widl/header.c, tools/widl/widl.c,
	  tools/widl/widl.h:
	Ove Kaaven <ovek at transgaming.com>
	Output raw ICOM-less C/C++ interface definitions by default. Added new
	-b and -B command-line options for compatibility with ICOM macros.

* tools/widl/header.c, tools/widl/parser.l, tools/widl/parser.y,
	  tools/widl/widltypes.h:
	Ove Kaaven <ovek at transgaming.com>
	Include guiddef.h in widltypes.h.

2002-12-06  Alexandre Julliard  <julliard at winehq.com>

	* include/objbase.h, include/wine/obj_base.h:
	Ove Kaaven <ovek at transgaming.com>
	Moved COM API prototypes in include/wine/obj_base.h to
	include/objbase.h.

2002-12-05  Alexandre Julliard  <julliard at winehq.com>

	* include/objbase.h: Added rpc.h include to fix tests compilation.

	* dlls/comctl32/imagelist.c, dlls/ddraw/d3dcommon.c,
	  dlls/ddraw/d3ddevice/main.c, dlls/ddraw/d3ddevice/mesa.c,
	  dlls/ddraw/d3dexecutebuffer.c, dlls/ddraw/d3dlight.c,
	  dlls/ddraw/d3dmaterial.c, dlls/ddraw/d3dtexture.c,
	  dlls/ddraw/d3dvertexbuffer.c, dlls/ddraw/d3dviewport.c,
	  dlls/ddraw/mesa.c, dlls/dplayx/dpclassfactory.c,
	  dlls/ole32/antimoniker.c, dlls/ole32/bindctx.c,
	  dlls/ole32/compobj.c, dlls/ole32/compositemoniker.c,
	  dlls/ole32/datacache.c, dlls/ole32/errorinfo.c,
	  dlls/ole32/filemoniker.c, dlls/ole32/ftmarshal.c, dlls/ole32/ifs.c,
	  dlls/ole32/itemmoniker.c, dlls/ole32/moniker.c,
	  dlls/ole32/ole32_main.c, dlls/ole32/ole32_main.h,
	  dlls/ole32/oleobj.c, dlls/ole32/stg_bigblockfile.c,
	  dlls/ole32/storage.c, dlls/ole32/storage32.h,
	  dlls/oleaut32/connpt.c, dlls/oleaut32/dispatch.c,
	  dlls/oleaut32/olefont.c, dlls/oleaut32/safearray.c,
	  dlls/oleaut32/tmarshal.c, dlls/oleaut32/typelib.c,
	  dlls/rpcrt4/cproxy.c, dlls/rpcrt4/cpsf.c, dlls/rpcrt4/cstub.c,
	  dlls/rpcrt4/ndr_marshall.c, dlls/rpcrt4/ndr_midl.c,
	  dlls/rpcrt4/ndr_ole.c, dlls/shdocvw/classinfo.c,
	  dlls/shdocvw/shdocvw.h, dlls/shell32/dragdrophelper.c,
	  dlls/shell32/folders.c, dlls/shell32/shellfolder.h,
	  dlls/shell32/shellord.c, dlls/shell32/shfldr_desktop.c,
	  dlls/shell32/shfldr_fs.c, dlls/shell32/shfldr_mycomp.c,
	  dlls/shell32/shlfolder.c, dlls/shell32/shlmenu.c,
	  dlls/shell32/shv_bg_cmenu.c, dlls/shell32/shv_item_cmenu.c,
	  dlls/shlwapi/clist.c, dlls/shlwapi/istream.c,
	  dlls/shlwapi/ordinal.c, dlls/shlwapi/regstream.c,
	  dlls/shlwapi/thread.c, include/dplay.h, include/oaidl.h,
	  include/objbase.h, include/objidl.h, include/ocidl.h, include/ole.h,
	  include/ole2.h, include/oleauto.h, include/olectl.h,
	  include/oledlg.h, include/oleidl.h, include/servprov.h,
	  include/shlguid.h, include/shlobj.h, include/unknwn.h,
	  include/urlmon.h, include/wine/obj_base.h, include/wine/obj_misc.h,
	  include/wine/obj_serviceprovider.h:
	Ove Kaaven <ovek at transgaming.com>
	Make sure that no files except unknwn.h include wine/obj_base.h
	directly.

2002-12-03  Alexandre Julliard  <julliard at winehq.com>

* dlls/oleaut32/variant.c, include/wine/obj_oleaut.h,
	  include/wtypes.h, include/wtypes.idl:
	Ove Kaaven <ovek at transgaming.com>
	Added more types to wtypes.idl.

* tools/widl/header.c, tools/widl/header.h, tools/widl/parser.l,
	  tools/widl/parser.y, tools/widl/proxy.c, tools/widl/widl.c,
	  tools/widl/widl.h, tools/widl/widltypes.h:
	Ove Kaaven <ovek at transgaming.com>
	Parse the NOT operator, the [idempotent] attribute, and the handle_t
	and error_status_t types. Improved some parsing rules to get rid of
	the LINK_LAST and LINK_SAFE macros. Enclose generated .h file within
	an extern "C" (for C++). Output function prototypes for regular RPC
	interfaces.  Fixed a couple of bugs.

2002-12-02  Alexandre Julliard  <julliard at winehq.com>

 configure, configure.ac, dlls/rpcrt4/Makefile.in,
	  dlls/rpcrt4/rpc_binding.h, dlls/rpcrt4/rpc_epmap.c,
	  dlls/rpcrt4/rpcrt4.spec, dlls/rpcrt4/rpcrt4_main.c,
	  dlls/rpcrt4/rpcss_np_client.c, dlls/rpcrt4/rpcss_np_client.h,
	  include/rpcdce.h, include/rpcdcep.h, include/rpcndr.h,
	  include/winbase.h, include/wine/rpcss_shared.h,
	  programs/Makefile.in, programs/rpcss/.cvsignore,
	  programs/rpcss/Makefile.in, programs/rpcss/epmap_server.c,
	  programs/rpcss/np_server.c, programs/rpcss/rpcss.h,
	  programs/rpcss/rpcss_main.c:
	Greg Turner <gmturner007 at ameritech.net>,
	Ove Kaaven <ovek at transgaming.com>
	- preliminary implementation of endpoint-mapping via a new on-demand
	  server-ish process
	- more header fixups
	- (re)implement RpcEpRegisterA, RpcEpUnregister, and
	  RpcEpResolveBinding using the new rpcss functionality
	- update the todo list in rpcrt4_main.c a bit
	- many beautifications and touch-ups
	- command-line configurable timeout
	- micro-client imbedded in np_server.c

* include/wingdi.h: Ove Kaaven <ovek at transgaming.com>
	Protect PALETTEENTRY and LOGPALETTE with #ifndefs.

2002-11-30  Alexandre Julliard  <julliard at winehq.com>

* tools/widl/header.c, tools/widl/header.h, tools/widl/parser.h,
	  tools/widl/parser.l, tools/widl/parser.y, tools/widl/widltypes.h:
	Ove Kaaven <ovek at transgaming.com>
	Handle encapsulated unions in a cleaner (and less buggy) way. Emit the
	names "DUMMYUNIONNAME" and "DUMMYSTRUCTNAME" for anonymous unions and
	structs. Support const and extern definitions. Retain tokens (and
	whether numbers are hex or not) used for computing constant
	expressions, so that the full expression can be written to the header
	file instead of the computed integer result of the expression. Parse
	the sizeof() operator.  Compute and remember constant definitions and
	enum values so they can be used in expressions. Improved identifier
	lookup speed. Fixed some bugs.

	* include/wtypes.idl: Ove Kaaven <ovek at transgaming.com>
	Added missing union names for some encapsulated unions.

2002-11-21  Alexandre Julliard  <julliard at winehq.com>

* tools/widl/header.c, tools/widl/parser.l, tools/widl/parser.y,
	  tools/widl/proxy.c, tools/widl/widl.c, tools/widl/widl.h:
	Ove Kaaven <ovek at transgaming.com>
	Added "generate headers only" command-line option. Implemented imports
	from inside interface definitions. Fixed a few problems with
	generating header files for COM interfaces.


From ead1234 at hotmail.com  Mon Nov 19 07:36:06 2007
From: ead1234 at hotmail.com (EA Durbin)
Date: Mon, 19 Nov 2007 07:36:06 -0600
Subject: recent cedega contributions to wine
In-Reply-To: <53e3a9930711190514g77bd84dg8680627ca8f725f9@mail.gmail.com>
References: <BAY128-W296B12DAECE77FBC0128F2AB7E0@phx.gbl>
	<200711190837.29196.stefandoesinger@gmx.at>
	<53e3a9930711190410j4ae27b78m81f09d0c93f31649@mail.gmail.com> 
	<53e3a9930711190514g77bd84dg8680627ca8f725f9@mail.gmail.com>
Message-ID: <BAY128-W237F6BAEBEF8F82F6083FCAB7E0@phx.gbl>


> Date: Mon, 19 Nov 2007 08:14:11 -0500> From: twickline at gmail.com> To: stefandoesinger at gmx.at> Subject: Re: recent cedega contributions to wine> CC: wine-devel at winehq.org> > WhooHoo five patches made it into the Wine tree in three YEARS!> > Here is a list of patches over the past five years.. But five patches> in three years is grounds for a announcement?> > :D> 
The announcement on their dev report comes after 3 months of ignoring user's support tickets, it makes it look like there's been a sudden surge of collaboration with wine and "several" patches have been put back into the wine tree. 
_________________________________________________________________
Connect and share in new ways with Windows Live.
http://www.windowslive.com/connect.html?ocid=TXT_TAGLM_Wave2_newways_112007
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071119/89c16cd8/attachment.htm 

From dank at kegel.com  Mon Nov 19 08:01:25 2007
From: dank at kegel.com (Dan Kegel)
Date: Mon, 19 Nov 2007 06:01:25 -0800
Subject: imagelist test exception?
Message-ID: <a71bd89a0711190601p47f9cb60p95def9a04015f1d4@mail.gmail.com>

comctl32/tests/imagelist.c seems to throw an exception
during GetDIBits(), but for some reason, the test continues
and succeeds (except in Valgrind, which is why I noticed).
Do other folks also see a seh exception in the +seh log
on this test?

I narrowed the test case down a bit (see patch).
Can anyone clue me in on what's going on here?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: imagelist-test0.patch
Type: text/x-patch
Size: 1951 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071119/37b9d4c9/attachment.bin 

From twickline at gmail.com  Mon Nov 19 08:06:12 2007
From: twickline at gmail.com (Tom Wickline)
Date: Mon, 19 Nov 2007 09:06:12 -0500
Subject: recent cedega contributions to wine
In-Reply-To: <BAY128-W237F6BAEBEF8F82F6083FCAB7E0@phx.gbl>
References: <BAY128-W296B12DAECE77FBC0128F2AB7E0@phx.gbl>
	<200711190837.29196.stefandoesinger@gmx.at>
	<53e3a9930711190410j4ae27b78m81f09d0c93f31649@mail.gmail.com>
	<53e3a9930711190514g77bd84dg8680627ca8f725f9@mail.gmail.com>
	<BAY128-W237F6BAEBEF8F82F6083FCAB7E0@phx.gbl>
Message-ID: <53e3a9930711190606g39dfdba7v7946403b48b0647@mail.gmail.com>

On Nov 19, 2007 8:36 AM, EA Durbin <ead1234 at hotmail.com> wrote:
>
>
>
> > Date: Mon, 19 Nov 2007 08:14:11 -0500
> > From: twickline at gmail.com
> > To: stefandoesinger at gmx.at
> > Subject: Re: recent cedega contributions to wine
> > CC: wine-devel at winehq.org
>
> >
> > WhooHoo five patches made it into the Wine tree in three YEARS!
> >
> > Here is a list of patches over the past five years.. But five patches
> > in three years is grounds for a announcement?
> >
> > :D
> >
>
>  The announcement on their dev report comes after 3 months of ignoring
> user's support tickets, it makes it look like there's been a sudden surge of
> collaboration with wine and "several" patches have been put back into the
> wine tree.
>

Or in other words there typical "smoke and mirrors" dev reports....


From gerald at pfeifer.com  Mon Nov 19 08:04:42 2007
From: gerald at pfeifer.com (Gerald Pfeifer)
Date: Mon, 19 Nov 2007 15:04:42 +0100 (CET)
Subject: Remove four useless checks in dlls/gdi32/enhmetafile.c (RESEND)
In-Reply-To: <87abpasayf.fsf@wine.dyndns.org>
References: <Pine.LNX.4.64.0711170100300.8530@acrux.dbai.tuwien.ac.at>
	<87abpasayf.fsf@wine.dyndns.org>
Message-ID: <Pine.LNX.4.64.0711191503020.19271@acrux.dbai.tuwien.ac.at>

On Mon, 19 Nov 2007, Alexandre Julliard wrote:
>> The members of EMRCREATEDIBPATTERNBRUSHPT are of type DWORD, so
>> comparing them for >= 0 is a noop which always evaluates to true.
>>
>> Gerald
>>
>> ChangeLog:
>> Remove four unnecessary comparisions of DWORD variables for >= 0.
> Validating the record is not unnecessary, it just needs to be done
> correctly by checking for wraparounds etc.

I had expected this comment for a different patch of mine.  In 
dlls/gdi32/enhmetafile.c we are just reading existing records,
so I'm not sure what you have in mind here?

Gerald


From julliard at winehq.org  Mon Nov 19 08:12:26 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 19 Nov 2007 15:12:26 +0100
Subject: Remove four useless checks in dlls/gdi32/enhmetafile.c (RESEND)
In-Reply-To: <Pine.LNX.4.64.0711191503020.19271@acrux.dbai.tuwien.ac.at>
	(Gerald Pfeifer's message of "Mon, 19 Nov 2007 15:04:42 +0100 (CET)")
References: <Pine.LNX.4.64.0711170100300.8530@acrux.dbai.tuwien.ac.at>
	<87abpasayf.fsf@wine.dyndns.org>
	<Pine.LNX.4.64.0711191503020.19271@acrux.dbai.tuwien.ac.at>
Message-ID: <8763zys4s5.fsf@wine.dyndns.org>

Gerald Pfeifer <gerald at pfeifer.com> writes:

> I had expected this comment for a different patch of mine.  In 
> dlls/gdi32/enhmetafile.c we are just reading existing records,
> so I'm not sure what you have in mind here?

The records usually come from an external file, so they have to be
validated (not that this is done correctly everywhere, but we should
move towards more validation, not less).

-- 
Alexandre Julliard
julliard at winehq.org


From patrol at sinus.cz  Mon Nov 19 08:30:58 2007
From: patrol at sinus.cz (Pavel Troller)
Date: Mon, 19 Nov 2007 15:30:58 +0100
Subject: wininet: InternetAttemptConnect() Stub
Message-ID: <20071119143058.GA10607@tangens.sinus.cz>

Hi!
  I have a problem running an offline client for ordering photo prints from
digital cameras.
  Even it is an "offline" client, it requires the computer to be online.
  It seems that in wine, it feels to be offline, thus refusing further
operation with a dialog saying something like "Internet connection unavailable"
and terminating. The machine is normally connected to the LAN with full net
availability.
  The following is its full console log.

patrol at gonio:~/.wine/drive_c/Program Files/droxi/OfflineClient$ wine PhotoOfflineClient.exe
fixme:wininet:InternetGetConnectedState always returning LAN connection.
fixme:win:SetLayeredWindowAttributes (0x10030,0x00000000,255,2): stub!
fixme:win:LockWindowUpdate (0x10028), partial stub!
fixme:win:LockWindowUpdate ((nil)), partial stub!
fixme:shdocvw:OleObject_Close (0x199510)->(1)
fixme:wininet:InternetAttemptConnect Stub

  I see two network related fixmes - the first one is very frequent but it
seems harmless, many programs are able to use the net even they issue such
a message. However, the second fixme looks more interesting, it looks like
that the program tries to activate the internet connection, which is of
course just a stub. Why is it doing so, I don't know.
  Is this information enough to find a problem (and maybe its fix) or is
more debugging needed ? What else to try ? 


From paul.vriens.wine at gmail.com  Mon Nov 19 08:36:17 2007
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Mon, 19 Nov 2007 15:36:17 +0100
Subject: imagelist test exception?
In-Reply-To: <a71bd89a0711190601p47f9cb60p95def9a04015f1d4@mail.gmail.com>
References: <a71bd89a0711190601p47f9cb60p95def9a04015f1d4@mail.gmail.com>
Message-ID: <47419F61.1030006@gmail.com>

Dan Kegel wrote:
> comctl32/tests/imagelist.c seems to throw an exception
> during GetDIBits(), but for some reason, the test continues
> and succeeds (except in Valgrind, which is why I noticed).
> Do other folks also see a seh exception in the +seh log
> on this test?
> 
> I narrowed the test case down a bit (see patch).
> Can anyone clue me in on what's going on here?
> 
> 
> ------------------------------------------------------------------------
> 
> 
Hi Dan,

FWIW I have several exceptions when running the imagelist test.

(I also see a lot of these exceptions while I was/am debugging Skype, they are 
all DIB related).

-- 
Cheers,

Paul.


From dank at kegel.com  Mon Nov 19 08:57:19 2007
From: dank at kegel.com (Dan Kegel)
Date: Mon, 19 Nov 2007 06:57:19 -0800
Subject: imagelist test exception?
In-Reply-To: <47419F61.1030006@gmail.com>
References: <a71bd89a0711190601p47f9cb60p95def9a04015f1d4@mail.gmail.com>
	<47419F61.1030006@gmail.com>
Message-ID: <a71bd89a0711190657re31b421x1f00db38f8a3ac12@mail.gmail.com>

On Nov 19, 2007 6:36 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> Dan Kegel wrote:
> > comctl32/tests/imagelist.c seems to throw an exception
> > during GetDIBits(), but for some reason, the test continues
> > and succeeds (except in Valgrind, which is why I noticed).
>
> FWIW I have several exceptions when running the imagelist test.

Marcus pointed me to  X11DRV_DIB_FaultHandler

I think the exceptions are handled properly by wine, but
it might be a benign accident that the test case is causing them.


From julliard at winehq.org  Mon Nov 19 08:58:49 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 19 Nov 2007 15:58:49 +0100
Subject: imagelist test exception?
In-Reply-To: <a71bd89a0711190601p47f9cb60p95def9a04015f1d4@mail.gmail.com>
	(Dan Kegel's message of "Mon, 19 Nov 2007 06:01:25 -0800")
References: <a71bd89a0711190601p47f9cb60p95def9a04015f1d4@mail.gmail.com>
Message-ID: <871wams2mu.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> comctl32/tests/imagelist.c seems to throw an exception
> during GetDIBits(), but for some reason, the test continues
> and succeeds (except in Valgrind, which is why I noticed).
> Do other folks also see a seh exception in the +seh log
> on this test?
>
> I narrowed the test case down a bit (see patch).
> Can anyone clue me in on what's going on here?

It's a DIB access exception, it's perfectly normal, it's used to trigger
a copy of the DIB bits from the X server.

-- 
Alexandre Julliard
julliard at winehq.org


From dank at kegel.com  Mon Nov 19 09:03:13 2007
From: dank at kegel.com (Dan Kegel)
Date: Mon, 19 Nov 2007 07:03:13 -0800
Subject: imagelist test exception?
In-Reply-To: <871wams2mu.fsf@wine.dyndns.org>
References: <a71bd89a0711190601p47f9cb60p95def9a04015f1d4@mail.gmail.com>
	<871wams2mu.fsf@wine.dyndns.org>
Message-ID: <a71bd89a0711190703sfa6df11m6900663c5cae5cee@mail.gmail.com>

On Nov 19, 2007 6:58 AM, Alexandre Julliard <julliard at winehq.org> wrote:
> It's a DIB access exception, it's perfectly normal, it's used to trigger
> a copy of the DIB bits from the X server.

Oh, right, thanks!
- Dan


From juan.lang at gmail.com  Mon Nov 19 09:28:40 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 19 Nov 2007 07:28:40 -0800
Subject: wininet: InternetAttemptConnect() Stub
In-Reply-To: <20071119143058.GA10607@tangens.sinus.cz>
References: <20071119143058.GA10607@tangens.sinus.cz>
Message-ID: <3a768c550711190728q13e3123br3d02893f0a5b6da5@mail.gmail.com>

Hi Pavel,

On Nov 19, 2007 6:30 AM, Pavel Troller <patrol at sinus.cz> wrote:
>   I have a problem running an offline client for ordering photo prints from
> digital cameras.
>   Even it is an "offline" client, it requires the computer to be online.
>   It seems that in wine, it feels to be offline, thus refusing further
> operation with a dialog saying something like "Internet connection unavailable"
> and terminating. The machine is normally connected to the LAN with full net
> availability.
>   The following is its full console log.
>
> patrol at gonio:~/.wine/drive_c/Program Files/droxi/OfflineClient$ wine PhotoOfflineClient.exe
> fixme:wininet:InternetGetConnectedState always returning LAN connection.
> fixme:win:SetLayeredWindowAttributes (0x10030,0x00000000,255,2): stub!
> fixme:win:LockWindowUpdate (0x10028), partial stub!
> fixme:win:LockWindowUpdate ((nil)), partial stub!
> fixme:shdocvw:OleObject_Close (0x199510)->(1)
> fixme:wininet:InternetAttemptConnect Stub

I don't think either wininet fixme is telling you anything worthwhile.
 As you already pointed out, the first one seems okay:  a LAN
connection is what it most likely expects anyway.  The second stub, if
you look at the source, returns ERROR_SUCCESS, which is what MSDN says
it should return if it succeeds.

I think you're going to have to try a +relay log and scanning through
it ti figure out why it thinks it's offline.
--Juan


From winehacker at gmail.com  Mon Nov 19 10:55:37 2007
From: winehacker at gmail.com (Steven Edwards)
Date: Mon, 19 Nov 2007 11:55:37 -0500
Subject: Removing Windows and Solaris from the Downloads page
In-Reply-To: <200711191140.59761.hans@it.vu.nl>
References: <473E8DA1.2090101@open-vote.org>
	<3a768c550711181703v523e5aa6rbcfc9ad34666f564@mail.gmail.com>
	<19e31a080711181855w633b057cw94079a4fd3dd5498@mail.gmail.com>
	<200711191140.59761.hans@it.vu.nl>
Message-ID: <19e31a080711190855u66ae9bc8s3fffb8760fa73dbe@mail.gmail.com>

On Nov 19, 2007 5:40 AM, Hans Leidekker <hans at it.vu.nl> wrote:
> I recall Alexandre saying that he wants the exposure to alternative headers
> and import libraries because it brings up bugs in Wine. He also suggested
> that the wininet/winsock issue could be solved by making wininet build
> against either Windows sockets or Unix sockets.

I did this so it should still work. I was just pointing to it as an
example of how/why
things break on the mingw build.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From roy at cs.hmc.edu  Mon Nov 19 12:58:32 2007
From: roy at cs.hmc.edu (Roy Shea)
Date: Mon, 19 Nov 2007 10:58:32 -0800
Subject: svchost: Added base implementation of svchost (1/27)
In-Reply-To: <3a768c550711161740i29e1152bia8d288b25b31504d@mail.gmail.com>
References: <3a768c550711161740i29e1152bia8d288b25b31504d@mail.gmail.com>
Message-ID: <20071119185832.GA17495@knuth.cs.hmc.edu>

Hello Juan,

Thank you for the code review!  A quick clarification about HeapFree:

> Some judicious use of goto could reduce code for all your error paths.
> Remember that HeapFree of a NULL pointer is allowed.

The docs for HeapFree state "If this pointer is NULL, the behavior is
undefined."  So in practice the undefined behavior is benign?

Peace,
-Roy



From juan.lang at gmail.com  Mon Nov 19 13:04:54 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 19 Nov 2007 11:04:54 -0800
Subject: svchost: Added base implementation of svchost (1/27)
In-Reply-To: <20071119185832.GA17495@knuth.cs.hmc.edu>
References: <3a768c550711161740i29e1152bia8d288b25b31504d@mail.gmail.com>
	<20071119185832.GA17495@knuth.cs.hmc.edu>
Message-ID: <3a768c550711191104w67a4287eq5a198325f1d28937@mail.gmail.com>

Hi Roy,

> The docs for HeapFree state "If this pointer is NULL, the behavior is
> undefined."  So in practice the undefined behavior is benign?

Yes.  There are tests for that, and in fact there's a janitorial
project about removing redundant NULL pointer checks before HeapFree.
Michael Stefaniuc wrote about it here:
http://www.mail-archive.com/wine-devel at winehq.org/msg11972.html
You'll still see occasional commits along those lines, often from
Michael, tagged with "found by Smatch."  E.g.:
http://www.winehq.org/pipermail/wine-cvs/2007-November/038118.html

--Juan


From juan.lang at gmail.com  Mon Nov 19 13:09:07 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 19 Nov 2007 11:09:07 -0800
Subject: credui: Show a balloon tip in the credential dialog if
	CREDUI_FLAGS_INCORRECT_PASSWORD was specified.
Message-ID: <3a768c550711191109w3f8ed73fpfcdc789be1662a5a@mail.gmail.com>

Hi Rob,

+    IDS_INCORRECTPASSWORDTITLE  "Logon unsucessful"

The typo's your own work too, eh?
--Juan


From stefandoesinger at gmx.at  Mon Nov 19 14:00:15 2007
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Mon, 19 Nov 2007 21:00:15 +0100
Subject: d3dx8 [patch 1/10] Implement D3DXPlaneFromPointNormal
In-Reply-To: <20071119175530.e9sm8azm048scg0g@webmail.math.cnrs.fr>
References: <20071119175530.e9sm8azm048scg0g@webmail.math.cnrs.fr>
Message-ID: <200711192100.18220.stefandoesinger@gmx.at>

Hi,

It's not really about this patch, but I am curious what the plans about 
sharing code between the various d3dx?_* libraries are. I think a big amount 
of functionality can be shared among d3dx8.dll, d3dx9_*.dll, and propably 
d3dxof.dll and d3drm.dll.

I think this was discussed in the past, but I am not sure if there was any 
outcome. The solution chosen for d3d was to create an internal library 
wined3d.dll, and have the other libs call it. I guess something similar 
should be done for d3dx as well.

For non COM interfaces this is pretty easy anyway. We can rename d3dx8 to 
wined3dx at any time and just load the functions into a new d3d8 thunk using 
the .spec file, without any C code. So I guess we can leave things as they 
currently are and move over to a shared lib once non-math functions are 
implemented, or someone starts d3dx9_*.dll

Functions like D3DXCreateTextureFromFileA seem to be a bit harder. Since they 
take an IDirect3DDevice8 * interface pointer d3dx9 cannot use them as is. 
Making a shared implementation is also not quite possible because it would 
need a wined3ddevice then, but only d3d8.dll knows how to get a wined3ddevice 
from a d3ddevice8. Also, d3dx* would depend on wined3d then, which is 
propably not what we want.

David, do you have any plans regarding that?

As a sidenote, I really like your patches! The patches are small but still 
every patch makes sense for itself, and tests in every patch :-)

I will write a HLSL compiler at some point, and propably a shader assembler. 
This will be needed for a complete d3dx8 and d3dx9 implementation, as well as 
d3d10. I am not yet sure where to put it, but it could be a standalone lib in 
libs/, to allow using the compiler at build time, or just include it in 
wined3dx, if we decide to add such a library.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071119/7518283a/attachment.pgp 

From devzero at web.de  Mon Nov 19 13:59:46 2007
From: devzero at web.de (devzero at web.de)
Date: Mon, 19 Nov 2007 20:59:46 +0100
Subject: Unimplemented function KERNEL32.dll.FindFirstVolumeW
Message-ID: <2095086567@web.de>

Hello Marcus,  hello Hans, 

thanks very much - that was a quick fix ! :)

I tried the latest snapshot and now was going able start windirstat.

great!

i can tell , that it basically works and i`m able to scan a disk.

despite some minor quirks like crash of the app when i click trough the cushion treemap, there seems some major issue.

at least some very weird major issue:

when scannnig trough drive z:\  , my notebook reboots !

This happens reproduceably when windirstat is at ~100.000 entries

i had absolutely no stability issues with my notebook so far, running it for some days now and using it very very intensive (much i/o, firefox/open with many many windows containing flash etc)

i did an test afterwards to see if this is caused by some corrupt files or whatever, but  some

find / -type f  -exec stat {} \; >/dev/null
ls -laR / >/dev/null

completes without an error.

there are around 200.000 files on my notebook.

wasn`t wine a userspace application with no kernel related stuff ?

so it`s weird, that windirstat is crashing my notebook, isn`t it ?

maybe somebody is able to reproduce ?

regards
roland


> -----Urspr?ngliche Nachricht-----
> Von: "Marcus Meissner" <marcus at jet.franken.de>
> Gesendet: 19.11.07 07:48:04
> An: devzero at web.de
> CC: Hans Leidekker <hans at it.vu.nl>, wine-devel at winehq.org
> Betreff: Re: Unimplemented function KERNEL32.dll.FindFirstVolumeW


> 
> On Sun, Nov 18, 2007 at 10:14:17PM +0100, devzero at web.de wrote:
> > Hello Hans, 
> > 
> > thanks for that info.
> > 
> > latest version i tried here is 
> > 
> > wine-0.9.49-11.3.i586.rpm    
> > wine-snapshot-0.9.49.20071118-11.1.i586.rpm    
> > 
> > but same error.
> > maybe that`s not recent enough ?
> > 
> > do i need to enable special option or add some files ?
> > 
> > sorry, i`m quite new to wine and maybe i should read deeper into the docs instead of posting :)
> 
> It is not yet committed to the mainline repository. Once it
> is it will show up in "wine-snapshot" of the openSUSE buildservice
> of this day.
> 
> Ciao, Marcus 
> 


_______________________________________________________________________
Jetzt neu! Sch?tzen Sie Ihren PC mit McAfee und WEB.DE. 3 Monate
kostenlos testen. http://www.pc-sicherheit.web.de/startseite/?mc=022220



From infyquest at gmail.com  Mon Nov 19 14:19:08 2007
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Mon, 19 Nov 2007 14:19:08 -0600
Subject: d3dx8 [patch 1/10] Implement D3DXPlaneFromPointNormal
In-Reply-To: <200711192100.18220.stefandoesinger@gmx.at>
References: <20071119175530.e9sm8azm048scg0g@webmail.math.cnrs.fr>
	<200711192100.18220.stefandoesinger@gmx.at>
Message-ID: <36bf289b0711191219n595835f4t7a6b6f1062e172c2@mail.gmail.com>

On 11/19/07, Stefan D?singer <stefandoesinger at gmx.at> wrote:
> Hi,
>
> It's not really about this patch, but I am curious what the plans about
> sharing code between the various d3dx?_* libraries are. I think a big amount
> of functionality can be shared among d3dx8.dll, d3dx9_*.dll, and propably
> d3dxof.dll and d3drm.dll.
>
> I think this was discussed in the past, but I am not sure if there was any
> outcome. The solution chosen for d3d was to create an internal library
> wined3d.dll, and have the other libs call it. I guess something similar
> should be done for d3dx as well.
>
> For non COM interfaces this is pretty easy anyway. We can rename d3dx8 to
> wined3dx at any time and just load the functions into a new d3d8 thunk using
> the .spec file, without any C code. So I guess we can leave things as they
> currently are and move over to a shared lib once non-math functions are
> implemented, or someone starts d3dx9_*.dll
>
> Functions like D3DXCreateTextureFromFileA seem to be a bit harder. Since
> they
> take an IDirect3DDevice8 * interface pointer d3dx9 cannot use them as is.
> Making a shared implementation is also not quite possible because it would
> need a wined3ddevice then, but only d3d8.dll knows how to get a
> wined3ddevice
> from a d3ddevice8. Also, d3dx* would depend on wined3d then, which is
> propably not what we want.
>
> David, do you have any plans regarding that?
>
> As a sidenote, I really like your patches! The patches are small but still
> every patch makes sense for itself, and tests in every patch :-)
>
> I will write a HLSL compiler at some point, and propably a shader assembler.
> This will be needed for a complete d3dx8 and d3dx9 implementation, as well
> as
> d3d10. I am not yet sure where to put it, but it could be a standalone lib
> in
> libs/, to allow using the compiler at build time, or just include it in
> wined3dx, if we decide to add such a library.
>

 Why not having the functionality of d3dx in wined3d, instead of having
 a separate d3dx library called wined3dx?
 I like the having all the common functionality of d3drm,d3dx8, d3dx9_*
 and d3dxof dlls at one place and for all the version dependent stuff,
 we keep it the respective dlls.

--
VJ

From hans at it.vu.nl  Mon Nov 19 14:22:00 2007
From: hans at it.vu.nl (Hans Leidekker)
Date: Mon, 19 Nov 2007 21:22:00 +0100
Subject: Unimplemented function KERNEL32.dll.FindFirstVolumeW
In-Reply-To: <2095086567@web.de>
References: <2095086567@web.de>
Message-ID: <200711192122.00890.hans@it.vu.nl>

On Monday 19 November 2007 20:59:46 devzero at web.de wrote:

> when scannnig trough drive z:\  , my notebook reboots !
> wasn`t wine a userspace application with no kernel related stuff ?
> so it`s weird, that windirstat is crashing my notebook, isn`t it ?

Yes, Wine shouldn't be able to do that. You're not running Wine
as root are you? Does your system log reveal anything about the crash?

 -Hans


From nlataill at gmail.com  Mon Nov 19 14:25:25 2007
From: nlataill at gmail.com (nlataill)
Date: Mon, 19 Nov 2007 21:25:25 +0100
Subject: Wrong comparison in ntdll/actctx.c
Message-ID: <df74f44a0711191225l387a32f7j56db18be4a6daa47@mail.gmail.com>

Hi,

Working on a D3D game, I have found that wine is refusing to load the
following
manifest file (when Windows does not fail).

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Copyright (c) 1981-2001 Microsoft Corporation -->
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
    <noInheritable/>
    <assemblyIdentity type="win32" name="Microsoft.VC80.OpenMP" version="
8.0.50727.42" processorArchitecture="x86"
publicKeyToken="1fc8b3b9a1e18e3b"/>
    <file name="vcomp.dll" hash="0d009725bd5653af143fdfd9d8abf8adad533d16"
hashalg="SHA1"/>
</assembly>

Adding verbosity to actctx.c, it seems that this game is requesting version
8.0.50608.0, which does match major.minor,
but not the whole version number (*major.minor.build.revision)*.

trace:actctx:parse_assembly_identity_elem name=L"Microsoft.VC80.OpenMP"
version=8.0.50727.42 arch=L"x86"
fixme:actctx:parse_assembly_elem VERBOSE: wrong version FOUND: 8/0/50727/42
fixme:actctx:parse_assembly_elem VERBOSE: wrong version EXP: 8/0/50608/0
fixme:actctx:parse_manifest_buffer failed to parse manifest L"C:\\Program
Files\\Microsoft.VC80.OpenMP.manifest"
fixme:actctx:parse_depend_manifests Could not find dependent assembly L"
Microsoft.VC80.OpenMP"

According to MSDN, it seems only major.minor is considered for version
matching:
- http://msdn2.microsoft.com/en-us/library/aa374234.aspx : A version number
that changes only in the *build* or *revision* parts indicates that the
assembly is backward compatible with prior versions.
- http://msdn2.microsoft.com/en-us/library/aa375365.aspx: [...] are
manifests used to redirect the version of a side-by-side assembly to another
compatible version. The version that the assembly is being redirected to
should have the same major.minor values as the original version.

I am proposing the following one-liner to ntdll/actctx.c:

isa at isa:~/downloads/tmp$ diff -u wine-0.9.49/dlls/ntdll/actctx.c
/home/isa/downloads/wine-0.9.49/dlls/ntdll/actctx.c
--- wine-0.9.49/dlls/ntdll/actctx.c     2007-11-09 17:56:12.000000000 +0100
+++ /home/isa/downloads/wine-0.9.49/dlls/ntdll/actctx.c 2007-11-19 21:07:
35.000000000 +0100
@@ -1390,8 +1390,8 @@
         if (expected_ai)
         {
             /* FIXME: more tests */
-            if (assembly->type == ASSEMBLY_MANIFEST &&
-                memcmp(&assembly->id.version, &expected_ai->version,
sizeof(assembly->id.version)))
+            if (assembly->type == ASSEMBLY_MANIFEST &&
+                ((assembly->id.version.major != expected_ai->version.major)
|| (assembly->id.version.minor != expected_ai->version.minor)) )
             {
                 FIXME("wrong version\n");
                 return FALSE;

With this patch, the manifest (and related DLL) is loading correctly.
This does not prevent my game die shortly after, in D3D code this time.
Still work to do ;-)

Thanks,

Norbert Lataille
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071119/79b31547/attachment.htm 

From stefandoesinger at gmx.at  Mon Nov 19 14:37:40 2007
From: stefandoesinger at gmx.at (Stefan =?utf-8?q?D=C3=B6singer?=)
Date: Mon, 19 Nov 2007 21:37:40 +0100
Subject: d3dx8 [patch 1/10] Implement D3DXPlaneFromPointNormal
In-Reply-To: <36bf289b0711191219n595835f4t7a6b6f1062e172c2@mail.gmail.com>
References: <20071119175530.e9sm8azm048scg0g@webmail.math.cnrs.fr>
	<200711192100.18220.stefandoesinger@gmx.at>
	<36bf289b0711191219n595835f4t7a6b6f1062e172c2@mail.gmail.com>
Message-ID: <200711192137.44348.stefandoesinger@gmx.at>

Am Montag, 19. November 2007 21:19:08 schrieb Vijay Kiran Kamuju:

>  Why not having the functionality of d3dx in wined3d, instead of having
>  a separate d3dx library called wined3dx?
>  I like the having all the common functionality of d3drm,d3dx8, d3dx9_*
>  and d3dxof dlls at one place and for all the version dependent stuff,
>  we keep it the respective dlls.
Because it is in a separate DLL in Windows. But it is an option to put it into 
wined3d.

Also, wined3d is quite huge. The stripped binary has 926 kb of plain code - no 
graphics, nothing. Also, it is preferable that d3dx* can run on Windows 
without wined3d. Having a wined3d.dll around is not a big deal as long as it 
works without actually using the low level d3d parts of wined3d.

I am not opposed to put d3dx things into wined3d, but I think it is nicer to 
have it separate.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071119/76a06895/attachment-0001.pgp 

From devzero at web.de  Mon Nov 19 14:39:16 2007
From: devzero at web.de (devzero at web.de)
Date: Mon, 19 Nov 2007 21:39:16 +0100
Subject: Unimplemented function KERNEL32.dll.FindFirstVolumeW
Message-ID: <2095224754@web.de>

> Yes, Wine shouldn't be able to do that. You're not running Wine
> as root are you? 

whoops - i did. shame on me :)

i retried with ordinary account and the crash didn`t happen there.
anyway - should i expect such problems with root ?

>Does your system log reveal anything about the crash?
no, unfortunately not

regards
roland

> -----Urspr?ngliche Nachricht-----
> Von: "Hans Leidekker" <hans at it.vu.nl>
> Gesendet: 19.11.07 21:22:20
> An:  "http://freemail.web.de/" <devzero at web.de>
> Betreff: Re: Unimplemented function KERNEL32.dll.FindFirstVolumeW


> 
> On Monday 19 November 2007 20:59:46 devzero at web.de wrote:
> 
> > when scannnig trough drive z:\  , my notebook reboots !
> > wasn`t wine a userspace application with no kernel related stuff ?
> > so it`s weird, that windirstat is crashing my notebook, isn`t it ?
> 
> Yes, Wine shouldn't be able to do that. You're not running Wine
> as root are you? Does your system log reveal anything about the crash?
> 
>  -Hans
> 


______________________________________________________________________
XXL-Speicher, PC-Virenschutz, Spartarife & mehr: Nur im WEB.DE Club!		
Jetzt testen! http://produkte.web.de/club/?mc=021130



From rob at codeweavers.com  Mon Nov 19 14:42:34 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Mon, 19 Nov 2007 20:42:34 +0000
Subject: credui: Show a balloon tip in the credential dialog if
	CREDUI_FLAGS_INCORRECT_PASSWORD was specified.
In-Reply-To: <3a768c550711191109w3f8ed73fpfcdc789be1662a5a@mail.gmail.com>
References: <3a768c550711191109w3f8ed73fpfcdc789be1662a5a@mail.gmail.com>
Message-ID: <4741F53A.7010804@codeweavers.com>

Juan Lang wrote:
> Hi Rob,
>
> +    IDS_INCORRECTPASSWORDTITLE  "Logon unsucessful"
>
> The typo's your own work too, eh?

Absolutely!

-- 
Rob Shearman



From stefandoesinger at gmx.at  Mon Nov 19 14:43:36 2007
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Mon, 19 Nov 2007 21:43:36 +0100
Subject: Wrong comparison in ntdll/actctx.c
In-Reply-To: <df74f44a0711191225l387a32f7j56db18be4a6daa47@mail.gmail.com>
References: <df74f44a0711191225l387a32f7j56db18be4a6daa47@mail.gmail.com>
Message-ID: <200711192143.39447.stefandoesinger@gmx.at>

Am Montag, 19. November 2007 21:25:25 schrieb nlataill:
> Working on a D3D game, I have found that wine is refusing to load the
> following
> manifest file (when Windows does not fail).
> 
> I am proposing the following one-liner to ntdll/actctx.c:
You can send patches to wine-patches at winehq.org. Please use git-format-patch 
to create the diff file, and mail it as a regular attachment. You have to be 
subscribed to the list, otherwise your patch will end up in moderation, but 
you can turn off mail delivery so your inbox doesn't get spammed.

> According to MSDN, it seems only major.minor is considered for version
> matching:
The msdn is sometimes wrong, it is a good idea to include a test in the 
patch(see dlls/ntdll/tests/). This shows your change is correct, and prevents 
others from changing it back because it happens to fix a different bug.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071119/28a8faee/attachment.pgp 

From gav at transgaming.com  Mon Nov 19 14:55:35 2007
From: gav at transgaming.com (Gavriel State)
Date: Mon, 19 Nov 2007 15:55:35 -0500
Subject: recent cedega contributions to wine
In-Reply-To: <200711190837.29196.stefandoesinger@gmx.at>
References: <BAY128-W296B12DAECE77FBC0128F2AB7E0@phx.gbl>
	<200711190837.29196.stefandoesinger@gmx.at>
Message-ID: <4741F847.1000103@transgaming.com>

Stefan D?singer wrote:
>> "TransGaming's developers have been contributing some changes back to Wine
>> as well, including in several networking and debugging libraries. "
>>
>> Just out of curiousity, which patches are these?
>>     
> A wine-patches archive search finds these:
>
> http://article.gmane.org/gmane.comp.emulators.wine.patches/32979
> http://article.gmane.org/gmane.comp.emulators.wine.patches/32981
> http://article.gmane.org/gmane.comp.emulators.wine.patches/32982
>
> http://article.gmane.org/gmane.comp.emulators.wine.patches/39016
> http://article.gmane.org/gmane.comp.emulators.wine.patches/39017
> http://article.gmane.org/gmane.comp.emulators.wine.patches/33632
> http://article.gmane.org/gmane.comp.emulators.wine.patches/3363

Hi All,

There are some additional patches coming down the pipe shortly for 
dbghelp, which we've done extensive work with in the past few months.  
There was a communications mixup in that those changes have been merged 
into our external public CVS under the LGPL 
(http://cvs.transgaming.org/cgi-bin/viewcvs.cgi/winex/dlls/dbghelp), but 
haven't yet made it to wine-patches.

The main thing holding up the patch submission there is the trace system 
changes that went into WineHQ to resolve some of the warning differences 
for printfs on different platforms.  We are still using platform printf 
on our side, and our dbghelp changes include a bunch of changes to the 
traces that need to be backed out before a patch gets submitted to 
wine-patches.

We certainly plan to continue contributing more code beyond this, which 
was why we made an explicit mention of it in the newsletter.

Take care,
 -Gav

-- 
Gavriel State 
Founder & CTO
TransGaming Inc.
gav at transgaming.com
http://www.transgaming.com

Broadening The Playing Field



From hans at it.vu.nl  Mon Nov 19 14:59:18 2007
From: hans at it.vu.nl (Hans Leidekker)
Date: Mon, 19 Nov 2007 21:59:18 +0100
Subject: Unimplemented function KERNEL32.dll.FindFirstVolumeW
In-Reply-To: <2095224754@web.de>
References: <2095224754@web.de>
Message-ID: <200711192159.18989.hans@it.vu.nl>

On Monday 19 November 2007 21:39:16 devzero at web.de wrote:

> i retried with ordinary account and the crash didn`t happen there.
> anyway - should i expect such problems with root ?

Well, a reboot is not expected but it can certainly happen. If your
app is leaking file descriptors for example, given that there are no
limits for root, it will bring your system to a halt.

 -Hans


From rob at codeweavers.com  Mon Nov 19 15:37:57 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Mon, 19 Nov 2007 21:37:57 +0000
Subject: Wrong comparison in ntdll/actctx.c
In-Reply-To: <df74f44a0711191225l387a32f7j56db18be4a6daa47@mail.gmail.com>
References: <df74f44a0711191225l387a32f7j56db18be4a6daa47@mail.gmail.com>
Message-ID: <47420235.6030208@codeweavers.com>

nlataill wrote:
> Adding verbosity to actctx.c, it seems that this game is requesting 
> version 8.0.50608.0, which does match major.minor,
> but not the whole version number (/major.minor.build.revision)/.
>
...
> According to MSDN, it seems only major.minor is considered for version 
> matching:
> - http://msdn2.microsoft.com/en-us/library/aa374234.aspx : A version 
> number that changes only in the /build/ or /revision/ parts indicates 
> that the assembly is backward compatible with prior versions.
> - http://msdn2.microsoft.com/en-us/library/aa375365.aspx: [...] are 
> manifests used to redirect the version of a side-by-side assembly to 
> another compatible version. The version that the assembly is being 
> redirected to should have the same major.minor values as the original 
> version.
>
> I am proposing the following one-liner to ntdll/actctx.c:
>
> isa at isa:~/downloads/tmp$ diff -u wine-0.9.49/dlls/ntdll/actctx.c 
> /home/isa/downloads/wine-0.9.49/dlls/ntdll/actctx.c
> --- wine-0.9.49/dlls/ntdll/actctx.c     2007-11-09 17:56: 12.000000000 
> +0100
> +++ /home/isa/downloads/wine-0.9.49/dlls/ntdll/actctx.c 2007-11-19 
> 21:07:35.000000000 +0100
> @@ -1390,8 +1390,8 @@
>          if (expected_ai)
>          {
>              /* FIXME: more tests */
> -            if (assembly->type == ASSEMBLY_MANIFEST &&
> -                memcmp(&assembly->id.version, &expected_ai->version, 
> sizeof(assembly->id.version)))
> +            if (assembly->type == ASSEMBLY_MANIFEST &&
> +                ((assembly->id.version.major != 
> expected_ai->version.major) || (assembly->id.version.minor != 
> expected_ai->version.minor)) )
>              {
>                  FIXME("wrong version\n");
>                  return FALSE;
>
> With this patch, the manifest (and related DLL) is loading correctly.
> This does not prevent my game die shortly after, in D3D code this 
> time. Still work to do ;-)

I think the attached patch is more complete and implements what MSDN states.

-- 
Rob Shearman

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-ntdll-Make-the-version-checks-in-parse_assembly_elem-consistent-with-those-in-lookup_manifest_file.patch
Type: text/x-patch
Size: 0 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071119/00213f88/attachment.bin 

From rob at codeweavers.com  Tue Nov  6 10:15:50 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Tue, 6 Nov 2007 16:15:50 +0000
Subject: [PATCH] ntdll: Make the version checks in parse_assembly_elem consistent with those in lookup_manifest_file.
Message-ID: <mailman.18.1195508294.6275.wine-devel@winehq.org>

---
 dlls/ntdll/actctx.c |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/dlls/ntdll/actctx.c b/dlls/ntdll/actctx.c
index 15f87e7..b4b5197 100644
--- a/dlls/ntdll/actctx.c
+++ b/dlls/ntdll/actctx.c
@@ -1391,7 +1391,11 @@ static BOOL parse_assembly_elem(xmlbuf_t* xmlbuf, struct actctx_loader* acl,
         {
             /* FIXME: more tests */
             if (assembly->type == ASSEMBLY_MANIFEST &&
-                memcmp(&assembly->id.version, &expected_ai->version, sizeof(assembly->id.version)))
+                (assembly->id.version.major != expected_ai->version.major ||
+                 assembly->id.version.minor != expected_ai->version.minor ||
+                 assembly->id.version.build < expected_ai->version.build ||
+                 (assembly->id.version.build == expected_ai->version.build &&
+                  assembly->id.version.revision < expected_ai->version.revision)))
             {
                 FIXME("wrong version\n");
                 return FALSE;
-- 
1.5.0


--------------090702080603030805080702--


From nlataill at gmail.com  Mon Nov 19 16:26:46 2007
From: nlataill at gmail.com (nlataill)
Date: Mon, 19 Nov 2007 23:26:46 +0100
Subject: Wrong comparison in ntdll/actctx.c
In-Reply-To: <47420235.6030208@codeweavers.com>
References: <df74f44a0711191225l387a32f7j56db18be4a6daa47@mail.gmail.com>
	<47420235.6030208@codeweavers.com>
Message-ID: <df74f44a0711191426y6302361fg669ee4fc82f87356@mail.gmail.com>

Hi,

Yes, I can see that such 4-level comparisons are already
in the actctx.c codebase (probably for a reason ?). Looking at
MSDN earlier this evening, I could not find reference to 3rd and
4th entries in comparisons, but I probably skipped the right section
in the doc.

Do you believe it is worthwhile to check this comparison function
from a windows test perspective ?

Thanks,

Norbert

2007/11/19, Robert Shearman <rob at codeweavers.com>:
>
> nlataill wrote:
> > Adding verbosity to actctx.c, it seems that this game is requesting
> > version 8.0.50608.0, which does match major.minor,
> > but not the whole version number (/major.minor.build.revision)/.
> >
> ...
> > According to MSDN, it seems only major.minor is considered for version
> > matching:
> > - http://msdn2.microsoft.com/en-us/library/aa374234.aspx : A version
> > number that changes only in the /build/ or /revision/ parts indicates
> > that the assembly is backward compatible with prior versions.
> > - http://msdn2.microsoft.com/en-us/library/aa375365.aspx: [...] are
> > manifests used to redirect the version of a side-by-side assembly to
> > another compatible version. The version that the assembly is being
> > redirected to should have the same major.minor values as the original
> > version.
> >
> > I am proposing the following one-liner to ntdll/actctx.c:
> >
> > isa at isa:~/downloads/tmp$ diff -u wine-0.9.49/dlls/ntdll/actctx.c
> > /home/isa/downloads/wine-0.9.49/dlls/ntdll/actctx.c
> > --- wine-0.9.49/dlls/ntdll/actctx.c     2007-11-09 17:56: 12.000000000
> > +0100
> > +++ /home/isa/downloads/wine-0.9.49/dlls/ntdll/actctx.c 2007-11-19
> > 21:07:35.000000000 +0100
> > @@ -1390,8 +1390,8 @@
> >          if (expected_ai)
> >          {
> >              /* FIXME: more tests */
> > -            if (assembly->type == ASSEMBLY_MANIFEST &&
> > -                memcmp(&assembly->id.version, &expected_ai->version,
> > sizeof(assembly->id.version)))
> > +            if (assembly->type == ASSEMBLY_MANIFEST &&
> > +                ((assembly->id.version.major !=
> > expected_ai->version.major) || (assembly->id.version.minor !=
> > expected_ai->version.minor)) )
> >              {
> >                  FIXME("wrong version\n");
> >                  return FALSE;
> >
> > With this patch, the manifest (and related DLL) is loading correctly.
> > This does not prevent my game die shortly after, in D3D code this
> > time. Still work to do ;-)
>
> I think the attached patch is more complete and implements what MSDN
> states.
>
> --
> Rob Shearman
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071119/2d14e79c/attachment.htm 

From devzero at web.de  Mon Nov 19 15:23:16 2007
From: devzero at web.de (devzero at web.de)
Date: Mon, 19 Nov 2007 22:23:16 +0100
Subject: Unimplemented function KERNEL32.dll.FindFirstVolumeW
Message-ID: <2095289996@web.de>

checked if app is leaking fd`s, but lsof didn`t tell anything special.

after some investigation i came across the following entry in dmesg:

 iTCO_wdt: Unexpected close, not stopping watchdog

seems that wine is triggering something with this - after unloading  iTCO_wdt kernel module, the problem went away.

looks that wine is (un-)triggering the watchdog timer and the reboot happens due to this.

will further investigate (strace) - maybe i can provide some more input

so, it`s probably not a wine issue....

regards
roland



> -----Urspr?ngliche Nachricht-----
> Von: "Hans Leidekker" <hans at it.vu.nl>
> Gesendet: 19.11.07 21:59:29
> An: wine-devel at winehq.org
> Betreff: Re: Unimplemented function KERNEL32.dll.FindFirstVolumeW


> 
> On Monday 19 November 2007 21:39:16 devzero at web.de wrote:
> 
> > i retried with ordinary account and the crash didn`t happen there.
> > anyway - should i expect such problems with root ?
> 
> Well, a reboot is not expected but it can certainly happen. If your
> app is leaking file descriptors for example, given that there are no
> limits for root, it will bring your system to a halt.
> 
>  -Hans
> 


__________________________________________________________________________
Erweitern Sie FreeMail zu einem noch leistungsst?rkeren E-Mail-Postfach!		
Mehr Infos unter http://produkte.web.de/club/?mc=021131



From leslie_alistair at hotmail.com  Mon Nov 19 15:10:51 2007
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Tue, 20 Nov 2007 08:10:51 +1100
Subject: Missed Patches
Message-ID: <fhsu61$qcu$1@ger.gmane.org>

Hi,
    Is there any reason the following patches haven't been applied?
[1/2] msxml: Implement createTextNode

[2/2] msxml: Tests for createTextNode

mshtml: Provide support for the IInternetProtocol Interface



Best Regards

 Alistair Leslie-Hughes





From devzero at web.de  Mon Nov 19 18:08:32 2007
From: devzero at web.de (devzero at web.de)
Date: Tue, 20 Nov 2007 01:08:32 +0100
Subject: Unimplemented function KERNEL32.dll.FindFirstVolumeW
Message-ID: <2095502429@web.de>

i`ve tracked this down to a watchdog issue.

whenever i do "cat /dev/watchdog" - my system reboots after ~1 minute.

i`ve contacted the maintainer of the watchdog subsystem.

looks like a bug to me.

thanks
roland


> -----Urspr?ngliche Nachricht-----
> Von: "Hans Leidekker" <hans at it.vu.nl>
> Gesendet: 19.11.07 21:59:29
> An: wine-devel at winehq.org
> Betreff: Re: Unimplemented function KERNEL32.dll.FindFirstVolumeW


> 
> On Monday 19 November 2007 21:39:16 devzero at web.de wrote:
> 
> > i retried with ordinary account and the crash didn`t happen there.
> > anyway - should i expect such problems with root ?
> 
> Well, a reboot is not expected but it can certainly happen. If your
> app is leaking file descriptors for example, given that there are no
> limits for root, it will bring your system to a halt.
> 
>  -Hans
> 


______________________________________________________________________________
Jetzt neu! Im riesigen WEB.DE Club SmartDrive Dateien freigeben und mit 
Freunden teilen! http://www.freemail.web.de/club/smartdrive_ttc.htm/?mc=021134



From jacek at codeweavers.com  Mon Nov 19 18:55:00 2007
From: jacek at codeweavers.com (Jacek Caban)
Date: Tue, 20 Nov 2007 01:55:00 +0100
Subject: Missed Patches
In-Reply-To: <fhsu61$qcu$1@ger.gmane.org>
References: <fhsu61$qcu$1@ger.gmane.org>
Message-ID: <47423064.5060209@codeweavers.com>

Alistair Leslie-Hughes wrote:
> Hi,
>     Is there any reason the following patches haven't been applied?
>   
[...]

> mshtml: Provide support for the IInternetProtocol Interface
>   

The patch is obviously wrong. Did you run tests with Gecko installed? It
probably won't fail, but you will see some tests skipped.


Jacek


From leslie_alistair at hotmail.com  Mon Nov 19 19:22:26 2007
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Tue, 20 Nov 2007 12:22:26 +1100
Subject: Missed Patches
References: <fhsu61$qcu$1@ger.gmane.org> <47423064.5060209@codeweavers.com>
Message-ID: <fhtctq$ad6$1@ger.gmane.org>


"Jacek Caban" <jacek at codeweavers.com> wrote in message 
news:47423064.5060209 at codeweavers.com...
> Alistair Leslie-Hughes wrote:
>> Hi,
>>     Is there any reason the following patches haven't been applied?
>>
> [...]
>
>> mshtml: Provide support for the IInternetProtocol Interface
>>
>
> The patch is obviously wrong. Did you run tests with Gecko installed? It
> probably won't fail, but you will see some tests skipped.
>
>
Yes I did have Gecko installed when I ran the tests.  Ok, I see the skipped 
tests.

So I need to Run tests again without Gecko installed? (Correct test if 
needed)

Any other pointers?

Best Regards
 Alistair Leslie-Hughes 





From jacek at codeweavers.com  Mon Nov 19 19:58:06 2007
From: jacek at codeweavers.com (Jacek Caban)
Date: Tue, 20 Nov 2007 02:58:06 +0100
Subject: Missed Patches
In-Reply-To: <fhtctq$ad6$1@ger.gmane.org>
References: <fhsu61$qcu$1@ger.gmane.org> <47423064.5060209@codeweavers.com>
	<fhtctq$ad6$1@ger.gmane.org>
Message-ID: <47423F2E.5040005@codeweavers.com>

Alistair Leslie-Hughes wrote:
> Any other pointers?
>   
This interface shouldn't be available in BSCallback. You probably added
it because of the FIXME message. I've sent a patch that silences it. In
the future you should check if interface is available in Windows before
adding them to Wine.

Jacek


From truiken at gmail.com  Mon Nov 19 20:31:31 2007
From: truiken at gmail.com (James Hawkins)
Date: Mon, 19 Nov 2007 20:31:31 -0600
Subject: bits: Description of patch set (resend 2) (0/26)
In-Reply-To: <20071120001951.GA28646@knuth.cs.hmc.edu>
References: <20071120001951.GA28646@knuth.cs.hmc.edu>
Message-ID: <22821af30711191831y59d8f119x4ff29be32cd5760@mail.gmail.com>

On Nov 19, 2007 6:19 PM, Roy Shea <roy at cs.hmc.edu> wrote:
> Howdy,
>
> This is another resend of the BITS patch set.  This resend changes
> svnhost to be ANSI based, merges patches 25 and 26 (old numbering),
> and removes extra headers and linked libraries.
>

Any particular reason for using ansi?  Generally we're moving
everything towards unicode and away from ansi.  Also, the entire patch
set is relatively large, and you might want to consider breaking the
set up into chunks (svnhost, bits cleanup etc, bits interface impl)
and waiting till the first chunk is committed before moving on to the
next.  That'll make it easier to get the patches committed (assuming
they don't get accepted this time) and it'll keep the mail count down
for list members.

-- 
James Hawkins


From truiken at gmail.com  Mon Nov 19 20:36:45 2007
From: truiken at gmail.com (James Hawkins)
Date: Mon, 19 Nov 2007 20:36:45 -0600
Subject: mshtml #6: Change FIXME that is usually invalid to TRACE.
In-Reply-To: <47422F9D.8010407@codeweavers.com>
References: <47422F9D.8010407@codeweavers.com>
Message-ID: <22821af30711191836u24b8c972j56a40b70a19fd4f7@mail.gmail.com>

On Nov 19, 2007 6:51 PM, Jacek Caban <jacek at codeweavers.com> wrote:
> ---
>  dlls/mshtml/navigate.c |    4 ++--
>  1 files changed, 2 insertions(+), 2 deletions(-)
>

How about a warn instead of a trace?  That is unless all the correct
interfaces are already available, and any other requested interface
shouldn't be available.

-- 
James Hawkins


From roy at cs.hmc.edu  Mon Nov 19 22:53:49 2007
From: roy at cs.hmc.edu (Roy Shea)
Date: Mon, 19 Nov 2007 20:53:49 -0800
Subject: bits: Description of patch set (resend 2) (0/26)
In-Reply-To: <22821af30711191831y59d8f119x4ff29be32cd5760@mail.gmail.com>
References: <20071120001951.GA28646@knuth.cs.hmc.edu>
	<22821af30711191831y59d8f119x4ff29be32cd5760@mail.gmail.com>
Message-ID: <20071120045349.GA3955@knuth.cs.hmc.edu>

On Mon, Nov 19, 2007 at 08:31:31PM -0600, James Hawkins wrote:
> On Nov 19, 2007 6:19 PM, Roy Shea <roy at cs.hmc.edu> wrote:
> > Howdy,
> >
> > This is another resend of the BITS patch set.  This resend changes
> > svnhost to be ANSI based, merges patches 25 and 26 (old numbering),
> > and removes extra headers and linked libraries.
> >
> 
> Any particular reason for using ansi?  Generally we're moving
> everything towards unicode and away from ansi.  Also, the entire patch
> set is relatively large, and you might want to consider breaking the
> set up into chunks (svnhost, bits cleanup etc, bits interface impl)
> and waiting till the first chunk is committed before moving on to the
> next.  That'll make it easier to get the patches committed (assuming
> they don't get accepted this time) and it'll keep the mail count down
> for list members.
> 

I looked into switching svchost to ansi since there is no unicode
version of GetProcAddress (used within svchost).  I ended up asking on
winehackers if there is a preference between unicode and ansi, but
guessed that it didn't much matter since there was no strong response
either way.  Rather than juggle ansi and unicode strings, I bumped
svchost over to ansi.

Good to know that unicode is the way to go.  I'll send a unicode
version of the patch out in a few minutes.  I'll also see what I can
do about breaking up the patch set for future resubmissions.

Peace,
-Roy





From patrol at sinus.cz  Mon Nov 19 23:26:44 2007
From: patrol at sinus.cz (Pavel Troller)
Date: Tue, 20 Nov 2007 06:26:44 +0100
Subject: wininet: InternetAttemptConnect() Stub
In-Reply-To: <3a768c550711190728q13e3123br3d02893f0a5b6da5@mail.gmail.com>
References: <20071119143058.GA10607@tangens.sinus.cz>
	<3a768c550711190728q13e3123br3d02893f0a5b6da5@mail.gmail.com>
Message-ID: <20071120052644.GA6968@tangens.sinus.cz>

> Hi Pavel,
> 
> On Nov 19, 2007 6:30 AM, Pavel Troller <patrol at sinus.cz> wrote:
> >   I have a problem running an offline client for ordering photo prints from
> > digital cameras.
> >   Even it is an "offline" client, it requires the computer to be online.
> >   It seems that in wine, it feels to be offline, thus refusing further
> > operation with a dialog saying something like "Internet connection unavailable"
> > and terminating. The machine is normally connected to the LAN with full net
> > availability.
> >   The following is its full console log.
> >
> > patrol at gonio:~/.wine/drive_c/Program Files/droxi/OfflineClient$ wine PhotoOfflineClient.exe
> > fixme:wininet:InternetGetConnectedState always returning LAN connection.
> > fixme:win:SetLayeredWindowAttributes (0x10030,0x00000000,255,2): stub!
> > fixme:win:LockWindowUpdate (0x10028), partial stub!
> > fixme:win:LockWindowUpdate ((nil)), partial stub!
> > fixme:shdocvw:OleObject_Close (0x199510)->(1)
> > fixme:wininet:InternetAttemptConnect Stub
> 
> I don't think either wininet fixme is telling you anything worthwhile.
>  As you already pointed out, the first one seems okay:  a LAN
> connection is what it most likely expects anyway.  The second stub, if
> you look at the source, returns ERROR_SUCCESS, which is what MSDN says
> it should return if it succeeds.
> 
> I think you're going to have to try a +relay log and scanning through
> it ti figure out why it thinks it's offline.
> --Juan
> 
Just for your info, you're right, I was not carefull enough to verify what's
happening and started writing too soon. The program is communicating happily
with a lot of servers, downloads a plenty of files... and then it writes that
the connection doesn't work. It seems that either it gets something wrong
from one of the servers, or it crashes for another reason and the message
is disinformative. I've captured its net activities by Wireshark and we are
going to compare them with the log gathered when it runs on windows.
  With regards, Pavel Troller


From dmitry at codeweavers.com  Tue Nov 20 00:25:57 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 20 Nov 2007 14:25:57 +0800
Subject: server: Change the get_dll_info server request to allow
	retrievingthe image file name of a process.
References: <474206AA.7020209@codeweavers.com>
Message-ID: <00df01c82b3e$3848f010$6700fea9@DMITRY>

"Robert Shearman" <rob at codeweavers.com> wrote:

> +        if (req->exe_module)
> +            dll = list_head( &process->dlls ) ?
> +                LIST_ENTRY(list_head( &process->dlls ), struct process_dll, entry) : NULL;
> +        else
> +            dll = find_process_dll( process, req->base_address );

Is it really necessary to introduce the exe_module request parameter?
Main executable has its own base address which should work just fine
in find_process_dll().

-- 
Dmitry.


From dmitry at codeweavers.com  Tue Nov 20 00:33:09 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 20 Nov 2007 14:33:09 +0800
Subject: kernel32 [1/5]: Export part of UnhandledExceptionHandler as
	aninternal Wine function.
References: <20071120022557.GA26712@linux.ucla.edu>
Message-ID: <011801c82b3f$3a353a40$6700fea9@DMITRY>

"Dan Hipschman" <dsh at linux.ucla.edu> wrote:

> This patch exports the part of UnhandledExceptionFilter that sets a page
> as either writable or executable in some cases to allow continued execution
> as an internal wine function.  This is used in the next patch to implement
> exception handling in code generated by WIDL.  It needs to be able to do
> this because if we can continue execution in these cases then we shouldn't
> wind down the handler stack.  We also shouldn't execute an "except" block
> if we can continue normally.

There is no need to introduce Wine-specific exception handlers, there is a
sample in dlls/ntdll/tests/exception.c how to add an exception handler without
Wine-specific hacks. A DIB exception handler in dlls/winex11.drv/dib.c is
another one.

-- 
Dmitry.


From patrol at sinus.cz  Tue Nov 20 01:49:43 2007
From: patrol at sinus.cz (Pavel Troller)
Date: Tue, 20 Nov 2007 08:49:43 +0100
Subject: Unimplemented function KERNEL32.dll.FindFirstVolumeW
In-Reply-To: <2095502429@web.de>
References: <2095502429@web.de>
Message-ID: <20071120074943.GA16834@tangens.sinus.cz>

> i`ve tracked this down to a watchdog issue.
> 
> whenever i do "cat /dev/watchdog" - my system reboots after ~1 minute.
> 
> i`ve contacted the maintainer of the watchdog subsystem.
> 
> looks like a bug to me.
> 
> thanks
> roland
> 
Hi!
  I think it's not a bug, it's a normal behaviour.
  The kernel watchdog is normally not active when the machine is booted,
waiting for an user-space daemon to start handling of /dev/watchdog file
(opening it and manipulating it from time to time to show that it's still
alive). When you cat the file, kernel recognizes it as that such an app
is taking over control of the watchdog and starts it. However, because
cat closes the file immediately, it is not handled anymore and kernel
recognizes it as a userspace problem, thus rebooting the machine after
the timeout expires.
  With regards, Pavel Troller


From rob at codeweavers.com  Tue Nov 20 03:10:48 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Tue, 20 Nov 2007 09:10:48 +0000
Subject: server: Change the get_dll_info server request to allow
	retrievingthe image file name of a process.
In-Reply-To: <00df01c82b3e$3848f010$6700fea9@DMITRY>
References: <474206AA.7020209@codeweavers.com>
	<00df01c82b3e$3848f010$6700fea9@DMITRY>
Message-ID: <4742A498.90006@codeweavers.com>

Dmitry Timoshkov wrote:
> "Robert Shearman" <rob at codeweavers.com> wrote:
>
>> +        if (req->exe_module)
>> +            dll = list_head( &process->dlls ) ?
>> +                LIST_ENTRY(list_head( &process->dlls ), struct 
>> process_dll, entry) : NULL;
>> +        else
>> +            dll = find_process_dll( process, req->base_address );
>
> Is it really necessary to introduce the exe_module request parameter?

Yes.

> Main executable has its own base address which should work just fine
> in find_process_dll().

Really? http://msdn2.microsoft.com/en-us/library/f7f5138s(VS.71).aspx

-- 
Rob Shearman



From julliard at winehq.org  Tue Nov 20 03:19:06 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 20 Nov 2007 10:19:06 +0100
Subject: server: Change the get_dll_info server request to allow
	retrievingthe image file name of a process.
In-Reply-To: <4742A498.90006@codeweavers.com> (Robert Shearman's message of
	"Tue, 20 Nov 2007 09:10:48 +0000")
References: <474206AA.7020209@codeweavers.com>
	<00df01c82b3e$3848f010$6700fea9@DMITRY>
	<4742A498.90006@codeweavers.com>
Message-ID: <87abp9qnp1.fsf@wine.dyndns.org>

Robert Shearman <rob at codeweavers.com> writes:

> Dmitry Timoshkov wrote:
>> Is it really necessary to introduce the exe_module request parameter?
>
> Yes.
>
>> Main executable has its own base address which should work just fine
>> in find_process_dll().
>
> Really? http://msdn2.microsoft.com/en-us/library/f7f5138s(VS.71).aspx

The usual convention is that a NULL module address means the main exe, I
think that would be appropriate here.

-- 
Alexandre Julliard
julliard at winehq.org


From dmitry at codeweavers.com  Tue Nov 20 03:33:27 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 20 Nov 2007 17:33:27 +0800
Subject: server: Change the get_dll_info server request to
	allowretrievingthe image file name of a process.
References: <474206AA.7020209@codeweavers.com><00df01c82b3e$3848f010$6700fea9@DMITRY>
	<4742A498.90006@codeweavers.com>
Message-ID: <003801c82b58$699d6be0$6700fea9@DMITRY>

"Robert Shearman" <rob at codeweavers.com> wrote:

>> Main executable has its own base address which should work just fine
>> in find_process_dll().
> 
> Really? http://msdn2.microsoft.com/en-us/library/f7f5138s(VS.71).aspx

I don't see how the page above is related to what I said. Main exe module
is being added to the process dlls list at the end of the initialization
process by load_dll server call with its real base address.

-- 
Dmitry.


From rob at codeweavers.com  Tue Nov 20 04:01:13 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Tue, 20 Nov 2007 10:01:13 +0000
Subject: server: Change the get_dll_info server request to
	allowretrievingthe image file name of a process.
In-Reply-To: <003801c82b58$699d6be0$6700fea9@DMITRY>
References: <474206AA.7020209@codeweavers.com><00df01c82b3e$3848f010$6700fea9@DMITRY>
	<4742A498.90006@codeweavers.com>
	<003801c82b58$699d6be0$6700fea9@DMITRY>
Message-ID: <4742B069.6090705@codeweavers.com>

Dmitry Timoshkov wrote:
> "Robert Shearman" <rob at codeweavers.com> wrote:
>
>>> Main executable has its own base address which should work just fine
>>> in find_process_dll().
>>
>> Really? http://msdn2.microsoft.com/en-us/library/f7f5138s(VS.71).aspx
>
> I don't see how the page above is related to what I said. Main exe module
> is being added to the process dlls list at the end of the initialization
> process by load_dll server call with its real base address.

I don't see how that is relevant either. We don't know the main exe 
module base address in anything other than the server and that one process.

-- 
Rob Shearman



From leslie_alistair at hotmail.com  Mon Nov 19 20:12:54 2007
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Tue, 20 Nov 2007 13:12:54 +1100
Subject: Missed Patches
References: <fhsu61$qcu$1@ger.gmane.org>
	<47423064.5060209@codeweavers.com><fhtctq$ad6$1@ger.gmane.org>
	<47423F2E.5040005@codeweavers.com>
Message-ID: <fhtfsb$hct$1@ger.gmane.org>


"Jacek Caban" <jacek at codeweavers.com> wrote in message 
news:47423F2E.5040005 at codeweavers.com...
> Alistair Leslie-Hughes wrote:
>> Any other pointers?
>>
> This interface shouldn't be available in BSCallback. You probably added
> it because of the FIXME message. I've sent a patch that silences it. In
> the future you should check if interface is available in Windows before
> adding them to Wine.
>
Yes, I did add it beacuse of the FIXME,  but that is beacuse the application 
Im trying to get running uses it.  (maybe Indirectly)

Without the patch I just get a access Voliation.  I see that it is wrong. 
How/where should I Implement it to stop the access
Voliation. I can provide stacktrace if needed.

Best Regards
Alistair leslie-Hughes





From devzero at web.de  Tue Nov 20 02:13:43 2007
From: devzero at web.de (devzero at web.de)
Date: Tue, 20 Nov 2007 09:13:43 +0100
Subject: Unimplemented function KERNEL32.dll.FindFirstVolumeW
Message-ID: <2096050935@web.de>

mhhh - since it cost me more then one hour to find out why my machine reboots and triggering a reboot by just _reading_ a file on my system, device node or not is at least very weird behaviour from a user`s perspective.

>waiting for an user-space daemon to start handling of /dev/watchdog file  (opening it and manipulating it from time to time to show that it's still alive.
>When you cat the file, kernel recognizes it as that such an app is taking over control of the watchdog and starts it. 
it`s looks a little bit too simple for me. triggering a reboot just by some simple open() and read() and close() ?
let`s wait what the maintainer has to tell.

regards
roland

> Hi!
>   I think it's not a bug, it's a normal behaviour.
>   The kernel watchdog is normally not active when the machine is booted,
> waiting for an user-space daemon to start handling of /dev/watchdog file
> (opening it and manipulating it from time to time to show that it's still
> alive). When you cat the file, kernel recognizes it as that such an app
> is taking over control of the watchdog and starts it. However, because
> cat closes the file immediately, it is not handled anymore and kernel
> recognizes it as a userspace problem, thus rebooting the machine after
> the timeout expires.
>   With regards, Pavel Troller
> 


> -----Urspr?ngliche Nachricht-----
> Von: Pavel Troller <patrol at sinus.cz>
> Gesendet: 20.11.07 08:49:53
> An: devzero at web.de
> CC: Hans Leidekker <hans at it.vu.nl>, wine-devel at winehq.org
> Betreff: Re: Unimplemented function KERNEL32.dll.FindFirstVolumeW


> 
> > i`ve tracked this down to a watchdog issue.
> > 
> > whenever i do "cat /dev/watchdog" - my system reboots after ~1 minute.
> > 
> > i`ve contacted the maintainer of the watchdog subsystem.
> > 
> > looks like a bug to me.
> > 
> > thanks
> > roland
> > 
> Hi!
>   I think it's not a bug, it's a normal behaviour.
>   The kernel watchdog is normally not active when the machine is booted,
> waiting for an user-space daemon to start handling of /dev/watchdog file
> (opening it and manipulating it from time to time to show that it's still
> alive). When you cat the file, kernel recognizes it as that such an app
> is taking over control of the watchdog and starts it. However, because
> cat closes the file immediately, it is not handled anymore and kernel
> recognizes it as a userspace problem, thus rebooting the machine after
> the timeout expires.
>   With regards, Pavel Troller
> 


______________________________________________________________________________
Jetzt neu! Im riesigen WEB.DE Club SmartDrive Dateien freigeben und mit 
Freunden teilen! http://www.freemail.web.de/club/smartdrive_ttc.htm/?mc=021134



From David.Adam at math.cnrs.fr  Tue Nov 20 03:13:56 2007
From: David.Adam at math.cnrs.fr (David.Adam at math.cnrs.fr)
Date: Tue, 20 Nov 2007 10:13:56 +0100
Subject: d3dx8 [patch 1/10] Implement D3DXPlaneFromPointNormal
Message-ID: <20071120101356.09qdc4mkr488so44@webmail.math.cnrs.fr>

Hello,

In the beginning, I thought to share the code between d3drm and d3dx8,  
but unfortunelaty, it was not a good idea, since the structure  
quaternion is not the same in the both dll (definitively 4 floats, but  
4 floats in d3dx8, 1 float and a d3drmvector in d3drm). So, it was not  
pretty.

Moreover, Once I asked to Alexandre what was the best method to  
implement d3dx9__.dll. He answered to implement the maximum of  
functions in d3dx8 and to call these functions from d3dx9__.dll. I  
proposed the idea of wined3dx.dll and he found that it was not a good  
idea.

So, the basis dll is d3dx8 and we consider d3dx9__.dll as a wrapper  
(at least, for the math functions)

Thunderbird was interested in implementing the other functions.  
Anyway, I am interested in it too. And also, I am interesting in  
completing d3drm since there still are a few bugs related to this dll.

To finish my post: today (or tommorrow) I shall send the last patch  
for math-functions in d3dx8.

The real job will begin then :D :D

David





From patrol at sinus.cz  Tue Nov 20 07:10:08 2007
From: patrol at sinus.cz (Pavel Troller)
Date: Tue, 20 Nov 2007 14:10:08 +0100
Subject: Unimplemented function KERNEL32.dll.FindFirstVolumeW
In-Reply-To: <2096050935@web.de>
References: <2096050935@web.de>
Message-ID: <20071120131008.GA6710@tangens.sinus.cz>

> mhhh - since it cost me more then one hour to find out why my machine reboots and triggering a reboot by just _reading_ a file on my system, device node or not is at least very weird behaviour from a user`s perspective.
> 
> >waiting for an user-space daemon to start handling of /dev/watchdog file  (opening it and manipulating it from time to time to show that it's still alive.
> >When you cat the file, kernel recognizes it as that such an app is taking over control of the watchdog and starts it. 
> it`s looks a little bit too simple for me. triggering a reboot just by some simple open() and read() and close() ?
> let`s wait what the maintainer has to tell.
> 
> regards
> roland
> 
OK, Roland, but it's Linux :-). Isn't "rm -rf /" a simple command ? Yes, it is :-). Less keystrokes than "cat /dev/watchdog". And its impact is even more catastrophic :-). It's the reason why working as root is so much discouraged.
  With regards, Pavel Troller


From juan.lang at gmail.com  Tue Nov 20 07:15:32 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 20 Nov 2007 05:15:32 -0800
Subject: bits: Description of patch set (resend 2) (0/26)
In-Reply-To: <20071120045349.GA3955@knuth.cs.hmc.edu>
References: <20071120001951.GA28646@knuth.cs.hmc.edu>
	<22821af30711191831y59d8f119x4ff29be32cd5760@mail.gmail.com>
	<20071120045349.GA3955@knuth.cs.hmc.edu>
Message-ID: <3a768c550711200515v293b32a2w785cafbc8cbf661e@mail.gmail.com>

> I looked into switching svchost to ansi since there is no unicode
> version of GetProcAddress (used within svchost).

In general Unicode is the way to go, but there's no reason you can't
use Unicode for those APIs that are, and ANSI for those that aren't,
specifically, when querying the function name to be used with
GetProcAddress.

--Juan


From tom at dbservice.com  Tue Nov 20 11:26:33 2007
From: tom at dbservice.com (Tomas Carnecky)
Date: Tue, 20 Nov 2007 18:26:33 +0100
Subject: Wine and LD_PRELOAD
In-Reply-To: <200711182014.43381.stefandoesinger@gmx.at>
References: <200711181713.20173.lionel.tricon@free.fr>
	<200711182014.43381.stefandoesinger@gmx.at>
Message-ID: <474318C9.8030103@dbservice.com>

Stefan D?singer wrote:
> Am Sonntag, 18. November 2007 17:13:20 schrieb Lionel Tricon:
>> Hi wine list,
>>
>> I am currently working for the next generation of the klik project (1
>> application = 1 file) and we actualy face some troubles with picasa which
>> is running under linux thanks to wine.
>>
>> It seems that wine deal badly with the LD_PRELOAD feature which is one of
>> the main composant we use to virtualize and execute the application (with
>> fuse for the underlying filesystem).
>>
>> Is there a way to force wine to go through LD_PRELOAD (to overload some
>> system calls) ? or this limitation is driven by the architecture ?
> I think wine dlopen()s many libraries instead of linking dynamically to them. 
> This makes the build environment more independent of the runtime environment, 
> and we can provide binary builds with all features enabled, and they will 
> still run if the user's system does not have all the libs.
> 
> We had an issue like that with libGL.so a long time back, and it was fixed by 
> changing some parameter to dlopen. Does anyone remember what that was, and if 
> this can be done for the other libraries too?
> 

IIRC the problem was that wine did dlopen(libGL.so) and then dlsym()
directly on the returned handle. That made preloading libGL using
LD_PRELOAD impossible. The change that was made was to use RTLD_DEFAULT
instead of the library handle in dlsym().

Now however wine should use RPATH which can be overriden by
LD_LIBRARY_PATH so preloading libraries should be easier. Now it's
possible to use LD_LIBRARY_PATH to load a different libGL, don't know
how it works with other libraries though.

I don't think LD_PRELOAD will ever work as long as wine uses dlsym() on
the handle that dlopen() returns. You could try LD_LIBRARY_PATH though,
or change every wine_dlsym() to use RTLD_DEFAULT and see if that solves
your problems

The details are all fuzzy in my head since it's so long ago when I
fought with LD_PRELOAD/LD_LIBRARY_PATH. But that is the best I can remember.

btw, wine again uses the actual handle in dlsym, I don't know when that
was reintroduced, but don't bother changing it as wine now uses RPATH on
platforms that support it, from dlls/winex11.drv/opengl.c:
... = wine_dlsym(opengl_handle, "glXGetProcAddressARB", NULL, 0);

tom


From truiken at gmail.com  Tue Nov 20 15:57:43 2007
From: truiken at gmail.com (James Hawkins)
Date: Tue, 20 Nov 2007 13:57:43 -0800
Subject: [0/3] RSA AES provider to rsaenh
In-Reply-To: <36bf289b0711201043g2cc9a597kbfe0d1c7c951291f@mail.gmail.com>
References: <36bf289b0711201043g2cc9a597kbfe0d1c7c951291f@mail.gmail.com>
Message-ID: <22821af30711201357t6a5ce4f5kb1559c5b1a11ec1f@mail.gmail.com>

On 11/20/07, Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
> Hi,
>
> This is a description of patch series which I am now going to send.
> It adds the new Enhanced RSA AES provider to the rsaenh.
> The one application which I know uses it is Office 2007.
> The first patch contains the tests for the RSA AES provider.
> the second patch  contains the RSA AES provider implementation
> the last patch removes the todo's in the tests.
>
> The implementation and tests have been verified by Juan Lang.
>

You can't fix the tests and remove the todo_wines in separate patches.
 The tests will fail inbetween commits.

-- 
James Hawkins


From infyquest at gmail.com  Tue Nov 20 16:16:29 2007
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Tue, 20 Nov 2007 16:16:29 -0600
Subject: [0/3] RSA AES provider to rsaenh
In-Reply-To: <22821af30711201357t6a5ce4f5kb1559c5b1a11ec1f@mail.gmail.com>
References: <36bf289b0711201043g2cc9a597kbfe0d1c7c951291f@mail.gmail.com>
	<22821af30711201357t6a5ce4f5kb1559c5b1a11ec1f@mail.gmail.com>
Message-ID: <36bf289b0711201416p6c637affwdef2be4b2caad2e4@mail.gmail.com>

On Nov 20, 2007 3:57 PM, James Hawkins <truiken at gmail.com> wrote:
>
> On 11/20/07, Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
> > Hi,
> >
> > This is a description of patch series which I am now going to send.
> > It adds the new Enhanced RSA AES provider to the rsaenh.
> > The one application which I know uses it is Office 2007.
> > The first patch contains the tests for the RSA AES provider.
> > the second patch  contains the RSA AES provider implementation
> > the last patch removes the todo's in the tests.
> >
> > The implementation and tests have been verified by Juan Lang.
> >
>
> You can't fix the tests and remove the todo_wines in separate patches.
During the try 2, there were failures in the tests.
So I resubmited them, by changing the parameters.
As I accidentally used used wrong parameters.
>  The tests will fail inbetween commits.
The test fail due to missing implementation, Hence I put them in todo's.
After the implementation is there, they do not fail.
I think thats the procedure followed.
I have put the remove todo's in separate patch, as its large.
--
VJ


From juan.lang at gmail.com  Tue Nov 20 16:23:25 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 20 Nov 2007 14:23:25 -0800
Subject: [0/3] RSA AES provider to rsaenh
In-Reply-To: <36bf289b0711201416p6c637affwdef2be4b2caad2e4@mail.gmail.com>
References: <36bf289b0711201043g2cc9a597kbfe0d1c7c951291f@mail.gmail.com>
	<22821af30711201357t6a5ce4f5kb1559c5b1a11ec1f@mail.gmail.com>
	<36bf289b0711201416p6c637affwdef2be4b2caad2e4@mail.gmail.com>
Message-ID: <3a768c550711201423w662d87cak969a5e3db734081a@mail.gmail.com>

> The test fail due to missing implementation, Hence I put them in todo's.
> After the implementation is there, they do not fail.
> I think thats the procedure followed.
> I have put the remove todo's in separate patch, as its large.

James is correct, patches 2 and 3 should be concatenated.  2 is
already necessarily large, and adding 3 to it doesn't add much to its
size.
--Juan


From infyquest at gmail.com  Tue Nov 20 16:29:17 2007
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Tue, 20 Nov 2007 16:29:17 -0600
Subject: [0/3] RSA AES provider to rsaenh
In-Reply-To: <36bf289b0711201428u3d78f528h50f7ddc34c2dea7f@mail.gmail.com>
References: <36bf289b0711201043g2cc9a597kbfe0d1c7c951291f@mail.gmail.com>
	<22821af30711201357t6a5ce4f5kb1559c5b1a11ec1f@mail.gmail.com>
	<36bf289b0711201416p6c637affwdef2be4b2caad2e4@mail.gmail.com>
	<3a768c550711201423w662d87cak969a5e3db734081a@mail.gmail.com>
	<36bf289b0711201428u3d78f528h50f7ddc34c2dea7f@mail.gmail.com>
Message-ID: <36bf289b0711201429w3a86b2f0i734043a5be312b74@mail.gmail.com>

On Nov 20, 2007 4:23 PM, Juan Lang <juan.lang at gmail.com> wrote:
> > The test fail due to missing implementation, Hence I put them in todo's.
> > After the implementation is there, they do not fail.
> > I think thats the procedure followed.
> > I have put the remove todo's in separate patch, as its large.
>
> James is correct, patches 2 and 3 should be concatenated.  2 is
> already necessarily large, and adding 3 to it doesn't add much to its
> size.
> --Juan
>
Damn, I have to reset the git tree.
Then apply patches manually and resend them :(
Should I wait.................? :(
---
VJ


From juan.lang at gmail.com  Tue Nov 20 16:36:28 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 20 Nov 2007 14:36:28 -0800
Subject: [0/3] RSA AES provider to rsaenh
In-Reply-To: <36bf289b0711201428u3d78f528h50f7ddc34c2dea7f@mail.gmail.com>
References: <36bf289b0711201043g2cc9a597kbfe0d1c7c951291f@mail.gmail.com>
	<22821af30711201357t6a5ce4f5kb1559c5b1a11ec1f@mail.gmail.com>
	<36bf289b0711201416p6c637affwdef2be4b2caad2e4@mail.gmail.com>
	<3a768c550711201423w662d87cak969a5e3db734081a@mail.gmail.com>
	<36bf289b0711201428u3d78f528h50f7ddc34c2dea7f@mail.gmail.com>
Message-ID: <3a768c550711201436l445ac511hba1656f0dfaa505@mail.gmail.com>

> Damn, I have to reset the git tree.
> Then apply patches manually and resend them :(

This isn't hard.  Assuming you have these as the last three patches in
your tree:
git reset HEAD~2
git commit -a
This will rewind your tree two steps without changing your local
files, then commit them again.

The more manual method, assuming you have the last patches named 2 and 3:
git reset --hard HEAD~2
patch -p1 < 2
patch -p1 < 3
git commit -a

This latter method isn't necessary in this case, but it sometimes
comes in handy when you have some patches intermingled, and you want
to commit several of them in a bunch without committing some in
between.  E.g. if you wanted to merge patches 1 and 3 into a single
patch, you could do it this way instead.

HTH,
--Juan


From amaranth at ubuntu.com  Tue Nov 20 16:38:12 2007
From: amaranth at ubuntu.com (Travis Watkins)
Date: Tue, 20 Nov 2007 16:38:12 -0600
Subject: [0/3] RSA AES provider to rsaenh
In-Reply-To: <36bf289b0711201429w3a86b2f0i734043a5be312b74@mail.gmail.com>
References: <36bf289b0711201043g2cc9a597kbfe0d1c7c951291f@mail.gmail.com>
	<22821af30711201357t6a5ce4f5kb1559c5b1a11ec1f@mail.gmail.com>
	<36bf289b0711201416p6c637affwdef2be4b2caad2e4@mail.gmail.com>
	<3a768c550711201423w662d87cak969a5e3db734081a@mail.gmail.com>
	<36bf289b0711201428u3d78f528h50f7ddc34c2dea7f@mail.gmail.com>
	<36bf289b0711201429w3a86b2f0i734043a5be312b74@mail.gmail.com>
Message-ID: <adca365a0711201438g37e3f21bke4048b6f0bff8045@mail.gmail.com>

On Nov 20, 2007 4:29 PM, Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
> Damn, I have to reset the git tree.
> Then apply patches manually and resend them :(
> Should I wait.................? :(
> ---
> VJ
>

You should be able to join the commits with git-rebase then regenerate
the patches.


-- 
Travis Watkins
http://www.realistanew.com


From gav at transgaming.com  Tue Nov 20 22:42:18 2007
From: gav at transgaming.com (Gavriel State)
Date: Tue, 20 Nov 2007 23:42:18 -0500
Subject: TransGaming's dpnet (DirectPlay 8)
Message-ID: <4743B72A.5010408@transgaming.com>

Hi all,

On #winehackers the other day, kblin asked about whether TransGaming had 
a Direct Play implementation.  The answer is that we have something that 
was worked on for a while but never completed.  We have had some partial 
success with it in the initial connection stages, but never pushed it 
much beyond that.

Enclosed here is a patch to today's WineHQ git tree with our dpnet 
implementation in the hopes that someone finds it useful.  Beyond 
ensuring that it compiles and links, it has not been tested at all with 
WineHQ.

Take care,
 -Gav

-- 
Gavriel State 
Founder & CTO
TransGaming Inc.
gav at transgaming.com
http://www.transgaming.com

Broadening The Playing Field

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: tg_dpnet.diff
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20071120/c04488e9/attachment-0001.txt 

From kai.blin at gmail.com  Wed Nov 21 03:34:26 2007
From: kai.blin at gmail.com (Kai Blin)
Date: Wed, 21 Nov 2007 10:34:26 +0100
Subject: TransGaming's dpnet (DirectPlay 8)
In-Reply-To: <4743B72A.5010408@transgaming.com>
References: <4743B72A.5010408@transgaming.com>
Message-ID: <200711211034.40561.kai.blin@gmail.com>

On Wednesday 21 November 2007 05:42:18 Gavriel State wrote:

Hi Gav,

> On #winehackers the other day, kblin asked about whether TransGaming had
> a Direct Play implementation.  The answer is that we have something that
> was worked on for a while but never completed.  We have had some partial
> success with it in the initial connection stages, but never pushed it
> much beyond that.

Thanks for getting back with that one faster than I managed to remind you 
about it.

> Enclosed here is a patch to today's WineHQ git tree with our dpnet
> implementation in the hopes that someone finds it useful.  Beyond
> ensuring that it compiles and links, it has not been tested at all with
> WineHQ.

I hope to get around playing with it later this week, I'm currently somewhat 
busy writing code I'm getting paid for. :)

Looking at dpnet/protocol.h I can see what you mean with partial (It's 
probably visible in other places as well, but my work on dplay so far was 
dissecting the over-wire traffic it generated). I can jump right in there.

Thanks for the code.
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071121/ca7a83de/attachment.pgp 

From julliard at winehq.org  Wed Nov 21 06:09:40 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 21 Nov 2007 13:09:40 +0100
Subject: wineprefixcreate: get xdg-user-dirs environment variables [1/2]
In-Reply-To: <558b2f5c0711161445p481908f2s26d657f810f8be1a@mail.gmail.com>
	(Lei Zhang's message of "Fri, 16 Nov 2007 14:45:49 -0800")
References: <558b2f5c0711161445p481908f2s26d657f810f8be1a@mail.gmail.com>
Message-ID: <87lk8rpzp7.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> We need to get the "well known" XDG user directories so we can symlink to them.

This should be done inside shell32, not in wineprefixcreate.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Nov 21 07:09:14 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 21 Nov 2007 14:09:14 +0100
Subject: ntdll: Shared manifests should have a less-strict version check
	performed when loading them as dependencies.
In-Reply-To: <4742E543.2030105@codeweavers.com> (Robert Shearman's message of
	"Tue, 20 Nov 2007 13:46:43 +0000")
References: <4742E543.2030105@codeweavers.com>
Message-ID: <87bq9npwxx.fsf@wine.dyndns.org>

Robert Shearman <rob at codeweavers.com> writes:

> ---
>  dlls/ntdll/actctx.c |   56
> +++++++++++++++++++++++++++++++-------------------
>  1 files changed, 35 insertions(+), 21 deletions(-)

Some test cases would be nice...

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Nov 21 07:11:47 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 21 Nov 2007 14:11:47 +0100
Subject: [6/9] d3d9: add a test for vertex shader input matching
In-Reply-To: <200711210035.49295.stefan@codeweavers.com> ("Stefan
	=?utf-8?Q?D=C3=B6singer=22's?=
	message of "Wed, 21 Nov 2007 00:35:49 +0100")
References: <200711210035.49295.stefan@codeweavers.com>
Message-ID: <877ikbpwto.fsf@wine.dyndns.org>

Stefan D?singer <stefan at codeweavers.com> writes:

> From 44f176ad4fcbc92ea66d8526670a1ec573ffa9f0 Mon Sep 17 00:00:00 2001
> From: Stefan Doesinger <stefan at codeweavers.com>
> Date: Mon, 19 Nov 2007 10:53:26 +0100
> Subject: [PATCH] d3d9: add a test for vertex shader input matching

This fails with the usual rounding errors:

../../../tools/runtest -q -P wine -M d3d9.dll -T ../../.. -p d3d9_test.exe.so visual.c && touch visual.ok
visual.c:4716: Test failed: Input test: Quad 1(2crd) returned color 0x00ffff7f, expected 0x00FFFF80
visual.c:4721: Test failed: Input test: Quad 3(2crd-wrongidx) returned color 0x00ff007f, expected 0x00FF0080
visual.c:4704: Test failed: Input test: Quad 1(2crd) returned color 0x00ffff7f, expected 0x00FFFF80
visual.c:4710: Test failed: Input test: Quad 3(2crd-wrongidx) returned color 0x00ff007f, expected 0x00FF0080
visual.c:4704: Test failed: Input test: Quad 1(2crd) returned color 0x00ffff7f, expected 0x00FFFF80
visual.c:4710: Test failed: Input test: Quad 3(2crd-wrongidx) returned color 0x00ff007f, expected 0x00FF0080
visual.c:4849: Test failed: Input test: Quad 2(color-ubyte) returned color 0x00407ffe, expected 0x014080ff
visual.c:4849: Test failed: Input test: Quad 2(color-ubyte) returned color 0x00407ffe, expected 0x014080ff
visual.c:4849: Test failed: Input test: Quad 2(color-ubyte) returned color 0x00407ffe, expected 0x014080ff
make[2]: *** [visual.ok] Error 9

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Nov 21 07:12:52 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 21 Nov 2007 14:12:52 +0100
Subject: [msvcrt] short tty reads don't imply EOF
In-Reply-To: <9e89675b0711170823v2d445774kad4c4235a41a7a3f@mail.gmail.com>
	(Damjan Jovanovic's message of "Sat, 17 Nov 2007 18:23:13 +0200")
References: <9e89675b0711170823v2d445774kad4c4235a41a7a3f@mail.gmail.com>
Message-ID: <873auzpwrv.fsf@wine.dyndns.org>

"Damjan Jovanovic" <damjan.jov at gmail.com> writes:

> Changelog:
> * For ttys, short reads don't mean we're at the end of the file.

That's not limited to ttys, other file types can have short reads too.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Nov 21 07:15:05 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 21 Nov 2007 14:15:05 +0100
Subject: Use GCC's -Wtype-limits
In-Reply-To: <Pine.LNX.4.64.0711170050250.8530@acrux.dbai.tuwien.ac.at>
	(Gerald Pfeifer's message of "Sat, 17 Nov 2007 00:55:14 +0100 (CET)")
References: <Pine.LNX.4.64.0711170050250.8530@acrux.dbai.tuwien.ac.at>
Message-ID: <87y7croi3q.fsf@wine.dyndns.org>

Gerald Pfeifer <gerald at pfeifer.com> writes:

> If applied, I will commit to address, directly and by engaging others,
> the occurrences of such warnings in Wine.

I'm not opposed to applying it, but you have to fix the warnings first,
as far as possible the default build should not trigger any warnings.

-- 
Alexandre Julliard
julliard at winehq.org


From lich at math.spbu.ru  Wed Nov 21 08:09:00 2007
From: lich at math.spbu.ru (Kirill K. Smirnov)
Date: Wed, 21 Nov 2007 18:09:00 +0400
Subject: something wrong with patches?
Message-ID: <200711211709.01003.lich@math.spbu.ru>

Hi,

Is there anything wrong with the following patches?

"winhelp: add basic support for ancient win3.0 help files"
http://www.winehq.org/pipermail/wine-patches/2007-November/046886.html

and

comctl32: Implemented algorithm is a mergesort, not a quicksort
http://www.winehq.org/pipermail/wine-patches/2007-November/046943.html

Did I miss something important?

Regards
Kirill


From Andrew.Talbot at talbotville.com  Wed Nov 21 12:34:44 2007
From: Andrew.Talbot at talbotville.com (Andrew Talbot)
Date: Wed, 21 Nov 2007 18:34:44 +0000
Subject: d3dx8 [patch 5/7] Implement D3DXQuaternionLn
References: <20071121172949.m4gclscr280wgsoc@webmail.math.cnrs.fr>
Message-ID: <fi1to5$dpr$1@ger.gmane.org>

David.Adam at math.cnrs.fr wrote:

> 
Hi David,

There was no code in this patch.

-- 
Andy.




From paul at astro.gla.ac.uk  Wed Nov 21 13:22:29 2007
From: paul at astro.gla.ac.uk (Paul Millar)
Date: Wed, 21 Nov 2007 20:22:29 +0100
Subject: Removing Windows and Solaris from the Downloads page
In-Reply-To: <200711181242.40243.paul@astro.gla.ac.uk>
References: <473E8DA1.2090101@open-vote.org> <473ECAC4.7000507@codeweavers.com>
	<200711181242.40243.paul@astro.gla.ac.uk>
Message-ID: <200711212022.29609.paul@astro.gla.ac.uk>

On Sunday 18 November 2007 12:42:40 Paul Millar wrote:
> That sounds promising.  I should be able to tweak the winetest.exe build
> infrastructure so it also build DLLs and executables without too much
> trouble.

OK, this now seems stable.

The DLLs and executables are built and packaged whenever winetest is rebuilt.  
They're available both from the old location:
  http://www.astro.gla.ac.uk/users/paulm/WRT/CrossBuilt/
or from a new one:
  http://quisquiliae.physics.gla.ac.uk/cross/results/

As with winetest.exe, they're only updated if the new binaries are different.  
The ZIP files are signed and there's are sym-links that always point to the 
most recent version.  For example:
  http://quisquiliae.physics.gla.ac.uk/cross/results/wine-exes-latest.zip

Cheers,

Paul.


From julliard at winehq.org  Wed Nov 21 14:13:19 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 21 Nov 2007 21:13:19 +0100
Subject: No release this week
Message-ID: <87lk8rnyqo.fsf@wine.dyndns.org>

Folks,

Because of the Thanksgiving weekend, there won't be a release this
Friday. 0.9.50 will most likely be on next Friday.

-- 
Alexandre Julliard
julliard at winehq.org


From truiken at gmail.com  Wed Nov 21 16:54:26 2007
From: truiken at gmail.com (James Hawkins)
Date: Wed, 21 Nov 2007 16:54:26 -0600
Subject: WineD3D: Implement detection of ATI cards with Mesa DRI drivers
In-Reply-To: <4744B680.3080906@rm.pp.ru>
References: <4744B417.2040501@rm.pp.ru> <4744B680.3080906@rm.pp.ru>
Message-ID: <22821af30711211454lb9252feuc3ae04fdb22a0f34@mail.gmail.com>

On Nov 21, 2007 4:51 PM, Roman Mamedov <roman at rm.pp.ru> wrote:
> Sorry, a small mistake. Always check everything twice, and when you
> checked twice - check the third time :(
>
> ---
>  dlls/wined3d/directx.c |    2 +-
>  1 files changed, 1 insertions(+), 1 deletions(-)
>
> diff --git a/dlls/wined3d/directx.c b/dlls/wined3d/directx.c
> index fa844b0..7e09014 100644
> --- a/dlls/wined3d/directx.c
> +++ b/dlls/wined3d/directx.c
> @@ -1145,7 +1145,7 @@ BOOL IWineD3DImpl_FillGLCaps(WineD3D_GL_Info
> *gl_info) {
>                  } else if (strstr(gl_info->gl_renderer, "R300")) { /*
> r300_dri - all R3xx and R4xx-based cards */
>                      gl_info->gl_card = CARD_ATI_RADEON_9500;
>                      vidmem = 128;
> -                } else if (strstr(gl_info->gl_renderer, "Radeon")) { /*
> radeon_dri, for all R3xx-based cards */
> +                } else if (strstr(gl_info->gl_renderer, "Radeon")) { /*
> radeon_dri - all R100-based cards */
>                      /* This one should be the last case, so if the word
> "Radeon" ever added to Mesa gl_renderer
>                       * string of R200 or R300, this detection code will
> keep working properly.
>                       */
> --
> 1.5.3.4
>

If you make a mistake, you have to fix the first patch and resend it.

-- 
James Hawkins


From truiken at gmail.com  Wed Nov 21 17:21:39 2007
From: truiken at gmail.com (James Hawkins)
Date: Wed, 21 Nov 2007 17:21:39 -0600
Subject: WineD3D: Implement detection of ATI cards with Mesa DRI drivers
In-Reply-To: <4744BC12.1030808@rm.pp.ru>
References: <4744BC12.1030808@rm.pp.ru>
Message-ID: <22821af30711211521j68d95a43lf91d6d7343d98544@mail.gmail.com>

On Nov 21, 2007 5:15 PM, Roman Mamedov <roman at rm.pp.ru> wrote:
> Hello.
>
> Presently, if an ATI card uses open-source DRI drivers from the Mesa
> project ( http://dri.freedesktop.org/wiki/ATI ), Wine will report it to
> Windows applications as being some generic nVIDIA model, based on D3D
> capabilities of the card.
>
> This patch adds detection of the used ATI video card, based on Mesa DRI
> module name, which is returned by drivers in GL Renderer string. In my
> opinion, returning even an approximate ATI card model should be better,
> than the present condition, disguising the ATI card as some equally
> generic model from nVIDIA. Also, the patch adds detection of VENDOR_MESA
> from GL Renderer string, as Mesa DRI drivers may have various things as
> GL Vendor, but the GL Renderer name always contains the string "Mesa".
> This patch resolves the bug #7267, "Lineage 2 complains about outdated
> NVIDIA drivers using ATI card with Mesa drivers" -
> http://bugs.winehq.org/show_bug.cgi?id=7267 .
>

If you send in a fixed patch, you need to add some variation of 'try
X' in the subject, where X is the number of tries you're on.  On top
of this, you need to say in the body what you've changed between
submissions.

-- 
James Hawkins


From roman at rm.pp.ru  Wed Nov 21 17:32:02 2007
From: roman at rm.pp.ru (Roman Mamedov)
Date: Thu, 22 Nov 2007 04:32:02 +0500
Subject: WineD3D: Implement detection of ATI cards with Mesa DRI drivers
In-Reply-To: <22821af30711211521j68d95a43lf91d6d7343d98544@mail.gmail.com>
References: <4744BC12.1030808@rm.pp.ru>
	<22821af30711211521j68d95a43lf91d6d7343d98544@mail.gmail.com>
Message-ID: <4744BFF2.3070804@rm.pp.ru>

James Hawkins wrote:
>> If you send in a fixed patch, you need to add some variation of 'try
>> X' in the subject, where X is the number of tries you're on.  On top
>> of this, you need to say in the body what you've changed between
>> submissions.

Thank you. I think I did mention the change in the body (just before the 
patch itself), maybe not very prominently, though. Sorry for the 
mistakes, it is the first time I submit a patch to Wine.


From stefan at codeweavers.com  Wed Nov 21 17:45:09 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Thu, 22 Nov 2007 00:45:09 +0100
Subject: WineD3D: Implement detection of ATI cards with Mesa DRI drivers
In-Reply-To: <4744BC12.1030808@rm.pp.ru>
References: <4744BC12.1030808@rm.pp.ru>
Message-ID: <200711220045.11280.stefan@codeweavers.com>

Am Donnerstag, 22. November 2007 00:15:30 schrieb Roman Mamedov:
> Hello.
>
> Presently, if an ATI card uses open-source DRI drivers from the Mesa
> project ( http://dri.freedesktop.org/wiki/ATI ), Wine will report it to
> Windows applications as being some generic nVIDIA model, based on D3D
> capabilities of the card.
The patch looks good to me content wise, but please attach it as an attachment 
to the mail instead of copypasting it into the mail. Also I am not sure if we 
should report R200 cards. They have pixel shader 1.x support on Windows, but 
Wine cannot implement this because the cards are too limited to support 
GL_ARB_fragment_program(~ ps 2.0), but there is no common extension that maps 
1.x pixel shaders, only an ATI specific one. Any volunteers for a 
GL_ATI_fragment_shader shader backend :-) ? On the other hand, those cards 
support a few features that older cards did not have, like vertex shaders or 
volume textures.

Also note that Alexandre is on holiday this week, so the patch won't be 
committed before next week.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071122/add5fcfa/attachment.pgp 

From thestig at google.com  Wed Nov 21 17:48:48 2007
From: thestig at google.com (Lei Zhang)
Date: Wed, 21 Nov 2007 15:48:48 -0800
Subject: wineprefixcreate: get xdg-user-dirs environment variables [1/2]
In-Reply-To: <87lk8rpzp7.fsf@wine.dyndns.org>
References: <558b2f5c0711161445p481908f2s26d657f810f8be1a@mail.gmail.com>
	<87lk8rpzp7.fsf@wine.dyndns.org>
Message-ID: <558b2f5c0711211548h70e066ej33624ecc99b60ca8@mail.gmail.com>

On Nov 21, 2007 4:09 AM, Alexandre Julliard <julliard at winehq.org> wrote:
> "Lei Zhang" <thestig at google.com> writes:
>
> > We need to get the "well known" XDG user directories so we can symlink to them.
>
> This should be done inside shell32, not in wineprefixcreate.
>
> --
> Alexandre Julliard
> julliard at winehq.org
>

xdg-user-dirs provides xdg_user_dir_lookup() for doing this. [1] Is
this something we can include in Wine? The code is under the MIT
license.

[1] http://webcvs.freedesktop.org/user-dirs/xdg-user-dirs/xdg-user-dir-lookup.c?view=markup


From truiken at gmail.com  Wed Nov 21 18:53:27 2007
From: truiken at gmail.com (James Hawkins)
Date: Wed, 21 Nov 2007 18:53:27 -0600
Subject: ntdll: fix uninitialized buffers, found via valgrind
In-Reply-To: <fi2hai$d8p$1@ger.gmane.org>
References: <fi2hai$d8p$1@ger.gmane.org>
Message-ID: <22821af30711211653o417777a3u5a4e121102a7bd63@mail.gmail.com>

On Nov 21, 2007 6:08 PM, Zac Brown <zac at zacbrown.org> wrote:
> Hi,
>
> Fixes valgrind error:
>         http://kegel.com/wine/valgrind/20071121/vg-ntdll_env.txt
>
> Changelog:
> * Initialize buffers used in test using memset
>
> --
> Zac Brown <zac AT zacbrown DOT org>
>
>
>  dlls/ntdll/tests/env.c |    7 +++++--
>  1 files changed, 5 insertions(+), 2 deletions(-)
>
> diff --git a/dlls/ntdll/tests/env.c b/dlls/ntdll/tests/env.c
> index d822946..90a3bf1 100644
> --- a/dlls/ntdll/tests/env.c
> +++ b/dlls/ntdll/tests/env.c
> @@ -80,8 +80,7 @@ static void testQuery(void)
>          {NULL, 0, 0, NULL}
>      };
>
> -    WCHAR               bn[257];
> -    WCHAR               bv[257];
> +
>      UNICODE_STRING      name;
>      UNICODE_STRING      value;
>      const struct test*  test;
> @@ -89,6 +88,10 @@ static void testQuery(void)
>
>      for (test = tests; test->var; test++)
>      {
> +        WCHAR bn[257];
> +        WCHAR bv[257];
> +        memset(bn, '\0', 257 * sizeof(WCHAR));
> +        memset(bv, '\0', 257 * sizeof(WCHAR));
>          name.Length = strlen(test->var) * 2;
>          name.MaximumLength = name.Length + 2;
>          name.Buffer = bn;
>

Why did you move the variable declaration?  Also, please don't use
magic constants; sizeof(bn) *sizeof(WCHAR) is what you want.

-- 
James Hawkins


From dsh at linux.ucla.edu  Wed Nov 21 18:56:33 2007
From: dsh at linux.ucla.edu (Dan Hipschman)
Date: Wed, 21 Nov 2007 16:56:33 -0800
Subject: ntdll: fix uninitialized buffers, found via valgrind
In-Reply-To: <22821af30711211653o417777a3u5a4e121102a7bd63@mail.gmail.com>
References: <fi2hai$d8p$1@ger.gmane.org>
	<22821af30711211653o417777a3u5a4e121102a7bd63@mail.gmail.com>
Message-ID: <20071122005633.GF26712@linux.ucla.edu>

On Wed, Nov 21, 2007 at 06:53:27PM -0600, James Hawkins wrote:
> On Nov 21, 2007 6:08 PM, Zac Brown <zac at zacbrown.org> wrote:
> > Hi,
> >
> > Fixes valgrind error:
> >         http://kegel.com/wine/valgrind/20071121/vg-ntdll_env.txt
> >
> > Changelog:
> > * Initialize buffers used in test using memset
> >
> > --
> > Zac Brown <zac AT zacbrown DOT org>
> >
> >
> >  dlls/ntdll/tests/env.c |    7 +++++--
> >  1 files changed, 5 insertions(+), 2 deletions(-)
> >
> > diff --git a/dlls/ntdll/tests/env.c b/dlls/ntdll/tests/env.c
> > index d822946..90a3bf1 100644
> > --- a/dlls/ntdll/tests/env.c
> > +++ b/dlls/ntdll/tests/env.c
> > @@ -80,8 +80,7 @@ static void testQuery(void)
> >          {NULL, 0, 0, NULL}
> >      };
> >
> > -    WCHAR               bn[257];
> > -    WCHAR               bv[257];
> > +
> >      UNICODE_STRING      name;
> >      UNICODE_STRING      value;
> >      const struct test*  test;
> > @@ -89,6 +88,10 @@ static void testQuery(void)
> >
> >      for (test = tests; test->var; test++)
> >      {
> > +        WCHAR bn[257];
> > +        WCHAR bv[257];
> > +        memset(bn, '\0', 257 * sizeof(WCHAR));
> > +        memset(bv, '\0', 257 * sizeof(WCHAR));
> >          name.Length = strlen(test->var) * 2;
> >          name.MaximumLength = name.Length + 2;
> >          name.Buffer = bn;
> >
> 
> Why did you move the variable declaration?  Also, please don't use
> magic constants; sizeof(bn) *sizeof(WCHAR) is what you want.

Just sizeof bn.


From truiken at gmail.com  Wed Nov 21 18:57:33 2007
From: truiken at gmail.com (James Hawkins)
Date: Wed, 21 Nov 2007 18:57:33 -0600
Subject: ntdll: fix uninitialized buffers, found via valgrind
In-Reply-To: <20071122005633.GF26712@linux.ucla.edu>
References: <fi2hai$d8p$1@ger.gmane.org>
	<22821af30711211653o417777a3u5a4e121102a7bd63@mail.gmail.com>
	<20071122005633.GF26712@linux.ucla.edu>
Message-ID: <22821af30711211657rfeec4cbg8ca0dcebdbd0b3d6@mail.gmail.com>

On Nov 21, 2007 6:56 PM, Dan Hipschman <dsh at linux.ucla.edu> wrote:
>
> On Wed, Nov 21, 2007 at 06:53:27PM -0600, James Hawkins wrote:
> > On Nov 21, 2007 6:08 PM, Zac Brown <zac at zacbrown.org> wrote:
> > > Hi,
> > >
> > > Fixes valgrind error:
> > >         http://kegel.com/wine/valgrind/20071121/vg-ntdll_env.txt
> > >
> > > Changelog:
> > > * Initialize buffers used in test using memset
> > >
> > > --
> > > Zac Brown <zac AT zacbrown DOT org>
> > >
> > >
> > >  dlls/ntdll/tests/env.c |    7 +++++--
> > >  1 files changed, 5 insertions(+), 2 deletions(-)
> > >
> > > diff --git a/dlls/ntdll/tests/env.c b/dlls/ntdll/tests/env.c
> > > index d822946..90a3bf1 100644
> > > --- a/dlls/ntdll/tests/env.c
> > > +++ b/dlls/ntdll/tests/env.c
> > > @@ -80,8 +80,7 @@ static void testQuery(void)
> > >          {NULL, 0, 0, NULL}
> > >      };
> > >
> > > -    WCHAR               bn[257];
> > > -    WCHAR               bv[257];
> > > +
> > >      UNICODE_STRING      name;
> > >      UNICODE_STRING      value;
> > >      const struct test*  test;
> > > @@ -89,6 +88,10 @@ static void testQuery(void)
> > >
> > >      for (test = tests; test->var; test++)
> > >      {
> > > +        WCHAR bn[257];
> > > +        WCHAR bv[257];
> > > +        memset(bn, '\0', 257 * sizeof(WCHAR));
> > > +        memset(bv, '\0', 257 * sizeof(WCHAR));
> > >          name.Length = strlen(test->var) * 2;
> > >          name.MaximumLength = name.Length + 2;
> > >          name.Buffer = bn;
> > >
> >
> > Why did you move the variable declaration?  Also, please don't use
> > magic constants; sizeof(bn) *sizeof(WCHAR) is what you want.
>
> Just sizeof bn.
>

oops, yes.

-- 
James Hawkins


From ivg231 at gmail.com  Wed Nov 21 20:24:13 2007
From: ivg231 at gmail.com (Ivan Gyurdiev)
Date: Wed, 21 Nov 2007 21:24:13 -0500
Subject: d3dx8 [patch 7/7] Implement D3DXMatrixTransformation
In-Reply-To: <20071121173103.g50i6c7fc4c80c8w@webmail.math.cnrs.fr>
References: <20071121173103.g50i6c7fc4c80c8w@webmail.math.cnrs.fr>
Message-ID: <4744E84D.2040305@gmail.com>

Any chance the formatting can be improved to include whitespace between 
blocks and proper indentation?






From dank at kegel.com  Wed Nov 21 22:38:31 2007
From: dank at kegel.com (Dan Kegel)
Date: Wed, 21 Nov 2007 20:38:31 -0800
Subject: ntdll: fix uninitialized buffers, found via valgrind
Message-ID: <a71bd89a0711212038m6422af02o1a086066ebab49b4@mail.gmail.com>

James wrote:
> Why did you move the variable declaration?

Because the variable is only used inside the loop.
Moving the declaration to the top of the loop is the right scoping.
- Dan


From gerald at pfeifer.com  Wed Nov 21 20:32:06 2007
From: gerald at pfeifer.com (Gerald Pfeifer)
Date: Thu, 22 Nov 2007 03:32:06 +0100 (CET)
Subject: Use GCC's -Wtype-limits
In-Reply-To: <87y7croi3q.fsf@wine.dyndns.org>
References: <Pine.LNX.4.64.0711170050250.8530@acrux.dbai.tuwien.ac.at>
	<87y7croi3q.fsf@wine.dyndns.org>
Message-ID: <Pine.LNX.4.64.0711211547530.19271@acrux.dbai.tuwien.ac.at>

Hi Alexandre,

On Wed, 21 Nov 2007, Alexandre Julliard wrote:
>> If applied, I will commit to address, directly and by engaging others,
>> the occurrences of such warnings in Wine.
> I'm not opposed to applying it, but you have to fix the warnings first,
> as far as possible the default build should not trigger any warnings.

I have been submitting patches to address this, and got down the number 
quite a bit in my internal tree, but many of the patches I sent earlier
this month haven't been applied or responded to yet except for those I
resent.  Should I continue resending the rest as well?

GCC 4.3 hasn't been released yet and won't be released for a few months, 
so regular users/Wine contributors should not see these warnings, that's
why I figured it would be good to get them in, for some of the more
advanced hackers here to get exposure as well.

Gerald
5B


From thunderbird2k at gmx.net  Thu Nov 22 02:42:48 2007
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Thu, 22 Nov 2007 09:42:48 +0100
Subject: WineD3D: Implement detection of ATI cards with Mesa DRI drivers
	[try	3]
In-Reply-To: <4744C540.70101@rm.pp.ru>
References: <4744C540.70101@rm.pp.ru>
Message-ID: <20071122084248.6860@gmx.net>

> Presently, if an ATI card uses open-source DRI drivers from the Mesa
> project ( http://dri.freedesktop.org/wiki/ATI ), Wine will report it to
> Windows applications as being some generic nVIDIA model, based on D3D
> capabilities of the card.
> 
> This patch adds detection of the used ATI video card, based on Mesa DRI
> module name, which is returned by drivers in GL Renderer string. In my
> opinion, returning even an approximate ATI card model should be better,
> than the present condition, disguising the ATI card as some equally
> generic model from nVIDIA. Also, the patch adds detection of VENDOR_MESA
> >from GL Renderer string, as Mesa DRI drivers may have various things as
> GL Vendor, but the GL Renderer name always contains the string "Mesa".
> This patch resolves the bug #7267, "Lineage 2 complains about outdated
> NVIDIA drivers using ATI card with Mesa drivers" -
> http://bugs.winehq.org/show_bug.cgi?id=7267 .

The idea behind the whole code is that we detect a 'compatible' card based on the OpenGL capabilites. That stuff is done using the D3DX_CAPABLE() macros. The extension I check directly correspond to D3D functionality. In the end the result is further refind by checking the opengl renderer string.

The reason why it is all done this way is because we need to detect the card based on OpenGL / GLX information and they don't export the pci id (which is good) but bad for D3D. Retrieving the real card name and so on from /proc or whatever isn't guaranteed to get good results and it also doesn't scale with remote X and if the system uses multiple videocards. It is very tricky.

I would really ask you to use the D3DX_CAPABLE() macros as not using them can result in bad problems. E.g. a game assuming a certain d3d functionality is there while it isn't backed by any GL extension.

The reason we default to Nvidia cards is that they are very generic and have quite solid drivers, so from an application point of view that is nice. Second games don't really need the exact GPU but they just use the info to get an impression of the features / performance. You can debate whether reporting Nvidia or ATI on totally different drivers matters (I would say no).

So at least use the D3DX_CAPABLE macros as those are correct.

Roderick 
-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer


From kai.blin at gmail.com  Thu Nov 22 04:38:19 2007
From: kai.blin at gmail.com (Kai Blin)
Date: Thu, 22 Nov 2007 11:38:19 +0100
Subject: Some thoughts about next GSoC
Message-ID: <200711221138.24153.kai.blin@gmail.com>

Hi folks,

from what we discussed at the last WineConf, we wanted to work on our 
procedures for the Google Summer of Code a little.
I'm sending this email in hope to start some discussion about this, so we have 
it out of the way until the 2008 version is announced so we can talk about 
proposed projects then.

The goal of Wine's SoC procedures should be to get high-quality proposals that 
can be completed by the student proposing the project in the time allocated 
for GSoC, so both scope and difficulty should be checked.
I haven't been on the mentoring side of things, but my understanding from the 
WineConf side of things was that we had some problems getting this right the 
past years.

I was thinking about strongly encouraging people to post their project 
proposal to wine-devel prior to applying, so more developers can have a look 
at it and see if it's doable or not and offer suggestions.

I know some projects did an introductory quiz to figure out the student's 
coding skills, I'm not convinced the knowledge needed for Wine can be tested 
in a quiz. What do you think?

Another thing that didn't turn out too well last time is that it was really 
hard to figure out what was going on during the summer. I have a few ideas on 
how we could address this.

Lots of other projects had their student write a weekly public progress 
report. I think we should require the same. This will probably help keeping 
people updated, and might help spotting problems early.

According to the wiki page, we already require a post-mortem report on the 
project, however I can't remember seeing much of those this year. We should 
make sure those are written next time. We might think of a better name for 
the report, post-mortem sounds like the project is dead after the summer, we 
want people to keep working.

Last year, some of the students set up a public git repo on repo.or.cz. I was 
thinking about making that a requirement for next year. This would allow 
people to review work in progress.

Comments?
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071122/029d9ff3/attachment.pgp 

From stefan at codeweavers.com  Wed Nov 21 18:07:23 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Thu, 22 Nov 2007 01:07:23 +0100
Subject: WineD3D: Implement detection of ATI cards with Mesa DRI drivers
	[try 3]
In-Reply-To: <4744C540.70101@rm.pp.ru>
References: <4744C540.70101@rm.pp.ru>
Message-ID: <200711220107.25719.stefan@codeweavers.com>

Hi,
> --- a/ChangeLog
> +++ b/ChangeLog
> @@ -1,3 +1,8 @@
> +2007-11-22  Roman Mamedov <roman at rm.pp.ru>
> +
> +        * dlls/wined3d/directx.c:
> +        wined3d: Implement detection of ATI cards with Mesa DRI drivers.
> +
Sorry, I missed this in the first patch: You don't have to update the 
changelog file in the patches. The ChangeLog is autogenerated from the git 
commit logs(ie, the subject in the patch file).

I am not sure if Alexandre's scripts filter that out or if he asks to resend 
the patch.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071122/61a6d4e2/attachment.pgp 

From maarten at codeweavers.com  Thu Nov 22 04:48:10 2007
From: maarten at codeweavers.com (Maarten Lankhorst)
Date: Thu, 22 Nov 2007 11:48:10 +0100
Subject: Some thoughts about next GSoC
In-Reply-To: <200711221138.24153.kai.blin@gmail.com>
References: <200711221138.24153.kai.blin@gmail.com>
Message-ID: <47455E6A.9060503@codeweavers.com>

Hi Kai,

Kai Blin schreef:
> I was thinking about strongly encouraging people to post their project 
> proposal to wine-devel prior to applying, so more developers can have a look 
> at it and see if it's doable or not and offer suggestions.
>   
Sounds like a good idea, the work you have to do in a SoC is usually
underestimated by a factor of 2. :-)
> I know some projects did an introductory quiz to figure out the student's 
> coding skills, I'm not convinced the knowledge needed for Wine can be tested 
> in a quiz. What do you think?
>   
I don't like the idea of a quiz as well, what would be a better test is
to get a small patch into wine, perhaps adding a testcase to the
component they want to work on. It shouldn't be big, but it proves they
can get code into wine.
> Another thing that didn't turn out too well last time is that it was really 
> hard to figure out what was going on during the summer. I have a few ideas on 
> how we could address this.
>
> Lots of other projects had their student write a weekly public progress 
> report. I think we should require the same. This will probably help keeping 
> people updated, and might help spotting problems early.
>   
Personal experience here, it might be good for some people, but for me I
just told when I made some progress. Perhaps setting up a wine SoC blog
where you post every week what you're doing?
> According to the wiki page, we already require a post-mortem report on the 
> project, however I can't remember seeing much of those this year. We should 
> make sure those are written next time. We might think of a better name for 
> the report, post-mortem sounds like the project is dead after the summer, we 
> want people to keep working.
>   
I'm all for it. Perhaps call it reflection report?
> Last year, some of the students set up a public git repo on repo.or.cz. I was 
> thinking about making that a requirement for next year. This would allow 
> people to review work in progress.
>   
Agreed, I'm for a public git repo. If it's needed I can write some
instructions on how to set a repo up in the wine wiki.

Cheers,
Maarten.


From kai.blin at gmail.com  Thu Nov 22 05:07:40 2007
From: kai.blin at gmail.com (Kai Blin)
Date: Thu, 22 Nov 2007 12:07:40 +0100
Subject: Some thoughts about next GSoC
In-Reply-To: <47455E6A.9060503@codeweavers.com>
References: <200711221138.24153.kai.blin@gmail.com>
	<47455E6A.9060503@codeweavers.com>
Message-ID: <200711221207.40941.kai.blin@gmail.com>

On Thursday 22 November 2007 11:48:10 Maarten Lankhorst wrote:

> Sounds like a good idea, the work you have to do in a SoC is usually
> underestimated by a factor of 2. :-)

That is common industry practice. I want to prevent factor 10 or worse.. ;)

> I don't like the idea of a quiz as well, what would be a better test is
> to get a small patch into wine, perhaps adding a testcase to the
> component they want to work on. It shouldn't be big, but it proves they
> can get code into wine.

This probably could work, provided we have enough people to give feedback we 
tend to have to give all new comitters. Might really be worth the effort, 
though.


> > Lots of other projects had their student write a weekly public progress
> > report. I think we should require the same. This will probably help
> > keeping people updated, and might help spotting problems early.
>
> Personal experience here, it might be good for some people, but for me I
> just told when I made some progress. Perhaps setting up a wine SoC blog
> where you post every week what you're doing?

There's multiple options for that. There's http://planet-soc.com/, student's 
could use their own blogs, or send a weekly email to wine-devel. Personally 
I'd like to collect that stuff and give a short weekly digest of those posts 
to give the students some more exposure. WWN GSoC edition or the like. Unless 
someone reanimates WWN anyway, that we could just piggyback there.

> > Last year, some of the students set up a public git repo on repo.or.cz. I
> > was thinking about making that a requirement for next year. This would
> > allow people to review work in progress.
>
> Agreed, I'm for a public git repo. If it's needed I can write some
> instructions on how to set a repo up in the wine wiki.

I think a tutorial for setting that up would be a good thing. We just need to 
make sure they still submit their stuff to wine-patches early and often.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071122/70ff228f/attachment.pgp 

From zac at zacbrown.org  Thu Nov 22 07:38:19 2007
From: zac at zacbrown.org (Zac Brown)
Date: Thu, 22 Nov 2007 08:38:19 -0500
Subject: Disregard earlier ntdll/tests/env.c patches
Message-ID: <4745864B.4000708@zacbrown.org>

Hi,

Please disregard any patches prior to the latest patch. It seems my mail
server has been a little messed up. The only one to consider is the
latest one that the wine-patches list has received.

Thank you,

Zac Brown

-- 
Zac Brown (817-266-6867)
zac at zacbrown.org
http://zacbrown.org


From David.Adam at math.cnrs.fr  Thu Nov 22 06:41:53 2007
From: David.Adam at math.cnrs.fr (David.Adam at math.cnrs.fr)
Date: Thu, 22 Nov 2007 13:41:53 +0100
Subject: d3dx8 [patch 7/7] Implement D3DXMatrixTransformation
In-Reply-To: <4744E84D.2040305@gmail.com>
References: <20071121173103.g50i6c7fc4c80c8w@webmail.math.cnrs.fr>
	<4744E84D.2040305@gmail.com>
Message-ID: <20071122134153.sr0evoaojoo44cgk@webmail.math.cnrs.fr>



Doing that, I shall break the style of the file. I tried to keep a  
uniformized style for the whole repertory.

   David

> Any chance the formatting can be improved to include whitespace  
> between blocks and proper indentation?


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071122/b4db6619/attachment.htm 

From roman at rm.pp.ru  Thu Nov 22 09:00:15 2007
From: roman at rm.pp.ru (Roman Mamedov)
Date: Thu, 22 Nov 2007 20:00:15 +0500
Subject: WineD3D: Implement detection of ATI cards with Mesa DRI drivers
	[try	3]
In-Reply-To: <20071122084248.6860@gmx.net>
References: <4744C540.70101@rm.pp.ru> <20071122084248.6860@gmx.net>
Message-ID: <4745997F.6060400@rm.pp.ru>

Roderick Colenbrander wrote:
> I would really ask you to use the D3DX_CAPABLE() macros as not using them can result in bad problems. E.g. a game assuming a certain d3d functionality is there while it isn't backed by any GL extension.
>   
You certainly do have a point. I will redo the patch a bit later, but 
before that, I have a couple of questions.

1) Checking real capabilities surely can be a good way to approximate 
the level of used hardware. But could these D3DX_CAPABLE() macros be 
considered reliable enough to use just them alone (and not the DRI 
module names) for conceiving the card model? If this is so, then 
checking of the Mesa renderer string could remain only for detection 
that the card is from ATI (because it does not give any precise info 
anyway).

2) Are there any plans to add D3D9B_CAPABLE and D3D9C_CAPABLE (and maybe 
D3D10_CAPABLE too)? These would immensely help to identify the newer 
cards. Currently, without such macros, the detection code can't safely 
report that a card is anything more than the ATI's Direct3D 9 
lowest-common denominator, Radeon 9500. (See 
http://en.wikipedia.org/wiki/Radeon for a table of models and their 
DirectX versions).

Thanks for the reply,
Roman.


From luis.busquets at ilidium.com  Thu Nov 22 09:01:00 2007
From: luis.busquets at ilidium.com (luis.busquets at ilidium.com)
Date: Thu, 22 Nov 2007 16:01:00 +0100 (CET)
Subject: Ansi to Unicode
Message-ID: <25672.158.169.9.14.1195743660.squirrel@www.ilidium.com>

Is there any standard function in WINE to transform an Ansi string into a
Unicode string?

And the opposite?



From alex at thehandofagony.com  Thu Nov 22 09:10:47 2007
From: alex at thehandofagony.com (Alexander Nicolaysen =?iso-8859-1?q?S=F8rnes?=)
Date: Thu, 22 Nov 2007 16:10:47 +0100
Subject: Ansi to Unicode
In-Reply-To: <25672.158.169.9.14.1195743660.squirrel@www.ilidium.com>
References: <25672.158.169.9.14.1195743660.squirrel@www.ilidium.com>
Message-ID: <200711221610.47436.alex@thehandofagony.com>

On Thursday 22 November 2007 16:01:00 luis.busquets at ilidium.com wrote:
> Is there any standard function in WINE to transform an Ansi string into a
> Unicode string?
>
> And the opposite?

Same as in Windows: WideCharToMulitByte and MultiByteToWideChar



Alexander N. S?rnes


From dmitry at codeweavers.com  Thu Nov 22 09:29:48 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 22 Nov 2007 23:29:48 +0800
Subject: dlls/winedos/int21.c -- type adjustments
References: <Pine.LNX.4.64.0711221139580.19271@acrux.dbai.tuwien.ac.at>
Message-ID: <007d01c82d1c$8698bc70$6700fea9@DMITRY>

"Gerald Pfeifer" <gerald at pfeifer.com> wrote:

> ChangeLog:
> Use unsigned long instead of long for return values of SetFilePointer.

It wouldn't take more than 30 additional seconds to look up
the SetFilePointer prototype in include/ and use real type
instead.

-- 
Dmitry.


From gerald at pfeifer.com  Thu Nov 22 09:48:12 2007
From: gerald at pfeifer.com (Gerald Pfeifer)
Date: Thu, 22 Nov 2007 16:48:12 +0100 (CET)
Subject: dlls/winedos/int21.c -- type adjustments
In-Reply-To: <007d01c82d1c$8698bc70$6700fea9@DMITRY>
References: <Pine.LNX.4.64.0711221139580.19271@acrux.dbai.tuwien.ac.at>
	<007d01c82d1c$8698bc70$6700fea9@DMITRY>
Message-ID: <Pine.LNX.4.64.0711221637290.19271@acrux.dbai.tuwien.ac.at>

On Thu, 22 Nov 2007, Dmitry Timoshkov wrote:
> It wouldn't take more than 30 additional seconds to look up
> the SetFilePointer prototype in include/ and use real type
> instead.

Which I had done -- except that I apparently lost that update when
creating the patch a couple of weeks ago.  My bad.  Something went
very wrong here. :-(

Thanks for catching this, Dmitry!

Update patch below.

Gerald


ChangeLog:
Use DWORD instead of long for return values of SetFilePointer.
Adjust type of loop variable in INT21_Ioctl_Char().

Index: dlls/winedos/int21.c
===================================================================
RCS file: /home/wine/wine/dlls/winedos/int21.c,v
retrieving revision 1.90
diff -u -3 -p -r1.90 int21.c
--- dlls/winedos/int21.c	18 Jun 2007 13:07:13 -0000	1.90
+++ dlls/winedos/int21.c	22 Nov 2007 15:43:09 -0000
@@ -1385,7 +1385,7 @@ static void INT21_SequentialReadFromFCB(
     struct XFCB *xfcb;
     HANDLE handle;
     DWORD record_number;
-    long position;
+    DWORD position;
     BYTE *disk_transfer_area;
     UINT bytes_read;
     BYTE AL_result;
@@ -1405,7 +1405,7 @@ static void INT21_SequentialReadFromFCB(
         record_number = 128 * fcb->current_block_number + fcb->record_within_current_block;
         position = SetFilePointer(handle, record_number * fcb->logical_record_size, NULL, 0);
         if (position != record_number * fcb->logical_record_size) {
-            TRACE("seek(%d, %d, 0) failed with %ld\n",
+            TRACE("seek(%d, %d, 0) failed with %u\n",
                   fcb->file_number, record_number * fcb->logical_record_size, position);
             AL_result = 0x01; /* end of file, no data read */
         } else {
@@ -1421,7 +1421,7 @@ static void INT21_SequentialReadFromFCB(
                     AL_result = 0x03; /* end of file, partial record read */
                 } /* if */
             } else {
-                TRACE("successful read %d bytes from record %d (position %ld) of file %d (handle %p)\n",
+                TRACE("successful read %d bytes from record %d (position %u) of file %d (handle %p)\n",
                     bytes_read, record_number, position, fcb->file_number, handle);
                 AL_result = 0x00; /* successful */
             } /* if */
@@ -1465,7 +1465,7 @@ static void INT21_SequentialWriteToFCB( 
     struct XFCB *xfcb;
     HANDLE handle;
     DWORD record_number;
-    long position;
+    DWORD position;
     BYTE *disk_transfer_area;
     UINT bytes_written;
     BYTE AL_result;
@@ -1485,7 +1485,7 @@ static void INT21_SequentialWriteToFCB( 
         record_number = 128 * fcb->current_block_number + fcb->record_within_current_block;
         position = SetFilePointer(handle, record_number * fcb->logical_record_size, NULL, 0);
         if (position != record_number * fcb->logical_record_size) {
-            TRACE("seek(%d, %d, 0) failed with %ld\n",
+            TRACE("seek(%d, %d, 0) failed with %u\n",
                   fcb->file_number, record_number * fcb->logical_record_size, position);
             AL_result = 0x01; /* disk full */
         } else {
@@ -1496,7 +1496,7 @@ static void INT21_SequentialWriteToFCB( 
                       fcb->file_number, disk_transfer_area, fcb->logical_record_size, bytes_written);
                 AL_result = 0x01; /* disk full */
             } else {
-                TRACE("successful written %d bytes from record %d (position %ld) of file %d (handle %p)\n",
+                TRACE("successful written %d bytes from record %d (position %u) of file %d (handle %p)\n",
                     bytes_written, record_number, position, fcb->file_number, handle);
                 AL_result = 0x00; /* successful */
             } /* if */
@@ -1541,7 +1541,7 @@ static void INT21_ReadRandomRecordFromFC
     struct XFCB *xfcb;
     HANDLE handle;
     DWORD record_number;
-    long position;
+    DWORD position;
     BYTE *disk_transfer_area;
     UINT bytes_read;
     BYTE AL_result;
@@ -1561,7 +1561,7 @@ static void INT21_ReadRandomRecordFromFC
     } else {
         position = SetFilePointer(handle, record_number * fcb->logical_record_size, NULL, 0);
         if (position != record_number * fcb->logical_record_size) {
-            TRACE("seek(%d, %d, 0) failed with %ld\n",
+            TRACE("seek(%d, %d, 0) failed with %u\n",
                   fcb->file_number, record_number * fcb->logical_record_size, position);
             AL_result = 0x01; /* end of file, no data read */
         } else {
@@ -1577,7 +1577,7 @@ static void INT21_ReadRandomRecordFromFC
                     AL_result = 0x03; /* end of file, partial record read */
                 } /* if */
             } else {
-                TRACE("successful read %d bytes from record %d (position %ld) of file %d (handle %p)\n",
+                TRACE("successful read %d bytes from record %d (position %u) of file %d (handle %p)\n",
                     bytes_read, record_number, position, fcb->file_number, handle);
                 AL_result = 0x00; /* successful */
             } /* if */
@@ -1614,7 +1614,7 @@ static void INT21_WriteRandomRecordToFCB
     struct XFCB *xfcb;
     HANDLE handle;
     DWORD record_number;
-    long position;
+    DWORD position;
     BYTE *disk_transfer_area;
     UINT bytes_written;
     BYTE AL_result;
@@ -1634,7 +1634,7 @@ static void INT21_WriteRandomRecordToFCB
     } else {
         position = SetFilePointer(handle, record_number * fcb->logical_record_size, NULL, 0);
         if (position != record_number * fcb->logical_record_size) {
-            TRACE("seek(%d, %d, 0) failed with %ld\n",
+            TRACE("seek(%d, %d, 0) failed with %u\n",
                   fcb->file_number, record_number * fcb->logical_record_size, position);
             AL_result = 0x01; /* disk full */
         } else {
@@ -1645,7 +1645,7 @@ static void INT21_WriteRandomRecordToFCB
                       fcb->file_number, disk_transfer_area, fcb->logical_record_size, bytes_written);
                 AL_result = 0x01; /* disk full */
             } else {
-                TRACE("successful written %d bytes from record %d (position %ld) of file %d (handle %p)\n",
+                TRACE("successful written %d bytes from record %d (position %u) of file %d (handle %p)\n",
                     bytes_written, record_number, position, fcb->file_number, handle);
                 AL_result = 0x00; /* successful */
             } /* if */
@@ -1689,7 +1689,7 @@ static void INT21_RandomBlockReadFromFCB
     struct XFCB *xfcb;
     HANDLE handle;
     DWORD record_number;
-    long position;
+    DWORD position;
     BYTE *disk_transfer_area;
     UINT records_requested;
     UINT bytes_requested;
@@ -1713,7 +1713,7 @@ static void INT21_RandomBlockReadFromFCB
     } else {
         position = SetFilePointer(handle, record_number * fcb->logical_record_size, NULL, 0);
         if (position != record_number * fcb->logical_record_size) {
-            TRACE("seek(%d, %d, 0) failed with %ld\n",
+            TRACE("seek(%d, %d, 0) failed with %u\n",
                   fcb->file_number, record_number * fcb->logical_record_size, position);
             records_read = 0;
             AL_result = 0x01; /* end of file, no data read */
@@ -1734,7 +1734,7 @@ static void INT21_RandomBlockReadFromFCB
                     AL_result = 0x03; /* end of file, partial record read */
                 } /* if */
             } else {
-                TRACE("successful read %d bytes from record %d (position %ld) of file %d (handle %p)\n",
+                TRACE("successful read %d bytes from record %d (position %u) of file %d (handle %p)\n",
                     bytes_read, record_number, position, fcb->file_number, handle);
                 records_read = records_requested;
                 AL_result = 0x00; /* successful */
@@ -1780,7 +1780,7 @@ static void INT21_RandomBlockWriteToFCB(
     struct XFCB *xfcb;
     HANDLE handle;
     DWORD record_number;
-    long position;
+    DWORD position;
     BYTE *disk_transfer_area;
     UINT records_requested;
     UINT bytes_requested;
@@ -1804,7 +1804,7 @@ static void INT21_RandomBlockWriteToFCB(
     } else {
         position = SetFilePointer(handle, record_number * fcb->logical_record_size, NULL, 0);
         if (position != record_number * fcb->logical_record_size) {
-            TRACE("seek(%d, %d, 0) failed with %ld\n",
+            TRACE("seek(%d, %d, 0) failed with %u\n",
                   fcb->file_number, record_number * fcb->logical_record_size, position);
             records_written = 0;
             AL_result = 0x01; /* disk full */
@@ -1819,7 +1819,7 @@ static void INT21_RandomBlockWriteToFCB(
                 records_written = bytes_written / fcb->logical_record_size;
                 AL_result = 0x01; /* disk full */
             } else {
-                TRACE("successful write %d bytes from record %d (position %ld) of file %d (handle %p)\n",
+                TRACE("successful write %d bytes from record %d (position %u) of file %d (handle %p)\n",
                     bytes_written, record_number, position, fcb->file_number, handle);
                 records_written = records_requested;
                 AL_result = 0x00; /* successful */
@@ -2733,7 +2733,7 @@ static void INT21_IoctlHPScanHandler( CO
  */
 static void INT21_Ioctl_Char( CONTEXT86 *context )
 {
-    int status, i;
+    int status;
     int IsConsoleIOHandle = 0;
     IO_STATUS_BLOCK io;
     FILE_INTERNAL_INFORMATION info;
@@ -2750,6 +2750,7 @@ static void INT21_Ioctl_Char( CONTEXT86 
             return;
         }
     } else {
+        UINT i;
         for (i = 0; i < NB_MAGIC_DEVICES; i++)
         {
             if (!magic_devices[i].handle) continue;


From the3dfxdude at gmail.com  Thu Nov 22 10:44:09 2007
From: the3dfxdude at gmail.com (Jesse Allen)
Date: Thu, 22 Nov 2007 09:44:09 -0700
Subject: Some thoughts about next GSoC
In-Reply-To: <200711221138.24153.kai.blin@gmail.com>
References: <200711221138.24153.kai.blin@gmail.com>
Message-ID: <530468570711220844x257ec3f9pbf8ef514e9629124@mail.gmail.com>

On Nov 22, 2007 3:38 AM, Kai Blin <kai.blin at gmail.com> wrote:
> Hi folks,
>
> from what we discussed at the last WineConf, we wanted to work on our
> procedures for the Google Summer of Code a little.
> I'm sending this email in hope to start some discussion about this, so we have
> it out of the way until the 2008 version is announced so we can talk about
> proposed projects then.
>
> The goal of Wine's SoC procedures should be to get high-quality proposals that
> can be completed by the student proposing the project in the time allocated
> for GSoC, so both scope and difficulty should be checked.



From bogus@does.not.exist.com  Thu Nov 15 09:34:07 2007
From: bogus@does.not.exist.com ()
Date: Thu, 15 Nov 2007 15:34:07 -0000
Subject: No subject
Message-ID: <mailman.31.1195749863.6275.wine-devel@winehq.org>

have to work on a project that has to be completed in the allotted
time. I think the idea is that google wants to encourage people that
were already working on a project before to apply and to encourage
people to continue working in the community after the session is
complete. Now the mentoring organization could set their own
requirements, based on difficulty and scope, but I would be concerned
with making time a limiting factor.

> I haven't been on the mentoring side of things, but my understanding from the
> WineConf side of things was that we had some problems getting this right the
> past years.
>
> I was thinking about strongly encouraging people to post their project
> proposal to wine-devel prior to applying, so more developers can have a look
> at it and see if it's doable or not and offer suggestions.
>
> I know some projects did an introductory quiz to figure out the student's
> coding skills, I'm not convinced the knowledge needed for Wine can be tested
> in a quiz. What do you think?


The best alternative to the quiz would be to have the student begin
working on the project before the application. He can discuss it on
the the mailing list and hopefully show some code. This would be a
good way to judge coding skill and the project's scope. Now in order
for this to work well, we would have to encourage people to get
started early, which really hasn't happened before right?

>
> Another thing that didn't turn out too well last time is that it was really
> hard to figure out what was going on during the summer. I have a few ideas on
> how we could address this.
>
> Lots of other projects had their student write a weekly public progress
> report. I think we should require the same. This will probably help keeping
> people updated, and might help spotting problems early.

I did write a weekly progress, but only to my mentor. Now if there was
a website, then I could have submitted it there.

>
> According to the wiki page, we already require a post-mortem report on the
> project, however I can't remember seeing much of those this year. We should
> make sure those are written next time. We might think of a better name for
> the report, post-mortem sounds like the project is dead after the summer, we
> want people to keep working.
>

Maybe I misunderstood that. I only submitted my final report to google/mentors.

> Last year, some of the students set up a public git repo on repo.or.cz. I was
> thinking about making that a requirement for next year. This would allow
> people to review work in progress.


This is probably the most important thing, and then the web log.


Jesse


From kai.blin at gmail.com  Thu Nov 22 11:00:13 2007
From: kai.blin at gmail.com (Kai Blin)
Date: Thu, 22 Nov 2007 18:00:13 +0100
Subject: Some thoughts about next GSoC
In-Reply-To: <530468570711220844x257ec3f9pbf8ef514e9629124@mail.gmail.com>
References: <200711221138.24153.kai.blin@gmail.com>
	<530468570711220844x257ec3f9pbf8ef514e9629124@mail.gmail.com>
Message-ID: <200711221800.17865.kai.blin@gmail.com>

On Thursday 22 November 2007 17:44:09 Jesse Allen wrote:

> From my understanding, the SoC site specifically says that you do not
> have to work on a project that has to be completed in the allotted
> time. I think the idea is that google wants to encourage people that
> were already working on a project before to apply and to encourage
> people to continue working in the community after the session is
> complete. Now the mentoring organization could set their own
> requirements, based on difficulty and scope, but I would be concerned
> with making time a limiting factor.

I'm not saying that we stop people from working on their stuff afterwards, nor 
forcing them to e.g. implement the full dll if their project is "Start an 
implementation of dll x". I was talking about shrinking their proposal so 
they can actually manage to implement all the features they promise in their 
proposal in the proposed timeframe. I know that this was really hard for me.

> The best alternative to the quiz would be to have the student begin
> working on the project before the application. He can discuss it on
> the the mailing list and hopefully show some code. This would be a
> good way to judge coding skill and the project's scope. Now in order
> for this to work well, we would have to encourage people to get
> started early, which really hasn't happened before right?

Well, depends on how you want to do this. I think this is overly restrictive, 
unless you're just talking about a patch or two like Maarten proposed.

> I did write a weekly progress, but only to my mentor. Now if there was
> a website, then I could have submitted it there.

Yes, that's the idea. :)

> > According to the wiki page, we already require a post-mortem report on
> > the project, however I can't remember seeing much of those this year. We
> > should make sure those are written next time. We might think of a better
> > name for the report, post-mortem sounds like the project is dead after
> > the summer, we want people to keep working.
>
> Maybe I misunderstood that. I only submitted my final report to
> google/mentors.

In 2006, students were asked to send the reports to wine-devel, and there was 
some WWN coverage of the projects. That really made it really easy for people 
to follow.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071122/ad0b2c85/attachment.pgp 

From fgouget at free.fr  Thu Nov 22 11:46:03 2007
From: fgouget at free.fr (Francois Gouget)
Date: Thu, 22 Nov 2007 18:46:03 +0100 (CET)
Subject: wineprefixcreate: get xdg-user-dirs environment variables [1/2]
In-Reply-To: <558b2f5c0711211548h70e066ej33624ecc99b60ca8@mail.gmail.com>
References: <558b2f5c0711161445p481908f2s26d657f810f8be1a@mail.gmail.com>
	<87lk8rpzp7.fsf@wine.dyndns.org>
	<558b2f5c0711211548h70e066ej33624ecc99b60ca8@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0711221845190.7671@amboise.dolphin>

On Wed, 21 Nov 2007, Lei Zhang wrote:
[...]
> xdg-user-dirs provides xdg_user_dir_lookup() for doing this. [1] Is
> this something we can include in Wine? The code is under the MIT
> license.

As long as our code still works if the relevant xdg library is not 
present at runtime...

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                              145 = 1! + 4! + 5!


From rob at codeweavers.com  Thu Nov 22 13:12:16 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Thu, 22 Nov 2007 19:12:16 +0000
Subject: ntdll: Shared manifests should have a less-strict version check
	performed when loading them as dependencies.
In-Reply-To: <87bq9npwxx.fsf@wine.dyndns.org>
References: <4742E543.2030105@codeweavers.com> <87bq9npwxx.fsf@wine.dyndns.org>
Message-ID: <4745D490.5020707@codeweavers.com>

Alexandre Julliard wrote:
> Robert Shearman <rob at codeweavers.com> writes:
>
>   
>> ---
>>  dlls/ntdll/actctx.c |   56
>> +++++++++++++++++++++++++++++++-------------------
>>  1 files changed, 35 insertions(+), 21 deletions(-)
>>     
>
> Some test cases would be nice...

I've just sent in a pair of patches which test this. I hope they are 
sufficient.

-- 
Rob Shearman



From the3dfxdude at gmail.com  Thu Nov 22 13:30:46 2007
From: the3dfxdude at gmail.com (Jesse Allen)
Date: Thu, 22 Nov 2007 12:30:46 -0700
Subject: Some thoughts about next GSoC
In-Reply-To: <200711221800.17865.kai.blin@gmail.com>
References: <200711221138.24153.kai.blin@gmail.com>
	<530468570711220844x257ec3f9pbf8ef514e9629124@mail.gmail.com>
	<200711221800.17865.kai.blin@gmail.com>
Message-ID: <530468570711221130x10ec5f9ei7ca015fb7bcef53e@mail.gmail.com>

On Nov 22, 2007 10:00 AM, Kai Blin <kai.blin at gmail.com> wrote:
> On Thursday 22 November 2007 17:44:09 Jesse Allen wrote:
>
> > From my understanding, the SoC site specifically says that you do not
> > have to work on a project that has to be completed in the allotted
> > time. I think the idea is that google wants to encourage people that
> > were already working on a project before to apply and to encourage
> > people to continue working in the community after the session is
> > complete. Now the mentoring organization could set their own
> > requirements, based on difficulty and scope, but I would be concerned
> > with making time a limiting factor.
>
> I'm not saying that we stop people from working on their stuff afterwards, nor
> forcing them to e.g. implement the full dll if their project is "Start an
> implementation of dll x". I was talking about shrinking their proposal so
> they can actually manage to implement all the features they promise in their
> proposal in the proposed timeframe. I know that this was really hard for me.
>
> > The best alternative to the quiz would be to have the student begin
> > working on the project before the application. He can discuss it on
> > the the mailing list and hopefully show some code. This would be a
> > good way to judge coding skill and the project's scope. Now in order
> > for this to work well, we would have to encourage people to get
> > started early, which really hasn't happened before right?
>
> Well, depends on how you want to do this. I think this is overly restrictive,
> unless you're just talking about a patch or two like Maarten proposed.
>


Well then it sounds like we want better written proposals. Yeah the
goals for my project were very broad. I didn't intentionally do it
that way, but it was more like at first, get it to work, sort of
thing. And the design wasn't complete until a month in. The only way I
could have done better was to have started earlier. Mind you, I
actually did start in April almost two months early. If I get to do it
again, I will probably have a much more interesting proposal and have
goals that I will know will have specific results in the timeframe.
This is what I'm already considering, but that is because I am
experienced in the program already. For new people, we will have to
reach out to them and help them get ready early because they won't
know what to do. Maybe we need pre-SoC mentors?

Jesse


From melbournemark+wine-devel at gmail.com  Thu Nov 22 14:26:49 2007
From: melbournemark+wine-devel at gmail.com (mark cox)
Date: Fri, 23 Nov 2007 07:26:49 +1100
Subject: Some thoughts about next GSoC
In-Reply-To: <530468570711221130x10ec5f9ei7ca015fb7bcef53e@mail.gmail.com>
References: <200711221138.24153.kai.blin@gmail.com>
	<530468570711220844x257ec3f9pbf8ef514e9629124@mail.gmail.com>
	<200711221800.17865.kai.blin@gmail.com>
	<530468570711221130x10ec5f9ei7ca015fb7bcef53e@mail.gmail.com>
Message-ID: <e2c9b5730711221226w686b838bi160b247cedc073bc@mail.gmail.com>

the FFMpeg project was very successful with it's qualification tasks
http://guru.multimedia.cx/googles-summer-of-code-2007/

regards,
mark

On Nov 23, 2007 6:30 AM, Jesse Allen <the3dfxdude at gmail.com> wrote:

> On Nov 22, 2007 10:00 AM, Kai Blin <kai.blin at gmail.com> wrote:
> > On Thursday 22 November 2007 17:44:09 Jesse Allen wrote:
> >
> > > From my understanding, the SoC site specifically says that you do not
> > > have to work on a project that has to be completed in the allotted
> > > time. I think the idea is that google wants to encourage people that
> > > were already working on a project before to apply and to encourage
> > > people to continue working in the community after the session is
> > > complete. Now the mentoring organization could set their own
> > > requirements, based on difficulty and scope, but I would be concerned
> > > with making time a limiting factor.
> >
> > I'm not saying that we stop people from working on their stuff
> afterwards, nor
> > forcing them to e.g. implement the full dll if their project is "Start
> an
> > implementation of dll x". I was talking about shrinking their proposal
> so
> > they can actually manage to implement all the features they promise in
> their
> > proposal in the proposed timeframe. I know that this was really hard for
> me.
> >
> > > The best alternative to the quiz would be to have the student begin
> > > working on the project before the application. He can discuss it on
> > > the the mailing list and hopefully show some code. This would be a
> > > good way to judge coding skill and the project's scope. Now in order
> > > for this to work well, we would have to encourage people to get
> > > started early, which really hasn't happened before right?
> >
> > Well, depends on how you want to do this. I think this is overly
> restrictive,
> > unless you're just talking about a patch or two like Maarten proposed.
> >
>
>
> Well then it sounds like we want better written proposals. Yeah the
> goals for my project were very broad. I didn't intentionally do it
> that way, but it was more like at first, get it to work, sort of
> thing. And the design wasn't complete until a month in. The only way I
> could have done better was to have started earlier. Mind you, I
> actually did start in April almost two months early. If I get to do it
> again, I will probably have a much more interesting proposal and have
> goals that I will know will have specific results in the timeframe.
> This is what I'm already considering, but that is because I am
> experienced in the program already. For new people, we will have to
> reach out to them and help them get ready early because they won't
> know what to do. Maybe we need pre-SoC mentors?
>
> Jesse
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071123/e91f993c/attachment.htm 

From truiken at gmail.com  Thu Nov 22 15:46:44 2007
From: truiken at gmail.com (James Hawkins)
Date: Thu, 22 Nov 2007 13:46:44 -0800
Subject: Ansi to Unicode
In-Reply-To: <25672.158.169.9.14.1195743660.squirrel@www.ilidium.com>
References: <25672.158.169.9.14.1195743660.squirrel@www.ilidium.com>
Message-ID: <0EC33668-7D70-427B-9CDE-EEDF096746D8@gmail.com>


On Nov 22, 2007, at 7:01 AM, luis.busquets at ilidium.com wrote:

> Is there any standard function in WINE to transform an Ansi string  
> into a
> Unicode string?
>
> And the opposite?
>
>
>

msdn is your friend...

--
James Hawkins


From kai.blin at gmail.com  Thu Nov 22 16:59:10 2007
From: kai.blin at gmail.com (Kai Blin)
Date: Thu, 22 Nov 2007 23:59:10 +0100
Subject: Some thoughts about next GSoC
In-Reply-To: <530468570711221130x10ec5f9ei7ca015fb7bcef53e@mail.gmail.com>
References: <200711221138.24153.kai.blin@gmail.com>
	<200711221800.17865.kai.blin@gmail.com>
	<530468570711221130x10ec5f9ei7ca015fb7bcef53e@mail.gmail.com>
Message-ID: <200711222359.15361.kai.blin@gmail.com>

On Thursday 22 November 2007 20:30:46 Jesse Allen wrote:

>
> Well then it sounds like we want better written proposals. Yeah the
> goals for my project were very broad. I didn't intentionally do it
> that way, but it was more like at first, get it to work, sort of
> thing. And the design wasn't complete until a month in. The only way I
> could have done better was to have started earlier. Mind you, I
> actually did start in April almost two months early.

That's what I was talking about. We can't expect the students to know this. 
They're just starting out working on real projects. But we as mentoring 
organization should have more clue about how hard a project could actually 
be.

> If I get to do it 
> again, I will probably have a much more interesting proposal and have
> goals that I will know will have specific results in the timeframe.
> This is what I'm already considering, but that is because I am
> experienced in the program already. For new people, we will have to
> reach out to them and help them get ready early because they won't
> know what to do. Maybe we need pre-SoC mentors?

Well, that's why I'm beginning to discuss this now, and not a week before the 
deadline. :) Thanks for your feedback so far.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071122/24f933d5/attachment.pgp 

From kai.blin at gmail.com  Thu Nov 22 17:05:48 2007
From: kai.blin at gmail.com (Kai Blin)
Date: Fri, 23 Nov 2007 00:05:48 +0100
Subject: Some thoughts about next GSoC
In-Reply-To: <e2c9b5730711221226w686b838bi160b247cedc073bc@mail.gmail.com>
References: <200711221138.24153.kai.blin@gmail.com>
	<530468570711221130x10ec5f9ei7ca015fb7bcef53e@mail.gmail.com>
	<e2c9b5730711221226w686b838bi160b247cedc073bc@mail.gmail.com>
Message-ID: <200711230005.49058.kai.blin@gmail.com>

On Thursday 22 November 2007 21:26:49 mark cox wrote:
> the FFMpeg project was very successful with it's qualification tasks
> http://guru.multimedia.cx/googles-summer-of-code-2007/

If we want to do this, I think the only sane approach is to have people write 
tests. That's a good idea anyway, and will get them to dig into the windows 
api.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071123/68b46462/attachment.pgp 

From remco47 at yahoo.com  Thu Nov 22 22:16:13 2007
From: remco47 at yahoo.com (Remco)
Date: Thu, 22 Nov 2007 20:16:13 -0800 (PST)
Subject: Driver-supported DirectX
Message-ID: <38934.52163.qm@web50105.mail.re2.yahoo.com>

I don't know the first thing about driver- and DirectX-programming, so please forgive (and point out) any mistakes.

As a reader of this list I'm wondering; there are quite a few problems that come from the fact that DirectX isn't 1:1 translatable to OpenGL. How about talking to some guys from the GPU-driver department about creating a driver-interface that gives you the right hooks. I guess Parallels and Transgaming would also be interested in such a development. I can imagine that the Nouveau-devs and Xorg-radeon-devs would be more than happy to listen.

This goes beyond the scope of the Wine project I think. But since Wine
has the higher level part of DirectX documented and implemented on top
of OpenGL, wouldn't this be the place to start an independent library?
Codeweavers has a lot of knowledge about Windows, DirectX and Linux.
Only Microsoft itself would be a better choice, but I don't think they
really care that much about Linux. ;)

This would mean that DirectX would be as native to Linux and OSX (and friends) as it would be for Windows. It would be an actual reliable platform that could be used by game developers. It would de-Windows-ize DirectX. Maybe NVIDIA, ATI and Intel would also be interested. They could sell their expensive next-gen cards to those 5% that don't run Windows if games would actually be released for non-Windows OSes.

Or are there really compelling technical reasons to wrap around OpenGL? I can think of the Compiz-issue. Similarly, Microsoft stated that they have to wrap OpenGL around DirectX on Windows, to be able to use both OpenGL and DirectX at the same time (for Aero). But I suspect that this implementation just developed naturally because messing with the drivers would be unthinkable way back when.

Remco





      ____________________________________________________________________________________
Get easy, one-click access to your favorites. 
Make Yahoo! your homepage.
http://www.yahoo.com/r/hs 


From damjan.jov at gmail.com  Fri Nov 23 00:29:24 2007
From: damjan.jov at gmail.com (Damjan Jovanovic)
Date: Fri, 23 Nov 2007 08:29:24 +0200
Subject: [msvcrt] short tty reads don't imply EOF
In-Reply-To: <873auzpwrv.fsf@wine.dyndns.org>
References: <9e89675b0711170823v2d445774kad4c4235a41a7a3f@mail.gmail.com>
	<873auzpwrv.fsf@wine.dyndns.org>
Message-ID: <9e89675b0711222229j6d0926b9ife4ade21df5b4131@mail.gmail.com>

On Nov 21, 2007 3:12 PM, Alexandre Julliard <julliard at winehq.org> wrote:
> "Damjan Jovanovic" <damjan.jov at gmail.com> writes:
>
> > Changelog:
> > * For ttys, short reads don't mean we're at the end of the file.
>
> That's not limited to ttys, other file types can have short reads too.

Yes, but removing the entire block of code that handles short reads
causes many msvcrt tests to fail :-).

There is no general way to tell you're at the end of the file, before
you actually get there (by read() returning 0). But, you can't read
ahead, because that won't work for ttys. Suggestions?

While on the topic of reading, is there any reason why ReadFile()
calls ReadConsoleA() for console handles, but ReadFileEx() does not?

> --
> Alexandre Julliard
> julliard at winehq.org
>

Damjan


From stefan at codeweavers.com  Fri Nov 23 04:41:18 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Fri, 23 Nov 2007 11:41:18 +0100
Subject: Driver-supported DirectX
In-Reply-To: <38934.52163.qm@web50105.mail.re2.yahoo.com>
References: <38934.52163.qm@web50105.mail.re2.yahoo.com>
Message-ID: <200711231141.23199.stefan@codeweavers.com>

Hi,
Implementing Direct3D at driver level won't magically fix things. The issues 
will be still the same: Undocumented or incorrectly documented behavior of 
Direct3D and broken apps which rely on defined results in per se undefined 
situations. There are only a handful of cases where OpenGL<->Direct3D 
differences make problems, like non power of two textures or flat shading. 
Those could as well be fixed with proposing an additional extension, instead 
of turning everything upside down in Linux(and at the same time MacOS, 
Solaris, *BSD).

Hardware doesn't magically execute Direct3D 1:1. In fact, Windows drivers 
essentially do the same: Map D3D to a hardware interface which is a hybrid of 
OpenGL and D3D. You can see this by looking at nvidia extensions: They have a 
GL extension for almost every single bit of d3d functionality that does not 
map 1:1 to gl.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071123/88e0dfc5/attachment-0001.pgp 

From msclrhd at googlemail.com  Fri Nov 23 02:51:59 2007
From: msclrhd at googlemail.com (Reece Dunn)
Date: Fri, 23 Nov 2007 08:51:59 +0000
Subject: Driver-supported DirectX
In-Reply-To: <38934.52163.qm@web50105.mail.re2.yahoo.com>
References: <38934.52163.qm@web50105.mail.re2.yahoo.com>
Message-ID: <3f4fd2640711230051l40276fcane33bee0573aed75c@mail.gmail.com>

On 23/11/2007, Remco <remco47 at yahoo.com> wrote:
> I don't know the first thing about driver- and DirectX-programming, so please forgive (and point out) any mistakes.
>
> As a reader of this list I'm wondering; there are quite a few problems that come from the fact that DirectX isn't 1:1 translatable to OpenGL. How about talking to some guys from the GPU-driver department about creating a driver-interface that gives you the right hooks. I guess Parallels and Transgaming would also be interested in such a development. I can imagine that the Nouveau-devs and Xorg-radeon-devs would be more than happy to listen.

This sounds interesting.

It may be useful contacting the nouveau (open source NVidia 3D driver
reverse engineering project) development team to see if they can add
OpenGL extensions for DirectX functionality.

Intel have official open source drivers for Linux, so it would be
useful contacting their developers as well.

Also, with the AMD merger, the radeon drivers are being released as
open source. There are also the reverse engineered radeon drivers, so
they might be interested. And with the graphics card specs being
published, this might make it easier to do this.

> This goes beyond the scope of the Wine project I think. But since Wine
> has the higher level part of DirectX documented and implemented on top
> of OpenGL, wouldn't this be the place to start an independent library?
> Codeweavers has a lot of knowledge about Windows, DirectX and Linux.
> Only Microsoft itself would be a better choice, but I don't think they
> really care that much about Linux. ;)
>
> This would mean that DirectX would be as native to Linux and OSX (and friends) as it would be for Windows. It would be an actual reliable platform that could be used by game developers. It would de-Windows-ize DirectX. Maybe NVIDIA, ATI and Intel would also be interested. They could sell their expensive next-gen cards to those 5% that don't run Windows if games would actually be released for non-Windows OSes.
>
> Or are there really compelling technical reasons to wrap around OpenGL? I can think of the Compiz-issue. Similarly, Microsoft stated that they have to wrap OpenGL around DirectX on Windows, to be able to use both OpenGL and DirectX at the same time (for Aero). But I suspect that this implementation just developed naturally because messing with the drivers would be unthinkable way back when.

It is only Windows applications that use DirectX. All of the Linux
infrastructure (Xgl, Compiz, etc.) is built around OpenGL. Therefore,
for Wine to integrate into the Linux desktop infrastructure, DirectX
needs to map onto OpenGL.

I would say that the best approach would be cooperating with the
nouveau, Intel and Radeon Linux graphics driver developers to add the
extensions needed to support DirectX. The Intel and Radeon developers
would be useful to have on board, as they might be able to give
information on how they are implementing DirectX: this will allow us
to cooperate with the Linux driver teams to get the OpenGL extensions
needed.

As for the nouveau team, it would be interesting to get the renouveau
reverse engineering driver running on Windows to reverse engineer the
DirectX driver and develop the corresponding OpenGL extensions.

- Reece


From hverbeet at gmail.com  Fri Nov 23 05:25:34 2007
From: hverbeet at gmail.com (H. Verbeet)
Date: Fri, 23 Nov 2007 12:25:34 +0100
Subject: Driver-supported DirectX
In-Reply-To: <200711231141.23199.stefan@codeweavers.com>
References: <38934.52163.qm@web50105.mail.re2.yahoo.com>
	<200711231141.23199.stefan@codeweavers.com>
Message-ID: <d658b69e0711230325u9e40765j99c20d4b0059512b@mail.gmail.com>

On 23/11/2007, Stefan D?singer <stefan at codeweavers.com> wrote:
> Hi,
> Implementing Direct3D at driver level won't magically fix things. The issues
> will be still the same: Undocumented or incorrectly documented behavior of
> Direct3D and broken apps which rely on defined results in per se undefined
> situations. There are only a handful of cases where OpenGL<->Direct3D
> differences make problems, like non power of two textures or flat shading.
> Those could as well be fixed with proposing an additional extension, instead
> of turning everything upside down in Linux(and at the same time MacOS,
> Solaris, *BSD).
>
> Hardware doesn't magically execute Direct3D 1:1. In fact, Windows drivers
> essentially do the same: Map D3D to a hardware interface which is a hybrid of
> OpenGL and D3D. You can see this by looking at nvidia extensions: They have a
> GL extension for almost every single bit of d3d functionality that does not
> map 1:1 to gl.
>
What Stefan said :-)

Just to add something to that, most of the issues that are there are
with older versions of Direct3D and fixed function. The more modern
functionality is relatively easier to translate  because D3D and GL
simply expose the programmability of the hardware.


From ngompa13 at gmail.com  Fri Nov 23 05:55:22 2007
From: ngompa13 at gmail.com (King InuYasha)
Date: Fri, 23 Nov 2007 05:55:22 -0600
Subject: Driver-supported DirectX
In-Reply-To: <3f4fd2640711230051l40276fcane33bee0573aed75c@mail.gmail.com>
References: <38934.52163.qm@web50105.mail.re2.yahoo.com>
	<3f4fd2640711230051l40276fcane33bee0573aed75c@mail.gmail.com>
Message-ID: <8278b1b0711230355mb5c3817k63dfa9c5924a2c90@mail.gmail.com>

The problem with all that is that DirectX is tightly integrated into
Windows-specific components, and therefore the only level that it could
exist is along the rest of the Wine layer. I also wish to note that AMD
isn't releasing radeon drivers, they had Novell develop a WHOLE NEW driver
for the ATI cards. Really the best way to deal with issues with DirectX and
OpenGL is to add extensions to OpenGL to expose the functionality in the
hardware that can be translated to DX calls. In Linux, I suppose this
wouldn't be a big issue since the Mesa stuff could be modified to expose the
functionality missing. If Wine can take advantage of compiz or AIGLX
functionality, then that is wonderful. AFAIK, Wine does not utilize compiz
or AIGLX functionality, rather it goes straight to Mesa? I am not a
programmer, so I don't really know.

On Nov 23, 2007 2:51 AM, Reece Dunn <msclrhd at googlemail.com> wrote:

> On 23/11/2007, Remco <remco47 at yahoo.com> wrote:
> > I don't know the first thing about driver- and DirectX-programming, so
> please forgive (and point out) any mistakes.
> >
> > As a reader of this list I'm wondering; there are quite a few problems
> that come from the fact that DirectX isn't 1:1 translatable to OpenGL. How
> about talking to some guys from the GPU-driver department about creating a
> driver-interface that gives you the right hooks. I guess Parallels and
> Transgaming would also be interested in such a development. I can imagine
> that the Nouveau-devs and Xorg-radeon-devs would be more than happy to
> listen.
>
> This sounds interesting.
>
> It may be useful contacting the nouveau (open source NVidia 3D driver
> reverse engineering project) development team to see if they can add
> OpenGL extensions for DirectX functionality.
>
> Intel have official open source drivers for Linux, so it would be
> useful contacting their developers as well.
>
> Also, with the AMD merger, the radeon drivers are being released as
> open source. There are also the reverse engineered radeon drivers, so
> they might be interested. And with the graphics card specs being
> published, this might make it easier to do this.
>
> > This goes beyond the scope of the Wine project I think. But since Wine
> > has the higher level part of DirectX documented and implemented on top
> > of OpenGL, wouldn't this be the place to start an independent library?
> > Codeweavers has a lot of knowledge about Windows, DirectX and Linux.
> > Only Microsoft itself would be a better choice, but I don't think they
> > really care that much about Linux. ;)
> >
> > This would mean that DirectX would be as native to Linux and OSX (and
> friends) as it would be for Windows. It would be an actual reliable platform
> that could be used by game developers. It would de-Windows-ize DirectX.
> Maybe NVIDIA, ATI and Intel would also be interested. They could sell their
> expensive next-gen cards to those 5% that don't run Windows if games would
> actually be released for non-Windows OSes.
> >
> > Or are there really compelling technical reasons to wrap around OpenGL?
> I can think of the Compiz-issue. Similarly, Microsoft stated that they have
> to wrap OpenGL around DirectX on Windows, to be able to use both OpenGL and
> DirectX at the same time (for Aero). But I suspect that this implementation
> just developed naturally because messing with the drivers would be
> unthinkable way back when.
>
> It is only Windows applications that use DirectX. All of the Linux
> infrastructure (Xgl, Compiz, etc.) is built around OpenGL. Therefore,
> for Wine to integrate into the Linux desktop infrastructure, DirectX
> needs to map onto OpenGL.
>
> I would say that the best approach would be cooperating with the
> nouveau, Intel and Radeon Linux graphics driver developers to add the
> extensions needed to support DirectX. The Intel and Radeon developers
> would be useful to have on board, as they might be able to give
> information on how they are implementing DirectX: this will allow us
> to cooperate with the Linux driver teams to get the OpenGL extensions
> needed.
>
> As for the nouveau team, it would be interesting to get the renouveau
> reverse engineering driver running on Windows to reverse engineer the
> DirectX driver and develop the corresponding OpenGL extensions.
>
> - Reece
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071123/2b2a8de7/attachment.htm 

From thunderbird2k at gmx.net  Fri Nov 23 05:56:09 2007
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Fri, 23 Nov 2007 12:56:09 +0100
Subject: WineD3D: Implement detection of ATI cards with Mesa DRI drivers
	[try	3]
In-Reply-To: <4745997F.6060400@rm.pp.ru>
References: <4744C540.70101@rm.pp.ru> <20071122084248.6860@gmx.net>
	<4745997F.6060400@rm.pp.ru>
Message-ID: <20071123115609.296000@gmx.net>

> Roderick Colenbrander wrote:
> > I would really ask you to use the D3DX_CAPABLE() macros as not using
> them can result in bad problems. E.g. a game assuming a certain d3d
> functionality is there while it isn't backed by any GL extension.
> >   
> You certainly do have a point. I will redo the patch a bit later, but 
> before that, I have a couple of questions.
> 
> 1) Checking real capabilities surely can be a good way to approximate 
> the level of used hardware. But could these D3DX_CAPABLE() macros be 
> considered reliable enough to use just them alone (and not the DRI 
> module names) for conceiving the card model? If this is so, then 
> checking of the Mesa renderer string could remain only for detection 
> that the card is from ATI (because it does not give any precise info 
> anyway).

I have done a lot of tests to come to this list of extensions and it is quite good. So the purpose of the macros is to get an impression of what roughly the d3d capabilities of a card are and using GL info (vendor / renderer string) a more exact match is found. But this is not needed. Also note that thanks to this mechanism even if the card isn't known it is at least reported as a card with the same minimum requirements. (A geforce10 or whatever would default to some basic d3d9 card but that is better than nothing)

> 2) Are there any plans to add D3D9B_CAPABLE and D3D9C_CAPABLE (and maybe 
> D3D10_CAPABLE too)? These would immensely help to identify the newer 
> cards. Currently, without such macros, the detection code can't safely 
> report that a card is anything more than the ATI's Direct3D 9 
> lowest-common denominator, Radeon 9500. (See 
> http://en.wikipedia.org/wiki/Radeon for a table of models and their 
> DirectX versions).

D3d10 support is relatively easy to add (check for the geometry shader extension) but only nvidia exports that yet. Checking for d3d9b/d3d9c is more complicated as the differences lie in the number of shader constants and things like that. Perhaps I will extend it with that but I need to dive back into the numbers (some drivers aren't clear about their specifications and that makes it hard)

Note that d3d10 doesn't export the gpu capabilities and device name anymore, so it is only needed for <=d3d9.

Roderick

-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer


From vostok at etersoft.ru  Fri Nov 23 07:01:27 2007
From: vostok at etersoft.ru (Anatoly Lyutin)
Date: Fri, 23 Nov 2007 16:01:27 +0300
Subject: Start: Convert start to Unicode. [try5]
In-Reply-To: <87tznfohnt.fsf@wine.dyndns.org>
References: <473D5C1C.9050004@etersoft.ru>
	<871waqxp4s.fsf@wine.dyndns.org>	<4741EF97.8050905@etersoft.ru>
	<87tznfohnt.fsf@wine.dyndns.org>
Message-ID: <4746CF27.2030007@etersoft.ru>

Alexandre Julliard wrote:
> No, what you need is one function for errors that can happen in normal
> usage (file not found, invalid option etc.) that is Unicode and
> localized, and one function for internal errors (LoadString failures
> etc.) that simply uses WINE_ERR with an English message.
>
>   
I send new version  according your requirements to patches-lists.  Have 
I made all correctly? 


-- 
Best regards
	Anatoly Lyutin.



From stefan at codeweavers.com  Fri Nov 23 09:03:27 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Fri, 23 Nov 2007 16:03:27 +0100
Subject: Driver-supported DirectX
In-Reply-To: <d658b69e0711230325u9e40765j99c20d4b0059512b@mail.gmail.com>
References: <38934.52163.qm@web50105.mail.re2.yahoo.com>
	<200711231141.23199.stefan@codeweavers.com>
	<d658b69e0711230325u9e40765j99c20d4b0059512b@mail.gmail.com>
Message-ID: <200711231603.29775.stefan@codeweavers.com>

Am Freitag, 23. November 2007 12:25:34 schrieb H. Verbeet:
> Just to add something to that, most of the issues that are there are
> with older versions of Direct3D and fixed function. The more modern
> functionality is relatively easier to translate  because D3D and GL
> simply expose the programmability of the hardware.
Not quite, there are a few issues at shader level as well. One issue that 
comes to my mind are the 10 varyings vs 8+2 colors in opengl. It is a driver 
limitation actually, but encouraged by the GLSL spec. An architectural 
problem is that OpenGL does not support an up to date assemler shader 
interface. And all shaders are compiled and linked at runtime, causing a 
short rendering freeze whenever a new shader is used.

> It may be useful contacting the nouveau (open source NVidia 3D driver
> reverse engineering project) development team to see if they can add
> OpenGL extensions for DirectX functionality.
This sounds like a nice idea, but in reality we've been talking about getting 
various X11 or opengl extensions added to $SOFTWARE and it never happened.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071123/8fab5dac/attachment.pgp 

From hverbeet at gmail.com  Fri Nov 23 09:17:18 2007
From: hverbeet at gmail.com (H. Verbeet)
Date: Fri, 23 Nov 2007 16:17:18 +0100
Subject: Driver-supported DirectX
In-Reply-To: <200711231603.29775.stefan@codeweavers.com>
References: <38934.52163.qm@web50105.mail.re2.yahoo.com>
	<200711231141.23199.stefan@codeweavers.com>
	<d658b69e0711230325u9e40765j99c20d4b0059512b@mail.gmail.com>
	<200711231603.29775.stefan@codeweavers.com>
Message-ID: <d658b69e0711230717n170aeafdocd87b1e6aaae378a@mail.gmail.com>

On 23/11/2007, Stefan D?singer <stefan at codeweavers.com> wrote:
> Am Freitag, 23. November 2007 12:25:34 schrieb H. Verbeet:
> > Just to add something to that, most of the issues that are there are
> > with older versions of Direct3D and fixed function. The more modern
> > functionality is relatively easier to translate  because D3D and GL
> > simply expose the programmability of the hardware.
> Not quite, there are a few issues at shader level as well. One issue that
> comes to my mind are the 10 varyings vs 8+2 colors in opengl. It is a driver
> limitation actually, but encouraged by the GLSL spec. An architectural
> problem is that OpenGL does not support an up to date assemler shader
> interface. And all shaders are compiled and linked at runtime, causing a
> short rendering freeze whenever a new shader is used.
>
Well, sure there are issues, but generally those are easier to fix
than in fixed function. I don't consider the lack of an asm interface
much of an issue... it wouldn't correspond directly to the hardware
anyway (and neither does d3d shader asm). Linking time *is* an issue,
but I suspect GL3 will help a bit there.

> > It may be useful contacting the nouveau (open source NVidia 3D driver
> > reverse engineering project) development team to see if they can add
> > OpenGL extensions for DirectX functionality.
> This sounds like a nice idea, but in reality we've been talking about getting
> various X11 or opengl extensions added to $SOFTWARE and it never happened.
>
It would probably have to wait until nouveau actually properly supports 3D.


From dank at kegel.com  Fri Nov 23 09:53:11 2007
From: dank at kegel.com (Dan Kegel)
Date: Fri, 23 Nov 2007 07:53:11 -0800
Subject: Start: Convert start to Unicode. [try7]
Message-ID: <a71bd89a0711230753y3aa7e437ra03ab2925266bde1@mail.gmail.com>

Anatoly,
thank you for working to fix "start" to work better for Unicode,
I should have done that originally.

But you seem to be having trouble getting the patch in,
so here's what little advice I can give:

If there is any difference between versions of your patch,
you should describe it in the patch description.

If there isn't, you should call it a resend, rather than a new try.
- Dan


From vostok at etersoft.ru  Fri Nov 23 10:43:28 2007
From: vostok at etersoft.ru (Anatoly Lyutin)
Date: Fri, 23 Nov 2007 19:43:28 +0300
Subject: Start: Convert start to Unicode. [try7]
In-Reply-To: <a71bd89a0711230753y3aa7e437ra03ab2925266bde1@mail.gmail.com>
References: <a71bd89a0711230753y3aa7e437ra03ab2925266bde1@mail.gmail.com>
Message-ID: <47470330.6000100@etersoft.ru>

Dan Kegel wrote:
> Anatoly,
> thank you for working to fix "start" to work better for Unicode,
> I should have done that originally.
>
>   
You are welcome. :)
> But you seem to be having trouble getting the patch in,
> so here's what little advice I can give:
>
> If there is any difference between versions of your patch,
> you should describe it in the patch description.
>   
Yes, I agree with you.I just have not done it yet, because I thought  
that if my patches were discussed in devel-lists there was no need for that.

> If there isn't, you should call it a resend, rather than a new try.
>   
I will surely do it.
> - Dan
>   

-- 
Best regards
	Anatoly Lyutin.



From thunderbird2k at gmx.net  Fri Nov 23 15:06:30 2007
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Fri, 23 Nov 2007 22:06:30 +0100
Subject: WineD3D: Implement detection of ATI cards with Mesa DRI drivers
	[try 4]
In-Reply-To: <4746F6AA.4030500@rm.pp.ru>
References: <4744C540.70101@rm.pp.ru> <20071122084248.6860@gmx.net>
	<4746F6AA.4030500@rm.pp.ru>
Message-ID: <20071123210630.123600@gmx.net>

> This is an updated version of my previous patch for the same purpose.
> 
> The proposed code now uses the WINE_D3DX_CAPABLE macros instead of DRI 
> module names for guessing the exact card model which is to be returned. 
> The patch also no longer includes manual addition of an entry to the 
> ChangeLog. Thanks to Roderick Colenbrander and Stefan D?singer for the 
> suggestions. I have tested and confirmed that this patch fixes the bug 
> #7267 (http://bugs.winehq.org/show_bug.cgi?id=7267 ) to the same extent 
> as the previous version of the patch did.

I think the code should be like this (in pseudo code) this way also other cards will at least be classified:

case VENDOR_MESA:
    if(D3D9_CAPABLE(gl_info)
       if(strstr(gl_info->gl_renderer, "R300"))
           card = radeon_9500;
       else
           card = generic_nv_card;
    if(D3D8_CAPABLE(...)
       if(strstr(gl_info->gl_renderer, "R200"))
           card = ...

Roderick

-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail


From roman at rm.pp.ru  Fri Nov 23 15:31:24 2007
From: roman at rm.pp.ru (Roman Mamedov)
Date: Sat, 24 Nov 2007 02:31:24 +0500
Subject: WineD3D: Implement detection of ATI cards with Mesa DRI drivers
	[try 4]
In-Reply-To: <20071123210630.123600@gmx.net>
References: <4744C540.70101@rm.pp.ru> <20071122084248.6860@gmx.net>
	<4746F6AA.4030500@rm.pp.ru> <20071123210630.123600@gmx.net>
Message-ID: <474746AC.7030108@rm.pp.ru>

Roderick Colenbrander wrote:
> I think the code should be like this (in pseudo code) this way also other cards will at least be classified:
>
> case VENDOR_MESA:
>     if(D3D9_CAPABLE(gl_info)
>        if(strstr(gl_info->gl_renderer, "R300"))
>            card = radeon_9500;
>        else
>            card = generic_nv_card;
>     if(D3D8_CAPABLE(...)
>        if(strstr(gl_info->gl_renderer, "R200"))
>            card = ...
>   

You are right, but please notice that with my latest patch, the same 
behavior is already achieved, by not "break"-ing at the end of 
VENDOR_MESA case if we didn't match one of ATI module names. This is the 
code that proceeds to be executed then:

...
                break;
            }
            /* Card is probably one of the non-ATI cards which are also 
supported by Mesa.
             * Continue to the fallback behavior of VENDOR_WINE.
             */
        case VENDOR_WINE:
        default:
            /* Default to generic Nvidia hardware based on the supported 
OpenGL extensions. The choice
             * for Nvidia was because the hardware and drivers they make 
are of good quality. This makes
             * them a good generic choice.
             */
            gl_info->gl_vendor = VENDOR_NVIDIA;
            if(WINE_D3D9_CAPABLE(gl_info))
                gl_info->gl_card = CARD_NVIDIA_GEFORCEFX_5600;
            else if(WINE_D3D8_CAPABLE(gl_info))
                gl_info->gl_card = CARD_NVIDIA_GEFORCE3;
            else if(WINE_D3D7_CAPABLE(gl_info))
                gl_info->gl_card = CARD_NVIDIA_GEFORCE;
            else if(WINE_D3D6_CAPABLE(gl_info))
                gl_info->gl_card = CARD_NVIDIA_RIVA_TNT;
            else
                gl_info->gl_card = CARD_NVIDIA_RIVA_128;
...


From thunderbird2k at gmx.net  Fri Nov 23 15:38:47 2007
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Fri, 23 Nov 2007 22:38:47 +0100
Subject: WineD3D: Implement detection of ATI cards with Mesa DRI drivers
	[try 4]
In-Reply-To: <474746AC.7030108@rm.pp.ru>
References: <4744C540.70101@rm.pp.ru> <20071122084248.6860@gmx.net>
	<4746F6AA.4030500@rm.pp.ru> <20071123210630.123600@gmx.net>
	<474746AC.7030108@rm.pp.ru>
Message-ID: <20071123213847.151780@gmx.net>

> Roderick Colenbrander wrote:
> > I think the code should be like this (in pseudo code) this way also
> other cards will at least be classified:
> >
> > case VENDOR_MESA:
> >     if(D3D9_CAPABLE(gl_info)
> >        if(strstr(gl_info->gl_renderer, "R300"))
> >            card = radeon_9500;
> >        else
> >            card = generic_nv_card;
> >     if(D3D8_CAPABLE(...)
> >        if(strstr(gl_info->gl_renderer, "R200"))
> >            card = ...
> >   
> 
> You are right, but please notice that with my latest patch, the same 
> behavior is already achieved, by not "break"-ing at the end of 
> VENDOR_MESA case if we didn't match one of ATI module names.

The main reason why the D3DX_CAPABLE macros should be used before checking the renderer string is that not in all cases all extensions are around while the rendering string can still be the same.

Roderick
-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger


From roman at rm.pp.ru  Fri Nov 23 16:30:28 2007
From: roman at rm.pp.ru (Roman Mamedov)
Date: Sat, 24 Nov 2007 03:30:28 +0500
Subject: WineD3D: Implement detection of ATI cards with Mesa DRI drivers
	[try 4]
In-Reply-To: <20071123213847.151780@gmx.net>
References: <4744C540.70101@rm.pp.ru> <20071122084248.6860@gmx.net>
	<4746F6AA.4030500@rm.pp.ru> <20071123210630.123600@gmx.net>
	<474746AC.7030108@rm.pp.ru> <20071123213847.151780@gmx.net>
Message-ID: <47475484.4070208@rm.pp.ru>

Roderick Colenbrander wrote:
> The main reason why the D3DX_CAPABLE macros should be used before checking the renderer string is that not in all cases all extensions are around while the rendering string can still be the same.

I think it's is quite difficult to say for sure what will be better in 
most or all cases.

The approach proposed by me, is that if the code can be reasonably sure 
that the card is some model from ATI, it should never report the card as 
being nVIDIA.

That is why the patch first looks at the renderer strings (which for 
Mesa can provide a reliable indication if it's an ATI card at all, or 
not), and only then slides inside the model range for exact model, 
according to the extensions/capabilities available. And in case if some 
of them are not available for some reason, it will return a step-lower 
generation of an ATI card, and not nVIDIA one.

I.e. reporting Radeon 9500 as being Radeon 8500 should be OK, but 
reporting it as GeForce 3 might be not, since a program might then use 
some nVIDIA-specific code, or just bail out completely (see issue #7267).


From felix at compsoc.nuigalway.ie  Fri Nov 23 20:50:12 2007
From: felix at compsoc.nuigalway.ie (Darragh Bailey)
Date: Sat, 24 Nov 2007 02:50:12 +0000
Subject: xlviewer install cmdline passed from CreateProcessA to msiexec looks
	wrong
Message-ID: <20071124025012.GA27234@compsoc.nuigalway.ie>

OK, long time lurker, only recently decided to try my hand at coding for
wine.

Picked a bug 9628 and decided to have a bash.

Bug occured because a patch to the msiexec command line parsing was
reverted due to regressions in the xlviewer installer and other apps. I
don't know about the other apps, I can't find a corresponding bug and
only gleaned this bit of info from the changelog and in the cvs mailing
list that tracks commits.
http://www.winehq.org/pipermail/wine-cvs/2007-March/031339.html


After some digging I found that problem was that with current git the
command line being sent to msiexec when installing "RPG Maker" was
missing the msiexec executable. So the msiexec command line parsing
would result in "/i" as being the first element of the arguments array
to be processed. The main loop, expected that msiexec should always be
argv[0], and so will always start from the second element.

Then comparing of what used to happen when msiexec used the call to 
CommandLineToArgvW suggested that use of CommandLineToArgvW was more
correct given the main loop design. If the program name is absent as the
first argument, msiexec would just get back an empty string as the first
element and the arguments to msiexec would start at the second element.


Since this appears more correct, I looked at the behaviour of xlviewer
(free download from microsoft) installer, to see what the differences
were.

I had to add some extra traces to the start of the main function in
msiexec to get an idea of what was going on. Basically they would just
dump out the contents of argv, one per line, so that I could see what it
was getting as the command line.

Added the following to the top of the main function:
	for( i=0; i<argc; i++) {
		WINE_TRACE("bug 9628: argv[%d] = \"%s\"\n", i, argv[i]);
	}

using the newly build wine tree, and just pointing wine at the exe.
The command line msiexec would get on installing xlviewer was

trace:msiexec:main bug 9628: argv[0] = "c:\windows\system32\msiexec.exe"
trace:msiexec:main bug 9628: argv[1] = "/I"
trace:msiexec:main bug 9628: argv[2] =
"C:\windows\temp\IXP001.TMP\XLVIEW.MSI"
trace:msiexec:main bug 9628: argv[3] = "CDCACHE=2"
trace:msiexec:main bug 9628: argv[4] = "LAUNCHEDFROMSETUP=1"
trace:msiexec:main bug 9628: argv[5] =
"SETUPEXEPATH=C:\windows\temp\IXP001.TMP" SETUPEXENAME=SETUP.EXE
/lpiwaeo
C:\windows\temp\Microsoft"
trace:msiexec:main bug 9628: argv[6] = "Office"
trace:msiexec:main bug 9628: argv[7] = "Excel"
trace:msiexec:main bug 9628: argv[8] = "Viewer"
trace:msiexec:main bug 9628: argv[9] = "2003"
trace:msiexec:main bug 9628: argv[10] = "Setup(0004)_Task(0001).txt
CDCACHE=0
DWSETUPLOGFILE=C:\windows\temp\Microsoft"
trace:msiexec:main bug 9628: argv[11] = "Office"
trace:msiexec:main bug 9628: argv[12] = "Excel"
trace:msiexec:main bug 9628: argv[13] = "Viewer"
trace:msiexec:main bug 9628: argv[14] = "2003"
trace:msiexec:main bug 9628: argv[15] = "Setup(0004).txt
DWMSILOGFILE=C:\windows\temp\Microsoft"
trace:msiexec:main bug 9628: argv[16] = "Office"
trace:msiexec:main bug 9628: argv[17] = "Excel"
trace:msiexec:main bug 9628: argv[18] = "Viewer"
trace:msiexec:main bug 9628: argv[19] = "2003"
trace:msiexec:main bug 9628: argv[20] = "Setup(0004)_Task(0001).txt"

Now this looks wrong to me. It looks like there is a bug in how the
command line is being passed to msiexec. The existing code that
parses this command line, is in fact working around this bug.


Adding +process to the WINEDEBUG variable I got to see what
CreateProcessA was calling msiexec with[1]:

L"\"c:\\windows\\system32\\msiexec.exe\"  /I
C:\\windows\\temp\\IXP008.TMP\\XLVIEW.MSI CDCACHE=\"2\"
LAUNCHEDFROMSETUP=\"1\" SETUPEXEPATH=\"C:\\windows\\temp\\IXP008.TMP\\\"
SETUPEXENAME=\"SETUP.EXE\"   /lpiwaeo \"C:\\windows\\temp\\Microsoft
Office Excel Viewer 2003 Setup(0014)_Task(0001).txt\" CDCACHE=\"0\"
DWSETUPLOGFILE=\"C:\\windows\\temp\\Microsoft Office Excel Viewer 2003
Setup(0014).txt\" DWMSILOGFILE=\"C:\\windows\\temp\\Microsoft Office
Excel Viewer 2003 Setup(0014)_Task(0001).txt\""

1. I also have to increase the debug str length in debug.c otherwise the 
end of the string would get dropped.


Now when I run msiexec with the following command line
msiexec /I C:\\windows\\temp\\IXP008.TMP\\XLVIEW.MSI CDCACHE="2"
LAUNCHEDFROMSETUP="1" SETUPEXEPATH="C:\\windows\\temp\\IXP008.TMP\\"
SETUPEXENAME="SETUP.EXE"    /lpiwaeo "C:\\windows\\temp\\Microsoft
Office Excel Viewer 2003 Setup(0014)_Task(0001).txt" CDCACHE="0"
DWSETUPLOGFILE="C:\\windows\\temp\\Microsoft Office Excel Viewer 2003
Setup(0014).txt" DWMSILOGFILE="C:\\windows\\temp\\Microsoft Office Excel
Viewer 2003 Setup(0014)_Task(0001).txt"

I see the following appear in the traces from msiexec:
trace:msiexec:main bug 9628: argv[0] = "programs/msiexec/msiexec.exe.so"
trace:msiexec:main bug 9628: argv[1] = "/I"
trace:msiexec:main bug 9628: argv[2] =
"C:\windows\temp\IXP002.TMP\XLVIEW.MSI"
trace:msiexec:main bug 9628: argv[3] = "CDCACHE=2"
trace:msiexec:main bug 9628: argv[4] = "LAUNCHEDFROMSETUP=1"
trace:msiexec:main bug 9628: argv[5] =
"SETUPEXEPATH=C:\windows\temp\IXP002.TMP\"
trace:msiexec:main bug 9628: argv[6] = "SETUPEXENAME=SETUP.EXE"
trace:msiexec:main bug 9628: argv[7] = "/lpiwaeo"
trace:msiexec:main bug 9628: argv[8] = "C:\windows\temp\Microsoft Office
Excel Viewer 2003 Setup(0003)_Task(0001).txt"
trace:msiexec:main bug 9628: argv[9] = "CDCACHE=0"
trace:msiexec:main bug 9628: argv[10] =
"DWSETUPLOGFILE=C:\windows\temp\Microsoft Office Excel Viewer 2003
Setup(0003).txt"
trace:msiexec:main bug 9628: argv[11] =
"DWMSILOGFILE=C:\windows\temp\Microsoft Office Excel Viewer 2003
Setup(0003)_Task(0001).txt"

Which seems bang on with what msiexec should be getting as its
commandline arguments.

In fact the only way I could pass in the command line to msiexec and get
the same output near the top was with the following:

msiexec /I C:\\windows\\temp\\IXP002.TMP\\XLVIEW.MSI CDCACHE="2"
LAUNCHEDFROMSETUP="1" SETUPEXEPATH="C:\\windows\\temp\\IXP002.TMP\"
SETUPEXENAME="SETUP.EXE"   /lpiwaeo "C:\\windows\\temp\\Microsoft Office
Excel Viewer 2003 Setup\(0003\)_Task\(0001\).txt" CDCACHE="0"
DWSETUPLOGFILE="C:\\windows\\temp\\Microsoft Office Excel Viewer 2003
Setup\(0003\).txt" DWMSILOGFILE="C:\\windows\\temp\\Microsoft Office
Excel Viewer 2003 Setup\(0003\)_Task\(0001\).txt""

Notice the difference between the following:
SETUPEXEPATH="C:\\windows\\temp\\IXP008.TMP\\" = correct command line
SETUPEXEPATH="C:\\windows\\temp\\IXP002.TMP\" = broken

It seems to me that current command line parsing in msiexec is a hack to
work around a bug somewhere between CreateProcessA and where the
executable actually gets run, when you have a directory path ending in a
slash and also enclosed by quotes. It appears that one of the double
slashes at the end gets substituted before its time.


So basically, I'm wondering if I'm actually on the right track here. Is
this a bug in the behaviour of how the command line is sent to the new
process? I've yet to log a bug since I'm still trying to understand what
exactly is happening and if this is in fact a bug.

At the moment I trying to work out how to get more information on what's
happening to the commandline in the create_process function, so I've yet
to work out why the command line is altered by the time it reaches the
msiexec program. Any suggestions are welcome. :)


-- 
Darragh

"Nothing is foolproof to a sufficiently talented fool."


From alex at thehandofagony.com  Fri Nov 23 21:34:57 2007
From: alex at thehandofagony.com (Alexander Nicolaysen =?iso-8859-1?q?S=F8rnes?=)
Date: Sat, 24 Nov 2007 04:34:57 +0100
Subject: [AppDB] Change licence to AGPL
In-Reply-To: <3d57814d0711231901u21fcbef4h16aba8001bdae77@mail.gmail.com>
References: <200711240336.45949.alex@thehandofagony.com>
	<3d57814d0711231901u21fcbef4h16aba8001bdae77@mail.gmail.com>
Message-ID: <200711240434.58105.alex@thehandofagony.com>

On Saturday 24 November 2007 04:01:24 Trent Waddington wrote:
> interesting.  Do you have a list of contributors and their signoff on
> this license change?
>
> Or is it just you two?
>

Well I didn't think that was necessary; but after some thought I realize that 
the AppDB only seemed to include a LICENSE file containing the GPL v2, while 
a GPL/AGPL v3 change would require previous code to be licenced under 'GPL v2 
or later'.

So I'm including the other authors in this mail to see if they agree, or have 
already licenced their code under GPL v2 or later

Sorry for all the mess, but legal stuff isn't really my thing. :)


Alexander N. S?rnes

> On Nov 24, 2007 12:36 PM, Alexander Nicolaysen S?rnes
>
> <alex at thehandofagony.com> wrote:
> > Change licence to AGPL
> >
> >
> >
> > Alexander N. S?rnes




From chmorgan at gmail.com  Fri Nov 23 22:42:46 2007
From: chmorgan at gmail.com (Chris Morgan)
Date: Fri, 23 Nov 2007 23:42:46 -0500
Subject: [AppDB] Change licence to AGPL
In-Reply-To: <200711240434.58105.alex@thehandofagony.com>
References: <200711240336.45949.alex@thehandofagony.com>
	<3d57814d0711231901u21fcbef4h16aba8001bdae77@mail.gmail.com>
	<200711240434.58105.alex@thehandofagony.com>
Message-ID: <f3f1b91a0711232042t49fd0a6o5dc246be8bbf5859@mail.gmail.com>

I think I'm ok with the gpl/agpl v3 change. Are there any other people
using the appdb code that this might affect?

Chris



On Nov 23, 2007 10:34 PM, Alexander Nicolaysen S?rnes
<alex at thehandofagony.com> wrote:
> On Saturday 24 November 2007 04:01:24 Trent Waddington wrote:
> > interesting.  Do you have a list of contributors and their signoff on
> > this license change?
> >
> > Or is it just you two?
> >
>
> Well I didn't think that was necessary; but after some thought I realize that
> the AppDB only seemed to include a LICENSE file containing the GPL v2, while
> a GPL/AGPL v3 change would require previous code to be licenced under 'GPL v2
> or later'.
>
> So I'm including the other authors in this mail to see if they agree, or have
> already licenced their code under GPL v2 or later
>
> Sorry for all the mess, but legal stuff isn't really my thing. :)
>
>
> Alexander N. S?rnes
>
>
> > On Nov 24, 2007 12:36 PM, Alexander Nicolaysen S?rnes
> >
> > <alex at thehandofagony.com> wrote:
> > > Change licence to AGPL
> > >
> > >
> > >
> > > Alexander N. S?rnes
>
>
>
>


From jonathan at ernstfamily.ch  Sat Nov 24 04:25:53 2007
From: jonathan at ernstfamily.ch (Jonathan Ernst)
Date: Sat, 24 Nov 2007 11:25:53 +0100
Subject: [AppDB] Change licence to AGPL
In-Reply-To: <f3f1b91a0711232042t49fd0a6o5dc246be8bbf5859@mail.gmail.com>
References: <200711240336.45949.alex@thehandofagony.com>
	<3d57814d0711231901u21fcbef4h16aba8001bdae77@mail.gmail.com>
	<200711240434.58105.alex@thehandofagony.com>
	<f3f1b91a0711232042t49fd0a6o5dc246be8bbf5859@mail.gmail.com>
Message-ID: <1195899953.7022.4.camel@jernst-desktop>

Hello,

Le vendredi 23 novembre 2007 ? 23:42 -0500, Chris Morgan a ?crit :
> I think I'm ok with the gpl/agpl v3 change. Are there any other people

I'm ok with this change too.

Best regards.



From scott at open-vote.org  Sat Nov 24 05:40:34 2007
From: scott at open-vote.org (Scott Ritchie)
Date: Sat, 24 Nov 2007 03:40:34 -0800
Subject: Asking Valve for Steam Survey Results
In-Reply-To: <3010968c0711140852g35ea420n6183a1fea962ff9e@mail.gmail.com>
References: <473A3719.6090705@open-vote.org>
	<3010968c0711140852g35ea420n6183a1fea962ff9e@mail.gmail.com>
Message-ID: <47480DB2.2000405@open-vote.org>

Brian Vincent wrote:
> On Nov 13, 2007 4:45 PM, Scott Ritchie <scott at open-vote.org> wrote:
>> Does anyone know whom we can contact at Valve for more specific results?
> 
> Here's the answer from Valve to your question:
> 
> ----
> 
> Hey Brian, we would be more than happy to help. I just did a quick query
> for the audio device and found 12 out of 8566 results to contain "wine"
> in the name of the driver. I did the same for video card and found zero,
> if you can give me more details on specific strings or signatures for a
> wine user I could have a look for. We just started this survey today so
> I can run the queries again once we have a larger sample set.
> 
> Our crash reporting system also collects information about the existence
> of wine, about 0.4% of the reports are from Wine users (this is for a
> couple months of data so a statistically significant sample). We have
> around 3 million unique users in a month so that is around 12k wine
> users. Given the large majority of crashes are game code related (and
> not OS dependant) I suspect this is a fair measure for you.
> 
> ----

Thank you so much Brian.  Could we get an update with more recent stats
from the survey?  It's had a few weeks to run now.

Thanks,
Scott Ritchie


From trent.waddington at gmail.com  Fri Nov 23 21:01:24 2007
From: trent.waddington at gmail.com (Trent Waddington)
Date: Sat, 24 Nov 2007 13:01:24 +1000
Subject: [AppDB] Change licence to AGPL
In-Reply-To: <200711240336.45949.alex@thehandofagony.com>
References: <200711240336.45949.alex@thehandofagony.com>
Message-ID: <3d57814d0711231901u21fcbef4h16aba8001bdae77@mail.gmail.com>

interesting.  Do you have a list of contributors and their signoff on
this license change?

Or is it just you two?

On Nov 24, 2007 12:36 PM, Alexander Nicolaysen S?rnes
<alex at thehandofagony.com> wrote:
> Change licence to AGPL
>
>
>
> Alexander N. S?rnes
>
>
>
>


From trent.waddington at gmail.com  Sat Nov 24 00:13:38 2007
From: trent.waddington at gmail.com (Trent Waddington)
Date: Sat, 24 Nov 2007 16:13:38 +1000
Subject: [AppDB] Change licence to AGPL
In-Reply-To: <200711240434.58105.alex@thehandofagony.com>
References: <200711240336.45949.alex@thehandofagony.com>
	<3d57814d0711231901u21fcbef4h16aba8001bdae77@mail.gmail.com>
	<200711240434.58105.alex@thehandofagony.com>
Message-ID: <3d57814d0711232213y6990a3d9i3f35ca0034dba91c@mail.gmail.com>

On Nov 24, 2007 1:34 PM, Alexander Nicolaysen S?rnes
<alex at thehandofagony.com> wrote:
> Well I didn't think that was necessary; but after some thought I realize that
> the AppDB only seemed to include a LICENSE file containing the GPL v2, while
> a GPL/AGPL v3 change would require previous code to be licenced under 'GPL v2
> or later'.
>
> So I'm including the other authors in this mail to see if they agree, or have
> already licenced their code under GPL v2 or later
>
> Sorry for all the mess, but legal stuff isn't really my thing. :)

Yeah, it doesn't matter if they have licensed it under the GPL v2 or
later or not, you can't change the license on their code without their
permission, and if you don't get that permission in writing then they
can contest it at a later date should they ever decide they didn't
want the license changed.

Legal stuff is always messy :)

Trent


From alex at thehandofagony.com  Sat Nov 24 07:54:09 2007
From: alex at thehandofagony.com (Alexander Nicolaysen =?iso-8859-1?q?S=F8rnes?=)
Date: Sat, 24 Nov 2007 14:54:09 +0100
Subject: [AppDB] Change licence to AGPL
In-Reply-To: <f3f1b91a0711232042t49fd0a6o5dc246be8bbf5859@mail.gmail.com>
References: <200711240336.45949.alex@thehandofagony.com>
	<200711240434.58105.alex@thehandofagony.com>
	<f3f1b91a0711232042t49fd0a6o5dc246be8bbf5859@mail.gmail.com>
Message-ID: <200711241454.10160.alex@thehandofagony.com>

On Saturday 24 November 2007 05:42:46 Chris Morgan wrote:
> I think I'm ok with the gpl/agpl v3 change. Are there any other people
> using the appdb code that this might affect?
>
> Chris
>
>

I don't know of anyone using the AppDB at the moment.



Alexander

>
> On Nov 23, 2007 10:34 PM, Alexander Nicolaysen S?rnes
>
> <alex at thehandofagony.com> wrote:
> > On Saturday 24 November 2007 04:01:24 Trent Waddington wrote:
> > > interesting.  Do you have a list of contributors and their signoff on
> > > this license change?
> > >
> > > Or is it just you two?
> >
> > Well I didn't think that was necessary; but after some thought I realize
> > that the AppDB only seemed to include a LICENSE file containing the GPL
> > v2, while a GPL/AGPL v3 change would require previous code to be licenced
> > under 'GPL v2 or later'.
> >
> > So I'm including the other authors in this mail to see if they agree, or
> > have already licenced their code under GPL v2 or later
> >
> > Sorry for all the mess, but legal stuff isn't really my thing. :)
> >
> >
> > Alexander N. S?rnes
> >
> > > On Nov 24, 2007 12:36 PM, Alexander Nicolaysen S?rnes
> > >
> > > <alex at thehandofagony.com> wrote:
> > > > Change licence to AGPL
> > > >
> > > >
> > > >
> > > > Alexander N. S?rnes




From lionel_debroux at yahoo.fr  Sat Nov 24 07:27:40 2007
From: lionel_debroux at yahoo.fr (Lionel_Debroux)
Date: Sat, 24 Nov 2007 14:27:40 +0100
Subject: AppDB and Bugzilla don't currently work...
Message-ID: <474826CC.9060009@yahoo.fr>

Hi,

Both AppDB and Bugzilla currently complain about too many connections to
the server:

(AppDB)
Warning: mysql_connect() [function.mysql-connect]: Too many connections
in /home/winehq/opt/appdb/include/query.php on line 82

Warning: mysql_select_db(): supplied argument is not a valid MySQL-Link
resource in /home/winehq/opt/appdb/include/query.php on line 83

Warning: mysql_real_escape_string() [function.mysql-real-escape-string]:
Too many connections in /home/winehq/opt/appdb/include/query.php on line 116

Warning: mysql_real_escape_string() [function.mysql-real-escape-string]:
A link to the server could not be established in
/home/winehq/opt/appdb/include/query.php on line 116

Warning: mysql_connect() [function.mysql-connect]: Too many connections
in /home/winehq/opt/appdb/include/query.php on line 14
Database error, please try again soon.


(Bugzilla)
Software error:

Can't connect to the database.
Error: Too many connections
  Is your database installed and up and running?
  Do you have the correct username and password selected in localconfig?


For help, please send mail to the webmaster (bugs-admin at winehq.org),
giving this error message and the time and date of the error.



Regards, Lionel Debroux.


From jnewman at codeweavers.com  Sat Nov 24 09:01:54 2007
From: jnewman at codeweavers.com (Jeremy Newman)
Date: Sat, 24 Nov 2007 09:01:54 -0600
Subject: AppDB and Bugzilla don't currently work...
In-Reply-To: <474826CC.9060009@yahoo.fr>
References: <474826CC.9060009@yahoo.fr>
Message-ID: <47483CE2.1000102@codeweavers.com>

Database restarted.

Lionel_Debroux wrote:
> Hi,
>
> Both AppDB and Bugzilla currently complain about too many connections to
> the server:
>
> (AppDB)
> Warning: mysql_connect() [function.mysql-connect]: Too many connections
> in /home/winehq/opt/appdb/include/query.php on line 82
>
> Warning: mysql_select_db(): supplied argument is not a valid MySQL-Link
> resource in /home/winehq/opt/appdb/include/query.php on line 83
>
> Warning: mysql_real_escape_string() [function.mysql-real-escape-string]:
> Too many connections in /home/winehq/opt/appdb/include/query.php on line 116
>
> Warning: mysql_real_escape_string() [function.mysql-real-escape-string]:
> A link to the server could not be established in
> /home/winehq/opt/appdb/include/query.php on line 116
>
> Warning: mysql_connect() [function.mysql-connect]: Too many connections
> in /home/winehq/opt/appdb/include/query.php on line 14
> Database error, please try again soon.
>
>
> (Bugzilla)
> Software error:
>
> Can't connect to the database.
> Error: Too many connections
>   Is your database installed and up and running?
>   Do you have the correct username and password selected in localconfig?
>
>
> For help, please send mail to the webmaster (bugs-admin at winehq.org),
> giving this error message and the time and date of the error.
>
>
>
> Regards, Lionel Debroux.
>
>
>   



From alfred at valvesoftware.com  Sat Nov 24 12:29:26 2007
From: alfred at valvesoftware.com (Alfred Reynolds)
Date: Sat, 24 Nov 2007 10:29:26 -0800
Subject: Asking Valve for Steam Survey Results
In-Reply-To: <47480DB2.2000405@open-vote.org>
References: <473A3719.6090705@open-vote.org><3010968c0711140852g35ea420n6183a1fea962ff9e@mail.gmail.com>
	<47480DB2.2000405@open-vote.org>
Message-ID: <BC2A76AABABF8741A8ADEE62DB1350F80388DF08@exchange2.valvesoftware.com>

The numbers are now 0.13% of total reports coming from Wine users.

- Alfred

> -----Original Message-----
> From: wine-devel-bounces at winehq.org [mailto:wine-devel-
> bounces at winehq.org] On Behalf Of Scott Ritchie
> Sent: Saturday, November 24, 2007 3:41 AM
> To: Brian Vincent
> Cc: Wine Devel
> Subject: Re: Asking Valve for Steam Survey Results
> 
> Brian Vincent wrote:
> > On Nov 13, 2007 4:45 PM, Scott Ritchie <scott at open-vote.org> wrote:
> >> Does anyone know whom we can contact at Valve for more specific
> results?
> >
> > Here's the answer from Valve to your question:
> >
> > ----
> >
> > Hey Brian, we would be more than happy to help. I just did a quick
> query
> > for the audio device and found 12 out of 8566 results to contain
> "wine"
> > in the name of the driver. I did the same for video card and found
> zero,
> > if you can give me more details on specific strings or signatures
for
> a
> > wine user I could have a look for. We just started this survey today
> so
> > I can run the queries again once we have a larger sample set.
> >
> > Our crash reporting system also collects information about the
> existence
> > of wine, about 0.4% of the reports are from Wine users (this is for
a
> > couple months of data so a statistically significant sample). We
have
> > around 3 million unique users in a month so that is around 12k wine
> > users. Given the large majority of crashes are game code related
(and
> > not OS dependant) I suspect this is a fair measure for you.
> >
> > ----
> 
> Thank you so much Brian.  Could we get an update with more recent
stats
> from the survey?  It's had a few weeks to run now.
> 
> Thanks,
> Scott Ritchie
> 



From zac at zacbrown.org  Sun Nov 25 00:37:39 2007
From: zac at zacbrown.org (Zac Brown)
Date: Sun, 25 Nov 2007 01:37:39 -0500
Subject: [Bug 10488] GIT of 16.11 Exeption becaus of VBA while analysing
	a text
In-Reply-To: <E1IwB0W-0000Wr-Pr@wine.codeweavers.com>
References: <E1IwB0W-0000Wr-Pr@wine.codeweavers.com>
Message-ID: <47491833.3020106@zacbrown.org>

wine-bugs at winehq.org wrote:
> http://bugs.winehq.org/show_bug.cgi?id=10488
> 
> 
> 
> 
> 
> --- Comment #14 from Yolande Haneder <yolande at haneder.biz>  2007-11-25 00:30:20 ---
> Re:
> 
> err:ole:StdMarshalImpl_ReleaseMarshalData could not map object ID to stub
> manager, oxid=3700000038, oid=d
> err:ole:CoReleaseMarshalData IMarshal::ReleaseMarshalData failed with error
> 0x8001011d
> 
> Which I have been told to be a memory conflict in C 
> 
> and
> 
> err:ole:apartment_getclassobject DllGetClassObject returned error 0x80040111
> 
> Could someone tell me which file in Wine is concerned so that someone my look
> at it?
> 
> Thank you
> 
> 

Looks like dlls/ole32/marshal.c by the dump. I believe Dan Kegel had
reported a bug for Wine 1.0 based on the dlls/ole32/tests/marshal.c in
which it failed. The relevant bug is as follows:
http://bugs.winehq.com/show_bug.cgi?id=10076


-Zac


From zac at zacbrown.org  Sun Nov 25 00:40:43 2007
From: zac at zacbrown.org (Zac Brown)
Date: Sun, 25 Nov 2007 01:40:43 -0500
Subject: [Bug 10488] GIT of 16.11 Exeption becaus of VBA while analysing
	a text
In-Reply-To: <47491833.3020106@zacbrown.org>
References: <E1IwB0W-0000Wr-Pr@wine.codeweavers.com>
	<47491833.3020106@zacbrown.org>
Message-ID: <474918EB.5040603@zacbrown.org>

Zac Brown wrote:
> wine-bugs at winehq.org wrote:
>> http://bugs.winehq.org/show_bug.cgi?id=10488
>>
>>
>>
>>
>>
>> --- Comment #14 from Yolande Haneder <yolande at haneder.biz>  2007-11-25 00:30:20 ---
>> Re:
>>
>> err:ole:StdMarshalImpl_ReleaseMarshalData could not map object ID to stub
>> manager, oxid=3700000038, oid=d
>> err:ole:CoReleaseMarshalData IMarshal::ReleaseMarshalData failed with error
>> 0x8001011d
>>
>> Which I have been told to be a memory conflict in C 
>>
>> and
>>
>> err:ole:apartment_getclassobject DllGetClassObject returned error 0x80040111
>>
>> Could someone tell me which file in Wine is concerned so that someone my look
>> at it?
>>
>> Thank you
>>
>>
> 
> Looks like dlls/ole32/marshal.c by the dump. I believe Dan Kegel had
> reported a bug for Wine 1.0 based on the dlls/ole32/tests/marshal.c in
> which it failed. The relevant bug is as follows:
> http://bugs.winehq.com/show_bug.cgi?id=10076
> 
> 
> -Zac
> 
> 

As a side note, I was unable to reproduce the bug in 10076 both on a
Feisty install and Gutsy install of Ubuntu.

-Zac


From stefan at codeweavers.com  Sun Nov 25 06:15:10 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 25 Nov 2007 13:15:10 +0100
Subject: wined3d: Bind device framebuffer in ActivateContext
In-Reply-To: <d75158870711241507s3c43ae9dvcb20e7b1ec822299@mail.gmail.com>
References: <d75158870711241507s3c43ae9dvcb20e7b1ec822299@mail.gmail.com>
Message-ID: <200711251315.13466.stefan@codeweavers.com>

Am Sonntag, 25. November 2007 00:07:15 schrieb Allan Tong:
> Fixes failures in visual tests for ddraw and d3d8 when using FBO
> offscreen rendering mode.
>
>  - Allan
This doesn't look right to me. It will most likely break overall FBO support.

There is indeed a problem with the fbo and ActivateContext integration, but 
fixing this is more involved than just setting the framebuffer to 0.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071125/861e7d76/attachment.pgp 

From stefan at codeweavers.com  Sun Nov 25 09:48:37 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 25 Nov 2007 16:48:37 +0100
Subject: bug fix: Prevented strlen(NULL) in PRINTDLG_CreateDevNames()
In-Reply-To: <84abp25zhz.fsf@james.hut.fi>
References: <84abp25zhz.fsf@james.hut.fi>
Message-ID: <200711251648.40536.stefan@codeweavers.com>

Am Sonntag, 25. November 2007 12:35:36 schrieb Jorma Laaksonen:
> Hello!
>
> wine-0.9.49 (as well as many earlier versions) seems to crash when
> PRINTDLG_CreateDevNames() is for some reason called with DeviceDriverName
> equal to NULL.  The real cause of this problem might be somewhere else
> where the NULL is assigned, but this simple fix prevents NULL being
> passed to strlen().
If you suspect that the real problem is somewhere else, it is recommended to 
write a test case to see how Windows deals with this situation. Windows could 
return an error if the device driver name is NULL. If Windows crashes as 
well, your patch would only hide a bug instead of fixing it.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071125/67c4dfa9/attachment.pgp 

From actong88 at gmail.com  Sun Nov 25 11:13:43 2007
From: actong88 at gmail.com (Allan Tong)
Date: Sun, 25 Nov 2007 12:13:43 -0500
Subject: wined3d: Bind device framebuffer in ActivateContext
In-Reply-To: <200711251315.13466.stefan@codeweavers.com>
References: <d75158870711241507s3c43ae9dvcb20e7b1ec822299@mail.gmail.com>
	<200711251315.13466.stefan@codeweavers.com>
Message-ID: <d75158870711250913k4eca0ad6r511969b6791578dd@mail.gmail.com>

On Nov 25, 2007 7:15 AM, Stefan D?singer <stefan at codeweavers.com> wrote:
> Am Sonntag, 25. November 2007 00:07:15 schrieb Allan Tong:
> > Fixes failures in visual tests for ddraw and d3d8 when using FBO
> > offscreen rendering mode.
> >
> >  - Allan
> This doesn't look right to me. It will most likely break overall FBO support.
>
> There is indeed a problem with the fbo and ActivateContext integration, but
> fixing this is more involved than just setting the framebuffer to 0.

Any hints where to start looking?  The way I understand it,
ActivateContext will only try to set the draw buffer to GL_FRONT,
GL_BACK, or GL_AUX0, which should mean that at some point before that,
the framebuffer would need to be set to 0, or do I have that wrong?
Or is it that I didn't reset the framebuffer back to its previous
value?

 - Allan

From stefan at codeweavers.com  Sun Nov 25 12:30:20 2007
From: stefan at codeweavers.com (Stefan =?utf-8?q?D=C3=B6singer?=)
Date: Sun, 25 Nov 2007 19:30:20 +0100
Subject: wined3d: Bind device framebuffer in ActivateContext
In-Reply-To: <d75158870711250913k4eca0ad6r511969b6791578dd@mail.gmail.com>
References: <d75158870711241507s3c43ae9dvcb20e7b1ec822299@mail.gmail.com>
	<200711251315.13466.stefan@codeweavers.com>
	<d75158870711250913k4eca0ad6r511969b6791578dd@mail.gmail.com>
Message-ID: <200711251930.24876.stefan@codeweavers.com>

Am Sonntag, 25. November 2007 18:13:43 schrieb Allan Tong:
> On Nov 25, 2007 7:15 AM, Stefan D?singer <stefan at codeweavers.com> wrote:
> > Am Sonntag, 25. November 2007 00:07:15 schrieb Allan Tong:
> > > Fixes failures in visual tests for ddraw and d3d8 when using FBO
> > > offscreen rendering mode.
> > >
> > >  - Allan
> >
> > This doesn't look right to me. It will most likely break overall FBO
> > support.
> >
> > There is indeed a problem with the fbo and ActivateContext integration,
> > but fixing this is more involved than just setting the framebuffer to 0.
>
> Any hints where to start looking?  The way I understand it,
> ActivateContext will only try to set the draw buffer to GL_FRONT,
> GL_BACK, or GL_AUX0, which should mean that at some point before that,
> the framebuffer would need to be set to 0, or do I have that wrong?
> Or is it that I didn't reset the framebuffer back to its previous
> value?
The framebuffer setup should be merged with ActivateContext, but not by simply 
setting the framebuffer to 0. Currently there are two issues: the one you are 
seeing(the complaints from opengl), and multithreading issues.

Parts of the code call ActivateContext before setting the fbo: In this case 
you can get errors in glDrawBuffers. Other parts call the fbo setup before 
calling ActivateContext. In this case the app can crash after a rendering 
thread switch because no GL context is active.

The whole issue is pretty complex unfortunately. One issue is that we cannot 
select context and drawable separately for onscreen rendering, and pbuffer 
offscreen rendering. In the case of fbos, the drawable can be set without 
changing the context.

Another issue is that ActivateContext deals with one buffer only, but with fbo 
we can have multiple simultaneous ones(GL_ARB_draw_buffers, or multiple 
render targets in d3d speak). In case of onscreen rendering only one render 
target may be active from the d3d side, and in case of back/aux and pbuffer 
offscreen rendering we're limited to one target from the opengl side.

What has to be done in some way is to merge apply_fbo_state() with 
ActivateContext. My original idea was to select the primary target and the 
depthstencil buffer in ActivateContext similarly to the existing code, and 
have higher render targets set in the state manager. Unfortunately drivers do 
not like that, and we have to set all color and depth attachments of the fbo 
at once.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071125/44836211/attachment.pgp 

From thunderbird2k at gmx.net  Sun Nov 25 13:26:21 2007
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Sun, 25 Nov 2007 20:26:21 +0100
Subject: wined3d: Bind device framebuffer in ActivateContext
In-Reply-To: <200711251930.24876.stefan@codeweavers.com>
References: <d75158870711241507s3c43ae9dvcb20e7b1ec822299@mail.gmail.com>
	<200711251315.13466.stefan@codeweavers.com>
	<d75158870711250913k4eca0ad6r511969b6791578dd@mail.gmail.com>
	<200711251930.24876.stefan@codeweavers.com>
Message-ID: <20071125192621.256220@gmx.net>

> > On Nov 25, 2007 7:15 AM, Stefan D?singer <stefan at codeweavers.com>
> wrote:
> > > Am Sonntag, 25. November 2007 00:07:15 schrieb Allan Tong:
> > > > Fixes failures in visual tests for ddraw and d3d8 when using FBO
> > > > offscreen rendering mode.
> > > >
> > > >  - Allan
> > >
> > > This doesn't look right to me. It will most likely break overall FBO
> > > support.
> > >
> > > There is indeed a problem with the fbo and ActivateContext
> integration,
> > > but fixing this is more involved than just setting the framebuffer to
> 0.
> >
> > Any hints where to start looking?  The way I understand it,
> > ActivateContext will only try to set the draw buffer to GL_FRONT,
> > GL_BACK, or GL_AUX0, which should mean that at some point before that,
> > the framebuffer would need to be set to 0, or do I have that wrong?
> > Or is it that I didn't reset the framebuffer back to its previous
> > value?
> The framebuffer setup should be merged with ActivateContext, but not by
> simply 
> setting the framebuffer to 0. Currently there are two issues: the one you
> are 
> seeing(the complaints from opengl), and multithreading issues.
> 
> Parts of the code call ActivateContext before setting the fbo: In this
> case 
> you can get errors in glDrawBuffers. Other parts call the fbo setup before
> calling ActivateContext. In this case the app can crash after a rendering 
> thread switch because no GL context is active.
> 
> The whole issue is pretty complex unfortunately. One issue is that we
> cannot 
> select context and drawable separately for onscreen rendering, and pbuffer
> offscreen rendering. In the case of fbos, the drawable can be set without 
> changing the context.
> 
> Another issue is that ActivateContext deals with one buffer only, but with
> fbo 
> we can have multiple simultaneous ones(GL_ARB_draw_buffers, or multiple 
> render targets in d3d speak). In case of onscreen rendering only one
> render 
> target may be active from the d3d side, and in case of back/aux and
> pbuffer 
> offscreen rendering we're limited to one target from the opengl side.
> 
> What has to be done in some way is to merge apply_fbo_state() with 
> ActivateContext. My original idea was to select the primary target and the
> depthstencil buffer in ActivateContext similarly to the existing code, and
> have higher render targets set in the state manager. Unfortunately drivers
> do 
> not like that, and we have to set all color and depth attachments of the
> fbo 
> at once.
> 

Also don't forget that a lot of function calls (especially in surface.c) still mess with glDrawBuffer themselves. For a lot of calls this is redundant.

Roderick
-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail


From stefan at codeweavers.com  Sun Nov 25 14:05:40 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 25 Nov 2007 21:05:40 +0100
Subject: wined3d: Bind device framebuffer in ActivateContext
In-Reply-To: <20071125192621.256220@gmx.net>
References: <d75158870711241507s3c43ae9dvcb20e7b1ec822299@mail.gmail.com>
	<200711251930.24876.stefan@codeweavers.com>
	<20071125192621.256220@gmx.net>
Message-ID: <200711252105.42549.stefan@codeweavers.com>

Am Sonntag, 25. November 2007 20:26:21 schrieb Roderick Colenbrander:

> Also don't forget that a lot of function calls (especially in surface.c)
> still mess with glDrawBuffer themselves. For a lot of calls this is
> redundant.
Yes, most of them should be removed now that ActivateContext takes care of 
that. Some are needed, e.g. blt_to_texture_hwstretch switches to AUX0 / AUX1 
to use it as a temporary buffer
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071125/006b3b84/attachment.pgp 

From leslie_alistair at hotmail.com  Sun Nov 25 15:27:44 2007
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Mon, 26 Nov 2007 08:27:44 +1100
Subject: shdocvw: Silence common invalid QueryInterface FIXMEs.
References: <4749BA7B.9030507@codeweavers.com>
Message-ID: <ficpdt$8l5$1@ger.gmane.org>

>     hres = IUnknown_QueryInterface(unk, &IID_IRunnableObject, 
> (void**)&runnable);
>     ok(hres == E_NOINTERFACE, "QueryInterface returned %08x, expected 
> E_NOINTERFACE\n", hres);
>     ok(runnable == NULL, "runnable=%p, ezpected NULL\n", runnable);
> +
> +    hres = IUnknown_QueryInterface(unk, &IID_IPerPropertyBrowsing, 
> (void**)&propbrowse);
> +    ok(hres == E_NOINTERFACE, "QueryInterface returned %08x, expected 
> E_NOINTERFACE\n", hres);
> +    ok(runnable == NULL, "runnable=%p, ezpected NULL\n", runnable);
> +
> +    hres = IUnknown_QueryInterface(unk, &IID_IOleCache, (void**)&cache);
> +    ok(hres == E_NOINTERFACE, "QueryInterface returned %08x, expected 
> E_NOINTERFACE\n", hres);
> +    ok(cache == NULL, "runnable=%p, ezpected NULL\n", runnable);
> }
Hi Jacek,
  The tests seem wrong.  Is there a reson your printing runnable twice, and 
not propbrowse and cache.

Best Regards
 Alistair Leslie-Hughes 





From actong88 at gmail.com  Mon Nov 26 00:00:38 2007
From: actong88 at gmail.com (Allan Tong)
Date: Mon, 26 Nov 2007 01:00:38 -0500
Subject: wined3d: Bind device framebuffer in ActivateContext
In-Reply-To: <200711251930.24876.stefan@codeweavers.com>
References: <d75158870711241507s3c43ae9dvcb20e7b1ec822299@mail.gmail.com>
	<200711251315.13466.stefan@codeweavers.com>
	<d75158870711250913k4eca0ad6r511969b6791578dd@mail.gmail.com>
	<200711251930.24876.stefan@codeweavers.com>
Message-ID: <d75158870711252200r4684de95x1e7a109446707e5b@mail.gmail.com>

> The framebuffer setup should be merged with ActivateContext, but not by simply
> setting the framebuffer to 0. Currently there are two issues: the one you are
> seeing(the complaints from opengl), and multithreading issues.
>
> Parts of the code call ActivateContext before setting the fbo: In this case
> you can get errors in glDrawBuffers. Other parts call the fbo setup before
> calling ActivateContext. In this case the app can crash after a rendering
> thread switch because no GL context is active.

Ah, ok, I think I've seen the threading issues as well.

> The whole issue is pretty complex unfortunately. One issue is that we cannot
> select context and drawable separately for onscreen rendering, and pbuffer
> offscreen rendering. In the case of fbos, the drawable can be set without
> changing the context.
>
> Another issue is that ActivateContext deals with one buffer only, but with fbo
> we can have multiple simultaneous ones(GL_ARB_draw_buffers, or multiple
> render targets in d3d speak). In case of onscreen rendering only one render
> target may be active from the d3d side, and in case of back/aux and pbuffer
> offscreen rendering we're limited to one target from the opengl side.
>
> What has to be done in some way is to merge apply_fbo_state() with
> ActivateContext. My original idea was to select the primary target and the
> depthstencil buffer in ActivateContext similarly to the existing code, and
> have higher render targets set in the state manager. Unfortunately drivers do
> not like that, and we have to set all color and depth attachments of the fbo
> at once.

Thanks for the info.

 - Allan


From dank at kegel.com  Mon Nov 26 00:10:45 2007
From: dank at kegel.com (Dan Kegel)
Date: Sun, 25 Nov 2007 22:10:45 -0800
Subject: 1.0 bugs
Message-ID: <a71bd89a0711252210x33a5e7f1k60c2fad0bfe5c38b@mail.gmail.com>

[putting on tastemaster hat]

So far, 82 bugs have been nominated to be fixed for 1.0.
I checked a bunch of them, and so far most look
reasonable.  Some even look easy or have patches, e.g.
http://bugs.winehq.org/show_bug.cgi?id=5402
http://bugs.winehq.org/show_bug.cgi?id=5884
http://bugs.winehq.org/show_bug.cgi?id=7544
http://bugs.winehq.org/show_bug.cgi?id=7571
http://bugs.winehq.org/show_bug.cgi?id=9104
http://bugs.winehq.org/show_bug.cgi?id=10147

The list looks meaty enough that it's probably worth
folks going through and seeing what they can pick off.

Stuff that's silly or too hard - just skip it for now,
we'll defer those for later.
- Dan


From dank at kegel.com  Mon Nov 26 00:21:59 2007
From: dank at kegel.com (Dan Kegel)
Date: Sun, 25 Nov 2007 22:21:59 -0800
Subject: Fontforge and building wine
Message-ID: <a71bd89a0711252221x717b4d6cx940715c5cab2e1b1@mail.gmail.com>

It's been mentioned many times, but building Wine
without a recent fontforge yields a wine that doesn't
work too well.  Tonight, for instance, I built wine
on an updated dapper system, and forgot; here
are the commands I had to use to recover
(just in case somebody needs to do this again).
The fontforge I chose just happens to be the latest;
the --without-freetype-bytecode option is there
to keep configure from searching the whole freaking
hard drive for the nonexistent freetype source tree.

 tar -xjvf fontforge_full-20071110.tar.bz2
 cd fontforge-20071110/
 ./configure --prefix=/usr/local/fontforge --without-freetype-bytecode
 make
 sudo make install
 cd ~/wine-git
 cd fonts
 make clean
 PATH=/usr/local/fontforge/bin:$PATH make

- Dan


From mstefani at redhat.com  Mon Nov 26 04:38:55 2007
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Mon, 26 Nov 2007 11:38:55 +0100
Subject: urlmon: Wrap heap functions.
In-Reply-To: <4749B9FA.7080002@codeweavers.com>
References: <4749B9FA.7080002@codeweavers.com>
Message-ID: <474AA23F.7080900@redhat.com>

Hello!

(Jacek, this is not directed at you but a general rant).
HeapAlloc is an awful API and even its creators wrap it in a couple of
DLLs. In Wine HeapAlloc gets wrapped in different places, each using a
different name and even a different naming convention. This makes the
code harder to understand for people that browse the code (people doing
janitorial work) as they have to check every time if the function is yet
another wrapper around HeapFree or if the function is doing more than
that. And this makes it even harder for static code analyzing tools.

I therefor propose to standardize all the internal HeapAlloc wrappers to
a common name and form, Something along the lines of:
walloc()
wzalloc()
wrealloc()
wzrealloc()
wfree()
It's short and concise and doesn't conflict with the Win32 API.

Comments?
bye
	michael

Jacek Caban wrote:
> diff --git a/dlls/urlmon/urlmon_main.h b/dlls/urlmon/urlmon_main.h
> index 6c2887e..aeb0eb2 100644
> --- a/dlls/urlmon/urlmon_main.h
> +++ b/dlls/urlmon/urlmon_main.h
> @@ -63,4 +63,24 @@ HRESULT start_binding(LPCWSTR url, IBindCtx *pbc, REFIID riid, void **ppv);
>  
>  HRESULT create_binding_protocol(LPCWSTR url, IInternetProtocol **protocol);
>  
> +static inline void *urlmon_alloc(size_t len)
> +{
> +    return HeapAlloc(GetProcessHeap(), 0, len);
> +}
> +
> +static inline void *urlmon_alloc_zero(size_t len)
> +{
> +    return HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, len);
> +}
> +
> +static inline void *urlmon_realloc(void *mem, size_t len)
> +{
> +    return HeapReAlloc(GetProcessHeap(), 0, mem, len);
> +}
> +
> +static inline BOOL urlmon_free(void *mem)
> +{
> +    return HeapFree(GetProcessHeap(), 0, mem);
> +}
> +
>  #endif /* __WINE_URLMON_MAIN_H */


-- 
Michael Stefaniuc                           Tel.: +49-711-96437-199
Consulting Communications Engineer          Fax.: +49-711-96437-111
--------------------------------------------------------------------
Reg. Adresse: Red Hat GmbH, Hauptst?tter Strasse 58, 70178 Stuttgart
Handelsregister: Amtsgericht Stuttgart HRB 153243
Gesch?ftsf?hrer: Brendan Lane, Charlie Peters, Michael Cunningham,
                 Werner Knoblich


From zajec5polish at gmail.com  Mon Nov 26 05:17:07 2007
From: zajec5polish at gmail.com (=?UTF-8?Q?Rafa=C5=82_Mi=C5=82ecki?=)
Date: Mon, 26 Nov 2007 12:17:07 +0100
Subject: [keyboard] GetAsyncKeyState: request for fixing #5623
In-Reply-To: <14b026160711070156saade11qe2680cfbbb193068@mail.gmail.com>
References: <14b026160711070156saade11qe2680cfbbb193068@mail.gmail.com>
Message-ID: <14b026160711260317w23bf29fag76694bff2b42c67f@mail.gmail.com>

2007/11/7, Rafa? Mi?ecki <zajec5polish at gmail.com>:
> Bug is quite well decribed in:
> http://bugs.winehq.org/show_bug.cgi?id=5623 but if you don't
> understand this, I can try to explain more detailed.
>
> So my request is someone try to fix this bug. Anyone have a free
> moment for this, please?

Really, not a chance for fixing this? I know you are busy, have own
life, efc. but... maybe? Anyone, please?


-- 
Rafa? Mi?ecki

From dmitry at codeweavers.com  Mon Nov 26 05:44:37 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 26 Nov 2007 19:44:37 +0800
Subject: d3dx8: Implementation of D3DXAssembleShaderFromFileA using
	D3DXAssembleShaderFromFileW
References: <64681.158.169.9.14.1196073448.squirrel@www.ilidium.com>
Message-ID: <028901c83021$bae9fd10$6700fea9@DMITRY>

<luis.busquets at ilidium.com> wrote:

> +  LPWSTR pSrcFileW = NULL;
> +  DWORD len;
> +  HRESULT ret;
> +  if (pSrcFile)
> +     {
> +        len = MultiByteToWideChar( CP_ACP, 0, pSrcFile, -1, NULL, 0 );
> +        pSrcFileW = HeapAlloc( GetProcessHeap(), 0, len * sizeof(WCHAR) );
> +        MultiByteToWideChar( CP_ACP, 0, pSrcFile, -1, pSrcFileW, len );
> + ret=D3DXAssembleShaderFromFileW(pSrcFileW, Flags, ppConstants, ppCompiledShader, ppCompilationErrors);
> + HeapFree( GetProcessHeap(), 0, pSrcFileW );
> + return ret;
> +     }
> +  else return D3DXERR_INVALIDDATA;
>  }

Usually it's much more readable and helps to avoid not necessary indentation
to check parameters at the start of the function and return right away with
appropriate error code. Besides you are mixing tabs and spaces.
 
> -HRESULT WINAPI D3DXAssembleShaderFromFileW(LPSTR pSrcFile, DWORD Flags,
> +HRESULT WINAPI D3DXAssembleShaderFromFileW(LPWSTR pSrcFile, DWORD Flags,

You marked pSrcFile parameter 'const' in D3DXAssembleShaderFromFileA declaration
but not in D3DXAssembleShaderFromFileW, any reason for that?

-- 
Dmitry.


From julliard at winehq.org  Mon Nov 26 06:07:09 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 26 Nov 2007 13:07:09 +0100
Subject: widl [1/7]: Output working exception handling macros.  [take 2]
In-Reply-To: <20071122011753.GG26712@linux.ucla.edu> (Dan Hipschman's message
	of "Wed, 21 Nov 2007 17:17:53 -0800")
References: <20071122011753.GG26712@linux.ucla.edu>
Message-ID: <87fxytnrbm.fsf@wine.dyndns.org>

Dan Hipschman <dsh at linux.ucla.edu> writes:

> This is essentially the same as the last attempt but doesn't add a wine-
> internal function to kernel32.  It just puts the code directly in the
> widl-generated exception handler.  An alternative is to handle these access-
> based page faults for which we can continue in the signal handler (signal_i386,
> etc., in ntdll) so they never actually result in an exception being raised.
> I'm not sure if anything depends on the current behavior and didn't want to
> mess much more with the exception handling code than I had to.

You shouldn't have to do anything of the kind, there's no reason that
the generated code has to duplicate the unhandled exception filter. What
you have to do is to filter properly and not catch exceptions you are
not interested in. For cases where Windows would catch the access
violation exception, then the unhandled filter won't be called on
Windows either, that's the way it's supposed to work.

-- 
Alexandre Julliard
julliard at winehq.org


From lionel_debroux at yahoo.fr  Mon Nov 26 06:11:54 2007
From: lionel_debroux at yahoo.fr (Lionel Debroux)
Date: Mon, 26 Nov 2007 13:11:54 +0100 (CET)
Subject: urlmon: Wrap heap functions.
Message-ID: <640557.45295.qm@web52911.mail.re2.yahoo.com>

Hi,

> In Wine HeapAlloc gets wrapped in different places, each using a
> different name and even a different naming convention. This makes the
> code harder to understand for people that browse the code (people doing
> janitorial work) as they have to check every time if the function is yet
> another wrapper around HeapFree or if the function is doing more than
> that. And this makes it even harder for static code analyzing tools.
I second Michael on that.

A number of spurious entries previously in his list of potential issues
detected by Smatch
( http://people.redhat.com/mstefani/wine/smatch/bugs_all.html )
were due to the wrappers around HeapFree that the script wasn't yet
aware of.
Currently, the list of functions that allocate memory, in the
unfree_wine script, contains 33 entries. The list of functions that free
memory contains 34 entries.


> I therefore propose to standardize all the internal HeapAlloc wrappers
> to a common name and form, Something along the lines of:
> walloc()
> wzalloc()
> wrealloc()
> wzrealloc()
> wfree()
> It's short and concise and doesn't conflict with the Win32 API.
I like that solution.


Bye,
Lionel.


      ____________________________________________________________________________________________
Yahoo! Mail innove : interface hyper pratique, messenger int?gr?, couleurs - http://mail.yahoo.fr


From stefandoesinger at gmx.at  Mon Nov 26 06:20:33 2007
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Mon, 26 Nov 2007 13:20:33 +0100
Subject: d3dx8: Implementation of D3DXAssembleShaderFromFileA using
	D3DXAssembleShaderFromFileW
In-Reply-To: <64681.158.169.9.14.1196073448.squirrel@www.ilidium.com>
References: <64681.158.169.9.14.1196073448.squirrel@www.ilidium.com>
Message-ID: <200711261320.39163.stefandoesinger@gmx.at>

Am Montag, 26. November 2007 11:37:28 schrieb luis.busquets at ilidium.com:
> ---
>  dlls/d3dx8/d3dx8_main.c |   22 ++++++++++++++++------
>  include/d3dx8core.h     |    4 ++--
>  2 files changed, 18 insertions(+), 8 deletions(-)
Please watch out with indentions. You are mixing tabs and spaces in 
D3DXAssembleShaderFromFileA, so the code looks a bit dissorted here.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071126/b6958f66/attachment.pgp 

From stefandoesinger at gmx.at  Mon Nov 26 06:45:27 2007
From: stefandoesinger at gmx.at (Stefan =?utf-8?q?D=C3=B6singer?=)
Date: Mon, 26 Nov 2007 13:45:27 +0100
Subject: [keyboard] GetAsyncKeyState: request for fixing #5623
In-Reply-To: <14b026160711260317w23bf29fag76694bff2b42c67f@mail.gmail.com>
References: <14b026160711070156saade11qe2680cfbbb193068@mail.gmail.com>
	<14b026160711260317w23bf29fag76694bff2b42c67f@mail.gmail.com>
Message-ID: <200711261345.30253.stefandoesinger@gmx.at>

Am Montag, 26. November 2007 12:17:07 schrieb Rafa? Mi?ecki:
> 2007/11/7, Rafa? Mi?ecki <zajec5polish at gmail.com>:
> > Bug is quite well decribed in:
> > http://bugs.winehq.org/show_bug.cgi?id=5623 but if you don't
> > understand this, I can try to explain more detailed.
> >
> > So my request is someone try to fix this bug. Anyone have a free
> > moment for this, please?
>
> Really, not a chance for fixing this? I know you are busy, have own
> life, efc. but... maybe? Anyone, please?
The usual way for that is either to offer payment to someone to fix it, or fix 
it yourself.

Offering bug bounties was tried in the past, but I don't know how well they 
worked. The issue is that usually affordable bounties are not comparable to 
usual salaries and the issues involved with handling the bounty and reading 
into the code. $100 for a bug bounty is quite a lot already, but at 
codeweavers we have some estimation that fixing a minor bug costs about $1000 
to $1500 to fix(http://www.codeweavers.com/services/engagements/) .

So the most efficient way to get a bug fixed is to read into the code 
yourself.

The bottom line is that while a free software project may be freely 
downloadable, but it is not a place where one can expect service for free.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071126/4ba45b30/attachment.pgp 

From dank at kegel.com  Mon Nov 26 06:49:25 2007
From: dank at kegel.com (Dan Kegel)
Date: Mon, 26 Nov 2007 04:49:25 -0800
Subject: 1.0 bugs
In-Reply-To: <a71bd89a0711252210x33a5e7f1k60c2fad0bfe5c38b@mail.gmail.com>
References: <a71bd89a0711252210x33a5e7f1k60c2fad0bfe5c38b@mail.gmail.com>
Message-ID: <a71bd89a0711260449n789423eay185eb190facf30f6@mail.gmail.com>

On Nov 25, 2007 10:10 PM, Dan Kegel <dank at kegel.com> wrote:
> So far, 82 bugs have been nominated to be fixed for 1.0.

Forgot to mention:
http://wiki.winehq.org/WineReleaseCriteria
has a handy link to a bugzilla query that shows the list of 1.0 bugs.


From juan.lang at gmail.com  Mon Nov 26 14:53:23 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 26 Nov 2007 12:53:23 -0800
Subject: [PATCH 3/3] advapi32: Add support for using the Mac Keychain
	services as a backend for the credential functions instead of
	the registry.
Message-ID: <3a768c550711261253h669baf0dlda9fc94443f86c0a@mail.gmail.com>

Hi Rob,

@@ -232,6 +239,198 @@ static DWORD registry_read_credential(HKEY hkey,
PCREDENTIALW credential,
     return ret;
 }

+static DWORD mac_read_credential_from_item(SecKeychainItemRef item,
BOOL require_password,
+                                           PCREDENTIALW credential,
char *buffer,
+                                           DWORD *len)

You're missing compilation protection here (and elsewhere) on non-Apple systems.
--Juan


From rob at codeweavers.com  Mon Nov 26 16:09:40 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Mon, 26 Nov 2007 22:09:40 +0000
Subject: [PATCH 3/3] advapi32: Add support for using the Mac Keychain
	services as a backend for the credential functions instead of the
	registry.
In-Reply-To: <3a768c550711261253h669baf0dlda9fc94443f86c0a@mail.gmail.com>
References: <3a768c550711261253h669baf0dlda9fc94443f86c0a@mail.gmail.com>
Message-ID: <474B4424.3080901@codeweavers.com>

Juan Lang wrote:
> Hi Rob,
>
> @@ -232,6 +239,198 @@ static DWORD registry_read_credential(HKEY hkey,
> PCREDENTIALW credential,
>      return ret;
>  }
>
> +static DWORD mac_read_credential_from_item(SecKeychainItemRef item,
> BOOL require_password,
> +                                           PCREDENTIALW credential,
> char *buffer,
> +                                           DWORD *len)
>
> You're missing compilation protection here (and elsewhere) on non-Apple systems.
>   

Ah, yes. Thanks!

-- 
Rob Shearman



From juan.lang at gmail.com  Mon Nov 26 17:42:25 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 26 Nov 2007 15:42:25 -0800
Subject: ole32: Add tests for WdtpInterfacePointer_* functions.
Message-ID: <3a768c550711261542u2024c291y1ea4f5f91dc61557@mail.gmail.com>

Hi Rob,

+        ok(*(DWORD *)wireip == 0x44, "wireip + 0x0 should be 0x4c
instead of 0x%08x\n", *(DWORD *)wireip);
+        wireip += sizeof(DWORD);
+        ok(*(DWORD *)wireip == 0x44, "wireip + 0x8 should be 0x4c
instead of 0x%08x\n", *(DWORD *)wireip);

Shouldn't these be "should be 0x44 instead of..."?
--Juan


From infyquest at gmail.com  Mon Nov 26 18:49:59 2007
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Mon, 26 Nov 2007 18:49:59 -0600
Subject: xdg_user_dirs patches
Message-ID: <36bf289b0711261649j4cc9747bl7b70e42eb8fd4756@mail.gmail.com>

Hi Lei,

I think a new file for user dir look up in the shell32 is of no use.
Rather than we can add it to the xdg.c and xdg.h, as it contains the
generic xdg code for shell32.
Its like having all xdg specific code at one place.
This is my personal opinion about those patches.

Thanks,
VJ


From dmitry at codeweavers.com  Mon Nov 26 21:16:26 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 27 Nov 2007 11:16:26 +0800
Subject: d3dx8: Implementation of WINAPI D3DXAssembleShaderFromFileA
References: <474B0247.4010609@ilidium.com>
Message-ID: <00fc01c830c4$fb933130$6700fea9@DMITRY>

""Luis C. Busquets P?rez"" <luis.busquets at ilidium.com> wrote:

> Changed the if clauses to make the implementation more readable.
...
> +  if ( !pSrcFile )
> +   return D3DXERR_INVALIDDATA;
> +  else
> +  {
> +   len = MultiByteToWideChar( CP_ACP, 0, pSrcFile, -1, NULL, 0 );
> +   pSrcFileW = HeapAlloc( GetProcessHeap(), 0, len * sizeof(WCHAR) );
> +   MultiByteToWideChar( CP_ACP, 0, pSrcFile, -1, pSrcFileW, len );
> +   ret=D3DXAssembleShaderFromFileW(pSrcFileW, Flags, ppConstants, ppCompiledShader, ppCompilationErrors);
> +   HeapFree( GetProcessHeap(), 0, pSrcFileW );
> +   return ret;
> +  }
> }

This is not more readable than a previous version. There is no need
for 'else {}' construct and therefore for additional indentation level
at all.

-- 
Dmitry. 



From luis.busquets at ilidium.com  Tue Nov 27 01:55:06 2007
From: luis.busquets at ilidium.com (luis.busquets at ilidium.com)
Date: Tue, 27 Nov 2007 08:55:06 +0100 (CET)
Subject: d3dx8: Implementation of WINAPI D3DXAssembleShaderFromFileA
In-Reply-To: <00fc01c830c4$fb933130$6700fea9@DMITRY>
References: <474B0247.4010609@ilidium.com>
	<00fc01c830c4$fb933130$6700fea9@DMITRY>
Message-ID: <58866.158.169.9.14.1196150106.squirrel@www.ilidium.com>

I say that it is more readable because I understood you wanted the return
code as soon as possible, but, anyway, what would you propose as code for
this function?

Would the following work for you?

+
+  if ( !pSrcFile )
+   return D3DXERR_INVALIDDATA;
+  else
+  {
+   LPWSTR pSrcFileW = NULL;
+   DWORD len;
+   HRESULT ret;
+   len = MultiByteToWideChar( CP_ACP, 0, pSrcFile, -1, NULL, 0 );
+   pSrcFileW = HeapAlloc( GetProcessHeap(), 0, len * sizeof(WCHAR) );
+   MultiByteToWideChar( CP_ACP, 0, pSrcFile, -1, pSrcFileW, len );
+   ret=D3DXAssembleShaderFromFileW(pSrcFileW, Flags, ppConstants,
ppCompiledShader, ppCompilationErrors);
+   HeapFree( GetProcessHeap(), 0, pSrcFileW );
+   return ret;
+  }
}


>
> This is not more readable than a previous version. There is no need
> for 'else {}' construct and therefore for additional indentation level
> at all.
>
> --
> Dmitry.
>
>




From kai.blin at gmail.com  Tue Nov 27 02:18:51 2007
From: kai.blin at gmail.com (Kai Blin)
Date: Tue, 27 Nov 2007 09:18:51 +0100
Subject: Some thoughts about next GSoC
In-Reply-To: <200711221138.24153.kai.blin@gmail.com>
References: <200711221138.24153.kai.blin@gmail.com>
Message-ID: <200711270919.03028.kai.blin@gmail.com>

On Thursday 22 November 2007 11:38:19 Kai Blin wrote:

> Comments?

Thanks for the comments so far. I'll just go and flesh out the wiki page some 
more during next week, then we can talk about the individual steps if people 
think they need discussion.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071127/fe21459e/attachment.pgp 

From mstefani at redhat.com  Tue Nov 27 02:28:11 2007
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Tue, 27 Nov 2007 09:28:11 +0100
Subject: d3dx8: Implementation of WINAPI D3DXAssembleShaderFromFileA
In-Reply-To: <58866.158.169.9.14.1196150106.squirrel@www.ilidium.com>
References: <474B0247.4010609@ilidium.com>	<00fc01c830c4$fb933130$6700fea9@DMITRY>
	<58866.158.169.9.14.1196150106.squirrel@www.ilidium.com>
Message-ID: <474BD51B.4030004@redhat.com>

luis.busquets at ns1.ilidium.com wrote:
> I say that it is more readable because I understood you wanted the return
> code as soon as possible, but, anyway, what would you propose as code for
> this function?
> 
> Would the following work for you?
Just go for
if ( !pSrcFile )
   return D3DXERR_INVALIDDATA;

LPWSTR pSrcFileW = NULL;
DWORD len;
HRESULT ret;
...

Like Dimitry said the "else" is not needed at all.

bye
	michael

> +
> +  if ( !pSrcFile )
> +   return D3DXERR_INVALIDDATA;
> +  else
> +  {
> +   LPWSTR pSrcFileW = NULL;
> +   DWORD len;
> +   HRESULT ret;
> +   len = MultiByteToWideChar( CP_ACP, 0, pSrcFile, -1, NULL, 0 );
> +   pSrcFileW = HeapAlloc( GetProcessHeap(), 0, len * sizeof(WCHAR) );
> +   MultiByteToWideChar( CP_ACP, 0, pSrcFile, -1, pSrcFileW, len );
> +   ret=D3DXAssembleShaderFromFileW(pSrcFileW, Flags, ppConstants,
> ppCompiledShader, ppCompilationErrors);
> +   HeapFree( GetProcessHeap(), 0, pSrcFileW );
> +   return ret;
> +  }
> }
> 
> 
>> This is not more readable than a previous version. There is no need
>> for 'else {}' construct and therefore for additional indentation level
>> at all.
>>
>> --
>> Dmitry.
>>
>>
> 
> 
> 
> 


-- 
Michael Stefaniuc               Tel.: +49-711-96437-199
Sr. Network Engineer            Fax.: +49-711-96437-111
--------------------------------------------------------------------
Reg. Adresse: Red Hat GmbH, Hauptst?tter Strasse 58, 70178 Stuttgart
Handelsregister: Amtsgericht Stuttgart HRB 153243
Gesch?ftsf?hrer: Brendan Lane, Charlie Peters, Michael Cunningham,
                 Werner Knoblich


From luis.busquets at ilidium.com  Tue Nov 27 03:24:55 2007
From: luis.busquets at ilidium.com (luis.busquets at ilidium.com)
Date: Tue, 27 Nov 2007 10:24:55 +0100 (CET)
Subject: modified:   dlls/d3dx8/d3dx8_main.c 	modified:   include/d3dx8core.h
References: In-Reply-To: 
Message-ID: <42441.158.169.9.14.1196155495.squirrel@www.ilidium.com>

else eliminated.

---
 dlls/d3dx8/d3dx8_main.c |   18 +++++++++++++-----
 include/d3dx8core.h     |    2 +-
 2 files changed, 14 insertions(+), 6 deletions(-)

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 4de71070adf570936e1abf67c7030b0d6356ae8f.diff
Type: text/x-patch
Size: 2077 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071127/88b18238/attachment.bin 

From kai.blin at gmail.com  Tue Nov 27 04:18:52 2007
From: kai.blin at gmail.com (Kai Blin)
Date: Tue, 27 Nov 2007 11:18:52 +0100
Subject: TransGaming's dpnet (DirectPlay 8)
In-Reply-To: <4743B72A.5010408@transgaming.com>
References: <4743B72A.5010408@transgaming.com>
Message-ID: <200711271118.59174.kai.blin@gmail.com>

On Wednesday 21 November 2007 05:42:18 Gavriel State wrote:

> Enclosed here is a patch to today's WineHQ git tree with our dpnet
> implementation in the hopes that someone finds it useful.  Beyond
> ensuring that it compiles and links, it has not been tested at all with
> WineHQ.

That's funny, it doesn't even apply for me against today's git, and the last 
changes to dlls/dpnet are months old. Would you be so kind and supply the 
plain source code of dlls/dpnet/address.c ?

I've pulled the patch apart and the other changes apply or are trivial to fix 
manually.

Once the code compiles for me, I'll push it to a public git repo. I think the 
next step would be adding some tests.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071127/e80ec133/attachment.pgp 

From stefandoesinger at gmx.at  Tue Nov 27 04:36:41 2007
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Tue, 27 Nov 2007 11:36:41 +0100
Subject: modified: dlls/d3dx8/d3dx8_main.c
	=?iso-8859-1?q?=09modified=3A__?= include/d3dx8core.h
In-Reply-To: <42441.158.169.9.14.1196155495.squirrel@www.ilidium.com>
References: <42441.158.169.9.14.1196155495.squirrel@www.ilidium.com>
Message-ID: <200711271136.43952.stefandoesinger@gmx.at>

Am Dienstag, 27. November 2007 10:24:55 schrieb luis.busquets at ilidium.com:
> else eliminated.
>
> ---
>  dlls/d3dx8/d3dx8_main.c |   18 +++++++++++++-----
>  include/d3dx8core.h     |    2 +-
>  2 files changed, 14 insertions(+), 6 deletions(-)
Wrong mailing list?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071127/c25ccc3a/attachment.pgp 

From jjmckenzie51 at earthlink.net  Mon Nov 26 21:28:07 2007
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Mon, 26 Nov 2007 20:28:07 -0700
Subject: Reading Registry Example
Message-ID: <474B8EC7.9030905@earthlink.net>

All:
I would like to work on the eventlog.c and would like pointers to an
example of reading a registry example under Wine.

Thank you.

James



From dmitry at codeweavers.com  Tue Nov 27 05:21:15 2007
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 27 Nov 2007 19:21:15 +0800
Subject: d3dx8: Implementation of D3DXAssembleShaderFromFileA
References: In-Reply-To: <62351.158.169.9.14.1196157012.squirrel@www.ilidium.com>
Message-ID: <028001c830e7$a1d79d20$6700fea9@DMITRY>

<luis.busquets at ilidium.com> wrote:

> else eliminated

Did you actually compile it? If you did, did you see a warning
you introduced?

-- 
Dmitry.


From julliard at winehq.org  Tue Nov 27 05:43:46 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 27 Nov 2007 12:43:46 +0100
Subject: [dbghelp 2/11] Return TRUE in SymInitializeW if process is
	already initialized and add a number of TRACEs
In-Reply-To: <df81031c0711210716s1aef438ep5e486b757dd12edd@mail.gmail.com>
	(Jason Green's message of "Wed, 21 Nov 2007 10:16:42 -0500")
References: <df81031c0711210716s1aef438ep5e486b757dd12edd@mail.gmail.com>
Message-ID: <87sl2rncb1.fsf@wine.dyndns.org>

"Jason Green" <jave27 at gmail.com> writes:

> @@ -216,11 +216,17 @@ static BOOL WINAPI process_invade_cb(PCSTR name, ULONG base, ULONG size, PVOID u
>      char        tmp[MAX_PATH];
>      HANDLE      hProcess = (HANDLE)user;
>  
> -    if (!GetModuleFileNameExA(hProcess, (HMODULE)base, 
> -                              tmp, sizeof(tmp)))
> +
> +    TRACE("found module %s {base = 0x%08x, size = 0x%08x, user = %p}\n", debugstr_a(name), base, size, user);
> +
> +    if (!GetModuleFileNameExA(hProcess, (HMODULE)base, tmp, sizeof(tmp))){
> +        WARN("could not find the full path name of the module.  Using the base name of %s instead\n", debugstr_a(name));
>          lstrcpynA(tmp, name, sizeof(tmp));
> +    }
>  
> +    TRACE("loading the module %s {base = 0x%08x}\n", debugstr_a(name), base);
>      SymLoadModule(hProcess, 0, tmp, name, base, size);
> +    TRACE("done loading the module\n");
>      return TRUE;

You are adding way too many traces, most of which are not necessary.
Here for instance, SymLoadModule already contains traces, so there's no
need to add traces around the call. It's fine to do that sort of thing
to help following things when you are trying to understand the code, but
afterwards they should be removed.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Nov 27 05:46:49 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 27 Nov 2007 12:46:49 +0100
Subject: [dbghelp 1/11] Update some mscvpdb.h definitions and descriptions
In-Reply-To: <df81031c0711210715t625ef043m966e6ef263b6da54@mail.gmail.com>
	(Jason Green's message of "Wed, 21 Nov 2007 10:15:50 -0500")
References: <df81031c0711210715t625ef043m966e6ef263b6da54@mail.gmail.com>
Message-ID: <87ir3nnc5y.fsf@wine.dyndns.org>

"Jason Green" <jave27 at gmail.com> writes:

> The Original Author for the following set of patches is Eric van
> Beurden from TransGaming, Inc.

When submitting patches written by someone else please include a
valid From: line in the patch header with his full name and email.

-- 
Alexandre Julliard
julliard at winehq.org


From rob at codeweavers.com  Tue Nov 27 05:55:14 2007
From: rob at codeweavers.com (Robert Shearman)
Date: Tue, 27 Nov 2007 11:55:14 +0000
Subject: David Adam : d3dx8: Implement D3DXQuaternionInverse.
In-Reply-To: <E1IuWNI-0001Th-BZ@wine.codeweavers.com>
References: <E1IuWNI-0001Th-BZ@wine.codeweavers.com>
Message-ID: <474C05A2.3030401@codeweavers.com>

Alexandre Julliard wrote:
>   /*_________________D3DXQUATERNION________________*/
>  
> -D3DXQUATERNION* WINAPI D3DXQuaternionMultiply(D3DXQUATERNION * pout, CONST D3DXQUATERNION *pq1, CONST D3DXQUATERNION * pq2)
> +D3DXQUATERNION* WINAPI D3DXQuaternionInverse(D3DXQUATERNION *pout, CONST D3DXQUATERNION *pq)
> +{
> +    D3DXQUATERNION temp;
> +    FLOAT norm;
> +
> +    norm = D3DXQuaternionLengthSq(pq);
> +    if ( !norm )
> +    {
> +     pout->x = 0.0f;
> +     pout->y = 0.0f;
> +     pout->z = 0.0f;
> +     pout->w = 0.0f;
> +    }
> +    else
> +    {
> +    D3DXQuaternionConjugate(&temp, pq);
> +    pout->x = temp.x / norm;
> +    pout->y = temp.y / norm;
> +    pout->z = temp.z / norm;
> +    pout->w = temp.w / norm;
> +    }
> +    return pout;
> +}
> +
> +D3DXQUATERNION* WINAPI D3DXQuaternionMultiply(D3DXQUATERNION *pout, CONST D3DXQUATERNION *pq1, CONST D3DXQUATERNION *pq2)
>  {
>      pout->x = pq2->w * pq1->x + pq2->x * pq1->w + pq2->y * pq1->z - pq2->z * pq1->y;
>      pout->y = pq2->w * pq1->y - pq2->x * pq1->z + pq2->y * pq1->w + pq2->z * pq1->x;

This change causes the following warnings for me:
math.c: In function ?D3DXQuaternionInverse?:
math.c:695: warning: ?temp.x? may be used uninitialised in this function
math.c:695: warning: ?temp.y? may be used uninitialised in this function
math.c:695: warning: ?temp.z? may be used uninitialised in this function
math.c:695: warning: ?temp.w? may be used uninitialised in this function

$ gcc --version
gcc (GCC) 4.0.3 (Ubuntu 4.0.3-1ubuntu5)
Copyright (C) 2006 Free Software Foundation, Inc.
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

I believe that this is causes by D3DXQuaternionConjugate not writing to 
temp in one case (pq being NULL) and the compiler not recognising that 
this case is already covered by the !norm branch above, since 
D3DXQuaternionLengthSq will return 0.0f if pq is NULL.

The attached patch works around the warning. However, there are 
currently no tests for the case of pq being NULL so I don't know whether 
it is correct.

-- 
Rob Shearman

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: d3dx_warning_fix.diff
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20071127/3bc3d324/attachment.txt 

From julliard at winehq.org  Tue Nov 27 07:31:30 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 27 Nov 2007 14:31:30 +0100
Subject: USER32: win16 applications should not see long filenames returned
	from dialog control (try 4) (RESEND)
In-Reply-To: <474450D3.5000100@palosanto.com> ("Alex =?utf-8?Q?Villac?=
	=?utf-8?Q?=C3=AD=22's?= message of
	"Wed, 21 Nov 2007 10:37:55 -0500")
References: <474450D3.5000100@palosanto.com>
Message-ID: <87ejebn7bh.fsf@wine.dyndns.org>

Alex Villac??s Lasso <a_villacis at palosanto.com> writes:

> Changelog:
> * Win16 applications should not see long filenames. Change directory
> listbox to return short names when called from the 16-bit wrappers.

You are still calling GetShortPathName on potentially uninitialized
data. You simply can't do this with a wrapper around the 32-bit
DlgDirSelect, you have to duplicate the code. But first it would be
worth checking if the listbox shouldn't rather be populated with short
path names in the first place.

-- 
Alexandre Julliard
julliard at winehq.org


From alex at thehandofagony.com  Tue Nov 27 07:44:15 2007
From: alex at thehandofagony.com (Alexander Nicolaysen =?iso-8859-1?q?S=F8rnes?=)
Date: Tue, 27 Nov 2007 14:44:15 +0100
Subject: Reading Registry Example
In-Reply-To: <474B8EC7.9030905@earthlink.net>
References: <474B8EC7.9030905@earthlink.net>
Message-ID: <200711271444.16072.alex@thehandofagony.com>

On Tuesday 27 November 2007 04:28:07 James McKenzie wrote:
> All:
> I would like to work on the eventlog.c and would like pointers to an
> example of reading a registry example under Wine.
>
> Thank you.
>
> James


You can access the registry using the same functions that you would use on 
Windows.  Our wordpad and notepad clones read/write to the registry; look in 
the 'programs' folder of the Wine source.



Alexander N. S?rnes


From julliard at winehq.org  Tue Nov 27 07:57:56 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 27 Nov 2007 14:57:56 +0100
Subject: msvcrt heap: fix _aligned_offset_realloc (move correct block of
	memory); add a comment to explain why. [1/2]
In-Reply-To: <964986.70316.qm@web52905.mail.re2.yahoo.com> (Lionel Debroux's
	message of "Mon, 26 Nov 2007 10:08:59 +0100 (CET)")
References: <964986.70316.qm@web52905.mail.re2.yahoo.com>
Message-ID: <87abozn63f.fsf@wine.dyndns.org>

Lionel Debroux <lionel_debroux at yahoo.fr> writes:

> +   Therefore, "size" bytes of actual data have to be moved from the offset
> +   they were at in the old block (temp + old_padding) to the offset they
> +   have to be in the new block (temp + new_padding == memblock).
> +*/
>      if (new_padding != old_padding)
> -        memmove((char *)memblock + old_padding, (char *)memblock + new_padding, size);
> +        memmove((char *)memblock, (char *)temp + old_padding, size);

You also have to take into account the fact that the size may have
changed.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Nov 27 08:14:43 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 27 Nov 2007 15:14:43 +0100
Subject: user32: Fix a couple of typos
In-Reply-To: <200711211619.04632.andrew.talbot@talbotville.com> (Andrew
	Talbot's message of "Wed, 21 Nov 2007 16:19:04 +0000")
References: <200711211619.04632.andrew.talbot@talbotville.com>
Message-ID: <8763znn5bg.fsf@wine.dyndns.org>

Andrew Talbot <andrew.talbot at talbotville.com> writes:

> Changelog:
>     user32: Fix a couple of typos.

The patch is clearly correct but it causes test failures, so it looks
like more work is needed here:

../../../tools/runtest -q -P wine -M user32.dll -T ../../.. -p user32_test.exe.so dde.c && touch dde.ok
dde.c:250: Test failed: Unhandled msg: 000080c2
dde.c:243: Test failed: client failed with 1 error(s)
make[2]: *** [dde.ok] Error 1

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Nov 27 08:22:17 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 27 Nov 2007 15:22:17 +0100
Subject: urlmon: Wrap heap functions.
In-Reply-To: <474AA23F.7080900@redhat.com> (Michael Stefaniuc's message of
	"Mon, 26 Nov 2007 11:38:55 +0100")
References: <4749B9FA.7080002@codeweavers.com> <474AA23F.7080900@redhat.com>
Message-ID: <871wabn4yu.fsf@wine.dyndns.org>

Michael Stefaniuc <mstefani at redhat.com> writes:

> I therefor propose to standardize all the internal HeapAlloc wrappers to
> a common name and form, Something along the lines of:
> walloc()
> wzalloc()
> wrealloc()
> wzrealloc()
> wfree()
> It's short and concise and doesn't conflict with the Win32 API.

Standardizing them is OK, but the names aren't very good, especially
walloc looks too much like malloc. It's suggest something like
heap_alloc, heap_alloc_zero, etc.

-- 
Alexandre Julliard
julliard at winehq.org


From mstefani at redhat.com  Tue Nov 27 08:43:53 2007
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Tue, 27 Nov 2007 15:43:53 +0100
Subject: urlmon: Wrap heap functions.
In-Reply-To: <871wabn4yu.fsf@wine.dyndns.org>
References: <4749B9FA.7080002@codeweavers.com> <474AA23F.7080900@redhat.com>
	<871wabn4yu.fsf@wine.dyndns.org>
Message-ID: <474C2D29.9030505@redhat.com>

Alexandre Julliard wrote:
> Michael Stefaniuc <mstefani at redhat.com> writes:
> 
>> I therefor propose to standardize all the internal HeapAlloc wrappers to
>> a common name and form, Something along the lines of:
>> walloc()
>> wzalloc()
>> wrealloc()
>> wzrealloc()
>> wfree()
>> It's short and concise and doesn't conflict with the Win32 API.
> 
> Standardizing them is OK, but the names aren't very good, especially
> walloc looks too much like malloc. It's suggest something like
> heap_alloc, heap_alloc_zero, etc.
Yeah, i went for the convention used by the Linux kernel replacing 'k'
with 'w'. But I don't mind how they are named as long as it is consistent.

I'll do a janitorial task page for this and start sending patches.

bye
	michael
-- 
Michael Stefaniuc                           Tel.: +49-711-96437-199
Consulting Communications Engineer          Fax.: +49-711-96437-111
--------------------------------------------------------------------
Reg. Adresse: Red Hat GmbH, Hauptst?tter Strasse 58, 70178 Stuttgart
Handelsregister: Amtsgericht Stuttgart HRB 153243
Gesch?ftsf?hrer: Brendan Lane, Charlie Peters, Michael Cunningham,
                 Werner Knoblich


From frank.richter at gmail.com  Tue Nov 27 09:04:41 2007
From: frank.richter at gmail.com (Frank Richter)
Date: Tue, 27 Nov 2007 16:04:41 +0100
Subject: d3dx8: Implementation of WINAPI D3DXAssembleShaderFromFileA
In-Reply-To: <474BD51B.4030004@redhat.com>
References: <474B0247.4010609@ilidium.com>	<00fc01c830c4$fb933130$6700fea9@DMITRY>	<58866.158.169.9.14.1196150106.squirrel@www.ilidium.com>
	<474BD51B.4030004@redhat.com>
Message-ID: <474C3209.7010109@gmail.com>

On 27.11.2007 09:28, Michael Stefaniuc wrote:
> Just go for
> if ( !pSrcFile )
>    return D3DXERR_INVALIDDATA;
> 
> LPWSTR pSrcFileW = NULL;
> DWORD len;
> HRESULT ret;
> ...

That's C++, not C, isn't it?

-f.r.


From mstefani at redhat.com  Tue Nov 27 09:19:56 2007
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Tue, 27 Nov 2007 16:19:56 +0100
Subject: d3dx8: Implementation of WINAPI D3DXAssembleShaderFromFileA
In-Reply-To: <474C3209.7010109@gmail.com>
References: <474B0247.4010609@ilidium.com>	<00fc01c830c4$fb933130$6700fea9@DMITRY>	<58866.158.169.9.14.1196150106.squirrel@www.ilidium.com>	<474BD51B.4030004@redhat.com>
	<474C3209.7010109@gmail.com>
Message-ID: <474C359C.9080709@redhat.com>

Frank Richter wrote:
> On 27.11.2007 09:28, Michael Stefaniuc wrote:
>> Just go for
>> if ( !pSrcFile )
>>    return D3DXERR_INVALIDDATA;
>>
>> LPWSTR pSrcFileW = NULL;
>> DWORD len;
>> HRESULT ret;
>> ...
> 
> That's C++, not C, isn't it?
No it is C as C99 allows to have the variable definitions in the middle
of the code. But Wine itself doesn't allow that and i have missed that.

bye
	michael
-- 
Michael Stefaniuc                           Tel.: +49-711-96437-199
Consulting Communications Engineer          Fax.: +49-711-96437-111
--------------------------------------------------------------------
Reg. Adresse: Red Hat GmbH, Hauptst?tter Strasse 58, 70178 Stuttgart
Handelsregister: Amtsgericht Stuttgart HRB 153243
Gesch?ftsf?hrer: Brendan Lane, Charlie Peters, Michael Cunningham,
                 Werner Knoblich


From julliard at winehq.org  Tue Nov 27 09:58:10 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 27 Nov 2007 16:58:10 +0100
Subject: urlmon: Callback can be NULL
In-Reply-To: <fidaj1$jjg$1@ger.gmane.org> (Alistair Leslie-Hughes's message of
	"Mon, 26 Nov 2007 13:13:48 +1100")
References: <fidaj1$jjg$1@ger.gmane.org>
Message-ID: <87ve7nllyl.fsf@wine.dyndns.org>

Alistair Leslie-Hughes <leslie_alistair at hotmail.com> writes:

> Hi,
>   Changelog:
> 	urlmon: The callback parameter can be null, check pointer before using.

This breaks the tests:

../../../tools/runtest -q -P wine -M urlmon.dll -T ../../.. -p urlmon_test.exe.so stream.c && touch stream.ok
stream.c:210: Test failed: unexpected call OnDataAvailable
stream.c:329: Test failed: IStream_Read failed with error 0x00000001
stream.c:330: Test failed: read data differs from file
make: *** [stream.ok] Error 3

-- 
Alexandre Julliard
julliard at winehq.org


From David.Adam at math.cnrs.fr  Tue Nov 27 07:10:06 2007
From: David.Adam at math.cnrs.fr (David.Adam at math.cnrs.fr)
Date: Tue, 27 Nov 2007 14:10:06 +0100
Subject: David Adam : d3dx8: Implement D3DXQuaternionInverse.
In-Reply-To: <474C05A2.3030401@codeweavers.com>
References: <E1IuWNI-0001Th-BZ@wine.codeweavers.com>
	<474C05A2.3030401@codeweavers.com>
Message-ID: <20071127141006.kr79m2w62o4s8kwo@webmail.math.cnrs.fr>

Robert Shearman <rob at codeweavers.com> a ??crit? :

> Alexandre Julliard wrote:
>>  /*_________________D3DXQUATERNION________________*/
>> -D3DXQUATERNION* WINAPI D3DXQuaternionMultiply(D3DXQUATERNION *  
>> pout, CONST D3DXQUATERNION *pq1, CONST D3DXQUATERNION * pq2)
>> +D3DXQUATERNION* WINAPI D3DXQuaternionInverse(D3DXQUATERNION *pout,  
>> CONST D3DXQUATERNION *pq)
>> +{
>> +    D3DXQUATERNION temp;
>> +    FLOAT norm;
>> +
>> +    norm = D3DXQuaternionLengthSq(pq);
>> +    if ( !norm )
>> +    {
>> +     pout->x = 0.0f;
>> +     pout->y = 0.0f;
>> +     pout->z = 0.0f;
>> +     pout->w = 0.0f;
>> +    }
>> +    else
>> +    {
>> +    D3DXQuaternionConjugate(&temp, pq);
>> +    pout->x = temp.x / norm;
>> +    pout->y = temp.y / norm;
>> +    pout->z = temp.z / norm;
>> +    pout->w = temp.w / norm;
>> +    }
>> +    return pout;
>> +}
>> +
>> +D3DXQUATERNION* WINAPI D3DXQuaternionMultiply(D3DXQUATERNION  
>> *pout, CONST D3DXQUATERNION *pq1, CONST D3DXQUATERNION *pq2)
>> {
>>     pout->x = pq2->w * pq1->x + pq2->x * pq1->w + pq2->y * pq1->z -  
>> pq2->z * pq1->y;
>>     pout->y = pq2->w * pq1->y - pq2->x * pq1->z + pq2->y * pq1->w +  
>> pq2->z * pq1->x;
>
> This change causes the following warnings for me:
> math.c: In function ?D3DXQuaternionInverse?:
> math.c:695: warning: ?temp.x? may be used uninitialised in this function
> math.c:695: warning: ?temp.y? may be used uninitialised in this function
> math.c:695: warning: ?temp.z? may be used uninitialised in this function
> math.c:695: warning: ?temp.w? may be used uninitialised in this function
>
> $ gcc --version
> gcc (GCC) 4.0.3 (Ubuntu 4.0.3-1ubuntu5)
> Copyright (C) 2006 Free Software Foundation, Inc.
> This is free software; see the source for copying conditions. There is NO
> warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
>
> I believe that this is causes by D3DXQuaternionConjugate not writing  
> to temp in one case (pq being NULL) and the compiler not recognising  
> that this case is already covered by the !norm branch above, since  
> D3DXQuaternionLengthSq will return 0.0f if pq is NULL.
>
> The attached patch works around the warning. However, there are  
> currently no tests for the case of pq being NULL so I don't know  
> whether it is correct.
>
> -- 
> Rob Shearman

I have just tried with a native d3dx8 dll. Giving a null pointer to pq  
leads to a crash. So, the application must take care to not send such  
a pointer.
So, I think that to avoid the warning that you see, we could just  
initialize the variable temp before the if condition.

David


From zajec5polish at gmail.com  Tue Nov 27 14:42:34 2007
From: zajec5polish at gmail.com (=?UTF-8?Q?Rafa=C5=82_Mi=C5=82ecki?=)
Date: Tue, 27 Nov 2007 21:42:34 +0100
Subject: [keyboard] GetAsyncKeyState: request for fixing #5623
In-Reply-To: <200711261345.30253.stefandoesinger@gmx.at>
References: <14b026160711070156saade11qe2680cfbbb193068@mail.gmail.com>
	<14b026160711260317w23bf29fag76694bff2b42c67f@mail.gmail.com>
	<200711261345.30253.stefandoesinger@gmx.at>
Message-ID: <14b026160711271242g5db553ddsb9d327de4d076c07@mail.gmail.com>

2007/11/26, Stefan D?singer <stefandoesinger at gmx.at>:
> Am Montag, 26. November 2007 12:17:07 schrieb Rafa? Mi?ecki:
> > 2007/11/7, Rafa? Mi?ecki <zajec5polish at gmail.com>:
> > > Bug is quite well decribed in:
> > > http://bugs.winehq.org/show_bug.cgi?id=5623 but if you don't
> > > understand this, I can try to explain more detailed.
> > >
> > > So my request is someone try to fix this bug. Anyone have a free
> > > moment for this, please?
> >
> > Really, not a chance for fixing this? I know you are busy, have own
> > life, efc. but... maybe? Anyone, please?
> The usual way for that is either to offer payment to someone to fix it, or fix
> it yourself.
>
> Offering bug bounties was tried in the past, but I don't know how well they
> worked. The issue is that usually affordable bounties are not comparable to
> usual salaries and the issues involved with handling the bounty and reading
> into the code. $100 for a bug bounty is quite a lot already, but at
> codeweavers we have some estimation that fixing a minor bug costs about $1000
> to $1500 to fix(http://www.codeweavers.com/services/engagements/) .
Sure, in a lot of cases the easiest way is to pay and get it done.
Unfortunately not every person is able to offer hundreds of $ (as I am
not).


> So the most efficient way to get a bug fixed is to read into the code
> yourself.
I tried. I found function implementing GetAsyncKeyState but that's all
I was able to do. Improveing this implementation was much over my
little skills.



> The bottom line is that while a free software project may be freely
> downloadable, but it is not a place where one can expect service for free.
I understand that and hope there wasn't anything wrong in my request.
I tried be kind and ask for help, not demand it.


-- 
Rafa? Mi?ecki

From truiken at gmail.com  Tue Nov 27 15:37:50 2007
From: truiken at gmail.com (James Hawkins)
Date: Tue, 27 Nov 2007 15:37:50 -0600
Subject: [PATCH] svchost: Implementation of svchost (revised submission)
In-Reply-To: <20071127212140.GA21231@knuth.cs.hmc.edu>
References: <20071127212140.GA21231@knuth.cs.hmc.edu>
Message-ID: <22821af30711271337r6f7ac4f2w3b5d5a029fd1447a@mail.gmail.com>

On Nov 27, 2007 3:21 PM, Roy Shea <roy at cs.hmc.edu> wrote:
> This is a revised and standalone version of svchost patch.  Changes in
> this revision include:
>
> - Unicode based with a simple UNICODE to ASCII function used to
>   convert the lpProcName passed into GetProcAddress
>

I think you're misunderstanding Wine's policy about not using ansi
functions or constant strings.  That only applies to external APIs
because we don't want to convert from unicode to ansi (lossy).
There's nothing wrong with just using:

GetProcAddress(library, "ServiceMain");

There aren't many instances where W->A is valid.

> - Using HEAP_ZERO_MEMORY flag in calls to HeapAlloc and HeapReAlloc
>   that are allocating space for a string and the NULL terminator to
>   set the NULL terminator to zero.
>

Why HEAP_ZERO_MEMORY when you can just set the last byte to NULL?

str[LEN - 1] = '\0';

-- 
James Hawkins


From mikazkow at tlen.pl  Tue Nov 27 16:44:57 2007
From: mikazkow at tlen.pl (Maciej Kowalczyk)
Date: Tue, 27 Nov 2007 23:44:57 +0100
Subject: d3dx9_xx [patch 2/2] Implementation of the different d3dx9_xx lls
References: <20071127004725.y1nyb6rtb4g84c08@webmail.math.cnrs.fr>
Message-ID: <op.t2g2s7qtsdreb7@fake>

Hi!
> +@ stdcall D3DXVec2Normalize(ptr ptr) d3dx8.D3DXVec3Normalize

Shouldn't it be "d3dx8.D3DXVec2Normalize"?
This line is copy-pasted 13 times around the patch.

--
Maciej Kowalczyk



From roy at cs.hmc.edu  Tue Nov 27 16:55:54 2007
From: roy at cs.hmc.edu (Roy Shea)
Date: Tue, 27 Nov 2007 14:55:54 -0800
Subject: [PATCH] svchost: Implementation of svchost (revised submission)
In-Reply-To: <22821af30711271337r6f7ac4f2w3b5d5a029fd1447a@mail.gmail.com>
References: <20071127212140.GA21231@knuth.cs.hmc.edu>
	<22821af30711271337r6f7ac4f2w3b5d5a029fd1447a@mail.gmail.com>
Message-ID: <20071127225554.GA23490@knuth.cs.hmc.edu>

On Tue, Nov 27, 2007 at 03:37:50PM -0600, James Hawkins wrote:
> On Nov 27, 2007 3:21 PM, Roy Shea <roy at cs.hmc.edu> wrote:
> > This is a revised and standalone version of svchost patch.  Changes in
> > this revision include:
> >
> > - Unicode based with a simple UNICODE to ASCII function used to
> >   convert the lpProcName passed into GetProcAddress
> >
> 
> I think you're misunderstanding Wine's policy about not using ansi
> functions or constant strings.  That only applies to external APIs
> because we don't want to convert from unicode to ansi (lossy).
> There's nothing wrong with just using:
> 
> GetProcAddress(library, "ServiceMain");
> 
> There aren't many instances where W->A is valid.

The name of the procedure passed into GetProcAddress is not always the
constant string "ServiceMain".  In these cases I'm getting the
procedure name from RegQueryValueEx.  RegQueryValueEx requires a
little bit of error checking to ensure proper NULL termination of a
REG_SZ.  I'd already wrapped this into the helper function GetRegValue
and thought a simple conversion from UnicodeToAscii would be cleaner
than writing a second ANSI version of GetRegValue.

I guess that inlining a native ANSI query doesn't look too bad:

----
/* Look for alternate to default ServiceMain entry point */
ret = RegQueryValueExA(service_hkey, service_main, NULL, NULL, NULL, &size);
if (ret != ERROR_SUCCESS)
{
    dll_service_main = NULL;
}
else
{
    dll_service_main = HeapAlloc(GetProcessHeap(), 0, size);
    ret = RegQueryValueExA(service_hkey, service_main, NULL, NULL,
            (LPBYTE)dll_service_main, &size);
    if (ret != ERROR_SUCCESS)
    {
        HeapFree(GetProcessHeap(), 0, dll_service_main);
        RegCloseKey(service_hkey);
        goto cleanup;
    }
    if (dll_service_main[size-1] != '\0')
    {
        WINE_TRACE("NULL terminating registry entry: %s\n", service_main);
        tmp_value = HeapReAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, 
                dll_service_main, size+1);
        if (!tmp_value)
        {
            HeapFree(GetProcessHeap(), 0, dll_service_main);
            RegCloseKey(service_hkey);
            goto cleanup;
        }
        dll_service_main = tmp_value;
    }
}
RegCloseKey(service_hkey);

/* Load the DLL and obtain a pointer to ServiceMain entry point */
library = LoadLibraryW(dll_name_long);
if (!library)
{
    WINE_ERR("failed to load library %s, err=%u\n",
            wine_dbgstr_w(dll_name_long), GetLastError());
    goto cleanup;
}
if (dll_service_main)
{
    service_main_func =
        (LPSERVICE_MAIN_FUNCTIONW) GetProcAddress(library, dll_service_main);
}
else
{
    service_main_func =
        (LPSERVICE_MAIN_FUNCTIONW) GetProcAddress(library, service_main);
}
if (!service_main_func)
{
    WINE_ERR("cannot locate ServiceMain procedure in DLL for %s\n",
            wine_dbgstr_w(service_name));
    FreeLibrary(library);
    goto cleanup;
}
----

I'll switch svchost over to a direct ANSI query when looking up the
DLL's service main function.

> > - Using HEAP_ZERO_MEMORY flag in calls to HeapAlloc and HeapReAlloc
> >   that are allocating space for a string and the NULL terminator to
> >   set the NULL terminator to zero.
> >
> 
> Why HEAP_ZERO_MEMORY when you can just set the last byte to NULL?
> 
> str[LEN - 1] = '\0';

I was saving a line of code at the cost of performance.  My bad.  Thanks for
catching this.  And thank you for your continued help with this patch.

Peace,
-Roy



From gav at transgaming.com  Tue Nov 27 17:09:26 2007
From: gav at transgaming.com (Gavriel State)
Date: Tue, 27 Nov 2007 18:09:26 -0500
Subject: TransGaming's dpnet (DirectPlay 8)
In-Reply-To: <200711271118.59174.kai.blin@gmail.com>
References: <4743B72A.5010408@transgaming.com>
	<200711271118.59174.kai.blin@gmail.com>
Message-ID: <474CA3A6.4090209@transgaming.com>

Hi Kai,

Sorry about that - looks like I hadn't in fact updated my git tree quite 
properly.  Also, I left out a header file I think. Try this patch instead.

Take care,
 -Gav

Kai Blin wrote:
> On Wednesday 21 November 2007 05:42:18 Gavriel State wrote:
>
>   
>> Enclosed here is a patch to today's WineHQ git tree with our dpnet
>> implementation in the hopes that someone finds it useful.  Beyond
>> ensuring that it compiles and links, it has not been tested at all with
>> WineHQ.
>>     
>
> That's funny, it doesn't even apply for me against today's git, and the last 
> changes to dlls/dpnet are months old. Would you be so kind and supply the 
> plain source code of dlls/dpnet/address.c ?
>
> I've pulled the patch apart and the other changes apply or are trivial to fix 
> manually.
>
> Once the code compiles for me, I'll push it to a public git repo. I think the 
> next step would be adding some tests.
>
> Cheers,
> Kai
>
>   
> ------------------------------------------------------------------------
>
>
>   


-- 
Gavriel State 
Founder & CTO
TransGaming Inc.
gav at transgaming.com
http://www.transgaming.com

Broadening The Playing Field

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-TransGaming-dpnet-implementation.patch.gz
Type: application/x-gzip
Size: 53838 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071127/5402d8df/attachment-0001.bin 

From tony.wasserka at freenet.de  Wed Nov 28 02:17:04 2007
From: tony.wasserka at freenet.de (tony.wasserka at freenet.de)
Date: Wed, 28 Nov 2007 09:17:04 +0100
Subject: d3dx8 [patch 1/10] Implement D3DXPlaneFromPointNormal
Message-ID: <E1IxI6S-0006HK-Uv@www10.emo.freenet-rz.de>

Anyways, where should we put the d3dx9 code? I mean, we have 13 folders to choose from.. Perhaps It'd be better if we create a new dll (or at least directory) called d3dx9 were we implement all d3dx9 stuff and let the other d3dx9_xx dlls just call these functions? This would improve the clarity of the code structure, so that people that don't follow this discussion can also understand what we're doing ;-)











From hverbeet at gmail.com  Wed Nov 28 02:33:22 2007
From: hverbeet at gmail.com (H. Verbeet)
Date: Wed, 28 Nov 2007 09:33:22 +0100
Subject: [4/8] WineD3D: Do not try to disable unsupported texture units
In-Reply-To: <200711272353.47280.stefan@codeweavers.com>
References: <200711272353.47280.stefan@codeweavers.com>
Message-ID: <d658b69e0711280033jc27d962he0a8cae90f8da664@mail.gmail.com>

On 27/11/2007, Stefan D?singer <stefan at codeweavers.com> wrote:
> textures. In this case we build a texture map to read a texture from a
> lower texture unit from a higher register combiner. This texture unit
> always stays below GL_LIMITS(textures) though.
Yes, but you're checking against the sampler, not the texture unit.
Shouldn't you be checking against mapped_stage instead?


From hverbeet at gmail.com  Wed Nov 28 02:40:29 2007
From: hverbeet at gmail.com (H. Verbeet)
Date: Wed, 28 Nov 2007 09:40:29 +0100
Subject: [1/8] WineD3D: Inform the texture about filtering changes
In-Reply-To: <200711272349.26257.stefan@codeweavers.com>
References: <200711272349.26257.stefan@codeweavers.com>
Message-ID: <d658b69e0711280040vdd92f49wac4c90c15b587fb9@mail.gmail.com>

On 27/11/2007, Stefan D?singer <stefan at codeweavers.com> wrote:
>
Don't you need to mark the sampler dirty if it's bound somewhere? Or
is it guaranteed it never is at that point?


From stefan at codeweavers.com  Wed Nov 28 04:43:43 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Wed, 28 Nov 2007 11:43:43 +0100
Subject: [1/8] WineD3D: Inform the texture about filtering changes
In-Reply-To: <d658b69e0711280040vdd92f49wac4c90c15b587fb9@mail.gmail.com>
References: <200711272349.26257.stefan@codeweavers.com>
	<d658b69e0711280040vdd92f49wac4c90c15b587fb9@mail.gmail.com>
Message-ID: <200711281143.46343.stefan@codeweavers.com>

Am Mittwoch, 28. November 2007 09:40:29 schrieb H. Verbeet:
> On 27/11/2007, Stefan D?singer <stefan at codeweavers.com> wrote:
>
> Don't you need to mark the sampler dirty if it's bound somewhere? Or
> is it guaranteed it never is at that point?
This is done by the CTXUSAGE_BLIT setup
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071128/b37f639c/attachment.pgp 

From stefan at codeweavers.com  Wed Nov 28 05:22:48 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Wed, 28 Nov 2007 12:22:48 +0100
Subject: d3dx8 [patch 1/10] Implement D3DXPlaneFromPointNormal
In-Reply-To: <E1IxI6S-0006HK-Uv@www10.emo.freenet-rz.de>
References: <E1IxI6S-0006HK-Uv@www10.emo.freenet-rz.de>
Message-ID: <200711281222.52295.stefan@codeweavers.com>

Am Mittwoch, 28. November 2007 09:17:04 schrieb tony.wasserka at freenet.de:
> Anyways, where should we put the d3dx9 code? I mean, we have 13 folders to
> choose from.. Perhaps It'd be better if we create a new dll (or at least
> directory) called d3dx9 were we implement all d3dx9 stuff and let the other
> d3dx9_xx dlls just call these functions? This would improve the clarity of
> the code structure, so that people that don't follow this discussion can
> also understand what we're doing ;-)
Yes, I think this is a good idea. It wouldn't be a wined3dx which is shared 
among d3dx8 and d3dx9, but it would just be a central place for the common 
code in d3dx9_xx.dll, which will be a big majority of the code I guess.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071128/76aeb94f/attachment.pgp 

From julliard at winehq.org  Wed Nov 28 05:41:09 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 28 Nov 2007 12:41:09 +0100
Subject: ole32: Fix two comments in ok strings in the WdtpInterfacePointer
	tests.
In-Reply-To: <474D00FE.4090003@codeweavers.com> (Robert Shearman's message of
	"Wed, 28 Nov 2007 05:47:42 +0000")
References: <474D00FE.4090003@codeweavers.com>
Message-ID: <87aboylhre.fsf@wine.dyndns.org>

Robert Shearman <rob at codeweavers.com> writes:

> diff --git a/dlls/ole32/tests/usrmarshal.c b/dlls/ole32/tests/usrmarshal.c
> index 9959f74..5819ec1 100644
> --- a/dlls/ole32/tests/usrmarshal.c
> +++ b/dlls/ole32/tests/usrmarshal.c
> @@ -801,9 +801,9 @@ static void test_marshal_WdtpInterfacePointer(void)
>      wireip = buffer;
>      if (size >= 28)
>      {
> -        ok(*(DWORD *)wireip == 0x44, "wireip + 0x0 should be 0x4c instead of 0x%08x\n", *(DWORD *)wireip);
> +        ok(*(DWORD *)wireip == 0x44, "wireip + 0x0 should be 0x44 instead of 0x%08x\n", *(DWORD *)wireip);
>          wireip += sizeof(DWORD);
> -        ok(*(DWORD *)wireip == 0x44, "wireip + 0x8 should be 0x4c instead of 0x%08x\n", *(DWORD *)wireip);
> +        ok(*(DWORD *)wireip == 0x44, "wireip + 0x8 should be 0x44 instead of 0x%08x\n", *(DWORD *)wireip);

While we are on the subject, why does it say wireip + 0x8 when the
pointer is incremented by 4?  The rest of the offsets are wrong too,
especially the iid comparison.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Nov 28 06:47:59 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 28 Nov 2007 13:47:59 +0100
Subject: [PATCH] svchost: Implementation of svchost (revised submission 2)
In-Reply-To: <20071128085759.GA10873@knuth.cs.hmc.edu> (Roy Shea's message of
	"Wed, 28 Nov 2007 00:57:59 -0800")
References: <20071127212140.GA21231@knuth.cs.hmc.edu>
	<20071128085759.GA10873@knuth.cs.hmc.edu>
Message-ID: <8763zmleo0.fsf@wine.dyndns.org>

Roy Shea <roy at cs.hmc.edu> writes:

> This is another revised and standalone version of the svchost patch.
> Changes in this revision include:
>
> - Only using HEAP_ZERO_MEMORY in calls to HeapReAlloc.  Calls to
>   HeapAlloc explicitly set the NULL terminator when required.

The realloc is overkill too, you can just allocate one extra char from
the start, and set it to zero unconditionally.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Nov 28 06:50:56 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 28 Nov 2007 13:50:56 +0100
Subject: [try2 1/1] msi/tests: automation: Fix pointer check before
	calling lstrcpyW.
In-Reply-To: <1196219506.5993.10.camel@misha-laptop> (Misha Koshelev's message
	of "Tue, 27 Nov 2007 21:11:46 -0600")
References: <1196219506.5993.10.camel@misha-laptop>
Message-ID: <871waalej3.fsf@wine.dyndns.org>

Misha Koshelev <mk144210 at bcm.edu> writes:

> The previous patch was last week I think. This fixes a Valgrind error in the test. This is
> correct as vtResult is just hte _expected_ return type, and this way we check the actual return type 
> (new this version) and then the validity of the pointer (same as old patch) before calling lstrcpyW
> so we don't pass NULL to lstrcpyW.

It seems to me what you really want to do is check that the call
succeeded, instead of relying on the variant being cleared on error.

-- 
Alexandre Julliard
julliard at winehq.org


From David.Adam at math.cnrs.fr  Wed Nov 28 11:14:21 2007
From: David.Adam at math.cnrs.fr (David.Adam at math.cnrs.fr)
Date: Wed, 28 Nov 2007 18:14:21 +0100
Subject: d3dx9__xx dlls
Message-ID: <20071128181421.pcoyhvbuow4gkwog@webmail.math.cnrs.fr>

Following Alexandre  (and I agree with him :D ), one only needs to  
export the functions of d3dx9_36 (the latest one) to the older  
d3dx9_xx dlls.
So, we just just need to implement the functions in the d3dx9_36 dll  
repertory.
No wine_d3dx9 is useful.

David



From stefan at codeweavers.com  Wed Nov 28 12:22:24 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Wed, 28 Nov 2007 19:22:24 +0100
Subject: d3dx9__xx dlls
In-Reply-To: <20071128181421.pcoyhvbuow4gkwog@webmail.math.cnrs.fr>
References: <20071128181421.pcoyhvbuow4gkwog@webmail.math.cnrs.fr>
Message-ID: <200711281922.27413.stefan@codeweavers.com>

Am Mittwoch, 28. November 2007 18:14:21 schrieb David.Adam at math.cnrs.fr:
> Following Alexandre  (and I agree with him :D ), one only needs to
> export the functions of d3dx9_36 (the latest one) to the older
> d3dx9_xx dlls.
> So, we just just need to implement the functions in the d3dx9_36 dll
> repertory.
> No wine_d3dx9 is useful.
What do we do if there's a d3dx9_37.dll next month?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071128/fe0ee7ff/attachment.pgp 

From maarten at codeweavers.com  Wed Nov 28 12:29:19 2007
From: maarten at codeweavers.com (Maarten Lankhorst)
Date: Wed, 28 Nov 2007 19:29:19 +0100
Subject: d3dx9__xx dlls
In-Reply-To: <200711281922.27413.stefan@codeweavers.com>
References: <20071128181421.pcoyhvbuow4gkwog@webmail.math.cnrs.fr>
	<200711281922.27413.stefan@codeweavers.com>
Message-ID: <474DB37F.8020507@codeweavers.com>

Hello Stefan,

Stefan D?singer schreef:
> What do we do if there's a d3dx9_37.dll next month?
>   
One thing that comes to mind is: git-mv d3dx9_36 d3dx9_37 and create a
forward dll for the old one.

Cheers,
Maarten


From mstefani at redhat.com  Wed Nov 28 12:34:12 2007
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Wed, 28 Nov 2007 19:34:12 +0100
Subject: d3dx9__xx dlls
In-Reply-To: <474DB37F.8020507@codeweavers.com>
References: <20071128181421.pcoyhvbuow4gkwog@webmail.math.cnrs.fr>	<200711281922.27413.stefan@codeweavers.com>
	<474DB37F.8020507@codeweavers.com>
Message-ID: <474DB4A4.40907@redhat.com>

Maarten Lankhorst wrote:
> Stefan D?singer schreef:
>> What do we do if there's a d3dx9_37.dll next month?
>>   
> One thing that comes to mind is: git-mv d3dx9_36 d3dx9_37 and create a
> forward dll for the old one.
Renames are "cheap" in git and we do not loose the history.

bye
	michael
-- 
Michael Stefaniuc                           Tel.: +49-711-96437-199
Consulting Communications Engineer          Fax.: +49-711-96437-111
--------------------------------------------------------------------
Reg. Adresse: Red Hat GmbH, Hauptst?tter Strasse 58, 70178 Stuttgart
Handelsregister: Amtsgericht Stuttgart HRB 153243
Gesch?ftsf?hrer: Brendan Lane, Charlie Peters, Michael Cunningham,
                 Werner Knoblich


From infyquest at gmail.com  Wed Nov 28 13:26:23 2007
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Wed, 28 Nov 2007 13:26:23 -0600
Subject: d3dx9__xx dlls
In-Reply-To: <474DB4A4.40907@redhat.com>
References: <20071128181421.pcoyhvbuow4gkwog@webmail.math.cnrs.fr>
	<200711281922.27413.stefan@codeweavers.com>
	<474DB37F.8020507@codeweavers.com> <474DB4A4.40907@redhat.com>
Message-ID: <36bf289b0711281126v12382526j8382cbb58911fb2c@mail.gmail.com>

On Nov 28, 2007 12:34 PM, Michael Stefaniuc <mstefani at redhat.com> wrote:
> Maarten Lankhorst wrote:
> > Stefan D?singer schreef:
> >> What do we do if there's a d3dx9_37.dll next month?
> >>
> > One thing that comes to mind is: git-mv d3dx9_36 d3dx9_37 and create a
> > forward dll for the old one.
> Renames are "cheap" in git and we do not loose the history.
I also think that rename is not a good idea.
I would like propose a new idea, why dont we have different spec files
inside wine_d3dx for all different versions of dlls.
Its something like we have done it in the ole32.
But, it requires some makefile/configure cruft.
>
> bye
>         michael
> --
> Michael Stefaniuc                           Tel.: +49-711-96437-199
> Consulting Communications Engineer          Fax.: +49-711-96437-111
> --------------------------------------------------------------------
> Reg. Adresse: Red Hat GmbH, Hauptst?tter Strasse 58, 70178 Stuttgart
> Handelsregister: Amtsgericht Stuttgart HRB 153243
> Gesch?ftsf?hrer: Brendan Lane, Charlie Peters, Michael Cunningham,
>                  Werner Knoblich
>
>
>

From thestig at google.com  Wed Nov 28 13:49:23 2007
From: thestig at google.com (Lei Zhang)
Date: Wed, 28 Nov 2007 11:49:23 -0800
Subject: xdg_user_dirs patches
In-Reply-To: <36bf289b0711261649j4cc9747bl7b70e42eb8fd4756@mail.gmail.com>
References: <36bf289b0711261649j4cc9747bl7b70e42eb8fd4756@mail.gmail.com>
Message-ID: <558b2f5c0711281149y77878d39p2124f192aa232eae@mail.gmail.com>

On Nov 26, 2007 4:49 PM, Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
> Hi Lei,
>
> I think a new file for user dir look up in the shell32 is of no use.
> Rather than we can add it to the xdg.c and xdg.h, as it contains the
> generic xdg code for shell32.
> Its like having all xdg specific code at one place.
> This is my personal opinion about those patches.
>
> Thanks,
> VJ
>
>
>

I was not sure if was alright to mix code with different licenses in
the same file. I looked around and found that
include/wine/wined3d_gl.h has both LGPL Wine code as well as MIT
licensed code from the Mesa project. Based on that, I guess it's ok to
do, so I will send out another patch.

- Lei


From mstefani at redhat.com  Wed Nov 28 14:18:33 2007
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Wed, 28 Nov 2007 21:18:33 +0100
Subject: d3dx9__xx dlls
In-Reply-To: <36bf289b0711281126v12382526j8382cbb58911fb2c@mail.gmail.com>
References: <20071128181421.pcoyhvbuow4gkwog@webmail.math.cnrs.fr>	
	<200711281922.27413.stefan@codeweavers.com>	
	<474DB37F.8020507@codeweavers.com> <474DB4A4.40907@redhat.com>
	<36bf289b0711281126v12382526j8382cbb58911fb2c@mail.gmail.com>
Message-ID: <474DCD19.9070207@redhat.com>

Vijay Kiran Kamuju wrote:
> On Nov 28, 2007 12:34 PM, Michael Stefaniuc <mstefani at redhat.com> wrote:
>> Maarten Lankhorst wrote:
>>> Stefan D?singer schreef:
>>>> What do we do if there's a d3dx9_37.dll next month?
>>>>
>>> One thing that comes to mind is: git-mv d3dx9_36 d3dx9_37 and create a
>>> forward dll for the old one.
>> Renames are "cheap" in git and we do not loose the history.
> I also think that rename is not a good idea.
Heh. I didn't say that i don't like renames. I said renames are a
workable solution: read there's no technical reason why to not use them.

> I would like propose a new idea, why dont we have different spec files
> inside wine_d3dx for all different versions of dlls.
> Its something like we have done it in the ole32.
> But, it requires some makefile/configure cruft.
There's no need to name that wine_d3dx. Nothing stops us to name it
d3d9x and have all the other versions generated inside that.

bye
	michael
-- 
Michael Stefaniuc               Tel.: +49-711-96437-199
Sr. Network Engineer            Fax.: +49-711-96437-111


From truiken at gmail.com  Wed Nov 28 15:44:59 2007
From: truiken at gmail.com (James Hawkins)
Date: Wed, 28 Nov 2007 15:44:59 -0600
Subject: [PATCH 1/3] advpack/tests: Rename the wrappers around HeapAlloc()
	&Co to use the new standard naming.
In-Reply-To: <20071128213953.GA18704@redhat.com>
References: <20071128213953.GA18704@redhat.com>
Message-ID: <22821af30711281344n15c51ef3jd5f3593f061f7bb1@mail.gmail.com>

On Nov 28, 2007 3:39 PM, Michael Stefaniuc <mstefani at redhat.de> wrote:
> Alexandre,
>
> i'm unsure about this patch series. Yes this are simple wrappers around
> HeapAlloc() that are the same as the "standard" wrappers used in Wine.
> But they are used only as callbacks aka different usage.
>

I don't think this particular series is beneficial.  Your script won't
be able to use these names because they're not called directly.

-- 
James Hawkins


From mstefani at redhat.com  Wed Nov 28 15:50:49 2007
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Wed, 28 Nov 2007 22:50:49 +0100
Subject: [PATCH 1/3] advpack/tests: Rename the wrappers around HeapAlloc()
	&Co to use the new standard naming.
In-Reply-To: <22821af30711281344n15c51ef3jd5f3593f061f7bb1@mail.gmail.com>
References: <20071128213953.GA18704@redhat.com>
	<22821af30711281344n15c51ef3jd5f3593f061f7bb1@mail.gmail.com>
Message-ID: <474DE2B9.5090604@redhat.com>

James Hawkins wrote:
> On Nov 28, 2007 3:39 PM, Michael Stefaniuc <mstefani at redhat.de> wrote:
>> i'm unsure about this patch series. Yes this are simple wrappers around
>> HeapAlloc() that are the same as the "standard" wrappers used in Wine.
>> But they are used only as callbacks aka different usage.
>>
> 
> I don't think this particular series is beneficial.  Your script won't
> be able to use these names because they're not called directly.
I know. But i had written the patches already but before wiping them
from my tree i thought to send them in for documentation purpose.
Btw. the unfree-wine.pl has mem_alloc() in there because of the malloc()
wrapper in the server that happens to have the same name.

bye
	michael

-- 
Michael Stefaniuc               Tel.: +49-711-96437-199
Sr. Network Engineer            Fax.: +49-711-96437-111
--------------------------------------------------------------------
Reg. Adresse: Red Hat GmbH, Hauptst?tter Strasse 58, 70178 Stuttgart
Handelsregister: Amtsgericht Stuttgart HRB 153243
Gesch?ftsf?hrer: Brendan Lane, Charlie Peters, Michael Cunningham,
                 Werner Knoblich


From julliard at winehq.org  Wed Nov 28 16:31:36 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 28 Nov 2007 23:31:36 +0100
Subject: xdg_user_dirs patches
In-Reply-To: <558b2f5c0711281149y77878d39p2124f192aa232eae@mail.gmail.com>
	(Lei Zhang's message of "Wed, 28 Nov 2007 11:49:23 -0800")
References: <36bf289b0711261649j4cc9747bl7b70e42eb8fd4756@mail.gmail.com>
	<558b2f5c0711281149y77878d39p2124f192aa232eae@mail.gmail.com>
Message-ID: <87wss2j92v.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> I was not sure if was alright to mix code with different licenses in
> the same file. I looked around and found that
> include/wine/wined3d_gl.h has both LGPL Wine code as well as MIT
> licensed code from the Mesa project. Based on that, I guess it's ok to
> do, so I will send out another patch.

It's OK to do, but I don't think you want to copy the code as is, you
should write your own version that parses the file only once and handles
variables as they are found. Also these variables should take priority
over the default heuristics, and you most likely want to handle the
desktop dir the same way.

-- 
Alexandre Julliard
julliard at winehq.org


From dank at kegel.com  Wed Nov 28 19:42:58 2007
From: dank at kegel.com (Dan Kegel)
Date: Wed, 28 Nov 2007 17:42:58 -0800
Subject: shell32: symlink user's profile shell folders to xdg well known
	directories [2/2] (try 3)
Message-ID: <a71bd89a0711281742i2b0d4201vd4acb3beb50c6db5@mail.gmail.com>

I feel like a broken record, but:
some apps don't like following symlinks, and the
native Windows way to configure what the "My Foo"
folders point to is called shell folder redirection;
These are documented at
http://support.microsoft.com/kb/242557
among other places, and I think Wine supports these
registry settings.  Is there any reason we don't want
to use these instead of symlinks?
- Dan


From winehacker at gmail.com  Thu Nov 29 04:37:12 2007
From: winehacker at gmail.com (Steven Edwards)
Date: Thu, 29 Nov 2007 05:37:12 -0500
Subject: Interesting Behavior of OS X
Message-ID: <19e31a080711290237q496fd9fen4129dff679aa2f7e@mail.gmail.com>

When tracking down a crash in the kernel32 loader test, Dmitry found a
bug in the Mac OS loader when Wine tried to load his dummy PE file.
Upon further research I found that the Mac loader seems to have its
own undocumented PE loader built in. I did some further testing with a
windows binary and got some really interesting results....

#include <stdio.h>
#include <dlfcn.h>

int main(int argc, char **argv) {
       void *handle;
       const char *error;

//      handle = dlopen("./ldr330e.tmp", RTLD_NOW | RTLD_FIRST );
       handle = dlopen("./procexp.exe", RTLD_NOW | RTLD_FIRST );

       if (!handle) {
               fputs (dlerror(), stderr);
                   printf("I guess it didn't load\n");
                                       exit(1);
       }

   printf("I guess it loaded\n");
       dlclose(handle);
}

Its trying to load the dlls. I get this output

steven-edwardss-imac:temp sedwards$ ./a.out
dlopen(./procexp.exe, 258): Library not loaded: WS2_32.dll
 Referenced from: /Users/sedwards/Library/Application
Support/CrossOver/Bottles/winetest/drive_c/windows/temp/procexp.exe
 Reason: image not foundI guess it didn't load
steven-edwardss-imac:temp sedwards$ file procexp.exe
procexp.exe: MS-DOS executable PE  for MS Windows (GUI) Intel 80386 32-bit
steven-edwardss-imac:temp sedwards$ open .
steven-edwardss-imac:temp sedwards$ ./a.out
dlopen(./procexp.exe, 258): Library not loaded: MPR.dll
 Referenced from: /Users/sedwards/Library/Application
Support/CrossOver/Bottles/winetest/drive_c/windows/temp/procexp.exe
 Reason: image not foundI guess it didn't load
steven-edwardss-imac:temp sedwards$ ./a.out
dlopen(./procexp.exe, 258): Library not loaded: MPR.dll

So this leads to the question. Whats going on? Is this a hold over
from EFI which
is PE by default? Why would the OS need to load the EFI files? Maybe
just for easy
of development and testing? Or is something else going on? Is Apple going to be
adding a win32 compatibility layer to OS X? Is having a native PE
loader of any use
to us?

Thanks
Steven

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From julliard at winehq.org  Thu Nov 29 06:40:33 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 29 Nov 2007 13:40:33 +0100
Subject: [server] set serial port fd back to blocking if necessary
In-Reply-To: <9e89675b0711282127v1c8b2a56h40cf17a511d44888@mail.gmail.com>
	(Damjan Jovanovic's message of "Thu, 29 Nov 2007 07:27:55 +0200")
References: <9e89675b0711282127v1c8b2a56h40cf17a511d44888@mail.gmail.com>
Message-ID: <87sl2pjkce.fsf@wine.dyndns.org>

"Damjan Jovanovic" <damjan.jov at gmail.com> writes:

> This fixes a regression caused by commit
> f85437c57fb44d511db97edbaa5b1f8abfe75fd3 (bug 9356) where serial ports
> break because they are not made blocking.
>
> Changelog:
> * Set serial port fd back to blocking if necessary

This will break timeout handling. There shouldn't be any reason for the
fd to be blocking, we should handle EAGAIN properly.

-- 
Alexandre Julliard
julliard at winehq.org


From ben at atomnet.co.uk  Thu Nov 29 07:00:00 2007
From: ben at atomnet.co.uk (Ben Hodgetts (Enverex))
Date: Thu, 29 Nov 2007 13:00:00 +0000
Subject: Adding Bugzilla keyword for Copy-protection/Debugger issues
Message-ID: <474EB7D0.1010204@atomnet.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Just a thought but it may be a good idea to add a keyword to Bugzilla
for issues related to debuggers or copy-protection, that would help
group them all together as at the moment there seem to be many bugs
related to breakages from obscure debugger protections or things like
GameGuard. It's much cleaner than the hated meta bug idea and is easier
to implement.

Just a thought.

Ben H.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)

iD8DBQFHTrfQuqCUopk11kIRAhDnAJ4iGkr6bUk1/FPUFrrdzlsnqC5dDwCfd2r5
WDylDKMPprC22RtEwYG01o4=
=fLJB
-----END PGP SIGNATURE-----


From julliard at winehq.org  Thu Nov 29 06:59:52 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 29 Nov 2007 13:59:52 +0100
Subject: shell32: symlink user's profile shell folders to xdg well known
	directories [2/2] (try 3)
In-Reply-To: <a71bd89a0711281742i2b0d4201vd4acb3beb50c6db5@mail.gmail.com>
	(Dan Kegel's message of "Wed, 28 Nov 2007 17:42:58 -0800")
References: <a71bd89a0711281742i2b0d4201vd4acb3beb50c6db5@mail.gmail.com>
Message-ID: <87lk8hjjg7.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> I feel like a broken record, but:
> some apps don't like following symlinks, and the
> native Windows way to configure what the "My Foo"
> folders point to is called shell folder redirection;
> These are documented at
> http://support.microsoft.com/kb/242557
> among other places, and I think Wine supports these
> registry settings.  Is there any reason we don't want
> to use these instead of symlinks?

We want the paths to remain valid even if the drive configuration is
changed, so they have to point somewhere inside the C: drive.

-- 
Alexandre Julliard
julliard at winehq.org


From alex at thehandofagony.com  Thu Nov 29 07:08:33 2007
From: alex at thehandofagony.com (Alexander Nicolaysen =?iso-8859-1?q?S=F8rnes?=)
Date: Thu, 29 Nov 2007 14:08:33 +0100
Subject: Adding Bugzilla keyword for Copy-protection/Debugger issues
In-Reply-To: <474EB7D0.1010204@atomnet.co.uk>
References: <474EB7D0.1010204@atomnet.co.uk>
Message-ID: <200711291408.33862.alex@thehandofagony.com>

On Thursday 29 November 2007 14:00:00 Ben Hodgetts (Enverex) wrote:
> Just a thought but it may be a good idea to add a keyword to Bugzilla
> for issues related to debuggers or copy-protection, that would help
> group them all together as at the moment there seem to be many bugs
> related to breakages from obscure debugger protections or things like
> GameGuard. It's much cleaner than the hated meta bug idea and is easier
> to implement.
>
> Just a thought.
>
> Ben H.


I think that is a great idea.



Alexander N. S?rnes


From winehacker at gmail.com  Thu Nov 29 07:47:27 2007
From: winehacker at gmail.com (Steven Edwards)
Date: Thu, 29 Nov 2007 08:47:27 -0500
Subject: Interesting Behavior of OS X
In-Reply-To: <19e31a080711290237q496fd9fen4129dff679aa2f7e@mail.gmail.com>
References: <19e31a080711290237q496fd9fen4129dff679aa2f7e@mail.gmail.com>
Message-ID: <19e31a080711290547n198d278bw18e2191c9e5281ce@mail.gmail.com>

Hi Again,

On Nov 29, 2007 5:37 AM, Steven Edwards <winehacker at gmail.com> wrote:
> Is Apple going to be adding a win32 compatibility layer to OS X?

This is the most important question to me because of some information Ken found:

I don't know that this whole thing amounts to anything, but thought
I'd add a few notes.

This is new to Leopard.  On Tiger, dlopen rejects PE files as
expected.  The Wine testing that Steven was originally trying to do
would probably not crash on Tiger.  Wine needs a patch to somehow
check that a file is actually a Mach-O object file before calling
dlopen on it.

There really are PE-loading smarts somewhere within the Mac OS X
dynamic loader (dyld).  If you set DYLD_PRINT_SEGMENTS=1 before
running Steven's sample program, you'll get something like this in
the output:

dyld: Main executable mapped /private/tmp/a.out
         __PAGEZERO at 0x00000000->0x00001000
             __TEXT at 0x00001000->0x00002000
             __DATA at 0x00002000->0x00003000
           __IMPORT at 0x00003000->0x00004000
         __LINKEDIT at 0x00004000->0x00005000
[...]
dyld: Mapping /private/tmp/procexp.exe
            .header at 0x400000->0x400fff with permissions rw.
              .text at 0x401000->0x47155b with permissions rw.
             .rdata at 0x472000->0x481933 with permissions rw.
              .data at 0x482000->0x4a3deb with permissions rw.
              .rsrc at 0x4a4000->0x7819df with permissions rw.


The diagnostics printed for the loading of a.out are typical of a
Mach-O object.  Those for procexp.exe are definitely not.

So, there you have it.

-Ken

PE Files were rejected on Tiger, which is interesting to me because I don't
think that this is just a hold over from EFI support. I think it may be a sign
of future addition of a Win32 subsystem to OS X.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From dank at kegel.com  Thu Nov 29 07:49:54 2007
From: dank at kegel.com (Dan Kegel)
Date: Thu, 29 Nov 2007 05:49:54 -0800
Subject: wininet [1/2]: Add test for FtpGetCurrentDirectoryA
Message-ID: <a71bd89a0711290549x175fa2e4g1aadf9a56edd0af9@mail.gmail.com>

Nice to see you contributing tests!
Three comments:
1. you seem to have ragged indentation.  Did you remember to remove all tabs?
(Hmm.  Our doc on the tab issue is a bit weak: neither
http://winehq.org/site/sending_patches
http://winehq.org/site/docs/winedev-guide/style-notes
really capture the current anti-tab mood.)
2. You have a nice testDir variable, but then you hard-code
"pub" somewhere.  Use the variable everywhere.
3. Did you make sure the new tests pass on Windows?

-- 
Wine for Windows ISVs: http://kegel.com/wine/isv


From dank at kegel.com  Thu Nov 29 07:56:18 2007
From: dank at kegel.com (Dan Kegel)
Date: Thu, 29 Nov 2007 05:56:18 -0800
Subject: wininet [2/2]: Fix error checking for FtpGetCurrentDirectoryW
Message-ID: <a71bd89a0711290556x4927b4ddu602eea42610fd4cc@mail.gmail.com>

Hi Zac,
you wrote

* Fixed errors in error checking in FtpGetCurrentDirectoryW in wininet/ftp.c

It's probably a good idea to explain what real-world
problem this fixes.  One good way to do that is to
submit a test first that fails, with todo(wine) around
the failing part, and then submit a second patch which
fixes the problem and removes the todo(wine) from the test.

-    if (NULL == lpwfs || WH_HFTPSESSION != lpwfs->hdr.htype)
+    if ( lpwfs == NULL || WH_HFTPSESSION != lpwfs->hdr.htype )

Why did you make this change?  It doesn't fix anything,
and it removes an old coder's anti-typo-measure of putting
the const on the left hand of an equality test.  Please remove
this hunk.

-    if (lpwfs->download_in_progress != NULL)
+	if ( lpszCurrentDirectory == NULL || *lpdwCurrentDirectory == NULL )

You switched to tabs, tsk.  Also, you changed whitespace
style.   Always try to match the file's existing style.
- Dan
-- 
Wine for Windows ISVs: http://kegel.com/wine/isv


From julliard at winehq.org  Thu Nov 29 07:57:50 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 29 Nov 2007 14:57:50 +0100
Subject: widl [1/7]: Output working exception handling macros.  [take 3]
In-Reply-To: <20071129012158.GP26712@linux.ucla.edu> (Dan Hipschman's message
	of "Wed, 28 Nov 2007 17:21:58 -0800")
References: <20071129012158.GP26712@linux.ucla.edu>
Message-ID: <87hcj5jgrl.fsf@wine.dyndns.org>

Dan Hipschman <dsh at linux.ucla.edu> writes:

> In this revision, I leave setting permissions on page faults to the
> unhandled exception filter and simply ignore page faults on execution
> access (read access exceptions should be caught since they translate
> into bad stub data, but these don't pose a problem anyway).  I also
> fixed a bug regarding how the mask field of __widl_except_frame was
> set.

There's no reason to ignore execute access errors, those are bugs
too. You are still not filtering the exception properly though, the
condition checking has to be done directly in the handler, you can't
longjmp back to the code and then re-raise the exception. That's doubly
true for the finally handling. This means you have to generate different
handlers for the different exception conditions.

-- 
Alexandre Julliard
julliard at winehq.org


From winehacker at gmail.com  Thu Nov 29 08:31:26 2007
From: winehacker at gmail.com (Steven Edwards)
Date: Thu, 29 Nov 2007 09:31:26 -0500
Subject: Interesting Behavior of OS X
In-Reply-To: <19e31a080711290547n198d278bw18e2191c9e5281ce@mail.gmail.com>
References: <19e31a080711290237q496fd9fen4129dff679aa2f7e@mail.gmail.com>
	<19e31a080711290547n198d278bw18e2191c9e5281ce@mail.gmail.com>
Message-ID: <19e31a080711290631u47fdc61bre3db0a22d9c1f30b@mail.gmail.com>

On Nov 29, 2007 8:47 AM, Steven Edwards <winehacker at gmail.com> wrote:
> PE Files were rejected on Tiger, which is interesting to me because I don't
> think that this is just a hold over from EFI support. I think it may be a sign
> of future addition of a Win32 subsystem to OS X.

More information

http://www.opensource.apple.com/darwinsource/10.5/dyld-95.3/src/strip.exp

which contains

# local symbols to suppress
*PE*
*Win*

The project file references ImageLoaderPE.cpp, but that isn't included
in the source...
all the other files are here, so yes it really looks like they are
trying to hide support for
PE. Why would they go to all this trouble to hide Windows Binary support?

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From julliard at winehq.org  Thu Nov 29 08:39:53 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 29 Nov 2007 15:39:53 +0100
Subject: PATCH: fix out of range array access in dlls/kernel32/relay16.c
	(fwd)
In-Reply-To: <Pine.LNX.4.64.0711282347160.19271@acrux.dbai.tuwien.ac.at>
	(Gerald Pfeifer's message of "Wed, 28 Nov 2007 23:50:36 +0100 (CET)")
References: <Pine.LNX.4.64.0711282347160.19271@acrux.dbai.tuwien.ac.at>
Message-ID: <87d4ttjeti.fsf@wine.dyndns.org>

Gerald Pfeifer <gerald at pfeifer.com> writes:

> Alexandre,
>
> I checked again and if we don't address this we'll get two new warnings
> issues in a default build with GCC 4.3.  How does the patch below
> look?

Not good, it adds noise to the code for no good reason. Why would gcc
complain about that one?

-- 
Alexandre Julliard
julliard at winehq.org


From wine-devel at kievinfo.com  Thu Nov 29 08:55:45 2007
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Thu, 29 Nov 2007 07:55:45 -0700
Subject: Bugzilla rights
In-Reply-To: <20071111090214.GL5380@crissy.swd.zerebecki.de>
References: <4730C463.9020809@kievinfo.com>	<200711062109.14748.research@science.su>
	<20071111090214.GL5380@crissy.swd.zerebecki.de>
Message-ID: <474ED2F1.9040209@kievinfo.com>

Jan Zerebecki wrote:
> On Tue, Nov 06, 2007 at 09:09:14PM +0000, L. Rahyen wrote:
>> On Tuesday November 6 2007 19:45, Vitaliy Margolen wrote:
>>> Bugzilla admin, please disallow people to add/remove e-mail addresses
>>> to/from bugs unless they've been given that right. Or at least have rights
>>> to modify any aspect of the bug.
>> 	I think that we should remove the right to add/remove e-mail addresses ONLY 
>> from user who abuse his/her rights (like Toby Brommerich). All other users 
>> should have this right - at least the right to add others to CC list.
> 
> Sorry, neither of these seem to be possible with bugzilla as it
> currently is. I suppose in this case it was just an error from
> which something was learned. If someone doesn't learn, we still
> can disable their account.
> 
> 
> Jan
> 
> 
> 
Yet again I'm asking to do that. Please allow users to remove some one's 
e-mail form CC _only_ if they have rights to edit any aspects of the bug.

Vitaliy.


From dsh at linux.ucla.edu  Thu Nov 29 13:09:43 2007
From: dsh at linux.ucla.edu (Dan Hipschman)
Date: Thu, 29 Nov 2007 11:09:43 -0800
Subject: widl [1/7]: Output working exception handling macros.  [take 3]
In-Reply-To: <87hcj5jgrl.fsf@wine.dyndns.org>
References: <20071129012158.GP26712@linux.ucla.edu>
	<87hcj5jgrl.fsf@wine.dyndns.org>
Message-ID: <20071129190943.GW26712@linux.ucla.edu>

On Thu, Nov 29, 2007 at 02:57:50PM +0100, Alexandre Julliard wrote:
> Dan Hipschman <dsh at linux.ucla.edu> writes:
> 
> > In this revision, I leave setting permissions on page faults to the
> > unhandled exception filter and simply ignore page faults on execution
> > access (read access exceptions should be caught since they translate
> > into bad stub data, but these don't pose a problem anyway).  I also
> > fixed a bug regarding how the mask field of __widl_except_frame was
> > set.
> 
> There's no reason to ignore execute access errors, those are bugs
> too. You are still not filtering the exception properly though, the
> condition checking has to be done directly in the handler, you can't
> longjmp back to the code and then re-raise the exception. That's doubly
> true for the finally handling. This means you have to generate different
> handlers for the different exception conditions.

That's basically what I did in the original patch using
__TRY/__EXCEPT/__FINALLY.  You told me to do this in a more
straightforward way:

http://www.winehq.org/pipermail/wine-devel/2007-November/060515.html

which I took to mean trying to implement the finally block as an actual
block in the local scope, instead of a function (which is a bit of a
pain).  I don't see any way to execute the finally block in the local
scope without rethrowing exceptions, or using GCC's nested functions.
The except condition is easier to put into a handler since the only
conditions WIDL generates are pretty simple.

Should I go back to the original patch?  How did you want it different?


From julliard at winehq.org  Thu Nov 29 13:36:37 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 29 Nov 2007 20:36:37 +0100
Subject: widl [1/7]: Output working exception handling macros.  [take 3]
In-Reply-To: <20071129190943.GW26712@linux.ucla.edu> (Dan Hipschman's message
	of "Thu, 29 Nov 2007 11:09:43 -0800")
References: <20071129012158.GP26712@linux.ucla.edu>
	<87hcj5jgrl.fsf@wine.dyndns.org>
	<20071129190943.GW26712@linux.ucla.edu>
Message-ID: <878x4gkfne.fsf@wine.dyndns.org>

Dan Hipschman <dsh at linux.ucla.edu> writes:

> That's basically what I did in the original patch using
> __TRY/__EXCEPT/__FINALLY.  You told me to do this in a more
> straightforward way:
>
> http://www.winehq.org/pipermail/wine-devel/2007-November/060515.html
>
> which I took to mean trying to implement the finally block as an actual
> block in the local scope, instead of a function (which is a bit of a
> pain).  I don't see any way to execute the finally block in the local
> scope without rethrowing exceptions, or using GCC's nested functions.
> The except condition is easier to put into a handler since the only
> conditions WIDL generates are pretty simple.
>
> Should I go back to the original patch?  How did you want it different?

I said you should avoid the convoluted macros and the dependencies on
internal Wine functions, since you can generate the code directly. That
doesn't mean you can change the semantics, you really need to filter the
exception type in the handler. And yes, the finally block most likely
needs to be a separate function; that is a bit complicated so I'd
suggest to start with just exceptions for now and get this one right
first.

-- 
Alexandre Julliard
julliard at winehq.org


From atheleyen at gmail.com  Thu Nov 29 18:38:32 2007
From: atheleyen at gmail.com (Athel)
Date: Thu, 29 Nov 2007 21:38:32 -0300
Subject: wine for two, please.
Message-ID: <200711292138.32634.atheleyen@gmail.com>

Hi Rob, i was looking a long time the way to do this.
Can you help me to done this?, plis I really need it.
If I could understand better the functionality I'll do it for myself.
Sorry for my english.
Regaards

Athel

> I was going to wait til tomorrow to test this, but couldnt wait.
> This works perfectly for my app and couldnt have came at a better time.
>
> I just created a simple Win32 dispatcher program for each screen and sent
> the window creation messages to the HWNDs from FindWindow instead of the
> local app and it creates the dialogs on any screen I want. Joy Joy!!!!!
>
> It worked out perfectly since the threads that create windows have to send
> messages to the main loop for it to create them so that the dialogs dont
> from close when the thread exits anyway.
>
> It is refreshing that after I went through all the battles of getting
> multihead display, gcc, and wine running on Solaris that FINALLY something
> would work so simply.
>
> Thanks again to the whole Wine crew that made this possible!!!



From winehacker at gmail.com  Thu Nov 29 19:51:06 2007
From: winehacker at gmail.com (Steven Edwards)
Date: Thu, 29 Nov 2007 20:51:06 -0500
Subject: urlmon: Rename the wrappers around HeapAlloc() &Co to use the new
	standard naming.
In-Reply-To: <20071129211234.GA27774@redhat.com>
References: <20071129211234.GA27774@redhat.com>
Message-ID: <19e31a080711291751p6f6594f9w73f90cbaafd21963@mail.gmail.com>

Hi,

On Nov 29, 2007 4:12 PM, Michael Stefaniuc <mstefani at redhat.de> wrote:
> diff --git a/dlls/urlmon/urlmon_main.h b/dlls/urlmon/urlmon_main.h
> index aeb0eb2..9f31fb9 100644
> --- a/dlls/urlmon/urlmon_main.h
> +++ b/dlls/urlmon/urlmon_main.h
> @@ -63,22 +63,22 @@ HRESULT start_binding(LPCWSTR url, IBindCtx *pbc, REFIID riid, void **ppv);
>
>  HRESULT create_binding_protocol(LPCWSTR url, IInternetProtocol **protocol);
>
> -static inline void *urlmon_alloc(size_t len)
> +static inline void *heap_alloc(size_t len)
>  {
>      return HeapAlloc(GetProcessHeap(), 0, len);
>  }
>
> -static inline void *urlmon_alloc_zero(size_t len)
> +static inline void *heap_alloc_zero(size_t len)
>  {
>      return HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, len);
>  }
>
> -static inline void *urlmon_realloc(void *mem, size_t len)
> +static inline void *heap_realloc(void *mem, size_t len)
>  {
>      return HeapReAlloc(GetProcessHeap(), 0, mem, len);
>  }
>
> -static inline BOOL urlmon_free(void *mem)
> +static inline BOOL heap_free(void *mem)
>  {
>      return HeapFree(GetProcessHeap(), 0, mem);
>  }

Rather than duplicating these inline functions in each dlls private
header, could we add the heap wrappers somewhere like winbase.h and
mark it as a wine extension? Doing it there would make sense as
winbase.h is where HeapAlloc and friends is defined.

Thanks
-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From jjmckenzie51 at sprintpcs.com  Thu Nov 29 19:59:29 2007
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Thu, 29 Nov 2007 18:59:29 -0700
Subject: Bugzilla rights
In-Reply-To: <474ED2F1.9040209@kievinfo.com>
References: <4730C463.9020809@kievinfo.com>
	<200711062109.14748.research@science.su>
	<20071111090214.GL5380@crissy.swd.zerebecki.de>
	<474ED2F1.9040209@kievinfo.com>
Message-ID: <474F6E81.8090201@sprintpcs.com>

Vitaliy Margolen wrote:
> Jan Zerebecki wrote:
>   
>> On Tue, Nov 06, 2007 at 09:09:14PM +0000, L. Rahyen wrote:
>>     
>>> On Tuesday November 6 2007 19:45, Vitaliy Margolen wrote:
>>>       
>>>> Bugzilla admin, please disallow people to add/remove e-mail addresses
>>>> to/from bugs unless they've been given that right. Or at least have rights
>>>> to modify any aspect of the bug.
>>>>         
>>> 	I think that we should remove the right to add/remove e-mail addresses ONLY 
>>> from user who abuse his/her rights (like Toby Brommerich). All other users 
>>> should have this right - at least the right to add others to CC list.
>>>       
>> Sorry, neither of these seem to be possible with bugzilla as it
>> currently is. I suppose in this case it was just an error from
>> which something was learned. If someone doesn't learn, we still
>> can disable their account.
>>
>>
>> Jan
>>
>>
>>
>>     
> Yet again I'm asking to do that. Please allow users to remove some one's 
> e-mail form CC _only_ if they have rights to edit any aspects of the bug.
>
>   
I would ask that the permission of a user to be able to remove
themselves from the cc: block be
retained in case they want to be removed from a bug they are no longer
interested in or no longer
use Wine.  Otherwise, I side with Vitaliy, only admins should be able to
remove CCs from bug reports.

James



From kai.blin at gmail.com  Fri Nov 30 01:51:29 2007
From: kai.blin at gmail.com (Kai Blin)
Date: Fri, 30 Nov 2007 08:51:29 +0100
Subject: TransGaming's dpnet (DirectPlay 8)
In-Reply-To: <474CA3A6.4090209@transgaming.com>
References: <4743B72A.5010408@transgaming.com>
	<200711271118.59174.kai.blin@gmail.com>
	<474CA3A6.4090209@transgaming.com>
Message-ID: <200711300851.39309.kai.blin@gmail.com>

On Wednesday 28 November 2007 00:09:26 Gavriel State wrote:
> Hi Kai,
>
> Sorry about that - looks like I hadn't in fact updated my git tree quite
> properly.  Also, I left out a header file I think. Try this patch instead.

There's no copyright statement or license indicated on the new header file. I 
assume that's going to be LGPL v2.1 or later, like the rest of Wine, but I'd 
like to get the official confirmation on that. :)

Cheers,
Kai
-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071130/b3694b3f/attachment.pgp 

From hverbeet at gmail.com  Fri Nov 30 02:49:06 2007
From: hverbeet at gmail.com (H. Verbeet)
Date: Fri, 30 Nov 2007 09:49:06 +0100
Subject: [4/4] WineD3D: Enabling too many lights is silently ignored
In-Reply-To: <200711300255.05257.stefan@codeweavers.com>
References: <200711300255.05257.stefan@codeweavers.com>
Message-ID: <d658b69e0711300049r6fe2699dn9034140632bcdb96@mail.gmail.com>

On 30/11/2007, Stefan D?singer <stefan at codeweavers.com> wrote:
>
But you're not creating the lights first with SetLight(). IIRC you can
create lots of lights with SetLight(), but only enable MaxActiveLights
at the same time with LightEnable(). I guess calling LightEnable on a
light that isn't created first is simply ignored.

I thought that at least for ddraw I created a test for this back when
I started working on wine, but perhaps I never sent it in. :-/


From thunderbird2k at gmx.net  Fri Nov 30 03:26:27 2007
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Fri, 30 Nov 2007 10:26:27 +0100
Subject: [Patch] for wined3d: Correcting order issue
In-Reply-To: <474F226C.9030500@harddisk.is-a-geek.org>
References: <474F226C.9030500@harddisk.is-a-geek.org>
Message-ID: <20071130092627.295420@gmx.net>

> Hi all,
> 
> This patch repairs my previous one, as the command never got executed,
> because 8600 matches before 8600M.
> 
> 
> Marco Schuster
> 
> ----
> diff --git a/dlls/wined3d/directx.c b/dlls/wined3d/directx.c
> index e4b5bdf..50b3250 100644
> --- a/dlls/wined3d/directx.c
> +++ b/dlls/wined3d/directx.c
> @@ -950,6 +950,11 @@ BOOL IWineD3DImpl_FillGLCaps(WineD3D_GL_Info
> *gl_info) {
>                      gl_info->gl_card = CARD_NVIDIA_GEFORCE_8800GTS;
>                      vidmem = 320; /* The 8800GTS uses 320MB, a 8800GTX
> can have 768MB */
>                  }
> +                /* Geforce8 - midend mobile */
> +                else if(strstr(gl_info->gl_renderer, "8600 M")) {
> +                    gl_info->gl_card = CARD_NVIDIA_GEFORCE_8600MGT;
> +                    vidmem = 512;
> +                }
>                  /* Geforce8 - midend */
>                  else if(strstr(gl_info->gl_renderer, "8600") ||
>                          strstr(gl_info->gl_renderer, "8700"))
> @@ -957,11 +962,6 @@ BOOL IWineD3DImpl_FillGLCaps(WineD3D_GL_Info
> *gl_info) {
>                      gl_info->gl_card = CARD_NVIDIA_GEFORCE_8600GT;
>                      vidmem = 256;
>                  }
> -                /* Geforce8 - midend mobile */
> -                else if(strstr(gl_info->gl_renderer, "8600 M")) {
> -                    gl_info->gl_card = CARD_NVIDIA_GEFORCE_8600MGT;
> -                    vidmem = 512;
> -                }
>                  /* Geforce8 - lowend */
>                  else if(strstr(gl_info->gl_renderer, "8300") ||
>                          strstr(gl_info->gl_renderer, "8400") ||
> 

I would prefer not to extend the list with lots of additional models. In my opinion it isn't really needed as the list would become a lot longer and this makes it harder to maintain. If we would continue this way we would easily have to add two dozen additional mobile cards which are now handled as their desktop equivalents.

Roderick
-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger


From mstefani at redhat.com  Fri Nov 30 03:45:24 2007
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Fri, 30 Nov 2007 10:45:24 +0100
Subject: urlmon: Rename the wrappers around HeapAlloc() &Co to use the
	new	standard naming.
In-Reply-To: <19e31a080711291751p6f6594f9w73f90cbaafd21963@mail.gmail.com>
References: <20071129211234.GA27774@redhat.com>
	<19e31a080711291751p6f6594f9w73f90cbaafd21963@mail.gmail.com>
Message-ID: <474FDBB4.108@redhat.com>

Hey,

Steven Edwards wrote:
> On Nov 29, 2007 4:12 PM, Michael Stefaniuc <mstefani at redhat.de> wrote:
>> diff --git a/dlls/urlmon/urlmon_main.h b/dlls/urlmon/urlmon_main.h
>> index aeb0eb2..9f31fb9 100644
>> --- a/dlls/urlmon/urlmon_main.h
>> +++ b/dlls/urlmon/urlmon_main.h
>> @@ -63,22 +63,22 @@ HRESULT start_binding(LPCWSTR url, IBindCtx *pbc, REFIID riid, void **ppv);
>>
>>  HRESULT create_binding_protocol(LPCWSTR url, IInternetProtocol **protocol);
>>
>> -static inline void *urlmon_alloc(size_t len)
>> +static inline void *heap_alloc(size_t len)
>>  {
>>      return HeapAlloc(GetProcessHeap(), 0, len);
>>  }
>>
>> -static inline void *urlmon_alloc_zero(size_t len)
>> +static inline void *heap_alloc_zero(size_t len)
>>  {
>>      return HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, len);
>>  }
>>
>> -static inline void *urlmon_realloc(void *mem, size_t len)
>> +static inline void *heap_realloc(void *mem, size_t len)
>>  {
>>      return HeapReAlloc(GetProcessHeap(), 0, mem, len);
>>  }
>>
>> -static inline BOOL urlmon_free(void *mem)
>> +static inline BOOL heap_free(void *mem)
>>  {
>>      return HeapFree(GetProcessHeap(), 0, mem);
>>  }
> 
> Rather than duplicating these inline functions in each dlls private
> header, could we add the heap wrappers somewhere like winbase.h and
> mark it as a wine extension? Doing it there would make sense as
> winbase.h is where HeapAlloc and friends is defined.
No, the Wine source needs to be compilable with original Windows
headers. That's the official policy. A header below include/wine would
be possible in theory. The praxis says you would need to convince
Alexandre first. Though a wine/util.h could be useful for other things;
i still "dream" of replacing the sizeof(array)/sizeof(array[0]) and
bastardized forms (some wrong) of it with an ARRAY_SIZE(array) macro.

bye
	michael
-- 
Michael Stefaniuc                           Tel.: +49-711-96437-199
Consulting Communications Engineer          Fax.: +49-711-96437-111
--------------------------------------------------------------------
Reg. Adresse: Red Hat GmbH, Hauptst?tter Strasse 58, 70178 Stuttgart
Handelsregister: Amtsgericht Stuttgart HRB 153243
Gesch?ftsf?hrer: Brendan Lane, Charlie Peters, Michael Cunningham,
                 Werner Knoblich


From fgouget at free.fr  Fri Nov 30 05:20:32 2007
From: fgouget at free.fr (Francois Gouget)
Date: Fri, 30 Nov 2007 12:20:32 +0100 (CET)
Subject: d3dx8 [patch 1/10] Implement D3DXPlaneFromPointNormal
In-Reply-To: <200711281222.52295.stefan@codeweavers.com>
References: <E1IxI6S-0006HK-Uv@www10.emo.freenet-rz.de>
	<200711281222.52295.stefan@codeweavers.com>
Message-ID: <Pine.LNX.4.64.0711301218460.30562@amboise.dolphin>

On Wed, 28 Nov 2007, Stefan D?singer wrote:

> Am Mittwoch, 28. November 2007 09:17:04 schrieb tony.wasserka at freenet.de:
> > Anyways, where should we put the d3dx9 code? I mean, we have 13 folders to
> > choose from.. Perhaps It'd be better if we create a new dll (or at least
> > directory) called d3dx9 were we implement all d3dx9 stuff and let the other
> > d3dx9_xx dlls just call these functions? This would improve the clarity of
> > the code structure, so that people that don't follow this discussion can
> > also understand what we're doing ;-)
> Yes, I think this is a good idea. It wouldn't be a wined3dx which is shared 
> among d3dx8 and d3dx9, but it would just be a central place for the common 
> code in d3dx9_xx.dll, which will be a big majority of the code I guess.

So, just to clarify, you propose to create a d3dx9.dll dll, putting its 
code in dlls/d3dx9. Does this dll exist on Windows? If not, then we 
should call it wined3dx9 (and its code would go in dlls/wined3dx9).

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
 The greatest programming project of all took six days; on the seventh day the
  programmer rested. We've been trying to debug the *&^%$#@ thing ever since.
                      Moral: design before you implement.

From fgouget at free.fr  Fri Nov 30 05:30:56 2007
From: fgouget at free.fr (Francois Gouget)
Date: Fri, 30 Nov 2007 12:30:56 +0100 (CET)
Subject: Some thoughts about next GSoC
In-Reply-To: <200711221138.24153.kai.blin@gmail.com>
References: <200711221138.24153.kai.blin@gmail.com>
Message-ID: <Pine.LNX.4.64.0711301222470.30562@amboise.dolphin>

On Thu, 22 Nov 2007, Kai Blin wrote:
[...]
> I know some projects did an introductory quiz to figure out the student's 
> coding skills, I'm not convinced the knowledge needed for Wine can be tested 
> in a quiz. What do you think?

Maybe just asking them to compile Wine and submit their include/config.h 
or make test results. This can be used to check that their config does 
not have big problems like a bad fontforge or 64/32bit issues that could 
cause them problems when they start their project.

Asking them to submit conformance tests is an interesting idea too, but 
depending on the area it can be quite a bit of work. For some projects 
it may also not be possible to write relevant tests (e.g. we cannot test 
ExitWindows() or KDE/Gnome theme integration). But for those projects 
where it makes sense it could be a good idea.

The other ideas, public git repository, public blog / more frequent 
public updates, all seem like good ideas that could address the relative 
opacity of past SoCs.

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
     You can have my guns when you pry them from my kids cold, dead hands.


From fgouget at free.fr  Fri Nov 30 05:35:14 2007
From: fgouget at free.fr (Francois Gouget)
Date: Fri, 30 Nov 2007 12:35:14 +0100 (CET)
Subject: xdg_user_dirs patches
In-Reply-To: <87wss2j92v.fsf@wine.dyndns.org>
References: <36bf289b0711261649j4cc9747bl7b70e42eb8fd4756@mail.gmail.com>
	<558b2f5c0711281149y77878d39p2124f192aa232eae@mail.gmail.com>
	<87wss2j92v.fsf@wine.dyndns.org>
Message-ID: <Pine.LNX.4.64.0711301231410.30562@amboise.dolphin>

On Wed, 28 Nov 2007, Alexandre Julliard wrote:
[...]
> Also these variables should take priority over the default heuristics, 
> and you most likely want to handle the desktop dir the same way.

I'm not sure we want to handle the desktop directory the same way. It's 
really a special case because applications often put their 'icons' on 
the desktop. So if the Windows desktop is just a symbolic link to the 
Unix one, the user will end up with a lot of 'xxx.lnk' files on his 
desktop. In particular these files will show the wrong icon: they will 
have the icon associated with 'lnk' files, instead of the one of the 
application they are supposed to start.

So I think it's best to keep the Windows desktop separate from the Unix 
one, and let winemenubuilder put 'xxx.desktop' files on the Unix desktop 
when appropriate.

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
   Nouvelle version : les anciens bogues ont ?t? remplac?s par de nouveaux.

From julliard at winehq.org  Fri Nov 30 05:42:47 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 30 Nov 2007 12:42:47 +0100
Subject: xdg_user_dirs patches
In-Reply-To: <Pine.LNX.4.64.0711301231410.30562@amboise.dolphin> (Francois
	Gouget's message of "Fri, 30 Nov 2007 12:35:14 +0100 (CET)")
References: <36bf289b0711261649j4cc9747bl7b70e42eb8fd4756@mail.gmail.com>
	<558b2f5c0711281149y77878d39p2124f192aa232eae@mail.gmail.com>
	<87wss2j92v.fsf@wine.dyndns.org>
	<Pine.LNX.4.64.0711301231410.30562@amboise.dolphin>
Message-ID: <87sl2oot6w.fsf@wine.dyndns.org>

Francois Gouget <fgouget at free.fr> writes:

> On Wed, 28 Nov 2007, Alexandre Julliard wrote:
> [...]
>> Also these variables should take priority over the default heuristics, 
>> and you most likely want to handle the desktop dir the same way.
>
> I'm not sure we want to handle the desktop directory the same way. It's 
> really a special case because applications often put their 'icons' on 
> the desktop. So if the Windows desktop is just a symbolic link to the 
> Unix one, the user will end up with a lot of 'xxx.lnk' files on his 
> desktop. In particular these files will show the wrong icon: they will 
> have the icon associated with 'lnk' files, instead of the one of the 
> application they are supposed to start.
>
> So I think it's best to keep the Windows desktop separate from the Unix 
> one, and let winemenubuilder put 'xxx.desktop' files on the Unix desktop 
> when appropriate.

You are right, that one doesn't need to be changed in shell32, but we
have to fix winemenubuilder (or rather wineshelllink) to also take the
xdg user dirs config into account for the desktop.

-- 
Alexandre Julliard
julliard at winehq.org


From fgouget at free.fr  Fri Nov 30 05:45:33 2007
From: fgouget at free.fr (Francois Gouget)
Date: Fri, 30 Nov 2007 12:45:33 +0100 (CET)
Subject: shell32: symlink user's profile shell folders to xdg well known
	directories [2/2] (try 3)
In-Reply-To: <87lk8hjjg7.fsf@wine.dyndns.org>
References: <a71bd89a0711281742i2b0d4201vd4acb3beb50c6db5@mail.gmail.com>
	<87lk8hjjg7.fsf@wine.dyndns.org>
Message-ID: <Pine.LNX.4.64.0711301242390.30562@amboise.dolphin>

On Thu, 29 Nov 2007, Alexandre Julliard wrote:

> "Dan Kegel" <dank at kegel.com> writes:
> 
> > I feel like a broken record, but:
> > some apps don't like following symlinks, and the
> > native Windows way to configure what the "My Foo"
> > folders point to is called shell folder redirection;
> > These are documented at
> > http://support.microsoft.com/kb/242557
> > among other places, and I think Wine supports these
> > registry settings.  Is there any reason we don't want
> > to use these instead of symlinks?
> 
> We want the paths to remain valid even if the drive configuration is
> changed, so they have to point somewhere inside the C: drive.

Also, iirc, on the Unix side these directories are supposed to be 
movable relatively easily. If we put their path directly in the 
registry, we'll get lots of bad copies in the applications MRU lists, 
and elsewhere when they change (or when you move the .wine directory to 
another account/machine).

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
      Broadcast message : fin du monde dans cinq minutes, repentez vous !


From chris.kcat at gmail.com  Fri Nov 30 05:58:29 2007
From: chris.kcat at gmail.com (Chris Robinson)
Date: Fri, 30 Nov 2007 03:58:29 -0800
Subject: xdg_user_dirs patches
In-Reply-To: <Pine.LNX.4.64.0711301231410.30562@amboise.dolphin>
References: <36bf289b0711261649j4cc9747bl7b70e42eb8fd4756@mail.gmail.com>
	<87wss2j92v.fsf@wine.dyndns.org>
	<Pine.LNX.4.64.0711301231410.30562@amboise.dolphin>
Message-ID: <200711300358.29838.chris.kcat@gmail.com>

On Friday 30 November 2007 03:35:14 am Francois Gouget wrote:
> I'm not sure we want to handle the desktop directory the same way. It's
> really a special case because applications often put their 'icons' on
> the desktop. So if the Windows desktop is just a symbolic link to the
> Unix one, the user will end up with a lot of 'xxx.lnk' files on his
> desktop. In particular these files will show the wrong icon: they will
> have the icon associated with 'lnk' files, instead of the one of the
> application they are supposed to start.

Just to note, Wine already does this. The desktop directory is linked to 
~/Desktop by default, which is the X desktop directory for most systems. You 
also should take into account that apps will sometimes place non-lnk files 
onto the desktop that the user may expect to see (extracted files, downloaded 
files, readme's, etc).


From kai.blin at gmail.com  Fri Nov 30 06:44:54 2007
From: kai.blin at gmail.com (Kai Blin)
Date: Fri, 30 Nov 2007 13:44:54 +0100
Subject: Some thoughts about next GSoC
In-Reply-To: <Pine.LNX.4.64.0711301222470.30562@amboise.dolphin>
References: <200711221138.24153.kai.blin@gmail.com>
	<Pine.LNX.4.64.0711301222470.30562@amboise.dolphin>
Message-ID: <200711301345.02218.kai.blin@gmail.com>

On Friday 30 November 2007 12:30:56 Francois Gouget wrote:
> On Thu, 22 Nov 2007, Kai Blin wrote:
> [...]
> > I know some projects did an introductory quiz to figure out the student's
> > coding skills, I'm not convinced the knowledge needed for Wine can be
> > tested in a quiz. What do you think?
>
> Maybe just asking them to compile Wine and submit their include/config.h
> or make test results. This can be used to check that their config does
> not have big problems like a bad fontforge or 64/32bit issues that could
> cause them problems when they start their project.

Well, that's something we should take care of, ideally in the one-month period 
after being accepted and before the student is supposed to start working on 
SoC code.

> Asking them to submit conformance tests is an interesting idea too, but
> depending on the area it can be quite a bit of work. For some projects
> it may also not be possible to write relevant tests (e.g. we cannot test
> ExitWindows() or KDE/Gnome theme integration). But for those projects
> where it makes sense it could be a good idea.

Well, the way I'd like it to work is like this:

1. Student sends application draft to mailing list for review.
2. Wine developers with experience in the area covered by the application 
review the draft giving feedback. (Repeat steps 1 and 2 until application is 
suitable)
3. Students apply via Google web-app.
4. We contact students with request for a test case or the like.
5. Students send test case
6. Mentors review test cases, possibly asking for improvements (back to 5).

Of course, I'm afraid it's unlikely that it actually will work like that, at 
least if we define test case as something that will fit right into the wine 
test suite. But I think a test case like a simple program that will use parts 
of the API that should be implemented and works on windows should be 
sufficient, and people will want to have something like that anyway later.

I think it's also worth investing some time to help people get the initial 
code submission right. That's a point where we can teach people about code 
style, dos and don'ts, etc. If we get this right, it will benefit all the 
developers starting off with Wine, not only the SoC students.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071130/79abaf06/attachment.pgp 

From julliard at winehq.org  Fri Nov 30 07:19:38 2007
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 30 Nov 2007 14:19:38 +0100
Subject: [1/4] WineD3D: mov to a0.x does a floor(), not a round to nearest
In-Reply-To: <200711300252.12446.stefan@codeweavers.com> ("Stefan
	=?utf-8?Q?D=C3=B6singer=22's?=
	message of "Fri, 30 Nov 2007 02:52:12 +0100")
References: <200711300252.12446.stefan@codeweavers.com>
Message-ID: <87oddbq39x.fsf@wine.dyndns.org>

Stefan D?singer <stefan at codeweavers.com> writes:

> I sent this patch already, and it was committed and shows up in the 0.9.49 
> changelog. The commit ID is 6209b36acbef6e7f8edcf3a45a006bb09bffe4af, but 
> somehow the functional change was reverted again in 
> 0183f3e305ae1e40a806682ec85e8b4507e4ddd8 and the test was reverted in 
> 4454096db27e7560cce99367b45be3b24dd0894a

Most likely what happened is that I applied it, then reverted it because
it caused test failures, but I didn't remove the commit properly.
Anyway, it's still failing:

../../../tools/runtest -q -P wine -M d3d9.dll -T ../../.. -p d3d9_test.exe.so visual.c && touch visual.ok
visual.c:5165: Test failed: The device was not properly freed: refcount 1
make[2]: *** [visual.ok] Error 1

-- 
Alexandre Julliard
julliard at winehq.org


From stefan at codeweavers.com  Fri Nov 30 07:26:43 2007
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Fri, 30 Nov 2007 14:26:43 +0100
Subject: [4/4] WineD3D: Enabling too many lights is silently ignored
In-Reply-To: <d658b69e0711300049r6fe2699dn9034140632bcdb96@mail.gmail.com>
References: <200711300255.05257.stefan@codeweavers.com>
	<d658b69e0711300049r6fe2699dn9034140632bcdb96@mail.gmail.com>
Message-ID: <200711301426.46356.stefan@codeweavers.com>

Am Freitag, 30. November 2007 09:49:06 schrieb H. Verbeet:
> On 30/11/2007, Stefan D?singer <stefan at codeweavers.com> wrote:
>
> But you're not creating the lights first with SetLight(). IIRC you can
> create lots of lights with SetLight(), but only enable MaxActiveLights
> at the same time with LightEnable(). I guess calling LightEnable on a
> light that isn't created first is simply ignored.
LightEnable() on a light that doesn't exist creates a new light.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20071130/1821166b/attachment.pgp 

From tony.wasserka at freenet.de  Fri Nov 30 08:01:12 2007
From: tony.wasserka at freenet.de (tony.wasserka at freenet.de)
Date: Fri, 30 Nov 2007 15:01:12 +0100
Subject: d3dx8 [patch 1/10] Implement D3DXPlaneFromPointNormal
Message-ID: <E1Iy6Qa-0008PI-Fi@www10.emo.freenet-rz.de>

> So, just to clarify, you propose to create a d3dx9.dll dll, putting its 
> code in dlls/d3dx9. Does this dll exist on Windows? If not, then we 
> should call it wined3dx9 (and its code would go in dlls/wined3dx9).

Well, it shouldn't even be a dll, just a folder were put in all the d3dx9 code
and let the d3dx9_xx.dlls just export the functions they need.
I don't know of how much the makefile system is capable, but maybe we can
put all the d3dx9_xx.spec files in the same directory to improve overviewability,
I don't like these 13 dlls/d3dx9 directories that much :D
Anyways, what are the concrete differences between the d3dx9_xx.dlls?











From juan.lang at gmail.com  Fri Nov 30 09:27:28 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Fri, 30 Nov 2007 07:27:28 -0800
Subject: xdg_user_dirs patches
In-Reply-To: <Pine.LNX.4.64.0711301231410.30562@amboise.dolphin>
References: <36bf289b0711261649j4cc9747bl7b70e42eb8fd4756@mail.gmail.com>
	<558b2f5c0711281149y77878d39p2124f192aa232eae@mail.gmail.com>
	<87wss2j92v.fsf@wine.dyndns.org>
	<Pine.LNX.4.64.0711301231410.30562@amboise.dolphin>
Message-ID: <3a768c550711300727q6ff8ea86i9eaafb118f716caf@mail.gmail.com>

> I'm not sure we want to handle the desktop directory the same way. It's
> really a special case because applications often put their 'icons' on
> the desktop. So if the Windows desktop is just a symbolic link to the
> Unix one, the user will end up with a lot of 'xxx.lnk' files on his
> desktop. In particular these files will show the wrong icon: they will
> have the icon associated with 'lnk' files, instead of the one of the
> application they are supposed to start.

While this is annoying, I find it confusing to go to the "Desktop"
directory and not find the files on my desktop there.  I prefer having
the two desktops the same, and just delete the .lnk files myself.

--Juan


From infyquest at gmail.com  Fri Nov 30 09:58:33 2007
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Fri, 30 Nov 2007 09:58:33 -0600
Subject: [Patch] for wined3d: Correcting order issue
In-Reply-To: <20071130092627.295420@gmx.net>
References: <474F226C.9030500@harddisk.is-a-geek.org>
	<20071130092627.295420@gmx.net>
Message-ID: <36bf289b0711300758x7c478e27lf14dd70a867f68e1@mail.gmail.com>

On Nov 30, 2007 3:26 AM, Roderick Colenbrander <thunderbird2k at gmx.net> wrote:
> > Hi all,
> >
> > This patch repairs my previous one, as the command never got executed,
> > because 8600 matches before 8600M.
> >
> >
> > Marco Schuster
> >
> > ----
> > diff --git a/dlls/wined3d/directx.c b/dlls/wined3d/directx.c
> > index e4b5bdf..50b3250 100644
> > --- a/dlls/wined3d/directx.c
> > +++ b/dlls/wined3d/directx.c
> > @@ -950,6 +950,11 @@ BOOL IWineD3DImpl_FillGLCaps(WineD3D_GL_Info
> > *gl_info) {
> >                      gl_info->gl_card = CARD_NVIDIA_GEFORCE_8800GTS;
> >                      vidmem = 320; /* The 8800GTS uses 320MB, a 8800GTX
> > can have 768MB */
> >                  }
> > +                /* Geforce8 - midend mobile */
> > +                else if(strstr(gl_info->gl_renderer, "8600 M")) {
> > +                    gl_info->gl_card = CARD_NVIDIA_GEFORCE_8600MGT;
> > +                    vidmem = 512;
> > +                }
> >                  /* Geforce8 - midend */
> >                  else if(strstr(gl_info->gl_renderer, "8600") ||
> >                          strstr(gl_info->gl_renderer, "8700"))
> > @@ -957,11 +962,6 @@ BOOL IWineD3DImpl_FillGLCaps(WineD3D_GL_Info
> > *gl_info) {
> >                      gl_info->gl_card = CARD_NVIDIA_GEFORCE_8600GT;
> >                      vidmem = 256;
> >                  }
> > -                /* Geforce8 - midend mobile */
> > -                else if(strstr(gl_info->gl_renderer, "8600 M")) {
> > -                    gl_info->gl_card = CARD_NVIDIA_GEFORCE_8600MGT;
> > -                    vidmem = 512;
> > -                }
> >                  /* Geforce8 - lowend */
> >                  else if(strstr(gl_info->gl_renderer, "8300") ||
> >                          strstr(gl_info->gl_renderer, "8400") ||
> >
>
> I would prefer not to extend the list with lots of additional models. In my opinion it isn't really needed as the list would become a lot longer and this makes it harder to maintain. If we would continue this way we would easily have to add two dozen additional mobile cards which are now handled as their desktop equivalents.

I Would rather have a registry entry for all the cards, and user can
add new cards. If they feel its not there. But I think this idea came
up quite a long back and was rejected in favor of in the code values.
Sorry for raising it up again.

-- VJ


From fgouget at free.fr  Fri Nov 30 11:43:31 2007
From: fgouget at free.fr (Francois Gouget)
Date: Fri, 30 Nov 2007 18:43:31 +0100 (CET)
Subject: d3dx8 [patch 1/10] Implement D3DXPlaneFromPointNormal
In-Reply-To: <E1Iy6Qa-0008PI-Fi@www10.emo.freenet-rz.de>
References: <E1Iy6Qa-0008PI-Fi@www10.emo.freenet-rz.de>
Message-ID: <Pine.LNX.4.64.0711301835470.15903@amboise.dolphin>

On Fri, 30 Nov 2007, tony.wasserka at freenet.de wrote:

> > So, just to clarify, you propose to create a d3dx9.dll dll, putting its 
> > code in dlls/d3dx9. Does this dll exist on Windows? If not, then we 
> > should call it wined3dx9 (and its code would go in dlls/wined3dx9).
> 
> Well, it shouldn't even be a dll, just a folder were put in all the d3dx9 code
> and let the d3dx9_xx.dlls just export the functions they need.

Then that code should not go in dlls/d3dx9 but in libs/d3dx9 or some 
such.

> I don't know of how much the makefile system is capable, but maybe we can
> put all the d3dx9_xx.spec files in the same directory to improve overviewability,
> I don't like these 13 dlls/d3dx9 directories that much :D

In the pas we've had multiple dlls in a single dlls/xxx sub-directory... 
but in sub-directories thereof. Anyway that's the past. Now it's all be 
standardised:
 * for each dll we implement there one and only one subdirectory in 
'dlls'
 * conversely, each 'dlls' subdirectory implements one and only one dll

That's quite practical to automate the generation of Makefiles, Visual 
Studio projects, automated code checking, etc. Besides, what's an 13 
extra directories in a sea of already 233 dlls.

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
      Broadcast message : fin du monde dans cinq minutes, repentez vous !


From fgouget at free.fr  Fri Nov 30 11:45:01 2007
From: fgouget at free.fr (Francois Gouget)
Date: Fri, 30 Nov 2007 18:45:01 +0100 (CET)
Subject: xdg_user_dirs patches
In-Reply-To: <3a768c550711300727q6ff8ea86i9eaafb118f716caf@mail.gmail.com>
References: <36bf289b0711261649j4cc9747bl7b70e42eb8fd4756@mail.gmail.com>
	<558b2f5c0711281149y77878d39p2124f192aa232eae@mail.gmail.com>
	<87wss2j92v.fsf@wine.dyndns.org>
	<Pine.LNX.4.64.0711301231410.30562@amboise.dolphin>
	<3a768c550711300727q6ff8ea86i9eaafb118f716caf@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0711301844180.15903@amboise.dolphin>

On Fri, 30 Nov 2007, Juan Lang wrote:
[...]
> While this is annoying, I find it confusing to go to the "Desktop"
> directory and not find the files on my desktop there.  I prefer having
> the two desktops the same, and just delete the .lnk files myself.

That's ok only because you don't care about the Windows desktop 
shortcuts...

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
               RFC 2549: ftp://ftp.isi.edu/in-notes/rfc2549.txt
                IP over Avian Carriers with Quality of Service


From juan.lang at gmail.com  Fri Nov 30 11:46:26 2007
From: juan.lang at gmail.com (Juan Lang)
Date: Fri, 30 Nov 2007 09:46:26 -0800
Subject: xdg_user_dirs patches
In-Reply-To: <Pine.LNX.4.64.0711301844180.15903@amboise.dolphin>
References: <36bf289b0711261649j4cc9747bl7b70e42eb8fd4756@mail.gmail.com>
	<558b2f5c0711281149y77878d39p2124f192aa232eae@mail.gmail.com>
	<87wss2j92v.fsf@wine.dyndns.org>
	<Pine.LNX.4.64.0711301231410.30562@amboise.dolphin>
	<3a768c550711300727q6ff8ea86i9eaafb118f716caf@mail.gmail.com>
	<Pine.LNX.4.64.0711301844180.15903@amboise.dolphin>
Message-ID: <3a768c550711300946q3b365dcdj492b8ad5e7bc1067@mail.gmail.com>

> That's ok only because you don't care about the Windows desktop
> shortcuts...

Right, I know.  My point is, there's no one-size-fits-all policy
that's clearly better than any other, at least that I've seen.
--Juan


From dimi at lattica.com  Fri Nov 30 11:50:12 2007
From: dimi at lattica.com (Dimi Paun)
Date: Fri, 30 Nov 2007 12:50:12 -0500
Subject: xdg_user_dirs patches
In-Reply-To: <Pine.LNX.4.64.0711301844180.15903@amboise.dolphin>
References: <36bf289b0711261649j4cc9747bl7b70e42eb8fd4756@mail.gmail.com>
	<558b2f5c0711281149y77878d39p2124f192aa232eae@mail.gmail.com>
	<87wss2j92v.fsf@wine.dyndns.org>
	<Pine.LNX.4.64.0711301231410.30562@amboise.dolphin>
	<3a768c550711300727q6ff8ea86i9eaafb118f716caf@mail.gmail.com>
	<Pine.LNX.4.64.0711301844180.15903@amboise.dolphin>
Message-ID: <1196445012.3036.48.camel@dimi.lattica.com>


On Fri, 2007-11-30 at 18:45 +0100, Francois Gouget wrote:
> That's ok only because you don't care about the Windows desktop 
> shortcuts...

I guess the preferred solution would be to teach GNOME & KDE
about .lnk files.

-- 
Dimi Paun <dimi at lattica.com>
Lattica, Inc.



From tony.wasserka at freenet.de  Fri Nov 30 12:31:54 2007
From: tony.wasserka at freenet.de (tony.wasserka at freenet.de)
Date: Fri, 30 Nov 2007 19:31:54 +0100
Subject: d3dx8 [patch 1/10] Implement D3DXPlaneFromPointNormal
Message-ID: <E1IyAeY-000178-MS@www14.emo.freenet-rz.de>

Okay, then that has been discussed.
By the way, what about David's second patch?
Was there anything wrong about it or why isn't it in the tree, yet?










From frank.richter at gmail.com  Fri Nov 30 14:50:11 2007
From: frank.richter at gmail.com (Frank Richter)
Date: Fri, 30 Nov 2007 21:50:11 +0100
Subject: xdg_user_dirs patches
In-Reply-To: <1196445012.3036.48.camel@dimi.lattica.com>
References: <36bf289b0711261649j4cc9747bl7b70e42eb8fd4756@mail.gmail.com>	<558b2f5c0711281149y77878d39p2124f192aa232eae@mail.gmail.com>	<87wss2j92v.fsf@wine.dyndns.org>	<Pine.LNX.4.64.0711301231410.30562@amboise.dolphin>	<3a768c550711300727q6ff8ea86i9eaafb118f716caf@mail.gmail.com>	<Pine.LNX.4.64.0711301844180.15903@amboise.dolphin>
	<1196445012.3036.48.camel@dimi.lattica.com>
Message-ID: <47507783.3090301@gmail.com>

On 30.11.2007 18:50, Dimi Paun wrote:
> I guess the preferred solution would be to teach GNOME & KDE
> about .lnk files.

Or write .desktop files to the Desktop dir.

-f.r.


From dank at kegel.com  Fri Nov 30 15:26:23 2007
From: dank at kegel.com (Dan Kegel)
Date: Fri, 30 Nov 2007 13:26:23 -0800
Subject: Note to packagers: choose gcc version carefully when building wine
Message-ID: <a71bd89a0711301326u1a1f2d46n9ab86da0253002c9@mail.gmail.com>

Attention packagers: the default version of gcc on
many distros happens to generate Wine binaries which
make some copy protection schemes unhappy.
At the moment, gcc-3.3.x, gcc-3.4.x, and gcc-4.2.x are
known to work; gcc-4.0.x is known to not work.
Please check the compiler you use when building wine
packages and make sure it's one of the good ones.

To really check, find a retail copy of Photoshop CS or CS2
(not 7 or CS3) and install from cd-rom.  If it aborts silently
near the end without offering to activate the product, you
have an unsupported compiler, and users of your packages
might run into trouble with apps protected with safedisc.

See http://bugs.winehq.org/show_bug.cgi?id=10273 for more info.
- Dan


From truiken at gmail.com  Fri Nov 30 15:53:06 2007
From: truiken at gmail.com (James Hawkins)
Date: Fri, 30 Nov 2007 15:53:06 -0600
Subject: wininet: Add test for FtpGetCurrentDirectoryA
In-Reply-To: <475084D4.3090607@zacbrown.org>
References: <475084D4.3090607@zacbrown.org>
Message-ID: <22821af30711301353s33fd207bm1675aa635e7d2bcb@mail.gmail.com>

On Nov 30, 2007 3:47 PM, Zac Brown <zac at zacbrown.org> wrote:
> Hi,
>
> Changelog:
> * Add a test in dlls/wininet/tests/ftp.c for FtpGetCurrentDirectoryA
>
> Notes:
> * This test passes fully without error on Windows XP, with the test compiled by Visual Studio Express C++ 2008.
> * The functions this test call are currently broken in wine and I am in the process of fixing them myself.
>
> Patch is pasted below:
>
>
> ---
>  dlls/wininet/tests/ftp.c |   84 +++++++++++++++++++++++++++++++++++++++++++++-
>  1 files changed, 83 insertions(+), 1 deletions(-)
>
> diff --git a/dlls/wininet/tests/ftp.c b/dlls/wininet/tests/ftp.c
> index 6d03fb8..f6517b0 100644
> --- a/dlls/wininet/tests/ftp.c
> +++ b/dlls/wininet/tests/ftp.c
> @@ -691,6 +691,85 @@ static void test_command(HINTERNET hFtp, HINTERNET hConnect)
>      }
>  }
>
> +static void test_get_current_dir(HINTERNET hFtp, HINTERNET hConnect)
> +{
> +    BOOL    bRet;
> +    DWORD   dwCurrentDirectory = MAX_PATH;
> +    CHAR    lpszCurrentDirectory[MAX_PATH];
> +
> +    /* change directories to get a more interesting pwd */
> +    bRet = FtpCommandA(hFtp, FALSE, FTP_TRANSFER_TYPE_ASCII, "CWD pub/", 0, NULL);
> +    if(bRet == FALSE)
> +    {
> +        trace("Failed to change directories in test_get_current_dir(HINTERNET hFtp).\n");
> +        return;
> +    }
> +
> +    /* test with all NULL arguments */
> +    SetLastError(0xdeadbeef);
> +    bRet = FtpGetCurrentDirectoryA( NULL, NULL, 0 );
> +    ok ( bRet == FALSE, "Expected FtpGetCurrentDirectoryA to fail\n" );
> +    ok ( GetLastError() == ERROR_INVALID_HANDLE, "Expected ERROR_INVALID_HANDLE, got: %d\n", GetLastError());
> +
> +    /* test with NULL parameters instead of expected LPSTR/LPDWORD */
> +    SetLastError(0xdeadbeef);
> +    bRet = FtpGetCurrentDirectoryA( hFtp, NULL, 0 );
> +    ok ( bRet == FALSE, "Expected FtpGetCurrentDirectoryA to fail\n" );
> +    ok ( GetLastError() == ERROR_INVALID_PARAMETER, "Expected ERROR_INVALID_PARAMETER, got: %d\n", GetLastError());
> +
> +    /* test with no valid handle and valid parameters */
> +    SetLastError(0xdeadbeef);
> +    bRet = FtpGetCurrentDirectoryA( NULL, lpszCurrentDirectory, &dwCurrentDirectory );
> +    ok ( bRet == FALSE, "Expected FtpGetCurrentDirectoryA to fail\n" );
> +    ok ( GetLastError() == ERROR_INVALID_HANDLE, "Expected ERROR_INVALID_HANDLE, got: %d\n", GetLastError());
> +
> +    /* test with invalid dwCurrentDirectory and all other parameters correct */
> +    SetLastError(0xdeadbeef);
> +    bRet = FtpGetCurrentDirectoryA( hFtp, lpszCurrentDirectory, 0 );
> +    ok ( bRet == FALSE, "Expected FtpGetCurrentDirectoryA to fail\n" );
> +    ok ( GetLastError() == ERROR_INVALID_PARAMETER, "Expected ERROR_INVALID_PARAMETER, got: %d\n", GetLastError());
> +
> +    /* test with invalid lpszCurrentDirectory and all other parameters correct */
> +    SetLastError(0xdeadbeef);
> +    bRet = FtpGetCurrentDirectoryA( hFtp, NULL, &dwCurrentDirectory );
> +    ok ( bRet == FALSE, "Expected FtpGetCurrentDirectoryA to fail\n" );
> +    ok ( GetLastError() == ERROR_INSUFFICIENT_BUFFER, "Expected ERROR_INSUFFICIENT_BUFFER, got: %d\n", GetLastError());
> +
> +    /* test to show it checks the handle type */
> +    SetLastError(0xdeadbeef);
> +    bRet = FtpGetCurrentDirectoryA( hConnect, lpszCurrentDirectory, &dwCurrentDirectory );
> +    ok ( bRet == FALSE, "Expected FtpGetCurrentDirectoryA to fail\n" );
> +    ok ( GetLastError() == ERROR_INTERNET_INCORRECT_HANDLE_TYPE,
> +    "Expected ERROR_INTERNET_INCORRECT_HANDLE_TYPE, got: %d\n", GetLastError());
> +
> +    /* test for the current directory with legitimate values */
> +    SetLastError(0xdeadbeef);
> +    bRet = FtpGetCurrentDirectoryA( hFtp, lpszCurrentDirectory, &dwCurrentDirectory );
> +    ok ( bRet == TRUE, "Expected FtpGetCurrentDirectoryA to pass\n" );
> +    ok ( lstrcmp(lpszCurrentDirectory, "/pub") == 0, "Expected returned value \"%s\" to match \"%s\" \n", (char*)lpszCurrentDirectory, "/pub");
> +    ok ( GetLastError() == ERROR_SUCCESS, "Expected ERROR_SUCCESS, got: %d\n", GetLastError());
> +
> +
> +    /* test for the current directory with a size only large enough to
> +     * fit the string and not the null terminating character */
> +    SetLastError(0xdeadbeef);
> +    dwCurrentDirectory = 4;
> +    lpszCurrentDirectory[4] = 'a'; /* set position 4 of the array to something else to make sure a leftover \0 isn't fooling the test */
> +    bRet = FtpGetCurrentDirectoryA( hFtp, lpszCurrentDirectory, &dwCurrentDirectory );
> +    ok ( bRet == FALSE, "Expected FtpGetCurrentDirectoryA to fail\n");
> +    ok ( lstrcmp(lpszCurrentDirectory, "/pub") != 0, "Expected returned value \"%s\" to not match \"%s\" \n", (char*)lpszCurrentDirectory, "/pub");
> +    ok ( GetLastError() == ERROR_INSUFFICIENT_BUFFER, "Expected ERROR_INSUFFICIENT_BUFFER, got: %d\n", GetLastError());
> +
> +    /* test for the current directory with a size large enough to store
> +     * the expected string as well as the null terminating character */
> +    SetLastError(0xdeadbeef);
> +    dwCurrentDirectory = 5;
> +    bRet = FtpGetCurrentDirectoryA( hFtp, lpszCurrentDirectory, &dwCurrentDirectory );
> +    ok ( bRet == TRUE, "Expected FtpGetCurrentDirectoryA to pass\n");
> +    ok ( lstrcmp(lpszCurrentDirectory, "/pub") == 0, "Expected returned value \"%s\" to match \"%s\" \n", (char*)lpszCurrentDirectory, "/pub");
> +    ok ( GetLastError() == ERROR_SUCCESS, "Expected ERROR_SUCCESS, got: %d\n", GetLastError());
> +}
> +
>  START_TEST(ftp)
>  {
>      HANDLE hInternet, hFtp, hHttp;
> @@ -733,7 +812,10 @@ START_TEST(ftp)
>      test_removedir(hFtp, hHttp);
>      test_renamefile(hFtp, hHttp);
>      test_command(hFtp, hHttp);
> -
> +todo_wine
> +{
> +    test_get_current_dir(hFtp, hHttp);
> +}
>      InternetCloseHandle(hHttp);
>      InternetCloseHandle(hFtp);
>      InternetCloseHandle(hInternet);
>

You put the todo_wine around each block of ok's that fail, not around
the whole test function.

-- 
James Hawkins


From David.Adam at math.cnrs.fr  Fri Nov 30 13:34:17 2007
From: David.Adam at math.cnrs.fr (David.Adam at math.cnrs.fr)
Date: Fri, 30 Nov 2007 20:34:17 +0100
Subject: d3dx8 dll
Message-ID: <20071130203417.bf80k95xskc08484@webmail.math.cnrs.fr>

My second patch was not committed, because Alexandre wants  all the  
functions to be implemented in d3dx9-36.dll. Then, the other d3dx9_xx  
dll forward their functions to d3dx9_36.dll.

David


From luis.busquets at ilidium.com  Fri Nov 30 16:27:37 2007
From: luis.busquets at ilidium.com (=?ISO-8859-1?Q?=22Luis_C=2E_Busquets_P=E9rez=22?=)
Date: Fri, 30 Nov 2007 23:27:37 +0100
Subject: d3dx8 [patch 1/10] Implement D3DXPlaneFromPointNormal
Message-ID: <47508E59.8000007@ilidium.com>

I still do not see why it is not possible to have only one folder 
dlls/d3dx9/ with the thirteen spec files inside. After all, the vast 
majority of its code is repeated and it is the same system ctl3d, 
ctl3d32 and ctl3dv2 use as the three specs are in dlls/ctl3d32

This is not creating subfolders in dlls/d3dx9 but just putting all spec 
files in it.


From dank at kegel.com  Fri Nov 30 23:41:46 2007
From: dank at kegel.com (Dan Kegel)
Date: Fri, 30 Nov 2007 21:41:46 -0800
Subject: Visual C++ 5 works pretty well...
Message-ID: <a71bd89a0711302141o6f24137akecfacda2666395d5@mail.gmail.com>

For fun, I installed Visual C++ 5 and built a few things with it.
Ran very nicely.

Filed two bugs:
http://bugs.winehq.org/show_bug.cgi?id=10623 (VC++ 5 doesn't know who
registered it)
http://bugs.winehq.org/show_bug.cgi?id=10622 (VC++ 5 hangs on exit)

It complained a bit if I didn't install MFC40.DLL before
building MFC apps.
Also, the dialog to add include directories acted strangely;
Tools / Options / Directories lets you insert a new directory,
and pretends to let you browse for it, but it acts very
oddly after navigating to the first folder; clicking on that
doesn't open the folder as expected, but rather just selects
that folder.  (Not sure if that's different on Windows, but it
sounds like a wine bug.)

Debugging, compiling simple floating point apps, editing all worked
smoothly.  Nice!
I don't know how stable it is on long use; all my sessions were short.
- Dan


From gerald at pfeifer.com  Fri Nov 30 17:57:24 2007
From: gerald at pfeifer.com (Gerald Pfeifer)
Date: Sat, 1 Dec 2007 00:57:24 +0100 (CET)
Subject: dlls/wintab32/context.c -- simpflication and HEADS UP!
Message-ID: <Pine.LNX.4.64.0712010053550.19271@acrux.dbai.tuwien.ac.at>

This change of mine is obvious since InExt and OutExt are DWORD, thus
unsigned, and thus always greater or equal zero so my patch should be
fine in any case.

However, looking at the else-part of the if-statement, I have some
doubts this is working as designed, and in general the abs() invocations 
are bogus.

Any expert who could help with a more extensive patch?

Gerald

ChangeLog:
Simplify condition in ScaleForContext().

Index: dlls/wintab32/context.c
===================================================================
RCS file: /home/wine/wine/dlls/wintab32/context.c,v
retrieving revision 1.22
diff -u -3 -p -r1.22 context.c
--- dlls/wintab32/context.c	21 Sep 2007 12:24:49 -0000	1.22
+++ dlls/wintab32/context.c	30 Nov 2007 23:53:47 -0000
@@ -176,7 +176,7 @@ int TABLET_PostTabletMessage(LPOPENCONTE
 static inline DWORD ScaleForContext(DWORD In, DWORD InOrg, DWORD InExt, DWORD
                                     OutOrg, DWORD OutExt)
 {
-    if (((InExt > 0 )&&(OutExt > 0)) || ((InExt<0) && (OutExt < 0)))
+    if ((InExt > 0) && (OutExt > 0))
         return ((In - InOrg) * abs(OutExt) / abs(InExt)) + OutOrg;
     else
         return ((abs(InExt) - (In - InOrg))*abs(OutExt) / abs(InExt)) + OutOrg;


From manish.iitm at yahoo.co.in  Fri Nov 30 23:08:17 2007
From: manish.iitm at yahoo.co.in (manish jaiswal)
Date: Sat, 1 Dec 2007 10:38:17 +0530 (IST)
Subject: Error while compiling the wine-0.9.49 in RedHat Linux
Message-ID: <306339.20948.qm@web94403.mail.in2.yahoo.com>

While compiling the wine-0.9.49 I am getting these error.
Please help me to resolve these error's.

winegcc: gcc failed
make[2]: *** [winex11.drv.so] Error 2
make[2]: Leaving directory `/home/manish/Desktop/Download/wine-0.9.49/dlls/winex11.drv'
make[1]: *** [winex11.drv] Error 2
make[1]: Leaving directory `/home/manish/Desktop/Download/wine-0.9.49/dlls'
make: *** [dlls] Error 2

Thanking in anticipation.

 
with regards:
Manish


      Chat on a cool, new interface. No download required. Go to http://in.messenger.yahoo.com/webmessengerpromo.php
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20071201/9a601019/attachment.htm 

