From m.b.lankhorst at gmail.com  Sat Mar  1 02:55:39 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Sat, 1 Mar 2008 00:55:39 -0800
Subject: iPod synced with iTunes v7.6!
Message-ID: <b130c85e0803010055g19782baam34bc7e1301c884ed@mail.gmail.com>

Hi all,

I got an ipod I borrowed to sync: http://www.astro.rug.nl/~lankhorst/ipod.png

There are, however, 3 separate issues to work out for this to work
with an unpatched version of wine, minus the patches I sent to
wine-patches, and one I still need to confirm with rob.

1. I need to add detection in explorer (through hal detection) so that
ipods are automatically mounted and appropiate registry keys are
created (not that much work).
2. The ioctl's from dlls/ntdll/cdrom.c should really be moved to
dlls/mountmgr.sys, so that IOCTL_STORAGE_GET_DEVICE_NUMBER will always
be called with a proper implementation.
3. I need to add raw device access (access to /dev/sdb, if the ipod is
mounted on /dev/sdb2), through CreateFile(\\USBSTOR#..........)

1&3 won't be too hard to solve within a few days, but I'm not 100%
sure how to do 2.

Cheers,
Maarten.


From ono at java.pl  Sat Mar  1 09:10:24 2008
From: ono at java.pl (Adam Strzelecki)
Date: Sat, 1 Mar 2008 16:10:24 +0100
Subject: kernel32 & winex11: WaitForMultipleObjectsEx should ignore NULL
	handles
In-Reply-To: <47C839A8.10101@codeweavers.com>
References: <B5DA0EA3-A343-4A4C-99EA-581A2F230874@java.pl>
	<47C839A8.10101@codeweavers.com>
Message-ID: <76BAF0EE-5450-482A-B1F3-D5B57DB89156@java.pl>

> In this case, MSI should not be calling MsgWaitForMultipleObjects  
> with an invalid handle and in fact that barring memory corruption,  
> this can't happen:
You're right, my patch was incorrect, I made bad assumption.

I'm still not sure why this X11DRV_MsgWaitForMultipleObjectsEx is  
testing for "(count || timeout)", rather than "(count && timeout)" or  
just "count" at:

>      if (process_events( data->display, mask )) ret = count - 1;
>      else if (count || timeout)
>      {
>          ret = WaitForMultipleObjectsEx( count, handles, flags &  
> MWMO_WAITALL,
>                                          timeout, flags &  
> MWMO_ALERTABLE );
>>

I can see that msi_dialog_run_message_loop calls  
"MsgWaitForMultipleObjects( 0, NULL, 0, INFINITE, QS_ALLINPUT );"  
which implies that
"WaitForMultipleObjects( 0, NULL, 0, INFINITE, MWMO_ALERTABLE );" can  
be called if precess_events returns FALSE.

I'm pretty sure I saw in gdb some calls with NULL handles to  
WaitForMultipleObjects related to MSI.

Regards,
-- 
Adam Strzelecki |: nanoant.com :|



From ono at java.pl  Sat Mar  1 09:35:16 2008
From: ono at java.pl (Adam Strzelecki)
Date: Sat, 1 Mar 2008 16:35:16 +0100
Subject: kernel32 & winelib: Don't test string size in CompareStringW for
	null	terminated strings
In-Reply-To: <47C83B7A.7080208@codeweavers.com>
References: <8027AB2D-A230-47B0-A07F-76B998446AE6@java.pl>
	<47C83B7A.7080208@codeweavers.com>
Message-ID: <11CF4451-91C9-40AF-BF7E-C2610CEF0A4C@java.pl>

Hello,

> You introduce a lot of complexity into the low-level helper  
> routines. We don't want to put Win32 quirks, like -1 meaning "until  
> the null terminator" being put into the low-level functions unless  
> we have to. In this case, if this is the sole cause of the slowdown  
> then you would be better off caching the length at the MSI level  
> since the strings are bound to be accessed more than once.

My intention was to fix performance of lstrcmpW, or CompareStringW  
with null-terminated strings.
Currently if we try to compare "1st very long string of blah blah blah  
blah blah" with "2nd very long string of blah blah blah blah blah", we  
call non-optimized strlenW (that is simple inline loop with null  
checking) for both of them, which both do all together around 100  
iterations.
While 1 comparison (iteration) is enough to tell the result should be  
-1.
So counting length for both string in CompareStringW just because low- 
lever wine_compare_string expects strings to have always specified  
length is IMHO CPU hog, that makes impact on WINE MSI performance, on  
other components using a lot of string comparing.

> How do you know that the compiler isn't generating the same assembly  
> for the functions as that used by msvcrt / glibc? Theories like  
> these need numbers to back them up.

I know that because those msvcrt or glibc routines are written  
directly in assembler not C and optimized for the 32-bit (or 64-bit)  
data aligning etc, and DWORD fetching. Visual Studio is shipping with  
complete sources of C CRT so you may have a look.

> ;***
> ;strlen.asm - contains strlen() routine
> ;
> ;       Copyright (c) Microsoft Corporation. All rights reserved.
> ;
> ;Purpose:
> ;       strlen returns the length of a null-terminated string,
> ;       not including the null byte itself.
> ;
> ;*******************************************************************************


Probably same thing happens with CompareStringW and lstrlenW of  
kernel, but this time I can't be sure because I don't have the ASM  
sources.

So it has nothing to do with compiler, but care about performance of  
some often used functions and programming habit to reuse existing far  
better optimized low level code than cooking generic one believing  
that GCC will do make it best.

Cheers,
-- 
Adam Strzelecki |: nanoant.com :|



From dank at kegel.com  Sat Mar  1 09:38:36 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 1 Mar 2008 07:38:36 -0800
Subject: kernel32 & winelib: Don't test string size in CompareStringW for
	null terminated strings
Message-ID: <a71bd89a0803010738y65b9e90cve6e222d69adafe37@mail.gmail.com>

Adam Strzelecki wrote:
> Visual Studio is shipping with complete sources of C CRT so you may have a look.
> ;***
> ;strlen.asm - contains strlen() routine
> ;
> ;       Copyright (c) Microsoft Corporation. All rights reserved.

No, we may not have a look!  And we sure as hell can't
post copyrighted Microsoft source code on this mailing list!
- Dan


From ono at java.pl  Sat Mar  1 09:55:12 2008
From: ono at java.pl (Adam Strzelecki)
Date: Sat, 1 Mar 2008 16:55:12 +0100
Subject: kernel32 & winelib: Don't test string size in CompareStringW for
	null terminated strings
In-Reply-To: <a71bd89a0803010738y65b9e90cve6e222d69adafe37@mail.gmail.com>
References: <a71bd89a0803010738y65b9e90cve6e222d69adafe37@mail.gmail.com>
Message-ID: <5FFEB4AF-441F-47FA-87F4-7CE319CAC1D7@java.pl>

> No, we may not have a look!  And we sure as hell can't
> post copyrighted Microsoft source code on this mailing list!
Argh... I meant you may have a look if you have Visual Studio  
installed, I don't intend to post any copyrighted code there, but I  
just post header copyright information from this file to prove that it  
does exist:)
However you can find with Google + "strlen.asm - contains strlen()  
routine" on M$ forums some ppl that wisely did post full source ;P

Regards,
-- 
Adam Strzelecki |: nanoant.com :|



From winehacker at gmail.com  Sat Mar  1 10:12:02 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Sat, 1 Mar 2008 11:12:02 -0500
Subject: kernel32 & winelib: Don't test string size in CompareStringW for
	null terminated strings
In-Reply-To: <5FFEB4AF-441F-47FA-87F4-7CE319CAC1D7@java.pl>
References: <a71bd89a0803010738y65b9e90cve6e222d69adafe37@mail.gmail.com>
	<5FFEB4AF-441F-47FA-87F4-7CE319CAC1D7@java.pl>
Message-ID: <19e31a080803010812q2a2e2748ma3dea3412e5dcfe4@mail.gmail.com>

On Sat, Mar 1, 2008 at 10:55 AM, Adam Strzelecki <ono at java.pl> wrote:
> > No, we may not have a look!  And we sure as hell can't
>  > post copyrighted Microsoft source code on this mailing list!
>  Argh... I meant you may have a look if you have Visual Studio
>  installed, I don't intend to post any copyrighted code there, but I
>  just post header copyright information from this file to prove that it
>  does exist:)
>  However you can find with Google + "strlen.asm - contains strlen()
>  routine" on M$ forums some ppl that wisely did post full source ;P

Wine kind of work on the honor system here. If you've looked at the
CRT sources even though they come with the PSDK and MSVC please don't
start implementing those functions. Ditto for ATL. MSVC ships with the
source code for it also but the developers that work on the ATL don't
go digging in to those sources.

Thanks
-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From ono at java.pl  Sat Mar  1 16:02:10 2008
From: ono at java.pl (Adam Strzelecki)
Date: Sat, 1 Mar 2008 23:02:10 +0100
Subject: msi: ACTION_RegisterProduct store all InstallProperties
In-Reply-To: <22821af30803011158g219b93bbq4b660d43d96ffdae@mail.gmail.com>
References: <2D73E93F-4E00-4493-8416-3238546EA3B9@java.pl>
	<22821af30802290939q489b73d9n3c9c106604a49e8c@mail.gmail.com>
	<C467D1FF-9F98-4A2F-869B-E51C31E17A71@java.pl>
	<22821af30803011158g219b93bbq4b660d43d96ffdae@mail.gmail.com>
Message-ID: <1D8C710E-D65D-4E87-865C-9BA7F8747B1F@java.pl>

Hello,

> I think you need to read through the implementation of
> MSI_GetProductInfo more closely and also read the MsiGetProductInfo
> tests in tests/msi.c and the test_publish:RegisterProduct tests in
> tests/install.c.

I think I did, and looking at the tests I see they are testing  
properties only at Uninstall key, and I think this is wrong, or at  
least incomplete, as quoted below:

>     res = RegOpenKeyA(uninstall, prodcode, &prodkey);
>     ok(res == ERROR_SUCCESS, "Expected ERROR_SUCCESS, got %d\n", res);
>
>     CHECK_REG_DWORD(prodkey, "Version", 0x1010001);
>     CHECK_REG_DWORD(prodkey, "VersionMajor", 1);
>     CHECK_REG_DWORD(prodkey, "VersionMinor", 1);
>     CHECK_REG_DWORD(prodkey, "WindowsInstaller", 1);


While MSI_GetProductInfo is reading VersionMajor, VersionMinor, ...  
etc from InstallProperties key (from szInstallProperties_fmt or  
szInstaller_LocalSystemProductCodes_fmt), but NOT from Uninstall key  
as quotes below:

>     if (classes)
>         MSIREG_OpenLocalSystemProductKey(szProduct, &userdata, FALSE);
>     else
>         MSIREG_OpenInstallPropertiesKey(szProduct, &userdata, FALSE);
>
>     if (!lstrcmpW(szAttribute, INSTALLPROPERTY_HELPLINKW) ||
>         !lstrcmpW(szAttribute, INSTALLPROPERTY_HELPTELEPHONEW) ||
>         !lstrcmpW(szAttribute, INSTALLPROPERTY_INSTALLDATEW) ||
>         !lstrcmpW(szAttribute,  
> INSTALLPROPERTY_INSTALLEDPRODUCTNAMEW) ||
>         !lstrcmpW(szAttribute, INSTALLPROPERTY_INSTALLLOCATIONW) ||
>         !lstrcmpW(szAttribute, INSTALLPROPERTY_INSTALLSOURCEW) ||
>         !lstrcmpW(szAttribute, INSTALLPROPERTY_LOCALPACKAGEW) ||
>         !lstrcmpW(szAttribute, INSTALLPROPERTY_PUBLISHERW) ||
>         !lstrcmpW(szAttribute, INSTALLPROPERTY_URLINFOABOUTW) ||
>         !lstrcmpW(szAttribute, INSTALLPROPERTY_URLUPDATEINFOW) ||
>         !lstrcmpW(szAttribute, INSTALLPROPERTY_VERSIONMINORW) ||
>         !lstrcmpW(szAttribute, INSTALLPROPERTY_VERSIONMAJORW) ||
>         !lstrcmpW(szAttribute, INSTALLPROPERTY_VERSIONSTRINGW) ||
>         !lstrcmpW(szAttribute, INSTALLPROPERTY_PRODUCTIDW) ||
>         !lstrcmpW(szAttribute, INSTALLPROPERTY_REGCOMPANYW) ||
>         !lstrcmpW(szAttribute, INSTALLPROPERTY_REGOWNERW))
>     {
>         if (!prodkey)
>         {
>             r = ERROR_UNKNOWN_PRODUCT;
>             goto done;
>         }
>
>         if (!userdata)
>             return ERROR_UNKNOWN_PROPERTY;
>
>         if (!lstrcmpW(szAttribute,  
> INSTALLPROPERTY_INSTALLEDPRODUCTNAMEW))
>             szAttribute = display_name;
>         else if (!lstrcmpW(szAttribute,  
> INSTALLPROPERTY_VERSIONSTRINGW))
>             szAttribute = display_version;
>
>         val = msi_reg_get_value(userdata, szAttribute, &type);
>         if (!val)
>             val = empty;
>     }


So it does not find any of those properties in the registry, because  
they're not written there by ACTION_RegisterProduct.
And fixing this is the intention of my patch.

Regards,
-- 
Adam Strzelecki |: nanoant.com :|



From truiken at gmail.com  Sat Mar  1 16:08:57 2008
From: truiken at gmail.com (James Hawkins)
Date: Sat, 1 Mar 2008 16:08:57 -0600
Subject: msi: ACTION_RegisterProduct store all InstallProperties
In-Reply-To: <1D8C710E-D65D-4E87-865C-9BA7F8747B1F@java.pl>
References: <2D73E93F-4E00-4493-8416-3238546EA3B9@java.pl>
	<22821af30802290939q489b73d9n3c9c106604a49e8c@mail.gmail.com>
	<C467D1FF-9F98-4A2F-869B-E51C31E17A71@java.pl>
	<22821af30803011158g219b93bbq4b660d43d96ffdae@mail.gmail.com>
	<1D8C710E-D65D-4E87-865C-9BA7F8747B1F@java.pl>
Message-ID: <22821af30803011408pee462d1gcfc98723ca7c68ca@mail.gmail.com>

On Sat, Mar 1, 2008 at 4:02 PM, Adam Strzelecki <ono at java.pl> wrote:
> Hello,
>
>
>  > I think you need to read through the implementation of
>  > MSI_GetProductInfo more closely and also read the MsiGetProductInfo
>  > tests in tests/msi.c and the test_publish:RegisterProduct tests in
>  > tests/install.c.
>
>  I think I did, and looking at the tests I see they are testing
>  properties only at Uninstall key, and I think this is wrong, or at
>  least incomplete, as quoted below:
>
>  >     res = RegOpenKeyA(uninstall, prodcode, &prodkey);
>  >     ok(res == ERROR_SUCCESS, "Expected ERROR_SUCCESS, got %d\n", res);
>  >
>  >     CHECK_REG_DWORD(prodkey, "Version", 0x1010001);
>  >     CHECK_REG_DWORD(prodkey, "VersionMajor", 1);
>  >     CHECK_REG_DWORD(prodkey, "VersionMinor", 1);
>  >     CHECK_REG_DWORD(prodkey, "WindowsInstaller", 1);
>
>
>  While MSI_GetProductInfo is reading VersionMajor, VersionMinor, ...
>  etc from InstallProperties key (from szInstallProperties_fmt or
>  szInstaller_LocalSystemProductCodes_fmt), but NOT from Uninstall key
>  as quotes below:
>
>  >     if (classes)
>  >         MSIREG_OpenLocalSystemProductKey(szProduct, &userdata, FALSE);
>  >     else
>  >         MSIREG_OpenInstallPropertiesKey(szProduct, &userdata, FALSE);
>  >
>  >     if (!lstrcmpW(szAttribute, INSTALLPROPERTY_HELPLINKW) ||
>  >         !lstrcmpW(szAttribute, INSTALLPROPERTY_HELPTELEPHONEW) ||
>  >         !lstrcmpW(szAttribute, INSTALLPROPERTY_INSTALLDATEW) ||
>  >         !lstrcmpW(szAttribute,
>  > INSTALLPROPERTY_INSTALLEDPRODUCTNAMEW) ||
>  >         !lstrcmpW(szAttribute, INSTALLPROPERTY_INSTALLLOCATIONW) ||
>  >         !lstrcmpW(szAttribute, INSTALLPROPERTY_INSTALLSOURCEW) ||
>  >         !lstrcmpW(szAttribute, INSTALLPROPERTY_LOCALPACKAGEW) ||
>  >         !lstrcmpW(szAttribute, INSTALLPROPERTY_PUBLISHERW) ||
>  >         !lstrcmpW(szAttribute, INSTALLPROPERTY_URLINFOABOUTW) ||
>  >         !lstrcmpW(szAttribute, INSTALLPROPERTY_URLUPDATEINFOW) ||
>  >         !lstrcmpW(szAttribute, INSTALLPROPERTY_VERSIONMINORW) ||
>  >         !lstrcmpW(szAttribute, INSTALLPROPERTY_VERSIONMAJORW) ||
>  >         !lstrcmpW(szAttribute, INSTALLPROPERTY_VERSIONSTRINGW) ||
>  >         !lstrcmpW(szAttribute, INSTALLPROPERTY_PRODUCTIDW) ||
>  >         !lstrcmpW(szAttribute, INSTALLPROPERTY_REGCOMPANYW) ||
>  >         !lstrcmpW(szAttribute, INSTALLPROPERTY_REGOWNERW))
>  >     {
>  >         if (!prodkey)
>  >         {
>  >             r = ERROR_UNKNOWN_PRODUCT;
>  >             goto done;
>  >         }
>  >
>  >         if (!userdata)
>  >             return ERROR_UNKNOWN_PROPERTY;
>  >
>  >         if (!lstrcmpW(szAttribute,
>  > INSTALLPROPERTY_INSTALLEDPRODUCTNAMEW))
>  >             szAttribute = display_name;
>  >         else if (!lstrcmpW(szAttribute,
>  > INSTALLPROPERTY_VERSIONSTRINGW))
>  >             szAttribute = display_version;
>  >
>  >         val = msi_reg_get_value(userdata, szAttribute, &type);
>  >         if (!val)
>  >             val = empty;
>  >     }
>
>
>  So it does not find any of those properties in the registry, because
>  they're not written there by ACTION_RegisterProduct.
>  And fixing this is the intention of my patch.
>

Which is wrong, which you'll see when I submit my next patch which
tests your theory.

-- 
James Hawkins


From ono at java.pl  Sat Mar  1 16:33:16 2008
From: ono at java.pl (Adam Strzelecki)
Date: Sat, 1 Mar 2008 23:33:16 +0100
Subject: msi: ACTION_RegisterProduct store all InstallProperties
In-Reply-To: <22821af30803011408pee462d1gcfc98723ca7c68ca@mail.gmail.com>
References: <2D73E93F-4E00-4493-8416-3238546EA3B9@java.pl>
	<22821af30802290939q489b73d9n3c9c106604a49e8c@mail.gmail.com>
	<C467D1FF-9F98-4A2F-869B-E51C31E17A71@java.pl>
	<22821af30803011158g219b93bbq4b660d43d96ffdae@mail.gmail.com>
	<1D8C710E-D65D-4E87-865C-9BA7F8747B1F@java.pl>
	<22821af30803011408pee462d1gcfc98723ca7c68ca@mail.gmail.com>
Message-ID: <A00C3432-7B22-4B69-81A5-AB643A2396AE@java.pl>

> Which is wrong, which you'll see when I submit my next patch which
> tests your theory.

I don't mind you pointing me out my mistakes. So I kindly waiting for  
your patch. However right now I presented my arguments quoting Wine  
sources, but you just respond that I'm wrong without presenting yours.

All I can say, I was testing this is MSXML 6.0 + Visual Studio 2005  
installer, and current Wine trunk causes VS2005 installer think that  
MSXML 6.0 is regardless of anything, just because VerionMajor &  
VersionMinor fails on MsiGetProductInfo.
-- 
Adam Strzelecki |: nanoant.com :|



From truiken at gmail.com  Sat Mar  1 16:38:38 2008
From: truiken at gmail.com (James Hawkins)
Date: Sat, 1 Mar 2008 16:38:38 -0600
Subject: msi: ACTION_RegisterProduct store all InstallProperties
In-Reply-To: <A00C3432-7B22-4B69-81A5-AB643A2396AE@java.pl>
References: <2D73E93F-4E00-4493-8416-3238546EA3B9@java.pl>
	<22821af30802290939q489b73d9n3c9c106604a49e8c@mail.gmail.com>
	<C467D1FF-9F98-4A2F-869B-E51C31E17A71@java.pl>
	<22821af30803011158g219b93bbq4b660d43d96ffdae@mail.gmail.com>
	<1D8C710E-D65D-4E87-865C-9BA7F8747B1F@java.pl>
	<22821af30803011408pee462d1gcfc98723ca7c68ca@mail.gmail.com>
	<A00C3432-7B22-4B69-81A5-AB643A2396AE@java.pl>
Message-ID: <22821af30803011438v2633aa35s2459553825fb375d@mail.gmail.com>

On Sat, Mar 1, 2008 at 4:33 PM, Adam Strzelecki <ono at java.pl> wrote:
> > Which is wrong, which you'll see when I submit my next patch which
>  > tests your theory.
>
>  I don't mind you pointing me out my mistakes. So I kindly waiting for
>  your patch. However right now I presented my arguments quoting Wine
>  sources, but you just respond that I'm wrong without presenting yours.
>
>  All I can say, I was testing this is MSXML 6.0 + Visual Studio 2005
>  installer, and current Wine trunk causes VS2005 installer think that
>  MSXML 6.0 is regardless of anything, just because VerionMajor &
>  VersionMinor fails on MsiGetProductInfo.
>

Have some patience...I *just* wrote the tests, and I'm doing this on a
Saturday.  You'll see them soon enough.

-- 
James Hawkins


From juan.lang at gmail.com  Sat Mar  1 19:07:58 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sat, 1 Mar 2008 17:07:58 -0800
Subject: iPod synced with iTunes v7.6!
In-Reply-To: <b130c85e0803010055g19782baam34bc7e1301c884ed@mail.gmail.com>
References: <b130c85e0803010055g19782baam34bc7e1301c884ed@mail.gmail.com>
Message-ID: <3a768c550803011707q5dbb1b92m57d76c8d425a511d@mail.gmail.com>

>  I got an ipod I borrowed to sync: http://www.astro.rug.nl/~lankhorst/ipod.png

W00t!  Well done, Maarten!
--Juan


From austinenglish at gmail.com  Sat Mar  1 19:23:04 2008
From: austinenglish at gmail.com (Austin English)
Date: Sat, 1 Mar 2008 19:23:04 -0600
Subject: Any graphics card y'all like to see tests run on?
In-Reply-To: <47C62C2A.4010203@sprintpcs.com>
References: <b6bb06270802261940q5120855al1822b2f4651e8019@mail.gmail.com>
	<558b2f5c0802261955l72dfe40aj616b46b8a79a52f2@mail.gmail.com>
	<b6bb06270802262049j6ae51a21v385707ea0bfc090b@mail.gmail.com>
	<200802270857.56215.stefan@codeweavers.com>
	<47C62C2A.4010203@sprintpcs.com>
Message-ID: <b6bb06270803011723s3677cd1fp136333b447f30ff7@mail.gmail.com>

On Wed, Feb 27, 2008 at 9:36 PM, James McKenzie
<jjmckenzie51 at sprintpcs.com> wrote:
>
> Stefan D?singer wrote:
>  > Am Mittwoch, 27. Februar 2008 05:49:57 schrieb Austin English:
>  >
>  >> Thanks Carl, and to the rest of the list, sorry for the noise/false
>  >> hope to d3d/ddraw guys.
>  >>
>  > Just to answer your previous questions if someone else wonders the same: Some
>  > ATI card would be useful. I have an X1600 and a radeon mobility 9000 myself,
>  > but other cards would be good to test as well. In the codeweavers office we
>  > have a few other cards too(older radeons and a bunch of macs)
>  >
>  >
>  Testing on Macs, especially the newer laptops would be nice :)
>
>  I have a MacBookPro and a MacBook here (the latter is the other person
>  who lives here's.)
>
>  James
>
>
>
>

My roommate has a MacBook pro, so if testing anything specific is
needed, drop me a line.

-Austin

From dmitry at codeweavers.com  Sat Mar  1 22:09:30 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 2 Mar 2008 12:09:30 +0800
Subject: winmm/tests: Don't use 0x55 to avoid any confusion when running
	with+heap.
References: <alpine.DEB.1.00.0803012110480.16709@amboise.dolphin>
Message-ID: <007001c87c1b$3bf91540$a600fea9@DMITRY>

"Francois Gouget" <fgouget at free.fr> wrote:

>     mmioSeek(hmmio, 0, SEEK_SET);
> -    memset(&ck, 0x55, sizeof(ck));
> +    memset(&ck, 0x66, sizeof(ck));
>     ret = mmioDescend(hmmio, &ck, NULL, MMIO_FINDCHUNK);
>     ok(ret == MMIOERR_CHUNKNOTFOUND ||
>        ret == MMIOERR_INVALIDFILE, "mmioDescend returned %u\n", ret);
> @@ -162,7 +162,7 @@ static void test_mmioDescend(void)
>     ok(ck.dwDataOffset != 0x55555555, "wrong dwDataOffset: %04x\n", ck.dwDataOffset);

The 'ok' above (and 2 tests before it) will fail with your changes.

-- 
Dmitry.


From m.b.lankhorst at gmail.com  Sun Mar  2 01:56:48 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Sat, 1 Mar 2008 23:56:48 -0800
Subject: mountmgr.sys and ioctl's
Message-ID: <b130c85e0803012356v2887045amb76936b576f0e5a2@mail.gmail.com>

Hi Alexandre,

In irc we discussed ioctl's with devices, and how ioctl's go to
ntdll/cdrom.c if the drive is fd backed, and to mountmgr.sys if it
isn't. For itunes it needs raw disk access, but also an ioctl from
mountmgr.

What if we always map access to \\.\X: is always mapped to mountmgr,
and let mountmanager open \\.\X:: that would be mapped to
/dosdevices/x::, any ioctl, and read/write stuff that mountmgr can't
handle can then be forwarded to the raw device, if available.

Do you think that would be an appropiate solution?

Cheers,
Maarten.


From ono at java.pl  Sun Mar  2 08:10:24 2008
From: ono at java.pl (Adam Strzelecki)
Date: Sun, 2 Mar 2008 15:10:24 +0100
Subject: kernel32 & winelib: Don't test string size in CompareStringW for
	null terminated strings
In-Reply-To: <19e31a080803010812q2a2e2748ma3dea3412e5dcfe4@mail.gmail.com>
References: <a71bd89a0803010738y65b9e90cve6e222d69adafe37@mail.gmail.com>
	<5FFEB4AF-441F-47FA-87F4-7CE319CAC1D7@java.pl>
	<19e31a080803010812q2a2e2748ma3dea3412e5dcfe4@mail.gmail.com>
Message-ID: <1E8FD512-6B85-4093-A474-FF91FB48010E@java.pl>

I believe the further discussion is pointless. If you ever dared to  
look how MSVCRT or GLIBC strlen function is implemented you would know  
that it is exactly same algorithm (that just differs in the  
implementation) using 4 byte fetching with magic bits matching, also  
described in few books and articles, let me name one: "Write Great  
Code, Volume 2: Thinking Low-Level, Writing High-Level" ISBN  
1593270658, section 10.1.1.1 about using string manipulation routines,  
so there's nothing about Microsoft's or anybody's else secret invention.

However instead of decent discussion I was pushed aside and then  
taught here not to copy copyrighted materials, so something that I'm  
already very aware and careful about. IMHO this overwhelming paranoia  
of being scared of Microsoft is against sober thinking, and this for  
sure glads greediness of this company. My mistake was I just mentioned  
MSVCRT, that raised your disquiet, while I could point you to GLIBC or  
Linux kernel sources as well, or the book above. Too bad.

To be clear, my only intention was to point you that Wine's  
CompareStringW can be better. IMHO it is very respectable to not only  
write code that is well organized and bug-free that Wine is in my  
opinion, but also to write performance aware code, which IMHO Wine is  
NOT.

Finally I just want to point you there:
http://www.ussg.iu.edu/hypermail/linux/kernel/9907.3/0434.html

Note there that Linux kernel mailing list is bit less paranoiac :P

Cheers,
-- 
Adam Strzelecki |: nanoant.com :|



From dmitry at codeweavers.com  Sun Mar  2 09:26:02 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 2 Mar 2008 23:26:02 +0800
Subject: kernel32 & winelib: Don't test string size in CompareStringW
	fornull terminated strings
References: <a71bd89a0803010738y65b9e90cve6e222d69adafe37@mail.gmail.com><5FFEB4AF-441F-47FA-87F4-7CE319CAC1D7@java.pl><19e31a080803010812q2a2e2748ma3dea3412e5dcfe4@mail.gmail.com>
	<1E8FD512-6B85-4093-A474-FF91FB48010E@java.pl>
Message-ID: <009a01c87c79$bb3d4160$a600fea9@DMITRY>

"Adam Strzelecki" <ono at java.pl> wrote:

> I believe the further discussion is pointless. If you ever dared to  
> look how MSVCRT or GLIBC strlen function is implemented you would know  
> that it is exactly same algorithm (that just differs in the  
> implementation) using 4 byte fetching with magic bits matching, also  
> described in few books and articles, let me name one: "Write Great  
> Code, Volume 2: Thinking Low-Level, Writing High-Level" ISBN  
> 1593270658, section 10.1.1.1 about using string manipulation routines,  
> so there's nothing about Microsoft's or anybody's else secret invention.

Wine already had at some point strlen along with some other string functions
implemented in asm, however they have been removed after it was proved that
gcc optimized C code outperforms it.

> To be clear, my only intention was to point you that Wine's  
> CompareStringW can be better. IMHO it is very respectable to not only  
> write code that is well organized and bug-free that Wine is in my  
> opinion, but also to write performance aware code, which IMHO Wine is  
> NOT.

You are welcome to show the results of the benchmark which show how much
your patch improves performance.

-- 
Dmitry.


From dank at kegel.com  Sun Mar  2 10:44:43 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 2 Mar 2008 08:44:43 -0800
Subject: winmm/tests: Don't use 0x55 to avoid any confusion when running
	with +heap.
Message-ID: <a71bd89a0803020844u74ba2303mf7854d5f8bb14b0b@mail.gmail.com>

Hey, on that topic, there are also a bunch of other possible suspects:

./dlls/ntdll/tests/atom.c:    memset(abi->Name, 0x55, 255 * sizeof(WCHAR));
./dlls/ntdll/tests/atom.c:    memset(abi->Name, 0x55,
lstrlenW(testAtom1) * sizeof(WCHAR));
./dlls/user32/tests/menu.c:    memset( bmfill, 0x55, sizeof( bmfill));
./dlls/ntoskrnl.exe/ntoskrnl.c:    memset( &irp, 0x55, sizeof(irp) );
./tools/wrc/utils.c:    memset(res, 0x55, size);
./tools/widl/utils.c:    memset(res, 0x55, size);
./tools/wmc/utils.c:    memset(res, 0x55, size);
./server/object.c:    if (ptr) memset( ptr, 0x55, size );
./server/window.c:    memset( win, 0x55, sizeof(*win) +
win->nb_extra_bytes - 1 );

And 0xaa can also interfere:

./dlls/kernel32/tests/process.c:    memset(&info, 0xaa, sizeof(info));
./dlls/ddraw/tests/d3d.c:    memset(outH, 0xaa, sizeof(outH));
./dlls/comctl32/tests/listview.c:    memset(&column, 0xaa, sizeof(column));
./dlls/comctl32/tests/listview.c:    memset(&item, 0xaa, sizeof (item));
./dlls/comctl32/tests/listview.c:    memset (&item, 0xaa, sizeof (item));
./dlls/comctl32/tests/listview.c:    memset (&item, 0xaa, sizeof (item));
./dlls/comctl32/tests/listview.c:    memset (&item, 0xaa, sizeof (item));
./dlls/comctl32/tests/listview.c:    memset (&item, 0xaa, sizeof (item));
./dlls/comctl32/tests/listview.c:    memset (&item, 0xaa, sizeof (item));
./dlls/comctl32/tests/listview.c:    memset (&item, 0xaa, sizeof (item));
./dlls/comctl32/tests/listview.c:    memset (&item, 0xaa, sizeof (item));
./dlls/comctl32/tests/listview.c:    memset (&item, 0xaa, sizeof (item));
./dlls/comctl32/tests/listview.c:    memset(&column, 0xaa, sizeof(column));
./server/object.c:        memset( obj, 0xaa, obj->ops->size );


From dmitry at codeweavers.com  Sun Mar  2 10:55:19 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 3 Mar 2008 00:55:19 +0800
Subject: winmm/tests: Don't use 0x55 to avoid any confusion when
	runningwith +heap.
References: <a71bd89a0803020844u74ba2303mf7854d5f8bb14b0b@mail.gmail.com>
Message-ID: <001c01c87c86$34154450$a600fea9@DMITRY>

"Dan Kegel" <dank at kegel.com> wrote:

> Hey, on that topic, there are also a bunch of other possible suspects:
> 
> ./dlls/ntdll/tests/atom.c:    memset(abi->Name, 0x55, 255 * sizeof(WCHAR));
> ./dlls/ntdll/tests/atom.c:    memset(abi->Name, 0x55,
> lstrlenW(testAtom1) * sizeof(WCHAR));
> ./dlls/user32/tests/menu.c:    memset( bmfill, 0x55, sizeof( bmfill));
> ./dlls/ntoskrnl.exe/ntoskrnl.c:    memset( &irp, 0x55, sizeof(irp) );
> ./tools/wrc/utils.c:    memset(res, 0x55, size);
> ./tools/widl/utils.c:    memset(res, 0x55, size);
> ./tools/wmc/utils.c:    memset(res, 0x55, size);
> ./server/object.c:    if (ptr) memset( ptr, 0x55, size );
> ./server/window.c:    memset( win, 0x55, sizeof(*win) +
> win->nb_extra_bytes - 1 );
> 
> And 0xaa can also interfere:

Perhaps we could agree on a common constant to mark not initialized data in
tests? I'd suggest to use 0xCC (standard debugging trick) for that purpose.

-- 
Dmitry.


From ono at java.pl  Sun Mar  2 10:59:21 2008
From: ono at java.pl (Adam Strzelecki)
Date: Sun, 2 Mar 2008 17:59:21 +0100
Subject: kernel32 & winelib: Don't test string size in CompareStringW
	fornull terminated strings
In-Reply-To: <009a01c87c79$bb3d4160$a600fea9@DMITRY>
References: <a71bd89a0803010738y65b9e90cve6e222d69adafe37@mail.gmail.com><5FFEB4AF-441F-47FA-87F4-7CE319CAC1D7@java.pl><19e31a080803010812q2a2e2748ma3dea3412e5dcfe4@mail.gmail.com>
	<1E8FD512-6B85-4093-A474-FF91FB48010E@java.pl>
	<009a01c87c79$bb3d4160$a600fea9@DMITRY>
Message-ID: <533A2C2F-F929-4E69-B543-F168CE902BD8@java.pl>

> Wine already had at some point strlen along with some other string  
> functions
> implemented in asm, however they have been removed after it was  
> proved that
> gcc optimized C code outperforms it.

Let me ask this way, why Wine don't use standard C library functions  
for lstringsomething kernel32 implementation? Current GLIBC, OSX LIBC  
are Unicode libraries since quite long time. Is Wine supposed to work  
on platforms where wchar_t is unimplemented or differs from unsigned  
short? Anyway AFAIK Wine is only Intel (LittleEndian) 32-bit.
So why Wine does re-implement all the string manipulation functions  
that are already present in C runtimes (heavily optimized for GCC and  
OS).
I know that some of Windows functions differ, but Wine may keep just  
the implementation of those that differ? What do you think?

> You are welcome to show the results of the benchmark which show how  
> much
> your patch improves performance.

Please have a look at my patch, is just an easiest try to remove IMHO  
unnecessary requirement to count null-terminated string lengths before  
comparison, as most of comparisons are made with null-terminated  
strings (-1 length).

I don't want anyone to accept my patch straight-ahead, but just to  
review this string manipulation matter in Wine.
Probably the best way it would be to have CompareStringW having to  
versions (function branches), one for 2 null-terminated params (most  
of cases), 2nd for one, or two strings with named length.

Regards,
-- 
Adam Strzelecki |: nanoant.com :|



From ono at java.pl  Sun Mar  2 11:14:45 2008
From: ono at java.pl (Adam Strzelecki)
Date: Sun, 2 Mar 2008 18:14:45 +0100
Subject: winequartz.drv Mac OS X UI discontinued?
Message-ID: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>

Hi,

I know that CodeWeavers supports quite nicely Mac builds of Wine, and  
CrossOver for Mac, yet all of them are X11.
There was also once Darwine - an effort to provide Carbon Wine UI  
driver and Mac optimizations & L&F.
Pretty many of those were merged back to Wine, but not winequartz.drv.

Do you guys think about reviving winequartz.drv?

This would greatly improve Wine on Mac as we could have native Mac  
fonts handling that's faster than FreeType, Dock icons for Wine  
applications, and few others.
There's still old copy of the it hanging around, but it is abandoned,  
and no longer compiles with Wine.

Or I think it would be cool to write new winecocoa.drv or sthing like  
that, as Apple officially states that Carbon is deprecated.

While it is not well documented, it is pretty easy with Cocoa to make  
console non-bundled process to be UI foreground process and handle  
events and Dock:
(This code is copyrighted by myself ;P)

> int main(int argc, const char * argv[]) {
>         ProcessSerialNumber psn = {0, kCurrentProcess};
>         OSStatus returnCode = TransformProcessType(&psn,  
> kProcessTransformToForegroundApplication);
>         SetFrontProcess(&psn);
>
>         NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
>         [NSApplication sharedApplication];
>
>         NSImage *icon = [NSImage imageNamed:@"NSApplicationIcon"];
>         [NSApp setApplicationIconImage:icon];
>
>         [NSApp finishLaunching];
>
>         NSWindow *window = [[NSWindow alloc]  
> initWithContentRect:NSMakeRect(0, 0, 100, 100)
>                         styleMask:NSTitledWindowMask| 
> NSClosableWindowMask|NSMiniaturizableWindowMask|NSResizableWindowMask
>                         backing:NSBackingStoreBuffered defer:NO];
>         [window center];
>         [window setTitle:@"Test"];
>
>         NSButton *button = [[NSButton alloc]  
> initWithFrame:NSMakeRect(10, 10, 80, 80)];
>         [button setTitle:@"What?"];
>         [button setBezelStyle:1];
>         [[window contentView] addSubview:button];
>         [button release];
>
>         [window makeKeyAndOrderFront:NSApp];
>
>         while(1) {
>                 NSEvent *event = [NSApp  
> nextEventMatchingMask:NSAnyEventMask
>                                                                                         untilDate 
> :[NSDate distantFuture]
>                                                                                         inMode:NSDefaultRunLoopMode
>                                                                                         dequeue:YES 
> ];
>                 if(event) [NSApp sendEvent:event];
>         }
>         [pool release];
>         return 0;
> }

BTW. I heard that someone previously working for Wine project is now  
in Apple, it is true?

Regards,
-- 
Adam Strzelecki |: nanoant.com :|



From stefan at codeweavers.com  Sun Mar  2 11:50:02 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 2 Mar 2008 18:50:02 +0100
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
Message-ID: <200803021850.04583.stefan@codeweavers.com>

Am Sonntag, 2. M?rz 2008 18:14:45 schrieb Adam Strzelecki:
> I know that CodeWeavers supports quite nicely Mac builds of Wine, and
> CrossOver for Mac, yet all of them are X11.
> There was also once Darwine - an effort to provide Carbon Wine UI
> driver and Mac optimizations & L&F.
> Pretty many of those were merged back to Wine, but not winequartz.drv.
>
> Do you guys think about reviving winequartz.drv?
I think everyone would greatly welcome efforts to continue it, and in fact 
Steven Edwards is currently trying to bring the old driver up to date.

So the short answer: We accept (well written) patches!

The long answer: This isn't an easy undertaking. For one part, Wine's display 
driver model(how gdi32, user32, opengl32 and d3d talk to winex11.drv) still 
needs a bit of cleanup, currently some abstraction layers are at the wrong 
place. The other issue is that *a lot* of implicit knowledge is encoded in 
winex11.drv. To add to this, the gain of a native quartz/cocoa/whatever 
driver is rather limited:

* Faster font handling: Maybe, although I personally never had an app that had 
font performance problems. My view is rather limited though
* Dock integration: Crossover has that, despite using winex11.drv. This is an 
entirely different story and comes down to the different ideas what 
an "Application" is at user interface level.

What we would gain:
* No mess with X11 servers. Apple's X11 is rather broken. No Expos? 
headbanging with quartz_wm. No messing with Apple X11's opengl
* No need for a DIB engine on MacOS. MacOS can give us everything we need.
* No troubles with relative mouse movements, like we have them on X11 even on 
Linux
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080302/83dc4391/attachment.pgp 

From wine-devel at kievinfo.com  Sun Mar  2 12:10:52 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 02 Mar 2008 11:10:52 -0700
Subject: kernel32 & winelib: Don't test string size in
	CompareStringWfornull terminated strings
In-Reply-To: <533A2C2F-F929-4E69-B543-F168CE902BD8@java.pl>
References: <a71bd89a0803010738y65b9e90cve6e222d69adafe37@mail.gmail.com><5FFEB4AF-441F-47FA-87F4-7CE319CAC1D7@java.pl><19e31a080803010812q2a2e2748ma3dea3412e5dcfe4@mail.gmail.com>	<1E8FD512-6B85-4093-A474-FF91FB48010E@java.pl>	<009a01c87c79$bb3d4160$a600fea9@DMITRY>
	<533A2C2F-F929-4E69-B543-F168CE902BD8@java.pl>
Message-ID: <47CAEDAC.5030307@kievinfo.com>

Adam Strzelecki wrote:
> Let me ask this way, why Wine don't use standard C library functions  
> for lstringsomething kernel32 implementation? Current GLIBC, OSX LIBC  
> are Unicode libraries since quite long time. Is Wine supposed to work  
> on platforms where wchar_t is unimplemented or differs from unsigned  
WCHAR is not the same as wchar_t.

> short? Anyway AFAIK Wine is only Intel (LittleEndian) 32-bit.
Wrong, it compiles and works (for winelib) on SUN.

Vitaliy


From winehacker at gmail.com  Sun Mar  2 12:53:31 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Sun, 2 Mar 2008 13:53:31 -0500
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <200803021850.04583.stefan@codeweavers.com>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
Message-ID: <19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>

Hi,

On Sun, Mar 2, 2008 at 12:50 PM, Stefan D?singer <stefan at codeweavers.com> wrote:
> Am Sonntag, 2. M?rz 2008 18:14:45 schrieb Adam Strzelecki:
>  > Do you guys think about reviving winequartz.drv?
>  I think everyone would greatly welcome efforts to continue it, and in fact
>  Steven Edwards is currently trying to bring the old driver up to date.

There is a public branch where the Wine quartzdrv will go even if its
not accepted in to Winehq. I have been from time to time bringing in
infrastructure changes from the old winequartzdrv however the current
tree is empty as the developer of the prior editions, Emmanuel
Maillard,  is in the process of overhauling it from recent changes to
the Wine driver model.

Keep an eye on

http://wiki.winehq.org/MacOSX/QuartzDriver

And hopefully in the next few weeks we will have a newer patch in the
winequartzdrv tree for a more recent version of Wine. I am not sure
what design changes Emmanuel is wanting to make but hopefully they
will be more to Alexandre's liking and can eventually go in to normal
winehq. If you want to work on quartzdrv with Emmanuel, send him an
email to get an idea of what he needs and what the design will be,
then apply for write access to http://repo.or.cz and I will add you to
the winequartzdrv branch.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From stefan at codeweavers.com  Sun Mar  2 13:52:34 2008
From: stefan at codeweavers.com (Stefan =?utf-8?q?D=C3=B6singer?=)
Date: Sun, 2 Mar 2008 20:52:34 +0100
Subject: Heading towards a fixed function pipeline replacement
Message-ID: <200803022052.40028.stefan@codeweavers.com>

Hi,

Due to the bad weather I had some spare hacking time this weekend, and I've 
done some work and investigation on a fixed function pipeline replacement. 
The product of that is a hacky fixed function pipeline replacement via 
GL_ATI_fragment_shader(*).

Functionality wise the code is doing pretty good, it should support everything 
the current GL_ARB_texture_env_combine supports on ATI cards, although I 
didn't test it much yet and it is most likely buggy. However, 
integration-wise it is a disaster at this point, as I've focused on the GL 
functionality for now.

However, I have some roadmap for integrating this in Wine now. Essentially I'm 
going to modify the state table and shader backends a bit:

-> Make the state table a property of the shader model: Each pipeline 
implementation has its own state dependencies and ways to load states, so it 
is pointless to use one static table. The table will remain static, but there 
will be multiple tables, selected at device creation time

-> As a consequence, make the current "none" shader backend a backend for the 
current fixed function state table

-> Different state implementations will be able to borrow code from each 
other. E.g, the ATI_fragment_shader backend can borrow vertex processing from 
the fixed function implementation or GL_ARB_*_program

-> The current "fixed function" state table will still be able to handle d3d 
shaders of all kinds, at least for now. Somewhen later we might want to split 
fixed function and shaders up, so that whenever we have shaders we use them 
for fixed function processing too. But for now we still have the problem that 
e.g. GLSL has horribly slow shader compilation performance.

On top of this work the mentioned SoC project to write a vertex shader 
replacement pipeline might be doable because the general infrastructure is 
there, and only the shader generator is needed.

Feel free to comment,
Stefan

(*) Why this odd extension and not GLSL? We'll want it at some point anyway 
for better support of r200 cards(radeon 8500-9250), and as a counterpart to 
the GL_NV_register_combiner code on nvidia cards. GLSL has a few other tricky 
aspects, like per shader uniforms, so this extension is easier for the start.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0032-WineD3D-Add-GL_ATI_fragment_shader.patch
Type: text/x-diff
Size: 9680 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080302/75b36fa5/attachment-0001.patch 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0033-WineD3D-Fixed-function-fragment-processing-with-GL_.patch.bz2
Type: application/x-bzip2
Size: 7600 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080302/75b36fa5/attachment-0001.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080302/75b36fa5/attachment-0001.pgp 

From ono at java.pl  Sun Mar  2 14:53:09 2008
From: ono at java.pl (Adam Strzelecki)
Date: Sun, 2 Mar 2008 21:53:09 +0100
Subject: kernel32 & winelib: Don't test string size in
	CompareStringWfornull terminated strings
In-Reply-To: <47CAEDAC.5030307@kievinfo.com>
References: <a71bd89a0803010738y65b9e90cve6e222d69adafe37@mail.gmail.com><5FFEB4AF-441F-47FA-87F4-7CE319CAC1D7@java.pl><19e31a080803010812q2a2e2748ma3dea3412e5dcfe4@mail.gmail.com>	<1E8FD512-6B85-4093-A474-FF91FB48010E@java.pl>	<009a01c87c79$bb3d4160$a600fea9@DMITRY>
	<533A2C2F-F929-4E69-B543-F168CE902BD8@java.pl>
	<47CAEDAC.5030307@kievinfo.com>
Message-ID: <95229BD5-0E7D-484E-A15F-DCD74D538B11@java.pl>

>> Let me ask this way, why Wine don't use standard C library functions
>> for lstringsomething kernel32 implementation? Current GLIBC, OSX LIBC
>> are Unicode libraries since quite long time. Is Wine supposed to work
>> on platforms where wchar_t is unimplemented or differs from unsigned
> WCHAR is not the same as wchar_t.
You're right, it is means the same only in Windows.
I just checked several discussions already done on this subject, now I  
know that Windows 16-bit UNICODE isn't compatible with UNIX 32-bit one.
Someone have mentioned in old Wine dev list archives also -fshort- 
wchar GCC flag solution, but it seems this makes C library's UNICODE  
function not work at all as expected. Nice to learn something new.

> Wrong, it compiles and works (for winelib) on SUN.
Good to know.

Cheers,
-- 
Adam Strzelecki |: nanoant.com :|



From ono at java.pl  Sun Mar  2 15:00:31 2008
From: ono at java.pl (Adam Strzelecki)
Date: Sun, 2 Mar 2008 22:00:31 +0100
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
Message-ID: <C6F397EE-31F0-43F8-837A-712D5ED29DBE@java.pl>

> Keep an eye on
> http://wiki.winehq.org/MacOSX/QuartzDriver

Oh, that's awesome! How did I missed this.

> And hopefully in the next few weeks we will have a newer patch in the
> winequartzdrv tree for a more recent version of Wine. I am not sure
> what design changes Emmanuel is wanting to make but hopefully they
> will be more to Alexandre's liking and can eventually go in to normal
> winehq. If you want to work on quartzdrv with Emmanuel, send him an
> email to get an idea of what he needs and what the design will be,
> then apply for write access to http://repo.or.cz and I will add you to
> the winequartzdrv branch.

There're very neat Wine Mac builds made on http://www.kronenberg.org/darwine/
Do you have contact with the maintainer? I believe you can work out  
great Mac distro together especially once quartz is ready.

Cheers,
-- 
Adam Strzelecki |: nanoant.com :|



From ono at java.pl  Sun Mar  2 15:13:55 2008
From: ono at java.pl (Adam Strzelecki)
Date: Sun, 2 Mar 2008 22:13:55 +0100
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <C6F397EE-31F0-43F8-837A-712D5ED29DBE@java.pl>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<C6F397EE-31F0-43F8-837A-712D5ED29DBE@java.pl>
Message-ID: <E8677747-DE7A-4E00-99AD-50815A863529@java.pl>

>> Keep an eye on
>> http://wiki.winehq.org/MacOSX/QuartzDriver
>
> Oh, that's awesome! How did I missed this.
I know, I didn't looked there for over month, and it was recently  
updated.
I keep my fingers crossed for QuartzDriver!

Good night,
-- 
Adam Strzelecki |: nanoant.com :|



From fgouget at free.fr  Sun Mar  2 17:28:59 2008
From: fgouget at free.fr (Francois Gouget)
Date: Mon, 3 Mar 2008 00:28:59 +0100 (CET)
Subject: winmm/tests: Don't use 0x55 to avoid any confusion when running
	with +heap.
In-Reply-To: <a71bd89a0803020844u74ba2303mf7854d5f8bb14b0b@mail.gmail.com>
References: <a71bd89a0803020844u74ba2303mf7854d5f8bb14b0b@mail.gmail.com>
Message-ID: <alpine.DEB.1.00.0803030027080.8380@amboise.dolphin>

On Sun, 2 Mar 2008, Dan Kegel wrote:

> Hey, on that topic, there are also a bunch of other possible suspects:
> 
> ./dlls/ntdll/tests/atom.c:    memset(abi->Name, 0x55, 255 * sizeof(WCHAR));
> ./dlls/ntdll/tests/atom.c:    memset(abi->Name, 0x55,
[...]
> And 0xaa can also interfere:
> 
> ./dlls/kernel32/tests/process.c:    memset(&info, 0xaa, sizeof(info));
[...]

Yes. I have a few other patches (though not for all of them) but I was 
waiting to see if this one would go through before flooding 
wine-patches.


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                     Avoid the Gates of Hell - use Linux.


From fgouget at free.fr  Sun Mar  2 17:32:49 2008
From: fgouget at free.fr (Francois Gouget)
Date: Mon, 3 Mar 2008 00:32:49 +0100 (CET)
Subject: winmm/tests: Don't use 0x55 to avoid any confusion when
	runningwith +heap.
In-Reply-To: <001c01c87c86$34154450$a600fea9@DMITRY>
References: <a71bd89a0803020844u74ba2303mf7854d5f8bb14b0b@mail.gmail.com>
	<001c01c87c86$34154450$a600fea9@DMITRY>
Message-ID: <alpine.DEB.1.00.0803030029060.8380@amboise.dolphin>

On Mon, 3 Mar 2008, Dmitry Timoshkov wrote:
[...]
> Perhaps we could agree on a common constant to mark not initialized data in
> tests? I'd suggest to use 0xCC (standard debugging trick) for that purpose.

I'm open to suggestions. So 0xcc is commonly used for this purpose? 
If it's used by debuggers wouldn't this be a reason to avoid it?

If I remember correctly a couple of tests need two values and use both 
0x55 and 0xaa. Do you have another constant to suggest for this case?

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
The nice thing about meditation is that it makes doing nothing quite respectable
                                  -- Paul Dean


From dank at kegel.com  Sun Mar  2 20:32:55 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 2 Mar 2008 18:32:55 -0800
Subject: Free apps bundled with msvcp71?
Message-ID: <a71bd89a0803021832m1a3ffda2m5402cf57f2264572@mail.gmail.com>

Adobe Contribute 4, released in Nov 2006 or so, had a nice online trial at
http://trials.adobe.com/Applications/Contribute/Adobe_Contribute_4_Win/Adobe_Contribute_4_Win.exe
and still online, I think, at
http://www.soft32.com/download/63-129953-1/Adobe_Contribute_4_Win.exe

Starting it fails with

err:module:import_dll Library MSVCP71.dll (which is needed by
L"C:\\Program Files\\Adobe\\Contribute 4\\CoreTypes.dll") not found

Wine has a nice implementation of msvcr71.dll, but not
the C++-oriented msvcp71.dll, nor is it likely to get one soon.

This brings back the question: what's a good place to
legally and freely download an application bundled with a full set
of msvcp71.dll et al?  Ideally something at Microsoft.com
and/or something small and suitable for use in winetricks.
Any ideas?
- Dan


From dmitry at codeweavers.com  Sun Mar  2 21:00:48 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 3 Mar 2008 11:00:48 +0800
Subject: winequartz.drv Mac OS X UI discontinued?
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl><200803021850.04583.stefan@codeweavers.com><19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<C6F397EE-31F0-43F8-837A-712D5ED29DBE@java.pl>
Message-ID: <003101c87cda$c9ceb0e0$a600fea9@DMITRY>

"Adam Strzelecki" <ono at java.pl> wrote:

> There're very neat Wine Mac builds made on http://www.kronenberg.org/darwine/
> Do you have contact with the maintainer? I believe you can work out  
> great Mac distro together especially once quartz is ready.

"Neat" is what sense? It's not clear what additional functionality they provide,
what's the status of quartz.drv in their sources, and why they don't send patches
to WineHQ. Besides that sites claims that "Darwine and wine are released under
the gpl", that's plain wrong.

Could you please remove the "Reply-To:" header when posting to Wine lists?

-- 
Dmitry.


From dmitry at codeweavers.com  Sun Mar  2 21:24:04 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 3 Mar 2008 11:24:04 +0800
Subject: winequartz.drv Mac OS X UI discontinued?
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl><200803021850.04583.stefan@codeweavers.com><19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com><C6F397EE-31F0-43F8-837A-712D5ED29DBE@java.pl>
	<003101c87cda$c9ceb0e0$a600fea9@DMITRY>
Message-ID: <00d101c87cde$0b00b9c0$a600fea9@DMITRY>

"Dmitry Timoshkov" dmitry at codeweavers.com wrote:

>> There're very neat Wine Mac builds made on http://www.kronenberg.org/darwine/
>> Do you have contact with the maintainer? I believe you can work out  
>> great Mac distro together especially once quartz is ready.
> 
> "Neat" is what sense? It's not clear what additional functionality they provide,
> what's the status of quartz.drv in their sources, and why they don't send patches
> to WineHQ.

The following notice in the upper right corner on that site makes it clear why :-)

"Bevore You install, please make sure:
Tiger users: install X11 from your Tiger Installation DVD"

-- 
Dmitry.


From winehacker at gmail.com  Sun Mar  2 21:26:19 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Sun, 2 Mar 2008 22:26:19 -0500
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <003101c87cda$c9ceb0e0$a600fea9@DMITRY>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<C6F397EE-31F0-43F8-837A-712D5ED29DBE@java.pl>
	<003101c87cda$c9ceb0e0$a600fea9@DMITRY>
Message-ID: <19e31a080803021926q75b327d9n9e628cce63d3b3a3@mail.gmail.com>

On Sun, Mar 2, 2008 at 10:00 PM, Dmitry Timoshkov
<dmitry at codeweavers.com> wrote:
>  "Neat" is what sense? It's not clear what additional functionality they provide,
>  what's the status of quartz.drv in their sources, and why they don't send patches
>  to WineHQ. Besides that sites claims that "Darwine and wine are released under
>  the gpl", that's plain wrong.
>
>  Could you please remove the "Reply-To:" header when posting to Wine lists?

Dude chill with the hostility. Winehq currently provides no
functionality for Mac users...see here

http://www.winehq.org/site/download

No one is currently offering officially blessed Winehq builds whenever
Alexandre tags a release. There is no need in anyone to send patches
to Winehq for code that we know Julliard is going to reject. He stated
it to us during the Mac discussion at Wineconf in Redding that he
viewed Darwine as a separate project and should do its only bundling.
Basically anything done in Objective C he does not want in the tree
which includes half of the current winequartzdrv, the Darwine launcher
and Doc code and just about everything else.

If you want to review a patch, look at the patch for 0.9.48

http://sourceforge.net/tracker/?group_id=69890&atid=526089

And help further abstract user32/x11drv like has been done for Window
creation and Window positioning.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From dmitry at codeweavers.com  Sun Mar  2 21:45:48 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 3 Mar 2008 11:45:48 +0800
Subject: winequartz.drv Mac OS X UI discontinued?
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl><200803021850.04583.stefan@codeweavers.com><19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com><C6F397EE-31F0-43F8-837A-712D5ED29DBE@java.pl><003101c87cda$c9ceb0e0$a600fea9@DMITRY>
	<19e31a080803021926q75b327d9n9e628cce63d3b3a3@mail.gmail.com>
Message-ID: <014b01c87ce1$13395770$a600fea9@DMITRY>

"Steven Edwards" <winehacker at gmail.com> wrote:

> On Sun, Mar 2, 2008 at 10:00 PM, Dmitry Timoshkov
> <dmitry at codeweavers.com> wrote:
>>  "Neat" is what sense? It's not clear what additional functionality they provide,
>>  what's the status of quartz.drv in their sources, and why they don't send patches
>>  to WineHQ. Besides that sites claims that "Darwine and wine are released under
>>  the gpl", that's plain wrong.
>>
>>  Could you please remove the "Reply-To:" header when posting to Wine lists?
> 
> Dude chill with the hostility.

I have no idea why you're treating asking the questions as a "hostility".
This is the developers list, not the list for user complaints. Sending
the patches is a usual activity here, not vague reasoning.

> Winehq currently provides no
> functionality for Mac users...see here
> 
> http://www.winehq.org/site/download
> 
> No one is currently offering officially blessed Winehq builds whenever
> Alexandre tags a release.

Feel free to provide/suggest one.

> There is no need in anyone to send patches
> to Winehq for code that we know Julliard is going to reject. He stated
> it to us during the Mac discussion at Wineconf in Redding that he
> viewed Darwine as a separate project and should do its only bundling.
> Basically anything done in Objective C he does not want in the tree
> which includes half of the current winequartzdrv, the Darwine launcher
> and Doc code and just about everything else.
> 
> If you want to review a patch, look at the patch for 0.9.48
> 
> http://sourceforge.net/tracker/?group_id=69890&atid=526089
> 
> And help further abstract user32/x11drv like has been done for Window
> creation and Window positioning.

Aren't you supposed to work on that according to http://wiki.winehq.org/MacOSX/QuartzDriver?

Looks like you overreacted, http://www.kronenberg.org/darwine/ has nothing
to do with darwine except using its name.

-- 
Dmitry.


From jjmckenzie51 at sprintpcs.com  Sun Mar  2 22:13:42 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Sun, 02 Mar 2008 21:13:42 -0700
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <014b01c87ce1$13395770$a600fea9@DMITRY>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<C6F397EE-31F0-43F8-837A-712D5ED29DBE@java.pl>
	<003101c87cda$c9ceb0e0$a600fea9@DMITRY>
	<19e31a080803021926q75b327d9n9e628cce63d3b3a3@mail.gmail.com>
	<014b01c87ce1$13395770$a600fea9@DMITRY>
Message-ID: <47CB7AF6.6070703@sprintpcs.com>

Dmitry Timoshkov wrote:
> Looks like you overreacted, http://www.kronenberg.org/darwine/ has nothing
> to do with darwine except using its name.
>
>   
Actually, I have Mike's code and it uses the Darwine build system and 
applies two patches to it.  One brings in FontForge so that Apple Native 
fonts will work in Wine, and this is discussed on the Building Wine for 
MacOSX web page.  The other fixes a known problem for Leopard's handling 
of screen location (it does not always use :0.0 for security 
reasons).    I will suggest that he bring back into the Darwine project 
his fixes.   I think he already has tried but received no response from 
the Project.

As to the rest, AJ has stated, repeatedly, that he wants no Obj-C in the 
Wine tree.  This prevents bringing in some Mac specific code, and 
completely eliminates the winequartz.drv project.  I'm not going to 
argue with his reasoning, but this forces a Native version of Wine to be 
a continuous fork with fixes in Wine requiring fixes (if winex11.drv is 
changed) in the code.

As to support for the Mac, I have been doing what some Mac users are 
doing now:  Building my own.  Unfortunately, I do not have a place to 
put my builds where the public can download them.  Also, they contain 
code that has not been approved for the main Wine build and may contain 
'dangerous' code.  I'm willing to risk my system's stability to test, 
but not others.

James McKenzie



From winehacker at gmail.com  Sun Mar  2 22:47:53 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Sun, 2 Mar 2008 23:47:53 -0500
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <014b01c87ce1$13395770$a600fea9@DMITRY>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<C6F397EE-31F0-43F8-837A-712D5ED29DBE@java.pl>
	<003101c87cda$c9ceb0e0$a600fea9@DMITRY>
	<19e31a080803021926q75b327d9n9e628cce63d3b3a3@mail.gmail.com>
	<014b01c87ce1$13395770$a600fea9@DMITRY>
Message-ID: <19e31a080803022047p4aab2e8eg3b2e9c292b7ac3a6@mail.gmail.com>

On Sun, Mar 2, 2008 at 10:45 PM, Dmitry Timoshkov
<dmitry at codeweavers.com> wrote:
>  I have no idea why you're treating asking the questions as a "hostility".
>  This is the developers list, not the list for user complaints. Sending
>  the patches is a usual activity here, not vague reasoning.

Sorry I misread one of your statements. There is no point in sending
the patches when we already know they are going to be rejected.

>  Feel free to provide/suggest one.

There is a script posted here to make it less of a hassle to build a
stock Winehq release on OS X.

http://www.wine-forum.org/showthread.php?t=16

I'm happy to start making builds of Winehq snapshots for OS X. I just
don't see the point when the Darwine packages are better for the end
user experience. With Winehelper you get Doc integration and a partial
menu system. The stock X.org on OS X is broken and has inherit
overhead that will always be present, being able to write directly to
the native Windowing system seems like a much more logical long term
solution rather than trying to keep Xorg from breaking and or
developing hacks to work around X and its tricky interaction with
Quartz.

>  Aren't you supposed to work on that according to http://wiki.winehq.org/MacOSX/QuartzDriver?

I have been but I've put my work on it on hold pending a new round of
patches from Emmanuel. My point was that you asked for patches, there
is one for your pleasure. I welcome your thoughts and I am sure
Emmanuel does as well. I know Pierre seemed to get disappointed when
he wanted to develop quartzdrv in winehq but could not get a clear
idea of what Julliard really wanted. What do you want/think quartzdrv
in winehq should look like? How should it be implemented? What
infrastructure changes should be made?

>  Looks like you overreacted, http://www.kronenberg.org/darwine/ has nothing
>  to do with darwine except using its name.

Sorry like I said I mis-read the other email. My point was that it
does not seem that anyone wants to provide real solutions. I don't
think Emmanuel or Pierre really knew what Julliard wants in Quartzdrv.
I don't know know what you want in it. I know there is a certain level
of abstraction that needs to be done in user32 and I was glad to see
Julliard started working on it, thats what made me interested in
bringing some life back in to quartzdrv. It would be nice if those
people that are the experts on the Wine driver model would speak up
and say would needs to be done before we can have this driver.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From jim at pagesmiths.com  Sun Mar  2 23:00:18 2008
From: jim at pagesmiths.com (Jim White)
Date: Sun, 02 Mar 2008 22:00:18 -0700
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <47CB7AF6.6070703@sprintpcs.com>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>	<200803021850.04583.stefan@codeweavers.com>	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>	<C6F397EE-31F0-43F8-837A-712D5ED29DBE@java.pl>	<003101c87cda$c9ceb0e0$a600fea9@DMITRY>	<19e31a080803021926q75b327d9n9e628cce63d3b3a3@mail.gmail.com>	<014b01c87ce1$13395770$a600fea9@DMITRY>
	<47CB7AF6.6070703@sprintpcs.com>
Message-ID: <47CB85E2.9050600@pagesmiths.com>

Any developer that wants to maintain source and/or binaries on the 
Darwine project at SF.net is welcome to do so.

I have responded to every such request that I have seen, which isn't to 
say of course that someone hasn't sent such a message that I haven't 
seen.  Folks should be aware that you must subscribe to the list to post 
(although I do manually review posts from non-subscribers and try to put 
through any that are actually about Darwine and not male enhancement or 
get rich quick...).  It is true that questions from users trying to run 
application X may not get much help other than being told Darwine isn't 
ready for end users.

Of course folks are also welcome to host their own builds, and I'd be 
happy if someone came along and just fixed the web site (which suffered 
greatly in the move back to SF.net from opendarwin.org - I didn't want 
to leave SF.net in the first place...), so we could point other folks to 
those builds.

It was never my intention that Darwine be a fork of Wine, but rather a 
friendly haven for Mac developers working on Wine.  If that means doing 
more for users such as hosting binaries, then I'm fine with that too.

Geeze.  I just looked at the download stats and folks are pulling almost 
300 copies a day (nearly 7GB).  It would be nice if they were using that 
bandwidth to get something useful...

Jim White
http://darwine.sf.net/

James McKenzie wrote:

> Dmitry Timoshkov wrote:
> 
>>Looks like you overreacted, http://www.kronenberg.org/darwine/ has nothing
>>to do with darwine except using its name.
>>  
> 
> Actually, I have Mike's code and it uses the Darwine build system and 
> applies two patches to it.  One brings in FontForge so that Apple Native 
> fonts will work in Wine, and this is discussed on the Building Wine for 
> MacOSX web page.  The other fixes a known problem for Leopard's handling 
> of screen location (it does not always use :0.0 for security 
> reasons).    I will suggest that he bring back into the Darwine project 
> his fixes.   I think he already has tried but received no response from 
> the Project.
> 
> As to the rest, AJ has stated, repeatedly, that he wants no Obj-C in the 
> Wine tree.  This prevents bringing in some Mac specific code, and 
> completely eliminates the winequartz.drv project.  I'm not going to 
> argue with his reasoning, but this forces a Native version of Wine to be 
> a continuous fork with fixes in Wine requiring fixes (if winex11.drv is 
> changed) in the code.
> 
> As to support for the Mac, I have been doing what some Mac users are 
> doing now:  Building my own.  Unfortunately, I do not have a place to 
> put my builds where the public can download them.  Also, they contain 
> code that has not been approved for the main Wine build and may contain 
> 'dangerous' code.  I'm willing to risk my system's stability to test, 
> but not others.
> 
> James McKenzie



From dmitry at codeweavers.com  Sun Mar  2 23:04:17 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 3 Mar 2008 13:04:17 +0800
Subject: winequartz.drv Mac OS X UI discontinued?
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl><200803021850.04583.stefan@codeweavers.com><19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com><C6F397EE-31F0-43F8-837A-712D5ED29DBE@java.pl><003101c87cda$c9ceb0e0$a600fea9@DMITRY><19e31a080803021926q75b327d9n9e628cce63d3b3a3@mail.gmail.com><014b01c87ce1$13395770$a600fea9@DMITRY>
	<19e31a080803022047p4aab2e8eg3b2e9c292b7ac3a6@mail.gmail.com>
Message-ID: <01cc01c87cec$0a948210$a600fea9@DMITRY>

"Steven Edwards" <winehacker at gmail.com> wrote:

> I have been but I've put my work on it on hold pending a new round of
> patches from Emmanuel. My point was that you asked for patches, there
> is one for your pleasure. I welcome your thoughts and I am sure
> Emmanuel does as well. I know Pierre seemed to get disappointed when
> he wanted to develop quartzdrv in winehq but could not get a clear
> idea of what Julliard really wanted. What do you want/think quartzdrv
> in winehq should look like? How should it be implemented? What
> infrastructure changes should be made?

Alexandre has moved a lot of things to user32 that previously were needed
to be implemented on the driver side (SetWindowPos, ShowWindow, DCE) which
should greatly simplify the quartzdrv efforts.

-- 
Dmitry.


From ono at java.pl  Mon Mar  3 03:39:06 2008
From: ono at java.pl (Adam Strzelecki)
Date: Mon, 3 Mar 2008 10:39:06 +0100
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <47CB7AF6.6070703@sprintpcs.com>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<C6F397EE-31F0-43F8-837A-712D5ED29DBE@java.pl>
	<003101c87cda$c9ceb0e0$a600fea9@DMITRY>
	<19e31a080803021926q75b327d9n9e628cce63d3b3a3@mail.gmail.com>
	<014b01c87ce1$13395770$a600fea9@DMITRY>
	<47CB7AF6.6070703@sprintpcs.com>
Message-ID: <1B8D4E96-4E8C-4117-82EE-768C69AF8E38@java.pl>

James McKenzie wrote:
> As to the rest, AJ has stated, repeatedly, that he wants no Obj-C in  
> the
> Wine tree.  This prevents bringing in some Mac specific code, and
> completely eliminates the winequartz.drv project.  I'm not going to
> argue with his reasoning, but this forces a Native version of Wine  
> to be
> a continuous fork with fixes in Wine requiring fixes (if winex11.drv  
> is
> changed) in the code.

That means no good for Mac users. With Leopard release Carbon (pure C)  
is more-less deprecated API, Apple pushes all new functionality only  
to Obj-C Cocoa, also there's is no 64-bit Carbon at all.
I don't want to argue what's wrong with Obj-C that it cannot go into  
Wine code-base, but staying out of it won't ever bring full Wine  
support for Mac users.

Dmitry Timoshkov wrote:
> This is the developers list, not the list for user complaints. Sending
> the patches is a usual activity here, not vague reasoning.

That's bizarre, but OK, every society has its own rules. I raised here  
subject about implementation (or call it development) of some Wine  
module (winequartz.drv), so I thought it is more adequate to post it  
here, but if you call it user complaint alright, this list is "sending  
patches" (even I thought wine-patches is the one) I cut this chit-chat.

-- 
Adam Strzelecki |: nanoant.com :|

P.S. What was wrong with "Reply-To" header? I call it normal habit at  
other lists.



From rob at codeweavers.com  Mon Mar  3 04:07:19 2008
From: rob at codeweavers.com (Robert Shearman)
Date: Mon, 03 Mar 2008 10:07:19 +0000
Subject: msi: Fix cast-qual warnings
In-Reply-To: <22821af30803010009i56387b95j313566481ccce86e@mail.gmail.com>
References: <22821af30803010009i56387b95j313566481ccce86e@mail.gmail.com>
Message-ID: <47CBCDD7.6000404@codeweavers.com>

James Hawkins wrote:
>      module = LoadLibraryExW( file->TargetPath, NULL, LOAD_LIBRARY_AS_DATAFILE );
>      if (module)
>      {
> -        LPCWSTR guid;
> -        guid = MSI_RecordGetString(row,1);
> -        CLSIDFromString((LPWSTR)guid, &tl_struct.clsid);
> +        LPWSTR guid;
> +        guid = strdupW(MSI_RecordGetString(row, 1));
> +        CLSIDFromString(guid, &tl_struct.clsid);
> +        msi_free(guid);
>          tl_struct.source = strdupW( file->TargetPath );
>          tl_struct.path = NULL;
I can guarantee you that CLSIDFromString does not change the input string. We should not be adding extra performance costs in the form of extra memory allocations for the sake of getting rid of a fairly harmless warning. We should fix the ones that don't require an extra allocations or other performance penalty and leave the warning off.


-- 
Rob Shearman



From rob at codeweavers.com  Mon Mar  3 04:10:11 2008
From: rob at codeweavers.com (Robert Shearman)
Date: Mon, 03 Mar 2008 10:10:11 +0000
Subject: ntdll: Added support for Windows 2008
In-Reply-To: <fqe2q8$c3m$1@ger.gmane.org>
References: <fqe2q8$c3m$1@ger.gmane.org>
Message-ID: <47CBCE83.8010103@codeweavers.com>

Alistair Leslie-Hughes wrote:
>          sizeof(RTL_OSVERSIONINFOEXW), 6, 0, 0x1770, VER_PLATFORM_WIN32_NT,
>          {' ',0},
>          0, 0, VER_SUITE_SINGLEUSERTS, VER_NT_WORKSTATION, 0
> +    },
> +    /* WIN2K8 */
> +    {
> +        sizeof(RTL_OSVERSIONINFOEXW), 6, 0, 0x1771, VER_PLATFORM_WIN32_NT,
> +        {'S','e','r','v','i','c','e',' ','P','a','c','k',' ','1',0},
> +        0, 0, VER_SUITE_SINGLEUSERTS, VER_NT_SERVER, 0
>      }
>  };
>   

I see Microsoft are using even more sneaky tactics these days to 
increase sales. They are releasing new versions of Windows with the 
first service pack already applied to satisfy the customers who always 
wait for the first service pack of a version of Windows to come out 
before upgrading to it.

Or could this just be a copy and paste mistake?

-- 
Rob Shearman



From leslie_alistair at hotmail.com  Mon Mar  3 04:23:47 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Mon, 3 Mar 2008 21:23:47 +1100
Subject: ntdll: Added support for Windows 2008
References: <fqe2q8$c3m$1@ger.gmane.org> <47CBCE83.8010103@codeweavers.com>
Message-ID: <fqgjj8$gl5$1@ger.gmane.org>

"Robert Shearman" <rob at codeweavers.com> wrote in message 
news:47CBCE83.8010103 at codeweavers.com...
> Alistair Leslie-Hughes wrote:
>>          sizeof(RTL_OSVERSIONINFOEXW), 6, 0, 0x1770, 
>> VER_PLATFORM_WIN32_NT,
>>          {' ',0},
>>          0, 0, VER_SUITE_SINGLEUSERTS, VER_NT_WORKSTATION, 0
>> +    },
>> +    /* WIN2K8 */
>> +    {
>> +        sizeof(RTL_OSVERSIONINFOEXW), 6, 0, 0x1771, 
>> VER_PLATFORM_WIN32_NT,
>> +        {'S','e','r','v','i','c','e',' ','P','a','c','k',' ','1',0},
>> +        0, 0, VER_SUITE_SINGLEUSERTS, VER_NT_SERVER, 0
>>      }
>>  };
>>
>
> I see Microsoft are using even more sneaky tactics these days to
> increase sales. They are releasing new versions of Windows with the
> first service pack already applied to satisfy the customers who always
> wait for the first service pack of a version of Windows to come out
> before upgrading to it.
>
> Or could this just be a copy and paste mistake?
No, its no mistake.
osvi.szCSDVersion returns "Service Pack 1".

I thought it was a mistake as well, when i first saw it, but I ran cpuz on 
the server, and it

is reported as "Windows Vista Service Pack 1" (It appears the cpuz doesnt 
understand the

its a server yet).



Best Regards

 Alistair Leslie-Hughes




From leslie_alistair at hotmail.com  Mon Mar  3 04:55:50 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Mon, 3 Mar 2008 21:55:50 +1100
Subject: Regession tests
References: <fq392s$69o$1@ger.gmane.org> <47C531C9.9050600@gmail.com>
Message-ID: <fqglgm$n3u$1@ger.gmane.org>

"Paul Vriens" <paul.vriens.wine at gmail.com> wrote in message 
news:47C531C9.9050600 at gmail.com...
> Alistair Leslie-Hughes wrote:
>> Hi,
>>
>> Some of the regessions test are failing with errors in output file like
>> msxml3:domdoc start dlls/msxml3/tests/domdoc.c 1.80
>> msxml3:domdoc done (-1073741819)
>>
>> Is this due to a Seg Fault?
>>
>>
> Yes, this usually is an indication that the test crashed. (You would see a
> 'Failed' on test.winehq.org).
>
> -- 
What is the best way to narrow down what is causing the crash?

Best Regards
 Alistair Leslie-Hughes 




From dmitry at codeweavers.com  Mon Mar  3 05:03:28 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 3 Mar 2008 19:03:28 +0800
Subject: winex11.drv: Add DefaultRefreshRates option to specify refresh
	ratewhen application does not
References: <47CB80F1.90300@ossguy.com>
Message-ID: <028701c87d1e$37f6ef40$a600fea9@DMITRY>

"Denver Gingerich" <denver at ossguy.com> wrote:

> This patch allows the user to specify a list of default refresh
> rates to use at particular resolutions to override the default
> behavior that chooses the refresh rate based on whichever mode
> is first in the list for a given resolution.  The list is specified
> by populating the X11 Driver/DefaultRefreshRates registry key with
> a semicolon-delimited list of resolution, refresh rate pairs.

What's really needs to be done is writing the tests to investigate
what Windows does in that case, and make the tests pass in Wine.

-- 
Dmitry.


From julliard at winehq.org  Mon Mar  3 05:06:48 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 03 Mar 2008 12:06:48 +0100
Subject: [1/3] shlwapi/tests: Move the function pointers to the string
	test functions where they are initialized and used.
In-Reply-To: <alpine.DEB.1.00.0803012113580.16709@amboise.dolphin> (Francois
	Gouget's message of "Sat, 1 Mar 2008 21:16:09 +0100 (CET)")
References: <alpine.DEB.1.00.0803012113580.16709@amboise.dolphin>
Message-ID: <87prucnk1j.fsf@wine.dyndns.org>

Francois Gouget <fgouget at free.fr> writes:

> It makes no sense to declare the function pointers globally, but then 
> only initialiaze them in one function or another. This is a recipe for 
> adding code that calls the function pointer elsewhere... and before it 
> has been initialized of course.

Actually the reason for declaring them globally is that 2.x gcc versions
sometimes crash on local WINAPI function pointers.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Mon Mar  3 05:18:09 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 03 Mar 2008 12:18:09 +0100
Subject: mountmgr.sys and ioctl's
In-Reply-To: <b130c85e0803012356v2887045amb76936b576f0e5a2@mail.gmail.com>
	(Maarten Lankhorst's message of "Sat, 1 Mar 2008 23:56:48 -0800")
References: <b130c85e0803012356v2887045amb76936b576f0e5a2@mail.gmail.com>
Message-ID: <87ir04njim.fsf@wine.dyndns.org>

"Maarten Lankhorst" <m.b.lankhorst at gmail.com> writes:

> What if we always map access to \\.\X: is always mapped to mountmgr,
> and let mountmanager open \\.\X:: that would be mapped to
> /dosdevices/x::, any ioctl, and read/write stuff that mountmgr can't
> handle can then be forwarded to the raw device, if available.
>
> Do you think that would be an appropiate solution?

No, things that can be done locally through the fd shouldn't have to go
through mountmgr, especially not read/writes.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Mon Mar  3 05:26:13 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 03 Mar 2008 12:26:13 +0100
Subject: [PATCH 1/1] GDI+: Implement GdipGetImageEncoders.
In-Reply-To: <1203868184-16476-1-git-send-email-nathan.beckmann@gmail.com>
	(Nathan Beckmann's message of "Sun, 24 Feb 2008 07:49:44 -0800")
References: <1203868184-16476-1-git-send-email-nathan.beckmann@gmail.com>
Message-ID: <87ejasnj56.fsf@wine.dyndns.org>

Nathan Beckmann <nathan.beckmann at gmail.com> writes:

> +
> +/*************************************************************************
> + * Encoders -
> + *   Implemented as dummy objects that let the user know which files are
> + *   supported. Actual encoding is done by OLE.
> + *
> + *   This code is based heavily on libgdiplus (Mono):
> + *
> [...]

What's the point of including such a large copyright notice if you are
not actually copying any code?  You are just defining a couple of
constants, you don't need to copy that from Mono.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Mon Mar  3 05:27:18 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 03 Mar 2008 12:27:18 +0100
Subject: [PATCH 1/6] OLE: Remove tabs from olepicture.c test file.
In-Reply-To: <1203868639-16623-1-git-send-email-nathan.beckmann@gmail.com>
	(Nathan Beckmann's message of "Sun, 24 Feb 2008 07:57:14 -0800")
References: <1203868639-16623-1-git-send-email-nathan.beckmann@gmail.com>
Message-ID: <87ablgnj3d.fsf@wine.dyndns.org>

Please don't do that.

-- 
Alexandre Julliard
julliard at winehq.org


From msclrhd at googlemail.com  Mon Mar  3 04:49:13 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Mon, 3 Mar 2008 10:49:13 +0000
Subject: ntdll: Added support for Windows 2008
In-Reply-To: <47CBCE83.8010103@codeweavers.com>
References: <fqe2q8$c3m$1@ger.gmane.org> <47CBCE83.8010103@codeweavers.com>
Message-ID: <3f4fd2640803030249t49062983ybda517dcafb11ef@mail.gmail.com>

On 03/03/2008, Robert Shearman <rob at codeweavers.com> wrote:
>
>  I see Microsoft are using even more sneaky tactics these days to
>  increase sales. They are releasing new versions of Windows with the
>  first service pack already applied to satisfy the customers who always
>  wait for the first service pack of a version of Windows to come out
>  before upgrading to it.
>
>  Or could this just be a copy and paste mistake?

Windows 2008 is built on the Vista codebase, and is aligned with Vista
SP1. When Vista SP2 ships, it will be Windows 2008 SP1. (Source: Paul
Thurott's podcast on www.twit.tv).

- Reece


From martin at hinner.info  Mon Mar  3 06:16:46 2008
From: martin at hinner.info (Martin Hinner)
Date: Mon, 3 Mar 2008 13:16:46 +0100
Subject: Getting apps running under Wine
Message-ID: <24d1a1690803030416u128ff6a7i59ad69eeeb06f976@mail.gmail.com>

Hello,

   I would like to run some of our (win32-based) applications under
Linux using Wine. At this time it is only for my personal use, but
maybe someday some of our users will like to have it on Linux like me.

   I have managed to get all of them running, showing at least first
dialog/window. But there are some problems:

1) User interface stuff. We are using dialogs (MFC CDialog) that have
non-default font size (i.e.  Times New Roman, 12 ). The font is
displayed correctly under Wine, but dialog window has wrong size (it's
smaller and some parts of dialog, mainly buttons at bottom, are not
visible). I can send more info on this. How to solve this problem
(other way than detecting Wine and resizing window manually) ?

2) Windows drivers. We use DLL that depends on some Win32 drivers.
Linux driver is available with similar API, so it's not a big problem
to change our application to use Linux library. I understand that
clearest way how to solve this problem is to make .dll.so file, but
it's quite complicated for this particular application and I would
prefer much more to add few if conditions to our Windows code that
would recognize Wine under Linux and load native .so file (not
.dll.so!). Is this possible? How to deal with different calling
conventions between gcc and Visual C++ 2003 ?

3) Windows service. We use a windows NT service (which can easily be
ported to Linux,btw), an application communicates with the service
using named pipe. Is it possible to communicate from "wined"
application with some Linux program using technique other than TCP or
Unix socket ? If no - is it possible to open Unix socket from our win
app ?

-- 
Martin Hinner

http://martin.hinner.info
http://www.auto-diagnostics.info


From fgouget at free.fr  Mon Mar  3 07:27:07 2008
From: fgouget at free.fr (Francois Gouget)
Date: Mon, 3 Mar 2008 14:27:07 +0100 (CET)
Subject: [1/3] shlwapi/tests: Move the function pointers to the string
	test functions where they are initialized and used.
In-Reply-To: <87prucnk1j.fsf@wine.dyndns.org>
References: <alpine.DEB.1.00.0803012113580.16709@amboise.dolphin>
	<87prucnk1j.fsf@wine.dyndns.org>
Message-ID: <alpine.DEB.1.00.0803031426190.2379@amboise.dolphin>

On Mon, 3 Mar 2008, Alexandre Julliard wrote:

> Francois Gouget <fgouget at free.fr> writes:
> 
> > It makes no sense to declare the function pointers globally, but then 
> > only initialiaze them in one function or another. This is a recipe for 
> > adding code that calls the function pointer elsewhere... and before it 
> > has been initialized of course.
> 
> Actually the reason for declaring them globally is that 2.x gcc versions
> sometimes crash on local WINAPI function pointers.

Then I think it's better to initialize them all in the test's 'main' 
function. I'll submit a patch for that.


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                  A black hole is just God dividing by zero.


From julliard at winehq.org  Mon Mar  3 08:38:22 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 03 Mar 2008 15:38:22 +0100
Subject: [PATCH 1/4] rpcss: Implement endpoint-mapper server using DCE/RPC.
In-Reply-To: <47CBEB37.5040401@codeweavers.com> (Robert Shearman's message of
	"Mon, 03 Mar 2008 12:12:39 +0000")
References: <47CBEB37.5040401@codeweavers.com>
Message-ID: <87skz7na8x.fsf@wine.dyndns.org>

Robert Shearman <rob at codeweavers.com> writes:

> ---
>   include/Makefile.in            |    2 +
>   include/sharedidl/dcetypes.idl |   88 ++++++++++++
>   include/sharedidl/epm.idl      |  113 ++++++++++++++++
>   programs/rpcss/Makefile.in     |    3 +
>   programs/rpcss/epm.idl         |   19 +++
>   programs/rpcss/epmp.c          |  291
> ++++++++++++++++++++++++++++++++++++++++
>   programs/rpcss/rpcss_main.c    |   54 +++++---
>   7 files changed, 550 insertions(+), 20 deletions(-)
>   create mode 100644 include/sharedidl/dcetypes.idl
>   create mode 100644 include/sharedidl/epm.idl
>   create mode 100644 programs/rpcss/epm.idl
>   create mode 100644 programs/rpcss/epmp.c

That sharedidl stuff is ugly, we really have to find a way to make this
work with the idl files in include/wine.

-- 
Alexandre Julliard
julliard at winehq.org


From denver at ossguy.com  Mon Mar  3 09:04:53 2008
From: denver at ossguy.com (Denver Gingerich)
Date: Mon, 3 Mar 2008 10:04:53 -0500
Subject: winex11.drv: Add DefaultRefreshRates option to specify refresh
	ratewhen application does not
In-Reply-To: <028701c87d1e$37f6ef40$a600fea9@DMITRY>
References: <47CB80F1.90300@ossguy.com> <028701c87d1e$37f6ef40$a600fea9@DMITRY>
Message-ID: <6defe8840803030704x1424f0ddu89c104565f40a516@mail.gmail.com>

On Mon, Mar 3, 2008 at 6:03 AM, Dmitry Timoshkov <dmitry at codeweavers.com> wrote:
> "Denver Gingerich" <denver at ossguy.com> wrote:
>
>  > This patch allows the user to specify a list of default refresh
>  > rates to use at particular resolutions to override the default
>  > behavior that chooses the refresh rate based on whichever mode
>  > is first in the list for a given resolution.  The list is specified
>  > by populating the X11 Driver/DefaultRefreshRates registry key with
>  > a semicolon-delimited list of resolution, refresh rate pairs.
>
>  What's really needs to be done is writing the tests to investigate
>  what Windows does in that case, and make the tests pass in Wine.

The only way I could see of modifying the default refresh rate under
Windows is to change it through Display Settings.  Unfortunately, not
all Wine platforms have this option.  On my system, where the Nvidia
binary driver automatically constructs a list of modes (there are no
ModeLine entries in xorg.conf), there does not appear to be a
mechanism for modifying the mode list.

I suppose the proper solution would be to modify the Nvidia binary
driver to allow for modification of the mode list (and modify any
other drivers that don't provide that mechanism).  While I generally
like proper solutions, I don't think that is a practical option
because we don't have access to the Nvidia binary driver source code
yet those with Nvidia cards have to use it for
DirectDrawRenderer=opengl and RenderTargetLockMode=readtex.

If I find the time, I will try to construct a test case in the next
few days and run it on Windows and Wine to see what happens.  If
someone on the list is interested, though, I would appreciate if they
did it instead.  I don't have a development environment setup on
Windows at this point.

Regardless of the outcome of the test cases, I would still like to see
DefaultRefreshRates implemented in Wine for the reasons above.  Unless
someone can tell me how to change the mode ordering in the OS with the
Nvidia driver, I can't see any way to choose different default refresh
rates for the various resolutions.  I would appreciate if others could
comment on whether their video card driver allows the mode ordering to
be changed.

Denver


From dmitry at codeweavers.com  Mon Mar  3 09:25:18 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 3 Mar 2008 23:25:18 +0800
Subject: winex11.drv: Add DefaultRefreshRates option to specify
	refreshratewhen application does not
References: <47CB80F1.90300@ossguy.com> <028701c87d1e$37f6ef40$a600fea9@DMITRY>
	<6defe8840803030704x1424f0ddu89c104565f40a516@mail.gmail.com>
Message-ID: <03e401c87d42$cb7a69d0$a600fea9@DMITRY>

"Denver Gingerich" <denver at ossguy.com> wrote:

> The only way I could see of modifying the default refresh rate under
> Windows is to change it through Display Settings.  Unfortunately, not
> all Wine platforms have this option.  On my system, where the Nvidia
> binary driver automatically constructs a list of modes (there are no
> ModeLine entries in xorg.conf), there does not appear to be a
> mechanism for modifying the mode list.

Why do you need to modify the modes list? You need to figure out how
Windows chooses from the list of available modes when refresh rate is
not specified. Does it select first/best/any from the list?

-- 
Dmitry.


From dank at kegel.com  Mon Mar  3 10:09:44 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 3 Mar 2008 08:09:44 -0800
Subject: Building dlls/oleaut32/tests/olepicture.c under Cygwin?
Message-ID: <a71bd89a0803030809w2095b3f8s57b5029a2d21c7c7@mail.gmail.com>

I tried building dlls/oleaut32/tests/olepicture.c
on Windows using cygwin, but ran into a couple small problems.
The main problem is:

/cygdrive/c/DOCUME~1/Liz/LOCALS~1/Temp/ccXL7SF3.o:olepicture.c:(.text+0x18e5):
undefined reference to `_IPictureDisp_Invoke'

That sounds fishy - is that test using a wine-specific shortcut?
If so, what's the kosher windows way to do what it's doing?

Here's the procedure I followed:

1. Download and run the installer from http://cygwin.com
Use it to install gcc and git
2. Open a cygwin window
3. Grab a copy of the Wine sources using git as normal
4. cd wine/dlls/oleaut32/tests
5. to avoid conflicts between the win32 headers from wine and from cygwin,
just use the cygwin ones.  But we do have to copy one header from wine:
 mkdir -p include/wine
 cp ../../../include/wine/test.h include/wine
6. Try compiling and linking with
$ gcc -DSTANDALONE -Iinclude olepicture.c -mwindows -loleaut32 -lole32 -luuid
This fails with all sorts of errors about LOGFONTA.
That's because the include lines in olepicture.c are in the wrong order!
Edit olepicture.c and change the lines

#include <winuser.h>
#include <wingdi.h>

to read

#include <wingdi.h>
#include <winuser.h>

7. Try compiling again.  Now you fail with a handful of errors like
/cygdrive/c/DOCUME~1/Liz/LOCALS~1/Temp/ccXL7SF3.o:olepicture.c:(.text+0x18e5): u
ndefined reference to `_IPictureDisp_Invoke'

Seems like a portability problem in tests/olepicture.c.


From denver at ossguy.com  Mon Mar  3 10:10:50 2008
From: denver at ossguy.com (Denver Gingerich)
Date: Mon, 3 Mar 2008 11:10:50 -0500
Subject: winex11.drv: Add DefaultRefreshRates option to specify
	refreshratewhen application does not
In-Reply-To: <03e401c87d42$cb7a69d0$a600fea9@DMITRY>
References: <47CB80F1.90300@ossguy.com> <028701c87d1e$37f6ef40$a600fea9@DMITRY>
	<6defe8840803030704x1424f0ddu89c104565f40a516@mail.gmail.com>
	<03e401c87d42$cb7a69d0$a600fea9@DMITRY>
Message-ID: <6defe8840803030810h3cea606ema4afa265dec35de@mail.gmail.com>

On Mon, Mar 3, 2008 at 10:25 AM, Dmitry Timoshkov
<dmitry at codeweavers.com> wrote:
> "Denver Gingerich" <denver at ossguy.com> wrote:
>
>
> > The only way I could see of modifying the default refresh rate under
>  > Windows is to change it through Display Settings.  Unfortunately, not
>  > all Wine platforms have this option.  On my system, where the Nvidia
>  > binary driver automatically constructs a list of modes (there are no
>  > ModeLine entries in xorg.conf), there does not appear to be a
>  > mechanism for modifying the mode list.
>
>  Why do you need to modify the modes list?

Using the current Wine code (without this patch), modifying the modes
list so that a particular refresh rate appears first in the list is
the only way that I can see to specify a default refresh rate for a
given resolution.  This is because the current Wine code chooses the
first mode that matches the resolution if no refresh rate is specified
even if there are other modes with the same resolution but different
refresh rates.

I think what you're saying is that Wine's current behavior (pick the
first mode with matching resolution) does not necessarily reflect
Windows' behavior so testing needs to be done to see what algorithm
Windows uses to determine the refresh rate when it isn't specified.
Correct me if I'm wrong.

> You need to figure out how
>  Windows chooses from the list of available modes when refresh rate is
>  not specified. Does it select first/best/any from the list?

This test definitely needs to be done.  I will hopefully have time in
the next few days but if someone else beats me to it, I won't
complain.

Denver


From rob at codeweavers.com  Mon Mar  3 10:19:30 2008
From: rob at codeweavers.com (Robert Shearman)
Date: Mon, 03 Mar 2008 16:19:30 +0000
Subject: Building dlls/oleaut32/tests/olepicture.c under Cygwin?
In-Reply-To: <a71bd89a0803030809w2095b3f8s57b5029a2d21c7c7@mail.gmail.com>
References: <a71bd89a0803030809w2095b3f8s57b5029a2d21c7c7@mail.gmail.com>
Message-ID: <47CC2512.3040608@codeweavers.com>

Dan Kegel wrote:
> 7. Try compiling again.  Now you fail with a handful of errors like
> /cygdrive/c/DOCUME~1/Liz/LOCALS~1/Temp/ccXL7SF3.o:olepicture.c:(.text+0x18e5): u
> ndefined reference to `_IPictureDisp_Invoke'
>
> Seems like a portability problem in tests/olepicture.c.

 From ocidl.h:
#define 
IPictureDisp_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) 
(This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

Which headers are you using?

-- 
Rob Shearman



From dank at kegel.com  Mon Mar  3 10:24:07 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 3 Mar 2008 08:24:07 -0800
Subject: Building dlls/oleaut32/tests/olepicture.c under Cygwin?
In-Reply-To: <47CC2512.3040608@codeweavers.com>
References: <a71bd89a0803030809w2095b3f8s57b5029a2d21c7c7@mail.gmail.com>
	<47CC2512.3040608@codeweavers.com>
Message-ID: <a71bd89a0803030824q4af31a81hf613e7d79e25a5b4@mail.gmail.com>

On Mon, Mar 3, 2008 at 8:19 AM, Robert Shearman <rob at codeweavers.com> wrote:
>   From ocidl.h:
>  #define  IPictureDisp_Invoke ...
>
>  Which headers are you using?

The cygwin ones.  Think I can just add that one define to them?


From dank at kegel.com  Mon Mar  3 10:29:44 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 3 Mar 2008 08:29:44 -0800
Subject: Building dlls/oleaut32/tests/olepicture.c under Cygwin?
In-Reply-To: <a71bd89a0803030824q4af31a81hf613e7d79e25a5b4@mail.gmail.com>
References: <a71bd89a0803030809w2095b3f8s57b5029a2d21c7c7@mail.gmail.com>
	<47CC2512.3040608@codeweavers.com>
	<a71bd89a0803030824q4af31a81hf613e7d79e25a5b4@mail.gmail.com>
Message-ID: <a71bd89a0803030829j30f6209cjb150b83ab0327121@mail.gmail.com>

On Mon, Mar 3, 2008 at 8:24 AM, Dan Kegel <dank at kegel.com> wrote:
> On Mon, Mar 3, 2008 at 8:19 AM, Robert Shearman <rob at codeweavers.com> wrote:
>  >   From ocidl.h:
>  >  #define  IPictureDisp_Invoke ...
> >
>  >  Which headers are you using?
>
>  The cygwin ones.  Think I can just add that one define to them?

I bet not.  I guess I'll try the microsoft headers next.


From winehacker at gmail.com  Mon Mar  3 10:51:26 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Mon, 3 Mar 2008 11:51:26 -0500
Subject: Building dlls/oleaut32/tests/olepicture.c under Cygwin?
In-Reply-To: <a71bd89a0803030829j30f6209cjb150b83ab0327121@mail.gmail.com>
References: <a71bd89a0803030809w2095b3f8s57b5029a2d21c7c7@mail.gmail.com>
	<47CC2512.3040608@codeweavers.com>
	<a71bd89a0803030824q4af31a81hf613e7d79e25a5b4@mail.gmail.com>
	<a71bd89a0803030829j30f6209cjb150b83ab0327121@mail.gmail.com>
Message-ID: <19e31a080803030851r9bb7f5fy41cf5b4ee345d250@mail.gmail.com>

On Mon, Mar 3, 2008 at 11:29 AM, Dan Kegel <dank at kegel.com> wrote:
>  >  The cygwin ones.  Think I can just add that one define to them?
>
>  I bet not.  I guess I'll try the microsoft headers next.

The default search order for the headers on cygwin/mingw is host then
Wine so if you just remove or rename the w32api headers you will end
up including the Wine headers which may fix the problem.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From juan.lang at gmail.com  Mon Mar  3 11:09:08 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 3 Mar 2008 09:09:08 -0800
Subject: Getting apps running under Wine
In-Reply-To: <24d1a1690803030416u128ff6a7i59ad69eeeb06f976@mail.gmail.com>
References: <24d1a1690803030416u128ff6a7i59ad69eeeb06f976@mail.gmail.com>
Message-ID: <3a768c550803030909q29647b57i704040f69b7dac72@mail.gmail.com>

Hi Martin,

>  1) User interface stuff. We are using dialogs (MFC CDialog) that have
>  non-default font size (i.e.  Times New Roman, 12 ). The font is
>  displayed correctly under Wine, but dialog window has wrong size (it's
>  smaller and some parts of dialog, mainly buttons at bottom, are not
>  visible). I can send more info on this. How to solve this problem
>  (other way than detecting Wine and resizing window manually) ?

Please open a bug at our bugzilla (bugs.winehq.org).  Attaching
screenshots of the problem would help.  We discourage you from working
around Wine bugs, because if we fix the bug, we'll break your app in
the process.  Better to fix Wine.

>  2) Windows drivers. We use DLL that depends on some Win32 drivers.
>  Linux driver is available with similar API, so it's not a big problem
>  to change our application to use Linux library. I understand that
>  clearest way how to solve this problem is to make .dll.so file, but
>  it's quite complicated for this particular application and I would
>  prefer much more to add few if conditions to our Windows code that
>  would recognize Wine under Linux and load native .so file (not
>  .dll.so!). Is this possible? How to deal with different calling
>  conventions between gcc and Visual C++ 2003 ?

I'm not sure what you mean by different calling conventions; gcc
supports the __stdcall convention, at least, and VC++ supports
__cdecl.  If you're using __fastcall you'll need to change it to one
of the others, I think.

As far as detecting Wine, again we prefer you don't.  Would it be any
great problem to ship a Linux version that called the Linux drivers,
and a Windows version that called the Windows drivers?

>  3) Windows service. We use a windows NT service (which can easily be
>  ported to Linux,btw), an application communicates with the service
>  using named pipe. Is it possible to communicate from "wined"
>  application with some Linux program using technique other than TCP or
>  Unix socket ? If no - is it possible to open Unix socket from our win
>  app ?

It's certainly possible to open a Unix socket from a winelib app.
(Wine itself does so.)  Using a named pipe from a regular (not
winelib) Linux app won't work.

Hope that helps,
--Juan


From austinenglish at gmail.com  Mon Mar  3 12:59:03 2008
From: austinenglish at gmail.com (Austin English)
Date: Mon, 3 Mar 2008 12:59:03 -0600
Subject: Bugzilla's down again
Message-ID: <b6bb06270803031059re473f98q55c916a64cb4b522@mail.gmail.com>

Someone with access care to reset mysql?

-Austin


From kuba at mareimbrium.org  Mon Mar  3 13:47:09 2008
From: kuba at mareimbrium.org (Kuba Ober)
Date: Mon, 3 Mar 2008 14:47:09 -0500
Subject: Next big app(s) to try?
In-Reply-To: <47B8AFE0.6060509@diderot.org>
References: <a71bd89a0802170115o7a7a7585o8462762cbda414ad@mail.gmail.com>
	<47B87933.5090208@gmail.com> <47B8AFE0.6060509@diderot.org>
Message-ID: <200803031447.09373.kuba@mareimbrium.org>

On Sunday 17 February 2008, denis bonnenfant wrote:
> Another major application that may be interesting to support is SolidWorks.
> http://appdb.winehq.org/objectManager.php?sClass=version&iId=8983
>
> Why ?
>
> - It's one of the most popular CAD application for mechanical design and
> engineering, and surely the most used for educationnal purposes. Although
> the industrial version is quite expensive, thousands of $ or ?, it is
> availiable for free for students in europe, and currently, it is the only
> app that may prevent them from switching from Windows to Linux.

In similar vein I'd add Alibre Design, which provides almost the same 
functionality for 5-10x less money.

Cheers, Kuba


From dank at kegel.com  Mon Mar  3 13:52:48 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 3 Mar 2008 11:52:48 -0800
Subject: Building dlls/oleaut32/tests/olepicture.c under Cygwin?
In-Reply-To: <19e31a080803030851r9bb7f5fy41cf5b4ee345d250@mail.gmail.com>
References: <a71bd89a0803030809w2095b3f8s57b5029a2d21c7c7@mail.gmail.com>
	<47CC2512.3040608@codeweavers.com>
	<a71bd89a0803030824q4af31a81hf613e7d79e25a5b4@mail.gmail.com>
	<a71bd89a0803030829j30f6209cjb150b83ab0327121@mail.gmail.com>
	<19e31a080803030851r9bb7f5fy41cf5b4ee345d250@mail.gmail.com>
Message-ID: <a71bd89a0803031152j789a6be9u606ba4a94aa7436@mail.gmail.com>

On Mon, Mar 3, 2008 at 8:51 AM, Steven Edwards <winehacker at gmail.com> wrote:
>  The default search order for the headers on cygwin/mingw is host then
>  Wine so if you just remove or rename the w32api headers you will end
>  up including the Wine headers which may fix the problem.

That did it.  So the full procedure, for the record, is:

1. Download and run the installer from http://cygwin.com
Use it to install gcc, git, make, flex, and bison.

2. Open a cygwin window

3. Grab a copy of the Wine sources using git as normal

4. Configure wine, build widl, and use it to expand .idl files to .h files.
$ cd wine
$ ./configure
$ cd libs/port; make; cd -
$ cd libs/wpp; make; cd -
$ cd tools/widl; make; cd -
$ cd include; make; cd -

5. cd wine/dlls/oleaut32/tests

5. to avoid conflicts between the win32 headers from wine and from cygwin,
just use the wine ones.  The easiest way to nuke the cygwin ones
is to do
$ mv /usr/include/w32api /usr/include/w32api.x

6. Try compiling and linking your test.  e.g.
$ cd wine/dlls/oleaut32/tests
$ gcc -DSTANDALONE -I../../../include olepicture.c -mno-cygwin
-loleaut32 -lole32 -luuid
This fails with all sorts of errors about LOGFONTA.
That's because the include lines in olepicture.c are in the wrong order!
Edit olepicture.c and change the lines

#include <winuser.h>
#include <wingdi.h>

to read

#include <wingdi.h>
#include <winuser.h>

7. Try compiling again.  It should work now.  To run your standalone test, do
$ ./a.exe
If you need more verbose output, do
$ WINETEST_DEBUG=1 ./a.out
That will enable trace() statements.


From jnewman at codeweavers.com  Mon Mar  3 14:23:08 2008
From: jnewman at codeweavers.com (Jeremy Newman)
Date: Mon, 03 Mar 2008 14:23:08 -0600
Subject: Bugzilla's down again
In-Reply-To: <b6bb06270803031059re473f98q55c916a64cb4b522@mail.gmail.com>
References: <b6bb06270803031059re473f98q55c916a64cb4b522@mail.gmail.com>
Message-ID: <47CC5E2C.6060002@codeweavers.com>

It didn't go down that I'm aware of. At least not in the same way it had 
been crashing before.

Austin English wrote:
> Someone with access care to reset mysql?
> 
> -Austin
> 
> 


From ben at atomnet.co.uk  Mon Mar  3 14:26:42 2008
From: ben at atomnet.co.uk (Ben Hodgetts)
Date: Mon, 03 Mar 2008 20:26:42 +0000
Subject: Bugzilla's down again
In-Reply-To: <47CC5E2C.6060002@codeweavers.com>
References: <b6bb06270803031059re473f98q55c916a64cb4b522@mail.gmail.com>
	<47CC5E2C.6060002@codeweavers.com>
Message-ID: <47CC5F02.4070701@atomnet.co.uk>

Seems to work for me although initially loading it took a little longer 
than it normally does.

Ben H.

Jeremy Newman wrote:
> It didn't go down that I'm aware of. At least not in the same way it had 
> been crashing before.
>
> Austin English wrote:
>   
>> Someone with access care to reset mysql?
>>
>> -Austin
>>
>>
>>     
>
>
>   


From austinenglish at gmail.com  Mon Mar  3 15:07:31 2008
From: austinenglish at gmail.com (Austin English)
Date: Mon, 3 Mar 2008 15:07:31 -0600
Subject: Bugzilla's down again
In-Reply-To: <47CC5F02.4070701@atomnet.co.uk>
References: <b6bb06270803031059re473f98q55c916a64cb4b522@mail.gmail.com>
	<47CC5E2C.6060002@codeweavers.com> <47CC5F02.4070701@atomnet.co.uk>
Message-ID: <b6bb06270803031307x4e6a6b1fpe33212b77150e05e@mail.gmail.com>

On Mon, Mar 3, 2008 at 2:26 PM, Ben Hodgetts <ben at atomnet.co.uk> wrote:
> Seems to work for me although initially loading it took a little longer
>  than it normally does.
>
>  Ben H.
>
>
>
>  Jeremy Newman wrote:
>  > It didn't go down that I'm aware of. At least not in the same way it had
>  > been crashing before.
>  >
>  > Austin English wrote:
>  >
>  >> Someone with access care to reset mysql?
>  >>
>  >> -Austin
>  >>
>  >>
>  >>
>  >
>  >
>  >
>
>
>

Yeah, seems to be back up now, had been down for few minutes, but not
as long as usual...

-Austin


From m.b.lankhorst at gmail.com  Mon Mar  3 15:22:30 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Mon, 3 Mar 2008 13:22:30 -0800
Subject: Summer of code 2008, looking for volunteers
Message-ID: <b130c85e0803031322h253a5155m8f87d10140d39a66@mail.gmail.com>

Hi all,

I'm planning on being administrator for wine project with the summer
of code 2008.

I'm looking for mentor volunteers. If you don't know what that is read
take some time to read through
http://code.google.com/soc/2008/faqs.html
If anyone is interested, please contact me privately.

I'm also looking for project ideas, if anyone has an idea for a
project for the summer of code, please update
http://wiki.winehq.org/SummerOfCode . I would prefer projects that can
be done by small changes at a time, like implementing changes to get
an application to work, instead of something dractic like a dib
engine. It should preferably be doable in 2 to 3 months by someone who
doesn't have a lot of wine experience yet.

I'm also looking for people who want to help out in other ways, like
updating the wiki page and creating some additional information that
would be useful to students.

Cheers,
Maarten.


From us at edmeades.me.uk  Mon Mar  3 17:38:57 2008
From: us at edmeades.me.uk (Ann & Jason Edmeades)
Date: Mon, 3 Mar 2008 23:38:57 -0000
Subject: Summer of code 2008 - cmd.exe compatibility?
Message-ID: <000001c87d87$c445e0f0$1001a8c0@JasonsPC>

Hiya, 

Out of interest, what is meant by improving cmd.exe compatibility?

Jason




From thestig at google.com  Mon Mar  3 17:52:21 2008
From: thestig at google.com (Lei Zhang)
Date: Mon, 3 Mar 2008 15:52:21 -0800
Subject: Summer of code 2008 - cmd.exe compatibility?
In-Reply-To: <000001c87d87$c445e0f0$1001a8c0@JasonsPC>
References: <000001c87d87$c445e0f0$1001a8c0@JasonsPC>
Message-ID: <558b2f5c0803031552l6694951s1b90bbb4c0a75132@mail.gmail.com>

On Mon, Mar 3, 2008 at 3:38 PM, Ann & Jason Edmeades <us at edmeades.me.uk> wrote:
> Hiya,
>
>  Out of interest, what is meant by improving cmd.exe compatibility?

Add support for all the cmd.exe switches and all the dos batch
programming constructs?


From donpedro at tdcadsl.dk  Mon Mar  3 18:40:41 2008
From: donpedro at tdcadsl.dk (Peter Dons Tychsen)
Date: Tue, 04 Mar 2008 01:40:41 +0100
Subject: Request for comments on listview patch which was rejected.
Message-ID: <1204591241.3700.4.camel@dhcppc1>

Hello Devs.

I sent in this listview patch some while ago,
but it was silently rejected (like most of my patches :-)).

Before i re-send it, could someone take a peak at it and tell me what is
wrong?

It looks quite sober to me...

/p
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0002-Fixed-listview-bug-when-client-sends-bogus-SETITEMS.patch
Type: text/x-patch
Size: 3664 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080304/2f4249e9/attachment.bin 

From dimi at lattica.com  Mon Mar  3 18:45:09 2008
From: dimi at lattica.com (Dimi Paun)
Date: Mon, 03 Mar 2008 19:45:09 -0500
Subject: Request for comments on listview patch which was rejected.
In-Reply-To: <1204591241.3700.4.camel@dhcppc1>
References: <1204591241.3700.4.camel@dhcppc1>
Message-ID: <1204591509.5026.127.camel@dimi.lattica.com>


On Tue, 2008-03-04 at 01:40 +0100, Peter Dons Tychsen wrote:
> It looks quite sober to me...

Looks good to me too...

-- 
Dimi Paun <dimi at lattica.com>
Lattica, Inc.



From stefan at codeweavers.com  Mon Mar  3 19:28:41 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Tue, 4 Mar 2008 02:28:41 +0100
Subject: Summer of code 2008, looking for volunteers
In-Reply-To: <b130c85e0803031322h253a5155m8f87d10140d39a66@mail.gmail.com>
References: <b130c85e0803031322h253a5155m8f87d10140d39a66@mail.gmail.com>
Message-ID: <200803040228.46184.stefan@codeweavers.com>

Am Montag, 3. M?rz 2008 22:22:30 schrieb Maarten Lankhorst:
> I'm also looking for project ideas, if anyone has an idea for a
> project for the summer of code, please update
> http://wiki.winehq.org/SummerOfCode . I would prefer projects that can
> be done by small changes at a time, like implementing changes to get
> an application to work, instead of something dractic like a dib
> engine. It should preferably be doable in 2 to 3 months by someone who
> doesn't have a lot of wine experience yet.
I think writing a (partial?) D3D pipeline replacement shader in either GLSL or 
ARB is an idea. With the current state of the code this is rather hard, but I 
am working on some general infrastructure to make this easier. Depending on 
how far my work gets this could in the end be mainly a matter of translating 
the D3D settings into a shader, without worrying too much how the shader is 
then integrated into the rest of the pipeline.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080304/b1d75ca6/attachment-0001.pgp 

From epssyis at gmail.com  Mon Mar  3 19:53:13 2008
From: epssyis at gmail.com (Edward Savage)
Date: Tue, 4 Mar 2008 11:53:13 +1000
Subject: Summer of code 2008 - cmd.exe compatibility?
In-Reply-To: <558b2f5c0803031552l6694951s1b90bbb4c0a75132@mail.gmail.com>
References: <000001c87d87$c445e0f0$1001a8c0@JasonsPC>
	<558b2f5c0803031552l6694951s1b90bbb4c0a75132@mail.gmail.com>
Message-ID: <d6c5d7290803031753k414d9b5l2c3cbb8e4f0f4a5e@mail.gmail.com>

Does this also include applications that dump data to cmd.exe will
have it show now instead of not as is current?

(Ie Eve Online starts with a console, under windows it will list a
bunch of starting information for the game in cmd, under wine the box
remains empty unless their is a memory error.  The same is the case
for several server applications.)

On Tue, Mar 4, 2008 at 9:52 AM, Lei Zhang <thestig at google.com> wrote:
> On Mon, Mar 3, 2008 at 3:38 PM, Ann & Jason Edmeades <us at edmeades.me.uk> wrote:
>  > Hiya,
>  >
>  >  Out of interest, what is meant by improving cmd.exe compatibility?
>
>  Add support for all the cmd.exe switches and all the dos batch
>  programming constructs?
>
>
>


From dank at kegel.com  Mon Mar  3 20:27:51 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 3 Mar 2008 18:27:51 -0800
Subject: Wine preloader redux
Message-ID: <a71bd89a0803031827x780cb57dv21f5426587af3eee@mail.gmail.com>

Say, it looks like at some point in the past, an alternate
approach was looked at for reserving special addresses:
http://bugzilla.kernel.org/show_bug.cgi?id=2255
If that kernel issue were resolved, would that let us get
rid of the preloader?


From julliard at winehq.org  Tue Mar  4 03:24:25 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 04 Mar 2008 10:24:25 +0100
Subject: Wine preloader redux
In-Reply-To: <a71bd89a0803031827x780cb57dv21f5426587af3eee@mail.gmail.com>
	(Dan Kegel's message of "Mon, 3 Mar 2008 18:27:51 -0800")
References: <a71bd89a0803031827x780cb57dv21f5426587af3eee@mail.gmail.com>
Message-ID: <878x0yn8om.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> Say, it looks like at some point in the past, an alternate
> approach was looked at for reserving special addresses:
> http://bugzilla.kernel.org/show_bug.cgi?id=2255
> If that kernel issue were resolved, would that let us get
> rid of the preloader?

Not really, we'd still need to support older kernels, and the preloader
is more flexible anyway. Why would you want to get rid of it?  We
haven't had any trouble with it for a long time.

-- 
Alexandre Julliard
julliard at winehq.org


From stefan at codeweavers.com  Tue Mar  4 04:58:55 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Tue, 4 Mar 2008 11:58:55 +0100
Subject: Wine preloader redux
In-Reply-To: <878x0yn8om.fsf@wine.dyndns.org>
References: <a71bd89a0803031827x780cb57dv21f5426587af3eee@mail.gmail.com>
	<878x0yn8om.fsf@wine.dyndns.org>
Message-ID: <200803041158.57792.stefan@codeweavers.com>

Am Dienstag, 4. M?rz 2008 10:24:25 schrieb Alexandre Julliard:
> "Dan Kegel" <dank at kegel.com> writes:
> > Say, it looks like at some point in the past, an alternate
> > approach was looked at for reserving special addresses:
> > http://bugzilla.kernel.org/show_bug.cgi?id=2255
> > If that kernel issue were resolved, would that let us get
> > rid of the preloader?
>
> Not really, we'd still need to support older kernels, and the preloader
> is more flexible anyway. Why would you want to get rid of it?  We
> haven't had any trouble with it for a long time.
Might that fix our problem with the VM limitation for video drivers?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080304/81811506/attachment.pgp 

From julliard at winehq.org  Tue Mar  4 05:04:26 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 04 Mar 2008 12:04:26 +0100
Subject: Wine preloader redux
In-Reply-To: <200803041158.57792.stefan@codeweavers.com> ("Stefan
	=?utf-8?Q?D=C3=B6singer=22's?=
	message of "Tue, 4 Mar 2008 11:58:55 +0100")
References: <a71bd89a0803031827x780cb57dv21f5426587af3eee@mail.gmail.com>
	<878x0yn8om.fsf@wine.dyndns.org>
	<200803041158.57792.stefan@codeweavers.com>
Message-ID: <87ve42lphh.fsf@wine.dyndns.org>

Stefan D?singer <stefan at codeweavers.com> writes:

> Am Dienstag, 4. M?rz 2008 10:24:25 schrieb Alexandre Julliard:
>> "Dan Kegel" <dank at kegel.com> writes:
>> > Say, it looks like at some point in the past, an alternate
>> > approach was looked at for reserving special addresses:
>> > http://bugzilla.kernel.org/show_bug.cgi?id=2255
>> > If that kernel issue were resolved, would that let us get
>> > rid of the preloader?
>>
>> Not really, we'd still need to support older kernels, and the preloader
>> is more flexible anyway. Why would you want to get rid of it?  We
>> haven't had any trouble with it for a long time.
> Might that fix our problem with the VM limitation for video drivers?

No, the memory needs to be reserved one way or another.

-- 
Alexandre Julliard
julliard at winehq.org


From dank at kegel.com  Tue Mar  4 06:15:10 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 4 Mar 2008 04:15:10 -0800
Subject: WineHQ should discourage the use of cracks
Message-ID: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>

I've been fighting against the notion that the
wine project encourages cracks for some time now.
Cracked versions of apps are bad because they are
a) illegal (at least in the US),
b) disrespectful of the author of the app, and
c) much more likely to be infected with malware.

One place we still do it is in our appdb ratings definitions;
http://appdb.winehq.org//help/?sTopic=maintainer_ratings
which say
"Gold: Application works flawlessly with some DLL overrides or other
settings, crack etc. "

I propose that we change the appdb ratings definitions
so that an app that only works with a crack gets no higher
than bronze.

Any objections?
- Dan


From dank at kegel.com  Tue Mar  4 06:17:43 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 4 Mar 2008 04:17:43 -0800
Subject: Wine preloader redux
In-Reply-To: <878x0yn8om.fsf@wine.dyndns.org>
References: <a71bd89a0803031827x780cb57dv21f5426587af3eee@mail.gmail.com>
	<878x0yn8om.fsf@wine.dyndns.org>
Message-ID: <a71bd89a0803040417h4a2df8a9n9757e6e95e72c003@mail.gmail.com>

On Tue, Mar 4, 2008 at 1:24 AM, Alexandre Julliard <julliard at winehq.org> wrote:
>  > http://bugzilla.kernel.org/show_bug.cgi?id=2255
>  > If that kernel issue were resolved, would that let us get
>  > rid of the preloader?
>
> Why would you want to get rid of it?  We haven't had any trouble with it for a long time.

Because getting rid of it might make it much easier
to turn winelib into a normal library, thus enabling
plain old linux apps to at least statically link it in
and thereby become able to use windows dlls
without having to use the preloader.


From thunderbird2k at gmx.net  Tue Mar  4 06:40:05 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Tue, 04 Mar 2008 13:40:05 +0100
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
Message-ID: <20080304124005.51800@gmx.net>

> I've been fighting against the notion that the
> wine project encourages cracks for some time now.
> Cracked versions of apps are bad because they are
> a) illegal (at least in the US),
> b) disrespectful of the author of the app, and
> c) much more likely to be infected with malware.
> 
> One place we still do it is in our appdb ratings definitions;
> http://appdb.winehq.org//help/?sTopic=maintainer_ratings
> which say
> "Gold: Application works flawlessly with some DLL overrides or other
> settings, crack etc. "
> 
> I propose that we change the appdb ratings definitions
> so that an app that only works with a crack gets no higher
> than bronze.
> 
> Any objections?
> - Dan
> 

I believe that here in Europe a crack doesn't have to be illegal. We should fix copy protection support but it is not trivial at all and various games use different protection schemes. Most games really don't work without a crack. Further there are protections like StarForce which we will never be able to support. Limiting apps with cracks to bronze is a bit hard in my opinion.

Roderick
-- 
GMX startet ShortView.de. Hier findest Du Leute mit Deinen Interessen!
Jetzt dabei sein: http://www.shortview.de/?mc=sv_ext_mf at gmx


From dank at kegel.com  Tue Mar  4 07:01:17 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 4 Mar 2008 05:01:17 -0800
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <20080304124005.51800@gmx.net>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<20080304124005.51800@gmx.net>
Message-ID: <a71bd89a0803040501v3a9e4df2n6934c1bc3bf6aef7@mail.gmail.com>

Roderick Colenbrander <thunderbird2k at gmx.net> wrote:
>  I believe that here in Europe a crack doesn't have
> to be illegal. We should fix copy protection support
> but it is not trivial at all... Most games really don't work without a crack. ...
> Limiting apps with cracks to bronze is a bit hard in my opinion.

Hard it may be, but  WineHQ cannot be in a position of encouraging
unlawful behavior in the lawsuit-happy and copyright-holder-friendly
country in which a large number of its developers live and work.

Can we at least agree that needing a crack disqualifies
the app from gold status?


From julliard at winehq.org  Tue Mar  4 07:04:09 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 04 Mar 2008 14:04:09 +0100
Subject: Wine preloader redux
In-Reply-To: <a71bd89a0803040417h4a2df8a9n9757e6e95e72c003@mail.gmail.com>
	(Dan Kegel's message of "Tue, 4 Mar 2008 04:17:43 -0800")
References: <a71bd89a0803031827x780cb57dv21f5426587af3eee@mail.gmail.com>
	<878x0yn8om.fsf@wine.dyndns.org>
	<a71bd89a0803040417h4a2df8a9n9757e6e95e72c003@mail.gmail.com>
Message-ID: <87lk4yljxy.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> Because getting rid of it might make it much easier
> to turn winelib into a normal library, thus enabling
> plain old linux apps to at least statically link it in
> and thereby become able to use windows dlls
> without having to use the preloader.

We could have that as an option for Winelib apps, though I don't think
it would make things really easier, just differently complicated.

-- 
Alexandre Julliard
julliard at winehq.org


From madewokherd+d41d at gmail.com  Tue Mar  4 07:06:28 2008
From: madewokherd+d41d at gmail.com (Vincent Povirk)
Date: Tue, 4 Mar 2008 08:06:28 -0500
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
Message-ID: <ced95fe0803040506n612aad7bpe1dc03c86d9b6de6@mail.gmail.com>

But the wine project DOES encourage the use of cracks. It allows some
applications with unsupported copy-protection to run on Linux, but
only if a crack is used, creating an incentive for some people to use
cracks. QED.

The way to stop doing that would be to support copy protections and
make cracks useless, except for people who would need them anyway.
(This is not easy, I know.)

It's not clear to me what you want to accomplish by changing the
ratings. If games that only work with a crack become bronze instead of
gold, will fewer people really use cracks? Will they decide, from just
looking at the rating, that they don't want to use wine for their app?
Is that really a good thing if it happens?

I don't think this would change the incentives, and thus how much wine
encourages cracks, at all.

So would you be doing this just to make someone I don't know about happy?

That said, I don't really see the fact that it's likely to have no
real effect as a reason not to change the ratings. It just makes doing
it a bit silly.

On Tue, Mar 4, 2008 at 7:15 AM, Dan Kegel <dank at kegel.com> wrote:
> I've been fighting against the notion that the
>  wine project encourages cracks for some time now.
>  Cracked versions of apps are bad because they are
>  a) illegal (at least in the US),
>  b) disrespectful of the author of the app, and
>  c) much more likely to be infected with malware.
>
>  One place we still do it is in our appdb ratings definitions;
>  http://appdb.winehq.org//help/?sTopic=maintainer_ratings
>  which say
>  "Gold: Application works flawlessly with some DLL overrides or other
>  settings, crack etc. "
>
>  I propose that we change the appdb ratings definitions
>  so that an app that only works with a crack gets no higher
>  than bronze.
>
>  Any objections?
>  - Dan
>
>
>



-- 
Vincent Povirk


From dank at kegel.com  Tue Mar  4 07:13:30 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 4 Mar 2008 05:13:30 -0800
Subject: Wine preloader redux
In-Reply-To: <87lk4yljxy.fsf@wine.dyndns.org>
References: <a71bd89a0803031827x780cb57dv21f5426587af3eee@mail.gmail.com>
	<878x0yn8om.fsf@wine.dyndns.org>
	<a71bd89a0803040417h4a2df8a9n9757e6e95e72c003@mail.gmail.com>
	<87lk4yljxy.fsf@wine.dyndns.org>
Message-ID: <a71bd89a0803040513r4b17fefct432586f3d0b7c1dc@mail.gmail.com>

Alexandre Julliard <julliard at winehq.org> wrote:
> > Because getting rid of it might make it much easier
>  > to turn winelib into a normal library, thus enabling
>  > plain old linux apps to at least statically link it in
>  > and thereby become able to use windows dlls
>  > without having to use the preloader.
>
>  We could have that as an option for Winelib apps, though I don't think
>  it would make things really easier, just differently complicated.

The scenario I'm imagining is:
 Lots of people want to use a particular windows dll in their Linux apps.
 Joe Developer writes a nice wrapper library using winelib to hide
 the fact that win32 is involved at all.
 Fred Developer uses Joe's library in his app.
 Currently, Fred has to switch his app around to be run via the wine preloader.
 With the scheme Mike was thinking of in
 http://bugzilla.kernel.org/show_bug.cgi?id=2255
 Fred wouldn't have to do that; he'd only have to link in a static
 library (named, say, wine-reserve-win32-vma.a), and then
 link in Joe's library any old way.
That sounds a lot easier to me.  Did I miss something?


From julliard at winehq.org  Tue Mar  4 07:20:49 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 04 Mar 2008 14:20:49 +0100
Subject: Wine preloader redux
In-Reply-To: <a71bd89a0803040513r4b17fefct432586f3d0b7c1dc@mail.gmail.com>
	(Dan Kegel's message of "Tue, 4 Mar 2008 05:13:30 -0800")
References: <a71bd89a0803031827x780cb57dv21f5426587af3eee@mail.gmail.com>
	<878x0yn8om.fsf@wine.dyndns.org>
	<a71bd89a0803040417h4a2df8a9n9757e6e95e72c003@mail.gmail.com>
	<87lk4yljxy.fsf@wine.dyndns.org>
	<a71bd89a0803040513r4b17fefct432586f3d0b7c1dc@mail.gmail.com>
Message-ID: <87hcfmlj66.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> The scenario I'm imagining is:
>  Lots of people want to use a particular windows dll in their Linux apps.
>  Joe Developer writes a nice wrapper library using winelib to hide
>  the fact that win32 is involved at all.
>  Fred Developer uses Joe's library in his app.
>  Currently, Fred has to switch his app around to be run via the wine preloader.
>  With the scheme Mike was thinking of in
>  http://bugzilla.kernel.org/show_bug.cgi?id=2255
>  Fred wouldn't have to do that; he'd only have to link in a static
>  library (named, say, wine-reserve-win32-vma.a), and then
>  link in Joe's library any old way.
> That sounds a lot easier to me.  Did I miss something?

I'm not sure you can do the ELF magic with a static library, but even if
you could there's a lot more to the initial setup than the preloader;
that's why winelib apps are shared libraries, so that we can do all the
work that needs to be done before they get loaded.

-- 
Alexandre Julliard
julliard at winehq.org


From dank at kegel.com  Tue Mar  4 07:21:15 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 4 Mar 2008 05:21:15 -0800
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <ced95fe0803040506n612aad7bpe1dc03c86d9b6de6@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<ced95fe0803040506n612aad7bpe1dc03c86d9b6de6@mail.gmail.com>
Message-ID: <a71bd89a0803040521x48b00e80sbfdd266169558e4a@mail.gmail.com>

Vincent Povirk <madewokherd+d41d at gmail.com> wrote:
>  It's not clear to me what you want to accomplish by changing the
>  ratings. If games that only work with a crack become bronze instead of
>  gold, will fewer people really use cracks? Will they decide, from just
>  looking at the rating, that they don't want to use wine for their app?
>  Is that really a good thing if it happens?
>
>  I don't think this would change the incentives, and thus how much wine
>  encourages cracks, at all.

Does Microsoft encourage people to use cracks?  No.
Wine shouldn't either.

The fact is, by telling people about cracks, and by
giving high ratings to apps that only work with cracks, WineHQ
encourages the use of cracks.

The use of cracks is really independent of wine and/or windows,
and it's bad for the Wine project if people start associating
Wine with breaking the law, disrespecting copyright, and encouraging
people to seek out software from seedy, malware-ridden warez sites.
- Dan


From dank at kegel.com  Tue Mar  4 07:23:42 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 4 Mar 2008 05:23:42 -0800
Subject: Wine preloader redux
In-Reply-To: <87hcfmlj66.fsf@wine.dyndns.org>
References: <a71bd89a0803031827x780cb57dv21f5426587af3eee@mail.gmail.com>
	<878x0yn8om.fsf@wine.dyndns.org>
	<a71bd89a0803040417h4a2df8a9n9757e6e95e72c003@mail.gmail.com>
	<87lk4yljxy.fsf@wine.dyndns.org>
	<a71bd89a0803040513r4b17fefct432586f3d0b7c1dc@mail.gmail.com>
	<87hcfmlj66.fsf@wine.dyndns.org>
Message-ID: <a71bd89a0803040523s10fc0f3w4836f9ba39df498c@mail.gmail.com>

Alexandre Julliard <julliard at winehq.org> wrote:
>  I'm not sure you can do the ELF magic with a static library, but even if
>  you could there's a lot more to the initial setup than the preloader;
>  that's why winelib apps are shared libraries, so that we can do all the
>  work that needs to be done before they get loaded.

What's one other thing that couldn't reasonably happen
at global constructor time (i.e., just before main())?


From julliard at winehq.org  Tue Mar  4 07:30:48 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 04 Mar 2008 14:30:48 +0100
Subject: Wine preloader redux
In-Reply-To: <a71bd89a0803040523s10fc0f3w4836f9ba39df498c@mail.gmail.com> (Dan
	Kegel's message of "Tue, 4 Mar 2008 05:23:42 -0800")
References: <a71bd89a0803031827x780cb57dv21f5426587af3eee@mail.gmail.com>
	<878x0yn8om.fsf@wine.dyndns.org>
	<a71bd89a0803040417h4a2df8a9n9757e6e95e72c003@mail.gmail.com>
	<87lk4yljxy.fsf@wine.dyndns.org>
	<a71bd89a0803040513r4b17fefct432586f3d0b7c1dc@mail.gmail.com>
	<87hcfmlj66.fsf@wine.dyndns.org>
	<a71bd89a0803040523s10fc0f3w4836f9ba39df498c@mail.gmail.com>
Message-ID: <87d4qalipj.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> Alexandre Julliard <julliard at winehq.org> wrote:
>>  I'm not sure you can do the ELF magic with a static library, but even if
>>  you could there's a lot more to the initial setup than the preloader;
>>  that's why winelib apps are shared libraries, so that we can do all the
>>  work that needs to be done before they get loaded.
>
> What's one other thing that couldn't reasonably happen
> at global constructor time (i.e., just before main())?

Global constructor time is too late, by this time dependent libraries
will have been loaded and initialized, which will crash and burn if some
of them are Windows dlls. Also you need the environment and command line
setup before the global constructors are run. You also need to setup the
process stack, which you can't do inside a constructor that you have to
return from.

-- 
Alexandre Julliard
julliard at winehq.org


From frick at sc-networks.de  Tue Mar  4 07:34:17 2008
From: frick at sc-networks.de (Christoph Frick)
Date: Tue, 4 Mar 2008 14:34:17 +0100
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
Message-ID: <20080304133414.GZ353@byleth.sc-networks.de>

On Tue, Mar 04, 2008 at 04:15:10AM -0800, Dan Kegel wrote:

> I propose that we change the appdb ratings definitions so that an app
> that only works with a crack gets no higher than bronze.

how about:

give it the next state to gold and add a appdb flag, that states "may
only work if some <put in legaly correct term for a crack here>" flag to
the app and then provide the maintainers with a proper explanation of
the flag in the UI. if the flag is set, then do not allow the highest
state - even if is rated gold. then take of some weeks and weed through
the appdb and fix all occurences of the word crack.

-- 
cu
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 163 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080304/619c04e0/attachment.pgp 

From madewokherd+d41d at gmail.com  Tue Mar  4 07:43:16 2008
From: madewokherd+d41d at gmail.com (Vincent Povirk)
Date: Tue, 4 Mar 2008 08:43:16 -0500
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803040521x48b00e80sbfdd266169558e4a@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<ced95fe0803040506n612aad7bpe1dc03c86d9b6de6@mail.gmail.com>
	<a71bd89a0803040521x48b00e80sbfdd266169558e4a@mail.gmail.com>
Message-ID: <ced95fe0803040543v147bc064pe9aaa9ab584e185c@mail.gmail.com>

On Tue, Mar 4, 2008 at 8:21 AM, Dan Kegel <dank at kegel.com> wrote:
>  Does Microsoft encourage people to use cracks?  No.
>  Wine shouldn't either.
>
Microsoft doesn't need to. Software developers have good reasons make
sure their copy protections will work on Windows (for most people
anyway).

>  The fact is, by telling people about cracks, and by
>  giving high ratings to apps that only work with cracks, WineHQ
>  encourages the use of cracks.
>
I would object to removing information about cracks (unless, perhaps,
the cracks aren't needed and would lead users to do tweaking that is
unnecessary and therefore risky and bad) from the appdb. The appdb is
always competing with other sources of app support. When it stops
providing the information that people want, and that information is
available elsewhere, people will go elsewhere. Do I have to explain
why that is bad for users and for the wine project?

>  The use of cracks is really independent of wine and/or windows,
>  and it's bad for the Wine project if people start associating
>  Wine with breaking the law, disrespecting copyright, and encouraging
>  people to seek out software from seedy, malware-ridden warez sites.
>  - Dan
>
I thought that was bad for copyright law and DRM (since the goal here
is not to use software without paying for it but just to run it on a
different platform, but that goal can't be met without breaking the
law and the DRM), but maybe I don't think about this the way most
people do?

-- 
Vincent Povirk


From vit.hrachovy at sandbox.cz  Tue Mar  4 07:49:39 2008
From: vit.hrachovy at sandbox.cz (Vit Hrachovy)
Date: Tue, 04 Mar 2008 14:49:39 +0100
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
Message-ID: <47CD5373.8070804@sandbox.cz>

Dan Kegel wrote:
> I've been fighting against the notion that the
> wine project encourages cracks for some time now.
> Cracked versions of apps are bad because they are
> a) illegal (at least in the US),
> b) disrespectful of the author of the app, and
> c) much more likely to be infected with malware.
> 
> One place we still do it is in our appdb ratings definitions;
> http://appdb.winehq.org//help/?sTopic=maintainer_ratings
> which say
> "Gold: Application works flawlessly with some DLL overrides or other
> settings, crack etc. "
> 
> I propose that we change the appdb ratings definitions
> so that an app that only works with a crack gets no higher
> than bronze.
> 
> Any objections?
> - Dan

Hi Dan,

in fact a DLL override may be another form of 'crack' - given the 
situation I'm not owner of a Windows copy and need to override MS DLL 
which is not free to use without Windows license.

I think we should not mix up the functionality ratings with legality 
ratings. I consider this a politicspeak, not techspeak.

Given the problem above - we can solve it by rewording in a similar 
spirit but leaving the bad word out:

"Gold: Application works flawlessly with some DLL overrides or other
settings, etc. Copy protection issues are not considered as issues here."

Regards
Vit


From dank at kegel.com  Tue Mar  4 07:47:49 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 4 Mar 2008 05:47:49 -0800
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <ced95fe0803040543v147bc064pe9aaa9ab584e185c@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<ced95fe0803040506n612aad7bpe1dc03c86d9b6de6@mail.gmail.com>
	<a71bd89a0803040521x48b00e80sbfdd266169558e4a@mail.gmail.com>
	<ced95fe0803040543v147bc064pe9aaa9ab584e185c@mail.gmail.com>
Message-ID: <a71bd89a0803040547t67009b78hd127b7052315f7a8@mail.gmail.com>

Vincent Povirk <madewokherd+d41d at gmail.com> wrote:
>  >  The fact is, by telling people about cracks, and by
>  >  giving high ratings to apps that only work with cracks, WineHQ
>  >  encourages the use of cracks.
>  >
>  I would object to removing information about cracks

Would you also object to removing high ratings from
apps that need cracks?    IMHO "Gold" ought not to
imply that one has to seek out a crack (and thereby
potentially infect your machine with malware).


From dank at kegel.com  Tue Mar  4 07:51:51 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 4 Mar 2008 05:51:51 -0800
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <47CD5373.8070804@sandbox.cz>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<47CD5373.8070804@sandbox.cz>
Message-ID: <a71bd89a0803040551g40e788b8n325d3581b9f7a318@mail.gmail.com>

Vit Hrachovy <vit.hrachovy at sandbox.cz> wrote:
>  in fact a DLL override may be another form of 'crack' - given the
>  situation I'm not owner of a Windows copy and need to override MS DLL
>  which is not free to use without Windows license.

That's much less risky.   First off, most
Wine users currently happen to have a Windows license,
due to the Microsoft tax.  Second, most of the MS DLLs
people need to grab can be downloaded directly from
Microsoft, thus avoiding malware exposure.

>  Given the problem above - we can solve it by rewording in a similar
>  spirit but leaving the bad word out:
>
>  "Gold: Application works flawlessly with some DLL overrides or other
>  settings, etc. Copy protection issues are not considered as issues here."

Sorry, that doesn't do it for me.  Apps that need cracks are simply
not convenient or safe enough to merit a gold rating, IMHO.
- Dan


From vit.hrachovy at sandbox.cz  Tue Mar  4 08:02:39 2008
From: vit.hrachovy at sandbox.cz (Vit Hrachovy)
Date: Tue, 04 Mar 2008 15:02:39 +0100
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803040551g40e788b8n325d3581b9f7a318@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>	
	<47CD5373.8070804@sandbox.cz>
	<a71bd89a0803040551g40e788b8n325d3581b9f7a318@mail.gmail.com>
Message-ID: <47CD567F.3020507@sandbox.cz>

Dan Kegel wrote:
>>  "Gold: Application works flawlessly with some DLL overrides or other
>>  settings, etc. Copy protection issues are not considered as issues here."
> 
> Sorry, that doesn't do it for me.  Apps that need cracks are simply
> not convenient or safe enough to merit a gold rating, IMHO.
> - Dan

O.K. So I don't agree with Your opinion.

Gold means for me the application works for me as I expect it to work.

Copy protection is for me just an obstacle to skip through - I crack all 
the legal SW I've bought, because I need comfort using the application, 
not being whipped up by stupid DRM.

My priority is SW FUNCTIONALITY.

For copy protection functionalities we shall then have separate entries 
in AppDB - as I'm interested in my app functionality, not its DRM.

I'm happy with the current AppDB state - AppDB is for users, not for 
patent holders.

Regards
Vit


From dank at kegel.com  Tue Mar  4 08:03:34 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 4 Mar 2008 06:03:34 -0800
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <47CD567F.3020507@sandbox.cz>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<47CD5373.8070804@sandbox.cz>
	<a71bd89a0803040551g40e788b8n325d3581b9f7a318@mail.gmail.com>
	<47CD567F.3020507@sandbox.cz>
Message-ID: <a71bd89a0803040603k628deda9g33837e549f89cfed@mail.gmail.com>

Vit Hrachovy <vit.hrachovy at sandbox.cz> wrote:
>  > Apps that need cracks are simply
>  > not convenient or safe enough to merit a gold rating, IMHO.
>
>  Copy protection is for me just an obstacle to skip through...

I think you're setting the bar too low on usability.
Software should not require jumping over obstacles of any sort to reach gold.

Platinum should be obstacle-free and also visually nearly perfect.
- Dan


From dank at kegel.com  Tue Mar  4 07:56:51 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 4 Mar 2008 05:56:51 -0800
Subject: Only three DLLs still failing tests!
Message-ID: <a71bd89a0803040556k3a533de6yebfdb81bb0a7a98d@mail.gmail.com>

For me, only user32, gdi32, and urlmon are failing tests on linux these days.
And there's only one failure in urlmon: stream.c.

Jacek, can you have a look at that urlmon failure?
It'd be cool to be down to just two dlls with test failures!
- Dan


From mrmessiah at gmail.com  Tue Mar  4 08:27:11 2008
From: mrmessiah at gmail.com (Chris Howe)
Date: Tue, 4 Mar 2008 14:27:11 +0000
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803040603k628deda9g33837e549f89cfed@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<47CD5373.8070804@sandbox.cz>
	<a71bd89a0803040551g40e788b8n325d3581b9f7a318@mail.gmail.com>
	<47CD567F.3020507@sandbox.cz>
	<a71bd89a0803040603k628deda9g33837e549f89cfed@mail.gmail.com>
Message-ID: <39c14e440803040627w8311136j39d4f3edbd23337a@mail.gmail.com>

I totally get why you want to make it look like Wine isn't encouraging
cracks, but if that's all that's keeping an app from plat status, one
notch should be enough. How about

Gold: Application works flawlessly with some DLL overrides or other
settings etc. Application may not work correctly due to unsupported
copy protection.

It sounds a bit less like Wine directly saying "works if you crack it".

The thing is, if you bust an app down to bronze that works fine except
for a copy protection issue, all that's going to happen is people are
going to post "wtf? It works fine with a crack" anyway. Especially when
cracking an app you have a right to use isn't illegal in a lot of
juristictions.

--
Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080304/c740bba7/attachment.htm 

From kai.blin at gmail.com  Tue Mar  4 08:35:11 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Tue, 4 Mar 2008 15:35:11 +0100
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
Message-ID: <200803041535.18561.kai.blin@gmail.com>

On Tuesday 04 March 2008 13:15:10 Dan Kegel wrote:
> I've been fighting against the notion that the
> wine project encourages cracks for some time now.
> Cracked versions of apps are bad because they are
> a) illegal (at least in the US),

No argument on the US part. I'm still convinced that by EU laws, you're 
allowed to crack an app you bought in order to make it run on your software. 
As this hasn't been tested in court yet, though, I'll concede.

> b) disrespectful of the author of the app, and

Sometimes I wonder if a "look, we found a legal use for a crack" wouldn't be 
something that could move a publisher to help make his stuff work. Of course 
most publishers probably wouldn't agree to my reasoning in a), making b) a 
moot point.

> c) much more likely to be infected with malware.

No arguments here.

> One place we still do it is in our appdb ratings definitions;
> http://appdb.winehq.org//help/?sTopic=maintainer_ratings
> which say
> "Gold: Application works flawlessly with some DLL overrides or other
> settings, crack etc. "
>
> I propose that we change the appdb ratings definitions
> so that an app that only works with a crack gets no higher
> than bronze.

Fine with me. I agree with your reasoning of having to avoid being associated 
with malware and illegal activities. I think a better solution even for my 
point b) is to publicly support publishers who play nice. Did I mention I 
really like the fact that Blizzard finally decided to not force me to search 
for my star craft cd anymore? :)

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080304/33bcd007/attachment.pgp 

From winehacker at gmail.com  Tue Mar  4 08:46:03 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Tue, 4 Mar 2008 09:46:03 -0500
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803040547t67009b78hd127b7052315f7a8@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<ced95fe0803040506n612aad7bpe1dc03c86d9b6de6@mail.gmail.com>
	<a71bd89a0803040521x48b00e80sbfdd266169558e4a@mail.gmail.com>
	<ced95fe0803040543v147bc064pe9aaa9ab584e185c@mail.gmail.com>
	<a71bd89a0803040547t67009b78hd127b7052315f7a8@mail.gmail.com>
Message-ID: <19e31a080803040646g6672b6ecp2b8c306fec3adca0@mail.gmail.com>

On Tue, Mar 4, 2008 at 8:47 AM, Dan Kegel <dank at kegel.com> wrote:
>  Would you also object to removing high ratings from
>  apps that need cracks?    IMHO "Gold" ought not to
>  imply that one has to seek out a crack (and thereby
>  potentially infect your machine with malware).

To me the whole concept of Gold meaning anything that works our of the
box with no dlloverride changes, is broken. I am willing to concede
Bronze for cracks if Silver means dlloverrides depending on MSFT
runtimes. I have ethical reasons for this that transcend copyright.
Wine dcom development stagnated for too long because we were able to
get by with dcom9x and the thought of certifying an application as
Gold with Microsoft dlls hurts the project long term more than it
helps.


-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From zgold550 at gmail.com  Tue Mar  4 08:48:50 2008
From: zgold550 at gmail.com (Zachary Goldberg)
Date: Tue, 4 Mar 2008 09:48:50 -0500
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <47CD567F.3020507@sandbox.cz>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<47CD5373.8070804@sandbox.cz>
	<a71bd89a0803040551g40e788b8n325d3581b9f7a318@mail.gmail.com>
	<47CD567F.3020507@sandbox.cz>
Message-ID: <b050a5e70803040648g3906d8ebo9b6bd6e96218ca8e@mail.gmail.com>

On Tue, Mar 4, 2008 at 9:02 AM, Vit Hrachovy <vit.hrachovy at sandbox.cz> wrote:
> Dan Kegel wrote:
>  >>  "Gold: Application works flawlessly with some DLL overrides or other
>  >>  settings, etc. Copy protection issues are not considered as issues here."
>  >
>  > Sorry, that doesn't do it for me.  Apps that need cracks are simply
>  > not convenient or safe enough to merit a gold rating, IMHO.
>  > - Dan
>
>  O.K. So I don't agree with Your opinion.
>
>  Gold means for me the application works for me as I expect it to work.

>
>  Copy protection is for me just an obstacle to skip through - I crack all
>  the legal SW I've bought, because I need comfort using the application,
>  not being whipped up by stupid DRM.
>

That opinion unfortunatly is not one a community which may be in the
legal line of site can take.  Dan mentioned before that a large number
of Wine's devs are in the US and in the US using such tactics are
illegal.  The Wine community should respect that, even if it may mean
hindering some usability in the short term.

In an ideal world I agree with you, I am also of the opinion that 'I
bought the software, let me use it on any OS i please'.  However, if
something like copy protection prevents such a thing and the only way
around it use to use a technique deemed illegal by our government we
have no choice but to comply as a community or face really a rather
expensive legal battle.  That doesn't mean we can't make a fuss about
it; attempt to change such a law civilly but in the short term, life's
tough.

>  My priority is SW FUNCTIONALITY.
>
>  For copy protection functionalities we shall then have separate entries
>  in AppDB - as I'm interested in my app functionality, not its DRM.
>
>  I'm happy with the current AppDB state - AppDB is for users, not for
>  patent holders.
>

Sadly in this world we have to always be conscious of both.

>  Regards
>  Vit
>
>
>

Also, +1 to dan's arguement about modifying the definitions of
Gold/Platinum.  Gold should really imply works out of the box with
minor gaps in functionality or crashes, NOT works with overrides +
cracks.  Platinum should imply works out of the box no excuses 100%
working.

I'm also intruiged by the idea of specially flagging apps that work
but need overrides / cracks; if properly thought out that might be a
reasonable solution as well.


-- 
Zachary Goldberg
Computer Science & Engineering
Electrical Captain of Penn Electric Race Team
School of Engineering at the University of Pennsylvania


From jacek at codeweavers.com  Tue Mar  4 09:19:08 2008
From: jacek at codeweavers.com (Jacek Caban)
Date: Tue, 04 Mar 2008 16:19:08 +0100
Subject: Only three DLLs still failing tests!
In-Reply-To: <a71bd89a0803040556k3a533de6yebfdb81bb0a7a98d@mail.gmail.com>
References: <a71bd89a0803040556k3a533de6yebfdb81bb0a7a98d@mail.gmail.com>
Message-ID: <47CD686C.1080005@codeweavers.com>

Hi Dan,

Dan Kegel wrote:
> Jacek, can you have a look at that urlmon failure?
> It'd be cool to be down to just two dlls with test failures!
>   

Can you send me urlmon logs? It doesn't fail for me and I can't see 
failures reports on test.winehq.org.


Thanks,
    Jacek


From frick at sc-networks.de  Tue Mar  4 09:23:46 2008
From: frick at sc-networks.de (Christoph Frick)
Date: Tue, 4 Mar 2008 16:23:46 +0100
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <200803041535.18561.kai.blin@gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<200803041535.18561.kai.blin@gmail.com>
Message-ID: <20080304152346.GF353@byleth.sc-networks.de>

On Tue, Mar 04, 2008 at 03:35:11PM +0100, Kai Blin wrote:

> No argument on the US part. I'm still convinced that by EU laws,
> you're allowed to crack an app you bought in order to make it run on
> your software.  As this hasn't been tested in court yet, though, I'll
> concede.

IANAL, but since 2008 germany adopted a law from a EU proposal (maybe
other countries added it before), that disallows circumventing copy
protections at all. so in theory your statement is not true any longer
for the EU.

-- 
cu
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 163 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080304/70982cfd/attachment.pgp 

From madewokherd+d41d at gmail.com  Tue Mar  4 09:31:40 2008
From: madewokherd+d41d at gmail.com (Vincent Povirk)
Date: Tue, 4 Mar 2008 10:31:40 -0500
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803040547t67009b78hd127b7052315f7a8@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<ced95fe0803040506n612aad7bpe1dc03c86d9b6de6@mail.gmail.com>
	<a71bd89a0803040521x48b00e80sbfdd266169558e4a@mail.gmail.com>
	<ced95fe0803040543v147bc064pe9aaa9ab584e185c@mail.gmail.com>
	<a71bd89a0803040547t67009b78hd127b7052315f7a8@mail.gmail.com>
Message-ID: <ced95fe0803040731i14c0b137ifb0f2e58f490a866@mail.gmail.com>

On Tue, Mar 4, 2008 at 8:47 AM, Dan Kegel <dank at kegel.com> wrote:
>  Would you also object to removing high ratings from
>  apps that need cracks?    IMHO "Gold" ought not to
>  imply that one has to seek out a crack (and thereby
>  potentially infect your machine with malware).
>
Not in principle. The rating system doesn't really change the
information available on the site. For anything that's not Garbage or
Platinum, it's important anyway to look at the entry for more details.

I do agree that treating cracks differently from patches or overrides
would be inconsistent, as those are just as difficult to set up.

As others have pointed out, ratings actually express two different
things: the maximum possible functionality of an app and the
difficulty involved in getting that functionality. Right now, the only
rating that addresses difficulty is Platinum (an app that requires an
override or hack can be anywhere from Bronze to Gold). The ratings
currently look like this:

Garbage: No functionality, impossible to set up
Bronze: Somewhat functional, may require hacks
Silver: Mostly functional, may require hacks
Gold: Fully functional, requires hacks
Platinum: Fully functional, does not require hacks

Something like this might actually make more sense:

Garbage: No functionality, impossible to set up
Bronze: Somewhat functional, may require hacks
Silver: Mostly functional, requires hacks
Gold: Mostly functional, does not require hacks
Platinum: Fully functional, does not require hacks

This would give a fair amount of information about both the level of
functionality and the difficulty, and it would mean anything that
requires hacks cannot be rated Gold. It would also mean a program that
works only with a crack can be rated Silver, but I can't come up with
anything consistent that would force them to be rated Bronze.

-- 
Vincent Povirk


From ben at atomnet.co.uk  Tue Mar  4 09:38:20 2008
From: ben at atomnet.co.uk (Ben Hodgetts)
Date: Tue, 04 Mar 2008 15:38:20 +0000
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <20080304133414.GZ353@byleth.sc-networks.de>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<20080304133414.GZ353@byleth.sc-networks.de>
Message-ID: <47CD6CEC.1070800@atomnet.co.uk>

I'm against lowering the rating for an app that requires a "No CD Patch" 
to run simply because they aren't hard to find or install (normally 
anyway) and when used restores full functionality to the game. Much like 
having to use a native DLL. Lower ratings should be reserved for games 
that have problems which are considerably harder to get working or have 
unresolvable issues (of varying degrees). I have little respect for 
copy-protection schemes due to either a) underhanded methods of 
operation or b) the mess they can create. Normally the only thing they 
end up doing is stopping people that legally own the games from actually 
using them (and this is a good example of that). If people really want 
to pirate games then they wouldn't have much of an issue spending 2 
minutes longer looking for something.

Just my (slightly irritated) 2 pence.

Ben H.


From sbrown7 at umbc.edu  Tue Mar  4 10:02:08 2008
From: sbrown7 at umbc.edu (Steve Brown)
Date: Tue, 4 Mar 2008 11:02:08 -0500 (EST)
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0803041047110.5508@cadence2.gl.umbc.edu>

On Tue, 4 Mar 2008, Dan Kegel wrote:

> "Gold: Application works flawlessly with some DLL overrides or other
> settings, crack etc. "
>
> I propose that we change the appdb ratings definitions
> so that an app that only works with a crack gets no higher
> than bronze.

I have mixed emotions on this -- I can understand the reluctance of folks, 
that are only running an app for the purpose of testing, to shelling out 
several kilobucks for a license... but I also am morally opposed to piracy 
(it's why I got into the Linux realm in the first place).  That said, 
there are a couple proprietary programs that the users I support use that 
have such poor support from the vendor that the users go ahead and buy the 
licenses, but install a crack code -- just because it's easier than 
dealing with the vendors... sigh.

I would vote for trying to find out what the cracks mentioned in the 
database are _really_ about.  Are they to allow offline playing of a game 
that constantly "calls home," license fee avoidance, running on a non-supported
platform, other stuff?  I wouldn't want a tester to "have" to lie about 
whether or not they were running a fully licensed version just to let us 
know about real issues.

Steve Brown
sbrown7 at umbc.edu


From kai.blin at gmail.com  Tue Mar  4 10:08:19 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Tue, 4 Mar 2008 17:08:19 +0100
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <20080304152346.GF353@byleth.sc-networks.de>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<200803041535.18561.kai.blin@gmail.com>
	<20080304152346.GF353@byleth.sc-networks.de>
Message-ID: <200803041708.19713.kai.blin@gmail.com>

On Tuesday 04 March 2008 16:23:46 Christoph Frick wrote:
> On Tue, Mar 04, 2008 at 03:35:11PM +0100, Kai Blin wrote:
> > No argument on the US part. I'm still convinced that by EU laws,
> > you're allowed to crack an app you bought in order to make it run on
> > your software.  As this hasn't been tested in court yet, though, I'll
> > concede.
>
> IANAL, but since 2008 germany adopted a law from a EU proposal (maybe
> other countries added it before), that disallows circumventing copy
> protections at all. so in theory your statement is not true any longer
> for the EU.

Und soweit ich wei? l?uft da gerade eine Verfassungsklage dagegen. Aber 
stimmt, das hatte ich vergessen. :)

Gru?,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080304/13e234ba/attachment.pgp 

From kai.blin at gmail.com  Tue Mar  4 10:14:55 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Tue, 4 Mar 2008 17:14:55 +0100
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <Pine.LNX.4.64.0803041047110.5508@cadence2.gl.umbc.edu>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<Pine.LNX.4.64.0803041047110.5508@cadence2.gl.umbc.edu>
Message-ID: <200803041714.55996.kai.blin@gmail.com>

On Tuesday 04 March 2008 17:02:08 Steve Brown wrote:

> I have mixed emotions on this -- I can understand the reluctance of folks,
> that are only running an app for the purpose of testing, to shelling out
> several kilobucks for a license... but I also am morally opposed to piracy
> (it's why I got into the Linux realm in the first place).  That said,
> there are a couple proprietary programs that the users I support use that
> have such poor support from the vendor that the users go ahead and buy the
> licenses, but install a crack code -- just because it's easier than
> dealing with the vendors... sigh.

Whoa there. That's not what we're talking about. We were never talking about 
piracy or anything like that. It seems like in lots of countries even 
cracking a program you do have a license for is illegal, and that's the only 
use of cracks that Wine ever was talking about.

I agree with Dan that an app where I might have to violate a law to be able to 
run it (even if I rightfully own a license and the system requirements 
said "Win98 or better" and I installed Linux) should not be Gold-rated. Steve 
Edwards also has a point with the psychological effect that might have on 
development.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080304/1db72ba0/attachment.pgp 

From sbrown7 at umbc.edu  Tue Mar  4 10:22:26 2008
From: sbrown7 at umbc.edu (Steve Brown)
Date: Tue, 4 Mar 2008 11:22:26 -0500 (EST)
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803040603k628deda9g33837e549f89cfed@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<47CD5373.8070804@sandbox.cz>
	<a71bd89a0803040551g40e788b8n325d3581b9f7a318@mail.gmail.com>
	<47CD567F.3020507@sandbox.cz>
	<a71bd89a0803040603k628deda9g33837e549f89cfed@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0803041119540.5508@cadence2.gl.umbc.edu>

On Tue, 4 Mar 2008, Dan Kegel wrote:

> Vit Hrachovy <vit.hrachovy at sandbox.cz> wrote:
>> > Apps that need cracks are simply
>> > not convenient or safe enough to merit a gold rating, IMHO.
>>
>>  Copy protection is for me just an obstacle to skip through...
>
> I think you're setting the bar too low on usability.
> Software should not require jumping over obstacles of any sort to reach gold.

Many folks feel that they have to jump over the same bars on Windows -- 
Vit included, it seems.  Much of the commercial software I have to support 
is barely usable on its intended platform (wouldn't even get close to 
silver without "cracks").

Steve Brown
sbrown7 at umbc.edu


From kai.blin at gmail.com  Tue Mar  4 10:18:28 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Tue, 4 Mar 2008 17:18:28 +0100
Subject: Reply-to munging.... (Was: Re: WineHQ should discourage the use of
	cracks)
In-Reply-To: <200803041708.19713.kai.blin@gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<20080304152346.GF353@byleth.sc-networks.de>
	<200803041708.19713.kai.blin@gmail.com>
Message-ID: <200803041718.28812.kai.blin@gmail.com>

On Tuesday 04 March 2008 17:08:19 Kai Blin wrote:

> Und soweit ich wei? l?uft da gerade eine Verfassungsklage dagegen. Aber
> stimmt, das hatte ich vergessen. :)

It's time for another "reply-to munging considered harmful" post, I guess. I 
actually wanted to send this to Christoph. If anyone cares, it says
"IIRC there's someone suing against that new law already. But you're right, I 
forgot about that one."

Sorry about that, I'm kind of used to pressing 'l' if I want to reply to the 
list and 'r' if I want to reply to the author. For wine-devel, I need to 
remember to press 'A' to send to the author.

Cheers,
Kai
-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080304/6697cb2a/attachment.pgp 

From me at gn0me.org  Tue Mar  4 10:34:20 2008
From: me at gn0me.org (Guillaume VanderEst)
Date: Tue, 4 Mar 2008 08:34:20 -0800
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803040547t67009b78hd127b7052315f7a8@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<ced95fe0803040506n612aad7bpe1dc03c86d9b6de6@mail.gmail.com>
	<a71bd89a0803040521x48b00e80sbfdd266169558e4a@mail.gmail.com>
	<ced95fe0803040543v147bc064pe9aaa9ab584e185c@mail.gmail.com>
	<a71bd89a0803040547t67009b78hd127b7052315f7a8@mail.gmail.com>
Message-ID: <2e3390300803040834r4f38224t528d682ec896d24@mail.gmail.com>

On Tue, Mar 4, 2008 at 5:47 AM, Dan Kegel <dank at kegel.com> wrote:

>
> Would you also object to removing high ratings from
> apps that need cracks?    IMHO "Gold" ought not to
> imply that one has to seek out a crack (and thereby
> potentially infect your machine with malware).


If you think about it, we could technically add cracks to the AppDB and
give them platinum rating if they're doing what they're supposed to be
doing. ;-)

But in semi-seriousness, I agree completely.  Legalities of cracking aside,
we're trying to judge if the application works perfectly.  Wording regarding
cracking should probably be removed from the site as it sets a weird tone,
but the RATING of a program should be completely dependent on its working
state out of the box.

If a DLL isn't supported, or something isn't yet programmed, then that is
the
curse of working on a project that isn't 1.0 yet. :-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080304/5cc3332f/attachment.htm 

From madewokherd+d41d at gmail.com  Tue Mar  4 10:47:57 2008
From: madewokherd+d41d at gmail.com (Vincent Povirk)
Date: Tue, 4 Mar 2008 11:47:57 -0500
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <2e3390300803040834r4f38224t528d682ec896d24@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<ced95fe0803040506n612aad7bpe1dc03c86d9b6de6@mail.gmail.com>
	<a71bd89a0803040521x48b00e80sbfdd266169558e4a@mail.gmail.com>
	<ced95fe0803040543v147bc064pe9aaa9ab584e185c@mail.gmail.com>
	<a71bd89a0803040547t67009b78hd127b7052315f7a8@mail.gmail.com>
	<2e3390300803040834r4f38224t528d682ec896d24@mail.gmail.com>
Message-ID: <ced95fe0803040847x174f522et59b53362f024b41b@mail.gmail.com>

On Tue, Mar 4, 2008 at 11:34 AM, Guillaume VanderEst <me at gn0me.org> wrote:
> But in semi-seriousness, I agree completely.  Legalities of cracking aside,
> we're trying to judge if the application works perfectly.  Wording regarding
> cracking should probably be removed from the site as it sets a weird tone,
>  but the RATING of a program should be completely dependent on its working
> state out of the box.

I have to disagree here. The appdb is where people go to find out
about application compatibility, providing some information related to
the question "Will I be able to run this app in Wine, and if so how?".
If we only based ratings on how well applications work out of the box,
a Garbage rating would apply to any app that requires some extra step
to run, even if the extra step is grabbing MFC42.dll and putting it in
system32, as well as any app that no one has been able to run yet.
That's not very useful.

> If a DLL isn't supported, or something isn't yet programmed, then that is the
> curse of working on a project that isn't 1.0 yet. :-)

Not at all. We can expect to see such things happen long after 1.0 is released.

-- 
Vincent Povirk


From dank at kegel.com  Tue Mar  4 10:53:22 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 4 Mar 2008 08:53:22 -0800
Subject: Only three DLLs still failing tests!
In-Reply-To: <47CD686C.1080005@codeweavers.com>
References: <a71bd89a0803040556k3a533de6yebfdb81bb0a7a98d@mail.gmail.com>
	<47CD686C.1080005@codeweavers.com>
Message-ID: <a71bd89a0803040853u9e890a0v6765f8afa5b523b@mail.gmail.com>

On Tue, Mar 4, 2008 at 7:19 AM, Jacek Caban <jacek at codeweavers.com> wrote:
>  Can you send me urlmon logs? It doesn't fail for me and I can't see
>  failures reports on test.winehq.org.

False alarm!  I had some crud in my tree.
So we *are* down to just two DLLs with failing tests!
- Dan


From dank at kegel.com  Tue Mar  4 10:58:56 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 4 Mar 2008 08:58:56 -0800
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <ced95fe0803040731i14c0b137ifb0f2e58f490a866@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<ced95fe0803040506n612aad7bpe1dc03c86d9b6de6@mail.gmail.com>
	<a71bd89a0803040521x48b00e80sbfdd266169558e4a@mail.gmail.com>
	<ced95fe0803040543v147bc064pe9aaa9ab584e185c@mail.gmail.com>
	<a71bd89a0803040547t67009b78hd127b7052315f7a8@mail.gmail.com>
	<ced95fe0803040731i14c0b137ifb0f2e58f490a866@mail.gmail.com>
Message-ID: <a71bd89a0803040858g7e568f0clb225d72190b99e31@mail.gmail.com>

On Tue, Mar 4, 2008 at 7:31 AM, Vincent Povirk
<madewokherd+d41d at gmail.com> wrote:
>  Something like this might actually make more sense:
>
>  Garbage: No functionality, impossible to set up
>  Bronze: Somewhat functional, may require hacks
>  Silver: Mostly functional, requires hacks
>  Gold: Mostly functional, does not require hacks
>  Platinum: Fully functional, does not require hacks
>
>  This would give a fair amount of information about both the level of
>  functionality and the difficulty, and it would mean anything that
>  requires hacks cannot be rated Gold.

That's a step in the right direction.  As long as we don't explicitly
mention cracks, I'm ok with that.
- Dan


From tzi063 at student.uib.no  Tue Mar  4 09:23:16 2008
From: tzi063 at student.uib.no (Tomas Zijdemans)
Date: Tue, 04 Mar 2008 16:23:16 +0100
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <200803041535.18561.kai.blin@gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<200803041535.18561.kai.blin@gmail.com>
Message-ID: <fqjpf1$gc6$1@ger.gmane.org>

> No argument on the US part. I'm still convinced that by EU laws, you're 
> allowed to crack an app you bought in order to make it run on your software. 
> As this hasn't been tested in court yet, though, I'll concede.

This has been tested in the Norwegian court (the famous DVD-Jon case). 
It was ruled that developing, distributing and applying software to make 
software work on your OS is perfectly legal. But then again we don't 
have a horde of those nasty lobbyists over here.

Cheers,

Tomas



From msclrhd at googlemail.com  Tue Mar  4 09:25:56 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Tue, 4 Mar 2008 15:25:56 +0000
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <b050a5e70803040648g3906d8ebo9b6bd6e96218ca8e@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<47CD5373.8070804@sandbox.cz>
	<a71bd89a0803040551g40e788b8n325d3581b9f7a318@mail.gmail.com>
	<47CD567F.3020507@sandbox.cz>
	<b050a5e70803040648g3906d8ebo9b6bd6e96218ca8e@mail.gmail.com>
Message-ID: <3f4fd2640803040725m5293d1b8r2d1f9df4c19e7d07@mail.gmail.com>

On 04/03/2008, Zachary Goldberg <zgold550 at gmail.com> wrote:
> On Tue, Mar 4, 2008 at 9:02 AM, Vit Hrachovy <vit.hrachovy at sandbox.cz> wrote:
>  >  My priority is SW FUNCTIONALITY.
>  >
>  >  For copy protection functionalities we shall then have separate entries
>  >  in AppDB - as I'm interested in my app functionality, not its DRM.
>  >
>  >  I'm happy with the current AppDB state - AppDB is for users, not for
>  >  patent holders.
>
> Sadly in this world we have to always be conscious of both.

I agree. Applications should just work on Wine. If they don't (through
copy protection or missing functionality), it is misleading to
advertise an application as being Gold or Platinum.

>  Also, +1 to dan's arguement about modifying the definitions of
>  Gold/Platinum.  Gold should really imply works out of the box with
>  minor gaps in functionality or crashes, NOT works with overrides +
>  cracks.  Platinum should imply works out of the box no excuses 100%
>  working.

+1

>  I'm also intruiged by the idea of specially flagging apps that work
>  but need overrides / cracks; if properly thought out that might be a
>  reasonable solution as well.

+1

How about if there are two statuses? The first is with no
overrides/cracks/etc., while the second is with documented ways to get
the application working. If the application requires a crack to get
around copy protection, this should be preceeded with a disclaimer
saying that this is not supported by WineHQ, is illegal in some
countries and is likely to contain malware.

For applications like StarCraft, where a patch is available by the
company that removes the copy protection legally, this should be
documented in AppDB and the rating should use the patch by default.

- Reece


From alex at thehandofagony.com  Tue Mar  4 11:53:47 2008
From: alex at thehandofagony.com (Alexander Nicolaysen =?iso-8859-1?q?S=F8rnes?=)
Date: Tue, 4 Mar 2008 18:53:47 +0100
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803040858g7e568f0clb225d72190b99e31@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<ced95fe0803040731i14c0b137ifb0f2e58f490a866@mail.gmail.com>
	<a71bd89a0803040858g7e568f0clb225d72190b99e31@mail.gmail.com>
Message-ID: <200803041853.48238.alex@thehandofagony.com>

> On Tue, Mar 4, 2008 at 7:31 AM, Vincent Povirk
>
> <madewokherd+d41d at gmail.com> wrote:
> >  Something like this might actually make more sense:
> >
> >  Garbage: No functionality, impossible to set up
> >  Bronze: Somewhat functional, may require hacks
> >  Silver: Mostly functional, requires hacks
> >  Gold: Mostly functional, does not require hacks
> >  Platinum: Fully functional, does not require hacks
> >
> >  This would give a fair amount of information about both the level of
> >  functionality and the difficulty, and it would mean anything that
> >  requires hacks cannot be rated Gold.
>
> That's a step in the right direction.  As long as we don't explicitly
> mention cracks, I'm ok with that.
> - Dan


I'm not sure if we should remove the option for 'fully functional, requires 
hacks'.  A lot of people come to the AppDB to find out how they can make 
their apps work, and are more interested in the end result as opposed to how 
to get there.  

It might not be a good idea, but we could always introduce a new rating so 
that we have

> >  Garbage: No functionality, impossible to set up
> >  Bronze: Somewhat functional, may require hacks
> >  Silver: Mostly functional, requires hacks
> >  Gold: Mostly functional, does not require hacks
>>   Ivory: Fully functional, requires hacks
> >  Platinum: Fully functional, does not require hacks


Not saying it's a good idea.

Otherwise, adding a 'difficulty' field sounds interesting.  This would allow 
users to easily avoid apps that require a really complicated work-around, 
such as patching and compiling Wine.  Then we could also add an option to 
turn on warnings if an app requires a crack, or we could censor it 
automatically based on GeoIP data.


Regards,

Alexander N. S?rnes



From dank at kegel.com  Tue Mar  4 12:04:47 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 4 Mar 2008 10:04:47 -0800
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <200803041853.48238.alex@thehandofagony.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<ced95fe0803040731i14c0b137ifb0f2e58f490a866@mail.gmail.com>
	<a71bd89a0803040858g7e568f0clb225d72190b99e31@mail.gmail.com>
	<200803041853.48238.alex@thehandofagony.com>
Message-ID: <a71bd89a0803041004s600ab521vc20b2f529d78bae8@mail.gmail.com>

On Tue, Mar 4, 2008 at 9:53 AM, Alexander Nicolaysen S?rnes
<alex at thehandofagony.com> wrote:
>  It might not be a good idea, but we could always introduce a new rating so
>  that we have
>
>
>  > >  Garbage: No functionality, impossible to set up
>  > >  Bronze: Somewhat functional, may require hacks
>  > >  Silver: Mostly functional, requires hacks
>  > >  Gold: Mostly functional, does not require hacks
>  > >   Ivory: Fully functional, requires hacks
>  > >  Platinum: Fully functional, does not require hacks
>
>  Not saying it's a good idea.

Too complicated.  Reminds me of the us government's terror threat
level index :-)

>  Otherwise, adding a 'difficulty' field sounds interesting.  This would allow
>  users to easily avoid apps that require a really complicated work-around,
>  such as patching and compiling Wine.  Then we could also add an option to
>  turn on warnings if an app requires a crack, or we could censor it
>  automatically based on GeoIP data.

Tempting but I think ultimately too complicated.   I think we should
stick with a single rating scheme that requires 'no fiddling' for gold
or platinum.


From madewokherd+d41d at gmail.com  Tue Mar  4 12:58:12 2008
From: madewokherd+d41d at gmail.com (Vincent Povirk)
Date: Tue, 4 Mar 2008 13:58:12 -0500
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <200803041853.48238.alex@thehandofagony.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<ced95fe0803040731i14c0b137ifb0f2e58f490a866@mail.gmail.com>
	<a71bd89a0803040858g7e568f0clb225d72190b99e31@mail.gmail.com>
	<200803041853.48238.alex@thehandofagony.com>
Message-ID: <ced95fe0803041058q325a7b24u52299f3c652cf445@mail.gmail.com>

On Tue, Mar 4, 2008 at 12:53 PM, Alexander Nicolaysen S?rnes
<alex at thehandofagony.com> wrote:
>  I'm not sure if we should remove the option for 'fully functional, requires
>  hacks'.  A lot of people come to the AppDB to find out how they can make
>  their apps work, and are more interested in the end result as opposed to how
>  to get there.

In practice, is there really enough difference between "fully
functional" and "mostly functional" that we need another rating?
People who only care about the end result would know that anything
Silver or above will just about work.

I've seen Gold applied to software that is really "mostly functional,
requires hacks", i.e. there are some other minor problems that can't
be worked around (and Platinum for software with minor problems as
well).


Then again, if we add a few more variables, we can express the ratings
with radar charts. ;)

http://img231.imageshack.us/img231/9466/screenshot5ec1.png

-- 
Vincent Povirk


From research at science.su  Tue Mar  4 13:52:13 2008
From: research at science.su (L. Rahyen)
Date: Tue, 4 Mar 2008 19:52:13 +0000
Subject: Winecfg: Raise max screen resolution to 160 DPI
In-Reply-To: <b6bb06270803032029q6fd721b6ue4287d0c75a1ae22@mail.gmail.com>
References: <b6bb06270803032029q6fd721b6ue4287d0c75a1ae22@mail.gmail.com>
Message-ID: <200803041952.13428.research@science.su>

	Your patch isn't correct. Just try this:

rm -rf ~/.wine
wineprefixcreate
winecfg

	Go to Graphics tab and set any resolution more than 127 DPI (for example, 
150). Close winecfg. Run it again. Now you have 63 DPI (instead of 150; in 
fact anything bigger than 127 DPI will not be displayed correctly in winecfg).

	This problem was already solved in this patch [1] by Nigel Liang. 
Unfortunately, it wasn't accepted and Nigel didn't tried to ask why it was 
rejected or to resend it.
	I think I will go ahead and resend his patch.

[1] http://www.winehq.org/pipermail/wine-patches/2007-October/044977.html


From truiken at gmail.com  Tue Mar  4 14:03:09 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 4 Mar 2008 14:03:09 -0600
Subject: (resend) msi: Fix bug in handling of multivolume CAB files.
In-Reply-To: <47CD8C1A.3060607@transgaming.com>
References: <47CD8C1A.3060607@transgaming.com>
Message-ID: <22821af30803041203s1fdd170bn1f8f8fdb85c5f798@mail.gmail.com>

On Tue, Mar 4, 2008 at 11:51 AM, Ove Kaaven <ovek at transgaming.com> wrote:
> The email address in the patch was wrong, sending it again.
>
>
> >From b88a43dbc2234c8b35ee4fa7bb4f275475b8d821 Mon Sep 17 00:00:00 2001
>  From: Ove Kaaven <ovek at transgaming.com>
>  Date: Tue, 4 Mar 2008 18:16:27 +0100
>  Subject: [PATCH] Fix bug in handling of multivolume CAB files.
>   After extracting a single file from a multivolume CAB file, sometimes
>   information about the next CAB file to extract from would not be loaded,
>   because the is_continuous state was previously only properly reset if a
>   file happened to be partially extracted from the last volume of a
>   multivolume series.
>

A lot of time has been spent fixing cab/media related bugs in
installers, as the behavior is very fickle (and easily breakable), so
can you please add a test case first?  See the multicab tests that are
already in install.c.  They will fail in wine because our cabinet.dll
cannot create compressed cabinets, but assuming you test in Windows or
use native cabinet.dll, it'll still verify that the patch is correct.

-- 
James Hawkins


From dank at kegel.com  Tue Mar  4 14:07:20 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 4 Mar 2008 12:07:20 -0800
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <ced95fe0803041058q325a7b24u52299f3c652cf445@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<ced95fe0803040731i14c0b137ifb0f2e58f490a866@mail.gmail.com>
	<a71bd89a0803040858g7e568f0clb225d72190b99e31@mail.gmail.com>
	<200803041853.48238.alex@thehandofagony.com>
	<ced95fe0803041058q325a7b24u52299f3c652cf445@mail.gmail.com>
Message-ID: <a71bd89a0803041207q7ea05735g99ec196564df19a4@mail.gmail.com>

Vincent Povirk <madewokherd+d41d at gmail.com> wrote:
>If we only based ratings on how well applications work out of the box,
>a Garbage rating would apply to any app that requires some extra step
>to run, even if the extra step is grabbing MFC42.dll and putting it in
>system32

This is a valid concern.  I think we may end up having to
deal with this by providing an easy, standard way to
install the most commonly needed, legally redistributable
dependencies.   For instance, we might bundle a couple
of key demo apps with Wine; if we choose carefully,
we can probably find a set of apps that will just happen to
install all the commonly needed redistributables.
- Dan


From winehacker at gmail.com  Tue Mar  4 14:16:35 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Tue, 4 Mar 2008 15:16:35 -0500
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803041207q7ea05735g99ec196564df19a4@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<ced95fe0803040731i14c0b137ifb0f2e58f490a866@mail.gmail.com>
	<a71bd89a0803040858g7e568f0clb225d72190b99e31@mail.gmail.com>
	<200803041853.48238.alex@thehandofagony.com>
	<ced95fe0803041058q325a7b24u52299f3c652cf445@mail.gmail.com>
	<a71bd89a0803041207q7ea05735g99ec196564df19a4@mail.gmail.com>
Message-ID: <19e31a080803041216u3523e4adw36f39fdec152346@mail.gmail.com>

On Tue, Mar 4, 2008 at 3:07 PM, Dan Kegel <dank at kegel.com> wrote:
>  This is a valid concern.  I think we may end up having to
>  deal with this by providing an easy, standard way to
>  install the most commonly needed, legally redistributable
>  dependencies.   For instance, we might bundle a couple
>  of key demo apps with Wine; if we choose carefully,
>  we can probably find a set of apps that will just happen to
>  install all the commonly needed redistributables.

This really sounds like an issue for distribution maintainers, OEMs,
Vars and Wine companies like CodeWeavers. I really don't think Winehq
should ever get in to a position of shipping third party runtimes via
back door demos. If you want to do it in Winetricks or if the Bordeaux
and PlayOnLinux guys want to do it, more power to you. Nothing stops
you from making your own Wine package and distributing it however you
like with whatever third party runtimes and demos that you like.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From denver at ossguy.com  Tue Mar  4 16:09:10 2008
From: denver at ossguy.com (Denver Gingerich)
Date: Tue, 4 Mar 2008 17:09:10 -0500
Subject: Screen mode retrieval/trace tool for Windows
Message-ID: <6defe8840803041409i6167ee19wf1003817672c02fe@mail.gmail.com>

I am trying to trace the sequence of screen mode
(resolution/bpp/refresh rate) changes that occur when StarCraft is run
in Windows so that I can make Wine emulate Windows' behavior.  Right
now I'm trying to see exactly what resolution, bits per pixel, and
refresh rate StarCraft is using.  Unfortunately, I can't just go into
Display Properties while StarCraft is running because it switches the
resolution back when you Alt-Tab out of the game.

My current plan is to install an SSH or telnet server on the Windows
machine and run a command line tool to check the current screen mode
while StarCraft is running.   I have used a couple of command-line
tools for changing the screen mode [1] [2], but neither of them have
an option to list the current mode.  Does anyone know of a tool or can
anyone quickly create a tool that will list the resolution currently
in use from the command line?

I have tried using StraceNT [3] to see the parameters passed to
ChangeDisplaySettingsEx (which is the function StarCraft uses to
change the resolution), but it does not let me look at the DEVMODE
structure that is passed in.  Does anyone know of a trace tool that
would let me do that?

Based on my testing so far, there appears to be a discrepancy in how
Windows and Wine set the refresh rate if none is specified on a
resolution change.  Wine always picks the first mode with a matching
resolution, while Windows does not.  My tests in Windows have shown
that even though StarCraft asks for 640x480 and the first mode with
that resolution has a 60 Hz refresh rate, Windows chooses a higher
refresh rate.  Unfortunately, I don't know exactly which refresh rate,
but I can verify by sight that 60 Hz is not being used (the screen
doesn't flicker as it would at 60 Hz).  This discrepancy is why I wish
to run further tests and acquire more precise information about the
refresh rate being used.

I am performing this testing according to a request in a previous
thread [4].  If you have any questions about my testing, please let me
know.

Denver


1. http://www.vrdevelopers.de/content/view/15/44/
2. http://www.nirsoft.net/utils/nircmd.html
3. http://www.intellectualheaven.com/default.asp?BH=projects&H=strace.htm
4. http://www.winehq.org/pipermail/wine-devel/2008-March/063150.html


From us at edmeades.me.uk  Tue Mar  4 16:28:19 2008
From: us at edmeades.me.uk (Ann & Jason Edmeades)
Date: Tue, 4 Mar 2008 22:28:19 -0000
Subject: Summer of code 2008 - cmd.exe compatibility?
In-Reply-To: <558b2f5c0803031552l6694951s1b90bbb4c0a75132@mail.gmail.com>
Message-ID: <002601c87e47$1523baa0$1001a8c0@JasonsPC>

>>  Out of interest, what is meant by improving cmd.exe compatibility?

>Add support for all the cmd.exe switches and all the dos batch
>programming constructs?

I do track bugzilla for any cmd.exe issues regularly and aside from one
which I started work on, I don't know of any other batch issues. I spent
quite a bit of time working on cmd.exe compatibility, including adding the
newer 'odd' syntax (e.g. %~$PATH:i) and getting it as close to native as
possible. Additionally, the 'missing' commands are almost all external
applications, not inbuilt to the command shell.

I do know of some differences, but few apps require complex batch. You can
download some complex batch which require specific text to come out from
specific commands, but if no real app needs them, its not worth persuing
yet.

Jason




From vit.hrachovy at sandbox.cz  Tue Mar  4 16:37:37 2008
From: vit.hrachovy at sandbox.cz (=?ISO-8859-2?Q?V=EDt_Hrachov=FD?=)
Date: Tue, 04 Mar 2008 23:37:37 +0100
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <a71bd89a0803040858g7e568f0clb225d72190b99e31@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>	<ced95fe0803040506n612aad7bpe1dc03c86d9b6de6@mail.gmail.com>	<a71bd89a0803040521x48b00e80sbfdd266169558e4a@mail.gmail.com>	<ced95fe0803040543v147bc064pe9aaa9ab584e185c@mail.gmail.com>	<a71bd89a0803040547t67009b78hd127b7052315f7a8@mail.gmail.com>	<ced95fe0803040731i14c0b137ifb0f2e58f490a866@mail.gmail.com>
	<a71bd89a0803040858g7e568f0clb225d72190b99e31@mail.gmail.com>
Message-ID: <47CDCF31.4080702@sandbox.cz>

Dan Kegel wrote:
> On Tue, Mar 4, 2008 at 7:31 AM, Vincent Povirk
> <madewokherd+d41d at gmail.com> wrote:
>>  Something like this might actually make more sense:
>>
>>  Garbage: No functionality, impossible to set up
>>  Bronze: Somewhat functional, may require hacks
>>  Silver: Mostly functional, requires hacks
>>  Gold: Mostly functional, does not require hacks
>>  Platinum: Fully functional, does not require hacks
>>
>>  This would give a fair amount of information about both the level of
>>  functionality and the difficulty, and it would mean anything that
>>  requires hacks cannot be rated Gold.
> 
> That's a step in the right direction.  As long as we don't explicitly
> mention cracks, I'm ok with that.
> - Dan

+1

Vit


From willz06jw at gmail.com  Tue Mar  4 18:05:30 2008
From: willz06jw at gmail.com (Will Howard)
Date: Tue, 4 Mar 2008 18:05:30 -0600
Subject: Don't know if this is the right place to ask this but...
Message-ID: <47cde3e1.37e9220a.7c3b.1246@mx.google.com>

Howdy,

 

I'm trying to help find memory leaks for wine
http://wiki.winehq.org/MemoryLeaks and I'm having some issues figuring out
Valgrind.  

 

#1 How do you know if Valgrind is working properly (AKA everything is
patched and working).  

#2 How do you decifer the output to start looking for bugs.

 

Thanks for the help,

Will

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080304/3141bb62/attachment-0001.htm 

From melbournemark+wine-devel at gmail.com  Tue Mar  4 18:38:59 2008
From: melbournemark+wine-devel at gmail.com (mark cox)
Date: Wed, 5 Mar 2008 11:38:59 +1100
Subject: Screen mode retrieval/trace tool for Windows
In-Reply-To: <6defe8840803041409i6167ee19wf1003817672c02fe@mail.gmail.com>
References: <6defe8840803041409i6167ee19wf1003817672c02fe@mail.gmail.com>
Message-ID: <e2c9b5730803041638v53bf109eg17e8dd651742f629@mail.gmail.com>

Perhaps use detours to hook the ChangeDisplaySettingsEx function and dump
the devmode structure to a file?
Regards,
mark


On Wed, Mar 5, 2008 at 9:09 AM, Denver Gingerich <denver at ossguy.com> wrote:

> I am trying to trace the sequence of screen mode
> (resolution/bpp/refresh rate) changes that occur when StarCraft is run
> in Windows so that I can make Wine emulate Windows' behavior.  Right
> now I'm trying to see exactly what resolution, bits per pixel, and
> refresh rate StarCraft is using.  Unfortunately, I can't just go into
> Display Properties while StarCraft is running because it switches the
> resolution back when you Alt-Tab out of the game.
>
> My current plan is to install an SSH or telnet server on the Windows
> machine and run a command line tool to check the current screen mode
> while StarCraft is running.   I have used a couple of command-line
> tools for changing the screen mode [1] [2], but neither of them have
> an option to list the current mode.  Does anyone know of a tool or can
> anyone quickly create a tool that will list the resolution currently
> in use from the command line?
>
> I have tried using StraceNT [3] to see the parameters passed to
> ChangeDisplaySettingsEx (which is the function StarCraft uses to
> change the resolution), but it does not let me look at the DEVMODE
> structure that is passed in.  Does anyone know of a trace tool that
> would let me do that?
>
> Based on my testing so far, there appears to be a discrepancy in how
> Windows and Wine set the refresh rate if none is specified on a
> resolution change.  Wine always picks the first mode with a matching
> resolution, while Windows does not.  My tests in Windows have shown
> that even though StarCraft asks for 640x480 and the first mode with
> that resolution has a 60 Hz refresh rate, Windows chooses a higher
> refresh rate.  Unfortunately, I don't know exactly which refresh rate,
> but I can verify by sight that 60 Hz is not being used (the screen
> doesn't flicker as it would at 60 Hz).  This discrepancy is why I wish
> to run further tests and acquire more precise information about the
> refresh rate being used.
>
> I am performing this testing according to a request in a previous
> thread [4].  If you have any questions about my testing, please let me
> know.
>
> Denver
>
>
> 1. http://www.vrdevelopers.de/content/view/15/44/
> 2. http://www.nirsoft.net/utils/nircmd.html
> 3. http://www.intellectualheaven.com/default.asp?BH=projects&H=strace.htm
> 4. http://www.winehq.org/pipermail/wine-devel/2008-March/063150.html
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080305/772b38ea/attachment.htm 

From ovek at transgaming.com  Tue Mar  4 19:01:33 2008
From: ovek at transgaming.com (Ove Kaaven)
Date: Wed, 05 Mar 2008 02:01:33 +0100
Subject: (resend) msi: Fix bug in handling of multivolume CAB files.
In-Reply-To: <22821af30803041203s1fdd170bn1f8f8fdb85c5f798@mail.gmail.com>
References: <47CD8C1A.3060607@transgaming.com>
	<22821af30803041203s1fdd170bn1f8f8fdb85c5f798@mail.gmail.com>
Message-ID: <47CDF0ED.1060203@transgaming.com>

James Hawkins skrev:
> A lot of time has been spent fixing cab/media related bugs in
> installers, as the behavior is very fickle (and easily breakable), so
> can you please add a test case first?  See the multicab tests that are
> already in install.c.  They will fail in wine because our cabinet.dll
> cannot create compressed cabinets, but assuming you test in Windows or
> use native cabinet.dll, it'll still verify that the patch is correct.

Using native cabinet.dll from XP causes numerous failures in those tests 
(notably in caborder, if I remember right). I probably won't really have 
time to track that down right now.

But it seems that I am able to use builtin cabinet if I change 
create_cc_test_files to use a maxsize of 40000 or whatever instead of 
200, so that it creates 2 cabfiles instead of 615. (That routine creates 
something close to the situation I originally described, too.) And if I 
try it that way, my patch seems to fix the todo tests at lines 1733 and 
1734 (in test_uiLevelFlags), for some reason. Is that good enough?


From mike at fireburn.co.uk  Tue Mar  4 19:12:02 2008
From: mike at fireburn.co.uk (Mike Lothian)
Date: Wed, 5 Mar 2008 01:12:02 +0000
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <200803041853.48238.alex@thehandofagony.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<ced95fe0803040731i14c0b137ifb0f2e58f490a866@mail.gmail.com>
	<a71bd89a0803040858g7e568f0clb225d72190b99e31@mail.gmail.com>
	<200803041853.48238.alex@thehandofagony.com>
Message-ID: <f3f71ab90803041712q245df82bi4687ec2a3601d73@mail.gmail.com>

What About:

 <madewokherd+d41d at gmail.com> wrote:
>  Something like this might actually make more sense:
>
>  Garbage: No functionality, impossible to set up
>  Bronze: Somewhat functional, may require hacks
>  Silver: Mostly functional, requires hacks
Fools Gold: Fully functional, requires hacks
>  Gold: Mostly functional, does not require hacks
>  Platinum: Fully functional, does not require hacks


Since only a fool would use a crack that's possibly Malware, or use a
piece of code that's from Microsoft


From truiken at gmail.com  Tue Mar  4 19:20:56 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 4 Mar 2008 19:20:56 -0600
Subject: (resend) msi: Fix bug in handling of multivolume CAB files.
In-Reply-To: <47CDF0ED.1060203@transgaming.com>
References: <47CD8C1A.3060607@transgaming.com>
	<22821af30803041203s1fdd170bn1f8f8fdb85c5f798@mail.gmail.com>
	<47CDF0ED.1060203@transgaming.com>
Message-ID: <22821af30803041720j2a791f09yc1fae29311dd7b6c@mail.gmail.com>

On Tue, Mar 4, 2008 at 7:01 PM, Ove Kaaven <ovek at transgaming.com> wrote:
> James Hawkins skrev:
>
> > A lot of time has been spent fixing cab/media related bugs in
>  > installers, as the behavior is very fickle (and easily breakable), so
>  > can you please add a test case first?  See the multicab tests that are
>  > already in install.c.  They will fail in wine because our cabinet.dll
>  > cannot create compressed cabinets, but assuming you test in Windows or
>  > use native cabinet.dll, it'll still verify that the patch is correct.
>
>  Using native cabinet.dll from XP causes numerous failures in those tests
>  (notably in caborder, if I remember right). I probably won't really have
>  time to track that down right now.
>
>  But it seems that I am able to use builtin cabinet if I change
>  create_cc_test_files to use a maxsize of 40000 or whatever instead of
>  200, so that it creates 2 cabfiles instead of 615. (That routine creates
>  something close to the situation I originally described, too.) And if I
>  try it that way, my patch seems to fix the todo tests at lines 1733 and
>  1734 (in test_uiLevelFlags), for some reason. Is that good enough?
>

The tests that now pass with native cabinet dll are test_continuouscab
(which is similar to what you're trying to test).  The point of
maxsize is so that it creates continuous cabs...there's no other way
to do it, and builtin doesn't create continuous cabs at all.  The
answer to your question is no, because there is no test currently that
runs down the code path you are fixing.

-- 
James Hawkins


From stefan at codeweavers.com  Tue Mar  4 19:33:37 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Wed, 5 Mar 2008 02:33:37 +0100
Subject: Screen mode retrieval/trace tool for Windows
In-Reply-To: <e2c9b5730803041638v53bf109eg17e8dd651742f629@mail.gmail.com>
References: <6defe8840803041409i6167ee19wf1003817672c02fe@mail.gmail.com>
	<e2c9b5730803041638v53bf109eg17e8dd651742f629@mail.gmail.com>
Message-ID: <200803050233.39875.stefan@codeweavers.com>

Am Mittwoch, 5. M?rz 2008 01:38:59 schrieb mark cox:
> Perhaps use detours to hook the ChangeDisplaySettingsEx function and dump
> the devmode structure to a file?
That's rather complex, a simple C app calling 
EnumDisplaySettingsEx(ENUM_CURRENT_MODE) called from command line should do 
that as well, and it is much easier to write


-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080305/b616c141/attachment.pgp 

From austinenglish at gmail.com  Tue Mar  4 20:08:09 2008
From: austinenglish at gmail.com (Austin English)
Date: Tue, 4 Mar 2008 20:08:09 -0600
Subject: Winecfg: Raise max screen resolution to 160 DPI
In-Reply-To: <200803041952.13428.research@science.su>
References: <b6bb06270803032029q6fd721b6ue4287d0c75a1ae22@mail.gmail.com>
	<200803041952.13428.research@science.su>
Message-ID: <b6bb06270803041808wc72deb8h1a7086f3c62f0470@mail.gmail.com>

On Tue, Mar 4, 2008 at 1:52 PM, L. Rahyen <research at science.su> wrote:
>         Your patch isn't correct. Just try this:
>
>  rm -rf ~/.wine
>  wineprefixcreate
>  winecfg
>
>         Go to Graphics tab and set any resolution more than 127 DPI (for example,
>  150). Close winecfg. Run it again. Now you have 63 DPI (instead of 150; in
>  fact anything bigger than 127 DPI will not be displayed correctly in winecfg).
>
>         This problem was already solved in this patch [1] by Nigel Liang.
>  Unfortunately, it wasn't accepted and Nigel didn't tried to ask why it was
>  rejected or to resend it.
>         I think I will go ahead and resend his patch.
>
>  [1] http://www.winehq.org/pipermail/wine-patches/2007-October/044977.html
>
>
>

Please apply Nigel's patch, thus reverting my own. I tested on my
machine, but didn't catch this problem.

Thanks Rahyen for catching this, and sorry for the mistake.

-Austin


From dank at kegel.com  Tue Mar  4 20:11:57 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 4 Mar 2008 18:11:57 -0800
Subject: Don't know if this is the right place to ask this but...
Message-ID: <a71bd89a0803041811t62c5bd8avf48e72adfb33dc17@mail.gmail.com>

Will Howard willz06jw at gmail.com wrote:
>#1 How do you know if Valgrind is working properly (AKA everything is
>patched and working).
>
>#2 How do you decifer the output to start looking for bugs.

Here's some example output (cleaned up a bit by
my perl script, http://kegel.com/wine/valgrind/valgrind-split-pl.txt) is at:
http://kegel.com/wine/valgrind/logs-2008-03-03/vg-ws2_32_sock.txt

That particular output file says

 Syscall param socketcall.sendmsg(msg.msg_iov[i]) points to
uninitialised byte(s)
    at  (within /lib/ld-2.6.1.so)
    by  WSASendTo (socket.c:2674)
    by  WS_sendto (socket.c:2827)
    by  test_UDP (sock.c:1055)
    by  func_sock (sock.c:1985)
    by  run_test (test.h:406)
    by  main (test.h:455)

This means there may be a bug somewhere near some of the lines mentioned.
Sadly, only filename are given, not directories, so you kind of have
to guess whether the files in question are in the directory ws2_32 or
ws2_32/tests (or somewhere else).

The thing to do is to read and understand the test with the issue.

The course of action will then be obvious :-)

Did I mention you have to really understand the test?
- Dan


From remco47 at yahoo.com  Tue Mar  4 20:39:01 2008
From: remco47 at yahoo.com (Remco)
Date: Tue, 4 Mar 2008 18:39:01 -0800 (PST)
Subject: WineHQ should discourage the use of cracks
Message-ID: <142906.45998.qm@web50103.mail.re2.yahoo.com>

Or how about this:

::Wine Compatibility::
( ) Doesn't work at all [Garbage]
( ) Starts, but not very usable [Bronze]
( ) Basically works, a few bugs [Silver]
(*) Works flawlessly [Gold]

::Extra Info::
[x] Needs Wine configuration (Windows version, sound options, regedit entries, etc.)
[x] Needs a Windows DLL (has legal issues)
[x] Needs a third party hack (has legal issues)

If Gold and no tick boxes are selected: Works out of the box! [Platinum]

The Extra Info tick boxes could be represented as icons accompanying the color-based Status wherever it goes. The icons should probably give a negative impression. A red color for example, although that might not get across very well, considering the color palette of WineHQ... ;)

The "has legal issues" should link to a Wine Wiki page which explains exactly what those issues are and that specific discussion on how to get those things working is not allowed at winehq.org, the mailing lists, the newsgroup or the IRC channel.

Remco



      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs


From dmitry at codeweavers.com  Tue Mar  4 20:55:34 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Wed, 5 Mar 2008 10:55:34 +0800
Subject: Winecfg: Raise max screen resolution to 160 DPI
References: <b6bb06270803032029q6fd721b6ue4287d0c75a1ae22@mail.gmail.com>
	<200803041952.13428.research@science.su>
Message-ID: <00d501c87e6c$651c2450$a600fea9@DMITRY>

"L. Rahyen" <research at science.su> wrote:

> This problem was already solved in this patch [1] by Nigel Liang. 
> Unfortunately, it wasn't accepted and Nigel didn't tried to ask why it was 
> rejected or to resend it.
> I think I will go ahead and resend his patch.
> 
> [1] http://www.winehq.org/pipermail/wine-patches/2007-October/044977.html

MultiByteToWideChar is that patch passes negative length for the destination
buffer which is incorrect.

-- 
Dmitry.


From denver at ossguy.com  Tue Mar  4 20:56:26 2008
From: denver at ossguy.com (Denver Gingerich)
Date: Tue, 4 Mar 2008 18:56:26 -0800
Subject: Screen mode retrieval/trace tool for Windows
In-Reply-To: <200803050233.39875.stefan@codeweavers.com>
References: <6defe8840803041409i6167ee19wf1003817672c02fe@mail.gmail.com>
	<e2c9b5730803041638v53bf109eg17e8dd651742f629@mail.gmail.com>
	<200803050233.39875.stefan@codeweavers.com>
Message-ID: <6defe8840803041856t79bfd059n27ff248b2ce5083a@mail.gmail.com>

On Tue, Mar 4, 2008 at 5:33 PM, Stefan D?singer <stefan at codeweavers.com> wrote:
> Am Mittwoch, 5. M?rz 2008 01:38:59 schrieb mark cox:
>
> > Perhaps use detours to hook the ChangeDisplaySettingsEx function and dump
>  > the devmode structure to a file?
>  That's rather complex, a simple C app calling
>  EnumDisplaySettingsEx(ENUM_CURRENT_MODE) called from command line should do
>  that as well, and it is much easier to write

I'm having some trouble getting such an app compiled.  I'm using MinGW
5.1.3 on Windows XP.  Here's what's happening:

>type x.c
#include <windows.h>

int main()
{
        DEVMODE dm;
        dm.dmSize = sizeof(dm);
        EnumDisplaySettingsEx(NULL, ENUM_CURRENT_SETTINGS, &dm, 0);
        return 0;
}

>gcc -c x.c

>gcc -lgdi32 -luser32 -o x x.o -mwindows
x.o:x.c:(.text+0x5e): undefined reference to `EnumDisplaySettingsExA'
collect2: ld returned 1 exit status


I'm not very familiar with building applications that use the Windows
API with MinGW so it's very likely that I made a silly mistake.
Suggestions on how to fix this would be appreciated.

Denver


From dmitry at codeweavers.com  Tue Mar  4 21:07:56 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Wed, 5 Mar 2008 11:07:56 +0800
Subject: Screen mode retrieval/trace tool for Windows
References: <6defe8840803041409i6167ee19wf1003817672c02fe@mail.gmail.com><e2c9b5730803041638v53bf109eg17e8dd651742f629@mail.gmail.com><200803050233.39875.stefan@codeweavers.com>
	<6defe8840803041856t79bfd059n27ff248b2ce5083a@mail.gmail.com>
Message-ID: <011301c87e6e$1f690de0$a600fea9@DMITRY>

"Denver Gingerich" <denver at ossguy.com> wrote:

> >gcc -lgdi32 -luser32 -o x x.o -mwindows
> x.o:x.c:(.text+0x5e): undefined reference to `EnumDisplaySettingsExA'
> collect2: ld returned 1 exit status
> 
> 
> I'm not very familiar with building applications that use the Windows
> API with MinGW so it's very likely that I made a silly mistake.
> Suggestions on how to fix this would be appreciated.

You could try EnumDisplaySettings instead.

-- 
Dmitry.



From denver at ossguy.com  Tue Mar  4 21:19:11 2008
From: denver at ossguy.com (Denver Gingerich)
Date: Tue, 4 Mar 2008 19:19:11 -0800
Subject: Screen mode retrieval/trace tool for Windows
In-Reply-To: <011301c87e6e$1f690de0$a600fea9@DMITRY>
References: <6defe8840803041409i6167ee19wf1003817672c02fe@mail.gmail.com>
	<e2c9b5730803041638v53bf109eg17e8dd651742f629@mail.gmail.com>
	<200803050233.39875.stefan@codeweavers.com>
	<6defe8840803041856t79bfd059n27ff248b2ce5083a@mail.gmail.com>
	<011301c87e6e$1f690de0$a600fea9@DMITRY>
Message-ID: <6defe8840803041919p9f7eed7ueec4bfdaeb87f3ad@mail.gmail.com>

On Tue, Mar 4, 2008 at 7:07 PM, Dmitry Timoshkov <dmitry at codeweavers.com> wrote:
> "Denver Gingerich" <denver at ossguy.com> wrote:
>
>
> > >gcc -lgdi32 -luser32 -o x x.o -mwindows
>  > x.o:x.c:(.text+0x5e): undefined reference to `EnumDisplaySettingsExA'
>  > collect2: ld returned 1 exit status
>  >
>  >
>  > I'm not very familiar with building applications that use the Windows
>  > API with MinGW so it's very likely that I made a silly mistake.
>  > Suggestions on how to fix this would be appreciated.
>
>  You could try EnumDisplaySettings instead.

Surprisingly (to me), that worked.  Thanks for the tip.  I'll report
back after I've run the tests.

Denver


From leslie_alistair at hotmail.com  Tue Mar  4 21:51:55 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Wed, 5 Mar 2008 14:51:55 +1100
Subject: Regession tests
References: <fq392s$69o$1@ger.gmane.org> <47C531C9.9050600@gmail.com>
	<fqglgm$n3u$1@ger.gmane.org>
Message-ID: <fql5d0$ghk$1@ger.gmane.org>

> What is the best way to narrow down what is causing the crash?
> 
Will answer my own quetsion.

Install mingw

1. Run "make crosstest" in the releavent directory
2. Copy to exe to Windows and run
3. Modify test(s) to correct issue(s)
4. Rinse and Repeat.

Best Regards
 Alistair Leslie-Hughes



From patrol at sinus.cz  Wed Mar  5 00:02:37 2008
From: patrol at sinus.cz (Pavel Troller)
Date: Wed, 5 Mar 2008 07:02:37 +0100
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <20080304152346.GF353@byleth.sc-networks.de>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<200803041535.18561.kai.blin@gmail.com>
	<20080304152346.GF353@byleth.sc-networks.de>
Message-ID: <20080305060237.GA1583@tangens.sinus.cz>

> On Tue, Mar 04, 2008 at 03:35:11PM +0100, Kai Blin wrote:
> 
> > No argument on the US part. I'm still convinced that by EU laws,
> > you're allowed to crack an app you bought in order to make it run on
> > your software.  As this hasn't been tested in court yet, though, I'll
> > concede.
> 
> IANAL, but since 2008 germany adopted a law from a EU proposal (maybe
> other countries added it before), that disallows circumventing copy
> protections at all. so in theory your statement is not true any longer
> for the EU.
> 
Hi!
  Here, in Czech Republic, there is also a new law forbidding to circumvent
the copy protection, it probably comes from the same european source as the
German one.
  However, using cracks to make the app running on wine can't be primarily
classified as "circumventing copy protection", but as "modifying an app to
run on other OS", which is, I hope, still legal. I think that if I own a legal
copy of an application, didn't make any illegal copies of it, and just
modified it to run in wine, any court on the world should decide, that my
intention was not to circumvent the copy protection (because it is not of
any importance to me, I already legally have it), but to make it working
(yes, I've spent my money to use the app and I had to modify it to be able to
use it). Our courts have to evidence my invention to make a punishable act
(like to circumvent the copy protection to either get a pirated copy or to
sell my pirated copies to anybody else), but if I did something similar, but
for evidently another purpose (to run the legally owned app), I think that
it's not a punishable act. Something similar happened recently - a court
set free an old woman which was growing marihuana strictly for medical purpose,
even if there is a law strictly prohibiting to grow marihuana at all. Of course
IANAL, but my kids are running cracked games on wine, however we HAVE all the
CDs including bills from the shop for everybody, who would like to accuse us of
using illegal software.

  With regards, Pavel Troller


From matteo at mitalia.net  Tue Mar  4 16:57:02 2008
From: matteo at mitalia.net (Matteo Italia)
Date: Tue, 4 Mar 2008 23:57:02 +0100
Subject: Screen mode retrieval/trace tool for Windows
In-Reply-To: <6defe8840803041409i6167ee19wf1003817672c02fe@mail.gmail.com>
References: <6defe8840803041409i6167ee19wf1003817672c02fe@mail.gmail.com>
Message-ID: <000a01c87e4b$0ff599a0$f8b19b05@teoxp>

I think that you could just write a Windows application that listens for
WM_DISPLAYCHANGE messages (that are generated when the
ChangeDisplaySettingsEx succeeds) and logs the parameters recieved somewhere
(keep in mind that wParam = new BPP; LOWORD(lParam) = new horizontal
resolution; HIWORD(lParam) = new vertical resolution). If you need other
infos about the screen settings just use the GetDeviceCaps API with the
handle returned by GetDC(NULL) (see the MSDN for info about these APIs).
If you need any help, I'm here. :-)

Bye

Matteo

-----Original Message-----
From: wine-devel-bounces at winehq.org [mailto:wine-devel-bounces at winehq.org]
On Behalf Of Denver Gingerich
Sent: Tuesday, March 04, 2008 11:09 PM
To: wine-devel at winehq.org
Subject: Screen mode retrieval/trace tool for Windows

I am trying to trace the sequence of screen mode (resolution/bpp/refresh
rate) changes that occur when StarCraft is run in Windows so that I can make
Wine emulate Windows' behavior.  Right now I'm trying to see exactly what
resolution, bits per pixel, and refresh rate StarCraft is using.
Unfortunately, I can't just go into Display Properties while StarCraft is
running because it switches the resolution back when you Alt-Tab out of the
game.

My current plan is to install an SSH or telnet server on the Windows machine
and run a command line tool to check the current screen mode
while StarCraft is running.   I have used a couple of command-line
tools for changing the screen mode [1] [2], but neither of them have an
option to list the current mode.  Does anyone know of a tool or can anyone
quickly create a tool that will list the resolution currently in use from
the command line?

I have tried using StraceNT [3] to see the parameters passed to
ChangeDisplaySettingsEx (which is the function StarCraft uses to change the
resolution), but it does not let me look at the DEVMODE structure that is
passed in.  Does anyone know of a trace tool that would let me do that?

Based on my testing so far, there appears to be a discrepancy in how Windows
and Wine set the refresh rate if none is specified on a resolution change.
Wine always picks the first mode with a matching resolution, while Windows
does not.  My tests in Windows have shown that even though StarCraft asks
for 640x480 and the first mode with that resolution has a 60 Hz refresh
rate, Windows chooses a higher refresh rate.  Unfortunately, I don't know
exactly which refresh rate, but I can verify by sight that 60 Hz is not
being used (the screen doesn't flicker as it would at 60 Hz).  This
discrepancy is why I wish to run further tests and acquire more precise
information about the refresh rate being used.

I am performing this testing according to a request in a previous thread
[4].  If you have any questions about my testing, please let me know.

Denver


1. http://www.vrdevelopers.de/content/view/15/44/
2. http://www.nirsoft.net/utils/nircmd.html
3. http://www.intellectualheaven.com/default.asp?BH=projects&H=strace.htm
4. http://www.winehq.org/pipermail/wine-devel/2008-March/063150.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 5113 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080304/7f5c43c5/attachment.bin 

From cbill.lam at gmail.com  Wed Mar  5 02:41:27 2008
From: cbill.lam at gmail.com (bill lam)
Date: Wed, 05 Mar 2008 16:41:27 +0800
Subject: X Error of failed request
Message-ID: <47CE5CB7.8020102@gmail.com>

Sometimes (about 3 or 4 times in one day) that it just crashed with this message,

X Error of failed request:  BadWindow (invalid Window parameter)
   Major opcode of failed request:  18 (X_ChangeProperty)
   Resource id in failed request:  0x4400003
   Serial number of failed request:  1113
   Current serial number in output stream:  1117

no stack trace was available. Is this a known issue and how to
get more information that may help debugging.

I use nvidia card on ubuntu 7.10 amd64.

regards,


From dmitry at codeweavers.com  Wed Mar  5 02:51:14 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Wed, 5 Mar 2008 16:51:14 +0800
Subject: X Error of failed request
References: <47CE5CB7.8020102@gmail.com>
Message-ID: <005a01c87e9e$131bca20$a600fea9@DMITRY>

"bill lam" <cbill.lam at gmail.com> wrote:

> Sometimes (about 3 or 4 times in one day) that it just crashed with this message,
> 
> X Error of failed request:  BadWindow (invalid Window parameter)
>   Major opcode of failed request:  18 (X_ChangeProperty)
>   Resource id in failed request:  0x4400003
>   Serial number of failed request:  1113
>   Current serial number in output stream:  1117
> 
> no stack trace was available. Is this a known issue and how to
> get more information that may help debugging.
> 
> I use nvidia card on ubuntu 7.10 amd64.

Please open a bug report for this problem instead of posting it here.

-- 
Dmitry.


From ben at atomnet.co.uk  Wed Mar  5 04:26:48 2008
From: ben at atomnet.co.uk (Ben Hodgetts)
Date: Wed, 05 Mar 2008 10:26:48 +0000
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <142906.45998.qm@web50103.mail.re2.yahoo.com>
References: <142906.45998.qm@web50103.mail.re2.yahoo.com>
Message-ID: <47CE7568.7070202@atomnet.co.uk>

I like this... considering how... "unskilled" many people that fill in 
test reports are on the AppDB, this would help make it a little more 
foolproof (although the "Has legal issues" bits seem rather unnecessary 
at the end).

Ben H.

Remco wrote:
> Or how about this:
>
> ::Wine Compatibility::
> ( ) Doesn't work at all [Garbage]
> ( ) Starts, but not very usable [Bronze]
> ( ) Basically works, a few bugs [Silver]
> (*) Works flawlessly [Gold]
>
> ::Extra Info::
> [x] Needs Wine configuration (Windows version, sound options, regedit entries, etc.)
> [x] Needs a Windows DLL (has legal issues)
> [x] Needs a third party hack (has legal issues)
>
> If Gold and no tick boxes are selected: Works out of the box! [Platinum]
>
> The Extra Info tick boxes could be represented as icons accompanying the color-based Status wherever it goes. The icons should probably give a negative impression. A red color for example, although that might not get across very well, considering the color palette of WineHQ... ;)
>
> The "has legal issues" should link to a Wine Wiki page which explains exactly what those issues are and that specific discussion on how to get those things working is not allowed at winehq.org, the mailing lists, the newsgroup or the IRC channel.
>
> Remco
>
>
>
>       ____________________________________________________________________________________
> Never miss a thing.  Make Yahoo your home page. 
> http://www.yahoo.com/r/hs
>
>
>   


From julliard at winehq.org  Wed Mar  5 04:50:36 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 05 Mar 2008 11:50:36 +0100
Subject: [PATCH 1/3] shell32: add xdg-user-dirs lookup code
In-Reply-To: <558b2f5c0803041625k13370c35l5e04eb6be5504961@mail.gmail.com>
	(Lei Zhang's message of "Tue, 4 Mar 2008 16:25:20 -0800")
References: <558b2f5c0803041625k13370c35l5e04eb6be5504961@mail.gmail.com>
Message-ID: <874pblla0z.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> +    /* Convert $HOME to wide chars */
> +    len = MultiByteToWideChar(CP_ACP, 0, home_dir, -1, NULL, 0);
> +    home_dirW = HeapAlloc(GetProcessHeap(), 0, len * sizeof(WCHAR));
> +    if (!home_dirW)
> +    {
> +        hr = E_OUTOFMEMORY;
> +        goto xdg_user_dir_lookup_error;
> +    }
> +    MultiByteToWideChar(CP_ACP, 0, home_dir, -1, home_dirW, len);
> +    hr = get_xdg_config_file(home_dir, &config_file);
> +    if (FAILED(hr))
> +        goto xdg_user_dir_lookup_error;
> +
> +    file = fopen(config_file, "r");
> +    HeapFree(GetProcessHeap(), 0, config_file);
> +    if (!file)
> +    {
> +        hr = E_HANDLE;
> +        goto xdg_user_dir_lookup_error;
> +    }
> +
> +    while (fgets(buffer, sizeof(buffer), file))
> +    {
> +        int idx;
> +        WCHAR *p, bufferW[512];
> +
> +        /* Convert buffer to wide chars */
> +        len = MultiByteToWideChar(CP_UTF8, 0, buffer, -1, NULL, 0);
> +        MultiByteToWideChar(CP_UTF8, 0, buffer, -1, bufferW, len);

It doesn't make sense to convert $HOME or config strings to Unicode,
these are Unix paths, they should be kept as such until you call
symlink() or whatever on them.

-- 
Alexandre Julliard
julliard at winehq.org


From paul.vriens.wine at gmail.com  Wed Mar  5 05:13:49 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 05 Mar 2008 12:13:49 +0100
Subject: ntdll/tests: Don't use 0x55/0xaa to avoid any confusion when
	running	with +heap.
In-Reply-To: <alpine.DEB.1.00.0803051204170.5451@amboise.dolphin>
References: <alpine.DEB.1.00.0803051204170.5451@amboise.dolphin>
Message-ID: <47CE806D.4070708@gmail.com>

Francois Gouget wrote:
> ---
>  dlls/ntdll/tests/atom.c |   12 ++++++------
>  1 files changed, 6 insertions(+), 6 deletions(-)
> 
> diff --git a/dlls/ntdll/tests/atom.c b/dlls/ntdll/tests/atom.c
> index 2de94a0..68f5aba 100644
> --- a/dlls/ntdll/tests/atom.c
> +++ b/dlls/ntdll/tests/atom.c
> @@ -198,13 +198,13 @@ static void test_NtAtom(void)
>          ok((lstrlenW(testAtom2) * sizeof(WCHAR)) == Len, "Returned wrong length %d\n", Len);
>  
>          Len = 8;
> c-        Name[0] = Name[1] = Name[2] = Name[3] = Name[4] = 0x55AA;
> +        Name[0] = Name[1] = Name[2] = Name[3] = Name[4] = 0x1337;

What happened there?

-- 
Cheers,

Paul.


From meissner at suse.de  Wed Mar  5 06:40:09 2008
From: meissner at suse.de (Marcus Meissner)
Date: Wed, 5 Mar 2008 13:40:09 +0100
Subject: Maarten Lankhorst : oleaut32: Handle TKIND_ALIAS properly when
	passed as pointer.
In-Reply-To: <E1JWsfO-0007hK-Qn@wine.codeweavers.com>
References: <E1JWsfO-0007hK-Qn@wine.codeweavers.com>
Message-ID: <20080305124008.GA20226@suse.de>

On Wed, Mar 05, 2008 at 06:24:14AM -0600, Alexandre Julliard wrote:
> Module: wine
> Branch: master
> Commit: c978bbee87dd6e09e4ad836df5ad7d63506face2
> URL:    http://source.winehq.org/git/wine.git/?a=commit;h=c978bbee87dd6e09e4ad836df5ad7d63506face2
> 
> Author: Maarten Lankhorst <m.b.lankhorst at gmail.com>
> Date:   Mon Mar  3 14:27:03 2008 -0800
> 
> oleaut32: Handle TKIND_ALIAS properly when passed as pointer.
> 
> ---
> 
> +                break;
>  	    case TKIND_ENUM:	/* confirmed */
>  	    case TKIND_RECORD:	/* FIXME: mostly untested */
> -		derefhere=TRUE;
>  		break;
...

Why the removal of this line? Any indication that it helps?

Ciao, Marcus


From julliard at winehq.org  Wed Mar  5 07:03:45 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 05 Mar 2008 14:03:45 +0100
Subject: #1 gdi32: Move GetICMProfile to the driver.
In-Reply-To: <200803051202.16784.hans@it.vu.nl> (Hans Leidekker's message of
	"Wed, 5 Mar 2008 12:02:16 +0100")
References: <200803051202.16784.hans@it.vu.nl>
Message-ID: <87zltdjpam.fsf@wine.dyndns.org>

Hans Leidekker <hans at it.vu.nl> writes:

> Changelog
>  Move GetICMProfile to the driver.

Looks good, but the code doesn't belong in x11drv_main.c. Something like
graphics.c would be more appropriate.

-- 
Alexandre Julliard
julliard at winehq.org


From darkwalker_ at yahoo.com  Wed Mar  5 07:20:43 2008
From: darkwalker_ at yahoo.com (F Capela)
Date: Wed, 5 Mar 2008 05:20:43 -0800 (PST)
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <47CE7568.7070202@atomnet.co.uk>
Message-ID: <320185.79293.qm@web38002.mail.mud.yahoo.com>

Remco wrote:
> Or how about this:
>
> ::Wine Compatibility::
> ( ) Doesn't work at all [Garbage]
> ( ) Starts, but not very usable [Bronze]
> ( ) Basically works, a few bugs [Silver]
> (*) Works flawlessly [Gold]
>
> ::Extra Info::
> [x] Needs Wine configuration (Windows version,
> sound options, regedit entries, etc.)
> [x] Needs a Windows DLL (has legal issues)
> [x] Needs a third party hack (has legal issues)
>
> If Gold and no tick boxes are selected: Works out
> of the box! [Platinum]
>
> The Extra Info tick boxes could be represented as
> icons accompanying the color-based Status wherever
> it goes. The icons should probably give a negative
> impression. A red color for example, although that
> might not get across very well, considering the
> color palette of WineHQ... ;)
>
> The "has legal issues" should link to a Wine Wiki
> page which explains exactly what those issues are
> and that specific discussion on how to get those
> things working is not allowed at winehq.org, the
> mailing lists, the newsgroup or the IRC channel.
>
> Remco

I like this idea, although I'd change "has legal
issues" to "may have legal issues". Most of those DLL
overrides can be obtained legally (and even if there
is an EULA stating that they can only be used in
Windows, in some places such clause is illegal), and
there are places where circumventing copy protection
schemes in order to have better usability is legal.

BTW, where I live (Brazil) it's only illegal to
circumvent copy protection measures if it's done to
distribute illegal copies; doing it to have better
usability is perfectly legal here. And something
interesting, there's a note jointly published last
year by 4 brazilian ministers declaring, among other
things, that DRM technologies may be against both the
federal constitution and copyright law.


F?bio Oliveira Schmidt Capela
darkwalker_ at yahoo.com


      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping


From fgouget at free.fr  Wed Mar  5 11:25:16 2008
From: fgouget at free.fr (Francois Gouget)
Date: Wed, 5 Mar 2008 18:25:16 +0100 (CET)
Subject: ntdll/tests: Don't use 0x55/0xaa to avoid any confusion when
	running with +heap.
In-Reply-To: <47CE806D.4070708@gmail.com>
References: <alpine.DEB.1.00.0803051204170.5451@amboise.dolphin>
	<47CE806D.4070708@gmail.com>
Message-ID: <alpine.DEB.1.00.0803051824230.22992@amboise.dolphin>

On Wed, 5 Mar 2008, Paul Vriens wrote:
[...]
> > @@ -198,13 +198,13 @@ static void test_NtAtom(void)
> >          ok((lstrlenW(testAtom2) * sizeof(WCHAR)) == Len, "Returned wrong length %d\n", Len);
> >  
> >          Len = 8;
> > c-        Name[0] = Name[1] = Name[2] = Name[3] = Name[4] = 0x55AA;
> > +        Name[0] = Name[1] = Name[2] = Name[3] = Name[4] = 0x1337;
> 
> What happened there?

I must have hit 'c' while reviewing the patch instead of 'Ctrl+X' to 
send. Apparently Alexandre fixed the patch.


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                            1 + e ^ ( i * pi ) = 0


From julliard at winehq.org  Wed Mar  5 12:07:16 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 05 Mar 2008 19:07:16 +0100
Subject: hal: Add a stub for HalGetBusData() to make 3DMark2001SE happy in
	WinNT mode.
In-Reply-To: <alpine.DEB.1.00.0803051207100.5451@amboise.dolphin> (Francois
	Gouget's message of "Wed, 5 Mar 2008 12:07:15 +0100 (CET)")
References: <alpine.DEB.1.00.0803051207100.5451@amboise.dolphin>
Message-ID: <87pru9jb8r.fsf@wine.dyndns.org>

Francois Gouget <fgouget at codeweavers.com> writes:

> +typedef enum _BUS_DATA_TYPE
> +{
> +    ConfigurationSpaceUndefined = -1,
> +    Cmos,
> +    EisaConfiguration,
> +    Pos,
> +    CbusConfiguration,
> +    PCIConfiguration,
> +    VMEConfiguration,
> +    NuBusConfiguration,
> +    PCMCIAConfiguration,
> +    MPIConfiguration,
> +    MPSAConfiguration,
> +    PNPISAConfiguration,
> +    MaximumBusDataType
> +} BUS_DATA_TYPE, *PBUS_DATA_TYPE;

Shouldn't that stuff go into a public header?

-- 
Alexandre Julliard
julliard at winehq.org


From truiken at gmail.com  Wed Mar  5 12:05:03 2008
From: truiken at gmail.com (James Hawkins)
Date: Wed, 5 Mar 2008 12:05:03 -0600
Subject: make LoadStringW pass tests (fixed merge conflict)
In-Reply-To: <47CEDF48.8090705@procyongames.com>
References: <47CEDF48.8090705@procyongames.com>
Message-ID: <22821af30803051005r2ab23be0p501aeb71841cc562@mail.gmail.com>

On Wed, Mar 5, 2008 at 11:58 AM, Christopher
<raccoonone at procyongames.com> wrote:
> resubmitting my patch to resolve a merge conflict with the latest GIT
>
>  Christopher Berner
>
> From 47a770102acf010834899489416e92fd4f79ffd1 Mon Sep 17 00:00:00 2001
>  From: Christopher Berner <raccoonone at procyongames.com>
>  Date: Wed, 5 Mar 2008 09:28:26 -0800
>  Subject: [PATCH] make LoadStringW pass conformance tests
>
>  ---
>   dlls/crypt32/oid.c           |    3 ++-
>   dlls/hhctrl.ocx/help.c       |    4 ++--
>   dlls/mpr/wnet.c              |    3 ++-
>   dlls/user32/resource.c       |   14 +++++++++++++-
>   dlls/user32/tests/resource.c |   29 +++++++++++------------------
>   5 files changed, 30 insertions(+), 23 deletions(-)
>
>  diff --git a/dlls/crypt32/oid.c b/dlls/crypt32/oid.c
>  index 5d17997..edd9732 100644
>  --- a/dlls/crypt32/oid.c
>  +++ b/dlls/crypt32/oid.c
>  @@ -1402,8 +1402,9 @@ static void init_oid_info(HINSTANCE hinst)
>          }
>          else
>          {
>  +            LPWSTR junkpointer; /* third argument cannot be NULL, to receive length of resource from LoadStringW */
>              int len = LoadStringW(hinst, (UINT_PTR)oidInfoConstructors[i].pwszName,
>  -             NULL, 0);
>  +             (LPWSTR)&junkpointer, 0);
>

Why don't you just name the new parameter the same name as the
function parameter ('buffer' or some variation)?  junkpointer is a
terrible variable name.

-- 
James Hawkins


From m.b.lankhorst at gmail.com  Wed Mar  5 12:18:57 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Wed, 5 Mar 2008 10:18:57 -0800
Subject: Maarten Lankhorst : oleaut32: Handle TKIND_ALIAS properly when
	passed as pointer.
In-Reply-To: <20080305124008.GA20226@suse.de>
References: <E1JWsfO-0007hK-Qn@wine.codeweavers.com>
	<20080305124008.GA20226@suse.de>
Message-ID: <b130c85e0803051018k1dc78411u6ff8c96a3e7d3bc3@mail.gmail.com>

Hi Marcus,

2008/3/5, Marcus Meissner <meissner at suse.de>:
> On Wed, Mar 05, 2008 at 06:24:14AM -0600, Alexandre Julliard wrote:
>  > Module: wine
>  > Branch: master
>  > Commit: c978bbee87dd6e09e4ad836df5ad7d63506face2

>  > +                break;
>  >           case TKIND_ENUM:    /* confirmed */
>  >           case TKIND_RECORD:  /* FIXME: mostly untested */
>  > -             derefhere=TRUE;
>  >               break;
>  ...
>
>  Why the removal of this line? Any indication that it helps?
It was redundant because default is already set to true.

Cheers,
Maarten.


From raccoonone at procyongames.com  Wed Mar  5 13:06:32 2008
From: raccoonone at procyongames.com (Christopher)
Date: Wed, 05 Mar 2008 11:06:32 -0800
Subject: make LoadStringW pass tests (fixed merge conflict)
In-Reply-To: <22821af30803051005r2ab23be0p501aeb71841cc562@mail.gmail.com>
References: <47CEDF48.8090705@procyongames.com>
	<22821af30803051005r2ab23be0p501aeb71841cc562@mail.gmail.com>
Message-ID: <47CEEF38.1040808@procyongames.com>

James Hawkins wrote:
> On Wed, Mar 5, 2008 at 11:58 AM, Christopher
> <raccoonone at procyongames.com> wrote:
>   
>> resubmitting my patch to resolve a merge conflict with the latest GIT
>>
>>  Christopher Berner
>>
>> From 47a770102acf010834899489416e92fd4f79ffd1 Mon Sep 17 00:00:00 2001
>>  From: Christopher Berner <raccoonone at procyongames.com>
>>  Date: Wed, 5 Mar 2008 09:28:26 -0800
>>  Subject: [PATCH] make LoadStringW pass conformance tests
>>
>>  ---
>>   dlls/crypt32/oid.c           |    3 ++-
>>   dlls/hhctrl.ocx/help.c       |    4 ++--
>>   dlls/mpr/wnet.c              |    3 ++-
>>   dlls/user32/resource.c       |   14 +++++++++++++-
>>   dlls/user32/tests/resource.c |   29 +++++++++++------------------
>>   5 files changed, 30 insertions(+), 23 deletions(-)
>>
>>  diff --git a/dlls/crypt32/oid.c b/dlls/crypt32/oid.c
>>  index 5d17997..edd9732 100644
>>  --- a/dlls/crypt32/oid.c
>>  +++ b/dlls/crypt32/oid.c
>>  @@ -1402,8 +1402,9 @@ static void init_oid_info(HINSTANCE hinst)
>>          }
>>          else
>>          {
>>  +            LPWSTR junkpointer; /* third argument cannot be NULL, to receive length of resource from LoadStringW */
>>              int len = LoadStringW(hinst, (UINT_PTR)oidInfoConstructors[i].pwszName,
>>  -             NULL, 0);
>>  +             (LPWSTR)&junkpointer, 0);
>>
>>     
>
> Why don't you just name the new parameter the same name as the
> function parameter ('buffer' or some variation)?  junkpointer is a
> terrible variable name.
>
>   
sure, I will change it.


From julliard at winehq.org  Wed Mar  5 13:15:46 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 05 Mar 2008 20:15:46 +0100
Subject: make LoadStringW pass tests (fixed merge conflict)
In-Reply-To: <47CEEF38.1040808@procyongames.com> (Christopher's message of
	"Wed, 05 Mar 2008 11:06:32 -0800")
References: <47CEDF48.8090705@procyongames.com>
	<22821af30803051005r2ab23be0p501aeb71841cc562@mail.gmail.com>
	<47CEEF38.1040808@procyongames.com>
Message-ID: <87fxv5j82l.fsf@wine.dyndns.org>

Christopher <raccoonone at procyongames.com> writes:

> James Hawkins wrote:
>> Why don't you just name the new parameter the same name as the
>> function parameter ('buffer' or some variation)?  junkpointer is a
>> terrible variable name.
>>
>>   
> sure, I will change it.

Actually what you should do is take advantage of the fact that the
pointer is returned to simplify the code and avoid a second LoadStringW
call.

-- 
Alexandre Julliard
julliard at winehq.org


From titan.costa at wanadoo.fr  Wed Mar  5 14:20:35 2008
From: titan.costa at wanadoo.fr (Christian Costa)
Date: Wed, 05 Mar 2008 21:20:35 +0100
Subject: [feature requist] Glide API support
In-Reply-To: <20080218204213.15010@gmx.net>
References: <ee59d8c70802181225l1b871193md11e7dff3579103c@mail.gmail.com>
	<20080218204213.15010@gmx.net>
Message-ID: <47CF0093.6070305@wanadoo.fr>

Roderick Colenbrander a ?crit :
>> Dear Wine devs,
>>
>> There are some games out there that were built with the Glide API. The
>> Glide
>> API is the graphics API of the 3dfx Voodoo cards and is basically a
>> stripped
>> down version of OpenGL. Could please consider adding support for the Glide
>> API because I, and other have games that requires this API to be able to
>> run
>> under Wine. Now I know that there are Glide wrappers but they don't seem
>> to
>> work for a lot of people, including me, and Glide has been a very popular
>> game API in the mid- to late 90's.
>>
>> Thanks in advance,
>>
>> Vincent Weber,
>> weber dot vincent at gmail dot com
>>     
>
> The policy is roughly to ship dlls that are a core part of Windows. Yes there are glide wrappers and quite a bunch of those succesfuly work on Wine. Personally I don't know actual names but a lot of users have used Glide->OpenGL and even Glide->Direct3D wrappers without issues.
>
> Roderick
>   
Hi,

Glide is very similar to ASIO.
They are :
- very popular (I would say was for glide)
- tied to a driver
- not shipped with application (as for Quicktime for instance)

ASIO cannot be integrated in Wine only due to legal issue but if it's 
not the case for glide (is there legal issue at all ?) I don't see any 
reason to not have it.

Personnaly, I've never found a glide wrapper that satisfied me but I've 
not tested all the existing ones. I also not sure source are available 
for all of them.
I also think that would be good to have glide support in Wine so users 
can use it seamlessly without having to browse the web to find the good one.

I began implementing glide some years ago but I didn't get to far and 
it's barely more than a stub dll.
It may still lies somewhere in my hard drive. It was on my to do list to 
improve it. :-)

Bye
Christian




From research at science.su  Wed Mar  5 17:11:47 2008
From: research at science.su (L. Rahyen)
Date: Wed, 5 Mar 2008 23:11:47 +0000
Subject: Winecfg: Raise max screen resolution to 160 DPI
In-Reply-To: <00d501c87e6c$651c2450$a600fea9@DMITRY>
References: <b6bb06270803032029q6fd721b6ue4287d0c75a1ae22@mail.gmail.com>
	<200803041952.13428.research@science.su>
	<00d501c87e6c$651c2450$a600fea9@DMITRY>
Message-ID: <200803052311.48169.research@science.su>

On Wednesday March 5 2008 02:55:34 Dmitry Timoshkov wrote:
> "L. Rahyen" <research at science.su> wrote:
> > This problem was already solved in this patch [1] by Nigel Liang.
> > Unfortunately, it wasn't accepted and Nigel didn't tried to ask why it
> > was rejected or to resend it.
> > I think I will go ahead and resend his patch.
> >
> > [1] http://www.winehq.org/pipermail/wine-patches/2007-October/044977.html
>
> MultiByteToWideChar is that patch passes negative length for the
> destination buffer which is incorrect.

	That means patch "winecfg: Fix overflow in the DPI field at the 
Graphics tab for DPI value bigger than 127" is incorrect too.
	I think I will write today better patch myself from scratch for this bug 
(after reading some docs about MultiByteToWideChar).
	After Austin's patch "Revert: winecfg raise max screen resolution to 160 DPI" 
will be accepted I will send better fix for this bug (9715).


From truiken at gmail.com  Wed Mar  5 18:37:11 2008
From: truiken at gmail.com (James Hawkins)
Date: Wed, 5 Mar 2008 18:37:11 -0600
Subject: slight winsock design change proposal
In-Reply-To: <47CF3AC7.9010603@gmail.com>
References: <47CF3AC7.9010603@gmail.com>
Message-ID: <22821af30803051637s6237aa1el9f153278e8441e53@mail.gmail.com>

On Wed, Mar 5, 2008 at 6:28 PM, Christopher Harvey
<arbuckle911 at gmail.com> wrote:
> I'm giving the mswsock.c file some development time. I need to know if
>  the winsock API has been inited. This has already been implemented, but
>  I need to get access to the num_startup variable from the mswsock.c
>  file. I hacked a bit and got it, but hesitate to continue because I
>  don't know if I changed it in the proper way to get access. If this
>  change is fine please accept it. if not please advise on the proper way
>  to see if winsock has been inited or not, from the  mswsock.c file.
>
>  Thanks.
>
> diff --git a/dlls/mswsock/mswsock.c b/dlls/mswsock/mswsock.c
>  index d283405..7f339c0 100644
>  --- a/dlls/mswsock/mswsock.c
>  +++ b/dlls/mswsock/mswsock.c
>  @@ -62,9 +62,10 @@ BOOL WINAPI AcceptEx(
>                                        operation */
>   {
>      FIXME("(listen=%ld, accept=%ld, %p, %d, %d, %d, %p, %p), not implemented\n",
>  -       sListenSocket,sAcceptSocket,lpOutputBuffer,dwReceiveDataLength,
>  -       dwLocalAddressLength,dwRemoteAddressLength,lpdwBytesReceived,lpOverlapped
>  -    );
>  +         sListenSocket,sAcceptSocket,lpOutputBuffer,dwReceiveDataLength,
>  +         dwLocalAddressLength,dwRemoteAddressLength,lpdwBytesReceived,lpOverlapped
>  +         );
>  +    //get_num_startup();  Use this to see if Winsock has been inited yet or not
>      return FALSE;
>   }
>
>  diff --git a/dlls/ws2_32/socket.c b/dlls/ws2_32/socket.c
>  index 502f309..03030a2 100644
>  --- a/dlls/ws2_32/socket.c
>  +++ b/dlls/ws2_32/socket.c
>  @@ -5021,3 +5021,8 @@ INT WINAPI WSCWriteProviderOrder( LPDWORD entry, DWORD number )
>      FIXME("(%p 0x%08x) Stub!\n", entry, number);
>      return 0;
>   }
>  +
>  +INT get_num_startup()
>  +{
>  +    return num_startup;
>  +}
>  diff --git a/include/winsock2.h b/include/winsock2.h
>  index a302331..dcca0e7 100644
>  --- a/include/winsock2.h
>  +++ b/include/winsock2.h
>  @@ -728,6 +728,7 @@ typedef INT (WINAPI *LPFN_WSASTRINGTOADDRESSW)(LPSTR,INT,LPWSAPROTOCOL_INFOA,LPS
>   typedef DWORD (WINAPI *LPFN_WSAWAITFORMULTIPLEEVENTS)(DWORD,const WSAEVENT*,BOOL,DWORD,BOOL);
>   #endif /* WS_API_TYPEDEFS */
>
>  +typedef INT get_num_startup();
>
>   /* Condition function return values */
>   #define CF_ACCEPT       0x0000
>

Are you seriously asking if adding a hack to a public header in order
to read a global variable from another dll is acceptable?  That pretty
much sums up the answer.

-- 
James Hawkins


From dmitry at codeweavers.com  Wed Mar  5 21:04:25 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 6 Mar 2008 11:04:25 +0800
Subject: user32: Fix enumeration for EnumWindowStations and EnumDesktops,
	try2
References: <b130c85e0803051502r521d9c45m6781436764375cfd@mail.gmail.com>
Message-ID: <00c701c87f36$ca9ff020$a600fea9@DMITRY>

"Maarten Lankhorst" <m.b.lankhorst at gmail.com> wrote:

> Oops, the other call has to be null terminated as well.

Do you have test cases for those changes? They look like
a noop to me.

-- 
Dmitry.


From m.b.lankhorst at gmail.com  Wed Mar  5 21:08:19 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Wed, 5 Mar 2008 19:08:19 -0800
Subject: user32: Fix enumeration for EnumWindowStations and EnumDesktops,
	try2
In-Reply-To: <00c701c87f36$ca9ff020$a600fea9@DMITRY>
References: <b130c85e0803051502r521d9c45m6781436764375cfd@mail.gmail.com>
	<00c701c87f36$ca9ff020$a600fea9@DMITRY>
Message-ID: <b130c85e0803051908w6a84e879j5f41db0f9a2f5b3f@mail.gmail.com>

Hi Dmitry,

2008/3/5, Dmitry Timoshkov <dmitry at codeweavers.com>:
> "Maarten Lankhorst" <m.b.lankhorst at gmail.com> wrote:
>
>  > Oops, the other call has to be null terminated as well.
>
>
> Do you have test cases for those changes? They look like
>  a noop to me.
I ran into this bug when I used those functions. I would get
Default@#$*@#% or Winsta0#$@*#$@ from my ickle enumeration function...
Of course I can't open those.

Cheers,
Maarten.


From ovek at transgaming.com  Wed Mar  5 21:15:55 2008
From: ovek at transgaming.com (Ove Kaaven)
Date: Thu, 06 Mar 2008 04:15:55 +0100
Subject: (resend) msi: Fix bug in handling of multivolume CAB files.
In-Reply-To: <22821af30803041720j2a791f09yc1fae29311dd7b6c@mail.gmail.com>
References: <47CD8C1A.3060607@transgaming.com>	
	<22821af30803041203s1fdd170bn1f8f8fdb85c5f798@mail.gmail.com>	
	<47CDF0ED.1060203@transgaming.com>
	<22821af30803041720j2a791f09yc1fae29311dd7b6c@mail.gmail.com>
Message-ID: <47CF61EB.8090504@transgaming.com>

James Hawkins skrev:
> The tests that now pass with native cabinet dll are test_continuouscab
> (which is similar to what you're trying to test).  The point of
> maxsize is so that it creates continuous cabs...there's no other way
> to do it, and builtin doesn't create continuous cabs at all.

No? Then I really wonder what those hundreds of .cab files it creates 
from that 50k testfile is, if not continuous cabs. What else are they?

> The
> answer to your question is no, because there is no test currently that
> runs down the code path you are fixing.

Looks like it takes an order of magnitude more time writing test cases 
for this stuff than actually fixing that darn bug (fixing the bug took 2 
hours, figuring out how to put a working test case together (trying to 
take differences between native and builtin cabinet into account) has 
taken me all day, probably longer).

Here's what I managed to put together that seems to trigger the problem 
condition... the cab extraction sequence was somehow different in my 
real-world case, so I had to fudge this testcase a little by packing a 
third file into the continuous cab. So what do you think about this 
test, then?
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: msi-test.patch
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080306/6c4ef7c2/attachment-0001.txt 

From truiken at gmail.com  Wed Mar  5 21:25:31 2008
From: truiken at gmail.com (James Hawkins)
Date: Wed, 5 Mar 2008 21:25:31 -0600
Subject: (resend) msi: Fix bug in handling of multivolume CAB files.
In-Reply-To: <47CF61EB.8090504@transgaming.com>
References: <47CD8C1A.3060607@transgaming.com>
	<22821af30803041203s1fdd170bn1f8f8fdb85c5f798@mail.gmail.com>
	<47CDF0ED.1060203@transgaming.com>
	<22821af30803041720j2a791f09yc1fae29311dd7b6c@mail.gmail.com>
	<47CF61EB.8090504@transgaming.com>
Message-ID: <22821af30803051925u6d405215i245d96a360a9b768@mail.gmail.com>

On Wed, Mar 5, 2008 at 9:15 PM, Ove Kaaven <ovek at transgaming.com> wrote:
> James Hawkins skrev:
>
> > The tests that now pass with native cabinet dll are test_continuouscab
>  > (which is similar to what you're trying to test).  The point of
>  > maxsize is so that it creates continuous cabs...there's no other way
>  > to do it, and builtin doesn't create continuous cabs at all.
>
>  No? Then I really wonder what those hundreds of .cab files it creates
>  from that 50k testfile is, if not continuous cabs. What else are they?
>

Sorry, I meant that it doesn't create the compressed continuous cabs
that the tests expect.

>  > The
>  > answer to your question is no, because there is no test currently that
>  > runs down the code path you are fixing.
>
>  Looks like it takes an order of magnitude more time writing test cases
>  for this stuff than actually fixing that darn bug (fixing the bug took 2
>  hours, figuring out how to put a working test case together (trying to
>  take differences between native and builtin cabinet into account) has
>  taken me all day, probably longer).
>

You have to keep in consideration all the time that has been saved
fixing bugs later down the road because the test cases have kept
regressions to a minimum (and just flat out wrong code being added).

>  Here's what I managed to put together that seems to trigger the problem
>  condition... the cab extraction sequence was somehow different in my
>  real-world case, so I had to fudge this testcase a little by packing a
>  third file into the continuous cab. So what do you think about this
>  test, then?
>

Looks good to me, as long as the test fails without your fix and
succeeds with your fix (with the cabinet override of course).  When
submitting the tests to wine-patches, make sure you add todo_wine to
the failing tests (because of cabinet).

-- 
James Hawkins


From austinenglish at gmail.com  Wed Mar  5 22:08:56 2008
From: austinenglish at gmail.com (Austin English)
Date: Wed, 5 Mar 2008 22:08:56 -0600
Subject: Regression tests - recent regressions
Message-ID: <b6bb06270803052008y3cb8e571ya85518ee01e35723@mail.gmail.com>

In today's git, I've had a few regressions in make -k test:

austin at zelda:~/wine-git$ grep -i 'Test failed' wine-0.9.56-420-g22f146f.txt
visual.c:1741: Test failed: double texbem failed: Got color
0x00ff00ff, expected 0x00ffff00.
systray.c:89: Test failed: ret 0x1 which is not a window
systray.c:90: Test failed: hWnd overwritten
msg.c:9415: Test failed: 30: ShowWindow(SW_RESTORE): in msg 0x0047
expecting wParam 0x8160 got 0x8162
msg.c:9415: Test failed: 50: ShowWindow(SW_SHOWNORMAL): the msg 0x0047
was expected, but got msg 0x0005 instead
msg.c:9415: Test failed: 50: ShowWindow(SW_SHOWNORMAL): the msg 0x0003
was expected, but got msg 0x0009 instead
msg.c:9415: Test failed: 50: ShowWindow(SW_SHOWNORMAL): the msg 0x0005
was expected, but got msg 0x0047 instead
msg.c:9415: Test failed: 50: ShowWindow(SW_SHOWNORMAL): the msg
sequence is not complete: expected 0000 - actual 0003
msg.c:9415: Test failed: 56: ShowWindow(SW_SHOWNOACTIVATE): in msg
0x0047 expecting wParam 0x8170 got 0x8172
win.c:3271: Test failed: pixel should be black, color is 00205860
win.c:3275: Test failed: pixel should be black, color is 00205860
win.c:3302: Test failed: pixel should be black, color is 00205860

+heap adds:
job.c:250: Test failed: GetState failed: 0x80004001
job.c:266: Test failed: Resume failed to return BG_E_EMPTY error: 0x80004001
input.c:470: Test failed: 01: 12 from 81 -> 01 unexpected
input.c:470: Test failed: 01: a4 from 81 -> 01 unexpected
input.c:461: Test failed: 03: 12 from 00 -> 00 instead of 80 -> 00
input.c:461: Test failed: 03: a4 from 00 -> 00 instead of 80 -> 00
input.c:538: Test failed: not enough messages found; looking for 0

I don't have time to pin these down any further, as I've got a midterm
tomorrow then spring break after that. But thought those of you who
made recent commits in this area should take a look. If you need a
specific test run or log, then please e-mail me.

-Austin


From ovek at transgaming.com  Wed Mar  5 22:26:27 2008
From: ovek at transgaming.com (Ove Kaaven)
Date: Thu, 06 Mar 2008 05:26:27 +0100
Subject: (resend) msi: Fix bug in handling of multivolume CAB files.
In-Reply-To: <22821af30803051925u6d405215i245d96a360a9b768@mail.gmail.com>
References: <47CD8C1A.3060607@transgaming.com>	
	<22821af30803041203s1fdd170bn1f8f8fdb85c5f798@mail.gmail.com>	
	<47CDF0ED.1060203@transgaming.com>	
	<22821af30803041720j2a791f09yc1fae29311dd7b6c@mail.gmail.com>	
	<47CF61EB.8090504@transgaming.com>
	<22821af30803051925u6d405215i245d96a360a9b768@mail.gmail.com>
Message-ID: <47CF7273.7070801@transgaming.com>

James Hawkins skrev:
> On Wed, Mar 5, 2008 at 9:15 PM, Ove Kaaven <ovek at transgaming.com> wrote:
>> James Hawkins skrev:
>>
>>> The tests that now pass with native cabinet dll are test_continuouscab
>>  > (which is similar to what you're trying to test).  The point of
>>  > maxsize is so that it creates continuous cabs...there's no other way
>>  > to do it, and builtin doesn't create continuous cabs at all.
>>
>>  No? Then I really wonder what those hundreds of .cab files it creates
>>  from that 50k testfile is, if not continuous cabs. What else are they?
>>
> 
> Sorry, I meant that it doesn't create the compressed continuous cabs
> that the tests expect.

Well, that's because create_cc_test_files expect to get 2 cab files, not 
600, and so the "caesar" part proceeds to overwrite the 3rd in the 
series, rendering the whole series unreadable. By adjusting the max size 
so that only 2 (uncompressed) cab files are created, most of the todo 
tests appear to run fine. Just changing the file name might also work. 
(Actually I don't see any reason your tests would really need to depend 
on compression anyway, it's supposed to be a test of MSI, not cabinet.)

>>  Here's what I managed to put together that seems to trigger the problem
>>  condition... the cab extraction sequence was somehow different in my
>>  real-world case, so I had to fudge this testcase a little by packing a
>>  third file into the continuous cab. So what do you think about this
>>  test, then?
>>
> 
> Looks good to me, as long as the test fails without your fix and
> succeeds with your fix (with the cabinet override of course).

Actually, I think it works with both builtin and native cabinet, because 
my create_cc2_test_files creates uncompressed continuous cabinets, which 
both builtin and native seem to handle. (I was almost forced to use 
uncompressed anyway, because create_file creates sparse files, which 
compresses into almost nothing, which made it difficult to predict 
whether the contents would be distributed the way I needed...)


From dmitry at codeweavers.com  Thu Mar  6 01:57:32 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 6 Mar 2008 15:57:32 +0800
Subject: [PATCH] gdiplus: Fix errors in image dimensions.
References: <1204789580-3462-1-git-send-email-nathan.beckmann@gmail.com>
Message-ID: <036501c87f5f$bccf9300$a600fea9@DMITRY>

"Nathan Beckmann" <nathan.beckmann at gmail.com> wrote:

> -    y = (UINT)(((REAL)y) * ((REAL)GetDeviceCaps(hdcref, LOGPIXELSY)) /
> -              ((REAL)INCH_HIMETRIC));
> +    /* this calculation can lead to truncation error */
> +    y = (UINT)((((REAL)y) * ((REAL)GetDeviceCaps(hdcref, LOGPIXELSY)) /
> +              ((REAL)INCH_HIMETRIC)) + 0.5);

Using MulDiv instead should be a more appropriate fix here.

-- 
Dmitry.


From hverbeet at gmail.com  Thu Mar  6 02:23:14 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Thu, 6 Mar 2008 09:23:14 +0100
Subject: WineD3D: Implement depth copy from onscreen to offscreen surface
	when depth fixup is used
In-Reply-To: <47CF2E6B.2040105@gmail.com>
References: <47CF2E6B.2040105@gmail.com>
Message-ID: <d658b69e0803060023m53766e0fj39ea3893635afc86@mail.gmail.com>

On 06/03/2008, Frank Richter <frank.richter at gmail.com> wrote:
>
This doesn't work.
The problem with doing depth copy with fixed up depth stencil is that
the size of the render buffer is different from the depth stencil
size. Basically what needs to happen is that the render buffer
contents need to be blitted to the depth stencil before copying the
depth stencil from offscreen to onscreen.

Aside from that, depth stencil copying is broken (in that it doesn't
always copy when it should, and sometimes copies when it shouldn't).
I've got a patch that fixes this, but it causes regressions. Changing
anything in the depth copying code would cause some nasty conflicts in
my patch. Of course if you're interested in tracking down regressions
I'd be happy to send you the patch.


From nathan.beckmann at gmail.com  Thu Mar  6 03:27:33 2008
From: nathan.beckmann at gmail.com (Nathan Beckmann)
Date: Thu, 6 Mar 2008 01:27:33 -0800
Subject: [PATCH] GDI+: Implement GdipGetImageEncoders.
In-Reply-To: <3a22664a0803060038j43e96407x3049049fc4c4a1d3@mail.gmail.com>
References: <1204744897-28734-1-git-send-email-nathan.beckmann@gmail.com>
	<3a22664a0803060038j43e96407x3049049fc4c4a1d3@mail.gmail.com>
Message-ID: <3a22664a0803060127j42f56f7p59190b7033e0c4a@mail.gmail.com>

Don't apply this patch.

The test cases crash on Windows.

I was using winetricks to test and accidentally did not test under Windows.

A "try 2" patch has been sent that fixes these issues.

Sorry.

- Nathan


From stefan at codeweavers.com  Thu Mar  6 03:36:33 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Thu, 6 Mar 2008 10:36:33 +0100
Subject: Regression tests - recent regressions
In-Reply-To: <b6bb06270803052008y3cb8e571ya85518ee01e35723@mail.gmail.com>
References: <b6bb06270803052008y3cb8e571ya85518ee01e35723@mail.gmail.com>
Message-ID: <200803061036.33157.stefan@codeweavers.com>

Am Donnerstag, 6. M?rz 2008 05:08:56 schrieb Austin English:
> visual.c:1741: Test failed: double texbem failed: Got color
> 0x00ff00ff, expected 0x00ffff00.
Which GPU do you have?


From austinenglish at gmail.com  Thu Mar  6 03:47:26 2008
From: austinenglish at gmail.com (Austin English)
Date: Thu, 6 Mar 2008 03:47:26 -0600
Subject: Regression tests - recent regressions
In-Reply-To: <200803061036.33157.stefan@codeweavers.com>
References: <b6bb06270803052008y3cb8e571ya85518ee01e35723@mail.gmail.com>
	<200803061036.33157.stefan@codeweavers.com>
Message-ID: <b6bb06270803060147l3fe921dbxf5be6e78f850e3ca@mail.gmail.com>

On Thu, Mar 6, 2008 at 3:36 AM, Stefan D?singer <stefan at codeweavers.com> wrote:
> Am Donnerstag, 6. M?rz 2008 05:08:56 schrieb Austin English:
>
> > visual.c:1741: Test failed: double texbem failed: Got color
>  > 0x00ff00ff, expected 0x00ffff00.
>  Which GPU do you have?
>

01:00.0 VGA compatible controller: nVidia Corporation NV34 [GeForce FX
5200] (rev a1) (prog-if 00 [VGA])
       Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop-
ParErr- Stepping- SERR- FastB2B-
       Status: Cap+ 66MHz+ UDF- FastB2B+ ParErr- DEVSEL=medium
>TAbort- <TAbort- <MAbort- >SERR- <PERR-
       Latency: 248 (1250ns min, 250ns max)
       Interrupt: pin A routed to IRQ 16
       Region 0: Memory at fb000000 (32-bit, non-prefetchable) [size=16M]
       Region 1: Memory at e0000000 (32-bit, prefetchable) [size=256M]
       [virtual] Expansion ROM at faf00000 [disabled] [size=128K]
       Capabilities: [60] Power Management version 2
               Flags: PMEClk- DSI- D1- D2- AuxCurrent=0mA
PME(D0-,D1-,D2-,D3hot-,D3cold-)
               Status: D0 PME-Enable- DSel=0 DScale=0 PME-
       Capabilities: [44] AGP version 3.0
               Status: RQ=32 Iso- ArqSz=0 Cal=3 SBA+ ITACoh- GART64-
HTrans- 64bit- FW+ AGP3+ Rate=x4,x8
               Command: RQ=32 ArqSz=0 Cal=0 SBA+ AGP+ GART64- 64bit-
FW- Rate=x8

Driver: nvidia-glx 1:1.0.9639+2.6.22.4-14.10

From julliard at winehq.org  Thu Mar  6 04:49:39 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 06 Mar 2008 11:49:39 +0100
Subject: Regression tests - recent regressions
In-Reply-To: <b6bb06270803052008y3cb8e571ya85518ee01e35723@mail.gmail.com>
	(Austin English's message of "Wed, 5 Mar 2008 22:08:56 -0600")
References: <b6bb06270803052008y3cb8e571ya85518ee01e35723@mail.gmail.com>
Message-ID: <87bq5sjfek.fsf@wine.dyndns.org>

"Austin English" <austinenglish at gmail.com> writes:

> In today's git, I've had a few regressions in make -k test:
>
> austin at zelda:~/wine-git$ grep -i 'Test failed' wine-0.9.56-420-g22f146f.txt
> visual.c:1741: Test failed: double texbem failed: Got color
> 0x00ff00ff, expected 0x00ffff00.
> systray.c:89: Test failed: ret 0x1 which is not a window
> systray.c:90: Test failed: hWnd overwritten
> msg.c:9415: Test failed: 30: ShowWindow(SW_RESTORE): in msg 0x0047
> expecting wParam 0x8160 got 0x8162
> msg.c:9415: Test failed: 50: ShowWindow(SW_SHOWNORMAL): the msg 0x0047
> was expected, but got msg 0x0005 instead
> msg.c:9415: Test failed: 50: ShowWindow(SW_SHOWNORMAL): the msg 0x0003
> was expected, but got msg 0x0009 instead
> msg.c:9415: Test failed: 50: ShowWindow(SW_SHOWNORMAL): the msg 0x0005
> was expected, but got msg 0x0047 instead
> msg.c:9415: Test failed: 50: ShowWindow(SW_SHOWNORMAL): the msg
> sequence is not complete: expected 0000 - actual 0003
> msg.c:9415: Test failed: 56: ShowWindow(SW_SHOWNOACTIVATE): in msg
> 0x0047 expecting wParam 0x8170 got 0x8172
> win.c:3271: Test failed: pixel should be black, color is 00205860
> win.c:3275: Test failed: pixel should be black, color is 00205860
> win.c:3302: Test failed: pixel should be black, color is 00205860
>
> +heap adds:
> job.c:250: Test failed: GetState failed: 0x80004001
> job.c:266: Test failed: Resume failed to return BG_E_EMPTY error: 0x80004001
> input.c:470: Test failed: 01: 12 from 81 -> 01 unexpected
> input.c:470: Test failed: 01: a4 from 81 -> 01 unexpected
> input.c:461: Test failed: 03: 12 from 00 -> 00 instead of 80 -> 00
> input.c:461: Test failed: 03: a4 from 00 -> 00 instead of 80 -> 00
> input.c:538: Test failed: not enough messages found; looking for 0

Most of these are not real regressions. There are a number of race
conditions in the tests that will cause these things to fail
sometimes. You have to run make test several times in a row to make sure
they are real failures.

-- 
Alexandre Julliard
julliard at winehq.org


From nathan.beckmann at gmail.com  Thu Mar  6 02:38:30 2008
From: nathan.beckmann at gmail.com (Nathan Beckmann)
Date: Thu, 6 Mar 2008 00:38:30 -0800
Subject: [PATCH] GDI+: Implement GdipGetImageEncoders.
In-Reply-To: <1204744897-28734-1-git-send-email-nathan.beckmann@gmail.com>
References: <1204744897-28734-1-git-send-email-nathan.beckmann@gmail.com>
Message-ID: <3a22664a0803060038j43e96407x3049049fc4c4a1d3@mail.gmail.com>

Don't apply this patch.

The test cases crash on Windows.

I was using winetricks to test and accidentally did not test under Windows.

- Nathan

On Wed, Mar 5, 2008 at 11:21 AM, Nathan Beckmann
<nathan.beckmann at gmail.com> wrote:
> Implement helper GdipGetImageEncodersSize.
>
>  Also included tests.
>  ---
>   dlls/gdiplus/gdiplus.spec  |    4 +-
>   dlls/gdiplus/image.c       |   87 ++++++++++++++++++++++++++++++++++++++++++++
>   dlls/gdiplus/tests/image.c |   53 +++++++++++++++++++++++++++
>   include/gdiplusenums.h     |   13 +++++++
>   include/gdiplusflat.h      |    2 +
>   include/gdiplusimaging.h   |   35 ++++++++++++++++++
>   6 files changed, 192 insertions(+), 2 deletions(-)
>
>  diff --git a/dlls/gdiplus/gdiplus.spec b/dlls/gdiplus/gdiplus.spec
>  index b4f314a..a477086 100644
>  --- a/dlls/gdiplus/gdiplus.spec
>  +++ b/dlls/gdiplus/gdiplus.spec
>  @@ -284,8 +284,8 @@
>   @ stub GdipGetImageDecoders
>   @ stub GdipGetImageDecodersSize
>   @ stdcall GdipGetImageDimension(ptr ptr ptr)
>  -@ stub GdipGetImageEncoders
>  -@ stub GdipGetImageEncodersSize
>  +@ stdcall GdipGetImageEncoders(long long ptr)
>  +@ stdcall GdipGetImageEncodersSize(ptr ptr)
>   @ stub GdipGetImageFlags
>   @ stdcall GdipGetImageGraphicsContext(ptr ptr)
>   @ stdcall GdipGetImageHeight(ptr ptr)
>  diff --git a/dlls/gdiplus/image.c b/dlls/gdiplus/image.c
>  index 5871209..330d90f 100644
>  --- a/dlls/gdiplus/image.c
>  +++ b/dlls/gdiplus/image.c
>  @@ -831,3 +831,90 @@ GpStatus WINGDIPAPI GdipSetImagePalette(GpImage *image,
>
>      return NotImplemented;
>   }
>  +
>  +/*************************************************************************
>  + * Encoders -
>  + *   Implemented as dummy objects that let the user know which files are
>  + *   supported. Actual encoding is done by OLE.
>  + *
>  + *   This code is based heavily on libgdiplus (Mono):
>  + */
>  +
>  +typedef enum {
>  +    BMP,
>  +    ICO,
>  +} ImageFormat;
>  +
>  +#define NUM_ENCODERS_SUPPORTED 2
>  +
>  +/* ImageCodecInfo creation routines taken from libgdiplus */
>  +static const WCHAR bmp_codecname[] = {'B', 'u', 'i','l', 't', '-','i', 'n', ' ', 'B', 'M', 'P', 0}; /* Built-in BMP */
>  +static const WCHAR bmp_extension[] = {'*','.','B', 'M', 'P',';', '*','.', 'D','I', 'B',';', '*','.', 'R', 'L', 'E',0}; /* *.BMP;*.DIB;*.RLE */
>  +static const WCHAR bmp_mimetype[] = {'i', 'm', 'a','g', 'e', '/', 'b', 'm', 'p', 0}; /* image/bmp */
>  +static const WCHAR bmp_format[] = {'B', 'M', 'P', 0}; /* BMP */
>  +static const BYTE bmp_sig_pattern[] = { 0x42, 0x4D };
>  +static const BYTE bmp_sig_mask[] = { 0xFF, 0xFF };
>  +
>  +static const WCHAR ico_codecname[] = {'B', 'u', 'i','l', 't', '-','i', 'n', ' ', 'I', 'C', 'O', 0}; /* Built-in ICO */
>  +static const WCHAR ico_extension[] = {'*','.','I', 'C', 'O', 0}; /* *.ICO */
>  +static const WCHAR ico_mimetype[] = {'i', 'm', 'a','g', 'e', '/', 'x', '-', 'i', 'c', 'o', 'n', 0}; /* image/x-icon */
>  +static const WCHAR ico_format[] = {'I', 'C', 'O', 0}; /* ICO */
>  +static const BYTE ico_sig_pattern[] = { 0x00, 0x00, 0x01, 0x00 };
>  +static const BYTE ico_sig_mask[] = { 0xFF, 0xFF, 0xFF, 0xFF };
>  +
>  +static const ImageCodecInfo codecs[NUM_ENCODERS_SUPPORTED] =
>  +    {
>  +        { /* BMP */
>  +            /* Clsid */              { 0x557cf400, 0x1a04, 0x11d3, { 0x9a, 0x73, 0x0, 0x0, 0xf8, 0x1e, 0xf3, 0x2e } },
>  +            /* FormatID */           { 0xb96b3cabU, 0x0728U, 0x11d3U, {0x9d, 0x7b, 0x00, 0x00, 0xf8, 0x1e, 0xf3, 0x2e} },
>  +            /* CodecName */          (const WCHAR*) bmp_codecname,
>  +            /* DllName */            NULL,
>  +            /* FormatDescription */  (const WCHAR*) bmp_format,
>  +            /* FilenameExtension */  (const WCHAR*) bmp_extension,
>  +            /* MimeType */           (const WCHAR*) bmp_mimetype,
>  +            /* Flags */              ImageCodecFlagsEncoder | ImageCodecFlagsDecoder | ImageCodecFlagsSupportBitmap | ImageCodecFlagsBuiltin,
>  +            /* Version */            1,
>  +            /* SigCount */           1,
>  +            /* SigSize */            2,
>  +            /* SigPattern */         (const BYTE*) bmp_sig_pattern,
>  +            /* SigMask */            (const BYTE*) bmp_sig_mask,
>  +        },
>  +        { /* ICO */
>  +            /* Clsid */              { 0x557cf407, 0x1a04, 0x11d3, { 0x9a, 0x73, 0x0, 0x0, 0xf8, 0x1e, 0xf3, 0x2e } },
>  +            /* FormatID */           { 0xb96b3cb5U, 0x0728U, 0x11d3U, {0x9d, 0x7b, 0x00, 0x00, 0xf8, 0x1e, 0xf3, 0x2e} },
>  +            /* CodecName */          (const WCHAR*) ico_codecname,
>  +            /* DllName */            NULL,
>  +            /* FormatDescription */  (const WCHAR*) ico_format,
>  +            /* FilenameExtension */  (const WCHAR*) ico_extension,
>  +            /* MimeType */           (const WCHAR*) ico_mimetype,
>  +            /* Flags */              ImageCodecFlagsDecoder | ImageCodecFlagsSupportBitmap | ImageCodecFlagsBuiltin,
>  +            /* Version */            1,
>  +            /* SigCount */           1,
>  +            /* SigSize */            4,
>  +            /* SigPattern */         (const BYTE*) ico_sig_pattern,
>  +            /* SigMask */            (const BYTE*) ico_sig_mask,
>  +        },
>  +    };
>  +
>  +GpStatus WINGDIPAPI GdipGetImageEncodersSize(UINT *numEncoders, UINT *size)
>  +{
>  +    if (!numEncoders || !size)
>  +        return InvalidParameter;
>  +
>  +    *numEncoders = NUM_ENCODERS_SUPPORTED;
>  +    *size = sizeof (codecs);
>  +
>  +    return Ok;
>  +}
>  +
>  +GpStatus WINGDIPAPI GdipGetImageEncoders(UINT numEncoders, UINT size, ImageCodecInfo *encoders)
>  +{
>  +    if (!encoders ||
>  +        (numEncoders != NUM_ENCODERS_SUPPORTED) ||
>  +        (size != sizeof (codecs)))
>  +        return InvalidParameter;
>  +
>  +    memcpy(encoders, codecs, sizeof (codecs));
>  +
>  +    return Ok;
>  +}
>  diff --git a/dlls/gdiplus/tests/image.c b/dlls/gdiplus/tests/image.c
>  index 5ff164d..5f75c15 100644
>  --- a/dlls/gdiplus/tests/image.c
>  +++ b/dlls/gdiplus/tests/image.c
>  @@ -122,6 +122,58 @@ static void test_LoadingImages(void)
>      expect(InvalidParameter, stat);
>   }
>
>  +static void test_encoders(void)
>  +{
>  +    GpStatus stat;
>  +    UINT n;
>  +    UINT s;
>  +    ImageCodecInfo *codecs;
>  +    int i;
>  +    int bmp_found;
>  +
>  +    static const WCHAR bmp_format[] = {'B', 'M', 'P', 0};
>  +
>  +    stat = GdipGetImageEncodersSize(NULL, NULL);
>  +    expect(stat, InvalidParameter);
>  +
>  +    stat = GdipGetImageEncodersSize(&n, &s);
>  +    expect(stat, Ok);
>  +
>  +    codecs = GdipAlloc(sizeof(ImageCodecInfo) * n);
>  +    if (!codecs)
>  +        return;
>  +
>  +    stat = GdipGetImageEncoders(n, s, NULL);
>  +    expect(stat, InvalidParameter);
>  +
>  +    stat = GdipGetImageEncoders(0, s, codecs);
>  +    expect(stat, InvalidParameter);
>  +
>  +    stat = GdipGetImageEncoders(n, s-1, codecs);
>  +    expect(stat, InvalidParameter);
>  +
>  +    stat = GdipGetImageEncoders(n, s+1, codecs);
>  +    expect(stat, InvalidParameter);
>  +
>  +    stat = GdipGetImageEncoders(n, s, codecs);
>  +    expect(stat, Ok);
>  +
>  +    bmp_found = FALSE;
>  +    for (i = 0; i < n; i++)
>  +        {
>  +            if (CompareStringW(LOCALE_SYSTEM_DEFAULT, 0,
>  +                               codecs[i].FormatDescription, -1,
>  +                               bmp_format, -1) == CSTR_EQUAL) {
>  +                bmp_found = TRUE;
>  +                break;
>  +            }
>  +        }
>  +    if (!bmp_found)
>  +        ok(FALSE, "No BMP codec found.\n");
>  +
>  +    GdipFree(codecs);
>  +}
>  +
>   START_TEST(image)
>   {
>      struct GdiplusStartupInput gdiplusStartupInput;
>  @@ -137,6 +189,7 @@ START_TEST(image)
>      test_Scan0();
>      test_GetImageDimension();
>      test_LoadingImages();
>  +    test_encoders();
>
>      GdiplusShutdown(gdiplusToken);
>   }
>  diff --git a/include/gdiplusenums.h b/include/gdiplusenums.h
>  index 7c97005..c579ebe 100644
>  --- a/include/gdiplusenums.h
>  +++ b/include/gdiplusenums.h
>  @@ -257,6 +257,18 @@ enum HotkeyPrefix
>      HotkeyPrefixHide   = 2
>   };
>
>  +enum ImageCodecFlags
>  +{
>  +    ImageCodecFlagsEncoder             = 1,
>  +    ImageCodecFlagsDecoder             = 2,
>  +    ImageCodecFlagsSupportBitmap       = 4,
>  +    ImageCodecFlagsSupportVector       = 8,
>  +    ImageCodecFlagsSeekableEncode      = 16,
>  +    ImageCodecFlagsBlockingDecode      = 32,
>  +    ImageCodecFlagsBuiltin             = 65536,
>  +    ImageCodecFlagsSystem              = 131072,
>  +    ImageCodecFlagsUser                        = 262144
>  +};
>
>   #ifndef __cplusplus
>
>  @@ -286,6 +298,7 @@ typedef enum StringTrimming StringTrimming;
>   typedef enum StringFormatFlags StringFormatFlags;
>   typedef enum HotkeyPrefix HotkeyPrefix;
>   typedef enum PenAlignment GpPenAlignment;
>  +typedef enum ImageCodecFlags ImageCodecFlags;
>
>   #endif /* end of c typedefs */
>
>  diff --git a/include/gdiplusflat.h b/include/gdiplusflat.h
>  index 1f635ba..b15a4ea 100644
>  --- a/include/gdiplusflat.h
>  +++ b/include/gdiplusflat.h
>  @@ -257,6 +257,8 @@ GpStatus WINGDIPAPI GdipCreateBitmapFromStreamICM(IStream*,GpBitmap**);
>   GpStatus WINGDIPAPI GdipDisposeImage(GpImage*);
>   GpStatus WINGDIPAPI GdipFindFirstImageItem(GpImage*,ImageItemData*);
>   GpStatus WINGDIPAPI GdipFindNextImageItem(GpImage*,ImageItemData*);
>  +GpStatus WINGDIPAPI GdipGetImageEncodersSize(UINT *numEncoders, UINT *size);
>  +GpStatus WINGDIPAPI GdipGetImageEncoders(UINT numEncoders, UINT size, ImageCodecInfo *encoders);
>   GpStatus WINGDIPAPI GdipGetImageItemData(GpImage*,ImageItemData*);
>   GpStatus WINGDIPAPI GdipGetImageBounds(GpImage*,GpRectF*,GpUnit*);
>   GpStatus WINGDIPAPI GdipGetImageGraphicsContext(GpImage*,GpGraphics**);
>  diff --git a/include/gdiplusimaging.h b/include/gdiplusimaging.h
>  index c78e1b1..a843da1 100644
>  --- a/include/gdiplusimaging.h
>  +++ b/include/gdiplusimaging.h
>  @@ -43,6 +43,24 @@ public:
>      EncoderParameter Parameter[1];
>   };
>
>  +class ImageCodecInfo
>  +{
>  +public:
>  +    CLSID Clsid;
>  +    GUID  FormatID;
>  +    const WCHAR* CodecName;
>  +    const WCHAR* DllName;
>  +    const WCHAR* FormatDescription;
>  +    const WCHAR* FilenameExtension;
>  +    const WCHAR* MimeType;
>  +    DWORD Flags;
>  +    DWORD Version;
>  +    DWORD SigCount;
>  +    DWORD SigSize;
>  +    const BYTE* SigPattern;
>  +    const BYTE* SigMask;
>  +};
>  +
>   class BitmapData
>   {
>   public:
>  @@ -84,6 +102,23 @@ typedef struct EncoderParameters
>      EncoderParameter Parameter[1];
>   } EncoderParameters;
>
>  +typedef struct ImageCodecInfo
>  +{
>  +    CLSID Clsid;
>  +    GUID  FormatID;
>  +    const WCHAR* CodecName;
>  +    const WCHAR* DllName;
>  +    const WCHAR* FormatDescription;
>  +    const WCHAR* FilenameExtension;
>  +    const WCHAR* MimeType;
>  +    DWORD Flags;
>  +    DWORD Version;
>  +    DWORD SigCount;
>  +    DWORD SigSize;
>  +    const BYTE* SigPattern;
>  +    const BYTE* SigMask;
>  +} ImageCodecInfo;
>  +
>   typedef struct BitmapData
>   {
>      UINT Width;
>  --
>  1.5.4.2
>
>


From mahanuu at free.fr  Thu Mar  6 08:08:23 2008
From: mahanuu at free.fr (Emmanuel Maillard)
Date: Thu, 6 Mar 2008 15:08:23 +0100
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
Message-ID: <EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>

Hi,

I post a new quartzdrv patch for wine-0.9.56 on Darwine SF patches  
page :
http://sourceforge.net/tracker/index.php?func=detail&aid=1908759&group_id=69890&atid=526089

It's not fully update to wine changes (SysCommandSizeMove didn't be  
reviewed)
and don't contain all changes I initially planned but will be next time.

Cheers

Emmanuel


Le 2 mars 08 ? 19:53, Steven Edwards a ?crit :

> Hi,
>
> On Sun, Mar 2, 2008 at 12:50 PM, Stefan D?singer <stefan at codeweavers.com 
> > wrote:
>> Am Sonntag, 2. M?rz 2008 18:14:45 schrieb Adam Strzelecki:
>>> Do you guys think about reviving winequartz.drv?
>> I think everyone would greatly welcome efforts to continue it, and  
>> in fact
>> Steven Edwards is currently trying to bring the old driver up to  
>> date.
>
> There is a public branch where the Wine quartzdrv will go even if its
> not accepted in to Winehq. I have been from time to time bringing in
> infrastructure changes from the old winequartzdrv however the current
> tree is empty as the developer of the prior editions, Emmanuel
> Maillard,  is in the process of overhauling it from recent changes to
> the Wine driver model.
>
> Keep an eye on
>
> http://wiki.winehq.org/MacOSX/QuartzDriver
>
> And hopefully in the next few weeks we will have a newer patch in the
> winequartzdrv tree for a more recent version of Wine. I am not sure
> what design changes Emmanuel is wanting to make but hopefully they
> will be more to Alexandre's liking and can eventually go in to normal
> winehq. If you want to work on quartzdrv with Emmanuel, send him an
> email to get an idea of what he needs and what the design will be,
> then apply for write access to http://repo.or.cz and I will add you to
> the winequartzdrv branch.
>
> -- 
> Steven Edwards
>
> "There is one thing stronger than all the armies in the world, and
> that is an idea whose time has come." - Victor Hugo
>
>



From julliard at winehq.org  Thu Mar  6 09:32:25 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 06 Mar 2008 16:32:25 +0100
Subject: msi [2/3]: Fix handling of published installer properties
In-Reply-To: <22821af30803052111n38300ae8lf3c5cc66fc49ce6@mail.gmail.com>
	(James Hawkins's message of "Wed, 5 Mar 2008 23:11:43 -0600")
References: <22821af30803052111n38300ae8lf3c5cc66fc49ce6@mail.gmail.com>
Message-ID: <8763vzkgvq.fsf@wine.dyndns.org>

"James Hawkins" <jhawkins at codeweavers.com> writes:

> The tests are in the next patch.  Fixes bug 7189.
> http://bugs.winehq.org/show_bug.cgi?id=7189

You need to fix the todo_wine tests in the same patch, I can't apply a
patch that causes failures:

../../../tools/runtest -q -P wine -M msi.dll -T ../../.. -p msi_test.exe.so install.c && touch install.ok
install.c:2233: Test succeeded inside todo block: Expected ERROR_FILE_NOT_FOUND, got 2
install.c:2259: Test succeeded inside todo block: Expected ERROR_FILE_NOT_FOUND, got 2
install.c:2341: Test succeeded inside todo block: Expected ERROR_FILE_NOT_FOUND, got 2
install.c:2469: Test succeeded inside todo block: Expected ERROR_FILE_NOT_FOUND, got 2
install.c:2495: Test succeeded inside todo block: Expected ERROR_FILE_NOT_FOUND, got 2
install.c:2610: Test succeeded inside todo block: Expected ERROR_FILE_NOT_FOUND, got 2
install.c:2633: Test succeeded inside todo block: Expected ERROR_FILE_NOT_FOUND, got 2
install.c:2797: Test succeeded inside todo block: Expected ERROR_FILE_NOT_FOUND, got 2
install.c:2823: Test succeeded inside todo block: Expected ERROR_FILE_NOT_FOUND, got 2
install.c:2900: Test succeeded inside todo block: Expected ERROR_FILE_NOT_FOUND, got 2
install.c:3241: Test succeeded inside todo block: Expected ERROR_FILE_NOT_FOUND, got 2
make: *** [install.ok] Error 11

And if I apply your 3/3 patch I now get:

../../../tools/runtest -q -P wine -M msi.dll -T ../../.. -p msi_test.exe.so install.c && touch install.ok
install.c:4398: Test failed: Expected ERROR_UNKNOWN_PRODUCT, got 0
make: *** [install.ok] Error 1

-- 
Alexandre Julliard
julliard at winehq.org


From martin at hinner.info  Thu Mar  6 09:56:42 2008
From: martin at hinner.info (Martin Hinner)
Date: Thu, 6 Mar 2008 16:56:42 +0100
Subject: Getting apps running under Wine
In-Reply-To: <3a768c550803030909q29647b57i704040f69b7dac72@mail.gmail.com>
References: <24d1a1690803030416u128ff6a7i59ad69eeeb06f976@mail.gmail.com>
	<3a768c550803030909q29647b57i704040f69b7dac72@mail.gmail.com>
Message-ID: <24d1a1690803060756u65cc9de6vb066e242699aa031@mail.gmail.com>

Hi,

> Please open a bug at our bugzilla (bugs.winehq.org).  Attaching
>  screenshots of the problem would help.  We discourage you from working
>  around Wine bugs, because if we fix the bug, we'll break your app in
>  the process.  Better to fix Wine.

I 100% agree, but I wasn't sure if wine team is willing/able to help
with this. Will do.

>  >  2) Windows drivers. We use DLL that depends on some Win32 drivers.
>  >  Linux driver is available with similar API, so it's not a big problem
>  >  to change our application to use Linux library. I understand that
>  >  clearest way how to solve this problem is to make .dll.so file, but
>  >  it's quite complicated for this particular application and I would
>  >  prefer much more to add few if conditions to our Windows code that
>  >  would recognize Wine under Linux and load native .so file (not
>  >  .dll.so!). Is this possible? How to deal with different calling
>  >  conventions between gcc and Visual C++ 2003 ?
> I'm not sure what you mean by different calling conventions; gcc
>  supports the __stdcall convention, at least, and VC++ supports
>  __cdecl.  If you're using __fastcall you'll need to change it to one
>  of the others, I think.

Unfortunately I cannot change calling convention for one of DLLs as
it's closed-source 3rd party file.

>  As far as detecting Wine, again we prefer you don't.  Would it be any
>  great problem to ship a Linux version that called the Linux drivers,
>  and a Windows version that called the Windows drivers?

Having two versions of Win32 executable is IMHO not very practical, as
99% of the code would be same for both applications.

The original question was about loading Linux .so files directly from
.exe. How do we load (dlopen, dlsym) a .so library from .exe running
under Wine ? This would solve our problem.

Martin


From juan.lang at gmail.com  Thu Mar  6 10:03:25 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 6 Mar 2008 08:03:25 -0800
Subject: Getting apps running under Wine
In-Reply-To: <24d1a1690803060756u65cc9de6vb066e242699aa031@mail.gmail.com>
References: <24d1a1690803030416u128ff6a7i59ad69eeeb06f976@mail.gmail.com>
	<3a768c550803030909q29647b57i704040f69b7dac72@mail.gmail.com>
	<24d1a1690803060756u65cc9de6vb066e242699aa031@mail.gmail.com>
Message-ID: <3a768c550803060803k697cc0d7i46c058923f75425a@mail.gmail.com>

>  Having two versions of Win32 executable is IMHO not very practical, as
>  99% of the code would be same for both applications.

That wasn't exactly what I intended.  You said in your original email,

> We use DLL that depends on some Win32 drivers.

My question is, could you ship a Linux version of this DLL (.so) that
calls the Linux drivers instead?

>  The original question was about loading Linux .so files directly from
>  .exe. How do we load (dlopen, dlsym) a .so library from .exe running
>  under Wine ? This would solve our problem.

You can't exactly.  If you make your app a winelib app, then you can,
but you won't be able to link such a beast for Windows, that is, as a
.exe rather than a .exe.so.

Again, my suggestion is to have a Windows version of the DLL that
calls the Windows drivers, and a Linux version of the same .dll that
is a winelib dll (.dll.so) that calls the Linux drivers.  The rest of
the code would remain the same, but you could either install the
appropriate version depending on whether you're running in Linux, or
use some DLL override magic to specify which to use in Wine.

Hope that helps,
--Juan


From dank at kegel.com  Thu Mar  6 10:07:06 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 6 Mar 2008 08:07:06 -0800
Subject: Recent valgrind regressions in msxml3
Message-ID: <a71bd89a0803060807h361fcbe0gfc36c3ef4da326ad@mail.gmail.com>

Hi Alistair,
I'm seeing some regressions in msxml3 in yesterday's git; see
http://kegel.com/wine/valgrind/logs-2008-03-05/vg-msxml3_domdoc-diff.txt
e.g.
+ Invalid read of size 4
+    at  HEAP_ValidateInUseArena (heap.c:925)
+    by  RtlFreeHeap (heap.c:1288)
+    by  SysFreeString (oleaut.c:196)
+    by  test_domdoc (domdoc.c:658)
+    by  func_domdoc (domdoc.c:2875)
+    by  run_test (test.h:406)
+    by  main (test.h:455)
etc.
Could you have a look?  Also, have you tried running
Valgrind yourself?  It's not hard at all these days.
- Dan


From arbuckle911 at gmail.com  Thu Mar  6 10:08:11 2008
From: arbuckle911 at gmail.com (Christopher Harvey)
Date: Thu, 06 Mar 2008 11:08:11 -0500
Subject: slight winsock design change proposal
In-Reply-To: <22821af30803051637s6237aa1el9f153278e8441e53@mail.gmail.com>
References: <47CF3AC7.9010603@gmail.com>
	<22821af30803051637s6237aa1el9f153278e8441e53@mail.gmail.com>
Message-ID: <47D016EB.9030602@gmail.com>

James Hawkins wrote:
> On Wed, Mar 5, 2008 at 6:28 PM, Christopher Harvey
> <arbuckle911 at gmail.com> wrote:
>   
>> I'm giving the mswsock.c file some development time. I need to know if
>>  the winsock API has been inited. This has already been implemented, but
>>  I need to get access to the num_startup variable from the mswsock.c
>>  file. I hacked a bit and got it, but hesitate to continue because I
>>  don't know if I changed it in the proper way to get access. If this
>>  change is fine please accept it. if not please advise on the proper way
>>  to see if winsock has been inited or not, from the  mswsock.c file.
>>
>>  Thanks.
>>
>> diff --git a/dlls/mswsock/mswsock.c b/dlls/mswsock/mswsock.c
>>  index d283405..7f339c0 100644
>>  --- a/dlls/mswsock/mswsock.c
>>  +++ b/dlls/mswsock/mswsock.c
>>  @@ -62,9 +62,10 @@ BOOL WINAPI AcceptEx(
>>                                        operation */
>>   {
>>      FIXME("(listen=%ld, accept=%ld, %p, %d, %d, %d, %p, %p), not implemented\n",
>>  -       sListenSocket,sAcceptSocket,lpOutputBuffer,dwReceiveDataLength,
>>  -       dwLocalAddressLength,dwRemoteAddressLength,lpdwBytesReceived,lpOverlapped
>>  -    );
>>  +         sListenSocket,sAcceptSocket,lpOutputBuffer,dwReceiveDataLength,
>>  +         dwLocalAddressLength,dwRemoteAddressLength,lpdwBytesReceived,lpOverlapped
>>  +         );
>>  +    //get_num_startup();  Use this to see if Winsock has been inited yet or not
>>      return FALSE;
>>   }
>>
>>  diff --git a/dlls/ws2_32/socket.c b/dlls/ws2_32/socket.c
>>  index 502f309..03030a2 100644
>>  --- a/dlls/ws2_32/socket.c
>>  +++ b/dlls/ws2_32/socket.c
>>  @@ -5021,3 +5021,8 @@ INT WINAPI WSCWriteProviderOrder( LPDWORD entry, DWORD number )
>>      FIXME("(%p 0x%08x) Stub!\n", entry, number);
>>      return 0;
>>   }
>>  +
>>  +INT get_num_startup()
>>  +{
>>  +    return num_startup;
>>  +}
>>  diff --git a/include/winsock2.h b/include/winsock2.h
>>  index a302331..dcca0e7 100644
>>  --- a/include/winsock2.h
>>  +++ b/include/winsock2.h
>>  @@ -728,6 +728,7 @@ typedef INT (WINAPI *LPFN_WSASTRINGTOADDRESSW)(LPSTR,INT,LPWSAPROTOCOL_INFOA,LPS
>>   typedef DWORD (WINAPI *LPFN_WSAWAITFORMULTIPLEEVENTS)(DWORD,const WSAEVENT*,BOOL,DWORD,BOOL);
>>   #endif /* WS_API_TYPEDEFS */
>>
>>  +typedef INT get_num_startup();
>>
>>   /* Condition function return values */
>>   #define CF_ACCEPT       0x0000
>>
>>     
>
> Are you seriously asking if adding a hack to a public header in order
> to read a global variable from another dll is acceptable?  That pretty
> much sums up the answer.
>
>   
I can't think of any other way. I'm asking for help.


From juan.lang at gmail.com  Thu Mar  6 10:12:03 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 6 Mar 2008 08:12:03 -0800
Subject: slight winsock design change proposal
In-Reply-To: <47D016EB.9030602@gmail.com>
References: <47CF3AC7.9010603@gmail.com>
	<22821af30803051637s6237aa1el9f153278e8441e53@mail.gmail.com>
	<47D016EB.9030602@gmail.com>
Message-ID: <3a768c550803060812w5a165k2c4a93ede859fe71@mail.gmail.com>

>  I'm giving the mswsock.c file some development time. I need to know if
>  the winsock API has been inited.

The question is, why do you need to know that?  Can't you just
initialize it yourself?  Then you'll know it has been.
--Juan


From winehacker at gmail.com  Thu Mar  6 10:12:22 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Thu, 6 Mar 2008 11:12:22 -0500
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
Message-ID: <19e31a080803060812w296fef4w7c46660fd1f52f55@mail.gmail.com>

Hi,

On Thu, Mar 6, 2008 at 9:08 AM, Emmanuel Maillard <mahanuu at free.fr> wrote:
>  I post a new quartzdrv patch for wine-0.9.56 on Darwine SF patches
>  page :
>  http://sourceforge.net/tracker/index.php?func=detail&aid=1908759&group_id=69890&atid=526089
>
>  It's not fully update to wine changes (SysCommandSizeMove didn't be
>  reviewed)
>  and don't contain all changes I initially planned but will be next time.

It looks really good. With the most recent changes I can start Office
2003 applications such as Excel and Winword

http://steven-edwards.kicks-ass.org/~sedwards/quartzdrv/excel2.png
http://steven-edwards.kicks-ass.org/~sedwards/quartzdrv/excel3.png
http://steven-edwards.kicks-ass.org/~sedwards/quartzdrv/excel4.png
http://steven-edwards.kicks-ass.org/~sedwards/quartzdrv/excel5.png
http://steven-edwards.kicks-ass.org/~sedwards/quartzdrv/winword.png

The only problem I have is that the windows are not being managed. It
looks like MainMenu.nib is not being created properly by the
patch/script. Is this a known issue or is that SysCommandSizeMove
problem?

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From arbuckle911 at gmail.com  Thu Mar  6 10:18:27 2008
From: arbuckle911 at gmail.com (Christopher Harvey)
Date: Thu, 06 Mar 2008 11:18:27 -0500
Subject: slight winsock design change proposal
In-Reply-To: <3a768c550803060812w5a165k2c4a93ede859fe71@mail.gmail.com>
References: <47CF3AC7.9010603@gmail.com>	
	<22821af30803051637s6237aa1el9f153278e8441e53@mail.gmail.com>	
	<47D016EB.9030602@gmail.com>
	<3a768c550803060812w5a165k2c4a93ede859fe71@mail.gmail.com>
Message-ID: <47D01953.8040501@gmail.com>

Juan Lang wrote:
>>  I'm giving the mswsock.c file some development time. I need to know if
>>  the winsock API has been inited.
>>     
>
> The question is, why do you need to know that?  Can't you just
> initialize it yourself?  Then you'll know it has been.
> --Juan
>
>   
There are some functions that return errors if WSAStartup hasn't been 
called. I think wine should do that too, rather than call it for the 
application.


From juan.lang at gmail.com  Thu Mar  6 10:21:18 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 6 Mar 2008 08:21:18 -0800
Subject: slight winsock design change proposal
In-Reply-To: <47D01953.8040501@gmail.com>
References: <47CF3AC7.9010603@gmail.com>
	<22821af30803051637s6237aa1el9f153278e8441e53@mail.gmail.com>
	<47D016EB.9030602@gmail.com>
	<3a768c550803060812w5a165k2c4a93ede859fe71@mail.gmail.com>
	<47D01953.8040501@gmail.com>
Message-ID: <3a768c550803060821w522496ecwa7768578641bfd6@mail.gmail.com>

>  There are some functions that return errors if WSAStartup hasn't been
>  called. I think wine should do that too, rather than call it for the
>  application.

Perhaps it should, but that should be fixed in ws2_32, not in mswsock.
--Juan


From dmitry at codeweavers.com  Thu Mar  6 10:24:55 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Fri, 7 Mar 2008 00:24:55 +0800
Subject: slight winsock design change proposal
References: <47CF3AC7.9010603@gmail.com>	<22821af30803051637s6237aa1el9f153278e8441e53@mail.gmail.com>	<47D016EB.9030602@gmail.com><3a768c550803060812w5a165k2c4a93ede859fe71@mail.gmail.com>
	<47D01953.8040501@gmail.com>
Message-ID: <012001c87fa6$9ed8dbd0$a600fea9@DMITRY>

"Christopher Harvey" <arbuckle911 at gmail.com> wrote:

> Juan Lang wrote:
>>>  I'm giving the mswsock.c file some development time. I need to know if
>>>  the winsock API has been inited.
>>>     
>>
>> The question is, why do you need to know that?  Can't you just
>> initialize it yourself?  Then you'll know it has been.
>> --Juan
>>
>>   
> There are some functions that return errors if WSAStartup hasn't been 
> called. I think wine should do that too, rather than call it for the 
> application.

It would really help to at least name those "some functions", or even
better to provide a test case.

-- 
Dmitry.


From arbuckle911 at gmail.com  Thu Mar  6 10:54:00 2008
From: arbuckle911 at gmail.com (Christopher Harvey)
Date: Thu, 06 Mar 2008 11:54:00 -0500
Subject: slight winsock design change proposal
In-Reply-To: <012001c87fa6$9ed8dbd0$a600fea9@DMITRY>
References: <47CF3AC7.9010603@gmail.com>	<22821af30803051637s6237aa1el9f153278e8441e53@mail.gmail.com>	<47D016EB.9030602@gmail.com><3a768c550803060812w5a165k2c4a93ede859fe71@mail.gmail.com>
	<47D01953.8040501@gmail.com>
	<012001c87fa6$9ed8dbd0$a600fea9@DMITRY>
Message-ID: <47D021A8.8020400@gmail.com>

Dmitry Timoshkov wrote:
> "Christopher Harvey" <arbuckle911 at gmail.com> wrote:
>
>> Juan Lang wrote:
>>>>  I'm giving the mswsock.c file some development time. I need to 
>>>> know if
>>>>  the winsock API has been inited.
>>>>     
>>>
>>> The question is, why do you need to know that?  Can't you just
>>> initialize it yourself?  Then you'll know it has been.
>>> --Juan
>>>
>>>   
>> There are some functions that return errors if WSAStartup hasn't been 
>> called. I think wine should do that too, rather than call it for the 
>> application.
>
> It would really help to at least name those "some functions", or even
> better to provide a test case.
>
Alright, I see where I'm going wrong. I was reading the WSAAccept 
function when I thought I was reading the AcceptEx page in MSDN.

Sorry.


From cesar at ecuarock.net  Thu Mar  6 11:06:12 2008
From: cesar at ecuarock.net (Cesar Izurieta)
Date: Thu, 6 Mar 2008 12:06:12 -0500
Subject: Google Summer of Code - Case Insensitive Filenames
Message-ID: <e3d3ae8f0803060906m6046a9ahebceae6536271972@mail.gmail.com>

Hello everyone,

I would like to participate in this year's google summer of code doing
some work on case insensitive filenames (
http://wiki.winehq.org/CaseInsensitiveFilenames )

I have some experience working with FUSE ( see
http://code.google.com/p/dejumble/ ).

Is there any formal process I must go through to enter google summer
of code for wine?

Thanks.

Cesar Izurieta


From andrey.turkin at gmail.com  Thu Mar  6 11:06:36 2008
From: andrey.turkin at gmail.com (Andrey Turkin)
Date: Thu, 06 Mar 2008 20:06:36 +0300
Subject: slight winsock design change proposal
In-Reply-To: <47D021A8.8020400@gmail.com>
References: <47CF3AC7.9010603@gmail.com>	<22821af30803051637s6237aa1el9f153278e8441e53@mail.gmail.com>	<47D016EB.9030602@gmail.com><3a768c550803060812w5a165k2c4a93ede859fe71@mail.gmail.com>	<47D01953.8040501@gmail.com>	<012001c87fa6$9ed8dbd0$a600fea9@DMITRY>
	<47D021A8.8020400@gmail.com>
Message-ID: <47D0249C.6080305@gmail.com>

Actually the correct way IMHO is to implement 
AcceptEx/GetAcceptExSockaddrs/TransmitFile in ws2_32.dll, and use 
WSAIoctl(SIO_GET_EXTENSION_FUNCTION_POINTER) to get function addresses 
in mswsock.dll. I believe this is that Windows' mswsock.dll do.

Christopher Harvey wrote:
> Dmitry Timoshkov wrote:
>   
>> "Christopher Harvey" <arbuckle911 at gmail.com> wrote:
>>
>>     
>>> Juan Lang wrote:
>>>       
>>>>>  I'm giving the mswsock.c file some development time. I need to 
>>>>> know if
>>>>>  the winsock API has been inited.
>>>>>     
>>>>>           
>>>> The question is, why do you need to know that?  Can't you just
>>>> initialize it yourself?  Then you'll know it has been.
>>>> --Juan
>>>>
>>>>   
>>>>         
>>> There are some functions that return errors if WSAStartup hasn't been 
>>> called. I think wine should do that too, rather than call it for the 
>>> application.
>>>       
>> It would really help to at least name those "some functions", or even
>> better to provide a test case.
>>
>>     
> Alright, I see where I'm going wrong. I was reading the WSAAccept 
> function when I thought I was reading the AcceptEx page in MSDN.
>
> Sorry.
>
>
>
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080306/377a1017/attachment.htm 

From mpartap at gmx.net  Thu Mar  6 11:27:11 2008
From: mpartap at gmx.net (Marcel Partap)
Date: Thu, 06 Mar 2008 18:27:11 +0100
Subject: Google Summer of Code - Case Insensitive Filenames
In-Reply-To: <e3d3ae8f0803060906m6046a9ahebceae6536271972@mail.gmail.com>
References: <e3d3ae8f0803060906m6046a9ahebceae6536271972@mail.gmail.com>
Message-ID: <47D0296F.9020404@gmx.net>

> Is there any formal process I must go through to enter google summer
> of code for wine?
Just filing Google's application will do, although you may want to crash in #winehackers ..
What you should do IN TIME is to get intimate with the toolchain! That was the hardest part for me - 
getting started on WINE - but if you already have programming experience I doubt that is a problem.
However, from personal experience of last years SoC, communicate your implementation ideas as early 
as possible and don't be afraid to ask for help here on the list would probably be the two most 
important things...
And another lesson learned: it takes a lot of polish for your patches to be approved and committed 
by officer Julliard, be prepared to reiterate over your submitted code several times :D
Else - go for it, task sounds reasonable achievable. And the t-shirt is really worth the effort :)
regards

-- 
<div id="signature">
   "Obstacles are those frightful things you see when you take your eyes off your goal."
                                                               -- Henry Ford (1863-1947)
   Change the world! Vote revolution: http://hfopi.org/vote-future
</div>


From jan.wine at zerebecki.de  Thu Mar  6 12:52:24 2008
From: jan.wine at zerebecki.de (Jan Zerebecki)
Date: Thu, 6 Mar 2008 19:52:24 +0100
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <20080304152346.GF353@byleth.sc-networks.de>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>
	<200803041535.18561.kai.blin@gmail.com>
	<20080304152346.GF353@byleth.sc-networks.de>
Message-ID: <20080306185224.GA26705@crissy.swd.zerebecki.de>

On Tue, Mar 04, 2008 at 04:23:46PM +0100, Christoph Frick wrote:
> On Tue, Mar 04, 2008 at 03:35:11PM +0100, Kai Blin wrote:
> 
> > No argument on the US part. I'm still convinced that by EU laws,
> > you're allowed to crack an app you bought in order to make it run on
> > your software.  As this hasn't been tested in court yet, though, I'll
> > concede.
> 
> IANAL, but since 2008 germany adopted a law from a EU proposal (maybe
> other countries added it before), that disallows circumventing copy
> protections at all. so in theory your statement is not true any longer
> for the EU.

Last time I read that part of the german law my understanding was that
the part about copy prevention doesn't apply to software.


Jan



From leslie_alistair at hotmail.com  Thu Mar  6 15:14:56 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Fri, 7 Mar 2008 08:14:56 +1100
Subject: Recent valgrind regressions in msxml3
References: <a71bd89a0803060807h361fcbe0gfc36c3ef4da326ad@mail.gmail.com>
Message-ID: <fqpmls$ndb$1@ger.gmane.org>


"Dan Kegel" <dank at kegel.com> wrote in message 
news:a71bd89a0803060807h361fcbe0gfc36c3ef4da326ad at mail.gmail.com...
> Hi Alistair,
> I'm seeing some regressions in msxml3 in yesterday's git; see
> http://kegel.com/wine/valgrind/logs-2008-03-05/vg-msxml3_domdoc-diff.txt
> e.g.
> + Invalid read of size 4
> +    at  HEAP_ValidateInUseArena (heap.c:925)
> +    by  RtlFreeHeap (heap.c:1288)
> +    by  SysFreeString (oleaut.c:196)
> +    by  test_domdoc (domdoc.c:658)
> +    by  func_domdoc (domdoc.c:2875)
> +    by  run_test (test.h:406)
> +    by  main (test.h:455)
> etc.
> Could you have a look?  Also, have you tried running
> Valgrind yourself?  It's not hard at all these days.
Hi Dan,
  Thanks for the heads up. I'll have a look tonight.

Best Regards
 Alistair Leslie-Hughes 




From m.b.lankhorst at gmail.com  Thu Mar  6 16:48:21 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Thu, 6 Mar 2008 14:48:21 -0800
Subject: Forgot a release_obj in my broadcastsystemmessage patch.
Message-ID: <b130c85e0803061448j6375659axd41428ba92cc0e32@mail.gmail.com>

Hi,

Please don't apply the broadcastsystemmessage patch, there is a bug in
enum_top_windows that I accidentally copied from enum_desktop. I'll
send a fix for the enum_desktop call and a fixed version of the patch.

Cheers,
Maarten.


From cesar at ecuarock.net  Thu Mar  6 17:47:35 2008
From: cesar at ecuarock.net (Cesar Izurieta)
Date: Thu, 6 Mar 2008 18:47:35 -0500
Subject: Google Summer of Code - Case Insensitive Filenames
In-Reply-To: <47D0296F.9020404@gmx.net>
References: <e3d3ae8f0803060906m6046a9ahebceae6536271972@mail.gmail.com>
	<47D0296F.9020404@gmx.net>
Message-ID: <e3d3ae8f0803061547p5fdbd9cas4c7a2807eee7c777@mail.gmail.com>

Thanks for your help. I'll prepare something and post it here for
suggestions soon.

On Thu, Mar 6, 2008 at 12:27 PM, Marcel Partap <mpartap at gmx.net> wrote:

> > Is there any formal process I must go through to enter google summer
> > of code for wine?
> Just filing Google's application will do, although you may want to crash
> in #winehackers ..
> What you should do IN TIME is to get intimate with the toolchain! That was
> the hardest part for me -
> getting started on WINE - but if you already have programming experience I
> doubt that is a problem.
> However, from personal experience of last years SoC, communicate your
> implementation ideas as early
> as possible and don't be afraid to ask for help here on the list would
> probably be the two most
> important things...
> And another lesson learned: it takes a lot of polish for your patches to
> be approved and committed
> by officer Julliard, be prepared to reiterate over your submitted code
> several times :D
> Else - go for it, task sounds reasonable achievable. And the t-shirt is
> really worth the effort :)
> regards
>
> --
> <div id="signature">
>   "Obstacles are those frightful things you see when you take your eyes
> off your goal."
>                                                               -- Henry
> Ford (1863-1947)
>   Change the world! Vote revolution: http://hfopi.org/vote-future
> </div>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080306/3e0bd27d/attachment.htm 

From chris.kcat at gmail.com  Thu Mar  6 18:15:20 2008
From: chris.kcat at gmail.com (Chris Robinson)
Date: Thu, 6 Mar 2008 16:15:20 -0800
Subject: WGL/WINED3D: add WGL_WINE_pixel_format_passthrough
In-Reply-To: <20080306223641.309510@gmx.net>
References: <20080306223641.309510@gmx.net>
Message-ID: <200803061615.20481.chris.kcat@gmail.com>

On Thursday 06 March 2008 02:36:41 pm Roderick Colenbrander wrote:
> WGL only allows you to set the pixel format once for a HDC. This requires a
> WINE-specific WGL extension which allows us to set the pixel format again.
> The patch does this and it works correctly in DirectX8/9 SDK samples.

I'm pretty sure this can cause a resource leak if it's done on a D3D child 
window (the existing offscreen surfaces won't be destroyed). Though I can't 
say I like the idea of the patch since it does nothing for non-Wine, or even 
non-winex11.drv Wine, to fix the issue.


From winehacker at gmail.com  Thu Mar  6 19:44:32 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Thu, 6 Mar 2008 20:44:32 -0500
Subject: user32: Add a better stub for broadcastsystemmessage, try 2
In-Reply-To: <b130c85e0803061547l3eb9403g246b890fcf7d2d2c@mail.gmail.com>
References: <b130c85e0803061547l3eb9403g246b890fcf7d2d2c@mail.gmail.com>
Message-ID: <19e31a080803061744h3f8d832eh6d0b2f50e27a001c@mail.gmail.com>

On Thu, Mar 6, 2008 at 6:47 PM, Maarten Lankhorst
<m.b.lankhorst at gmail.com> wrote:
> Fixes: BroadcastSystemMessage to not hang other processes any more.

+static BOOL CALLBACK broadcastsystemmessagetopwindowcallback(HWND
top_window, LPARAM lp)
+static BOOL CALLBACK broadcastsystemmessagewindowstationcallback(
LPWSTR winsta, LPARAM lp )

Just a matter of style...if ever there was a case for abbrevation this is it.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From dmitry at codeweavers.com  Thu Mar  6 20:18:17 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Fri, 7 Mar 2008 10:18:17 +0800
Subject: user32: Fix enumeration and add tests for EnumWindowStations
	andEnumDesktops, try X
References: <b130c85e0803061116k1699ad8fr1aa47d549852db98@mail.gmail.com>
Message-ID: <00c901c87ff9$83781b50$a600fea9@DMITRY>

"Maarten Lankhorst" <m.b.lankhorst at gmail.com> wrote:

> Fixed, and with tests!

Why not use A versions of APIs to simplify the tests?

Also, though that's a matter of taste, ok(hdesk != 0) is more
readable IMO than ok(!!hdesk).

-- 
Dmitry.


From thunderbird2k at gmx.net  Fri Mar  7 02:55:27 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Fri, 07 Mar 2008 09:55:27 +0100
Subject: WGL/WINED3D: add WGL_WINE_pixel_format_passthrough
In-Reply-To: <200803061615.20481.chris.kcat@gmail.com>
References: <20080306223641.309510@gmx.net>
	<200803061615.20481.chris.kcat@gmail.com>
Message-ID: <20080307085527.190280@gmx.net>

> On Thursday 06 March 2008 02:36:41 pm Roderick Colenbrander wrote:
> > WGL only allows you to set the pixel format once for a HDC. This
> requires a
> > WINE-specific WGL extension which allows us to set the pixel format
> again.
> > The patch does this and it works correctly in DirectX8/9 SDK samples.
> 
> I'm pretty sure this can cause a resource leak if it's done on a D3D child
> window (the existing offscreen surfaces won't be destroyed). Though I
> can't 
> say I like the idea of the patch since it does nothing for non-Wine, or
> even 
> non-winex11.drv Wine, to fix the issue.

In the non-Wine case you would need WineD3D child windows. I don't like that and it would be a performance hit. Right now we don't have a functioning quartz driver. When it comes around the function should be ported over.

Roderick
-- 
Psst! Geheimtipp: Online Games kostenlos spielen bei den GMX Free Games! 
http://games.entertainment.web.de/de/entertainment/games/free


From rob at codeweavers.com  Fri Mar  7 02:57:10 2008
From: rob at codeweavers.com (Robert Shearman)
Date: Fri, 07 Mar 2008 08:57:10 +0000
Subject: Make winecfg DPI interval to be the same as in Windows
In-Reply-To: <200803062057.44835.research@science.su>
References: <200803062057.44835.research@science.su>
Message-ID: <47D10366.8050907@codeweavers.com>

L. Rahyen wrote:
> @@ -37,7 +37,7 @@ WINE_DEFAULT_DEBUG_CHANNEL(winecfg);
>  
>  #define RES_MAXLEN 5 /* the maximum number of characters in a screen dimension. 5 digits should be plenty, what kind of crazy person runs their screen >10,000 pixels across? */
>  #define MINDPI 96
> -#define MAXDPI 160
> +#define MAXDPI 480
>  #define DEFDPI 96
>  
>  static const char logpixels_reg[] = "System\\CurrentControlSet\\Hardware Profiles\\Current\\Software\\Fonts";
> @@ -243,9 +243,12 @@ static void on_d3d_pshader_mode_clicked(HWND dialog) {
>  }
>  static INT read_logpixels_reg(void)
>  {
> +    static const WCHAR szLogPixels[] = {'L', 'o', 'g', 'P', 'i', 'x', 'e', 'l', 's', 0};
>      DWORD dwLogPixels;
> -    char *buf  = get_reg_key(HKEY_LOCAL_MACHINE, logpixels_reg,
> -                             "LogPixels", NULL);
> +    WCHAR *buf;
> +    WCHAR szLogPixelsReg[MAXBUFLEN];
> +    MultiByteToWideChar(GetACP(), 0, logpixels_reg, -1, szLogPixelsReg, sizeof(szLogPixelsReg)/sizeof(szLogPixelsReg[0]) );
> +    buf = get_reg_keyW(HKEY_LOCAL_MACHINE, szLogPixelsReg, szLogPixels, NULL);
>      dwLogPixels = buf ? *buf : DEFDPI;
>      HeapFree(GetProcessHeap(), 0, buf);
>      return dwLogPixels;
>   

Don't convert a constant string using MultiByteToWideChar.

-- 
Rob Shearman



From rob at codeweavers.com  Fri Mar  7 03:02:19 2008
From: rob at codeweavers.com (Robert Shearman)
Date: Fri, 07 Mar 2008 09:02:19 +0000
Subject: [3/6] qmgr: Add a mutex to BackgroundCopyJob.
In-Reply-To: <20080307030552.GL31625@linux.ucla.edu>
References: <20080307030552.GL31625@linux.ucla.edu>
Message-ID: <47D1049B.4020208@codeweavers.com>

Dan Hipschman wrote:
> Pretty much the same as yesterday but I changed to using mutexes instead
> of critical sections since I need to wait on two at once (one for the
> job and the other for the file when updating progress).
>   

I'm not sure this is a correct reason for mutexes instead of critical 
sections. Either way, you need to have a strict ordering so that you 
don't deadlock and critical sections use mutexes underneath. Unless 
you're going to be using a named mutex to synchronise across processes 
or you're going to have threads quit whilst holding the mutex, then the 
only difference will be that the code is slower when using mutexes 
because of the necessary server call, which more often than not can be 
avoided with critical sections.

-- 
Rob Shearman



From jacek at codeweavers.com  Fri Mar  7 05:55:14 2008
From: jacek at codeweavers.com (Jacek Caban)
Date: Fri, 07 Mar 2008 12:55:14 +0100
Subject: add realization of HTMLDocument_write,HTMLDocument_open
In-Reply-To: <200803071148.27757.ivan@etersoft.ru>
References: <200803071148.27757.ivan@etersoft.ru>
Message-ID: <47D12D22.9060204@codeweavers.com>

Hi Ivan,

Ivan Sinitsin wrote:
> This patch adds realization of function HTMLDocument_write, and 
> HTMLDocument_open (it needed for method HTMLDocument_write).
>
> Changelog:
> This patch adds realization of function HTMLDocument_write, and 
> HTMLDocument_open.
>   

First of all, these should be two separated patches.

> static HRESULT WINAPI HTMLDocument_write(IHTMLDocument2 *iface, SAFEARRAY *psarray)
>  {
> -    FIXME("(%p)->(%p)\n", iface, psarray);
> -    return E_NOTIMPL;
> +    HRESULT hres;
> +    VARIANT *pvar;
> +    IHTMLElement *pbody;
> +    BSTR vtext;
> +    int i;
> +
> +    vtext = SysAllocString(L"");
> +
> +    HTMLDocument_get_body(iface,&pbody);

You can't assume that write will be called inside body element.

> +
> +    hres = IHTMLElement_get_innerHTML(pbody, &vtext);

You leak vtext memory here. Also you shouldn't use get_innerHTML at all.

> +    if (FAILED(hres)) {
> +        vtext = SysAllocString(L"");
> +    }
> +
> +    hres=SafeArrayAccessData(psarray, (void **)&pvar);
> +    if (FAILED(hres)) return hres;
> +    for (i=0; i < psarray->rgsabound[0].cElements; i++) {
> +        hres = VarBstrCat(vtext, V_BSTR(&(pvar[i])), &vtext);

You should check if pvar[i] is VT_BSTR before using it.

> +        if (FAILED(hres)) {
> +            break;
> +        }
> +    }
> +
> +    IHTMLElement_put_innerHTML(pbody,vtext);

You can't use put_innerHTML here. It will cause recreating of whole body element content. What you probably want is nsIHTMLDocument::Write. I will send the right write implementation.

> +    SysFreeString(vtext);
> +    hres = SafeArrayUnaccessData(psarray);
> +
> +    return S_OK;
>  }
 
>  static HRESULT WINAPI HTMLDocument_writeln(IHTMLDocument2 *iface, SAFEARRAY *psarray)
> @@ -688,8 +715,8 @@ static HRESULT WINAPI HTMLDocument_write
>  static HRESULT WINAPI HTMLDocument_open(IHTMLDocument2 *iface, BSTR url, VARIANT name,
>                          VARIANT features, VARIANT replace, IDispatch **pomWindowResult)
>  {
> -    FIXME("(%p)->(%s %p)\n", iface, debugstr_w(url), pomWindowResult);
> -    return E_NOTIMPL;
> +    TRACE("(%p)->(%s %p)\n", iface, debugstr_w(url), pomWindowResult);
> +    return IHTMLDocument2_QueryInterface(iface, &IID_IDispatch, (void**)pomWindowResult);
>  }


This is obviously not IHTMLDocument2::open implementation.


Jacek


From ono at java.pl  Fri Mar  7 07:10:37 2008
From: ono at java.pl (Adam Strzelecki)
Date: Fri, 7 Mar 2008 14:10:37 +0100
Subject: msi: ACTION_RegisterProduct store all InstallProperties
In-Reply-To: <22821af30803011438v2633aa35s2459553825fb375d@mail.gmail.com>
References: <2D73E93F-4E00-4493-8416-3238546EA3B9@java.pl>
	<22821af30802290939q489b73d9n3c9c106604a49e8c@mail.gmail.com>
	<C467D1FF-9F98-4A2F-869B-E51C31E17A71@java.pl>
	<22821af30803011158g219b93bbq4b660d43d96ffdae@mail.gmail.com>
	<1D8C710E-D65D-4E87-865C-9BA7F8747B1F@java.pl>
	<22821af30803011408pee462d1gcfc98723ca7c68ca@mail.gmail.com>
	<A00C3432-7B22-4B69-81A5-AB643A2396AE@java.pl>
	<22821af30803011438v2633aa35s2459553825fb375d@mail.gmail.com>
Message-ID: <7D3A0B5D-132F-4837-9BDE-53EBD5FD37DE@java.pl>

Thanks for your latest MSI patches fixing the issue.

Please mark my patch obsolete.

Regards,
-- 
Adam Strzelecki |: nanoant.com :|



From wine.dev at web.de  Fri Mar  7 08:25:58 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Fri, 07 Mar 2008 15:25:58 +0100
Subject: [2/2]try3.add new dll. wbemprox.dll
In-Reply-To: <200803071319.35887.ivan@etersoft.ru>
References: <200803071319.35887.ivan@etersoft.ru>
Message-ID: <1204899958.6786.36.camel@p4>

On Fr, 2008-03-07 at 13:19 +0300, Ivan Sinitsin wrote:

> This patch add new library to the project wine. Name of the library 
> is - "wbemprox.dll".

Since you read the Developer-Hints, you are now aware, that
"Makefile.in" is wrong here.

I have no Idea about COM, but you should studdy commits for new dlls,
when COM functionality was added (Patch-Size, Complexity).

Since you used some code from Roy as template, i suggest to study 
the commits for his recent Patches. 
As Examples:
http://source.winehq.org/git/wine.git/?a=history;f=dlls/qmgrprxy or
http://source.winehq.org/git/wine.git/?a=history;f=dlls/qmgr



A "\n" at the start of a TRACE is wrong.
A "\t" in a TRACE is not needed.

A FIXME for an unimplemented function is a good idea, but a simple
FIXME("\n");
is not informative.

Thanks for helping Wine


-- 
 
By by ... Detlef




From dreamulelowid at gmail.com  Fri Mar  7 08:53:36 2008
From: dreamulelowid at gmail.com (Bruno Cabral)
Date: Fri, 7 Mar 2008 11:53:36 -0300
Subject: Problem open files/folders with ShellExecute.
Message-ID: <cf12d1750803070653j616428f2vd7b7404f73ad962@mail.gmail.com>

Hi guys i trying make my windows software "wine compatible" .
It use ShellExecute(..) , how could i use that to open a folder in Kde or
Gnome ? The best that i got is to open the wineefile with this:

ShellExecute(handle, "open", "explorer", "path_to_folder", NULL,
SW_SHOWNORMAL);

And i try to open a file too(for example a mp3), but it do nothing too.

ShellExecute(NULL, NULL, "path_to_mp3", NULL, NULL, SW_SHOW);

Both examples work fine with all version of windows.


So, how can execute a file , and howi could open a folder with kde/gnome ?

Thanks !
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080307/c51c36af/attachment.htm 

From wine.dev at web.de  Fri Mar  7 08:56:56 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Fri, 07 Mar 2008 15:56:56 +0100
Subject: [1/2]try3. Add new dll. Wbemprox.dll
In-Reply-To: <200803071319.29621.ivan@etersoft.ru>
References: <200803071319.29621.ivan@etersoft.ru>
Message-ID: <1204901816.6786.40.camel@p4>

On Fr, 2008-03-07 at 13:19 +0300, Ivan Sinitsin wrote:

> +++ configure.ac        21 Feb 2008 13:19:10 -0000
> +++ Makefile.in 21 Feb 2008 13:21:30 -0000
> +++ dlls/Makefile.in    21 Feb 2008 15:04:36 -0000

This does not work.
Please follow our guidelines about "Implementing a new DLL":
http://wiki.winehq.org/Developers-Hints

You can also learn from the commit-messages,
especially from the commits, when a new dll was added.

> +++ tools/wine.inf      22 Feb 2008 07:10:09 -0000

We create only a fake dll, when and application requires
the dll to be present and fail without the fake dll.

Thanks for helping wine.


-- 
 
By by ... Detlef




From tom at dbservice.com  Fri Mar  7 09:39:55 2008
From: tom at dbservice.com (Tomas Carnecky)
Date: Fri, 07 Mar 2008 16:39:55 +0100
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <ced95fe0803041058q325a7b24u52299f3c652cf445@mail.gmail.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>	<ced95fe0803040731i14c0b137ifb0f2e58f490a866@mail.gmail.com>	<a71bd89a0803040858g7e568f0clb225d72190b99e31@mail.gmail.com>	<200803041853.48238.alex@thehandofagony.com>
	<ced95fe0803041058q325a7b24u52299f3c652cf445@mail.gmail.com>
Message-ID: <47D161CB.2050103@dbservice.com>

Vincent Povirk wrote:
> On Tue, Mar 4, 2008 at 12:53 PM, Alexander Nicolaysen S?rnes
> <alex at thehandofagony.com> wrote:
>>  I'm not sure if we should remove the option for 'fully functional, requires
>>  hacks'.  A lot of people come to the AppDB to find out how they can make
>>  their apps work, and are more interested in the end result as opposed to how
>>  to get there.
> 
> In practice, is there really enough difference between "fully
> functional" and "mostly functional" that we need another rating?
> People who only care about the end result would know that anything
> Silver or above will just about work.
> 
> I've seen Gold applied to software that is really "mostly functional,
> requires hacks", i.e. there are some other minor problems that can't
> be worked around (and Platinum for software with minor problems as
> well).
> 
> 
> Then again, if we add a few more variables, we can express the ratings
> with radar charts. ;)
> 
> http://img231.imageshack.us/img231/9466/screenshot5ec1.png

Yeah, use a multi-dimensional rating system. Have different criteria and 
not just one. Rate each with zero to four stars. The overall rating 
(platinum, gold, garbage) is then a function of all the criteria ratings.

Rating:
  - 0: Does not work
  - 1: Works but ...
  - 2: Works but requires dlls (download from internet)
  - 3: Works but requires local changes in winecfg (sound settings etc)
  - 4: Works with vanilla wine

Criteria:
  - Installation
  - Functionality
  - Usability
  - ???


The radar chart is not a bad idea. smartvote.ch, a site that helps you 
find out who to vote for (in switzerland), creates nice charts:

http://dbservice.com/ftpdir/tom/smartspider.png

tom


From luis.busquets at ilidium.com  Fri Mar  7 11:01:15 2008
From: luis.busquets at ilidium.com (=?ISO-8859-1?Q?=22Luis_C=2E_Busquets_P=E9rez=22?=)
Date: Fri, 07 Mar 2008 18:01:15 +0100
Subject: Google Summer of Code
Message-ID: <47D174DB.7000706@ilidium.com>

Please find attached some projects that could be in this Summer of Code:
1. Finishing the implementation of d3dx9_36. Since we have already the 
forwarding d3dx9_xx there is just need for the this dll to be in our 
system. With this fully dll implemented tehre would be no need.

2. msxml.dll, msxml2.dll, msxml2a.dll, msxml2r.dll, msxml3.dll, 
msxml3r.dll, msxml4.dll, msxml4a.dll, msxml4r.dll, msxml5.dll, 
msxml5r.dll, msxml6.dll msxml6r.dll and WinHTTP5.dll are all versions 
referring to the same API together with resoruces. Since wine is already 
implementing msxml3.dll I see that a good thing would be to link the 
rest of the files and implement them all? together. I assume that the 
biggest part of the work will be repeated.

3. The same that applies to point 2 applise to all files msvcrxx.dll 
(msvcr80.dll, msvcr70.dll,

4, As in point 3, implementing msvcpxx.dll could also be a job


From infyquest at gmail.com  Fri Mar  7 11:06:07 2008
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Fri, 7 Mar 2008 12:06:07 -0500
Subject: [rsaenh] Fix AES Provider Handling for Windows XP (resend)
Message-ID: <36bf289b0803070906u57027eanaa96f520b2a172fd@mail.gmail.com>

Hi,


 Please let me know why this patch has been rejected.
http://www.winehq.org/pipermail/wine-patches/2008-February/049817.html
 It seems this patch has gone completely unnoticed.
 Please Comment.
Somehow, my patches are not getting commited/reviewed.
Did I do anything wrong, please do tell me.

Thanks,
Vijay

>  2008/2/8 Vijay Kiran Kamuju <infyquest at gmail.com>:
>
>
> > ChangeLog
>  >  ----------------
>  >  Fix the AES Provider Handling for Windows XP by adding AES Provider
>  >  string for XP in wine registry
>  >
>  >  Bug#11509
>  >
>


From tehblunderbuss at gmail.com  Fri Mar  7 11:19:06 2008
From: tehblunderbuss at gmail.com (TheBlunderbuss)
Date: Fri, 07 Mar 2008 11:19:06 -0600
Subject: WineHQ should discourage the use of cracks
In-Reply-To: <47D161CB.2050103@dbservice.com>
References: <a71bd89a0803040415w6593b990u961b9c62ac58b23a@mail.gmail.com>	<ced95fe0803040731i14c0b137ifb0f2e58f490a866@mail.gmail.com>	<a71bd89a0803040858g7e568f0clb225d72190b99e31@mail.gmail.com>	<200803041853.48238.alex@thehandofagony.com>	<ced95fe0803041058q325a7b24u52299f3c652cf445@mail.gmail.com>
	<47D161CB.2050103@dbservice.com>
Message-ID: <47D1790A.7010201@gmail.com>

Tomas Carnecky wrote:
> Vincent Povirk wrote:
>   
>> On Tue, Mar 4, 2008 at 12:53 PM, Alexander Nicolaysen S?rnes
>> <alex at thehandofagony.com> wrote:
>>     
>>>  I'm not sure if we should remove the option for 'fully functional, requires
>>>  hacks'.  A lot of people come to the AppDB to find out how they can make
>>>  their apps work, and are more interested in the end result as opposed to how
>>>  to get there.
>>>       
>> In practice, is there really enough difference between "fully
>> functional" and "mostly functional" that we need another rating?
>> People who only care about the end result would know that anything
>> Silver or above will just about work.
>>
>> I've seen Gold applied to software that is really "mostly functional,
>> requires hacks", i.e. there are some other minor problems that can't
>> be worked around (and Platinum for software with minor problems as
>> well).
>>
>>
>> Then again, if we add a few more variables, we can express the ratings
>> with radar charts. ;)
>>
>> http://img231.imageshack.us/img231/9466/screenshot5ec1.png
>>     
>
> Yeah, use a multi-dimensional rating system. Have different criteria and 
> not just one. Rate each with zero to four stars. The overall rating 
> (platinum, gold, garbage) is then a function of all the criteria ratings.
>
> Rating:
>   - 0: Does not work
>   - 1: Works but ...
>   - 2: Works but requires dlls (download from internet)
>   - 3: Works but requires local changes in winecfg (sound settings etc)
>   - 4: Works with vanilla wine
>
> Criteria:
>   - Installation
>   - Functionality
>   - Usability
>   - ???
>
>
> The radar chart is not a bad idea. smartvote.ch, a site that helps you 
> find out who to vote for (in switzerland), creates nice charts:
>
> http://dbservice.com/ftpdir/tom/smartspider.png
>
> tom
Yay nested quotes.

I think adding this kind of rating is exactly what the Appdb needs. It 
has enough flexibility and simplicity to concisely inform what's needed 
to run the program.


From dank at kegel.com  Fri Mar  7 12:20:04 2008
From: dank at kegel.com (Dan Kegel)
Date: Fri, 7 Mar 2008 10:20:04 -0800
Subject: Problem open files/folders with ShellExecute
Message-ID: <a71bd89a0803071020q362549dg9f774690a729ccd0@mail.gmail.com>

Bruno Cabral wrote:
>how could i use ShellExecute() to open a folder in Kde or
>Gnome ? The best that i got is to open the wineefile with this:
>ShellExecute(handle, "open", "explorer", "path_to_folder", NULL,SW_SHOWNORMAL);
>And i try to open a file too(for example a mp3), but it do nothing too.
>ShellExecute(NULL, NULL, "path_to_mp3", NULL, NULL, SW_SHOW);
>Both examples work fine with all version of windows.

Wine really should make ShellExecute work just as you expect,
but I don't know how long it'll be until we get around to it.

For now, you can detect that you're running on Wine
(e.g. if getenv("LOGNAME") is not NULL),
and then use the command xdg-open to open the directory or .mp3 file.
To prove to yourself this works, try
  wine cmd /c z:\\usr\\bin\\xdg-open foo.mp3
or
  wine cmd /c z:\\usr\\bin\\xdg-open /usr

That will open the file or directory in the appropriate native app.
The only catch is that the path passed to xdg-open has
to be a Unix path.  You can use the executable winepath
to convert Windows paths to Unix paths.  To prove to yourself
this works, try this:

 wine cmd /c winepath c:\
This will output the Unix path,
/home/dkegel/.wine/dosdevices/c:/

And then you have to be careful about paths with spaces in them, etc.
It's a bit of a pain at the moment.

If you go down this route, put it in a helper function so you
can rip it out easily later.  (And so you can share the
helper function with others.)
- Dan

p.s. Related bug:
http://bugs.winehq.org/show_bug.cgi?id=3332


From xerox_xerox2000 at yahoo.co.uk  Fri Mar  7 12:35:19 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis Lenders)
Date: Fri, 7 Mar 2008 18:35:19 +0000 (UTC)
Subject: Google Summer of Code
References: <47D174DB.7000706@ilidium.com>
Message-ID: <loom.20080307T182715-417@post.gmane.org>

Luis C. Busquets P?rez <luis.busquets <at> ilidium.com> writes:

> 
> Please find attached some projects that could be in this Summer of Code:
> 1. Finishing the implementation of d3dx9_36. Since we have already the 
> forwarding d3dx9_xx there is just need for the this dll to be in our 
> system. With this fully dll implemented tehre would be no need.
>

"Finishing the implementation of d3dx9_36" would be a bit too much i guess, 
for doing that in 2/3 months. I like the idea though, better "do some work" on
d3dx9_36

Further i would find it nice if a project proposal would be something like
"write a dxdiag.exe". Something like a fancy spinning cube with wine-logo, and
frame-rate  counter or something the like. This would allow users to quickly
test if they have set up their opengl/directX stuff correctly, and if they 
have hardware acceleration enabled. This would be something that could be 
easily done in 2/3 months






From stefan at codeweavers.com  Fri Mar  7 12:53:20 2008
From: stefan at codeweavers.com (Stefan =?utf-8?q?D=C3=B6singer?=)
Date: Fri, 7 Mar 2008 19:53:20 +0100
Subject: Google Summer of Code
In-Reply-To: <loom.20080307T182715-417@post.gmane.org>
References: <47D174DB.7000706@ilidium.com>
	<loom.20080307T182715-417@post.gmane.org>
Message-ID: <200803071953.23612.stefan@codeweavers.com>

Am Freitag, 7. M?rz 2008 19:35:19 schrieb Louis Lenders:
> Further i would find it nice if a project proposal would be something like
> "write a dxdiag.exe". Something like a fancy spinning cube with wine-logo,
> and frame-rate  counter or something the like. This would allow users to
> quickly test if they have set up their opengl/directX stuff correctly, and
> if they have hardware acceleration enabled. This would be something that
> could be easily done in 2/3 months
I have a bunch of driver bug tests, I could share them to anyone who is 
interested in putting them into a test application like this.

I have a few more directx-related project suggestions:

*) Write a fixed function pipelien replacement shaders in ARB_*_program 
assembly or GLSL. That could be made two projects maybe. I am currently doing 
some infrastructure work for this, if such a project is viable depends on 
where this infrastructure gets.

*) Implement pixel shaders using GL_ATI_fragment_shaders and/or 
GL_NV_register_combiners+GL_NV_texture_shader. This would bring Radeon 
8500-9200 and Geforce 4 cards up to the feature level they have in Windows. 
This also depends on the infrastructure work mentioned above.

*) Of course if anyone has own suggestions we're open to them as well. Please 
discuss them on wine-devel before applying to soc though.

My experience from last year is that GSOC projects focused on preparing 
infrastructure do not get too far, since they're boring and more work than 
estimated. Thus I've done the infrastructure work on the current proposals 
myself this time. This has the advantage that the student can focus on 
implementing code for the problem, but has the disadvantage that he has to 
get used to existing code.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080307/69d9108c/attachment.pgp 

From artur.szymiec at gmail.com  Fri Mar  7 14:06:01 2008
From: artur.szymiec at gmail.com (Artur Szymiec)
Date: Fri, 07 Mar 2008 21:06:01 +0100
Subject: Tons of shader recompilation in TRLegend and screen set issues
Message-ID: <47D1A029.1010601@gmail.com>

Greetings,

I would like to point out 3 issues with TR Legend game:
1) wine is outputing a ton of messages like:
    fixme:d3d_shader:IWineD3DVertexShaderImpl_CompileShader Vertexshader
0x13fb3028 recompiled more than 50 times
fixme:d3d_shader:IWineD3DVertexShaderImpl_CompileShader Vertexshader
0x13fb3028 recompiled more than 50 times
fixme:d3d_shader:IWineD3DVertexShaderImpl_CompileShader Vertexshader
0x13fb3028 recompiled more than 50 times
fixme:d3d_shader:IWineD3DVertexShaderImpl_CompileShader Vertexshader
0x13fb3028 recompiled more than 50 times
fixme:d3d_shader:IWineD3DVertexShaderImpl_CompileShader Vertexshader
0x13fb3028 recompiled more than 50 times
fixme:d3d_shader:IWineD3DVertexShaderImpl_CompileShader Vertexshader
0x13fb3028 recompiled more than 50 times

2) the game itself contain a gfx config dialog. Then at next startup it
should use this settings
    saved somewhere (I guess registry) but instead it dosen't - always
running the game will bring
    the config in the first place. Why is that ?

3) Still something is wrong with the  vertex shaders  and buffers - see
this screenshoot:
    http://img171.imageshack.us/my.php?image=screen3ub0.jpg

And the tons of shader compilation warnings happens in every water scene
like in the screenshoot.

Best regards
Artur

-- 
--------------------------------------------------------------------------
Registered User No 397465
Linux Debian 2.6.24.2 AMD Athlon(tm) 64 X2 Dual Core 5000+
Conquer your Desktop! http://www.kde.org/trykde/
Reclaim Your Inbox!   http://www.mozilla.org/products/thunderbird/
--------------------------------------------------------------------------



From stefan at codeweavers.com  Fri Mar  7 15:55:01 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Fri, 7 Mar 2008 22:55:01 +0100
Subject: Tons of shader recompilation in TRLegend and screen set issues
In-Reply-To: <47D1A029.1010601@gmail.com>
References: <47D1A029.1010601@gmail.com>
Message-ID: <200803072255.03332.stefan@codeweavers.com>

Am Freitag, 7. M?rz 2008 21:06:01 schrieb Artur Szymiec:
> Greetings,
>
> I would like to point out 3 issues with TR Legend game:
Please file bugs at bugs.winehq.org instead of posting it to the mailing list
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080307/877aa6f1/attachment.pgp 

From pawel.rozanski at gmail.com  Fri Mar  7 16:34:43 2008
From: pawel.rozanski at gmail.com (=?ISO-8859-2?Q?Pawe=B3_R=F3=BFa=F1ski?=)
Date: Fri, 7 Mar 2008 23:34:43 +0100
Subject: Tons of shader recompilation in TRLegend and screen set issues
In-Reply-To: <200803072255.03332.stefan@codeweavers.com>
References: <47D1A029.1010601@gmail.com>
	<200803072255.03332.stefan@codeweavers.com>
Message-ID: <cd91cef90803071434s2a5610f3n8668e6bab30ca8ef@mail.gmail.com>

Hi

Artur: or you could find that at least one of these bugs is already filled
 http://bugs.winehq.org/show_bug.cgi?id=11357

But I have question which is more general (not only for Stefan D?singer):

I tend to check if something changed in game/program that I'm
currently monitoring. Are new comments for bug like "it still not
woking at wine-....." need ?

Because i can add them :) every weekend or so. I really appreciate
developers time which was invested in wine. I just want to ask what is
more desired:

- report often that something doesn't work (to keep information current)
- leave it until dev response that this particular problem is solved
(but something can slip out)

Again - I don't want to look like impatient one (like i said - I
really appreciate what I have) I just want to know what will do better
job.


Keep care, your project keeps me thinking that everything is possible :)
-- 
Pawe? R??a?ski

From stefan at codeweavers.com  Fri Mar  7 17:14:28 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sat, 8 Mar 2008 00:14:28 +0100
Subject: ddraw: Implement ForceRefreshRate registry entry for overriding
	DirectX refresh rate
In-Reply-To: <47D1B39D.2000708@ossguy.com>
References: <47D1B39D.2000708@ossguy.com>
Message-ID: <200803080014.33567.stefan@codeweavers.com>

Am Freitag, 7. M?rz 2008 22:29:01 schrieb Denver Gingerich:
> The DirectX refresh rate override feature that this patch implements is
> described in main.c below.
>
> In order for the override to take effect only on SetDisplayMode and not on
> RestoreDisplayMode it was necessary to move the functionality of
> SetDisplayMode into a helper function (DDRAW_SetDisplayMode) and let
> IDirectDrawImpl_SetDisplayMode and IDirectDrawImpl_RestoreDisplayMode call
> the helper function.
I have two concerns:

First, do you have an application that needs this, or is this just for making 
this aspect of ddraw compatible with Windows? There's nothing wrong with that 
in principle, but I am curious

I do not really like the name DDRAW_SetDisplayMode. It somewhat goes away from 
the convention by starting with DDRAW, but yet it does not tell more about 
what the function does.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080308/e9a73eb1/attachment.pgp 

From denver at ossguy.com  Fri Mar  7 17:52:23 2008
From: denver at ossguy.com (Denver Gingerich)
Date: Fri, 7 Mar 2008 18:52:23 -0500
Subject: ddraw: Implement ForceRefreshRate registry entry for overriding
	DirectX refresh rate
In-Reply-To: <200803080014.33567.stefan@codeweavers.com>
References: <47D1B39D.2000708@ossguy.com>
	<200803080014.33567.stefan@codeweavers.com>
Message-ID: <6defe8840803071552s2448398fh1d18843b72495fca@mail.gmail.com>

On Fri, Mar 7, 2008 at 6:14 PM, Stefan D?singer <stefan at codeweavers.com> wrote:
> Am Freitag, 7. M?rz 2008 22:29:01 schrieb Denver Gingerich:
>
> > The DirectX refresh rate override feature that this patch implements is
>  > described in main.c below.
>  >
>  > In order for the override to take effect only on SetDisplayMode and not on
>  > RestoreDisplayMode it was necessary to move the functionality of
>  > SetDisplayMode into a helper function (DDRAW_SetDisplayMode) and let
>  > IDirectDrawImpl_SetDisplayMode and IDirectDrawImpl_RestoreDisplayMode call
>  > the helper function.
>  I have two concerns:
>
>  First, do you have an application that needs this, or is this just for making
>  this aspect of ddraw compatible with Windows? There's nothing wrong with that
>  in principle, but I am curious

I described my reasoning to some extent in the following message/threads:
http://www.winehq.org/pipermail/wine-patches/2008-March/050965.html
http://www.winehq.org/pipermail/wine-devel/2008-March/063147.html

Basically, I am running an application that calls SetDisplayMode and
doesn't specify a refresh rate.  ChangeDisplaySettingsEx picks the
first mode that matches the bpp, and resolution, and that mode just so
happens to have a bad refresh rate for me.  So I want a way to
override it.

>  I do not really like the name DDRAW_SetDisplayMode. It somewhat goes away from
>  the convention by starting with DDRAW, but yet it does not tell more about
>  what the function does.

I modeled this after DDRAW_Create in dlls/ddraw/main.c.  It seemed
like using a DDRAW_ prefix might specify a helper function so I went
with it.  But I will admit it didn't seem that standard.

I couldn't really think of anything better than SetDisplayMode for a
suffix.  Setting the display mode is what it does, after all.  I could
rename it to something like SetDisplayModeHelper.  Does that seem
reasonable?  Are there other suggestions?

Denver


From nathan.beckmann at gmail.com  Fri Mar  7 23:26:58 2008
From: nathan.beckmann at gmail.com (Nathan Beckmann)
Date: Fri, 7 Mar 2008 21:26:58 -0800
Subject: [PATCH] gdiplus: Fix memory leak in GdipLockBitmapBits.
In-Reply-To: <1204873684-30630-1-git-send-email-nathan.beckmann@gmail.com>
References: <1204873684-30630-1-git-send-email-nathan.beckmann@gmail.com>
Message-ID: <3a22664a0803072126g277290adk31a079e54f2e2bc6@mail.gmail.com>

Further testing indicates that a lot more needs to change than what's
in this patch.

It might be best to hold off on it until I know everything that needs
to be done.

- Nathan


From epssyis at gmail.com  Fri Mar  7 23:53:53 2008
From: epssyis at gmail.com (Edward Savage)
Date: Sat, 8 Mar 2008 15:53:53 +1000
Subject: Tons of shader recompilation in TRLegend and screen set issues
In-Reply-To: <cd91cef90803071434s2a5610f3n8668e6bab30ca8ef@mail.gmail.com>
References: <47D1A029.1010601@gmail.com>
	<200803072255.03332.stefan@codeweavers.com>
	<cd91cef90803071434s2a5610f3n8668e6bab30ca8ef@mail.gmail.com>
Message-ID: <d6c5d7290803072153g10c3771cw34bde9029ff251a2@mail.gmail.com>

I wouldn't mind knowing this as well.  For example there is a bug in
the rendering of the planet in the eve loading screen (this affects
all in game planets too) and has been a bug for a year or more now.
I've been trying to work out if it is worth poking the bug report on
it or just leaving it till some one has time to go back over older
bugs.

2008/3/8 Pawe? R??a?ski <pawel.rozanski at gmail.com>:
> Hi
>
>  Artur: or you could find that at least one of these bugs is already filled
>   http://bugs.winehq.org/show_bug.cgi?id=11357
>
>  But I have question which is more general (not only for Stefan D?singer):
>
>  I tend to check if something changed in game/program that I'm
>  currently monitoring. Are new comments for bug like "it still not
>  woking at wine-....." need ?
>
>  Because i can add them :) every weekend or so. I really appreciate
>  developers time which was invested in wine. I just want to ask what is
>  more desired:
>
>  - report often that something doesn't work (to keep information current)
>  - leave it until dev response that this particular problem is solved
>  (but something can slip out)
>
>  Again - I don't want to look like impatient one (like i said - I
>  really appreciate what I have) I just want to know what will do better
>  job.
>
>
>  Keep care, your project keeps me thinking that everything is possible :)
>  --
>  Pawe? R??a?ski
>
>

From arbuckle911 at gmail.com  Sat Mar  8 00:03:48 2008
From: arbuckle911 at gmail.com (Christopher Harvey)
Date: Sat, 08 Mar 2008 01:03:48 -0500
Subject: AcceptEx implemetation
Message-ID: <47D22C44.6080600@gmail.com>

Hi,
I'm going to try to implement AcceptEx this weekend. Just wanted to ask 
if I should write it using unix sockets, or using the existing ws2_32 
implementation.

Thanks.


From eric.pouech at orange.fr  Sat Mar  8 03:08:44 2008
From: eric.pouech at orange.fr (Eric Pouech)
Date: Sat, 08 Mar 2008 10:08:44 +0100
Subject: AcceptEx implemetation
In-Reply-To: <47D22C44.6080600@gmail.com>
References: <47D22C44.6080600@gmail.com>
Message-ID: <47D2579C.6070709@orange.fr>

Christopher Harvey a ?crit :
> Hi,
> I'm going to try to implement AcceptEx this weekend. Just wanted to ask 
> if I should write it using unix sockets, or using the existing ws2_32 
> implementation.
>
> Thanks.
>
>
>
>
>   
ws2_32 when possible
A+

-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)




From stefan at codeweavers.com  Sat Mar  8 04:30:15 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sat, 8 Mar 2008 11:30:15 +0100
Subject: AcceptEx implemetation
In-Reply-To: <47D2579C.6070709@orange.fr>
References: <47D22C44.6080600@gmail.com> <47D2579C.6070709@orange.fr>
Message-ID: <200803081130.18639.stefan@codeweavers.com>

Am Samstag, 8. M?rz 2008 10:08:44 schrieb Eric Pouech:
> Christopher Harvey a ?crit :
> > Hi,
> > I'm going to try to implement AcceptEx this weekend. Just wanted to ask
> > if I should write it using unix sockets, or using the existing ws2_32
> > implementation.
> >
> > Thanks.
>
> ws2_32 when possible
> A+
There's a beginning of such an implementation by Andrey Turkin attached to a 
bug in bugzilla: http://bugs.winehq.org/show_bug.cgi?id=9787
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080308/d58326f6/attachment.pgp 

From stefan at codeweavers.com  Sat Mar  8 04:33:38 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sat, 8 Mar 2008 11:33:38 +0100
Subject: ddraw: Implement ForceRefreshRate registry entry for overriding
	DirectX refresh rate
In-Reply-To: <6defe8840803071552s2448398fh1d18843b72495fca@mail.gmail.com>
References: <47D1B39D.2000708@ossguy.com>
	<200803080014.33567.stefan@codeweavers.com>
	<6defe8840803071552s2448398fh1d18843b72495fca@mail.gmail.com>
Message-ID: <200803081133.42654.stefan@codeweavers.com>

Am Samstag, 8. M?rz 2008 00:52:23 schrieb Denver Gingerich:
> Basically, I am running an application that calls SetDisplayMode and
> doesn't specify a refresh rate.  ChangeDisplaySettingsEx picks the
> first mode that matches the bpp, and resolution, and that mode just so
> happens to have a bad refresh rate for me.  So I want a way to
> override it.
Fair enough. I can't argue that using this key for that is wrong, since it 
exists as-is on Windows, but it doesn't really attack the root of the 
problem. You'll run into the same issue again with d3d8/9 apps or apps that 
use ChangeDisplaySettingsEx directly with a refresh rate of 0
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080308/a05e40a2/attachment.pgp 

From stefan at codeweavers.com  Sat Mar  8 06:34:18 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-2?q?D=F6singer?=)
Date: Sat, 8 Mar 2008 13:34:18 +0100
Subject: Tons of shader recompilation in TRLegend and screen set issues
In-Reply-To: <d6c5d7290803072153g10c3771cw34bde9029ff251a2@mail.gmail.com>
References: <47D1A029.1010601@gmail.com>
	<cd91cef90803071434s2a5610f3n8668e6bab30ca8ef@mail.gmail.com>
	<d6c5d7290803072153g10c3771cw34bde9029ff251a2@mail.gmail.com>
Message-ID: <200803081334.24760.stefan@codeweavers.com>


Am Samstag, 8. M?rz 2008 06:53:53 schrieb Edward Savage:
> I wouldn't mind knowing this as well.  For example there is a bug in
> the rendering of the planet in the eve loading screen (this affects
> all in game planets too) and has been a bug for a year or more now.
> I've been trying to work out if it is worth poking the bug report on
> it or just leaving it till some one has time to go back over older
> bugs.
Retesting with every wine release is welcome, with some message 
like "Confirming bug in wine x.y.z" or similar. That way anyone who is 
interested in fixing the bug doesn't have to ask for a retest and wait for a 
reply when he wants to attack the bug.

@ The eve online problem: I've had a look at that, and Eve uses fixed function 
processing with somewhat insane transformation matrices, some fields are 10^6 
or even bigger.  Doing something like that is asking for precision problems, 
I am not sure if we can fix that

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080308/df9982b0/attachment.pgp 

From denver at ossguy.com  Sat Mar  8 08:32:40 2008
From: denver at ossguy.com (Denver Gingerich)
Date: Sat, 8 Mar 2008 09:32:40 -0500
Subject: ddraw: Implement ForceRefreshRate registry entry for overriding
	DirectX refresh rate
In-Reply-To: <200803081133.42654.stefan@codeweavers.com>
References: <47D1B39D.2000708@ossguy.com>
	<200803080014.33567.stefan@codeweavers.com>
	<6defe8840803071552s2448398fh1d18843b72495fca@mail.gmail.com>
	<200803081133.42654.stefan@codeweavers.com>
Message-ID: <6defe8840803080632i384ed938t2b466ed905d58084@mail.gmail.com>

On Sat, Mar 8, 2008 at 5:33 AM, Stefan D?singer <stefan at codeweavers.com> wrote:
> Am Samstag, 8. M?rz 2008 00:52:23 schrieb Denver Gingerich:
>
> > Basically, I am running an application that calls SetDisplayMode and
>  > doesn't specify a refresh rate.  ChangeDisplaySettingsEx picks the
>  > first mode that matches the bpp, and resolution, and that mode just so
>  > happens to have a bad refresh rate for me.  So I want a way to
>  > override it.
>  Fair enough. I can't argue that using this key for that is wrong, since it
>  exists as-is on Windows, but it doesn't really attack the root of the
>  problem. You'll run into the same issue again with d3d8/9 apps or apps that
>  use ChangeDisplaySettingsEx directly with a refresh rate of 0

The problem is that Windows doesn't attack the root of the problem so
Wine can't either.  The previous patch I sent [1] changed the behavior
of ChangeDisplaySettingsEx and even allowed you to customize the
refresh rate at different resolutions, which I felt was attacking the
root of the problem.  But since Windows doesn't do it that way, the
patch was rejected.

Some limited testing has revealed that Windows usually picks the first
mode that matches the bpp and resolution when no refresh rate is given
to ChangeDisplaySettingsEx.  I will post the complete results of my
tests when I get around to it.

The only way I've found to force a refresh rate for a program that
uses ChangeDisplaySettingsEx is to change the available refresh rates
of the monitor, which is essentially changing the list of modes
available.  Changing the list of modes is not something Wine handles.
Rather, it's up to the libraries it uses (like Xrandr) to modify the
mode list.

So I think we're stuck with leaving ChangeDisplaySettingsEx as it is
and implementing what hacks Windows has for DirectX applications so
that we can at least get a partial fix.

Denver


1. http://www.winehq.org/pipermail/wine-patches/2008-March/050965.html


From dank at kegel.com  Sat Mar  8 09:22:09 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 8 Mar 2008 07:22:09 -0800
Subject: Article about running Adobe AIR 1.0 on wine
Message-ID: <a71bd89a0803080722s68c783d3h1777cef966a4ae0e@mail.gmail.com>

http://www.downloadsquad.com/2008/03/08/using-wine-to-install-adobe-air-on-linux/

Has a list of apps known not to work.  Might be worth following up.


From bernhard.posselt at gmx.at  Sat Mar  8 14:59:46 2008
From: bernhard.posselt at gmx.at (Bernhard Posselt)
Date: Sat, 08 Mar 2008 21:59:46 +0100
Subject: Baldurs Gate 2 script
Message-ID: <1205009986.19646.2.camel@localhost>

My username: idefy at web.de
Including the skript itself
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bg
Type: application/x-shellscript
Size: 2007 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080308/1aafd034/attachment.bin 

From jgardou at yahoo.fr  Sun Mar  9 05:48:08 2008
From: jgardou at yahoo.fr (=?iso-8859-1?q?J=E9r=F4me_Gardou?=)
Date: Sun, 9 Mar 2008 11:48:08 +0100
Subject: Implementing a new Direct3D function
Message-ID: <200803091148.08522.jgardou@yahoo.fr>

I'm trying to implement some direct3d functions, more precisely the 
GetImageInfoFromFile* ones.

These are present in directX 8 and in d3dx9_xx.dll

I wondered what is the best way to do this :
1)Implementing it in d3dx8.dll and forward everything to this one.
2) Make some useful functions in wined3d and then use them from d3dx8.
3) Implement them directly in wined3d, forwarding everything to it.
4) An other way ?

Cheers.
J?r?me

	

	
		
___________________________________________________________________________ 
Yahoo! Mail r?invente le mail ! D?couvrez le nouveau Yahoo! Mail et son interface r?volutionnaire.
http://fr.mail.yahoo.com



From thunderbird2k at gmx.net  Sun Mar  9 11:09:35 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Sun, 09 Mar 2008 17:09:35 +0100
Subject: [PATCH 4/6] wined3d: Make code safe if there are no device
	palettes.
In-Reply-To: <47D3EFD1.9020502@inbox.lv>
References: <47D3EFD1.9020502@inbox.lv>
Message-ID: <20080309160935.288340@gmx.net>

> There are two types of palettes in wined3d: directx <= 7 style palettes as
> separate interface and d3d >= 8 style device palettes. Some code was
> defaulting 
> to device palettes in several places if there's no "old" style palette and
> using 
> device palettes to store ddraw primary surface's palette. This patch
> avoids use 
> of device palettes for anything else than their direct purpose. It is a 
> necessary preparation for making device palettes dynamically allocated as
> needed 
> (next patch), that prevents ddraw apps from crashing with the latter.
> ---
>   dlls/wined3d/palette.c      |   11 ----
>   dlls/wined3d/surface.c      |  109
> ++++++++++++++++++++++--------------------
>   dlls/wined3d/surface_base.c |   20 ++------
>   dlls/wined3d/surface_gdi.c  |   51 ++++++++------------
>   4 files changed, 82 insertions(+), 109 deletions(-)

First of all it appears that this patch contains multiple patches (e.g. the direct3d9 getdc p8 check is one). I'll mention some others below. The p8 code is very sensitive to bugs and those are most of the time very hard to fix, so I'm quite strict. Various things need to be tested using testcases before this patch (cut in pieces) can make it in.

In case of read_from_framebuffer when there is no palette set, just return directly instead of adding an if(pal) check. The function won't do anything useful without a palette. Further read_from_framebuffer shouldn't get called from d3d8/9 games anyway as there aren't p8 render targets.

I wonder if we need SetDibColorTable at all in case of GetDC as the data the app will receive in the hdc is 8bit. It wants to draw in it by hand, so I would say that the palette won't matter. It might require a testcase.

The removal of the device palette code from RealizePalette can be done in a separate patch.

I'm not sure if change in SetColorKey is correct in the case a surface doesn't have a palette and uses the primary surface its palette. It doesn't feel right. I think it should fail but this requires a testcase.

Second even if the call to SetDibColorTable is needed I wonder what should happen on surfaces which don't have a palette set. It might be correct to use the palette of the primary surface but it might also just be an illegal situation.

Roderick
-- 
Ist Ihr Browser Vista-kompatibel? Jetzt die neuesten 
Browser-Versionen downloaden: http://www.gmx.net/de/go/browser


From mikolaj at zalewski.pl  Sun Mar  9 11:45:34 2008
From: mikolaj at zalewski.pl (=?ISO-8859-2?Q?Miko=B3aj_Zalewski?=)
Date: Sun, 09 Mar 2008 17:45:34 +0100
Subject: [comctl32/tests #3] Use GetModuleHandleA instead of LoadLibraryA
Message-ID: <47D4142E.4050206@zalewski.pl>

  I've changed GetModuleHandle to LoadLibrary because when I compiled 
only tests/rebar.c as standalone, the comctl32 wasn't loaded and 
GetModuleHandle returned NULL. Are there advantages from using 
GetModuleHandle?

Miko?aj Zalewski


From paul.vriens.wine at gmail.com  Sun Mar  9 12:12:46 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Sun, 09 Mar 2008 18:12:46 +0100
Subject: [comctl32/tests #3] Use GetModuleHandleA instead of LoadLibraryA
In-Reply-To: <47D4142E.4050206@zalewski.pl>
References: <47D4142E.4050206@zalewski.pl>
Message-ID: <47D41A8E.4070600@gmail.com>

Miko?aj Zalewski wrote:
>  I've changed GetModuleHandle to LoadLibrary because when I compiled 
> only tests/rebar.c as standalone, the comctl32 wasn't loaded and 
> GetModuleHandle returned NULL. Are there advantages from using 
> GetModuleHandle?
> 
> Miko?aj Zalewski
> 
Well, I was checking whether LoadLibrary was accompanied by a FreeLibrary. In 
this case it wasn't and I thought GetModuleHandle does the trick as well. It did 
for the other stuff in the comctl32 tests.

I'm not in favor of LoadLibrary or GetModuleHandle. I think the general rule 
could be:

If dll is already imported use GetModuleHandle unless compilation excludes the 
dll because there are no reference to the dll.

Does that look a bit sane?

The question that remains is should the full <dll>-tests be able to be compiled 
and run or should we have this to be correct for every single test? I mean that 
are no issues if you compile the whole comctl32 "testsuite".

If LoadLibrary is indeed needed it should be accompanied with a FreeLibrary and 
we probably need a comment for the why as well.

-- 
Cheers,

Paul.


From alexd4 at inbox.lv  Sun Mar  9 12:18:29 2008
From: alexd4 at inbox.lv (Alexander Dorofeyev)
Date: Sun, 09 Mar 2008 19:18:29 +0200
Subject: [PATCH 4/6] wined3d: Make code safe if there are no device
	palettes.
In-Reply-To: <20080309160935.288340@gmx.net>
References: <47D3EFD1.9020502@inbox.lv> <20080309160935.288340@gmx.net>
Message-ID: <47D41BE5.3020008@inbox.lv>

Roderick Colenbrander wrote:
> First of all it appears that this patch contains multiple patches (e.g. the direct3d9 getdc p8 check is one). I'll mention some others below. The p8 code is very sensitive to bugs and those are most of the time very hard to fix, so I'm quite strict. Various things need to be tested using testcases before this patch (cut in pieces) can make it in.

All changes are functionally related (direct3d9 format check ensures any 
palette-related code below it will be ddraw/d3d <= 7 only), but ok, I guess it's 
possible to cut it into several pieces.

> In case of read_from_framebuffer when there is no palette set, just return directly instead of adding an if(pal) check. The function won't do anything useful without a palette. Further read_from_framebuffer shouldn't get called from d3d8/9 games anyway as there aren't p8 render targets.

Agree about this.

> I wonder if we need SetDibColorTable at all in case of GetDC as the data the app will receive in the hdc is 8bit. It wants to draw in it by hand, so I would say that the palette won't matter. It might require a testcase.

I have no idea if any app actually uses it, but, hypothetically, it can call 
GetDIBColorTable, which seems to return meaningful results on native.

> The removal of the device palette code from RealizePalette can be done in a separate patch.
> 
> I'm not sure if change in SetColorKey is correct in the case a surface doesn't have a palette and uses the primary surface its palette. It doesn't feel right. I think it should fail but this requires a testcase.
> 
> Second even if the call to SetDibColorTable is needed I wonder what should happen on surfaces which don't have a palette set. It might be correct to use the palette of the primary surface but it might also just be an illegal situation.
I assume you mean GetDC because I didn't change SetColorKey. I did some tests in 
windows XP, if you obtain a dc from offscreen surface without a palette, then 
call GetDIBColorTable on this dc, you get a color table that matches palette of 
primary surface. I just replicated the existing functionality in Wine which was 
doing the same only using device palette as intermediary storage of primary 
palette: when setting palette to primary surface, entries were copied to current 
device palette, but when palette is missing in GetDC it was using current device 
palette that's the same as primary surface palette. I guess it's most likely 
obscure and unused functionality, but who knows if there's something that may 
rely on it.

I can integrate a test for this scenario (GetDC/GetDIBColorTable with offscreen 
surface that has not palette and compare it to primary surface palette) into 
ddraw testcases, if needed. Do you have ideas what else can be tested?


From stefan at codeweavers.com  Sun Mar  9 12:42:55 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 9 Mar 2008 18:42:55 +0100
Subject: [PATCH 6/6] wined3d: Dirtify p8 textures when device palettes
	change.
In-Reply-To: <47D3EFEE.7030606@inbox.lv>
References: <47D3EFEE.7030606@inbox.lv>
Message-ID: <200803091842.58861.stefan@codeweavers.com>

Am Sonntag, 9. M?rz 2008 15:10:54 schrieb Alexander Dorofeyev:
> Fixes problems with properly updating wine's P8 textures, when it is
> required because of device palette change.
Instead of iterating over all resources and finding P8 textures I think it 
would be nicer to store the palette the texture/surface was loaded with in 
each P8 / A8P8 surface and compare this stored palette to the current device 
palette in IWineD3DSurface::PreLoad(non-texture path) and 
IWineD3D*Texture::PreLoad.

With this, patch 4 could maybe be made nicer as well. If we have to verify the 
palettes anyway, we can remove the DDraw-Style IWineD3DPalette interface from 
WineD3D altogether, and just give each ddraw palette in ddraw.dll a WineD3D 
palette number and use the d3d8/9 palette management exclusively in WineD3D 
and avoid the confusion of having two palette interfaces.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080309/1f2bee4c/attachment.pgp 

From stefan at codeweavers.com  Sun Mar  9 12:44:18 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 9 Mar 2008 18:44:18 +0100
Subject: Implementing a new Direct3D function
In-Reply-To: <200803091148.08522.jgardou@yahoo.fr>
References: <200803091148.08522.jgardou@yahoo.fr>
Message-ID: <200803091844.24578.stefan@codeweavers.com>

Am Sonntag, 9. M?rz 2008 11:48:08 schrieb J?r?me Gardou:
> I'm trying to implement some direct3d functions, more precisely the
> GetImageInfoFromFile* ones.
>
> These are present in directX 8 and in d3dx9_xx.dll
>
> I wondered what is the best way to do this :
> 1)Implementing it in d3dx8.dll and forward everything to this one.
This is the way that was chosen for the other functions, so I think it is the 
way to go in this case as well
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080309/83e6af8d/attachment.pgp 

From jgardou at yahoo.fr  Sun Mar  9 13:52:12 2008
From: jgardou at yahoo.fr (=?iso-8859-1?q?J=E9r=F4me_Gardou?=)
Date: Sun, 9 Mar 2008 19:52:12 +0100
Subject: Implementing a new Direct3D function
In-Reply-To: <E1JYPQa-0000lW-41@www10.emo.freenet-rz.de>
References: <E1JYPQa-0000lW-41@www10.emo.freenet-rz.de>
Message-ID: <200803091952.12638.jgardou@yahoo.fr>

Le Sunday 09 March 2008 18:35:16 tony.wasserka at freenet.de, vous avez ?crit?:
> D3DXGetImageInfoFromFile takes the D3DXIMAGE_INFO structure as parameter,
> which has changed between d3dx8 an dd3dx9_36 though.
> This means you can't forward the D3DXGetImageInfoFromFile calls from d3dx9
> to d3dx8, (even if it is done like that atm, you should fix that an you
> patch) so you'll have to write two versions of each.
> Our plan for implementing d3dx was to keep any d3dx code away from wined3d,
> so you don't have to change anything about that.
> So basically all you have to do is
> (1) implement the d3dx8 version of each function
> (2) add them to the d3dx8 specfile
> (3) implement the d3dx9_36 version of each function
> (3) correct the d3dx9_36 specfile (i.e. remove the forwarding to d3dx8)
>
> The d3dx9_24 to 35 dlls forward their calls to d3dx9_36, so they are okay,
> too.
>
>
>     Tony
>
>
>
>
> Unbegrenzter Speicher, Top-Spamschutz, 120 SMS und eigene E-MailDomain
> inkl.
> http://office.freenet.de/dienste/emailoffice/produktuebersicht/power/mail/i
>ndex.html

OK, then I'll do this that way. 
Also, d3dx9 provides support for multiple file format (PNG, TGA, BMP...). I 
assume I'll have to add those dependencies in the build process.

	

	
		
___________________________________________________________________________ 
Yahoo! Mail r?invente le mail ! D?couvrez le nouveau Yahoo! Mail et son interface r?volutionnaire.
http://fr.mail.yahoo.com



From alexd4 at inbox.lv  Sun Mar  9 13:56:40 2008
From: alexd4 at inbox.lv (Alexander Dorofeyev)
Date: Sun, 09 Mar 2008 20:56:40 +0200
Subject: [PATCH 6/6] wined3d: Dirtify p8 textures when device palettes
	change.
In-Reply-To: <200803091842.58861.stefan@codeweavers.com>
References: <47D3EFEE.7030606@inbox.lv>
	<200803091842.58861.stefan@codeweavers.com>
Message-ID: <47D432E8.1030205@inbox.lv>

Hi Stefan,

About implementing ddraw-style palette on top of device palettes - I think this 
way we would create more issues than we solve by it. As far as I'm concerned, I 
don't feel like there's a lot of confusion coming from the fact there are two 
palette interfaces, although there is some confusion primarily because device 
palettes are used for ddraw purposes, mainly storing p8 primary surface's 
palette.  That isn't a big trouble to avoid, as same can be done by accessing 
dds_primary, I believe.

If ddraw palettes are mapped onto d3d8 style ones, then we need a mechanism of 
allocating palette numbers and freeing them as needed. For example, AVP1 does 
palette creation/destruction a LOT (every frame or every few frames), so it's 
not an unrealistic possibility to run out of palettes, if 65536 limit is kept 
and something is done wrong.

You may be right about checking palette in IWineD3D*Texture::PreLoad. I guess 
the palette9_changed call could simply be moved to PreLoad and it would 
accomplish something like that.

Stefan D?singer wrote:
> Am Sonntag, 9. M?rz 2008 15:10:54 schrieb Alexander Dorofeyev:
>> Fixes problems with properly updating wine's P8 textures, when it is
>> required because of device palette change.
> Instead of iterating over all resources and finding P8 textures I think it 
> would be nicer to store the palette the texture/surface was loaded with in 
> each P8 / A8P8 surface and compare this stored palette to the current device 
> palette in IWineD3DSurface::PreLoad(non-texture path) and 
> IWineD3D*Texture::PreLoad.
> 
> With this, patch 4 could maybe be made nicer as well. If we have to verify the 
> palettes anyway, we can remove the DDraw-Style IWineD3DPalette interface from 
> WineD3D altogether, and just give each ddraw palette in ddraw.dll a WineD3D 
> palette number and use the d3d8/9 palette management exclusively in WineD3D 
> and avoid the confusion of having two palette interfaces.



From stefan at codeweavers.com  Sun Mar  9 14:15:19 2008
From: stefan at codeweavers.com (Stefan =?utf-8?q?D=C3=B6singer?=)
Date: Sun, 9 Mar 2008 20:15:19 +0100
Subject: Fixed function pipeline replacement infrastructure follow up
Message-ID: <200803092015.27839.stefan@codeweavers.com>

Hi,

As a follow up to the mail from last Sunday I now have a concrete 
implementation suggestion for an infrastructure for a fixed function pipeline 
replacement:

What it mainly does is that it makes the state table a property of the shader 
backend, as well as the shader caps to keep GetDeviceCaps simpler. It also 
adds rudimentary functions for comparing the fixed function fragment 
processing settings. As an example implementation, the patchset is 
constructed around a fragment pipeline implementation using 
GL_ATI_fragment_shader.

What is missing is dealing with vertex states, Henri has some code for that 
already. The data structure and comparison of pipeline states needs 
optimization. The already existing pipeline replacement using 
GL_NV_register_combiners and GL_NV_texture_shader should be moved into a 
separate shader backend. And obviously an implementation of vertex and 
fragment pipeline using ARB shaders and GLSL(that could be done as a gsoc 
project maybe)

The GL_ATI_fragment_shader code is constructed bottom-up, so if the patches 
are applied as-is, it will lead to a temporary regression on ATI cards. 
Inverting this would be a major pain, so when sending it in I'll keep the 
extension disabled in patch 1, and enable it in a final last patch.

The GL_NV_* stuff will work a bit different than atifs, arb and glsl, since we 
can configure all texture stages individually, so a stored program and state 
comparison is not needed. Instead we can keep the set_tex_op as it is, but 
the if(GL_SUPPORTED(...)) checks and related nastiness can be factored out. 
Maybe we can also get rid of setting up the texunit map every draw in some 
cases.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ffp.tar.bz2
Type: application/x-tbz
Size: 43514 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080309/d629b6f6/attachment-0001.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080309/d629b6f6/attachment-0001.pgp 

From msclrhd at googlemail.com  Sun Mar  9 15:36:37 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Sun, 9 Mar 2008 20:36:37 +0000
Subject: oleacc: add GetOleaccVersionInfo
In-Reply-To: <252714.38266.qm@web23203.mail.ird.yahoo.com>
References: <252714.38266.qm@web23203.mail.ird.yahoo.com>
Message-ID: <3f4fd2640803091336j74cacebdkfe264cefe96fb00e@mail.gmail.com>

On 09/03/2008, Louis. Lenders <xerox_xerox2000 at yahoo.co.uk> wrote:
>
> Hi, this fixes crash in DietPower:
> http://bugs.winehq.org/show_bug.cgi?id=10102

> +@ stdcall GetOleaccVersionInfo(long long)

Since both these arguments are DWORD*, they need to be ptr, not long.

- Reece


From msclrhd at googlemail.com  Sun Mar  9 15:37:47 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Sun, 9 Mar 2008 20:37:47 +0000
Subject: oleacc: add GetOleaccVersionInfo
In-Reply-To: <3f4fd2640803091336j74cacebdkfe264cefe96fb00e@mail.gmail.com>
References: <252714.38266.qm@web23203.mail.ird.yahoo.com>
	<3f4fd2640803091336j74cacebdkfe264cefe96fb00e@mail.gmail.com>
Message-ID: <3f4fd2640803091337y4b765509x1de4f4a905bdf144@mail.gmail.com>

On 09/03/2008, Reece Dunn <msclrhd at googlemail.com> wrote:
> On 09/03/2008, Louis. Lenders <xerox_xerox2000 at yahoo.co.uk> wrote:
>  >
>  > Hi, this fixes crash in DietPower:
>  > http://bugs.winehq.org/show_bug.cgi?id=10102
>
>
> > +@ stdcall GetOleaccVersionInfo(long long)
>
>  Since both these arguments are DWORD*, they need to be ptr, not long.

Sorry for spamming wine-patches. I hit Reply to all without checking
the CC list.

- Reece


From thunderbird2k at gmx.net  Sun Mar  9 17:44:43 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Sun, 09 Mar 2008 23:44:43 +0100
Subject: [PATCH 6/6] wined3d: Dirtify p8 textures when device palettes
	change.
In-Reply-To: <47D432E8.1030205@inbox.lv>
References: <47D3EFEE.7030606@inbox.lv>
	<200803091842.58861.stefan@codeweavers.com> <47D432E8.1030205@inbox.lv>
Message-ID: <20080309224443.80270@gmx.net>

> Hi Stefan,
> 
> About implementing ddraw-style palette on top of device palettes - I think
> this 
> way we would create more issues than we solve by it. As far as I'm
> concerned, I 
> don't feel like there's a lot of confusion coming from the fact there are
> two 
> palette interfaces, although there is some confusion primarily because
> device 
> palettes are used for ddraw purposes, mainly storing p8 primary surface's 
> palette.  That isn't a big trouble to avoid, as same can be done by
> accessing 
> dds_primary, I believe.
> 
> If ddraw palettes are mapped onto d3d8 style ones, then we need a
> mechanism of 
> allocating palette numbers and freeing them as needed. For example, AVP1
> does 
> palette creation/destruction a LOT (every frame or every few frames), so
> it's 
> not an unrealistic possibility to run out of palettes, if 65536 limit is
> kept 
> and something is done wrong.
> 
> You may be right about checking palette in IWineD3D*Texture::PreLoad. I
> guess 
> the palette9_changed call could simply be moved to PreLoad and it would 
> accomplish something like that.
> 
> Stefan D?singer wrote:
> > Am Sonntag, 9. M?rz 2008 15:10:54 schrieb Alexander Dorofeyev:
> >> Fixes problems with properly updating wine's P8 textures, when it is
> >> required because of device palette change.
> > Instead of iterating over all resources and finding P8 textures I think
> it 
> > would be nicer to store the palette the texture/surface was loaded with
> in 
> > each P8 / A8P8 surface and compare this stored palette to the current
> device 
> > palette in IWineD3DSurface::PreLoad(non-texture path) and 
> > IWineD3D*Texture::PreLoad.
> > 
> > With this, patch 4 could maybe be made nicer as well. If we have to
> verify the 
> > palettes anyway, we can remove the DDraw-Style IWineD3DPalette interface
> from 
> > WineD3D altogether, and just give each ddraw palette in ddraw.dll a
> WineD3D 
> > palette number and use the d3d8/9 palette management exclusively in
> WineD3D 
> > and avoid the confusion of having two palette interfaces.
> 
> 

I think we should continue splitting the ddraw and d3d8/9 palette interfaces. It took me a long time to get the ddraw in a reasonable shape (there are a few small issues left). There are differences and I think we get issues down the road if we don't explicitly split it like it is now. (at least you would get a lot of dxversion checks).

It is just that right now a few places which don't need the device palette code have it in (I mean there are places left which use the device palette when there is none set e.g. read_from_framebuffer, RealizePalette and others).

Roderick
-- 
Psst! Geheimtipp: Online Games kostenlos spielen bei den GMX Free Games! 
http://games.entertainment.gmx.net/de/entertainment/games/free


From nessi at nessi-online.de  Sun Mar  9 18:33:23 2008
From: nessi at nessi-online.de (Jens Nestler)
Date: Mon, 10 Mar 2008 00:33:23 +0100
Subject: Fwd: Re: RegOverridePredefKey stub - Take 2
Message-ID: <200803100033.23681.nessi@nessi-online.de>

Hello,
six weeks ago I've sent this patch for a basic implementation of the  
RegOverridePredefKey function.
Unfortunately the patch was not considered till now.
Can everybody help me ?

Jens
-------------- next part --------------
An embedded message was scrubbed...
From: Jens Nestler <nessi at nessi-online.de>
Subject: Re: RegOverridePredefKey stub - Take 2
Date: Wed, 6 Feb 2008 08:00:05 +0100
Size: 5806
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080310/031480b3/attachment.eml 

From wine-devel at kievinfo.com  Sun Mar  9 20:19:02 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 09 Mar 2008 19:19:02 -0600
Subject: Fwd: Re: RegOverridePredefKey stub - Take 2
In-Reply-To: <200803100033.23681.nessi@nessi-online.de>
References: <200803100033.23681.nessi@nessi-online.de>
Message-ID: <47D48C86.5040403@kievinfo.com>


Jens Nestler wrote:
> Hello,
> six weeks ago I've sent this patch for a basic implementation of the  
> RegOverridePredefKey function.
> Unfortunately the patch was not considered till now.
> Can everybody help me ?
> 
You have some extra pieces in this patch. When you are submitting patch - 
make sure only one thing is being changed. Here you have some irrelevant 
changes in your patch.

Vitaliy.


From thestig at google.com  Sun Mar  9 22:18:51 2008
From: thestig at google.com (Lei Zhang)
Date: Sun, 9 Mar 2008 20:18:51 -0700
Subject: [PATCH 3/3] shell32: use well known directories from
	xdg-user-dirs (try 2)
In-Reply-To: <558b2f5c0803051941g32980e2p51c33adf3842e509@mail.gmail.com>
References: <558b2f5c0803051941g32980e2p51c33adf3842e509@mail.gmail.com>
Message-ID: <558b2f5c0803092018n1bb888a4i6222fa2ed59b770d@mail.gmail.com>

On Wed, Mar 5, 2008 at 8:41 PM, Lei Zhang <thestig at google.com> wrote:
> Hi,
>
>  This sets the shell folders using values from xdg-user-dirs. The
>  existing shell folder code checks the shell folder registry keys, and
>  will not overwrite the values we set here.
>
>  This version converts the Unix paths to Unicode when needed.
>

It just occurred to me that I need to convert the Unix path to a dos path.

Should I just send the updated version of this patch, or resend the
first two patches in the series as well?


From thestig at google.com  Sun Mar  9 22:19:12 2008
From: thestig at google.com (Lei Zhang)
Date: Sun, 9 Mar 2008 20:19:12 -0700
Subject: [PATCH] qedit: use skip in MediaDet test
In-Reply-To: <558b2f5c0802211615l4cdec6a6q1c2559d2ad9e2415@mail.gmail.com>
References: <558b2f5c0802211615l4cdec6a6q1c2559d2ad9e2415@mail.gmail.com>
Message-ID: <558b2f5c0803092019w20181225keb618b31061626f6@mail.gmail.com>

On Thu, Feb 21, 2008 at 5:15 PM, Lei Zhang <thestig at google.com> wrote:
> Hi,
>
>  Dank pointed out the qedit test crashes with an old .wine directory.
>  Adding a skip().
>

Any reason why this wasn't committed?


From m.b.lankhorst at gmail.com  Sun Mar  9 23:05:04 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Sun, 9 Mar 2008 21:05:04 -0700
Subject: Processes and ioctl's
Message-ID: <b130c85e0803092105q622740acj3e47004f5f2f4227@mail.gmail.com>

Hi all,

I am hitting a snag with moving ioctl handling into mount manager. I
got the ioctl's working and itunes fairly satisfied, but now I'm
hitting another problem: The mount manager is not in the same process
any more as the application. This is an issue because one of the
ioctl's is passing a pointer in the struct itself, which gives a messy
situation if it doesn't run in the current application any more.

A workaround would be to use ReadProcessMemory and WriteProcessMemory,
then fudge the wineserver ioctl request to somehow pass a handle of
the calling process around so I can use that. This looks like it is
not a clean solution. Does anyone know how to do it cleanly?

Cheers,
Maarten.


From wine-devel at kievinfo.com  Mon Mar 10 00:24:38 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 09 Mar 2008 23:24:38 -0600
Subject: Please remove/block DARKGuy user from the forum and user mailing list!
Message-ID: <47D4C616.70603@kievinfo.com>

What the subject say.


From dank at kegel.com  Mon Mar 10 01:14:19 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 9 Mar 2008 23:14:19 -0700
Subject: New winetricks 20080309: new verb 'icodecs'
Message-ID: <a71bd89a0803092314y2d317568g28ebb999e371c106@mail.gmail.com>

Intel codecs are needed to run Tonka Search & Rescue 2
(which my son likes), so I added them to winetricks as 'icodecs'.

I also renamed allvcodecs to be allcodecs (since it's hard
to separate audio from video codecs sometimes)
and removed a spurious warning from wsh56.

As always, winetricks is at
  http://kegel.com/wine/winetricks
and
  http://winezeug.googlecode.com


From julliard at winehq.org  Mon Mar 10 03:37:27 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 10 Mar 2008 09:37:27 +0100
Subject: [PATCH 3/3] shell32: use well known directories from
	xdg-user-dirs (try 2)
In-Reply-To: <558b2f5c0803092018n1bb888a4i6222fa2ed59b770d@mail.gmail.com>
	(Lei Zhang's message of "Sun, 9 Mar 2008 20:18:51 -0700")
References: <558b2f5c0803051941g32980e2p51c33adf3842e509@mail.gmail.com>
	<558b2f5c0803092018n1bb888a4i6222fa2ed59b770d@mail.gmail.com>
Message-ID: <87myp7dlfc.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> It just occurred to me that I need to convert the Unix path to a dos path.

No, there's no guarantee that the xdg dirs are reachable from a DOS
drive. You should be modifying the symlinks instead.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Mon Mar 10 03:36:38 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 10 Mar 2008 09:36:38 +0100
Subject: [PATCH] qedit: use skip in MediaDet test
In-Reply-To: <558b2f5c0803092019w20181225keb618b31061626f6@mail.gmail.com>
	(Lei Zhang's message of "Sun, 9 Mar 2008 20:19:12 -0700")
References: <558b2f5c0802211615l4cdec6a6q1c2559d2ad9e2415@mail.gmail.com>
	<558b2f5c0803092019w20181225keb618b31061626f6@mail.gmail.com>
Message-ID: <87r6ejdlgp.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> On Thu, Feb 21, 2008 at 5:15 PM, Lei Zhang <thestig at google.com> wrote:
>> Hi,
>>
>>  Dank pointed out the qedit test crashes with an old .wine directory.
>>  Adding a skip().
>>
>
> Any reason why this wasn't committed?

A skip() is for things that cannot be tested because some feature can
legitimately be missing on Windows. Having a not up-to-date Wine
registry is not a legitimate setup, there's no reason for the test to
try to cope with that.

-- 
Alexandre Julliard
julliard at winehq.org


From mikolaj at zalewski.pl  Mon Mar 10 04:31:12 2008
From: mikolaj at zalewski.pl (=?ISO-8859-2?Q?Miko=B3aj_Zalewski?=)
Date: Mon, 10 Mar 2008 10:31:12 +0100
Subject: [comctl32/tests #3] Use GetModuleHandleA instead of LoadLibraryA
In-Reply-To: <47D41A8E.4070600@gmail.com>
References: <47D4142E.4050206@zalewski.pl> <47D41A8E.4070600@gmail.com>
Message-ID: <47D4FFE0.1080504@zalewski.pl>


> If LoadLibrary is indeed needed it should be accompanied with a 
> FreeLibrary and we probably need a comment for the why as well.

  Does it matter if we call FreeLibrary on the library we are testing? I 
don't think we will be able to free it before the end of the tests when 
anyhow it will be unloaded by the process shutdown. But maybe I should 
care more about elegant code?

Mikolaj Zalewski


From paul.vriens.wine at gmail.com  Mon Mar 10 04:41:24 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Mon, 10 Mar 2008 10:41:24 +0100
Subject: [comctl32/tests #3] Use GetModuleHandleA instead of LoadLibraryA
In-Reply-To: <47D4FFE0.1080504@zalewski.pl>
References: <47D4142E.4050206@zalewski.pl> <47D41A8E.4070600@gmail.com>
	<47D4FFE0.1080504@zalewski.pl>
Message-ID: <47D50244.1070302@gmail.com>

Miko?aj Zalewski wrote:
> 
>> If LoadLibrary is indeed needed it should be accompanied with a 
>> FreeLibrary and we probably need a comment for the why as well.
> 
>  Does it matter if we call FreeLibrary on the library we are testing? I 
> don't think we will be able to free it before the end of the tests when 
> anyhow it will be unloaded by the process shutdown. But maybe I should 
> care more about elegant code?
> 
> Mikolaj Zalewski
> 
Yeah, I wrote 'should' but it has more to do with style I guess. The same is 
true for HeapFree of course but I do think we should make the code as 
good/correct as possible.

-- 
Cheers,

Paul.


From julliard at winehq.org  Mon Mar 10 05:34:19 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 10 Mar 2008 11:34:19 +0100
Subject: [comctl32/tests #3] Use GetModuleHandleA instead of LoadLibraryA
In-Reply-To: <47D41A8E.4070600@gmail.com> (Paul Vriens's message of "Sun, 09
	Mar 2008 18:12:46 +0100")
References: <47D4142E.4050206@zalewski.pl> <47D41A8E.4070600@gmail.com>
Message-ID: <87iqzueul0.fsf@wine.dyndns.org>

Paul Vriens <paul.vriens.wine at gmail.com> writes:

> The question that remains is should the full <dll>-tests be able to be compiled 
> and run or should we have this to be correct for every single test? I mean that 
> are no issues if you compile the whole comctl32 "testsuite".

It's a good idea to keep each C file as stand-alone as possible, so that
it's possible to copy it over to Windows and quickly build a test exe
without needing extra infrastructure.

-- 
Alexandre Julliard
julliard at winehq.org


From rob at codeweavers.com  Mon Mar 10 05:41:08 2008
From: rob at codeweavers.com (Robert Shearman)
Date: Mon, 10 Mar 2008 10:41:08 +0000
Subject: a patch to fix the font in bottons and so on.
In-Reply-To: <120d62710803091906w5bbbdebds71047663b19b73b5@mail.gmail.com>
References: <120d62710803091906w5bbbdebds71047663b19b73b5@mail.gmail.com>
Message-ID: <47D51044.5020901@codeweavers.com>

?? wrote:
> Hi everyone,
> I have a patch in ubuntu China forum, which fix the font in bottons 
> and so on to display correctly using the right font. This patch 
> changes only one source file: dlls/gdi32/freetype.c. The main function 
> is: Default and ansi charset is translated to 
> getenv("WINE_DEFAULT_CODEPAGE"). This patch was written by *windowssux 
> <javascript:pn('windowssux');> in ubunt china forum: 
> http://forum.ubuntu.org.cn/*
>
>
> The patched freetype.c is attached. It's the first time for me to send 
> you guys a patch to wine. Please let know if something is wrong. Thanks.

You need to send the patch, not the whole file. It's nearly impossible 
to review the changes if you add an attachment with several thousand 
lines of code.

-- 
Rob Shearman



From julliard at winehq.org  Mon Mar 10 06:05:29 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 10 Mar 2008 12:05:29 +0100
Subject: wininet: Make the reference count of WININETHANDLEHEADER
	thread-safe by using InterlockedIncrement/InterlockedDecrement.
In-Reply-To: <47D27219.8030202@codeweavers.com> (Robert Shearman's message of
	"Sat, 08 Mar 2008 11:01:45 +0000")
References: <47D27219.8030202@codeweavers.com>
Message-ID: <87ejaiet52.fsf@wine.dyndns.org>

Robert Shearman <rob at codeweavers.com> writes:

> @@ -1296,7 +1296,7 @@ HINTERNET FTP_FtpOpenFileW(LPWININETFTPSESSIONW lpwfs,
>          lpwh->hdr.vtbl = &FTPFILEVtbl;
>          lpwh->hdr.dwFlags = dwFlags;
>          lpwh->hdr.dwContext = dwContext;
> -        lpwh->hdr.dwRefCount = 1;
> +        lpwh->hdr.lRefCount = 1;

If you are going to rename the variable then please take the opportunity
to get rid of the silly Hungarian prefix, so that we don't need to
rename it again next time.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Mon Mar 10 06:14:50 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 10 Mar 2008 12:14:50 +0100
Subject: shell32: Support getting the shell folder path for users other
	than the current user and the default user (take 3)
In-Reply-To: <200803092125.m29LP1YO005984@mailhost.geldorp.nl> (Ge van
	Geldorp's message of "Sun, 9 Mar 2008 22:25:06 +0100")
References: <200803092125.m29LP1YO005984@mailhost.geldorp.nl>
Message-ID: <87abl6esph.fsf@wine.dyndns.org>

"Ge van Geldorp" <ge at thinstall.com> writes:

> Changelog:
>   Juan Lang <juan.lang at gmail.com>
>   Ge van Geldorp <ge at thinstall.com>
>   Support getting the shell folder path for users other than the current
> user and the default user
>   Fixes bug 10905

You are leaking memory now.

-- 
Alexandre Julliard
julliard at winehq.org


From stefan at codeweavers.com  Mon Mar 10 08:38:24 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Mon, 10 Mar 2008 14:38:24 +0100
Subject: Implementing a new Direct3D function
In-Reply-To: <200803091952.12638.jgardou@yahoo.fr>
References: <E1JYPQa-0000lW-41@www10.emo.freenet-rz.de>
	<200803091952.12638.jgardou@yahoo.fr>
Message-ID: <200803101438.30661.stefan@codeweavers.com>

Am Sonntag, 9. M?rz 2008 19:52:12 schrieb J?r?me Gardou:
> Also, d3dx9 provides support for multiple file format (PNG, TGA, BMP...). I
> assume I'll have to add those dependencies in the build process.
As far as I know GDI handles them, so you can use GDI functions here, and GDI 
in turn alredy has the dependency on the external libraries
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080310/37f28483/attachment.pgp 

From stefan at codeweavers.com  Mon Mar 10 08:47:13 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Mon, 10 Mar 2008 14:47:13 +0100
Subject: Fixed function pipeline replacement infrastructure follow up
In-Reply-To: <200803092015.27839.stefan@codeweavers.com>
References: <200803092015.27839.stefan@codeweavers.com>
Message-ID: <200803101447.17268.stefan@codeweavers.com>

Am Sonntag, 9. M?rz 2008 20:15:19 schrieb Stefan D?singer:
> What is missing is dealing with vertex states, Henri has some code for that
> already. The data structure and comparison of pipeline states needs
> optimization. The already existing pipeline replacement using
> GL_NV_register_combiners and GL_NV_texture_shader should be moved into a
> separate shader backend.
An update on this, I think moving the 
GL_NV_texture_shader+GL_NV_register_combiners code into a separate shader 
model is pointless. I had a deeper look at the code again, and I think that 
the NVTS handling is well abstracted using set_tex_op vs set_tex_op_nvrc. 
GL_NV_texture_shader in turn is handled mostly in the activate_dimensions() 
function in state.c.

The situation isn't 100Q% desireable, but to get major improvements we'd need 
an nvts+nvrc exclusive backend, and keep both extensions out of the base one. 
This would mean a functional regression for cards that have nvrc but not 
nvts(Geforce 2 and earlier). Trying to keep nvrc functionality without nvts 
and still separating the code would mean massive code duplication with the 
gain of removing 4 or 5 if conditions. (Or alternatively adding a few more 
shader callbacks, one for each replaced if())

Once we implement real pixel shaders using those extensions we need a separate 
shader backend, but for the ffp part it will only hook the state_alphaop(), 
state_colorop() and sampler() functions to prevent the originals from killing 
the shader, but not modifying their functionality.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080310/71dd143f/attachment.pgp 

From jgardou at yahoo.fr  Mon Mar 10 11:35:35 2008
From: jgardou at yahoo.fr (=?iso-8859-1?q?Gardou=20J=E9r=F4me?=)
Date: Mon, 10 Mar 2008 17:35:35 +0100 (CET)
Subject: Implementing a new Direct3D function
In-Reply-To: <200803101438.30661.stefan@codeweavers.com>
Message-ID: <541659.19987.qm@web25014.mail.ukl.yahoo.com>



Stefan D?singer <stefan at codeweavers.com> a ?crit : Am Sonntag, 9. M?rz 2008 19:52:12 schrieb J?r?me Gardou:
> Also, d3dx9 provides support for multiple file format (PNG, TGA, BMP...). I
> assume I'll have to add those dependencies in the build process.
As far as I know GDI handles them, so you can use GDI functions here, and GDI 
in turn alredy has the dependency on the external libraries
Yes, but that would be very incomplete. GDI has only limited support for PNG and JPG files, and doesn't handle TGA at all.

Though this will be useful for DIBs, DDS and BMPs.

       
---------------------------------
 Envoy? avec Yahoo! Mail.
Une boite mail plus intelligente. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080310/18ffa194/attachment.htm 

From denver at ossguy.com  Mon Mar 10 11:50:24 2008
From: denver at ossguy.com (Denver Gingerich)
Date: Mon, 10 Mar 2008 12:50:24 -0400
Subject: ddraw: Implement ForceRefreshRate registry entry for overriding
	DirectX refresh rate
In-Reply-To: <47D56576.2060908@ossguy.com>
References: <47D56576.2060908@ossguy.com>
Message-ID: <6defe8840803100950u5289f119j96c99dcaa7ff93da@mail.gmail.com>

On Mon, Mar 10, 2008 at 12:44 PM, Denver Gingerich <denver at ossguy.com> wrote:
> The DirectX refresh rate override feature that this patch implements is described in main.c below.
>
>  In order for the override to take effect only on SetDisplayMode and not on RestoreDisplayMode it was necessary to move the functionality of SetDisplayMode into a helper function (IDirectDrawImpl_SetDisplayModeNoOverride) and let IDirectDrawImpl_SetDisplayMode and IDirectDrawImpl_RestoreDisplayMode call the helper function.
>
>  Denver Gingerich
>
>
>  diff --git a/dlls/ddraw/ddraw.c b/dlls/ddraw/ddraw.c
>  index 4cac55d..0f7eeaf 100644
>  --- a/dlls/ddraw/ddraw.c
>  +++ b/dlls/ddraw/ddraw.c
>  @@ -3,6 +3,7 @@
>   * Copyright 1998-2000 Lionel Ulmer
>   * Copyright 2000-2001 TransGaming Technologies Inc.
>   * Copyright 2006 Stefan D?singer
>  + * Copyright 2008 Denver Gingerich
>   *
>   * This library is free software; you can redistribute it and/or
>   * modify it under the terms of the GNU Lesser General Public
>  @@ -60,6 +61,9 @@ static const DDDEVICEIDENTIFIER2 deviceidentifier =
>      0
>   };
>
>  +/* in main.c; stores value of ForceRefreshRate */
>  +extern DWORD force_refresh_rate;
>  +
>   /*****************************************************************************
>   * IUnknown Methods
>   *****************************************************************************/
>  @@ -534,34 +538,24 @@ IDirectDrawImpl_SetCooperativeLevel(IDirectDraw7 *iface,
>   }
>
>   /*****************************************************************************
>  - * IDirectDraw7::SetDisplayMode
>   *
>  - * Sets the display screen resolution, color depth and refresh frequency
>  - * when in fullscreen mode (in theory).
>  - * Possible return values listed in the SDK suggest that this method fails
>  - * when not in fullscreen mode, but this is wrong. Windows 2000 happily sets
>  - * the display mode in DDSCL_NORMAL mode without an hwnd specified.
>  - * It seems to be valid to pass 0 for With and Height, this has to be tested
>  - * It could mean that the current video mode should be left as-is. (But why
>  - * call it then?)
>  + * Helper function for SetDisplayMode and RestoreDisplayMode
>   *
>  - * Params:
>  - *  Height, Width: Screen dimension
>  - *  BPP: Color depth in Bits per pixel
>  - *  Refreshrate: Screen refresh rate
>  - *  Flags: Other stuff
>  - *
>  - * Returns
>  - *  DD_OK on success
>  + * Implements DirectDraw's SetDisplayMode, but ignores the value of
>  + * ForceRefreshRate, since it is already handled by
>  + * IDirectDrawImpl_SetDisplayMode.  RestoreDisplayMode can use this function
>  + * without worrying that ForceRefreshRate will override the refresh rate.  For
>  + * argument and return value documentation, see
>  + * IDirectDrawImpl_SetDisplayMode.
>   *
>   *****************************************************************************/
>  -static HRESULT WINAPI
>  -IDirectDrawImpl_SetDisplayMode(IDirectDraw7 *iface,
>  -                               DWORD Width,
>  -                               DWORD Height,
>  -                               DWORD BPP,
>  -                               DWORD RefreshRate,
>  -                               DWORD Flags)
>  +static HRESULT
>  +IDirectDrawImpl_SetDisplayModeNoOverride(IDirectDraw7 *iface,
>  +                                         DWORD Width,
>  +                                         DWORD Height,
>  +                                         DWORD BPP,
>  +                                         DWORD RefreshRate,
>  +                                         DWORD Flags)
>   {
>      ICOM_THIS_FROM(IDirectDrawImpl, IDirectDraw7, iface);
>      WINED3DDISPLAYMODE Mode;
>  @@ -616,6 +610,46 @@ IDirectDrawImpl_SetDisplayMode(IDirectDraw7 *iface,
>   }
>
>   /*****************************************************************************
>  + * IDirectDraw7::SetDisplayMode
>  + *
>  + * Sets the display screen resolution, color depth and refresh frequency
>  + * when in fullscreen mode (in theory).
>  + * Possible return values listed in the SDK suggest that this method fails
>  + * when not in fullscreen mode, but this is wrong. Windows 2000 happily sets
>  + * the display mode in DDSCL_NORMAL mode without an hwnd specified.
>  + * It seems to be valid to pass 0 for With and Height, this has to be tested
>  + * It could mean that the current video mode should be left as-is. (But why
>  + * call it then?)
>  + *
>  + * Params:
>  + *  Height, Width: Screen dimension
>  + *  BPP: Color depth in Bits per pixel
>  + *  Refreshrate: Screen refresh rate
>  + *  Flags: Other stuff
>  + *
>  + * Returns
>  + *  DD_OK on success
>  + *
>  + *****************************************************************************/
>  +static HRESULT WINAPI
>  +IDirectDrawImpl_SetDisplayMode(IDirectDraw7 *iface,
>  +                               DWORD Width,
>  +                               DWORD Height,
>  +                               DWORD BPP,
>  +                               DWORD RefreshRate,
>  +                               DWORD Flags)
>  +{
>  +    if (force_refresh_rate != 0)
>  +    {
>  +        TRACE("ForceRefreshRate overriding passed-in refresh rate (%d Hz) to %d Hz\n", RefreshRate, force_refresh_rate);
>  +        RefreshRate = force_refresh_rate;
>  +    }
>  +
>  +    return IDirectDrawImpl_SetDisplayModeNoOverride(iface, Width, Height, BPP,
>  +                                                    RefreshRate, Flags);
>  +}
>  +
>  +/*****************************************************************************
>   * IDirectDraw7::RestoreDisplayMode
>   *
>   * Restores the display mode to what it was at creation time. Basically.
>  @@ -642,12 +676,12 @@ IDirectDrawImpl_RestoreDisplayMode(IDirectDraw7 *iface)
>      ICOM_THIS_FROM(IDirectDrawImpl, IDirectDraw7, iface);
>      TRACE("(%p)\n", This);
>
>  -    return IDirectDraw7_SetDisplayMode(ICOM_INTERFACE(This, IDirectDraw7),
>  -                                       This->orig_width,
>  -                                       This->orig_height,
>  -                                       This->orig_bpp,
>  -                                       0,
>  -                                       0);
>  +    return IDirectDrawImpl_SetDisplayModeNoOverride(ICOM_INTERFACE(This, IDirectDraw7),
>  +                                                    This->orig_width,
>  +                                                    This->orig_height,
>  +                                                    This->orig_bpp,
>  +                                                    0,
>  +                                                    0);
>   }
>
>   /*****************************************************************************
>  diff --git a/dlls/ddraw/main.c b/dlls/ddraw/main.c
>  index 4e77d4f..a33cb34 100644
>  --- a/dlls/ddraw/main.c
>  +++ b/dlls/ddraw/main.c
>  @@ -4,6 +4,7 @@
>   * Copyright 1998 Lionel Ulmer
>   * Copyright 2000-2001 TransGaming Technologies Inc.
>   * Copyright 2006 Stefan D?singer
>  + * Copyright 2008 Denver Gingerich
>   *
>   * This file contains the (internal) driver registration functions,
>   * driver enumeration APIs and DirectDraw creation functions.
>  @@ -68,6 +69,9 @@ static CRITICAL_SECTION_DEBUG ddraw_cs_debug =
>   };
>   CRITICAL_SECTION ddraw_cs = { &ddraw_cs_debug, -1, 0, 0, 0, 0 };
>
>  +/* value of ForceRefreshRate */
>  +DWORD force_refresh_rate = 0;
>  +
>   /***********************************************************************
>   *
>   * Helper function for DirectDrawCreate and friends
>  @@ -886,6 +890,38 @@ DllMain(HINSTANCE hInstDLL,
>              }
>          }
>
>  +        /* On Windows one can force the refresh rate that DirectDraw uses by
>  +         * setting an override value in dxdiag.  This is documented in KB315614
>  +         * (main article), KB230002, and KB217348.  By comparing registry dumps
>  +         * before and after setting the override, we see that the override value
>  +         * is stored in HKLM\Software\Microsoft\DirectDraw\ForceRefreshRate as a
>  +         * DWORD that represents the refresh rate to force.  We use this
>  +         * registry entry to modify the behavior of SetDisplayMode so that Wine
>  +         * users can override the refresh rate in a Windows-compatible way.
>  +         *
>  +         * dxdiag will not accept a refresh rate lower than 40 or higher than
>  +         * 120 so this value should be within that range.  It is, of course,
>  +         * possible for a user to set the registry entry value directly so that
>  +         * assumption might not hold.
>  +         *
>  +         * There is no current mechanism for setting this value through the Wine
>  +         * GUI.  It would be most appropriate to set this value through a dxdiag
>  +         * clone, but it may be sufficient to use winecfg.
>  +         *
>  +         * TODO: Create a mechanism for setting this value through the Wine GUI.
>  +         */
>  +        if ( !RegOpenKeyA( HKEY_LOCAL_MACHINE, "Software\\Microsoft\\DirectDraw", &hkey ) )
>  +        {
>  +            DWORD type, data;
>  +            size = sizeof(data);
>  +            if (!RegQueryValueExA( hkey, "ForceRefreshRate", NULL, &type, (LPBYTE)&data, &size ) && type == REG_DWORD)
>  +            {
>  +                TRACE("ForceRefreshRate set; overriding refresh rate to %d Hz\n", data);
>  +                force_refresh_rate = data;
>  +            }
>  +            RegCloseKey( hkey );
>  +        }
>  +
>          DisableThreadLibraryCalls(hInstDLL);
>      }
>      else if (Reason == DLL_PROCESS_DETACH)

This patch differs from my previous patch [1] in the following ways:
a) DDRAW_SetDisplayMode renamed to IDirectDrawImpl_SetDisplayModeNoOverride
b) sentence in main.c description changed from

"To ensure compatibility with Windows, we use this registry entry to
modify the behavior of SetDisplayMode."

to

"We use this registry entry to modify the behavior of SetDisplayMode
so that Wine users can override the refresh rate in a
Windows-compatible way."


Hopefully these changes are sufficient for the patch to be accepted.
Please let me know if there are further concerns with it.  Thanks.

Denver


1. http://www.winehq.org/pipermail/wine-patches/2008-March/051213.html


From dank at kegel.com  Mon Mar 10 12:31:24 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 10 Mar 2008 10:31:24 -0700
Subject: Processes and ioctl's
Message-ID: <a71bd89a0803101031n13f7dde7s88f5b41e6c4d882@mail.gmail.com>

Maarten wrote:
> I am hitting a snag with moving ioctl handling into mount manager.

It might be good to review for the group why you're moving ioctl
handling.  Context is always helpful.


From nessi at nessi-online.de  Mon Mar 10 13:40:46 2008
From: nessi at nessi-online.de (Jens Nestler)
Date: Mon, 10 Mar 2008 19:40:46 +0100
Subject: Fwd: Re: RegOverridePredefKey stub -  new
In-Reply-To: <47D48C86.5040403@kievinfo.com>
References: <200803100033.23681.nessi@nessi-online.de>
	<47D48C86.5040403@kievinfo.com>
Message-ID: <200803101940.46947.nessi@nessi-online.de>

Am Montag, 10. M?rz 2008 02:19:02 schrieb Vitaliy Margolen:
> Jens Nestler wrote:
> > Hello,
> > six weeks ago I've sent this patch for a basic implementation of the
> > RegOverridePredefKey function.
> > Unfortunately the patch was not considered till now.
> > Can everybody help me ?
>
> You have some extra pieces in this patch. When you are submitting patch -
> make sure only one thing is being changed. Here you have some irrelevant
> changes in your patch.
>
> Vitaliy.

Sorry, 
unfortunately there was a second patch included (which was already applied). 
Please find the revised patch attached.
Jens
-------------- next part --------------
A non-text attachment was scrubbed...
Name: patch_RegOverridePredefKey.diff
Type: text/x-diff
Size: 2869 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080310/70201203/attachment.diff 

From jchevrier at nexicom.net  Mon Mar 10 14:06:49 2008
From: jchevrier at nexicom.net (Justin Chevrier)
Date: Mon, 10 Mar 2008 15:06:49 -0400
Subject: DestroyWindow behavior differences between Win9x and Win2k/xp
Message-ID: <47D586C9.7010905@nexicom.net>

Hey guys,

I'm looking into a crash of Master Of Orion II on exit (both in Wine and 
Windows XP). The problem appears to be that the program is attempting to 
do a DestroyWindow on a different thread. This is not allowed by our 
code and that behavior is backed up by MSDN documentation. This behavior 
was allowed on Windows 9x however. I have confirmed that removing the 
thread check allows the app to exit cleanly, but of course that is not 
an acceptable fix. As this is a full screen app the game's window stays 
on top in a partially drawn state and exiting requires doing an alt-tab 
to the console. Opinions on the correct course of action to resolve this?

Thanks

Justin Chevrier


From juan.lang at gmail.com  Mon Mar 10 14:11:09 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 10 Mar 2008 12:11:09 -0700
Subject: DestroyWindow behavior differences between Win9x and Win2k/xp
In-Reply-To: <47D586C9.7010905@nexicom.net>
References: <47D586C9.7010905@nexicom.net>
Message-ID: <3a768c550803101211x6a8b69afgb9c95dcc9e7edf39@mail.gmail.com>

>  I'm looking into a crash of Master Of Orion II on exit (both in Wine and
>  Windows XP). The problem appears to be that the program is attempting to
>  do a DestroyWindow on a different thread. This is not allowed by our
>  code and that behavior is backed up by MSDN documentation. This behavior
>  was allowed on Windows 9x however. I have confirmed that removing the
>  thread check allows the app to exit cleanly, but of course that is not
>  an acceptable fix.

On the contrary, if Windows (in any version) allows it, and an app
depends on it, then we have to emulate it.  A test case that passes on
Win9x that demonstrates the problem is probably sufficient to show
that the check should be removed.

--Juan


From dank at kegel.com  Mon Mar 10 14:13:29 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 10 Mar 2008 12:13:29 -0700
Subject: DestroyWindow behavior differences between Win9x and Win2k/xp
Message-ID: <a71bd89a0803101213p3fc0e81do69dd503fbe9fec@mail.gmail.com>

Maybe writing a test showing that the cross-thread
behavior is required on win9x would be a good next step?


From jchevrier at nexicom.net  Mon Mar 10 14:17:40 2008
From: jchevrier at nexicom.net (Justin Chevrier)
Date: Mon, 10 Mar 2008 15:17:40 -0400
Subject: DestroyWindow behavior differences between Win9x and Win2k/xp
In-Reply-To: <3a768c550803101211x6a8b69afgb9c95dcc9e7edf39@mail.gmail.com>
References: <47D586C9.7010905@nexicom.net>
	<3a768c550803101211x6a8b69afgb9c95dcc9e7edf39@mail.gmail.com>
Message-ID: <47D58954.2030608@nexicom.net>

Juan Lang wrote:
>>  I'm looking into a crash of Master Of Orion II on exit (both in Wine and
>>  Windows XP). The problem appears to be that the program is attempting to
>>  do a DestroyWindow on a different thread. This is not allowed by our
>>  code and that behavior is backed up by MSDN documentation. This behavior
>>  was allowed on Windows 9x however. I have confirmed that removing the
>>  thread check allows the app to exit cleanly, but of course that is not
>>  an acceptable fix.
>>     
>
> On the contrary, if Windows (in any version) allows it, and an app
> depends on it, then we have to emulate it.  A test case that passes on
> Win9x that demonstrates the problem is probably sufficient to show
> that the check should be removed.
>
> --Juan
>
>
>
>   
Okay, that will be my next stop.

Thanks Juan and Dan.

Justin


From julliard at winehq.org  Mon Mar 10 14:18:38 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 10 Mar 2008 20:18:38 +0100
Subject: DestroyWindow behavior differences between Win9x and Win2k/xp
In-Reply-To: <3a768c550803101211x6a8b69afgb9c95dcc9e7edf39@mail.gmail.com>
	(Juan Lang's message of "Mon, 10 Mar 2008 12:11:09 -0700")
References: <47D586C9.7010905@nexicom.net>
	<3a768c550803101211x6a8b69afgb9c95dcc9e7edf39@mail.gmail.com>
Message-ID: <874pbee6b5.fsf@wine.dyndns.org>

"Juan Lang" <juan.lang at gmail.com> writes:

>>  I'm looking into a crash of Master Of Orion II on exit (both in Wine and
>>  Windows XP). The problem appears to be that the program is attempting to
>>  do a DestroyWindow on a different thread. This is not allowed by our
>>  code and that behavior is backed up by MSDN documentation. This behavior
>>  was allowed on Windows 9x however. I have confirmed that removing the
>>  thread check allows the app to exit cleanly, but of course that is not
>>  an acceptable fix.
>
> On the contrary, if Windows (in any version) allows it, and an app
> depends on it, then we have to emulate it.  A test case that passes on
> Win9x that demonstrates the problem is probably sufficient to show
> that the check should be removed.

If the app crashes on XP then it's fairly reasonable for it to crash on
Wine too. The Win9x design (or lack thereof) is not something we want to
support in general.

-- 
Alexandre Julliard
julliard at winehq.org


From jacek at codeweavers.com  Mon Mar 10 14:52:34 2008
From: jacek at codeweavers.com (Jacek Caban)
Date: Mon, 10 Mar 2008 20:52:34 +0100
Subject: Revert "mshtml: Use QueryService to get IHttpNegotiate
	in	get_post_data_stream."
In-Reply-To: <47D212DE.5080508@kievinfo.com>
References: <47D212DE.5080508@kievinfo.com>
Message-ID: <47D59182.3070002@codeweavers.com>

Hi Vitaliy,

Vitaliy Margolen wrote:
> This reverts commit c32cca8066807d09e3b953aee9242eba8cfa8cdb.
>
> This patch is obviously wrong since it broke Steam Community page.
>
This patch is obviously good and fixed a real problem, so the problem 
must be somewhere else. I would try to fix it, but Community tab works 
fine for me so I can't test it.


Jacek


From raccoonone at procyongames.com  Mon Mar 10 15:32:43 2008
From: raccoonone at procyongames.com (Christopher)
Date: Mon, 10 Mar 2008 13:32:43 -0700
Subject: make LoadStringW pass tests (fixed merge conflict)
In-Reply-To: <87fxv5j82l.fsf@wine.dyndns.org>
References: <47CEDF48.8090705@procyongames.com>	<22821af30803051005r2ab23be0p501aeb71841cc562@mail.gmail.com>	<47CEEF38.1040808@procyongames.com>
	<87fxv5j82l.fsf@wine.dyndns.org>
Message-ID: <47D59AEB.3050401@procyongames.com>

Alexandre Julliard wrote:
> Christopher <raccoonone at procyongames.com> writes:
>
>   
>> James Hawkins wrote:
>>     
>>> Why don't you just name the new parameter the same name as the
>>> function parameter ('buffer' or some variation)?  junkpointer is a
>>> terrible variable name.
>>>
>>>   
>>>       
>> sure, I will change it.
>>     
>
> Actually what you should do is take advantage of the fact that the
> pointer is returned to simplify the code and avoid a second LoadStringW
> call.
>
>   
Is there more work I need to do on this patch? I noticed that the new 
copy that I sent in, with the corrections that everyone suggested, still 
hasn't been accepted.

Christopher Berner


From zgs at seas.upenn.edu  Mon Mar 10 18:04:49 2008
From: zgs at seas.upenn.edu (Zachary Goldberg)
Date: Mon, 10 Mar 2008 23:04:49 +0000
Subject: Future Wine Weekly Newsletters
Message-ID: <b050a5e70803101604l40b45999xd4b2059d54a6414a@mail.gmail.com>

Wine,

I normally would like to have WWNs ready by Sunday night to be posted
on Monday but as you can tell i'm going to slip by a day or two again
this week.

A proposal was mentioned to me to make WWNs perhaps bi-weekly, either
coordinating with the week of releases or the off week.  This would
have a couple immediate pros and cons that I can see:

pros
*More articles and posts for me to sift through, pick out the more
important and relevent articles.  Slightly higher overall W(B)WN
quality.
*It'd be much easier for me to be on time with them.

cons
*Fewer wwns
*Perhaps slightly bigger wwns, i don't know what general consensus is
on preffered newsletter length


Thoughts?  Either way i'de like to have 343 ready and submitted
sometime tomorrow evening.

--Zach


From wine-devel at kievinfo.com  Mon Mar 10 20:31:48 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Mon, 10 Mar 2008 19:31:48 -0600
Subject: Revert "mshtml: Use QueryService to get IHttpNegotiate in
	get_post_data_stream."
In-Reply-To: <47D59182.3070002@codeweavers.com>
References: <47D212DE.5080508@kievinfo.com> <47D59182.3070002@codeweavers.com>
Message-ID: <47D5E104.9070000@kievinfo.com>

Jacek Caban wrote:
> Hi Vitaliy,
> 
> Vitaliy Margolen wrote:
>> This reverts commit c32cca8066807d09e3b953aee9242eba8cfa8cdb.
>>
>> This patch is obviously wrong since it broke Steam Community page.
>>
> This patch is obviously good and fixed a real problem, so the problem 
> must be somewhere else. I would try to fix it, but Community tab works 
> fine for me so I can't test it.
> 
It would be nice if you would have said something in the bug report.

It seems the problem caused by an empty content-length for the POST request. 
That might work for you because you are not behind the proxy. Proxies do not 
like that and return error. The question is then why does it work without 
your patch?

Vitaliy.


From wine-devel at kievinfo.com  Mon Mar 10 20:34:37 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Mon, 10 Mar 2008 19:34:37 -0600
Subject: DestroyWindow behavior differences between Win9x and Win2k/xp
In-Reply-To: <874pbee6b5.fsf@wine.dyndns.org>
References: <47D586C9.7010905@nexicom.net>	<3a768c550803101211x6a8b69afgb9c95dcc9e7edf39@mail.gmail.com>
	<874pbee6b5.fsf@wine.dyndns.org>
Message-ID: <47D5E1AD.5090809@kievinfo.com>

Alexandre Julliard wrote:
> "Juan Lang" <juan.lang at gmail.com> writes:
> 
>>>  I'm looking into a crash of Master Of Orion II on exit (both in Wine and
>>>  Windows XP). The problem appears to be that the program is attempting to
>>>  do a DestroyWindow on a different thread. This is not allowed by our
>>>  code and that behavior is backed up by MSDN documentation. This behavior
>>>  was allowed on Windows 9x however. I have confirmed that removing the
>>>  thread check allows the app to exit cleanly, but of course that is not
>>>  an acceptable fix.
>> On the contrary, if Windows (in any version) allows it, and an app
>> depends on it, then we have to emulate it.  A test case that passes on
>> Win9x that demonstrates the problem is probably sufficient to show
>> that the check should be removed.
> 
> If the app crashes on XP then it's fairly reasonable for it to crash on
> Wine too. The Win9x design (or lack thereof) is not something we want to
> support in general.
> 
Then we might as well remove "emulation" of all win versions and keep it at 
win2k. That's the whole point - if we have such a switch, we have to keep 
Wine compatible to that win version. If we can't, then we shouldn't even try 
to pretend. I'm not suggesting doing this for everything, but things like 
this do matter.

Vitaliy


From jjmckenzie51 at sprintpcs.com  Mon Mar 10 20:59:23 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Mon, 10 Mar 2008 18:59:23 -0700
Subject: Future Wine Weekly Newsletters
In-Reply-To: <b050a5e70803101604l40b45999xd4b2059d54a6414a@mail.gmail.com>
References: <b050a5e70803101604l40b45999xd4b2059d54a6414a@mail.gmail.com>
Message-ID: <47D5E77B.1010109@sprintpcs.com>

Zachary Goldberg wrote:
> Wine,
>
> I normally would like to have WWNs ready by Sunday night to be posted
> on Monday but as you can tell i'm going to slip by a day or two again
> this week.
>
> A proposal was mentioned to me to make WWNs perhaps bi-weekly, either
> coordinating with the week of releases or the off week.  This would
> have a couple immediate pros and cons that I can see:
>
> pros
> *More articles and posts for me to sift through, pick out the more
> important and relevent articles.  Slightly higher overall W(B)WN
> quality.
> *It'd be much easier for me to be on time with them.
>
> cons
> *Fewer wwns
> *Perhaps slightly bigger wwns, i don't know what general consensus is
> on preffered newsletter length
>
>
> Thoughts?  Either way i'de like to have 343 ready and submitted
> sometime tomorrow evening.
>
> --Zach
>
>
>   
Zach:

Bi-weekly is fine by me.  Would go with the release schedule.

James



From dank at kegel.com  Mon Mar 10 21:14:13 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 10 Mar 2008 19:14:13 -0700
Subject: Wine booth/BOF and Linuxworld San Francisco, Aug 2008?
Message-ID: <a71bd89a0803101914v628d0bc9l65880a6458b97633@mail.gmail.com>

Wine has come a long way, and will have just had its 1.0
release (knock on wood).  So perhaps this is a good year
to have a .org booth.  What do folks think?


From epssyis at gmail.com  Mon Mar 10 22:40:41 2008
From: epssyis at gmail.com (Edward Savage)
Date: Tue, 11 Mar 2008 13:40:41 +1000
Subject: Future Wine Weekly Newsletters
In-Reply-To: <47D5E77B.1010109@sprintpcs.com>
References: <b050a5e70803101604l40b45999xd4b2059d54a6414a@mail.gmail.com>
	<47D5E77B.1010109@sprintpcs.com>
Message-ID: <d6c5d7290803102040y4eb9d9b1mc979b2f6645f3555@mail.gmail.com>

I would like to see it kept at weekly.  To that end I'm happy to offer
my services as a co-editor.

Has any further thought happened over my suggestion of wikifying WWN
submissions so that the community can also submit storys on their
current projects.  If so I'm also happy to setup a list of clear rules
for it and the structure of the wiki page.

As always you can contact me any time via eps in the winehackers channel.

On Tue, Mar 11, 2008 at 11:59 AM, James McKenzie
<jjmckenzie51 at sprintpcs.com> wrote:
>
> Zachary Goldberg wrote:
>  > Wine,
>  >
>  > I normally would like to have WWNs ready by Sunday night to be posted
>  > on Monday but as you can tell i'm going to slip by a day or two again
>  > this week.
>  >
>  > A proposal was mentioned to me to make WWNs perhaps bi-weekly, either
>  > coordinating with the week of releases or the off week.  This would
>  > have a couple immediate pros and cons that I can see:
>  >
>  > pros
>  > *More articles and posts for me to sift through, pick out the more
>  > important and relevent articles.  Slightly higher overall W(B)WN
>  > quality.
>  > *It'd be much easier for me to be on time with them.
>  >
>  > cons
>  > *Fewer wwns
>  > *Perhaps slightly bigger wwns, i don't know what general consensus is
>  > on preffered newsletter length
>  >
>  >
>  > Thoughts?  Either way i'de like to have 343 ready and submitted
>  > sometime tomorrow evening.
>  >
>  > --Zach
>  >
>  >
>  >
>  Zach:
>
>  Bi-weekly is fine by me.  Would go with the release schedule.
>
>  James
>
>
>
>


From kai.blin at gmail.com  Tue Mar 11 02:37:48 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Tue, 11 Mar 2008 08:37:48 +0100
Subject: Wine booth/BOF and Linuxworld San Francisco, Aug 2008?
In-Reply-To: <a71bd89a0803101914v628d0bc9l65880a6458b97633@mail.gmail.com>
References: <a71bd89a0803101914v628d0bc9l65880a6458b97633@mail.gmail.com>
Message-ID: <200803110838.07439.kai.blin@gmail.com>

On Tuesday 11 March 2008 03:14:13 Dan Kegel wrote:
> Wine has come a long way, and will have just had its 1.0
> release (knock on wood).  So perhaps this is a good year
> to have a .org booth.  What do folks think?

We used to have a Wine booth at LinuxTag in Germany for many years. I know 
2007 didn't work out because neither Uwe Bonnes nor the itomic folks could 
make it. Still, those folks might be able to say something about how busy the 
Wine booth usually was.

Also, in my experience you need at least three people to man an expo booth.

I think a booth at Linuxworld would be nice publicity for Wine 1.0, but only 
if we can get our act together and have a sufficient number of people around 
to demo apps and answer questions.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080311/5c62a02b/attachment.pgp 

From julliard at winehq.org  Tue Mar 11 03:59:02 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 11 Mar 2008 09:59:02 +0100
Subject: DestroyWindow behavior differences between Win9x and Win2k/xp
In-Reply-To: <47D5E1AD.5090809@kievinfo.com> (Vitaliy Margolen's message of
	"Mon, 10 Mar 2008 19:34:37 -0600")
References: <47D586C9.7010905@nexicom.net>
	<3a768c550803101211x6a8b69afgb9c95dcc9e7edf39@mail.gmail.com>
	<874pbee6b5.fsf@wine.dyndns.org> <47D5E1AD.5090809@kievinfo.com>
Message-ID: <87y78pd4bt.fsf@wine.dyndns.org>

Vitaliy Margolen <wine-devel at kievinfo.com> writes:

> Alexandre Julliard wrote:
>> If the app crashes on XP then it's fairly reasonable for it to crash on
>> Wine too. The Win9x design (or lack thereof) is not something we want to
>> support in general.
>> 
> Then we might as well remove "emulation" of all win versions and keep it at 
> win2k. That's the whole point - if we have such a switch, we have to keep 
> Wine compatible to that win version. If we can't, then we shouldn't even try 
> to pretend. I'm not suggesting doing this for everything, but things like 
> this do matter.

We can be compatible up to a certain point, but there are some behaviors
of Win9x that we cannot possibly ever support. Memory management is one
example. That doesn't mean we should get rid of the version switch,
there are a ton of apps that are quite happy with our level of
compatibility.

-- 
Alexandre Julliard
julliard at winehq.org


From scott at open-vote.org  Tue Mar 11 04:00:28 2008
From: scott at open-vote.org (Scott Ritchie)
Date: Tue, 11 Mar 2008 02:00:28 -0700
Subject: Wine booth/BOF and Linuxworld San Francisco, Aug 2008?
In-Reply-To: <200803110838.07439.kai.blin@gmail.com>
References: <a71bd89a0803101914v628d0bc9l65880a6458b97633@mail.gmail.com>
	<200803110838.07439.kai.blin@gmail.com>
Message-ID: <47D64A2C.7070807@open-vote.org>

Kai Blin wrote:
> On Tuesday 11 March 2008 03:14:13 Dan Kegel wrote:
>> Wine has come a long way, and will have just had its 1.0
>> release (knock on wood).  So perhaps this is a good year
>> to have a .org booth.  What do folks think?
> 
> We used to have a Wine booth at LinuxTag in Germany for many years. I know 
> 2007 didn't work out because neither Uwe Bonnes nor the itomic folks could 
> make it. Still, those folks might be able to say something about how busy the 
> Wine booth usually was.
> 
> Also, in my experience you need at least three people to man an expo booth.
> 
> I think a booth at Linuxworld would be nice publicity for Wine 1.0, but only 
> if we can get our act together and have a sufficient number of people around 
> to demo apps and answer questions.
> 

Living in the bay area, I volunteer myself to go.

Thanks,
Scott Ritchie


From julliard at winehq.org  Tue Mar 11 05:39:19 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 11 Mar 2008 11:39:19 +0100
Subject: [PATCH 3/5] shell32: use xdg well known directories for shell
	redirection (try 4)
In-Reply-To: <558b2f5c0803101959mb14b674r14d39f83c429a132@mail.gmail.com> (Lei
	Zhang's message of "Mon, 10 Mar 2008 19:59:14 -0700")
References: <558b2f5c0803101959mb14b674r14d39f83c429a132@mail.gmail.com>
Message-ID: <87pru1czoo.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> This patch attempts to set the shell folders using xdg well known
> directories via shell redirection. If any part of this fails, the rest
> of SHELL_RegisterShellFolders() should fill in the gaps.

This will still break if the user changes the drives config. I don't
understand why you don't want to simply use the symlinks; why should the
dirs be handled differently when they are obtained from the xdg config
instead of from the current hard-coded values?

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Mar 11 06:10:29 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 11 Mar 2008 12:10:29 +0100
Subject: msi: Test the published installer properties
In-Reply-To: <22821af30803102100l13285e7au7de9c2872a4c8c@mail.gmail.com>
	(James Hawkins's message of "Mon, 10 Mar 2008 23:00:08 -0500")
References: <22821af30803102100l13285e7au7de9c2872a4c8c@mail.gmail.com>
Message-ID: <87lk4pcy8q.fsf@wine.dyndns.org>

"James Hawkins" <jhawkins at codeweavers.com> writes:

> rediffed with git.
>
> Changelog:
> * Test the published installer properties.

This is still failing for me:

../../../tools/runtest -q -P wine -M msi.dll -T ../../.. -p msi_test.exe.so install.c && touch install.ok
install.c:4484: Test failed: Expected ERROR_UNKNOWN_PRODUCT, got 0
make[2]: *** [install.ok] Error 1

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Mar 11 06:34:00 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 11 Mar 2008 12:34:00 +0100
Subject: user32: Fix enumeration and add tests for EnumWindowStations and
	EnumDesktops, try X
In-Reply-To: <b130c85e0803101324y20b5c91bv45d156dd286d11af@mail.gmail.com>
	(Maarten Lankhorst's message of "Mon, 10 Mar 2008 13:24:27 -0700")
References: <b130c85e0803101324y20b5c91bv45d156dd286d11af@mail.gmail.com>
Message-ID: <87abl5cx5j.fsf@wine.dyndns.org>

"Maarten Lankhorst" <m.b.lankhorst at gmail.com> writes:

> +static BOOL CALLBACK windowstationcallbackA(LPSTR winsta, LPARAM lp)
> +{
> +    trace("windowstationcallbackA called with argument %s\n", winsta);
> +    return lp;
> +}
> +
> +static BOOL CALLBACK openwindowstationcallbackA(LPSTR winsta, LPARAM lp)
> +{

Please use underscores to separate words in function names,
theselongstringswithoutspacesarepainfultoread.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Mar 11 06:35:32 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 11 Mar 2008 12:35:32 +0100
Subject: [1/5] qmgr: Add infrastructure for background file transferring.
	[take 2]
In-Reply-To: <20080310233123.GA10236@linux.ucla.edu> (Dan Hipschman's message
	of "Mon, 10 Mar 2008 16:31:23 -0700")
References: <20080310233123.GA10236@linux.ucla.edu>
Message-ID: <8763vtcx2z.fsf@wine.dyndns.org>

Dan Hipschman <dsh at linux.ucla.edu> writes:

> +DWORD WINAPI fileTransfer(void *param)
> +{
> +    BackgroundCopyManagerImpl *qmgr = &globalMgr;
> +    BackgroundCopyJobImpl *job = NULL;
> +
> +    for (;;)
> +    {
> +        /* Note that other threads may add files to the job list, but only
> +           this thread ever deletes them so we don't need to worry about jobs
> +           magically disappearing from the list.  */
> +        EnterCriticalSection(&qmgr->cs);
> +        {
> +            struct list *next = (job
> +                                 ? list_next(&qmgr->jobs, &job->entryFromQmgr)
> +                                 : list_head(&qmgr->jobs));
> +            job = (next
> +                   ? LIST_ENTRY(next, BackgroundCopyJobImpl, entryFromQmgr)
> +                   : NULL);
> +        }
> +        LeaveCriticalSection(&qmgr->cs);
> +
> +        if (job)
> +        {
> +            /* It's fine to access the job state outside of the job's critical
> +               section in these cases because this thread is the only one that
> +               can change the state once it gets in one of these.  */
> +            if (job->state == BG_JOB_STATE_ACKNOWLEDGED || job->state == BG_JOB_STATE_CANCELLED)
> +            {
> +                EnterCriticalSection(&qmgr->cs);
> +                list_remove(&job->entryFromQmgr);
> +                job->lpVtbl->Release((IBackgroundCopyJob *) job);
> +                LeaveCriticalSection(&qmgr->cs);
> +                job = NULL;
> +            }
> +            else
> +            {
> +                /* Process job */
> +            }
> +        }
> +        else
> +            Sleep(1000);

You should use some sort of synchronization mechanism, not just poll the
list every second.

-- 
Alexandre Julliard
julliard at winehq.org


From jacek at codeweavers.com  Tue Mar 11 06:49:24 2008
From: jacek at codeweavers.com (Jacek Caban)
Date: Tue, 11 Mar 2008 12:49:24 +0100
Subject: Revert "mshtml: Use QueryService to get IHttpNegotiate in
	get_post_data_stream."
In-Reply-To: <47D5E104.9070000@kievinfo.com>
References: <47D212DE.5080508@kievinfo.com> <47D59182.3070002@codeweavers.com>
	<47D5E104.9070000@kievinfo.com>
Message-ID: <47D671C4.7010006@codeweavers.com>

Vitaliy Margolen wrote:
>
> It seems the problem caused by an empty content-length for the POST 
> request. That might work for you because you are not behind the proxy. 
> Proxies do not like that and return error.

Does attached hack help?

> The question is then why does it work without your patch?

My patch fixed regression due to changes in urlmon that caused post data 
to be never sent.


Jacek

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: fix_header.diff
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080311/4529909a/attachment-0001.txt 

From julliard at winehq.org  Tue Mar 11 06:28:01 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 11 Mar 2008 12:28:01 +0100
Subject: patch to fix bug 8246
In-Reply-To: <329440.1539.qm@web23102.mail.ird.yahoo.com> (Hin-Tak Leung's
	message of "Mon, 10 Mar 2008 22:58:02 +0000 (GMT)")
References: <329440.1539.qm@web23102.mail.ird.yahoo.com>
Message-ID: <87ejahcxfi.fsf@wine.dyndns.org>

Hin-Tak Leung <htl10 at users.sourceforge.net> writes:

> This is the fix to bug 8246 to get HtmlHelpW to work correctly. 
> It was first worked on by Andrey Turkin and updated later by me.  

Please add a proper log entry describing the change.

> -static inline LPWSTR strdupAtoW(LPCSTR str)
> +static inline LPWSTR strdupnAtoW(LPCSTR str, LONG l)
>  {
>      LPWSTR ret;
>      DWORD len;
> +    BOOL   zero_pad;
>  
>      if(!str)
>          return NULL;
>  
> -    len = MultiByteToWideChar(CP_ACP, 0, str, -1, NULL, 0);
> +    if (l>0)
> +    {
> +        LONG i;
> +        zero_pad = TRUE;
> +        for (i=0;i<l;i++)
> +        {
> +            if (!str[i])
> +            {
> +                zero_pad = FALSE;
> +                l = i+1;
> +                break;
> +            }
> +        }
> +    } else {
> +        zero_pad = FALSE;
> +    }
> +
> +    len = MultiByteToWideChar(CP_ACP, 0, str, l, NULL, 0);
> +    if (zero_pad)
> +        len++;

This is ugly and unnecessary, MultiByteToWideChar handles embedded nulls
just fine.

-- 
Alexandre Julliard
julliard at winehq.org


From stefan at codeweavers.com  Tue Mar 11 07:00:33 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Tue, 11 Mar 2008 13:00:33 +0100
Subject: [PATCH 1/4] avifil32: Fix copy/paste error.
In-Reply-To: <47D61FA1.20805@codeweavers.com>
References: <47D61FA1.20805@codeweavers.com>
Message-ID: <200803111300.36909.stefan@codeweavers.com>

I think the patches suffer from mail client line wrapping, I cannot apply 
them:

patch -p1 < /dev/shm/kenpatch/\[PATCH\ 1_4\]\ avifil32\:\ Fix\ copy_paste\ 
error.
patching file dlls/avifil32/acmstream.c
patch: **** malformed patch at line 67: LONG start,

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080311/ba7c44a9/attachment.pgp 

From chad.harris2003 at gmail.com  Tue Mar 11 00:35:35 2008
From: chad.harris2003 at gmail.com (Chad Harris)
Date: Mon, 10 Mar 2008 22:35:35 -0700
Subject: compile fail on Linux Mint
Message-ID: <741a36fb0803102235t1da657acn9c3e3eceb56000a0@mail.gmail.com>

Hi guys.


Just tried to compile wine.. ( Yes, I know theres a package )  but sometimes
I'm sadistic enough to want to compile somethin.. and it just keeps
failing..  perhaps you can shed some light on what's goin' wrong?

Thanks

Chad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080310/8245e719/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: config.log
Type: text/x-log
Size: 6745 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080310/8245e719/attachment.bin 

From andrey.turkin at gmail.com  Tue Mar 11 07:32:01 2008
From: andrey.turkin at gmail.com (Andrey Turkin)
Date: Tue, 11 Mar 2008 15:32:01 +0300
Subject: patch to fix bug 8246
In-Reply-To: <87ejahcxfi.fsf@wine.dyndns.org>
References: <329440.1539.qm@web23102.mail.ird.yahoo.com>
	<87ejahcxfi.fsf@wine.dyndns.org>
Message-ID: <f004deef0803110532s4de89b8bn3bea53b253a22d22@mail.gmail.com>

This is not about embedded nulls, this is about possibly not null terminated
strings. If there is zero somewhere in the buffer then we should only
convert string up to that zero; if there isn't any nulls, then we have to
convert full string and null-terminate string. This can be coded prettier,
though:

if (l>0)
{
     void *eos = memchr(str, 0, l);
     if (eos)
         l = (LONG)(eos-str);
}

and always zero-pad afterwards

2008/3/11, Alexandre Julliard <julliard at winehq.org>:
>
> Hin-Tak Leung <htl10 at users.sourceforge.net> writes:
>
> > This is the fix to bug 8246 to get HtmlHelpW to work correctly.
> > It was first worked on by Andrey Turkin and updated later by me.
>
>
> Please add a proper log entry describing the change.
>
> > -static inline LPWSTR strdupAtoW(LPCSTR str)
> > +static inline LPWSTR strdupnAtoW(LPCSTR str, LONG l)
> >  {
> >      LPWSTR ret;
> >      DWORD len;
> > +    BOOL   zero_pad;
> >
> >      if(!str)
> >          return NULL;
> >
> > -    len = MultiByteToWideChar(CP_ACP, 0, str, -1, NULL, 0);
> > +    if (l>0)
> > +    {
> > +        LONG i;
> > +        zero_pad = TRUE;
> > +        for (i=0;i<l;i++)
> > +        {
> > +            if (!str[i])
> > +            {
> > +                zero_pad = FALSE;
> > +                l = i+1;
> > +                break;
> > +            }
> > +        }
> > +    } else {
> > +        zero_pad = FALSE;
> > +    }
> > +
> > +    len = MultiByteToWideChar(CP_ACP, 0, str, l, NULL, 0);
> > +    if (zero_pad)
> > +        len++;
>
> This is ugly and unnecessary, MultiByteToWideChar handles embedded nulls
> just fine.
>
>
> --
> Alexandre Julliard
> julliard at winehq.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080311/ffa4a331/attachment.htm 

From rob at codeweavers.com  Tue Mar 11 07:36:33 2008
From: rob at codeweavers.com (Robert Shearman)
Date: Tue, 11 Mar 2008 12:36:33 +0000
Subject: compile fail on Linux Mint
In-Reply-To: <741a36fb0803102235t1da657acn9c3e3eceb56000a0@mail.gmail.com>
References: <741a36fb0803102235t1da657acn9c3e3eceb56000a0@mail.gmail.com>
Message-ID: <47D67CD1.5050201@codeweavers.com>

Chad Harris wrote:
> Just tried to compile wine.. ( Yes, I know theres a package )  but 
> sometimes I'm sadistic enough to want to compile somethin.. and it 
> just keeps failing..  perhaps you can shed some light on what's goin' 
> wrong?

You need to install glibc and associated development libraries.

-- 
Rob Shearman



From meissner at suse.de  Tue Mar 11 08:43:36 2008
From: meissner at suse.de (Marcus Meissner)
Date: Tue, 11 Mar 2008 14:43:36 +0100
Subject: compile fail on Linux Mint
In-Reply-To: <741a36fb0803102235t1da657acn9c3e3eceb56000a0@mail.gmail.com>
References: <741a36fb0803102235t1da657acn9c3e3eceb56000a0@mail.gmail.com>
Message-ID: <20080311134335.GA1493@suse.de>

On Mon, Mar 10, 2008 at 10:35:35PM -0700, Chad Harris wrote:
> Hi guys.
> 
> 
> Just tried to compile wine.. ( Yes, I know theres a package )  but sometimes
> I'm sadistic enough to want to compile somethin.. and it just keeps
> failing..  perhaps you can shed some light on what's goin' wrong?
> 
> configure:2595: $? = 1
> configure:2618: checking for C compiler default output file name
> configure:2645: gcc    conftest.c  >&5
> /usr/bin/ld: crt1.o: No such file: No such file or directory
> collect2: ld returned 1 exit status

You are missing basic development libraries (glibc development files and headers).
There are like 20 - 30 more you will need.

I strongly suggest just to use the prepackaged binaries.

Ciao, Marcus


From ivan at etersoft.ru  Tue Mar 11 08:44:37 2008
From: ivan at etersoft.ru (Ivan Sinitsin)
Date: Tue, 11 Mar 2008 16:44:37 +0300
Subject: Question about function "HTMLDocument_write"
Message-ID: <200803111644.39716.ivan@etersoft.ru>

On Monday the patch realizing this function has been accepted. It works 
perfectly, but hyperlinks do not work.
If I makes this function that way:

static HRESULT WINAPI HTMLDocument_write(IHTMLDocument2 *iface, SAFEARRAY 
*psarray)
{
    HRESULT hres;
    VARIANT *pvar;
    IHTMLElement *pbody;
    BSTR vtext;
    int i;

    vtext = SysAllocString(L"");

    HTMLDocument_get_body(iface,&pbody);

    hres = IHTMLElement_get_innerHTML(pbody, &vtext);
    if (FAILED(hres)) {
        vtext = SysAllocString(L"");
    }

    hres=SafeArrayAccessData(psarray, (void **)&pvar);
    if (FAILED(hres)) return hres;
    for (i=0; i < psarray->rgsabound[0].cElements; i++) {
        hres = VarBstrCat(vtext, V_BSTR(&(pvar[i])), &vtext);
        if (FAILED(hres)) {
           break;
        }
    }

    IHTMLElement_put_innerHTML(pbody,vtext);
    SysFreeString(vtext);
    hres = SafeArrayUnaccessData(psarray);

    return S_OK;
}

hyperlinks works good.

Why so occurs?


From wine-devel at kievinfo.com  Tue Mar 11 08:31:03 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Tue, 11 Mar 2008 07:31:03 -0600
Subject: Revert "mshtml: Use QueryService to get IHttpNegotiate in
	get_post_data_stream."
In-Reply-To: <47D671C4.7010006@codeweavers.com>
References: <47D212DE.5080508@kievinfo.com> <47D59182.3070002@codeweavers.com>
	<47D5E104.9070000@kievinfo.com> <47D671C4.7010006@codeweavers.com>
Message-ID: <47D68997.3040404@kievinfo.com>

Jacek Caban wrote:
> Vitaliy Margolen wrote:
>>
>> It seems the problem caused by an empty content-length for the POST 
>> request. That might work for you because you are not behind the proxy. 
>> Proxies do not like that and return error.
> 
> Does attached hack help?

Yes it does fix the problem. Thank you. So then something inserts extra 
empty line(s) between header and the body? No wonder proxy doesn't like this 
- it is an equivalent of an empty reply.

Vitaliy.



From ben at atomnet.co.uk  Tue Mar 11 11:07:41 2008
From: ben at atomnet.co.uk (Ben Hodgetts (Enverex))
Date: Tue, 11 Mar 2008 16:07:41 +0000
Subject: compile fail on Linux Mint
In-Reply-To: <741a36fb0803102235t1da657acn9c3e3eceb56000a0@mail.gmail.com>
References: <741a36fb0803102235t1da657acn9c3e3eceb56000a0@mail.gmail.com>
Message-ID: <47D6AE4D.9000205@atomnet.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Chad Harris wrote:
> Hi guys.

Please use the user-list in future or use the pre-compiled packages
until you're experienced with compiling programs, this is the Wine
development list.

Ben H.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)

iD8DBQFH1q5NuqCUopk11kIRAmWKAJ0UdQ1s+BFS4yUlEeMlOK1ZG4XBoQCdF93f
xm50wCaqQs9UoJzrd3vZyr4=
=VhRI
-----END PGP SIGNATURE-----


From truiken at gmail.com  Tue Mar 11 12:59:17 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 11 Mar 2008 12:59:17 -0500
Subject: msi: Test the published installer properties
In-Reply-To: <87lk4pcy8q.fsf@wine.dyndns.org>
References: <22821af30803102100l13285e7au7de9c2872a4c8c@mail.gmail.com>
	<87lk4pcy8q.fsf@wine.dyndns.org>
Message-ID: <22821af30803111059s71207447ja02204f2ba66e47b@mail.gmail.com>

On Tue, Mar 11, 2008 at 6:10 AM, Alexandre Julliard <julliard at winehq.org> wrote:
> "James Hawkins" <jhawkins at codeweavers.com> writes:
>
>  > rediffed with git.
>  >
>  > Changelog:
>  > * Test the published installer properties.
>
>  This is still failing for me:
>
>  ../../../tools/runtest -q -P wine -M msi.dll -T ../../.. -p msi_test.exe.so install.c && touch install.ok
>  install.c:4484: Test failed: Expected ERROR_UNKNOWN_PRODUCT, got 0
>  make[2]: *** [install.ok] Error 1
>

Just to narrow the possibilities, have you cleared your wineprefix
immediately before applying this patch and running the tests?

-- 
James Hawkins


From tehblunderbuss at gmail.com  Tue Mar 11 13:02:05 2008
From: tehblunderbuss at gmail.com (TheBlunderbuss)
Date: Tue, 11 Mar 2008 13:02:05 -0500
Subject: Thunderbird -- Colored Diffs
Message-ID: <47D6C91D.4070804@gmail.com>

This may have been out there for a while, but I'd thought I'd mention it 
anyway.
Colored Diffs is an extension for you Thunderbird users out there that 
makes it easier to read those diffs, even when they're part of the email 
message itself.
I was happily surprised at the functionality :)

https://addons.mozilla.org/en-US/thunderbird/addon/4268


From skorka at gmx.net  Tue Mar 11 13:21:32 2008
From: skorka at gmx.net (Daniel)
Date: Tue, 11 Mar 2008 19:21:32 +0100
Subject: Something that might be useful for the D3D guys
Message-ID: <20080311182132.GA4572@iapetus.hadiko.de>

Hello there,

while stumbling through the net today, I came upon this [1] little tool.
It will, among other things, allow you to run apps that are overly picky
about the level of hardware support your graphic card offers. I found
that some things (like disabling textures, forcing wireframe mode) work
in wine 0.9.56 as well, whereas things like lying about the shaders
seems to fail. Perhaps it can be of some use to those who have to deal
with D3D.

regards,
Daniel


[1] http://www.tommti-systems.com/main-Dateien/files.html (3D-Analyze,
click on the image)
-- 
'God is omnipotent, omniscient, and omnibenevolent [...]
If you have a mind capable of believing all three of these attributes
simultaneously, I have a wonderful bargain for you. No checks, please.
Cash and in small bills.' -- Robert Heinlein, "Notebooks of Lazarus Long"


From xerox_xerox2000 at yahoo.co.uk  Tue Mar 11 13:37:40 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis. Lenders)
Date: Tue, 11 Mar 2008 18:37:40 +0000 (GMT)
Subject: improve winetricks dotnet 1.1
Message-ID: <332226.9387.qm@web23204.mail.ird.yahoo.com>

Hi, i wonder if it would be possible to improve winetricks dotnet 1.1, so that it's actually able to run
.net-1.1 applications. Currently it only installs the framework, but due to bugs the apps don't run. Atm  moment i use pretty worthless script below to get them running, but i'm sure one of the winetricks hackers could turn this into a nice script

Note, the dlls gdiplus and mscoree should be set to native only, not (native, builtin), so override_dll should look tiny bit different then in winetricks.








      __________________________________________________________
Sent from Yahoo! Mail.
The World's Favourite Email http://uk.docs.yahoo.com/nowyoucan.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080311/b3d96c7b/attachment.htm 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: worthless_script.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080311/b3d96c7b/attachment.txt 

From julliard at winehq.org  Tue Mar 11 13:46:11 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 11 Mar 2008 19:46:11 +0100
Subject: [PATCH 3/5] shell32: use xdg well known directories for shell
	redirection (try 4)
In-Reply-To: <558b2f5c0803111138j851c897t75723d09dccccfc0@mail.gmail.com> (Lei
	Zhang's message of "Tue, 11 Mar 2008 11:38:00 -0700")
References: <558b2f5c0803101959mb14b674r14d39f83c429a132@mail.gmail.com>
	<87pru1czoo.fsf@wine.dyndns.org>
	<558b2f5c0803111138j851c897t75723d09dccccfc0@mail.gmail.com>
Message-ID: <87wso9ayks.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> We ran into a problem with Picasa and directory scanning. It looks
> like an issue with FindFirstChange/FindNextChange and overlapping
> directories, so I'm trying to use shell redirection to avoid the
> problem. Perhaps we should fix the problem with
> FindFirstChange/FindNextChange rather than avoid it.

We should at least understand what the problem is. And if it turns out
that we have to use shell redirection, then we want to do that in all
cases, it shouldn't be specific to the xdg case.

> I'll resubmit the patches without the shell redirection code.

Thanks.

-- 
Alexandre Julliard
julliard at winehq.org


From thestig at google.com  Tue Mar 11 13:38:00 2008
From: thestig at google.com (Lei Zhang)
Date: Tue, 11 Mar 2008 11:38:00 -0700
Subject: [PATCH 3/5] shell32: use xdg well known directories for shell
	redirection (try 4)
In-Reply-To: <87pru1czoo.fsf@wine.dyndns.org>
References: <558b2f5c0803101959mb14b674r14d39f83c429a132@mail.gmail.com>
	<87pru1czoo.fsf@wine.dyndns.org>
Message-ID: <558b2f5c0803111138j851c897t75723d09dccccfc0@mail.gmail.com>

On Tue, Mar 11, 2008 at 3:39 AM, Alexandre Julliard <julliard at winehq.org> wrote:
> "Lei Zhang" <thestig at google.com> writes:
>
>  > This patch attempts to set the shell folders using xdg well known
>  > directories via shell redirection. If any part of this fails, the rest
>  > of SHELL_RegisterShellFolders() should fill in the gaps.
>
>  This will still break if the user changes the drives config. I don't
>  understand why you don't want to simply use the symlinks; why should the
>  dirs be handled differently when they are obtained from the xdg config
>  instead of from the current hard-coded values?
>
>  --
>  Alexandre Julliard
>  julliard at winehq.org
>

We ran into a problem with Picasa and directory scanning. It looks
like an issue with FindFirstChange/FindNextChange and overlapping
directories, so I'm trying to use shell redirection to avoid the
problem. Perhaps we should fix the problem with
FindFirstChange/FindNextChange rather than avoid it.

I'll resubmit the patches without the shell redirection code.


From htl10 at users.sourceforge.net  Tue Mar 11 14:10:52 2008
From: htl10 at users.sourceforge.net (Hin-Tak Leung)
Date: Tue, 11 Mar 2008 19:10:52 +0000 (GMT)
Subject: patch to fix bug 8246
In-Reply-To: <f004deef0803110532s4de89b8bn3bea53b253a22d22@mail.gmail.com>
Message-ID: <159054.46539.qm@web23112.mail.ird.yahoo.com>

I did wonder what the padding was about (it didn't do any harm...) - 
I'll be happy to rework it to make it acceptable.

--- Andrey Turkin <andrey.turkin at gmail.com> wrote:

> This is not about embedded nulls, this is about possibly not null terminated
> strings. If there is zero somewhere in the buffer then we should only
> convert string up to that zero; if there isn't any nulls, then we have to
> convert full string and null-terminate string. This can be coded prettier,
> though:
> 
> if (l>0)
> {
>      void *eos = memchr(str, 0, l);
>      if (eos)
>          l = (LONG)(eos-str);
> }
> 
> and always zero-pad afterwards
> 
> 2008/3/11, Alexandre Julliard <julliard at winehq.org>:
> >
> > Hin-Tak Leung <htl10 at users.sourceforge.net> writes:
> >
> > > This is the fix to bug 8246 to get HtmlHelpW to work correctly.
> > > It was first worked on by Andrey Turkin and updated later by me.
> >
> >
> > Please add a proper log entry describing the change.
> >
> > > -static inline LPWSTR strdupAtoW(LPCSTR str)
> > > +static inline LPWSTR strdupnAtoW(LPCSTR str, LONG l)
> > >  {
> > >      LPWSTR ret;
> > >      DWORD len;
> > > +    BOOL   zero_pad;
> > >
> > >      if(!str)
> > >          return NULL;
> > >
> > > -    len = MultiByteToWideChar(CP_ACP, 0, str, -1, NULL, 0);
> > > +    if (l>0)
> > > +    {
> > > +        LONG i;
> > > +        zero_pad = TRUE;
> > > +        for (i=0;i<l;i++)
> > > +        {
> > > +            if (!str[i])
> > > +            {
> > > +                zero_pad = FALSE;
> > > +                l = i+1;
> > > +                break;
> > > +            }
> > > +        }
> > > +    } else {
> > > +        zero_pad = FALSE;
> > > +    }
> > > +
> > > +    len = MultiByteToWideChar(CP_ACP, 0, str, l, NULL, 0);
> > > +    if (zero_pad)
> > > +        len++;
> >
> > This is ugly and unnecessary, MultiByteToWideChar handles embedded nulls
> > just fine.
> >
> >
> > --
> > Alexandre Julliard
> > julliard at winehq.org
> >
> >
> >
> 



      ___________________________________________________________ 
Rise to the challenge for Sport Relief with Yahoo! For Good  

http://uk.promotions.yahoo.com/forgood/


From stefan at codeweavers.com  Tue Mar 11 14:32:59 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Tue, 11 Mar 2008 20:32:59 +0100
Subject: Something that might be useful for the D3D guys
In-Reply-To: <20080311182132.GA4572@iapetus.hadiko.de>
References: <20080311182132.GA4572@iapetus.hadiko.de>
Message-ID: <200803112033.03817.stefan@codeweavers.com>

Am Dienstag, 11. M?rz 2008 19:21:32 schrieb Daniel:
> Hello there,
>
> while stumbling through the net today, I came upon this [1] little tool.
> It will, among other things, allow you to run apps that are overly picky
> about the level of hardware support your graphic card offers. I found
> that some things (like disabling textures, forcing wireframe mode) work
> in wine 0.9.56 as well, whereas things like lying about the shaders
> seems to fail. Perhaps it can be of some use to those who have to deal
> with D3D.
I've come across that tool before, and it could be useful for verifying some 
capability flag problems on Windows. As far as Wine is concerned, we can 
archive all the tool does by modifying the WineD3D code.

At some point it would be cool to have a D3D9 thunk that thunks to D3D9, to 
have a sort of function hooking DLL, where we can trace all D3D9 calls on 
Windows, and modify their behavior.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080311/658429ed/attachment.pgp 

From dank at kegel.com  Tue Mar 11 15:15:15 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 11 Mar 2008 13:15:15 -0700
Subject: improve winetricks dotnet 1.1
Message-ID: <a71bd89a0803111315m6812e01fqb30a2663b30f05d3@mail.gmail.com>

Louis wrote:
> Hi, i wonder if it would be possible to improve
> winetricks dotnet 1.1, so that it's actually able to run
>.net-1.1 applications. Currently it only installs the framework,
> but due to bugs the apps don't run.   Atm i use pretty worthless
> script below to get them running..

I'm kind of hoping James implements the missing bits in msi
soon.  James, think that will happen soon enough that
there's no need to update winetricks?

> Note, the dlls gdiplus and mscoree should be set to native only, not (native, builtin), so override_dll should look tiny bit different then in winetricks.

Ah, good point.
- Dan


From wine.dev at web.de  Tue Mar 11 16:16:11 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Tue, 11 Mar 2008 22:16:11 +0100
Subject: compile fail on Linux Mint
In-Reply-To: <741a36fb0803102235t1da657acn9c3e3eceb56000a0@mail.gmail.com>
References: <741a36fb0803102235t1da657acn9c3e3eceb56000a0@mail.gmail.com>
Message-ID: <1205270171.7330.8.camel@p4>

On Mo, 2008-03-10 at 22:35 -0700, Chad Harris wrote:
> /usr/bin/ld: crt1.o: No such file: No such file or directory

You are missing the development-packages.

The first is "libc6-dev"

http://wiki.winehq.org/Recommended_Packages


-- 
 
By by ... Detlef




From jacek at codeweavers.com  Tue Mar 11 16:37:11 2008
From: jacek at codeweavers.com (Jacek Caban)
Date: Tue, 11 Mar 2008 22:37:11 +0100
Subject: Revert "mshtml: Use QueryService to get IHttpNegotiate
	in	get_post_data_stream."
In-Reply-To: <47D68997.3040404@kievinfo.com>
References: <47D212DE.5080508@kievinfo.com>
	<47D59182.3070002@codeweavers.com>	<47D5E104.9070000@kievinfo.com>
	<47D671C4.7010006@codeweavers.com> <47D68997.3040404@kievinfo.com>
Message-ID: <47D6FB87.8000809@codeweavers.com>

Vitaliy Margolen wrote:
> Yes it does fix the problem. Thank you. So then something inserts extra 
> empty line(s) between header and the body? No wonder proxy doesn't like this 
> - it is an equivalent of an empty reply.
>   
Gecko reported in header content with length 0 (because of this empty 
line) and it caused problem for proxy. I've sent a patch to wine-patches.

Jacek


From leslie_alistair at hotmail.com  Tue Mar 11 18:13:42 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Wed, 12 Mar 2008 10:13:42 +1100
Subject: Bugzilla Privs
Message-ID: <fr73mq$enr$1@ger.gmane.org>

Hi,
  Can I please get Privs on Bugzilla to help with the msxml work I am doing?

Best Regards
 Alistair Leslie-Hughes 




From truiken at gmail.com  Tue Mar 11 18:16:48 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 11 Mar 2008 18:16:48 -0500
Subject: improve winetricks dotnet 1.1
In-Reply-To: <a71bd89a0803111315m6812e01fqb30a2663b30f05d3@mail.gmail.com>
References: <a71bd89a0803111315m6812e01fqb30a2663b30f05d3@mail.gmail.com>
Message-ID: <22821af30803111616s3a37347l1d63ec8b74cb0470@mail.gmail.com>

On Tue, Mar 11, 2008 at 3:15 PM, Dan Kegel <dank at kegel.com> wrote:
> Louis wrote:
>  > Hi, i wonder if it would be possible to improve
>  > winetricks dotnet 1.1, so that it's actually able to run
>  >.net-1.1 applications. Currently it only installs the framework,
>  > but due to bugs the apps don't run.   Atm i use pretty worthless
>  > script below to get them running..
>
>  I'm kind of hoping James implements the missing bits in msi
>  soon.  James, think that will happen soon enough that
>  there's no need to update winetricks?
>

Just sent in the service patch.  If you're referring to anything else,
I'm not sure what it is.  MsiPublishAssemblies won't see the light of
day for a long, long time, because it requires fusion.dll being
implemented.

-- 
James Hawkins


From dank at kegel.com  Tue Mar 11 18:18:06 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 11 Mar 2008 16:18:06 -0700
Subject: improve winetricks dotnet 1.1
In-Reply-To: <22821af30803111616s3a37347l1d63ec8b74cb0470@mail.gmail.com>
References: <a71bd89a0803111315m6812e01fqb30a2663b30f05d3@mail.gmail.com>
	<22821af30803111616s3a37347l1d63ec8b74cb0470@mail.gmail.com>
Message-ID: <a71bd89a0803111618x105a952cv6345582020bf809a@mail.gmail.com>

On Tue, Mar 11, 2008 at 4:16 PM, James Hawkins <truiken at gmail.com> wrote:
>  MsiPublishAssemblies won't see the light of
>  day for a long, long time, because it requires fusion.dll being
>  implemented.

OK, I guess I'll roll the kludge into crosstool.

Thanks,
Dan


From truiken at gmail.com  Tue Mar 11 18:47:50 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 11 Mar 2008 18:47:50 -0500
Subject: improve winetricks dotnet 1.1
In-Reply-To: <22821af30803111616s3a37347l1d63ec8b74cb0470@mail.gmail.com>
References: <a71bd89a0803111315m6812e01fqb30a2663b30f05d3@mail.gmail.com>
	<22821af30803111616s3a37347l1d63ec8b74cb0470@mail.gmail.com>
Message-ID: <22821af30803111647q216e77e5vabbc5f2a301e7bc8@mail.gmail.com>

On Tue, Mar 11, 2008 at 6:16 PM, James Hawkins <truiken at gmail.com> wrote:
> On Tue, Mar 11, 2008 at 3:15 PM, Dan Kegel <dank at kegel.com> wrote:
>  > Louis wrote:
>  >  > Hi, i wonder if it would be possible to improve
>  >  > winetricks dotnet 1.1, so that it's actually able to run
>  >  >.net-1.1 applications. Currently it only installs the framework,
>  >  > but due to bugs the apps don't run.   Atm i use pretty worthless
>  >  > script below to get them running..
>  >
>  >  I'm kind of hoping James implements the missing bits in msi
>  >  soon.  James, think that will happen soon enough that
>  >  there's no need to update winetricks?
>  >
>
>  Just sent in the service patch.  If you're referring to anything else,
>  I'm not sure what it is.  MsiPublishAssemblies won't see the light of
>  day for a long, long time, because it requires fusion.dll being
>  implemented.
>

For the record, if I were a millionaire, this is what I would work on :)

http://msdn2.microsoft.com/en-us/library/ms404523(VS.85).aspx

-- 
James Hawkins


From dank at kegel.com  Tue Mar 11 20:14:26 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 11 Mar 2008 18:14:26 -0700
Subject: Can we have a server component in bugzilla?
Message-ID: <a71bd89a0803111814m6df67951tc42c4afbe2c8d3c@mail.gmail.com>

There have been several server-related bugs
lately, yet we have no server component.
Seems like we need one.


From truiken at gmail.com  Tue Mar 11 21:21:50 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 11 Mar 2008 21:21:50 -0500
Subject: Can we have a server component in bugzilla?
In-Reply-To: <a71bd89a0803111814m6df67951tc42c4afbe2c8d3c@mail.gmail.com>
References: <a71bd89a0803111814m6df67951tc42c4afbe2c8d3c@mail.gmail.com>
Message-ID: <22821af30803111921n4323505an66f300a3822bc3be@mail.gmail.com>

On Tue, Mar 11, 2008 at 8:14 PM, Dan Kegel <dank at kegel.com> wrote:
> There have been several server-related bugs
>  lately, yet we have no server component.
>  Seems like we need one.
>

server as in winehq.org or wineserver?

-- 
James Hawkins


From dank at kegel.com  Tue Mar 11 22:47:53 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 11 Mar 2008 20:47:53 -0700
Subject: Can we have a server component in bugzilla?
In-Reply-To: <22821af30803111921n4323505an66f300a3822bc3be@mail.gmail.com>
References: <a71bd89a0803111814m6df67951tc42c4afbe2c8d3c@mail.gmail.com>
	<22821af30803111921n4323505an66f300a3822bc3be@mail.gmail.com>
Message-ID: <a71bd89a0803112047r1314d72egd7790d6c0c623427@mail.gmail.com>

On Tue, Mar 11, 2008 at 7:21 PM, James Hawkins <truiken at gmail.com> wrote:
>  > There have been several server-related bugs
>  >  lately, yet we have no server component.
>  >  Seems like we need one.
>
>  server as in winehq.org or wineserver?

As in wineserver.  We already have a winehq.org category, kind of.


From ead1234 at hotmail.com  Tue Mar 11 23:40:26 2008
From: ead1234 at hotmail.com (EA Durbin)
Date: Tue, 11 Mar 2008 23:40:26 -0500
Subject: FW: bug 6311 1.0 - wineserver regression
In-Reply-To: <a71bd89a0803111813o560159der72755abf21b75e1e@mail.gmail.com>
References: <BAY128-W155CB32B5D03500E8A9F88AB080@phx.gbl>
	<a71bd89a0803111813o560159der72755abf21b75e1e@mail.gmail.com>
Message-ID: <BAY128-W15FC2BBD80CB3B7A171171AB080@phx.gbl>


Could someone familiar with wineserver take a look at this please?

I've narrowed down the cause of this regression in bugzilla within the commit itself, but I don't know the proper fix.

----------------------------------------
> Date: Tue, 11 Mar 2008 18:13:48 -0700
> From: dank at kegel.com
> To: ead1234 at hotmail.com
> Subject: Re: bug 6311 1.0
> 
> On Tue, Mar 11, 2008 at 6:10 PM, EA Durbin  wrote:
>>  Can we add bug 6311 to the 1.0 bugs?
>> 5948 was on the list but it is closed now.
>>There was a regression recently and it's broken again.
> 
> Make some noise on the list about those bugs.
> 
> Being on the 1.0 list isn't really that helpful.

_________________________________________________________________
Need to know the score, the latest news, or you need your Hotmail?-get your "fix".
http://www.msnmobilefix.com/Default.aspx

From ead1234 at hotmail.com  Wed Mar 12 01:22:54 2008
From: ead1234 at hotmail.com (EA Durbin)
Date: Wed, 12 Mar 2008 01:22:54 -0500
Subject: bug 6311 1.0 - wineserver regression
In-Reply-To: <BAY128-W15FC2BBD80CB3B7A171171AB080@phx.gbl>
References: <BAY128-W155CB32B5D03500E8A9F88AB080@phx.gbl>
	<a71bd89a0803111813o560159der72755abf21b75e1e@mail.gmail.com> 
	<BAY128-W15FC2BBD80CB3B7A171171AB080@phx.gbl>
Message-ID: <BAY128-W4697F208CD044F916A2711AB080@phx.gbl>


Disregard, I think I've found the problem and I'm sending a patch.
----------------------------------------
> From: ead1234 at hotmail.com
> To: wine-devel at winehq.org
> Subject: FW: bug 6311 1.0 - wineserver regression
> Date: Tue, 11 Mar 2008 23:40:26 -0500
> 
> 
> Could someone familiar with wineserver take a look at this please?
> 
> I've narrowed down the cause of this regression in bugzilla within the commit itself, but I don't know the proper fix.
> 
> ----------------------------------------
>> Date: Tue, 11 Mar 2008 18:13:48 -0700
>> From: dank at kegel.com
>> To: ead1234 at hotmail.com
>> Subject: Re: bug 6311 1.0
>> 
>> On Tue, Mar 11, 2008 at 6:10 PM, EA Durbin  wrote:
>>>  Can we add bug 6311 to the 1.0 bugs?
>>> 5948 was on the list but it is closed now.
>>>There was a regression recently and it's broken again.
>> 
>> Make some noise on the list about those bugs.
>> 
>> Being on the 1.0 list isn't really that helpful.
> 
> _________________________________________________________________
> Need to know the score, the latest news, or you need your Hotmail?-get your "fix".
> http://www.msnmobilefix.com/Default.aspx
> 

_________________________________________________________________
Helping your favorite cause is as easy as instant messaging.?You IM, we give.
http://im.live.com/Messenger/IM/Home/?source=text_hotmail_join

From truiken at gmail.com  Wed Mar 12 02:05:06 2008
From: truiken at gmail.com (James Hawkins)
Date: Wed, 12 Mar 2008 02:05:06 -0500
Subject: Can we have a server component in bugzilla?
In-Reply-To: <a71bd89a0803112047r1314d72egd7790d6c0c623427@mail.gmail.com>
References: <a71bd89a0803111814m6df67951tc42c4afbe2c8d3c@mail.gmail.com>
	<22821af30803111921n4323505an66f300a3822bc3be@mail.gmail.com>
	<a71bd89a0803112047r1314d72egd7790d6c0c623427@mail.gmail.com>
Message-ID: <22821af30803120005u5e13cafic41525a80a8b48c9@mail.gmail.com>

On Tue, Mar 11, 2008 at 10:47 PM, Dan Kegel <dank at kegel.com> wrote:
> On Tue, Mar 11, 2008 at 7:21 PM, James Hawkins <truiken at gmail.com> wrote:
>  >  > There have been several server-related bugs
>  >  >  lately, yet we have no server component.
>  >  >  Seems like we need one.
>  >
>  >  server as in winehq.org or wineserver?
>
>  As in wineserver.  We already have a winehq.org category, kind of.
>

There is a wineserver component.

-- 
James Hawkins


From ken at codeweavers.com  Wed Mar 12 02:08:39 2008
From: ken at codeweavers.com (Ken Thomases)
Date: Wed, 12 Mar 2008 02:08:39 -0500
Subject: [PATCH 1/4] avifil32: Fix copy/paste error.
In-Reply-To: <200803111300.36909.stefan@codeweavers.com>
References: <47D61FA1.20805@codeweavers.com>
	<200803111300.36909.stefan@codeweavers.com>
Message-ID: <ACC020FF-138B-4DCA-B9A8-6291C3B1E34E@codeweavers.com>

On Mar 11, 2008, at 7:00 AM, Stefan D?singer wrote:

> I think the patches suffer from mail client line wrapping

Huh.  I specifically switched to Thunderbird to send them because I  
thought it wouldn't do that.

Anyway, I've resent them using the --attach option for git-format- 
patch.  Thanks for bringing this to my attention.

Cheers,
Ken



From twickline at gmail.com  Wed Mar 12 02:55:21 2008
From: twickline at gmail.com (Tom Wickline)
Date: Wed, 12 Mar 2008 03:55:21 -0400
Subject: Free apps bundled with msvcp71?
In-Reply-To: <a71bd89a0803021832m1a3ffda2m5402cf57f2264572@mail.gmail.com>
References: <a71bd89a0803021832m1a3ffda2m5402cf57f2264572@mail.gmail.com>
Message-ID: <53e3a9930803120055k60847f60u277ea47e84b83ba@mail.gmail.com>

Hello Dan,

MSVCP71.dll is the MS Visual C++ 7.1 Runtime Library (which comes with
.NET 2003).

see: http://msdn2.microsoft.com/en-gb/vbasic/ms789141.aspx  for some info,

The Visual C++ Toolkit 2003 also bundles MSVCP71.dll and MSVCR71.dll
see: http://xona.com/2004/06/29.html

The Toolkit can be downloaded from xona at :
http://xona.com/programs/VCToolkitSetup(v1.01)(2004.07.06).zip (29.9
MB)

I know this isn't a direct MS download but it might help in further
investigation :D

Cheers,

Tom

On Sun, Mar 2, 2008 at 10:32 PM, Dan Kegel <dank at kegel.com> wrote:
> Adobe Contribute 4, released in Nov 2006 or so, had a nice online trial at
>  http://trials.adobe.com/Applications/Contribute/Adobe_Contribute_4_Win/Adobe_Contribute_4_Win.exe
>  and still online, I think, at
>  http://www.soft32.com/download/63-129953-1/Adobe_Contribute_4_Win.exe
>
>  Starting it fails with
>
>  err:module:import_dll Library MSVCP71.dll (which is needed by
>  L"C:\\Program Files\\Adobe\\Contribute 4\\CoreTypes.dll") not found
>
>  Wine has a nice implementation of msvcr71.dll, but not
>  the C++-oriented msvcp71.dll, nor is it likely to get one soon.
>
>  This brings back the question: what's a good place to
>  legally and freely download an application bundled with a full set
>  of msvcp71.dll et al?  Ideally something at Microsoft.com
>  and/or something small and suitable for use in winetricks.
>  Any ideas?
>  - Dan
>
>
>


From mstefani at redhat.com  Wed Mar 12 04:53:30 2008
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Wed, 12 Mar 2008 10:53:30 +0100
Subject: improve winetricks dotnet 1.1
In-Reply-To: <22821af30803111616s3a37347l1d63ec8b74cb0470@mail.gmail.com>
References: <a71bd89a0803111315m6812e01fqb30a2663b30f05d3@mail.gmail.com>
	<22821af30803111616s3a37347l1d63ec8b74cb0470@mail.gmail.com>
Message-ID: <47D7A81A.6040002@redhat.com>

James Hawkins wrote:
> On Tue, Mar 11, 2008 at 3:15 PM, Dan Kegel <dank at kegel.com> wrote:
>> Louis wrote:
>>  > Hi, i wonder if it would be possible to improve
>>  > winetricks dotnet 1.1, so that it's actually able to run
>>  >.net-1.1 applications. Currently it only installs the framework,
>>  > but due to bugs the apps don't run.   Atm i use pretty worthless
>>  > script below to get them running..
>>
>>  I'm kind of hoping James implements the missing bits in msi
>>  soon.  James, think that will happen soon enough that
>>  there's no need to update winetricks?
>>
> 
> Just sent in the service patch.  If you're referring to anything else,
> I'm not sure what it is.  MsiPublishAssemblies won't see the light of
> day for a long, long time, because it requires fusion.dll being
> implemented.
Implementing fusion.dll sounds like a GSoC project to me (no clue how
much work that is). At least getting the basic structure in place should
be doable.

bye
	michael
-- 
Michael Stefaniuc                           Tel.: +49-711-96437-199
Consulting Communications Engineer          Fax.: +49-711-96437-111
--------------------------------------------------------------------
Reg. Adresse: Red Hat GmbH, Hauptst?tter Strasse 58, 70178 Stuttgart
Handelsregister: Amtsgericht Stuttgart HRB 153243
Gesch?ftsf?hrer: Brendan Lane, Charlie Peters, Michael Cunningham,
                 Werner Knoblich


From rob at codeweavers.com  Wed Mar 12 04:57:36 2008
From: rob at codeweavers.com (Robert Shearman)
Date: Wed, 12 Mar 2008 09:57:36 +0000
Subject: Hans Leidekker : wininet:	Make sure not to overwrite any caller
	supplied authorization header.
In-Reply-To: <E1JM2XT-0000cU-JC@wine.codeweavers.com>
References: <E1JM2XT-0000cU-JC@wine.codeweavers.com>
Message-ID: <47D7A910.9020107@codeweavers.com>

Alexandre Julliard wrote:
> Module: wine
> Branch: master
> Commit: b069ef4268e7056856ce6714714d929165f24fc8
> URL:    http://source.winehq.org/git/wine.git/?a=commit;h=b069ef4268e7056856ce6714714d929165f24fc8
>
> Author: Hans Leidekker <hans at it.vu.nl>
> Date:   Fri Feb  1 14:40:15 2008 +0100
>
> wininet: Make sure not to overwrite any caller supplied authorization header.
>
> ---
>
>  dlls/wininet/http.c       |   36 ++++++++++--------------------------
>  dlls/wininet/tests/http.c |    5 ++++-
>  2 files changed, 14 insertions(+), 27 deletions(-)
>
> diff --git a/dlls/wininet/http.c b/dlls/wininet/http.c
> index 65b86fb..a339c86 100644
> --- a/dlls/wininet/http.c
> +++ b/dlls/wininet/http.c
> @@ -1187,9 +1187,11 @@ static UINT HTTP_DecodeBase64( LPCWSTR base64, LPSTR bin )
>   *
>   *   Insert or delete the authorization field in the request header.
>   */
> -static BOOL HTTP_InsertAuthorizationForHeader( LPWININETHTTPREQW lpwhr, struct HttpAuthInfo *pAuthInfo, LPCWSTR header )
> +static BOOL HTTP_InsertAuthorization( LPWININETHTTPREQW lpwhr, LPCWSTR header, BOOL first )
>  {
>      WCHAR *authorization = NULL;
> +    struct HttpAuthInfo *pAuthInfo = lpwhr->pAuthInfo;
> +    DWORD flags;
>  
>      if (pAuthInfo && pAuthInfo->auth_data_len)
>      {
> @@ -1222,35 +1224,17 @@ static BOOL HTTP_InsertAuthorizationForHeader( LPWININETHTTPREQW lpwhr, struct H
>  
>      TRACE("Inserting authorization: %s\n", debugstr_w(authorization));
>  
> -    HTTP_ProcessHeader(lpwhr, header, authorization,
> -                       HTTP_ADDHDR_FLAG_REPLACE | HTTP_ADDHDR_FLAG_REQ);
> +    /* make sure not to overwrite any caller supplied authorization header */
> +    flags = HTTP_ADDHDR_FLAG_REQ;
> +    flags |= first ? HTTP_ADDHDR_FLAG_ADD_IF_NEW : HTTP_ADDHDR_FLAG_REPLACE;
>  
> -    HeapFree(GetProcessHeap(), 0, authorization);
> +    HTTP_ProcessHeader(lpwhr, header, authorization, flags);
>  
> +    HeapFree(GetProcessHeap(), 0, authorization);
>      return TRUE;
>  }
>  
>  /***********************************************************************
> - *  HTTP_InsertAuthorization
> - *
> - *   Insert the authorization field in the request header
> - */
> -static BOOL HTTP_InsertAuthorization( LPWININETHTTPREQW lpwhr )
> -{
> -    return HTTP_InsertAuthorizationForHeader(lpwhr, lpwhr->pAuthInfo, szAuthorization);
> -}
> -
> -/***********************************************************************
> - *  HTTP_InsertProxyAuthorization
> - *
> - *   Insert the proxy authorization field in the request header
> - */
> -static BOOL HTTP_InsertProxyAuthorization( LPWININETHTTPREQW lpwhr )
> -{
> -    return HTTP_InsertAuthorizationForHeader(lpwhr, lpwhr->pProxyAuthInfo, szProxy_Authorization);
> -}
> -
> -/***********************************************************************
>   *           HTTP_DealWithProxy
>   */
>  static BOOL HTTP_DealWithProxy( LPWININETAPPINFOW hIC,
> @@ -2621,8 +2605,8 @@ BOOL WINAPI HTTP_HttpSendRequestW(LPWININETHTTPREQW lpwhr, LPCWSTR lpszHeaders,
>                             lpwhr->hdr.dwFlags & INTERNET_FLAG_KEEP_CONNECTION ? szKeepAlive : szClose,
>                             HTTP_ADDHDR_FLAG_REQ | HTTP_ADDHDR_FLAG_REPLACE);
>  
> -        HTTP_InsertAuthorization(lpwhr);
> -        HTTP_InsertProxyAuthorization(lpwhr);
> +        HTTP_InsertAuthorization(lpwhr, szAuthorization, !loop_next);
> +        HTTP_InsertAuthorization(lpwhr, szProxy_Authorization, !loop_next);
>  
>          /* add the headers the caller supplied */
>          if( lpszHeaders && dwHeaderLength )
> diff --git a/dlls/wininet/tests/http.c b/dlls/wininet/tests/http.c
> index 8bb7cca..88369cf 100644
> --- a/dlls/wininet/tests/http.c
> +++ b/dlls/wininet/tests/http.c
> @@ -1502,7 +1502,10 @@ static void test_header_handling_order(int port)
>      request = HttpOpenRequest(connect, NULL, "/test3", NULL, NULL, types, INTERNET_FLAG_KEEP_CONNECTION, 0);
>      ok(request != NULL, "HttpOpenRequest failed\n");
>  
> -    ret = HttpSendRequest(request, authorization, ~0UL, NULL, 0);
> +    ret = HttpAddRequestHeaders(request, authorization, ~0UL, HTTP_ADDREQ_FLAG_ADD);
> +    ok(ret, "HttpAddRequestHeaders failed\n");
> +
> +    ret = HttpSendRequest(request, NULL, 0, NULL, 0);
>      ok(ret, "HttpSendRequest failed\n");
>  
>      status = 0;
>   

This patch simultaneously breaks proxy authentication and NTLM 
authentication. Proxy authentication is broken because the helper 
function is removed that passes lpwhr->pProxyAuthInfo into 
HTTP_InsertAuthentication. NTLM authentication is broken because first 
is false when we try to send the authenticate message (i.e. the 3rd leg) 
and so the data for the negotiate message (i.e. the first leg) is sent 
instead as the field is not overridden.

Is this trying to fix a real app? If not, why isn't the code that is 
using the behaviour using INTERNET_FLAG_NO_AUTH?

-- 
Rob Shearman



From stefandoesinger at gmx.at  Wed Mar 12 05:46:37 2008
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Wed, 12 Mar 2008 11:46:37 +0100
Subject: [2/2] wined3d: Don't translate by a full half pixel
In-Reply-To: <200803120146.25428.chris.kcat@gmail.com>
References: <200803120146.25428.chris.kcat@gmail.com>
Message-ID: <200803121146.40664.stefandoesinger@gmx.at>

Am Mittwoch, 12. M?rz 2008 09:46:25 schrieb Chris Robinson:
I am not yet conviced that those patches are a good idea. Some time ago I 
found that I need the full half pixel to make DCT happy. Furthermore I see 
different behavior among drivers, e.g. my r200 driver doesn't need any 
correction(it rather hurts instead), and the nvidia driver behaves odd on 
very small render targets.

As I said on IRC, I am afraid that we have to do those position fixes per 
driver. In the extension detection we have to draw a few points onto the back 
buffer and read back the results, and then configure the offsets accordingly.

As I keep saying, we need proper tests for that. Your test to test the corner 
points is a good start, but we also have to test offscreen targets of 
different sizes(e.g. 1x1, 4x4, 16x16, ...), and we have to test all 3 
codepaths(rhw, fixed function, shader).
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080312/8b9f5479/attachment.pgp 

From dank at kegel.com  Wed Mar 12 09:03:18 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 12 Mar 2008 07:03:18 -0700
Subject: Free apps bundled with msvcp71?
In-Reply-To: <53e3a9930803120055k60847f60u277ea47e84b83ba@mail.gmail.com>
References: <a71bd89a0803021832m1a3ffda2m5402cf57f2264572@mail.gmail.com>
	<53e3a9930803120055k60847f60u277ea47e84b83ba@mail.gmail.com>
Message-ID: <a71bd89a0803120703s73a21d65t690bf458f8826a61@mail.gmail.com>

On Wed, Mar 12, 2008 at 12:55 AM, Tom Wickline <twickline at gmail.com> wrote:
>  MSVCP71.dll is the MS Visual C++ 7.1 Runtime Library (which comes with
>  .NET 2003).
>
>  see: http://msdn2.microsoft.com/en-gb/vbasic/ms789141.aspx  for some info,
>
>  The Visual C++ Toolkit 2003 also bundles MSVCP71.dll and MSVCR71.dll
>  see: http://xona.com/2004/06/29.html

Yes indeed.

>  The Toolkit can be downloaded from xona at :
>  http://xona.com/programs/VCToolkitSetup(v1.01)(2004.07.06).zip (29.9
>  MB)

But not legally; I think the EULA for that package forbids redistribution.

>  I know this isn't a direct MS download but it might help in further
>  investigation :D

Fortunately, I already had a copy of the Visual C++ Toolkit 2003.

I'm still looking for a legal download of some app
that just happens to come with msvcp71.dll.
Ideally it'll be some small app with a trivial installer
that can be run noninteractively, suitable for use inside winetricks.
- Dan


From dank at kegel.com  Wed Mar 12 09:22:14 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 12 Mar 2008 07:22:14 -0700
Subject: Can we have a server component in bugzilla?
In-Reply-To: <22821af30803120005u5e13cafic41525a80a8b48c9@mail.gmail.com>
References: <a71bd89a0803111814m6df67951tc42c4afbe2c8d3c@mail.gmail.com>
	<22821af30803111921n4323505an66f300a3822bc3be@mail.gmail.com>
	<a71bd89a0803112047r1314d72egd7790d6c0c623427@mail.gmail.com>
	<22821af30803120005u5e13cafic41525a80a8b48c9@mail.gmail.com>
Message-ID: <a71bd89a0803120722v53d9989cn6f0e1b8cdafd4407@mail.gmail.com>

On Wed, Mar 12, 2008 at 12:05 AM, James Hawkins <truiken at gmail.com> wrote:
>  There is a wineserver component.

D'oh.  Blind.  I guess I was expecting the 'wine' prefix to be removed
as it was for lots of other stuff.


From remco47 at yahoo.com  Wed Mar 12 11:20:29 2008
From: remco47 at yahoo.com (Remco)
Date: Wed, 12 Mar 2008 09:20:29 -0700 (PDT)
Subject: Free apps bundled with msvcp71?
Message-ID: <99443.37356.qm@web50108.mail.re2.yahoo.com>

----- Original Message ----
> From: Dan Kegel <dank at kegel.com>
> Subject: Re: Free apps bundled with msvcp71?
> 
> I'm still looking for a legal download of some app
> that just happens to come with msvcp71.dll.
> Ideally it'll be some small app with a trivial installer
> that can be run noninteractively, suitable for use inside winetricks.


Maybe winetricks could become a w32 application. Make it an applicationthat "installs commonly omitted dlls and frameworks on Windows". That way,you could use some of the dlls directly: those dlls that only allowfree redistribution when bundled with Windows-oriented applications. Nothing in the application, especially the name,should refer to Wine of course; that alone would make it orientedto non-Windows platforms. At least until there is a plausible use for Wine on Windows.

Remco



      __________________________________________________________
Sent from Yahoo! Mail.
The World's Favourite Email http://uk.docs.yahoo.com/nowyoucan.html


From julliard at winehq.org  Wed Mar 12 11:54:49 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 12 Mar 2008 17:54:49 +0100
Subject: [1/4] qmgr: Add critical sections for Jobs and Files.
In-Reply-To: <20080311231236.GA4608@linux.ucla.edu> (Dan Hipschman's message
	of "Tue, 11 Mar 2008 16:12:36 -0700")
References: <20080311231236.GA4608@linux.ucla.edu>
Message-ID: <878x0nc27a.fsf@wine.dyndns.org>

Dan Hipschman <dsh at linux.ucla.edu> writes:

> @@ -25,6 +25,7 @@ WINE_DEFAULT_DEBUG_CHANNEL(qmgr);
>  
>  static void BackgroundCopyFileDestructor(BackgroundCopyFileImpl *This)
>  {
> +    This->owner->lpVtbl->Release((IBackgroundCopyJob *) This->owner);

Please use the appropriate COM macros instead of accessing lpVtbl
directly.

-- 
Alexandre Julliard
julliard at winehq.org


From raccoonone at procyongames.com  Wed Mar 12 13:51:52 2008
From: raccoonone at procyongames.com (Christopher)
Date: Wed, 12 Mar 2008 11:51:52 -0700
Subject: Running services in WINE?
Message-ID: <47D82648.30208@procyongames.com>

I've been trying to get MozyHome working on WINE, and have made a little 
progress. However, it seems that the service which Mozy uses won't 
start. Searching a bit I found a thread from a year ago stating that 
services don't work in WINE, but that it was being worked on. Are 
services implemented in WINE now, or if they're not is someone working 
on it who I could help out?

Christopher Berner


From paul.vriens.wine at gmail.com  Wed Mar 12 13:52:31 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 12 Mar 2008 19:52:31 +0100
Subject: Vista and SHFileOperation tests for shell32
Message-ID: <47D8266F.5050505@gmail.com>

Hi,

I was trying to fix the issues with the user32/listbox tests when I found that 
we have a lot of leftover files from the shell32/shlfileop test.

This happens because I get about a gazillion dialogs asking me what to do during 
the shlfileop tests and I usually tend to click Cancel or Skip.

The first test that fails for me is where we delete the directory before the 
file in that directory. This silently succeeds on everything before Vista but 
fails on Vista and W2K8.

Adding any of the silencing flags doesn't make a difference on Vista but make it 
fail on all the other Windows versions.

What road should I take for this:

a) Add some delete_all_possible_leftover_files_and_directories function at the 
end of shlfileop.c ?
b) Start making a distinction between Vista/W2K8 and pre-Vista ?
c) ????

The first one obviously doesn't fix the test failures.

-- 
Cheers,

Paul.


From dank at kegel.com  Wed Mar 12 15:10:18 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 12 Mar 2008 12:10:18 -0800
Subject: Running services in WINE?
Message-ID: <a71bd89a0803121310q3b16e881y3b97fcfddd328266@mail.gmail.com>

Yes, services are implemented now.  If you
run into a problem, please file a bug.


From us at edmeades.me.uk  Wed Mar 12 18:10:15 2008
From: us at edmeades.me.uk (Ann & Jason Edmeades)
Date: Wed, 12 Mar 2008 23:10:15 -0000
Subject: Clipping regions on windows and Expose Xevents issue
Message-ID: <000001c88496$3e60ef00$1001a8c0@JasonsPC>

Hello, I've been investigating defect 11562, and would appreciate some
thoughts on how to move forward...

Basically the application creates a new visible window (eg at 0,0 - 200,50)
and then draws in it by:
1. BeginPaint - This sets up the cliprgn to the whole window
2. Works out some sizes...
3. MoveWindow - This moves the window to an appropriate place on the screen
4. FillRect (DrawText, EndPaint) to empty the window... From this call (and
all follow on ones) nothing is written to the window because although the
visible region is correctly calculated, the clip region was not updated by
the MoveWindow call.

This highlights 2 problems..

1. MoveWindow doesn't update the DCEx clip_region region, and hence when the
visible region changes, it is merged with the clip region and since there is
no overlap the visible region is empty so all subsequent processing ends.

Q: Whats the best way to handle that - I was tempted to reset the
clip_region to the visible_region (as MSDN sort of implies - you cant really
query them so tests don't help much here) in a movewindow call

2. I then hacked MoveWindow to do nothing, so I could progress...

What I see then is the popup is drawn, emptied and framed etc, and THEN
overwritten with grey. Debugging this shows the application does not respond
to WM_PAINT calls for the popup window - ie its drawn once and once only.
You can see this on windows if you alt+tab to a covering window, and then
back again. HOWEVER, on windows the popup does display correctly the once

Investigating the cause, all is ok until the 
trace:event:process_events Expose for hwnd/window 0xd50026/220002c
This drives the 
trace:win:RedrawWindow 0xd50026 rect (0,0)-(250,50) flags: RDW_INVALIDATE
RDW_ERASE RDW_ALLCHILDREN
and *bang*, all the drawing which has been done is lost

Q: This is getting way outside my understanding of X events, but shouldn't
the Expose event for the child (popup) window be processed before returning
from CreateWindow with style WS_VISIBLE?

All suggestions welcome - I don't mind writing tests etc but would like to
try to come up with a solution for the problem as well!

Jason




From jacek at codeweavers.com  Wed Mar 12 18:16:22 2008
From: jacek at codeweavers.com (Jacek Caban)
Date: Thu, 13 Mar 2008 00:16:22 +0100
Subject: Question about function "HTMLDocument_write"
In-Reply-To: <200803111644.39716.ivan@etersoft.ru>
References: <200803111644.39716.ivan@etersoft.ru>
Message-ID: <47D86446.5000100@codeweavers.com>

Ivan Sinitsin wrote:
> On Monday the patch realizing this function has been accepted. It works 
> perfectly, but hyperlinks do not work.
>   

What do you mean by hyperlinks don't work?

> If I makes this function that way:
>
> [...]
> hyperlinks works good.
>
> Why so occurs?
>   

As I've explained in comment to your patch, this implementation is wrong.


Jacek



From stefan at codeweavers.com  Wed Mar 12 18:43:52 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Thu, 13 Mar 2008 00:43:52 +0100
Subject: Prototype patch that solves bug 11897
In-Reply-To: <47D85F5F.4030302@gmail.com>
References: <47D85D93.4090401@gmail.com> <47D85F5F.4030302@gmail.com>
Message-ID: <200803130043.55597.stefan@codeweavers.com>

Hi,
Note that we do not accept workaround patches into Wine, because otherwise the 
whole software would become a huge workaround collection.

A potential proper fix for this is to generate an UUID, store it in a constant 
global variable and memcpy it into the deviceidentifier
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080313/1a57b1ef/attachment.pgp 

From artur.szymiec at gmail.com  Wed Mar 12 19:02:47 2008
From: artur.szymiec at gmail.com (Artur Szymiec)
Date: Thu, 13 Mar 2008 01:02:47 +0100
Subject: Prototype patch that solves bug 11897
In-Reply-To: <200803130043.55597.stefan@codeweavers.com>
References: <47D85D93.4090401@gmail.com> <47D85F5F.4030302@gmail.com>
	<200803130043.55597.stefan@codeweavers.com>
Message-ID: <47D86F27.9040606@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Stefan D?singer pisze:
> Hi,
> Note that we do not accept workaround patches into Wine, because
otherwise the
> whole software would become a huge workaround collection.
>
> A potential proper fix for this is to generate an UUID, store it in a
constant
> global variable and memcpy it into the deviceidentifier
Dear Stefan,

ok  then.
At d3d startup I'll read back UUID from wine registry (or create one
if none) -> copy into globar var
and then memcopy.

Is this schema looks ok for you ?

Best regards
Artur

- --
- --------------------------------------------------------------------------
Registered User No 397465
Linux Debian 2.6.24.2 AMD Athlon(tm) 64 X2 Dual Core 5000+
Conquer your Desktop! http://www.kde.org/trykde/
Reclaim Your Inbox!   http://www.mozilla.org/products/thunderbird/
- --------------------------------------------------------------------------
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFH2G8nbB2ld6kq2MsRAtNlAKCSdLhr90nzct+gMklYXyTKAHcv4ACgwOxt
v3lQmgjNIM/X75ZMd7icMhc=
=aDz2
-----END PGP SIGNATURE-----



From stefan at codeweavers.com  Wed Mar 12 19:17:11 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-2?q?D=F6singer?=)
Date: Thu, 13 Mar 2008 01:17:11 +0100
Subject: Prototype patch that solves bug 11897
In-Reply-To: <47D86F27.9040606@gmail.com>
References: <47D85D93.4090401@gmail.com>
	<200803130043.55597.stefan@codeweavers.com>
	<47D86F27.9040606@gmail.com>
Message-ID: <200803130117.11323.stefan@codeweavers.com>

Am Donnerstag, 13. M?rz 2008 01:02:47 schrieb Artur Szymiec:
> Stefan D?singer pisze:
> > Hi,
> > Note that we do not accept workaround patches into Wine, because
>
> otherwise the
>
> > whole software would become a huge workaround collection.
> >
> > A potential proper fix for this is to generate an UUID, store it in a
>
> constant
>
> > global variable and memcpy it into the deviceidentifier
>
> Dear Stefan,
>
> ok  then.
> At d3d startup I'll read back UUID from wine registry (or create one
> if none) -> copy into globar var
> and then memcopy.
I don't think you need to store them in the registry. Just hardcode it in the 
code, e.g. like ddraw does it:

const GUID IID_D3DDEVICE_WineD3D = {
  0xaef72d43,
  0xb09a,
  0x4b7b,
  { 0xb7,0x98,0xc6,0x8a,0x77,0x2d,0x72,0x2a }
};

which matches an uuidgen output of
0xaef72d43-0xb09a-0x4b7b-b798-6c8a773d722a
(Don't use this specific UUID for d3d9, generate a new one using uuidgen(part 
of the ext2 filesystem tools)

Chatter has it that on Windows there is some schematic in DirectX GUIDs, 
additionally to the general way UIDs work. But since that's not documented 
anywhere I could find I don't think any game depends on that. In the worst 
case we'll have to adopt the UIDs ATI and Nvidia are using on Windows, if any 
game compares them.




From m.b.lankhorst at gmail.com  Wed Mar 12 21:39:52 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Wed, 12 Mar 2008 19:39:52 -0700
Subject: Running services in WINE?
In-Reply-To: <47D82648.30208@procyongames.com>
References: <47D82648.30208@procyongames.com>
Message-ID: <b130c85e0803121939x3f562627pe3ec5cdeb4f94235@mail.gmail.com>

Hi Christopher,

2008/3/12, Christopher <raccoonone at procyongames.com>:
> I've been trying to get MozyHome working on WINE, and have made a little
>  progress. However, it seems that the service which Mozy uses won't
>  start. Searching a bit I found a thread from a year ago stating that
>  services don't work in WINE, but that it was being worked on. Are
>  services implemented in WINE now, or if they're not is someone working
>  on it who I could help out?
Services most definitely work now. Some of them you can start manually
with "wine net start 'servicename'", however this shouldn't be needed.

Cheers,
Maarten.


From jjmckenzie51 at sprintpcs.com  Wed Mar 12 22:38:15 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Wed, 12 Mar 2008 20:38:15 -0700
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
Message-ID: <47D8A1A7.6060005@sprintpcs.com>

Emmanuel Maillard wrote:
> Hi,
>
> I post a new quartzdrv patch for wine-0.9.56 on Darwine SF patches  
> page :
> http://sourceforge.net/tracker/index.php?func=detail&aid=1908759&group_id=69890&atid=526089
>
> It's not fully update to wine changes (SysCommandSizeMove didn't be  
> reviewed)
> and don't contain all changes I initially planned but will be next time.
>
> Cheers
>
> Emmanuel
>   
Thank you.  I also noticed there are new .nib files available.

James McKenzie



From raccoonone at procyongames.com  Thu Mar 13 01:16:25 2008
From: raccoonone at procyongames.com (Christopher)
Date: Wed, 12 Mar 2008 23:16:25 -0700
Subject: Running services in WINE?
In-Reply-To: <b130c85e0803121939x3f562627pe3ec5cdeb4f94235@mail.gmail.com>
References: <47D82648.30208@procyongames.com>
	<b130c85e0803121939x3f562627pe3ec5cdeb4f94235@mail.gmail.com>
Message-ID: <47D8C6B9.8030607@procyongames.com>

Maarten Lankhorst wrote:
> Hi Christopher,
>
> 2008/3/12, Christopher <raccoonone at procyongames.com>:
>   
>> I've been trying to get MozyHome working on WINE, and have made a little
>>  progress. However, it seems that the service which Mozy uses won't
>>  start. Searching a bit I found a thread from a year ago stating that
>>  services don't work in WINE, but that it was being worked on. Are
>>  services implemented in WINE now, or if they're not is someone working
>>  on it who I could help out?
>>     
> Services most definitely work now. Some of them you can start manually
> with "wine net start 'servicename'", however this shouldn't be needed.
>
> Cheers,
> Maarten.
>
>
>   
Thanks Maarten!
I tried that, but didn't have anymore luck. The service exits almost 
immediately, after giving a few fixme messages. Time to do some 
debugging I guess :)

Christopher


From paul.vriens.wine at gmail.com  Thu Mar 13 02:54:57 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 13 Mar 2008 08:54:57 +0100
Subject: msi: Ignore the custom action type 51 if the source field is empty
In-Reply-To: <22821af30803102230g1c52f0bewb89c8db92f271f10@mail.gmail.com>
References: <22821af30803102230g1c52f0bewb89c8db92f271f10@mail.gmail.com>
Message-ID: <47D8DDD1.5020805@gmail.com>

James Hawkins wrote:
> Hi,
> 
> Fixes bug 11891.  http://bugs.winehq.org/show_bug.cgi?id=11891
> 
> Changelog:
> * Ignore the custom action type 51 if the source field is empty.
> 
>  dlls/msi/custom.c        |    3 ++
>  dlls/msi/tests/install.c |   65 ++++++++++++++++++++++++++++++++++++++++++++++
>  2 files changed, 68 insertions(+), 0 deletions(-)
> 
> 
> 
> ------------------------------------------------------------------------
> 
> 
Hi James,

I was looking at the sudden huge amount of failures for the msi/package tests on 
Windows:

http://test.winehq.org/data/200803121000/

The issue turned out to be with the above patch for the install tests. If I run 
the install tests a 'MSITEST' package will stay around (can been seen in 
'Add/Remove Programs").

If I remove MSITEST the package tests will succeed again.

(Reverting the above patch makes the package tests pass again as well, when run 
after the install tests of course).

The thing that surprises me is that we don't see the same failures when running 
the package tests on Wine? Is this because we have 39 TODO's in there?

-- 
Cheers,

Paul.


From ivan at etersoft.ru  Thu Mar 13 02:59:36 2008
From: ivan at etersoft.ru (Ivan Sinitsin)
Date: Thu, 13 Mar 2008 10:59:36 +0300
Subject: Question about function "HTMLDocument_write"
In-Reply-To: <47D86446.5000100@codeweavers.com>
References: <200803111644.39716.ivan@etersoft.ru>
	<47D86446.5000100@codeweavers.com>
Message-ID: <200803131059.36573.ivan@etersoft.ru>

>
> What do you mean by hyperlinks don't work?
>
I have such code which create html page:

htmlDoc2->lpVtbl->open(htmlDoc2, L"html/txt", vnull, vnull, vnull, &pdisp);
bstr =SysAllocString(L"<html><head></head><body><p>Simple text</p>");
if ((pVar->bstrVal = bstr)) {
     htmlDoc2->lpVtbl->write(htmlDoc2, sfArray);
}
SysFreeString(bstr);
bstr = SysAllocString(L"<br><a href='http://www.yandex.ru'>Link to the 
Yandex");
if ((pVar->bstrVal = bstr)) {
      htmlDoc2->lpVtbl->write(htmlDoc2, sfArray);
}
SysFreeString(bstr);
bstr = SysAllocString(L"</a><br>End of document</body></html>");
if ((pVar->bstrVal = bstr)) {
      htmlDoc2->lpVtbl->write(htmlDoc2, sfArray);
}
SysFreeString(bstr);
htmlDoc2->lpVtbl->close(htmlDoc2);

After creation of page, I try to click on a hyperlink, but nothing occurs.

When I used my patch, hyperlink works good.

>
> As I've explained in comment to your patch, this implementation is wrong.
>
I do not speak, that my patch better than yours or my patch is right. I only 
want  to understand, why so occurs and where to look?

>
> Jacek

-- 
Sinitsin Ivan


From artur.szymiec at gmail.com  Thu Mar 13 04:19:36 2008
From: artur.szymiec at gmail.com (Artur Szymiec)
Date: Thu, 13 Mar 2008 10:19:36 +0100
Subject: RESEND Prototype patch that solves bug 11897
In-Reply-To: <200803130117.11323.stefan@codeweavers.com>
References: <47D85D93.4090401@gmail.com>
	<200803130043.55597.stefan@codeweavers.com>
	<47D86F27.9040606@gmail.com>
	<200803130117.11323.stefan@codeweavers.com>
Message-ID: <47D8F1A8.1060007@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Stefan D?singer pisze:
> Am Donnerstag, 13. M?rz 2008 01:02:47 schrieb Artur Szymiec:
>> Stefan D?singer pisze:
>>> Hi, Note that we do not accept workaround patches into Wine,
>>> because
>> otherwise the
>>
>>> whole software would become a huge workaround collection.
>>>
>>> A potential proper fix for this is to generate an UUID, store
>>> it in a
>> constant
>>
>>> global variable and memcpy it into the deviceidentifier
>> Dear Stefan,
>>
>> ok  then. At d3d startup I'll read back UUID from wine registry
>> (or create one if none) -> copy into globar var and then memcopy.
>>
> I don't think you need to store them in the registry. Just hardcode
> it in the code, e.g. like ddraw does it:
>
> const GUID IID_D3DDEVICE_WineD3D = { 0xaef72d43, 0xb09a, 0x4b7b, {
> 0xb7,0x98,0xc6,0x8a,0x77,0x2d,0x72,0x2a } };
>
> which matches an uuidgen output of
> 0xaef72d43-0xb09a-0x4b7b-b798-6c8a773d722a (Don't use this specific
> UUID for d3d9, generate a new one using uuidgen(part of the ext2
> filesystem tools)
>
> Chatter has it that on Windows there is some schematic in DirectX
> GUIDs, additionally to the general way UIDs work. But since that's
> not documented anywhere I could find I don't think any game depends
> on that. In the worst case we'll have to adopt the UIDs ATI and
> Nvidia are using on Windows, if any game compares them.
This is a corrected patch.
The uuid is common to dx8 and dx9 since the UUID is generated
inside wined3d.

diff --git a/dlls/wined3d/directx.c b/dlls/wined3d/directx.c
index 04af700..809809c 100644
- --- a/dlls/wined3d/directx.c
+++ b/dlls/wined3d/directx.c
@@ -36,6 +36,14 @@
 WINE_DEFAULT_DEBUG_CHANNEL(d3d);
 WINE_DECLARE_DEBUG_CHANNEL(d3d_caps);

+/* The d3d device ID */
+const GUID IID_D3DDEVICE_D3DUID = {
+  0xaeb2cdd4,
+  0x6e41,
+  0x43ea,
+  { 0x94,0x1c,0x83,0x61,0xcc,0x76,0x07,0x81 }
+};
+
 /* Extension detection */
 static const struct {
     const char *extension_string;
@@ -1595,7 +1603,9 @@ static HRESULT WINAPI
IWineD3DImpl_GetAdapterIdentifier(IWineD3D *iface, UINT Ad
     *(pIdentifier->SubSysId) = 0;
     *(pIdentifier->Revision) = 0;

- -    /*FIXME: memcpy(&pIdentifier->DeviceIdentifier, ??,
sizeof(??GUID)); */
+    /* Fixes BUG 11897 */
+
memcpy(pIdentifier->DeviceIdentifier,&IID_D3DDEVICE_D3DUID,sizeof(GUID));
+
     if (Flags & WINED3DENUM_NO_WHQL_LEVEL) {
         *(pIdentifier->WHQLLevel) = 0;
     } else {


- --
- --------------------------------------------------------------------------
Registered User No 397465
Linux Debian 2.6.24.2 AMD Athlon(tm) 64 X2 Dual Core 5000+
Conquer your Desktop! http://www.kde.org/trykde/
Reclaim Your Inbox!   http://www.mozilla.org/products/thunderbird/
- --------------------------------------------------------------------------
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFH2PGnbB2ld6kq2MsRAp3fAJ0QbkQ7Ifo3ukdiu0l1KD3TAaXX+QCgsFhC
7MoBeeM2XNh7SmgHe5tppBs=
=/t0r
-----END PGP SIGNATURE-----



From stefan at codeweavers.com  Thu Mar 13 05:30:07 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-2?q?D=F6singer?=)
Date: Thu, 13 Mar 2008 11:30:07 +0100
Subject: RESEND Prototype patch that solves bug 11897
In-Reply-To: <47D8F1A8.1060007@gmail.com>
References: <47D85D93.4090401@gmail.com>
	<200803130117.11323.stefan@codeweavers.com>
	<47D8F1A8.1060007@gmail.com>
Message-ID: <200803131130.11126.stefan@codeweavers.com>

Am Donnerstag, 13. M?rz 2008 10:19:36 schrieb Artur Szymiec:
> This is a corrected patch.
> The uuid is common to dx8 and dx9 since the UUID is generated
> inside wined3d.
Yes, that looks reasonable. Only two small issues:

> +/* Fixes BUG 11897 */
That's not really needed, specifying a GUID is correct even if it wouldn't fix 
a bug report.

Also, please attach the patch as an extra file to the mail, if you inline it 
like you did in your last mails it most likely suffers from line wrapping and 
can't be applied
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080313/ae9124d6/attachment.pgp 

From julliard at winehq.org  Thu Mar 13 05:31:21 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 13 Mar 2008 11:31:21 +0100
Subject: [2/4] qmgr: Add infrastructure for background file transferring.
	[take 4]
In-Reply-To: <20080312185645.GF4608@linux.ucla.edu> (Dan Hipschman's message
	of "Wed, 12 Mar 2008 11:56:45 -0700")
References: <20080312185645.GF4608@linux.ucla.edu>
Message-ID: <87myp2zzie.fsf@wine.dyndns.org>

Dan Hipschman <dsh at linux.ucla.edu> writes:

> @@ -129,6 +131,21 @@ ServiceMain(DWORD dwArgc, LPWSTR *lpszArgv)
>          return;
>      }
>  
> +    globalMgr.jobEvent = CreateEventW(NULL, TRUE, FALSE, NULL);
> +    if (!globalMgr.jobEvent) {
> +        ERR("Couldn't create event: error %d\n", GetLastError());
> +        UpdateStatus(SERVICE_STOPPED, NO_ERROR, 0);
> +        return;
> +    }
> +
> +    fileTxThread = CreateThread(NULL, 0, fileTransfer, NULL, 0, &threadId);
> +    if (!fileTxThread)
> +    {
> +        ERR("Failed starting file transfer thread\n");
> +        UpdateStatus(SERVICE_STOPPED, NO_ERROR, 0);
> +        return;
> +    }
> +
>      UpdateStatus(SERVICE_RUNNING, NO_ERROR, 0);

You also need to shutdown the thread properly when the service
terminates.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Thu Mar 13 06:22:00 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 13 Mar 2008 12:22:00 +0100
Subject: Clipping regions on windows and Expose Xevents issue
In-Reply-To: <000001c88496$3e60ef00$1001a8c0@JasonsPC> (Ann & Jason Edmeades's
	message of "Wed, 12 Mar 2008 23:10:15 -0000")
References: <000001c88496$3e60ef00$1001a8c0@JasonsPC>
Message-ID: <87iqzqzx5z.fsf@wine.dyndns.org>

"Ann & Jason Edmeades" <us at edmeades.me.uk> writes:

> 1. MoveWindow doesn't update the DCEx clip_region region, and hence when the
> visible region changes, it is merged with the clip region and since there is
> no overlap the visible region is empty so all subsequent processing ends.
>
> Q: Whats the best way to handle that - I was tempted to reset the
> clip_region to the visible_region (as MSDN sort of implies - you cant really
> query them so tests don't help much here) in a movewindow call

You can query the visible region, so with well-chosen dimensions and
clip region it shouldn't be too hard to write test cases. Make sure you
test both GetDCEx with an explicit clip region and BeginPaint, the
behavior is probably different

> Q: This is getting way outside my understanding of X events, but shouldn't
> the Expose event for the child (popup) window be processed before returning
> from CreateWindow with style WS_VISIBLE?

The way we hack around the asynchronous events is by checking for expose
events in UpdateWindow, but of course if the app doesn't even use that
it won't help. And on a slow connection the expose events will always
arrive too late anyway. We'd need to explicitly wait for the event, but
that would hurt badly on slow connections.

-- 
Alexandre Julliard
julliard at winehq.org


From artur.szymiec at gmail.com  Thu Mar 13 07:04:28 2008
From: artur.szymiec at gmail.com (Artur Szymiec)
Date: Thu, 13 Mar 2008 13:04:28 +0100
Subject: RESEND Prototype patch that solves bug 11897
In-Reply-To: <200803131130.11126.stefan@codeweavers.com>
References: <47D85D93.4090401@gmail.com>
	<200803130117.11323.stefan@codeweavers.com>
	<47D8F1A8.1060007@gmail.com>
	<200803131130.11126.stefan@codeweavers.com>
Message-ID: <47D9184C.8070704@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Stefan D?singer pisze:
> Am Donnerstag, 13. M?rz 2008 10:19:36 schrieb Artur Szymiec:
>> This is a corrected patch. The uuid is common to dx8 and dx9
>> since the UUID is generated inside wined3d.
> Yes, that looks reasonable. Only two small issues:
>
>> +/* Fixes BUG 11897 */
> That's not really needed, specifying a GUID is correct even if it
> wouldn't fix a bug report.
>
> Also, please attach the patch as an extra file to the mail, if you
> inline it like you did in your last mails it most likely suffers
> from line wrapping and can't be applied
Thank you very much for help Stefan !

Best regards
Artur

- --
- --------------------------------------------------------------------------
Registered User No 397465
Linux Debian 2.6.24.2 AMD Athlon(tm) 64 X2 Dual Core 5000+
Conquer your Desktop! http://www.kde.org/trykde/
Reclaim Your Inbox!   http://www.mozilla.org/products/thunderbird/
- --------------------------------------------------------------------------
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFH2RhMbB2ld6kq2MsRAsltAJ0eZzgQoJlZ1jgPc/8YPHoMJyP1MwCg2c+Z
bDKy0V+CgkyilcTdduIKUbQ=
=TvMs
-----END PGP SIGNATURE-----

-------------- next part --------------
A non-text attachment was scrubbed...
Name: UUID.patch
Type: text/x-diff
Size: 984 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080313/852afa9f/attachment.patch 

From stefan at codeweavers.com  Thu Mar 13 08:27:58 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Thu, 13 Mar 2008 14:27:58 +0100
Subject: RESEND Prototype patch that solves bug 11897
In-Reply-To: <47D9184C.8070704@gmail.com>
References: <47D85D93.4090401@gmail.com>
	<200803131130.11126.stefan@codeweavers.com>
	<47D9184C.8070704@gmail.com>
Message-ID: <200803131428.00449.stefan@codeweavers.com>

Am Donnerstag, 13. M?rz 2008 13:04:28 schrieb Artur Szymiec:
> Thank you very much for help Stefan !
You're welcome. Thanks for your help to make Wine better.

Just send the patch to wine-patches, if they're on wine-devel they won't be 
applied. Also I recommend not to sign mails to wine-patches because the 
archives can't handle more than one attachment, and if there's a signature 
the patch isn't accessible from the archives
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080313/bf4f4c41/attachment.pgp 

From stefan at codeweavers.com  Thu Mar 13 09:20:14 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Thu, 13 Mar 2008 15:20:14 +0100
Subject: RESEND D3D add device uuid solves bug 11897
In-Reply-To: <47D92EB7.3010709@gmail.com>
References: <47D85D93.4090401@gmail.com>
	<200803131130.11126.stefan@codeweavers.com>
	<47D92EB7.3010709@gmail.com>
Message-ID: <200803131520.17639.stefan@codeweavers.com>

Am Donnerstag, 13. M?rz 2008 14:40:07 schrieb Artur Szymiec:
> Stefan D?singer pisze:
> > Am Donnerstag, 13. M?rz 2008 10:19:36 schrieb Artur Szymiec:
> >> This is a corrected patch.
> >> The uuid is common to dx8 and dx9 since the UUID is generated
> >> inside wined3d.
> >
> > Yes, that looks reasonable. Only two small issues:
> >> +/* Fixes BUG 11897 */
> >
> > That's not really needed, specifying a GUID is correct even if it
> > wouldn't fix a bug report.
> >
> > Also, please attach the patch as an extra file to the mail, if you inline
> > it like you did in your last mails it most likely suffers from line
> > wrapping and can't be applied
>
> That's final version with suggested correction
> by Stefan D?singer
Sorry that I didn't think of that earlier, but do you have to use memcpy? 
Doesn't a simple *pIdentifier->DeviceIdentifier = IID_D3DDEVICE_D3DUID; work 
as well?

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080313/884ae204/attachment.pgp 

From artur.szymiec at gmail.com  Thu Mar 13 09:37:02 2008
From: artur.szymiec at gmail.com (Artur Szymiec)
Date: Thu, 13 Mar 2008 15:37:02 +0100
Subject: RESEND D3D add device uuid solves bug 11897
In-Reply-To: <200803131520.17639.stefan@codeweavers.com>
References: <47D85D93.4090401@gmail.com>
	<200803131130.11126.stefan@codeweavers.com>
	<47D92EB7.3010709@gmail.com>
	<200803131520.17639.stefan@codeweavers.com>
Message-ID: <47D93C0E.7060605@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Stefan D?singer pisze:
> Am Donnerstag, 13. M?rz 2008 14:40:07 schrieb Artur Szymiec:
>> Stefan D?singer pisze:
>>> Am Donnerstag, 13. M?rz 2008 10:19:36 schrieb Artur Szymiec:
>>>> This is a corrected patch.
>>>> The uuid is common to dx8 and dx9 since the UUID is generated
>>>> inside wined3d.
>>> Yes, that looks reasonable. Only two small issues:
>>>> +/* Fixes BUG 11897 */
>>> That's not really needed, specifying a GUID is correct even if it
>>> wouldn't fix a bug report.
>>>
>>> Also, please attach the patch as an extra file to the mail, if you inline
>>> it like you did in your last mails it most likely suffers from line
>>> wrapping and can't be applied
>> That's final version with suggested correction
>> by Stefan D?singer
> Sorry that I didn't think of that earlier, but do you have to use memcpy?
> Doesn't a simple *pIdentifier->DeviceIdentifier = IID_D3DDEVICE_D3DUID;
work
> as well?
>
I've corrected this like Vitaliy suggested and
sent again to wine-patches.

Regards
Artur

- --
- --------------------------------------------------------------------------
Registered User No 397465
Linux Debian 2.6.24.2 AMD Athlon(tm) 64 X2 Dual Core 5000+
Conquer your Desktop! http://www.kde.org/trykde/
Reclaim Your Inbox!   http://www.mozilla.org/products/thunderbird/
- --------------------------------------------------------------------------
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFH2TwObB2ld6kq2MsRAsprAKCxRDwygn0VZ4ZglvUbHcPEL0EyAQCggwhv
qr236BN0Nv88EkUTooR6z1I=
=FxIQ
-----END PGP SIGNATURE-----



From dank at kegel.com  Thu Mar 13 10:32:23 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 13 Mar 2008 08:32:23 -0700
Subject: wine virus story
Message-ID: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>

http://wearenixed.blogspot.com/2008/03/you-only-know-good-when-youve-seen-bad.html

"I had set her up with a perfect Wine install. She had a bit
of software that needed to run under wine and I had shown her
how to install within that environment. Apparently, I wasn't
specific enough. It never occurred to Paula that the .exe
programs she had used on her XP machine were the vehicles for
many of her present viruses. To her, it was perfectly fine to
use those same .exe's...after all, she was in Linux, right?

I got there within the same hour and checked her
machine. Yep...Windows viruses will reside and create the same
havoc within a Wine environment. Now, I've seen it with my own
eyes. This time I reinstalled for her and made sure I found
all the infected .exe's on the Windows side and deleted them."


From pgquiles at elpauer.org  Thu Mar 13 10:51:17 2008
From: pgquiles at elpauer.org (Pau Garcia i Quiles)
Date: Thu, 13 Mar 2008 16:51:17 +0100
Subject: wine virus story
In-Reply-To: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
Message-ID: <20080313165117.wzyb7otv0ow80cw8@www.elpauer.org>

Quoting Dan Kegel <dank at kegel.com>:

> http://wearenixed.blogspot.com/2008/03/you-only-know-good-when-youve-seen-bad.html
>
> "I had set her up with a perfect Wine install. She had a bit
> of software that needed to run under wine and I had shown her
> how to install within that environment. Apparently, I wasn't
> specific enough. It never occurred to Paula that the .exe
> programs she had used on her XP machine were the vehicles for
> many of her present viruses. To her, it was perfectly fine to
> use those same .exe's...after all, she was in Linux, right?
>
> I got there within the same hour and checked her
> machine. Yep...Windows viruses will reside and create the same
> havoc within a Wine environment. Now, I've seen it with my own
> eyes. This time I reinstalled for her and made sure I found
> all the infected .exe's on the Windows side and deleted them."

Windows virus infecting Linux machines are a huge success for Wine.

Take that one Microsoft! Windows viruses run better on Linux than on  
Windows Vista!

-- 
Pau Garcia i Quiles
http://www.elpauer.org
(Due to my workload, I may need 10 days to answer)



From meissner at suse.de  Thu Mar 13 11:27:38 2008
From: meissner at suse.de (Marcus Meissner)
Date: Thu, 13 Mar 2008 17:27:38 +0100
Subject: wine virus story
In-Reply-To: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
Message-ID: <20080313162737.GA29108@suse.de>

On Thu, Mar 13, 2008 at 08:32:23AM -0700, Dan Kegel wrote:
> http://wearenixed.blogspot.com/2008/03/you-only-know-good-when-youve-seen-bad.html
> 
> "I had set her up with a perfect Wine install. She had a bit
> of software that needed to run under wine and I had shown her
> how to install within that environment. Apparently, I wasn't
> specific enough. It never occurred to Paula that the .exe
> programs she had used on her XP machine were the vehicles for
> many of her present viruses. To her, it was perfectly fine to
> use those same .exe's...after all, she was in Linux, right?
> 
> I got there within the same hour and checked her
> machine. Yep...Windows viruses will reside and create the same
> havoc within a Wine environment. Now, I've seen it with my own
> eyes. This time I reinstalled for her and made sure I found
> all the infected .exe's on the Windows side and deleted them."

Fortunately you can run clamscan -r ~/.wine/ without much
fear for rootkits hiding the virii.

Ciao, Marcus


From wine-patches at kievinfo.com  Thu Mar 13 08:39:28 2008
From: wine-patches at kievinfo.com (Vitaliy Margolen)
Date: Thu, 13 Mar 2008 07:39:28 -0600
Subject: RESEND Prototype patch that solves bug 11897
In-Reply-To: <47D9184C.8070704@gmail.com>
References: <47D85D93.4090401@gmail.com>	<200803130117.11323.stefan@codeweavers.com>	<47D8F1A8.1060007@gmail.com>	<200803131130.11126.stefan@codeweavers.com>
	<47D9184C.8070704@gmail.com>
Message-ID: <47D92E90.9080007@kievinfo.com>

Artur Szymiec wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Stefan D?singer pisze:
>> Am Donnerstag, 13. M?rz 2008 10:19:36 schrieb Artur Szymiec:
>>> This is a corrected patch. The uuid is common to dx8 and dx9
>>> since the UUID is generated inside wined3d.
>> Yes, that looks reasonable. Only two small issues:
>>
>>> +/* Fixes BUG 11897 */
>> That's not really needed, specifying a GUID is correct even if it
>> wouldn't fix a bug report.
>>
>> Also, please attach the patch as an extra file to the mail, if you
>> inline it like you did in your last mails it most likely suffers
>> from line wrapping and can't be applied
> Thank you very much for help Stefan !
> 
Few more problems with your patch:
> +const GUID IID_D3DDEVICE_D3DUID = {
> +  0xaeb2cdd4,
> +  0x6e41,
1. Use 4 spaces indentation as the rest of the file not 2.

> +    memcpy(pIdentifier->DeviceIdentifier,&IID_D3DDEVICE_D3DUID,sizeof(GUID));
2. Don't use memcpy. They are both structs and you you can assign sctruct to 
struct in c:
     *pIdentifier->DeviceIdentifier = IID_D3DDEVICE_D3DUID;

Vitaliy.


From mammothtruk at gmail.com  Thu Mar 13 09:31:56 2008
From: mammothtruk at gmail.com (MammothTruk)
Date: Thu, 13 Mar 2008 09:31:56 -0500
Subject: GSoC
Message-ID: <1dd4d8b40803130731r6681a702x9112f3abac8b795a@mail.gmail.com>

I read the WineHQ newsletters when they come out to try and keep up on the
goings on of Wine and what will run on it.  I noticed that the
Wsock32.dllwas suggested as a SoC project.  I wanted to point out that
Vista X64 has
issues with this dll and some of the newer programs arent accessing it
right.  This could be a really good project to take on for someone as it
would give people that are having issues with Vista to use Wine.

I also thought that possible control panel rewriting so that it looks better
would be a good project.  Make it more user friendly.  Easier to access.  My
descriptions of what things do on each tab.  Just an overall nice,easy,good
looking control panel would be really helpful to first time users.  the
current winecfg looks like crap and isnt at all user friendly to the first
time user.  I was a first time users a year ago and I still dont understand
half of the control panel.

Wine Plugin project might be really useful too.  It would help companies
that cant afford or wont make direct linux ports to have some kind of
ability to get their porgrams working without official linux support.

The three things listed above all come from me playing NeverWinter Nights
2.  OEI wont make a linux port but have been pretty supportive of Wine in
their forums on bioware.  .NET is also something needed to get the toolset
working, but I thought that was a little big for a 2-3 month project.

Supporter,
Nicholas "MammothTruk" Baldwin

-- 
Lifes to Short.  Stop wasting your time.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080313/89fb70db/attachment.htm 

From arbuckle911 at gmail.com  Thu Mar 13 12:11:48 2008
From: arbuckle911 at gmail.com (Christopher Harvey)
Date: Thu, 13 Mar 2008 13:11:48 -0400
Subject: GSoC
In-Reply-To: <1dd4d8b40803130731r6681a702x9112f3abac8b795a@mail.gmail.com>
References: <1dd4d8b40803130731r6681a702x9112f3abac8b795a@mail.gmail.com>
Message-ID: <47D96054.6050301@gmail.com>

MammothTruk wrote:
> I read the WineHQ newsletters when they come out to try and keep up on 
> the goings on of Wine and what will run on it.  I noticed that the 
> Wsock32.dll was suggested as a SoC project.  I wanted to point out 
> that Vista X64 has issues with this dll and some of the newer programs 
> arent accessing it right.  This could be a really good project to take 
> on for someone as it would give people that are having issues with 
> Vista to use Wine.
>
> I also thought that possible control panel rewriting so that it looks 
> better would be a good project.  Make it more user friendly.  Easier 
> to access.  My descriptions of what things do on each tab.  Just an 
> overall nice,easy,good looking control panel would be really helpful 
> to first time users.  the current winecfg looks like crap and isnt at 
> all user friendly to the first time user.  I was a first time users a 
> year ago and I still dont understand half of the control panel.
>
> Wine Plugin project might be really useful too.  It would help 
> companies that cant afford or wont make direct linux ports to have 
> some kind of ability to get their porgrams working without official 
> linux support.
>
> The three things listed above all come from me playing NeverWinter 
> Nights 2.  OEI wont make a linux port but have been pretty supportive 
> of Wine in their forums on bioware.  .NET is also something needed to 
> get the toolset working, but I thought that was a little big for a 2-3 
> month project.
>
> Supporter,
> Nicholas "MammothTruk" Baldwin
>
> -- 
> Lifes to Short.  Stop wasting your time.
> ------------------------------------------------------------------------
>
>
>   
Hi,
I'm going to be applying for GSoC this year, for the mswsock dll 
mentioned in this e-mail. I've been working on it pretty part time for 
about week, and with wine as a whole for about 1 month,  I think I can 
handle it. I heard it was a good idea to post and let people know if one 
is interested in GSoC, so here is my post.
I've had a few ideas that I thought of on my own, but now I'm starting 
to see they perhaps aren't as useful as the ideas thought of by current 
developers, but I'll float it out there one last time. I thought it 
would be cool to create a wine GUI overlay for games, exactly like 
nvPerfHUD. The thing about doing it in wine that makes it better than 
nvPerHUD is the fact the to use nvPerfHUD the apps have to give 
permission for nvPerHUD to run on them. A wine version would actually be 
able to force every single 3d app, opengl or directX to output nvPerfHUD 
like output. Anyway, just a thought. Would I be able to apply for both 
of these projects and pick one last minute?
Thanks,
Chris.



From luis.busquets at ilidium.com  Thu Mar 13 12:23:06 2008
From: luis.busquets at ilidium.com (=?UTF-8?B?Ikx1aXMgQy4gQnVzcXVldHMgUMOpcmV6Ig==?=)
Date: Thu, 13 Mar 2008 18:23:06 +0100
Subject: d3dx8: Implementation of D3DXGetFVFVertexSize
Message-ID: <47D962FA.9040005@ilidium.com>

Is ther eany problem with this patch?

---
  dlls/d3dx8/d3dx8_main.c |   59 
+++++++++++++++++++++++++++++++++++++++++++++-
  1 files changed, 57 insertions(+), 2 deletions(-)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: eb5a1f3d568271b2fe052ebfd206365aaf4d6929.diff
Type: text/x-patch
Size: 1654 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080313/985ca5d4/attachment.bin 

From luis.busquets at ilidium.com  Thu Mar 13 12:26:17 2008
From: luis.busquets at ilidium.com (=?ISO-8859-1?Q?=22Luis_C=2E_Busquets_P=E9rez=22?=)
Date: Thu, 13 Mar 2008 18:26:17 +0100
Subject: Google Summer of code
Message-ID: <47D963B9.3040205@ilidium.com>

Proposing another thing if implementing d3dx9_36.dll is too much I 
propose to implement:
     1   D3DXAssembleShader
     2   D3DXAssembleShaderFromFileA
     3   D3DXCompileShader
     4   D3DXCompileShaderFromFileA
     5   D3DXCreateCubeTextureFromFileExA
     6   D3DXCreateCubeTextureFromFileInMemory
     7   D3DXCreateEffectCompilerFromFileA
     8   D3DXCreateEffectFromFileA
     9   D3DXCreateTextureFromFileExA
    10   D3DXCreateTextureFromFileInMemory
    11   D3DXCreateVolumeTextureFromFileExA
    12   D3DXCreateVolumeTextureFromFileInMemory
    13   D3DXGetImageInfoFromFileInMemory
    14   D3DXGetPixelShaderProfile
    15   D3DXGetShaderConstantTable
    16   D3DXGetShaderInputSemantics
    17   D3DXGetShaderVersion
    18   D3DXGetVertexShaderProfile
    19   D3DXLoadSurfaceFromSurface
    20   D3DXSaveSurfaceToFileA
    21   D3DXSaveTextureToFileA

Which are the functions that Sid Meier's Civilization 4 calls and are 
not yet implemented from d3dx9_32 (36)



From erappleman at gmail.com  Thu Mar 13 13:04:26 2008
From: erappleman at gmail.com (Eric Appleman)
Date: Thu, 13 Mar 2008 14:04:26 -0400
Subject: 1 program is separating me from complete windows independence. please
	help!
Message-ID: <47D96CAA.1010704@gmail.com>

Can someone please take a look at this bug for me?

http://bugs.winehq.org/show_bug.cgi?id=11953


From epssyis at gmail.com  Thu Mar 13 13:12:00 2008
From: epssyis at gmail.com (Edward Savage)
Date: Fri, 14 Mar 2008 05:12:00 +1100
Subject: wine virus story
In-Reply-To: <20080313162737.GA29108@suse.de>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
	<20080313162737.GA29108@suse.de>
Message-ID: <d6c5d7290803131112o71a0121dhce7a6d6c60277e6@mail.gmail.com>

I remember my last attempt to run a virus under wine caused a total
loss of my .wine structure but didn't manage to cause any damage to my
sandbox (including a juicy fake address list).  I was really let down
as I expected carnage.

Just as a silly outside thought; would it be worth keeping track of
some of the bigger windows virus so we can see how good wine
compatibiliy with all of the nitty gritty bugs of windows really is?
Also this would allow us to identify dangerous areas in wine were the
ability to affect the linux environment cross over.

On Fri, Mar 14, 2008 at 3:27 AM, Marcus Meissner <meissner at suse.de> wrote:
>
> On Thu, Mar 13, 2008 at 08:32:23AM -0700, Dan Kegel wrote:
>  > http://wearenixed.blogspot.com/2008/03/you-only-know-good-when-youve-seen-bad.html
>  >
>  > "I had set her up with a perfect Wine install. She had a bit
>  > of software that needed to run under wine and I had shown her
>  > how to install within that environment. Apparently, I wasn't
>  > specific enough. It never occurred to Paula that the .exe
>  > programs she had used on her XP machine were the vehicles for
>  > many of her present viruses. To her, it was perfectly fine to
>  > use those same .exe's...after all, she was in Linux, right?
>  >
>  > I got there within the same hour and checked her
>  > machine. Yep...Windows viruses will reside and create the same
>  > havoc within a Wine environment. Now, I've seen it with my own
>  > eyes. This time I reinstalled for her and made sure I found
>  > all the infected .exe's on the Windows side and deleted them."
>
>  Fortunately you can run clamscan -r ~/.wine/ without much
>  fear for rootkits hiding the virii.
>
>  Ciao, Marcus
>
>
>


From dank at kegel.com  Thu Mar 13 14:11:14 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 13 Mar 2008 11:11:14 -0800
Subject: wine virus story
In-Reply-To: <d6c5d7290803131112o71a0121dhce7a6d6c60277e6@mail.gmail.com>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
	<20080313162737.GA29108@suse.de>
	<d6c5d7290803131112o71a0121dhce7a6d6c60277e6@mail.gmail.com>
Message-ID: <a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com>

On 3/13/08, Edward Savage <epssyis at gmail.com> wrote:
>  Just as a silly outside thought; would it be worth keeping track of
>  some of the bigger windows virus so we can see how good wine
>  compatibiliy with all of the nitty gritty bugs of windows really is?
>  Also this would allow us to identify dangerous areas in wine were the
>  ability to affect the linux environment cross over.

Yes, it would be good to keep an eye on that.

Ideally we'd have an automated script to set up
a petri dish, try out a bunch of known infectious agents,
and see which one of them reproduce.

I haven't done anything like that myself, but I imagine
a good place to start might be to script an instance
of mozilla or ies4linux visiting the top sites listed at
http://www.stopbadware.org/home/topsites
and see if they're able to modify the system at all.
- Dan


From epssyis at gmail.com  Thu Mar 13 14:31:49 2008
From: epssyis at gmail.com (Edward Savage)
Date: Fri, 14 Mar 2008 06:31:49 +1100
Subject: wine virus story
In-Reply-To: <a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
	<20080313162737.GA29108@suse.de>
	<d6c5d7290803131112o71a0121dhce7a6d6c60277e6@mail.gmail.com>
	<a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com>
Message-ID: <d6c5d7290803131231k29761ad7i908fe667faa2f3c4@mail.gmail.com>

This sounds like some thing I'd be able to do though I'm not sure of
the best way to sand box wine away from the system.  What is the best
way to go about this, would simply creating a new user be enough to
protect a system, or does a vm have to be used?

I have a bit of free time tomorrow so I'll make a start and see where I get.

On Fri, Mar 14, 2008 at 6:11 AM, Dan Kegel <dank at kegel.com> wrote:
> On 3/13/08, Edward Savage <epssyis at gmail.com> wrote:
>  >  Just as a silly outside thought; would it be worth keeping track of
>  >  some of the bigger windows virus so we can see how good wine
>  >  compatibiliy with all of the nitty gritty bugs of windows really is?
>  >  Also this would allow us to identify dangerous areas in wine were the
>  >  ability to affect the linux environment cross over.
>
>  Yes, it would be good to keep an eye on that.
>
>  Ideally we'd have an automated script to set up
>  a petri dish, try out a bunch of known infectious agents,
>  and see which one of them reproduce.
>
>  I haven't done anything like that myself, but I imagine
>  a good place to start might be to script an instance
>  of mozilla or ies4linux visiting the top sites listed at
>  http://www.stopbadware.org/home/topsites
>  and see if they're able to modify the system at all.
>  - Dan
>


From dank at kegel.com  Thu Mar 13 14:35:24 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 13 Mar 2008 11:35:24 -0800
Subject: wine virus story
In-Reply-To: <d6c5d7290803131231k29761ad7i908fe667faa2f3c4@mail.gmail.com>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
	<20080313162737.GA29108@suse.de>
	<d6c5d7290803131112o71a0121dhce7a6d6c60277e6@mail.gmail.com>
	<a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com>
	<d6c5d7290803131231k29761ad7i908fe667faa2f3c4@mail.gmail.com>
Message-ID: <a71bd89a0803131235s272b9ab8o649d0eacaac82209@mail.gmail.com>

On 3/13/08, Edward Savage <epssyis at gmail.com> wrote:
> This sounds like some thing I'd be able to do though I'm not sure of
>  the best way to sand box wine away from the system.  What is the best
>  way to go about this, would simply creating a new user be enough to
>  protect a system, or does a vm have to be used?

I would totally do it in a virtual machine.


From arbuckle911 at gmail.com  Thu Mar 13 14:36:25 2008
From: arbuckle911 at gmail.com (Christopher Harvey)
Date: Thu, 13 Mar 2008 15:36:25 -0400
Subject: wine virus story
In-Reply-To: <a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>	<20080313162737.GA29108@suse.de>	<d6c5d7290803131112o71a0121dhce7a6d6c60277e6@mail.gmail.com>
	<a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com>
Message-ID: <47D98239.2020200@gmail.com>

Dan Kegel wrote:
> On 3/13/08, Edward Savage <epssyis at gmail.com> wrote:
>   
>>  Just as a silly outside thought; would it be worth keeping track of
>>  some of the bigger windows virus so we can see how good wine
>>  compatibiliy with all of the nitty gritty bugs of windows really is?
>>  Also this would allow us to identify dangerous areas in wine were the
>>  ability to affect the linux environment cross over.
>>     
>
> Yes, it would be good to keep an eye on that.
>
> Ideally we'd have an automated script to set up
> a petri dish, try out a bunch of known infectious agents,
> and see which one of them reproduce.
>
> I haven't done anything like that myself, but I imagine
> a good place to start might be to script an instance
> of mozilla or ies4linux visiting the top sites listed at
> http://www.stopbadware.org/home/topsites
> and see if they're able to modify the system at all.
> - Dan
>
>
>
>   
I like that idea. are there any linux tools to watch files for changes? 
Or maybe have linux watch the wine processes for their file changing 
activities.


From vit.hrachovy at sandbox.cz  Thu Mar 13 14:46:42 2008
From: vit.hrachovy at sandbox.cz (=?ISO-8859-2?Q?V=EDt_Hrachov=FD?=)
Date: Thu, 13 Mar 2008 20:46:42 +0100
Subject: wine virus story
In-Reply-To: <47D98239.2020200@gmail.com>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>	<20080313162737.GA29108@suse.de>	<d6c5d7290803131112o71a0121dhce7a6d6c60277e6@mail.gmail.com>	<a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com>
	<47D98239.2020200@gmail.com>
Message-ID: <47D984A2.3070802@sandbox.cz>

> I like that idea. are there any linux tools to watch files for changes? 
> Or maybe have linux watch the wine processes for their file changing 
> activities.

I've used tripwire for a long time.

fschange looks promising, builds upon inotify, but I've never used it yet:

http://stefan.buettcher.org/cs/fschange/index.html

Cheers
Vit


From research at science.su  Thu Mar 13 14:49:11 2008
From: research at science.su (L. Rahyen)
Date: Thu, 13 Mar 2008 19:49:11 +0000
Subject: wine virus story
In-Reply-To: <d6c5d7290803131231k29761ad7i908fe667faa2f3c4@mail.gmail.com>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
	<a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com>
	<d6c5d7290803131231k29761ad7i908fe667faa2f3c4@mail.gmail.com>
Message-ID: <200803131949.11704.research@science.su>

On Thursday March 13 2008 19:31:49 Edward Savage wrote:
> This sounds like some thing I'd be able to do though I'm not sure of
> the best way to sand box wine away from the system.  What is the best
> way to go about this, would simply creating a new user be enough to
> protect a system, or does a vm have to be used?

	Separate user is enough if you don't have world writable files in your 
system. And of course user for such purpose shouldn't be in group(s) that 
have write access to your personal or system files.
	If you are unsure use VirtualBox ( http://virtualbox.org/ ) - it's free and 
open-source, or VMWare ( http://vmware.com/ ) - it's not free.
	On Debian (and probably Ubuntu) you can install VirtualBox by running "sudo 
apt-get install virtualbox".
	I do not recommend to use QEmu because it's less user friendly than 
VirtualBox (BTW, VirtualBox is based on QEmu).


From julliard at winehq.org  Thu Mar 13 14:52:11 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 13 Mar 2008 20:52:11 +0100
Subject: mshtml: Return full patch in res protocol's secure URL.
In-Reply-To: <47D91FE7.4030901@codeweavers.com> (Jacek Caban's message of
	"Thu, 13 Mar 2008 13:36:55 +0100")
References: <47D91FE7.4030901@codeweavers.com>
Message-ID: <871w6ez9jo.fsf@wine.dyndns.org>

Jacek Caban <jacek at codeweavers.com> writes:

> ---
>  dlls/mshtml/protocol.c       |   31 +++++++++++++++++++++----------
>  dlls/mshtml/tests/protocol.c |   41
> ++++++++++++++++++++++++++++++++++++++++-
>  2 files changed, 61 insertions(+), 11 deletions(-)

This breaks the tests:

../../../tools/runtest -q -P wine -M urlmon.dll -T ../../.. -p urlmon_test.exe.so misc.c && touch misc.ok
misc.c:775: Test failed: [0] size=39, expected 9
misc.c:777: Test failed: [0] wrong secid
make: *** [misc.ok] Error 2

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Thu Mar 13 14:53:06 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 13 Mar 2008 20:53:06 +0100
Subject: fonts: Start of the Symbol font.
In-Reply-To: <8763vqzdfq.fsf@totally-fudged-out-message-id> (Huw Davies's
	message of "Thu, 13 Mar 2008 17:05:38 +0000")
References: <8763vqzdfq.fsf@totally-fudged-out-message-id>
Message-ID: <87wso6xuxp.fsf@wine.dyndns.org>

Huw Davies <huw at codeweavers.com> writes:

> ---
>  fonts/Makefile.in |    1 +
>  fonts/symbol.sfd  |   83 +++++++++++++++++++++++++++++++++++++++++++++++++++++
>  2 files changed, 84 insertions(+), 0 deletions(-)
>  create mode 100644 fonts/symbol.sfd

It fails make test for me:

../../../tools/runtest -q -P wine -M gdi32.dll -T ../../.. -p gdi32_test.exe.so font.c && touch font.ok
font.c:1357: Test failed: no fonts should be enumerated: Symbol ANSI_CHARSET
font.c:1405: Test failed: SYMBOL_CHARSET should NOT enumerate ANSI_CHARSET for Symbol
font.c:1407: Test failed: SYMBOL_CHARSET should enumerate SYMBOL_CHARSET for Symbol
font.c:1447: Test failed: no fonts enumerated: Symbol SYMBOL_CHARSET
font.c:1458: Test failed: SYMBOL_CHARSET should enumerate SYMBOL_CHARSET for Symbol
font.c:1639: Test failed: A: tmLastChar for Symbol 20 != ff
font.c:1671: Test failed: W: tmFirstChar for Symbol 00 != 30
make: *** [font.ok] Error 7

-- 
Alexandre Julliard
julliard at winehq.org


From dank at kegel.com  Thu Mar 13 14:53:41 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 13 Mar 2008 11:53:41 -0800
Subject: wine virus story
In-Reply-To: <200803131949.11704.research@science.su>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
	<a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com>
	<d6c5d7290803131231k29761ad7i908fe667faa2f3c4@mail.gmail.com>
	<200803131949.11704.research@science.su>
Message-ID: <a71bd89a0803131253y10b5b459n73bdff9ba3be93e@mail.gmail.com>

On 3/13/08, L. Rahyen <research at science.su> wrote:
>         Separate user is enough if you don't have world writable files in your
>  system.

No, because the malware could root your Linux system
using a local priv escalation exploit.  You really want a
totally isolated sandbox.
- Dan


From sgoth at roath.org  Thu Mar 13 13:52:44 2008
From: sgoth at roath.org (Sebastian Goth)
Date: Thu, 13 Mar 2008 19:52:44 +0100
Subject: Configure not throwing error for missing asoundlib.h
Message-ID: <200803131953.05712.sgoth@roath.org>

Hi,
even with "--with-alsa" there is no report on a missing asoundlib.h.
This is a bit inconvenient since other missing libs are reported.

Valid for wine-0.9.57

Sebastian
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080313/454314df/attachment.pgp 

From thestig at google.com  Thu Mar 13 14:58:13 2008
From: thestig at google.com (Lei Zhang)
Date: Thu, 13 Mar 2008 12:58:13 -0700
Subject: wine virus story
In-Reply-To: <200803131949.11704.research@science.su>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
	<a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com>
	<d6c5d7290803131231k29761ad7i908fe667faa2f3c4@mail.gmail.com>
	<200803131949.11704.research@science.su>
Message-ID: <558b2f5c0803131258j3e45b501keadd68cee3e7e565@mail.gmail.com>

On Thu, Mar 13, 2008 at 12:49 PM, L. Rahyen <research at science.su> wrote:
>         Separate user is enough if you don't have world writable files in your
>  system. And of course user for such purpose shouldn't be in group(s) that
>  have write access to your personal or system files.
>         If you are unsure use VirtualBox ( http://virtualbox.org/ ) - it's free and
>  open-source, or VMWare ( http://vmware.com/ ) - it's not free.
>         On Debian (and probably Ubuntu) you can install VirtualBox by running "sudo
>  apt-get install virtualbox".
>         I do not recommend to use QEmu because it's less user friendly than
>  VirtualBox (BTW, VirtualBox is based on QEmu).
>

VMWare workstation is not free, but you can get both VMWare server and
VMWare player at no charge. It's  available from the Canonical
repositories as well:
http://archive.canonical.com/ubuntu/pool/partner/v/vmware-server/


From dank at kegel.com  Thu Mar 13 15:30:40 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 13 Mar 2008 12:30:40 -0800
Subject: Please vote for your favorite Wine-1.0 bugs...
Message-ID: <a71bd89a0803131330j1c55e5c1k97db527ffa509637@mail.gmail.com>

The 1.0 release of Wine is tenatively scheduled for
the 15th anniversary of the project (roughly 1 June 2008,
if you take Dan Dulitz' message as the start of the project,
http://groups.google.com/group/comp.os.linux/msg/7f92abdf494ab8b3 )

Over the last six or so months, the wine developers have
identified 180 or so bugs as possibly being worth fixing
before the 1.0 release.

63 of the Wine 1.0 bugs have already been fixed:
http://bugs.winehq.org/buglist.cgi?target_milestone=1.0.0&resolution=FIXED

101 are left to fix:
http://bugs.winehq.org/buglist.cgi?target_milestone=1.0.0&resolution=---

We can't fix all of these before the 1.0 release; we'll have to
leave some for later.
If you want a say in which of these bugs get fixed sooner,
please vote for your favorite bugs.  To do this,
sign into Bugzilla (you need to register, but that's easy),
pull up your favorite bug from the above list,
and click on the 'Vote for this bug' link on the bug.

We can't promise we'll fix the bugs with the most votes,
but knowing which ones are most popular can't hurt.

Thanks,
Dan


From us at edmeades.me.uk  Thu Mar 13 16:19:17 2008
From: us at edmeades.me.uk (Ann & Jason Edmeades)
Date: Thu, 13 Mar 2008 21:19:17 -0000
Subject: Clipping regions on windows and Expose Xevents issue
In-Reply-To: <87iqzqzx5z.fsf@wine.dyndns.org>
Message-ID: <000201c8854f$e97f3e00$1001a8c0@JasonsPC>

Thanks Alexandre,

(BTW This createwindow / movewindow / draw to window is all occurring in
LBUTTONDOWN processing)

>> 1. MoveWindow doesn't update the DCEx clip_region region, and hence when
the
>> visible region changes, it is merged with the clip region and since there
is
>> no overlap the visible region is empty so all subsequent processing ends.
>>
>> Q: Whats the best way to handle that - I was tempted to reset the
>> clip_region to the visible_region (as MSDN sort of implies - you cant
really
>> query them so tests don't help much here) in a movewindow call

>You can query the visible region, so with well-chosen dimensions and
>clip region it shouldn't be too hard to write test cases. Make sure you
>test both GetDCEx with an explicit clip region and BeginPaint, the
>behavior is probably different

The difficulty here is the inability to directly query the concealed (within
the struct DCE) clip_rgn not the visible region. For example, GetClipRgn
returns dc->hClipRgn, whereas the dce clip_rgn is internal to user32
painting.c. The only call I can see replaces the region with GetDCEx? 

What kind of test did you have in mind - The only idea I had was something
like CreateWindow at 100,100, begin paint, MoveWindow to 50,50, FillRect
into red, endpaint, then read it back to see if it really is read?


>> Q: This is getting way outside my understanding of X events, but
shouldn't
>> the Expose event for the child (popup) window be processed before
returning
>> from CreateWindow with style WS_VISIBLE?

>The way we hack around the asynchronous events is by checking for expose
>events in UpdateWindow, but of course if the app doesn't even use that
>it won't help. And on a slow connection the expose events will always
>arrive too late anyway. We'd need to explicitly wait for the event, but
>that would hurt badly on slow connections.

The app is processing in a WM_LBUTTONDOWN, and just creates a window and
draws to it immediately, and the windows message loop wont redraw it. Is
there any workaround for this or is it going to be an impossibility to get
it working? (I wondered, for example, if we can do anything about ignoring
the first expose if the window was created as visible, or removing the
rdw_erase if the window had explicitly painted itself before the first
event)?

Jason




From scott at open-vote.org  Thu Mar 13 17:54:43 2008
From: scott at open-vote.org (Scott Ritchie)
Date: Thu, 13 Mar 2008 15:54:43 -0700
Subject: GSoC
In-Reply-To: <47D96054.6050301@gmail.com>
References: <1dd4d8b40803130731r6681a702x9112f3abac8b795a@mail.gmail.com>
	<47D96054.6050301@gmail.com>
Message-ID: <47D9B0B3.7050205@open-vote.org>

Christopher Harvey wrote:
> I've had a few ideas that I thought of on my own, but now I'm starting 
> to see they perhaps aren't as useful as the ideas thought of by current 
> developers, but I'll float it out there one last time. I thought it 
> would be cool to create a wine GUI overlay for games, exactly like 
> nvPerfHUD. The thing about doing it in wine that makes it better than 
> nvPerHUD is the fact the to use nvPerfHUD the apps have to give 
> permission for nvPerHUD to run on them. A wine version would actually be 
> able to force every single 3d app, opengl or directX to output nvPerfHUD 
> like output. Anyway, just a thought. Would I be able to apply for both 
> of these projects and pick one last minute?
> Thanks,
> Chris.
> 

After talking about the concept a bit at the Ubuntu Developer Summit, I
really don't like the idea of a "Wine GUI" just for running Wine
applications.  From the user's persepctive, installers for Wine
applications shouldn't be substantially different from any old Linux
installer - they just click on them, it adds something to their
applications menu, and from then on they can run it from there.

Most of the futzing with applications, like messing around with native
dlls in winecfg, shouldn't have to be done at all.  The same goes with
editing the registry.

Configuration we'll never be able to eliminate completely, like
selecting the windows version, should ultimately be done through an
intuitive place and not some central "Wine configuration" program.  For
instance, I should be able to right click a Windows application, select
properties, and then change the Windows version from there.

So, yes, I agree.  Winecfg is ugly and inadequate for the kind of
configuration our users are doing now.  But before we put too much
effort into sprucing up Winecfg, let's instead talk about how feasible
it is to make it unneeded in the first place.


Thanks,
Scott Ritchie


From dsh at linux.ucla.edu  Thu Mar 13 18:04:19 2008
From: dsh at linux.ucla.edu (Dan Hipschman)
Date: Thu, 13 Mar 2008 16:04:19 -0700
Subject: [3/6] kernel32: Add the MOVEFILE_WRITE_THROUGH flag (stub) for
	MoveFileEx.
In-Reply-To: <20080313230032.GO4608@linux.ucla.edu>
References: <20080313230032.GO4608@linux.ucla.edu>
Message-ID: <20080313230419.GP4608@linux.ucla.edu>


Yup, ignore.

On Thu, Mar 13, 2008 at 04:00:32PM -0700, Dan Hipschman wrote:
> 
> NOTE: I thought I sent this with the other five patches, but I don't see
> it.  Sorry if it ends up being a resend.
> 
> This feature of MoveFileEx is technically needed by IBackgroundCopyJob_Complete
> to return the correct status if it has to move temp files across volumes, but
> since it's a very small point, I'm just adding the flag so we can compile with
> it.
> 
> ---
>  dlls/kernel32/path.c |    3 +++
>  include/winbase.h    |    1 +
>  2 files changed, 4 insertions(+), 0 deletions(-)
> 
> diff --git a/dlls/kernel32/path.c b/dlls/kernel32/path.c
> index f0f713f..aad260f 100644
> --- a/dlls/kernel32/path.c
> +++ b/dlls/kernel32/path.c
> @@ -1010,6 +1010,9 @@ BOOL WINAPI MoveFileWithProgressW( LPCWSTR source, LPCWSTR dest,
>      if (!dest)
>          return DeleteFileW( source );
>  
> +    if (flag & MOVEFILE_WRITE_THROUGH)
> +        FIXME("MOVEFILE_WRITE_THROUGH unimplemented\n");
> +
>      /* check if we are allowed to rename the source */
>  
>      if (!RtlDosPathNameToNtPathName_U( source, &nt_name, NULL, NULL ))
> diff --git a/include/winbase.h b/include/winbase.h
> index e2ee515..f3130a0 100644
> --- a/include/winbase.h
> +++ b/include/winbase.h
> @@ -845,6 +845,7 @@ typedef DWORD (CALLBACK *LPPROGRESS_ROUTINE)(LARGE_INTEGER, LARGE_INTEGER, LARGE
>  #define MOVEFILE_REPLACE_EXISTING       0x00000001
>  #define MOVEFILE_COPY_ALLOWED           0x00000002
>  #define MOVEFILE_DELAY_UNTIL_REBOOT     0x00000004
> +#define MOVEFILE_WRITE_THROUGH          0x00000008
>  
>  #define REPLACEFILE_WRITE_THROUGH       0x00000001
>  #define REPLACEFILE_IGNORE_MERGE_ERRORS 0x00000002
> 
> 


From jjmckenzie51 at sprintpcs.com  Thu Mar 13 22:36:04 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Thu, 13 Mar 2008 20:36:04 -0700
Subject: [Wine] How should I educate myself in order to code for WineHQ?
In-Reply-To: <a71bd89a0803121721w3ec8b82agcb84d9bad50cd972@mail.gmail.com>
References: <1205367112.m2f.1159@forum.winehq.org>
	<a71bd89a0803121721w3ec8b82agcb84d9bad50cd972@mail.gmail.com>
Message-ID: <47D9F2A4.2000500@sprintpcs.com>

Dan Kegel wrote:
> On Wed, Mar 12, 2008 at 5:11 PM, jingo811 <wineforum-user at winehq.org> wrote:
>   
>>  So I was wondering can you give me an ordered to-do-list in becoming a Code Monkey for WineHQ?
>>
>>         Like do I have to know both C and C++ to code for Wine.
>>     
>
> Nope, just C.  Go through "The C Programming Language" by
> Kernighan and Ritchie, and do all the exercizes.
>
>   
If you can make it through the book, you are very good and will work 
well for the Wine project.

BTW, anyone want a spare copy of this book?

James




From dmitry at codeweavers.com  Thu Mar 13 23:44:31 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Fri, 14 Mar 2008 12:44:31 +0800
Subject: [Wine] How should I educate myself in order to code for WineHQ?
References: <1205367112.m2f.1159@forum.winehq.org><a71bd89a0803121721w3ec8b82agcb84d9bad50cd972@mail.gmail.com>
	<47D9F2A4.2000500@sprintpcs.com>
Message-ID: <00b701c8858e$1999cfe0$a600fea9@DMITRY>

"James McKenzie" <jjmckenzie51 at sprintpcs.com> wrote:

> Dan Kegel wrote:
>> On Wed, Mar 12, 2008 at 5:11 PM, jingo811 <wineforum-user at winehq.org> wrote:
>>   
>>>  So I was wondering can you give me an ordered to-do-list in becoming a Code Monkey for WineHQ?
>>>
>>>         Like do I have to know both C and C++ to code for Wine.
>>>     
>>
>> Nope, just C.  Go through "The C Programming Language" by
>> Kernighan and Ritchie, and do all the exercizes.
>>
>>   
> If you can make it through the book, you are very good and will work 
> well for the Wine project.
> 
> BTW, anyone want a spare copy of this book?

Unfortunately that's not that simple. Wine programming requires Windows
API programming skills as well, one needs an experience of using at least
APIs for the component(s) of Wine he/she is going to write the code for,
and a good knowledge how it's supposed to work/operate internally. One
should be prepared to write lots of tests to investigate/clarify behaviour
described/missing in MSDN.

-- 
Dmitry.


From epssyis at gmail.com  Fri Mar 14 03:22:05 2008
From: epssyis at gmail.com (Edward Savage)
Date: Fri, 14 Mar 2008 19:22:05 +1100
Subject: wine virus story
In-Reply-To: <558b2f5c0803131258j3e45b501keadd68cee3e7e565@mail.gmail.com>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
	<a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com>
	<d6c5d7290803131231k29761ad7i908fe667faa2f3c4@mail.gmail.com>
	<200803131949.11704.research@science.su>
	<558b2f5c0803131258j3e45b501keadd68cee3e7e565@mail.gmail.com>
Message-ID: <d6c5d7290803140122x10d45044q88f1e0c388c3f3d2@mail.gmail.com>

I've made a good start on a script that grabs a list of virus from
around the internet and attempts to run each one and then reports
changes in wine and then resets the wine structure.  I'll be testing
with the above two file change tools to see which one works best (I
was just using a small one from freshmeat) though I'm interested as to
what else I should be looking for in results? At the moment I'm just
reporting crash details and file changes then using human inspection
to see how well it did.

I just thought it might be a good idea to build a mailing list that
goes to the local (vm) system then check if the local systems mail was
spammed and report that.  Looking for more suggestions like this.

Also I'm using qemu running debian at the moment.  Of course the
script wont care which vm you use.  For those thinking that qemu is
painful to use install qemulator and the kqemu kernel package and
you're set.  Though I'm not really sure this is the sort of thing we
want new users to be attempting so easy of use of the vm shouldn't be
important.

For those interested I've tested the top five virus listed on symantec
and none of them have caused any serious issues, all malware I've
tried has failed completely due to the lack of IE.  I'll be setting up
two build environments in the script, one with IE and one with native
wine claiming ie (or not depending on responces).

Finally, where would be the right place to report the results? Appdb
seems like a strange place to be putting results of this nature. :P

Edward

On Fri, Mar 14, 2008 at 6:58 AM, Lei Zhang <thestig at google.com> wrote:
> On Thu, Mar 13, 2008 at 12:49 PM, L. Rahyen <research at science.su> wrote:
>  >         Separate user is enough if you don't have world writable files in your
>  >  system. And of course user for such purpose shouldn't be in group(s) that
>  >  have write access to your personal or system files.
>  >         If you are unsure use VirtualBox ( http://virtualbox.org/ ) - it's free and
>  >  open-source, or VMWare ( http://vmware.com/ ) - it's not free.
>  >         On Debian (and probably Ubuntu) you can install VirtualBox by running "sudo
>  >  apt-get install virtualbox".
>  >         I do not recommend to use QEmu because it's less user friendly than
>  >  VirtualBox (BTW, VirtualBox is based on QEmu).
>  >
>
>  VMWare workstation is not free, but you can get both VMWare server and
>  VMWare player at no charge. It's  available from the Canonical
>  repositories as well:
>  http://archive.canonical.com/ubuntu/pool/partner/v/vmware-server/
>
>
>


From dmitry at codeweavers.com  Fri Mar 14 03:40:23 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Fri, 14 Mar 2008 16:40:23 +0800
Subject: wine virus story
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com><a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com><d6c5d7290803131231k29761ad7i908fe667faa2f3c4@mail.gmail.com><200803131949.11704.research@science.su><558b2f5c0803131258j3e45b501keadd68cee3e7e565@mail.gmail.com>
	<d6c5d7290803140122x10d45044q88f1e0c388c3f3d2@mail.gmail.com>
Message-ID: <028301c885af$0d59d060$a600fea9@DMITRY>

"Edward Savage" <epssyis at gmail.com> wrote:

> Finally, where would be the right place to report the results? Appdb
> seems like a strange place to be putting results of this nature. :P

Since Windows viruses use Win32 APIs that's not surprising that they
work under Wine. What you are doing doesn't have IMO any practical means,
except probably hurting Wine by creating an image of Wine as a platform
for Windows viruses under Linux (which is not true).

-- 
Dmitry.


From epssyis at gmail.com  Fri Mar 14 03:59:45 2008
From: epssyis at gmail.com (Edward Savage)
Date: Fri, 14 Mar 2008 19:59:45 +1100
Subject: wine virus story
In-Reply-To: <028301c885af$0d59d060$a600fea9@DMITRY>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
	<a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com>
	<d6c5d7290803131231k29761ad7i908fe667faa2f3c4@mail.gmail.com>
	<200803131949.11704.research@science.su>
	<558b2f5c0803131258j3e45b501keadd68cee3e7e565@mail.gmail.com>
	<d6c5d7290803140122x10d45044q88f1e0c388c3f3d2@mail.gmail.com>
	<028301c885af$0d59d060$a600fea9@DMITRY>
Message-ID: <d6c5d7290803140159p71faea93v39f560ae46989391@mail.gmail.com>

The assumption is that since win32 virus are so windows specific and
require so many small windows bugs and tweaks to run that they are a
good test bed to see how good windows compatibility really is.  In
general they are also rather badly written so finding linux-wine
compatibility issues should also be possible as well, we know they run
under windows so if they don't under wine then that is an issue that
should be looked at that could also fix other legit applications.

Besides I hardly think that is part of an image that doesn't already
exist or is even bad for the project.  When I've seen wine in the
media (a good number of times now) the comment has been, paraphrased,
'so good that it can even run some windows virus'.

I would suggest that the real media damage would come from any virus
running that we don't know about and then root kits or wipes some poor
newbies system.  I can see the slashdot headline now, "Users under
threat from unknown virus risks when using Wine".

I'm happy to just do this as a pet project and maybe report findings
for wwn or similar but in general I think it'd be some thing worth at
least keeping track of officially.

On Fri, Mar 14, 2008 at 7:40 PM, Dmitry Timoshkov
<dmitry at codeweavers.com> wrote:
> "Edward Savage" <epssyis at gmail.com> wrote:
>
>
> > Finally, where would be the right place to report the results? Appdb
>  > seems like a strange place to be putting results of this nature. :P
>
>  Since Windows viruses use Win32 APIs that's not surprising that they
>  work under Wine. What you are doing doesn't have IMO any practical means,
>  except probably hurting Wine by creating an image of Wine as a platform
>  for Windows viruses under Linux (which is not true).
>
>  --
>  Dmitry.
>


From dotancohen at gmail.com  Thu Mar 13 15:39:49 2008
From: dotancohen at gmail.com (Dotan Cohen)
Date: Thu, 13 Mar 2008 22:39:49 +0200
Subject: [Wine] Please vote for your favorite Wine-1.0 bugs...
In-Reply-To: <a71bd89a0803131330j1c55e5c1k97db527ffa509637@mail.gmail.com>
References: <a71bd89a0803131330j1c55e5c1k97db527ffa509637@mail.gmail.com>
Message-ID: <880dece00803131339k325797acre109f66af1d7514c@mail.gmail.com>

On 13/03/2008, Dan Kegel <dank at kegel.com> wrote:
> The 1.0 release of Wine is tenatively scheduled for
>  the 15th anniversary of the project (roughly 1 June 2008,
>  if you take Dan Dulitz' message as the start of the project,
>  http://groups.google.com/group/comp.os.linux/msg/7f92abdf494ab8b3 )
>
>  Over the last six or so months, the wine developers have
>  identified 180 or so bugs as possibly being worth fixing
>  before the 1.0 release.
>
>  63 of the Wine 1.0 bugs have already been fixed:
>  http://bugs.winehq.org/buglist.cgi?target_milestone=1.0.0&resolution=FIXED
>
>  101 are left to fix:
>  http://bugs.winehq.org/buglist.cgi?target_milestone=1.0.0&resolution=---
>
>  We can't fix all of these before the 1.0 release; we'll have to
>  leave some for later.
>  If you want a say in which of these bugs get fixed sooner,
>  please vote for your favorite bugs.  To do this,
>  sign into Bugzilla (you need to register, but that's easy),
>  pull up your favorite bug from the above list,
>  and click on the 'Vote for this bug' link on the bug.
>
>  We can't promise we'll fix the bugs with the most votes,
>  but knowing which ones are most popular can't hurt.
>
>  Thanks,
>
> Dan

Thank _you_ Dan. I'm heading over there now.

Dotan Cohen

http://what-is-what.com
http://gibberish.co.il
?-?-?-?-?-?-?-?-?-?-?-?-?-?-?-?-?-?-?-?-?-?-?-?-?-?-?

A: Because it messes up the order in which people normally read text.
Q: Why is top-posting such a bad thing?

From dmitry at codeweavers.com  Fri Mar 14 04:15:13 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Fri, 14 Mar 2008 17:15:13 +0800
Subject: wine virus story
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com><a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com><d6c5d7290803131231k29761ad7i908fe667faa2f3c4@mail.gmail.com><200803131949.11704.research@science.su><558b2f5c0803131258j3e45b501keadd68cee3e7e565@mail.gmail.com><d6c5d7290803140122x10d45044q88f1e0c388c3f3d2@mail.gmail.com><028301c885af$0d59d060$a600fea9@DMITRY>
	<d6c5d7290803140159p71faea93v39f560ae46989391@mail.gmail.com>
Message-ID: <02a401c885b3$ead113f0$a600fea9@DMITRY>

"Edward Savage" <epssyis at gmail.com> wrote:

> The assumption is that since win32 virus are so windows specific and
> require so many small windows bugs and tweaks to run that they are a
> good test bed to see how good windows compatibility really is.  In
> general they are also rather badly written so finding linux-wine
> compatibility issues should also be possible as well, we know they run
> under windows so if they don't under wine then that is an issue that
> should be looked at that could also fix other legit applications.

If you have plenty of free time in your hands it would be much better
spent with testing real applications, or rather triaging bugs in Wine
bugzilla.

> Besides I hardly think that is part of an image that doesn't already
> exist or is even bad for the project.  When I've seen wine in the
> media (a good number of times now) the comment has been, paraphrased,
> 'so good that it can even run some windows virus'.
> 
> I would suggest that the real media damage would come from any virus
> running that we don't know about and then root kits or wipes some poor
> newbies system.  I can see the slashdot headline now, "Users under
> threat from unknown virus risks when using Wine".
> 
> I'm happy to just do this as a pet project and maybe report findings
> for wwn or similar but in general I think it'd be some thing worth at
> least keeping track of officially.

That's exactly what hurts Wine: a misguided report of a clueless user,
and WWN is not the place for it neither.

-- 
Dmitry.


From epssyis at gmail.com  Fri Mar 14 04:17:10 2008
From: epssyis at gmail.com (Edward Savage)
Date: Fri, 14 Mar 2008 20:17:10 +1100
Subject: wine virus story
In-Reply-To: <02a401c885b3$ead113f0$a600fea9@DMITRY>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
	<a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com>
	<d6c5d7290803131231k29761ad7i908fe667faa2f3c4@mail.gmail.com>
	<200803131949.11704.research@science.su>
	<558b2f5c0803131258j3e45b501keadd68cee3e7e565@mail.gmail.com>
	<d6c5d7290803140122x10d45044q88f1e0c388c3f3d2@mail.gmail.com>
	<028301c885af$0d59d060$a600fea9@DMITRY>
	<d6c5d7290803140159p71faea93v39f560ae46989391@mail.gmail.com>
	<02a401c885b3$ead113f0$a600fea9@DMITRY>
Message-ID: <d6c5d7290803140217i1be87376te9db38081b6ec39d@mail.gmail.com>

>  That's exactly what hurts Wine: a misguided report of a clueless user,
>  and WWN is not the place for it neither.
>

Thanks.


From dmitry at codeweavers.com  Fri Mar 14 06:12:59 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Fri, 14 Mar 2008 19:12:59 +0800
Subject: msvcrt: Implement wcscat_s
References: <frdk13$s7e$1@ger.gmane.org>
Message-ID: <034e01c885c4$5e6746d0$a600fea9@DMITRY>

"Alistair Leslie-Hughes" <leslie_alistair at hotmail.com> wrote:

> +@ cdecl wcscat_s(ptr long wstr) MSVCRT_wcscat_s

The first parameter has type wstr. Also, please check actual
buffer contents in the tests not just the return values.

-- 
Dmitry.


From julliard at winehq.org  Fri Mar 14 07:05:45 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 14 Mar 2008 13:05:45 +0100
Subject: regedit: stdin is not seekable so do not try to seek the input
	file if it is not seekable
In-Reply-To: <47DA1F74.302@codeweavers.com> (Aric Stewart's message of "Fri,
	14 Mar 2008 15:47:16 +0900")
References: <47DA1F74.302@codeweavers.com>
Message-ID: <87prtxy0h2.fsf@wine.dyndns.org>

Aric Stewart <aric at codeweavers.com> writes:

> ---
>  programs/regedit/regedit.c |    2 +-
>  programs/regedit/regproc.c |   19 +++++++++++--------
>  programs/regedit/regproc.h |    2 +-
>  3 files changed, 13 insertions(+), 10 deletions(-)

We shouldn't need to seek at all, instead it should be easy to test the
first two bytes of the first line before processing it.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Mar 14 07:25:42 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 14 Mar 2008 13:25:42 +0100
Subject: [PATCH] (RESUBMIT) wininet: restructure for better return checking
In-Reply-To: <87tzjaxonu.fsf@totally-fudged-out-message-id> (Marcus Meissner's
	message of "Thu, 13 Mar 2008 19:23:24 +0100")
References: <87tzjaxonu.fsf@totally-fudged-out-message-id>
Message-ID: <87lk4lxzjt.fsf@wine.dyndns.org>

Marcus Meissner <marcus at jet.franken.de> writes:

> Coverity spotted some potential lpwhh NULL usage
> after NULL checking.
>
> I restructured the code a bit to check lpwhh
> earlier and return at that time. Also removed a
> unnecessary cast.

This doesn't work:

../../../tools/runtest -q -P wine -M wininet.dll -T ../../.. -p wininet_test.exe.so internet.c && touch internet.ok
internet.c:118: Test failed: InternetSetOptionA failed 6, expected ERROR_INTERNET_INVALID_OPTION
make[2]: *** [internet.ok] Error 1

-- 
Alexandre Julliard
julliard at winehq.org


From aric at codeweavers.com  Fri Mar 14 07:49:21 2008
From: aric at codeweavers.com (Aric Stewart)
Date: Fri, 14 Mar 2008 21:49:21 +0900
Subject: regedit: stdin is not seekable so do not try to seek the input
	file if it is not seekable
In-Reply-To: <87prtxy0h2.fsf@wine.dyndns.org>
References: <47DA1F74.302@codeweavers.com> <87prtxy0h2.fsf@wine.dyndns.org>
Message-ID: <47DA7451.7080103@codeweavers.com>

True, through I did not add the code that was doing the seeking so i 
tried to not be too intrusive.

Should I rework the way we do the line processing to be able to do this 
then?

-aric

Alexandre Julliard wrote:
> Aric Stewart <aric at codeweavers.com> writes:
> 
>> ---
>>  programs/regedit/regedit.c |    2 +-
>>  programs/regedit/regproc.c |   19 +++++++++++--------
>>  programs/regedit/regproc.h |    2 +-
>>  3 files changed, 13 insertions(+), 10 deletions(-)
> 
> We shouldn't need to seek at all, instead it should be easy to test the
> first two bytes of the first line before processing it.
> 


From paul.vriens.wine at gmail.com  Fri Mar 14 08:03:31 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Fri, 14 Mar 2008 14:03:31 +0100
Subject: Running services in WINE?
In-Reply-To: <47D8C6B9.8030607@procyongames.com>
References: <47D82648.30208@procyongames.com>	<b130c85e0803121939x3f562627pe3ec5cdeb4f94235@mail.gmail.com>
	<47D8C6B9.8030607@procyongames.com>
Message-ID: <47DA77A3.8060206@gmail.com>

Christopher wrote:
> Maarten Lankhorst wrote:
>> Hi Christopher,
>>
>> 2008/3/12, Christopher <raccoonone at procyongames.com>:
>>   
>>> I've been trying to get MozyHome working on WINE, and have made a little
>>>  progress. However, it seems that the service which Mozy uses won't
>>>  start. Searching a bit I found a thread from a year ago stating that
>>>  services don't work in WINE, but that it was being worked on. Are
>>>  services implemented in WINE now, or if they're not is someone working
>>>  on it who I could help out?
>>>     
>> Services most definitely work now. Some of them you can start manually
>> with "wine net start 'servicename'", however this shouldn't be needed.
>>
>> Cheers,
>> Maarten.
>>
>>
>>   
> Thanks Maarten!
> I tried that, but didn't have anymore luck. The service exits almost 
> immediately, after giving a few fixme messages. Time to do some 
> debugging I guess :)
> 
> Christopher
> 
> 
> 
I've been looking into this and found an issue in Wine that I'm not sure who to 
test or solve yet.

MozyHome creates a key in the Services branch:

System\\CurrentControlSet\\Services\\mozybackup

It than adds a 'Description' value to this key.

A bit later it checks for the service by doing an OpenService. This succeeds on 
Wine but shouldn't.

I've created a simple test that creates the key and some value in it. Doing an 
OpenService fails every time on Windows.

I took another approach whereby I created a proper service (CreateService) and 
checked whether I could do an OpenService. This succeeded every time even after 
deleting the whole key.

What it boils down to is that the service control manager keeps track of the 
services. Only proper service calls can influence the service control manager 
(or a reboot).

So as long as we don't implement some service control manager functionality 
(services.exe?) we could have some issues as with MozyHome.

One approach we could take while we don't have the full functionality is to 
check for the minimal required parameters (value) we need for a service. Would 
that be acceptable?

I think Maarten's patch for CreateService was along those same lines 
(http://source.winehq.org/git/wine.git/?a=commit;h=284f86183cce638ff8fce4023cb76273e979aa09). 
We need to find a better way of checking whether a service is truly installed. 
(and not just some registry keys).

-- 
Cheers,

Paul.


From julliard at winehq.org  Fri Mar 14 08:20:38 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 14 Mar 2008 14:20:38 +0100
Subject: regedit: stdin is not seekable so do not try to seek the input
	file if it is not seekable
In-Reply-To: <47DA7451.7080103@codeweavers.com> (Aric Stewart's message of
	"Fri, 14 Mar 2008 21:49:21 +0900")
References: <47DA1F74.302@codeweavers.com> <87prtxy0h2.fsf@wine.dyndns.org>
	<47DA7451.7080103@codeweavers.com>
Message-ID: <87hcf9xx09.fsf@wine.dyndns.org>

Aric Stewart <aric at codeweavers.com> writes:

> True, through I did not add the code that was doing the seeking so i
> tried to not be too intrusive.
>
> Should I rework the way we do the line processing to be able to do
> this then?

Yes please.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Mar 14 08:27:48 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 14 Mar 2008 14:27:48 +0100
Subject: Clipping regions on windows and Expose Xevents issue
In-Reply-To: <000201c8854f$e97f3e00$1001a8c0@JasonsPC> (Ann & Jason Edmeades's
	message of "Thu, 13 Mar 2008 21:19:17 -0000")
References: <000201c8854f$e97f3e00$1001a8c0@JasonsPC>
Message-ID: <87d4pxxwob.fsf@wine.dyndns.org>

"Ann & Jason Edmeades" <us at edmeades.me.uk> writes:

> The difficulty here is the inability to directly query the concealed (within
> the struct DCE) clip_rgn not the visible region. For example, GetClipRgn
> returns dc->hClipRgn, whereas the dce clip_rgn is internal to user32
> painting.c. The only call I can see replaces the region with GetDCEx? 
>
> What kind of test did you have in mind - The only idea I had was something
> like CreateWindow at 100,100, begin paint, MoveWindow to 50,50, FillRect
> into red, endpaint, then read it back to see if it really is read?

No, nothing like that. You could create say a 100x100 window, a 50x50
region, do GetDCEx with that clip region, then move/resize the window
and check how the DC visible region changes. Then the same thing with
InvalidateRgn+BeginPaint instead of GetDCEx.

> The app is processing in a WM_LBUTTONDOWN, and just creates a window and
> draws to it immediately, and the windows message loop wont redraw it. Is
> there any workaround for this or is it going to be an impossibility to get
> it working? (I wondered, for example, if we can do anything about ignoring
> the first expose if the window was created as visible, or removing the
> rdw_erase if the window had explicitly painted itself before the first
> event)?

We can't know if the app has painted itself, it's quite possible that
the window wasn't mapped yet when it painted, since this can be
intercepted by the window manager. We'd have to buffer the output in a
pixmap before the first expose event.

-- 
Alexandre Julliard
julliard at winehq.org


From tehblunderbuss at gmail.com  Fri Mar 14 10:53:58 2008
From: tehblunderbuss at gmail.com (TheBlunderbuss)
Date: Fri, 14 Mar 2008 10:53:58 -0500
Subject: Wine Security Disclosure
Message-ID: <47DA9F96.70601@gmail.com>

An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080314/57537018/attachment.htm 

From chris.kcat at gmail.com  Fri Mar 14 10:58:47 2008
From: chris.kcat at gmail.com (Chris Robinson)
Date: Fri, 14 Mar 2008 07:58:47 -0800
Subject: quartz: Detect and skip id3v2 header in mpeg splitter
In-Reply-To: <b130c85e0803132101o7100bbe1j38c3002117a78070@mail.gmail.com>
References: <b130c85e0803132101o7100bbe1j38c3002117a78070@mail.gmail.com>
Message-ID: <200803140858.48273.chris.kcat@gmail.com>

On Thursday 13 March 2008 09:01:53 pm Maarten Lankhorst wrote:
> If read from a file source, ID3 v2 tags might be incorrectly parsed by
> the head_check. This patch skips the whole tag altogether.

I'm not sure this is completely correct. The main splitter function detects 
the presense of an MP3 header at the start of a sample it's sending to set 
the sample's sync point attribute. Since the ID3 tag is not a sync point, 
this causes the first sample to not be set as a sync point, and it would be 
unlikely that a following sample would, under normal circumstances, contain 
an MP3 header at the start either. This could cause sensitive codecs to never 
find a sync point.

ACMWrapper wouldn't be affected as it doesn't handle sync points, but other 
native codecs (which do work in Wine) could. Additionally, winemp3.acm may be 
affected by the ID3 tag as it doesn't seem to have code to handle it either.


From zgs at seas.upenn.edu  Fri Mar 14 11:03:04 2008
From: zgs at seas.upenn.edu (Zachary Goldberg)
Date: Fri, 14 Mar 2008 16:03:04 +0000
Subject: Wine Security Disclosure
In-Reply-To: <47DA9F96.70601@gmail.com>
References: <47DA9F96.70601@gmail.com>
Message-ID: <b050a5e70803140903r2601c8b2s1dd88ddf459f32bd@mail.gmail.com>

On Fri, Mar 14, 2008 at 3:53 PM, TheBlunderbuss
<tehblunderbuss at gmail.com> wrote:
>
>      The recent discussion about Windows viruses working through Wine leads
> me to questions about its security.
>  I've heard that using a separate user is alright, and then it isn't
> alright.

Where did you hear that its not alright?  Running wine as a normal
(non-root privs) user is the recommended way to use wine for most
software that you know is legit.

No matter what if your running a program, be it linux or windows (on
wine) it always has the potential to mess up things that the user
running it has access too.  So if you run it as a normal user the
worst it can do is mess up that users files (unless its really really
sneaky and root exploits, but thats another case).  All of your
important system files are owned by root (or they should be...) so as
long as your not running as root it can't break your actual system.



>  That you shouldn't use sudo to login to such a special wine user.
>  That you really should use a virtual machine for total security.

Sure; if your playing with something you know could be nasty the best
guarantee that it won't affect anything in your environment is a
virtual machine.  But for apps that you know are alright, games etc.
then running as a normal user is perfectly fine.

>
>  What's the consensus here? And shouldn't this info be published somewhere,
> in big bold letters?
>
>
http://wiki.winehq.org/FAQ

Part 2 Section 11


-- 
Zachary Goldberg
Computer Science & Engineering
Electrical Captain of Penn Electric Race Team
School of Engineering at the University of Pennsylvania


From thestig at google.com  Fri Mar 14 11:30:38 2008
From: thestig at google.com (Lei Zhang)
Date: Fri, 14 Mar 2008 09:30:38 -0700
Subject: [PATCH] gdiplus: Fix test crash in GdipSaveImageToStream.
In-Reply-To: <1205299560-7537-1-git-send-email-nathan.beckmann@gmail.com>
References: <1205299560-7537-1-git-send-email-nathan.beckmann@gmail.com>
Message-ID: <558b2f5c0803140930s212f9011g9458090fa1021871@mail.gmail.com>

On Tue, Mar 11, 2008 at 10:26 PM, Nathan Beckmann
<nathan.beckmann at gmail.com> wrote:
> Correctly initialized parameters to GetDIBits. (Based on
>  GdipLockBitmapBits.)
>
>  Testing seems to indicate that the error doesn't occur on Debian, but
>  shows up in Slackware. Valgrind also complains.
>  ---
>   dlls/gdiplus/image.c |   28 ++++++++++++++++++++++------
>   1 files changed, 22 insertions(+), 6 deletions(-)
>
>  diff --git a/dlls/gdiplus/image.c b/dlls/gdiplus/image.c
>  index 8307938..ad15148 100644
>  --- a/dlls/gdiplus/image.c
>  +++ b/dlls/gdiplus/image.c
>  @@ -908,7 +908,9 @@ GpStatus WINGDIPAPI GdipSaveImageToStream(GpImage *image, IStream* stream,
>      HRESULT hr;
>      short type;
>      HBITMAP hbmp;
>  +    HBITMAP old_hbmp;
>      HDC hdc;
>  +    int bm_is_selected;
>      BITMAPINFO bmp_info;
>      LPVOID bmp_bits;
>      encode_image_func* encode_image;
>  @@ -917,6 +919,7 @@ GpStatus WINGDIPAPI GdipSaveImageToStream(GpImage *image, IStream* stream,
>      unsigned int dummy;
>      int i;
>
>  +    old_hbmp = 0;
>      output = NULL;
>      output_size = 0;
>
>  @@ -943,18 +946,32 @@ GpStatus WINGDIPAPI GdipSaveImageToStream(GpImage *image, IStream* stream,
>      hr = IPicture_get_Handle(image->picture, (OLE_HANDLE*)&hbmp);
>      if (FAILED(hr) || !hbmp)
>          return GenericError;
>  +    hr = IPicture_get_CurDC(image->picture, &hdc);
>  +    if (FAILED(hr))
>  +        return GenericError;
>  +    bm_is_selected = (hdc != 0);
>  +    if (!bm_is_selected) {
>  +        hdc = CreateCompatibleDC(0);
>  +        old_hbmp = SelectObject(hdc, hbmp);
>  +    }
>
>      /* get bits from HBITMAP */
>  -    hdc = GetDC(0);
>      bmp_info.bmiHeader.biSize = sizeof(bmp_info.bmiHeader);
>  +    bmp_info.bmiHeader.biBitCount = 0;
>      GetDIBits(hdc, hbmp, 0, 0, NULL, &bmp_info, DIB_RGB_COLORS);
>
>      bmp_bits = GdipAlloc(bmp_info.bmiHeader.biSizeImage);
>  -    if (!bmp_bits) {
>  -        ReleaseDC(0, hdc);
>  -        return OutOfMemory;
>  +
>  +    if (bmp_bits)
>  +        GetDIBits(hdc, hbmp, 0, abs(bmp_info.bmiHeader.biHeight), bmp_bits, &bmp_info, DIB_RGB_COLORS);
>  +
>  +    if (!bm_is_selected) {
>  +        SelectObject(hdc, old_hbmp);
>  +        DeleteDC(hdc);
>      }
>  -    GetDIBits(hdc, hbmp, 0, bmp_info.bmiHeader.biHeight, bmp_bits, &bmp_info, DIB_RGB_COLORS);
>  +
>  +    if (!bmp_bits)
>  +        return OutOfMemory;
>
>      stat = encode_image(bmp_bits, &bmp_info, &output, &output_size);
>      if (stat == Ok)
>  @@ -962,7 +979,6 @@ GpStatus WINGDIPAPI GdipSaveImageToStream(GpImage *image, IStream* stream,
>
>      GdipFree(output);
>      GdipFree(bmp_bits);
>  -    ReleaseDC(0, hdc);
>
>      return stat;
>   }
>  --
>  1.5.4.2
>
>
>
>

FYI, here's the valgrind log:

http://www.kegel.com/wine/valgrind/logs-2008-03-11/vg-gdiplus_image-diff.txt

We're passing an uninitialized bmp_info into GetDIBits(), but somehow
it magically works on Debian.


From truiken at gmail.com  Fri Mar 14 11:39:49 2008
From: truiken at gmail.com (James Hawkins)
Date: Fri, 14 Mar 2008 11:39:49 -0500
Subject: Running services in WINE?
In-Reply-To: <47DA77A3.8060206@gmail.com>
References: <47D82648.30208@procyongames.com>
	<b130c85e0803121939x3f562627pe3ec5cdeb4f94235@mail.gmail.com>
	<47D8C6B9.8030607@procyongames.com> <47DA77A3.8060206@gmail.com>
Message-ID: <22821af30803140939s40b21dd5pdb3f47cf3c2c8eff@mail.gmail.com>

On Fri, Mar 14, 2008 at 8:03 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>
> Christopher wrote:
>  > Maarten Lankhorst wrote:
>  >> Hi Christopher,
>  >>
>  >> 2008/3/12, Christopher <raccoonone at procyongames.com>:
>  >>
>  >>> I've been trying to get MozyHome working on WINE, and have made a little
>  >>>  progress. However, it seems that the service which Mozy uses won't
>  >>>  start. Searching a bit I found a thread from a year ago stating that
>  >>>  services don't work in WINE, but that it was being worked on. Are
>  >>>  services implemented in WINE now, or if they're not is someone working
>  >>>  on it who I could help out?
>  >>>
>  >> Services most definitely work now. Some of them you can start manually
>  >> with "wine net start 'servicename'", however this shouldn't be needed.
>  >>
>  >> Cheers,
>  >> Maarten.
>  >>
>  >>
>  >>
>  > Thanks Maarten!
>  > I tried that, but didn't have anymore luck. The service exits almost
>  > immediately, after giving a few fixme messages. Time to do some
>  > debugging I guess :)
>  >
>  > Christopher
>  >
>  >
>  >
>  I've been looking into this and found an issue in Wine that I'm not sure who to
>  test or solve yet.
>
>  MozyHome creates a key in the Services branch:
>
>  System\\CurrentControlSet\\Services\\mozybackup
>
>  It than adds a 'Description' value to this key.
>
>  A bit later it checks for the service by doing an OpenService. This succeeds on
>  Wine but shouldn't.
>
>  I've created a simple test that creates the key and some value in it. Doing an
>  OpenService fails every time on Windows.
>
>  I took another approach whereby I created a proper service (CreateService) and
>  checked whether I could do an OpenService. This succeeded every time even after
>  deleting the whole key.
>
>  What it boils down to is that the service control manager keeps track of the
>  services. Only proper service calls can influence the service control manager
>  (or a reboot).
>
>  So as long as we don't implement some service control manager functionality
>  (services.exe?) we could have some issues as with MozyHome.
>
>  One approach we could take while we don't have the full functionality is to
>  check for the minimal required parameters (value) we need for a service. Would
>  that be acceptable?
>
>  I think Maarten's patch for CreateService was along those same lines
>  (http://source.winehq.org/git/wine.git/?a=commit;h=284f86183cce638ff8fce4023cb76273e979aa09).
>  We need to find a better way of checking whether a service is truly installed.
>  (and not just some registry keys).
>

http://bugs.winehq.org/show_bug.cgi?id=11651#c3

but generally comments 2-4.

-- 
James Hawkins


From m.b.lankhorst at gmail.com  Fri Mar 14 12:29:34 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Fri, 14 Mar 2008 10:29:34 -0700
Subject: quartz: Detect and skip id3v2 header in mpeg splitter
In-Reply-To: <200803140858.48273.chris.kcat@gmail.com>
References: <b130c85e0803132101o7100bbe1j38c3002117a78070@mail.gmail.com>
	<200803140858.48273.chris.kcat@gmail.com>
Message-ID: <b130c85e0803141029h70e47dd4ta2f40e81f4cfab34@mail.gmail.com>

Hi Chris,

2008/3/14, Chris Robinson <chris.kcat at gmail.com>:
> On Thursday 13 March 2008 09:01:53 pm Maarten Lankhorst wrote:
>  > If read from a file source, ID3 v2 tags might be incorrectly parsed by
>  > the head_check. This patch skips the whole tag altogether.
>
>
> I'm not sure this is completely correct. The main splitter function detects
>  the presense of an MP3 header at the start of a sample it's sending to set
>  the sample's sync point attribute. Since the ID3 tag is not a sync point,
>  this causes the first sample to not be set as a sync point, and it would be
>  unlikely that a following sample would, under normal circumstances, contain
>  an MP3 header at the start either. This could cause sensitive codecs to never
>  find a sync point.
In general the tag is not a sync point, but some data behind it
accidentally may be parsed as such. Even if it didn't, the tag is
generally a few 100 (or about 1000 in my case)  bytes in size. Reading
all those bytes individually and moving them all 4 times doesn't seem
really optimal. Skipping the amount of data that is set in the size
buffer causes it to immediately find the first mp3 header.

>  ACMWrapper wouldn't be affected as it doesn't handle sync points, but other
>  native codecs (which do work in Wine) could. Additionally, winemp3.acm may be
>  affected by the ID3 tag as it doesn't seem to have code to handle it either.
It doesn't affect sync points, everything in the id3 tag is garbage
and skipping it is a good thing (TM).

Cheers,
Maarten.


From chris.kcat at gmail.com  Fri Mar 14 12:51:47 2008
From: chris.kcat at gmail.com (Chris Robinson)
Date: Fri, 14 Mar 2008 09:51:47 -0800
Subject: quartz: Detect and skip id3v2 header in mpeg splitter
In-Reply-To: <b130c85e0803141029h70e47dd4ta2f40e81f4cfab34@mail.gmail.com>
References: <b130c85e0803132101o7100bbe1j38c3002117a78070@mail.gmail.com>
	<200803140858.48273.chris.kcat@gmail.com>
	<b130c85e0803141029h70e47dd4ta2f40e81f4cfab34@mail.gmail.com>
Message-ID: <200803141051.47732.chris.kcat@gmail.com>

On Friday 14 March 2008 10:29:34 am Maarten Lankhorst wrote:
> Hi Chris,
>
> 2008/3/14, Chris Robinson <chris.kcat at gmail.com>:
> > On Thursday 13 March 2008 09:01:53 pm Maarten Lankhorst wrote:
> >  > If read from a file source, ID3 v2 tags might be incorrectly parsed by
> >  > the head_check. This patch skips the whole tag altogether.
> >
> > I'm not sure this is completely correct. The main splitter function
> > detects the presense of an MP3 header at the start of a sample it's
> > sending to set the sample's sync point attribute. Since the ID3 tag is
> > not a sync point, this causes the first sample to not be set as a sync
> > point, and it would be unlikely that a following sample would, under
> > normal circumstances, contain an MP3 header at the start either. This
> > could cause sensitive codecs to never find a sync point.
>
> In general the tag is not a sync point, but some data behind it
> accidentally may be parsed as such. Even if it didn't, the tag is
> generally a few 100 (or about 1000 in my case)  bytes in size. Reading
> all those bytes individually and moving them all 4 times doesn't seem
> really optimal. Skipping the amount of data that is set in the size
> buffer causes it to immediately find the first mp3 header.

Correct, but the patch only handles when the pin connection happens. The main 
splitter function will go through the start of the data again, and find the 
ID3 tag again, where it doesn't find the header to set the sync point (unlike 
the pin-connection, it doesn't continue to search forward and will just send 
it as is without the sync point attribute, though).

The following filter (acmwrapper or a native one) will also get the ID3 tag 
and will have to be able to handle it, otherwise it'll fail just like the 
splitter would.


From meissner at suse.de  Fri Mar 14 13:07:55 2008
From: meissner at suse.de (Marcus Meissner)
Date: Fri, 14 Mar 2008 19:07:55 +0100
Subject: wine virus story
In-Reply-To: <3f4fd2640803141019i5b7faab5m8c025fe85a66de32@mail.gmail.com>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
	<a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com>
	<d6c5d7290803131231k29761ad7i908fe667faa2f3c4@mail.gmail.com>
	<200803131949.11704.research@science.su>
	<a71bd89a0803131253y10b5b459n73bdff9ba3be93e@mail.gmail.com>
	<3f4fd2640803141019i5b7faab5m8c025fe85a66de32@mail.gmail.com>
Message-ID: <20080314180755.GA24248@suse.de>

On Fri, Mar 14, 2008 at 05:19:39PM +0000, Reece Dunn wrote:
> On 13/03/2008, Dan Kegel <dank at kegel.com> wrote:
> > On 3/13/08, L. Rahyen <research at science.su> wrote:
> >  >         Separate user is enough if you don't have world writable files in your
> >  >  system.
> >
> > No, because the malware could root your Linux system
> >  using a local priv escalation exploit.  You really want a
> >  totally isolated sandbox.
> 
> Do you know what the status of the ClamAv support is for malware
> detection through the Windows API?
> 
> Also, should this really map the Windows API to use Linux API for
> malware detection (http://lwn.net/Articles/260918/), or the Mac API,
> or other OS APIs if available? If none is provided, the Windows calls
> could use ClamAv as a fallback if available.
> 
> Also, should an effort be made to get Windows AV products working on
> Wine? This has the problem that they would likely require Windows
> kernel APIs that Wine isn't providing. It would also require testing.
> 
> In addition to AV support, should Wine use the Windows API to use a
> firewall if one is available on the OS that Wine is running?

The Windows firewalls usually plugins in at kernel level.

One of our 2006 Summer of Code students wrote an on-access scanner
for Wine, but it was never integrated.

http://www.christoph-probst.com/soc2006/wine/

Ciao, Marcus


From m.b.lankhorst at gmail.com  Fri Mar 14 13:08:42 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Fri, 14 Mar 2008 11:08:42 -0700
Subject: quartz: Detect and skip id3v2 header in mpeg splitter
In-Reply-To: <200803141051.47732.chris.kcat@gmail.com>
References: <b130c85e0803132101o7100bbe1j38c3002117a78070@mail.gmail.com>
	<200803140858.48273.chris.kcat@gmail.com>
	<b130c85e0803141029h70e47dd4ta2f40e81f4cfab34@mail.gmail.com>
	<200803141051.47732.chris.kcat@gmail.com>
Message-ID: <b130c85e0803141108s51b36f91m4ff7f2d964fdfb0c@mail.gmail.com>

Hi Chris,

2008/3/14, Chris Robinson <chris.kcat at gmail.com>:
> On Friday 14 March 2008 10:29:34 am Maarten Lankhorst wrote:
>  > Hi Chris,
>  >
>  > 2008/3/14, Chris Robinson <chris.kcat at gmail.com>:
>  > > On Thursday 13 March 2008 09:01:53 pm Maarten Lankhorst wrote:
>  > >  > If read from a file source, ID3 v2 tags might be incorrectly parsed by
>  > >  > the head_check. This patch skips the whole tag altogether.
>  > >
>  > > I'm not sure this is completely correct. The main splitter function
>  > > detects the presense of an MP3 header at the start of a sample it's
>  > > sending to set the sample's sync point attribute. Since the ID3 tag is
>  > > not a sync point, this causes the first sample to not be set as a sync
>  > > point, and it would be unlikely that a following sample would, under
>  > > normal circumstances, contain an MP3 header at the start either. This
>  > > could cause sensitive codecs to never find a sync point.
>  >
>  > In general the tag is not a sync point, but some data behind it
>  > accidentally may be parsed as such. Even if it didn't, the tag is
>  > generally a few 100 (or about 1000 in my case)  bytes in size. Reading
>  > all those bytes individually and moving them all 4 times doesn't seem
>  > really optimal. Skipping the amount of data that is set in the size
>  > buffer causes it to immediately find the first mp3 header.
> Correct, but the patch only handles when the pin connection happens. The main
>  splitter function will go through the start of the data again, and find the
>  ID3 tag again, where it doesn't find the header to set the sync point (unlike
>  the pin-connection, it doesn't continue to search forward and will just send
>  it as is without the sync point attribute, though).
Considering it's metadata that doesn't have any effect for the next
stages, it shouldn't be sent upstream. It should just be dropped
locally. I missed the main splitter function, I'll fix that one too.

Cheers,
Maarten.


From stefandoesinger at gmx.at  Fri Mar 14 13:34:11 2008
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Fri, 14 Mar 2008 19:34:11 +0100
Subject: Google Summer of code
In-Reply-To: <47D963B9.3040205@ilidium.com>
References: <47D963B9.3040205@ilidium.com>
Message-ID: <200803141934.17922.stefandoesinger@gmx.at>

Am Donnerstag, 13. M?rz 2008 18:26:17 schrieb Luis C. Busquets P?rez:
> Proposing another thing if implementing d3dx9_36.dll is too much I
> propose to implement:
>      1   D3DXAssembleShader
>      2   D3DXAssembleShaderFromFileA
>      3   D3DXCompileShader
>      4   D3DXCompileShaderFromFileA
I plan to implement those as a university project now(I already got the 
general approval for it, just need to sort out the details)

>      5   D3DXCreateCubeTextureFromFileExA
>      6   D3DXCreateCubeTextureFromFileInMemory
>      7   D3DXCreateEffectCompilerFromFileA
>      8   D3DXCreateEffectFromFileA
>      9   D3DXCreateTextureFromFileExA
>     10   D3DXCreateTextureFromFileInMemory
>     11   D3DXCreateVolumeTextureFromFileExA
>     12   D3DXCreateVolumeTextureFromFileInMemory
>     13   D3DXGetImageInfoFromFileInMemory
>     14   D3DXGetPixelShaderProfile
>     15   D3DXGetShaderConstantTable
>     16   D3DXGetShaderInputSemantics
>     17   D3DXGetShaderVersion
>     18   D3DXGetVertexShaderProfile
>     19   D3DXLoadSurfaceFromSurface
>     20   D3DXSaveSurfaceToFileA
>     21   D3DXSaveTextureToFileA
That's a long enough list in itself I think. You shouldn't cap it off at 
specifically the functions CIV4 calls, but rather look for blocks of 
functionality.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080314/d8afcc9e/attachment.pgp 

From artur.szymiec at gmail.com  Fri Mar 14 14:04:38 2008
From: artur.szymiec at gmail.com (Artur Szymiec)
Date: Fri, 14 Mar 2008 20:04:38 +0100
Subject: Wine SOC - any d3d related projects
Message-ID: <47DACC46.8060302@gmail.com>

Hi,

are there any d3d related projects for SOC 2008 ?
Who is the Mentor ? How can I join ?

Best regards
Artur

-- 
--------------------------------------------------------------------------
Registered User No 397465
Linux Debian 2.6.24.2 AMD Athlon(tm) 64 X2 Dual Core 5000+
Conquer your Desktop! http://www.kde.org/trykde/
Reclaim Your Inbox!   http://www.mozilla.org/products/thunderbird/
--------------------------------------------------------------------------



From paul.vriens.wine at gmail.com  Fri Mar 14 14:11:44 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Fri, 14 Mar 2008 20:11:44 +0100
Subject: Running services in WINE?
In-Reply-To: <22821af30803140939s40b21dd5pdb3f47cf3c2c8eff@mail.gmail.com>
References: <47D82648.30208@procyongames.com>	
	<b130c85e0803121939x3f562627pe3ec5cdeb4f94235@mail.gmail.com>	
	<47D8C6B9.8030607@procyongames.com> <47DA77A3.8060206@gmail.com>
	<22821af30803140939s40b21dd5pdb3f47cf3c2c8eff@mail.gmail.com>
Message-ID: <47DACDF0.3060503@gmail.com>

James Hawkins wrote:
> On Fri, Mar 14, 2008 at 8:03 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>> Christopher wrote:
>>  > Maarten Lankhorst wrote:
>>  >> Hi Christopher,
>>  >>
>>  >> 2008/3/12, Christopher <raccoonone at procyongames.com>:
>>  >>
>>  >>> I've been trying to get MozyHome working on WINE, and have made a little
>>  >>>  progress. However, it seems that the service which Mozy uses won't
>>  >>>  start. Searching a bit I found a thread from a year ago stating that
>>  >>>  services don't work in WINE, but that it was being worked on. Are
>>  >>>  services implemented in WINE now, or if they're not is someone working
>>  >>>  on it who I could help out?
>>  >>>
>>  >> Services most definitely work now. Some of them you can start manually
>>  >> with "wine net start 'servicename'", however this shouldn't be needed.
>>  >>
>>  >> Cheers,
>>  >> Maarten.
>>  >>
>>  >>
>>  >>
>>  > Thanks Maarten!
>>  > I tried that, but didn't have anymore luck. The service exits almost
>>  > immediately, after giving a few fixme messages. Time to do some
>>  > debugging I guess :)
>>  >
>>  > Christopher
>>  >
>>  >
>>  >
>>  I've been looking into this and found an issue in Wine that I'm not sure who to
>>  test or solve yet.
>>
>>  MozyHome creates a key in the Services branch:
>>
>>  System\\CurrentControlSet\\Services\\mozybackup
>>
>>  It than adds a 'Description' value to this key.
>>
>>  A bit later it checks for the service by doing an OpenService. This succeeds on
>>  Wine but shouldn't.
>>
>>  I've created a simple test that creates the key and some value in it. Doing an
>>  OpenService fails every time on Windows.
>>
>>  I took another approach whereby I created a proper service (CreateService) and
>>  checked whether I could do an OpenService. This succeeded every time even after
>>  deleting the whole key.
>>
>>  What it boils down to is that the service control manager keeps track of the
>>  services. Only proper service calls can influence the service control manager
>>  (or a reboot).
>>
>>  So as long as we don't implement some service control manager functionality
>>  (services.exe?) we could have some issues as with MozyHome.
>>
>>  One approach we could take while we don't have the full functionality is to
>>  check for the minimal required parameters (value) we need for a service. Would
>>  that be acceptable?
>>
>>  I think Maarten's patch for CreateService was along those same lines
>>  (http://source.winehq.org/git/wine.git/?a=commit;h=284f86183cce638ff8fce4023cb76273e979aa09).
>>  We need to find a better way of checking whether a service is truly installed.
>>  (and not just some registry keys).
>>
> 
> http://bugs.winehq.org/show_bug.cgi?id=11651#c3
> 
> but generally comments 2-4.
> 
It's good we came to same conclusion.

If we wanted to implemented a SCM where would that reside? wineboot?

Cheers,

Paul.


From raccoonone at procyongames.com  Fri Mar 14 14:14:59 2008
From: raccoonone at procyongames.com (Christopher)
Date: Fri, 14 Mar 2008 12:14:59 -0700
Subject: Running services in WINE?
In-Reply-To: <47DACDF0.3060503@gmail.com>
References: <47D82648.30208@procyongames.com>	
	<b130c85e0803121939x3f562627pe3ec5cdeb4f94235@mail.gmail.com>	
	<47D8C6B9.8030607@procyongames.com> <47DA77A3.8060206@gmail.com>
	<22821af30803140939s40b21dd5pdb3f47cf3c2c8eff@mail.gmail.com>
	<47DACDF0.3060503@gmail.com>
Message-ID: <47DACEB3.8030405@procyongames.com>

Paul Vriens wrote:
> James Hawkins wrote:
>> On Fri, Mar 14, 2008 at 8:03 AM, Paul Vriens 
>> <paul.vriens.wine at gmail.com> wrote:
>>> Christopher wrote:
>>>  > Maarten Lankhorst wrote:
>>>  >> Hi Christopher,
>>>  >>
>>>  >> 2008/3/12, Christopher <raccoonone at procyongames.com>:
>>>  >>
>>>  >>> I've been trying to get MozyHome working on WINE, and have made 
>>> a little
>>>  >>>  progress. However, it seems that the service which Mozy uses 
>>> won't
>>>  >>>  start. Searching a bit I found a thread from a year ago 
>>> stating that
>>>  >>>  services don't work in WINE, but that it was being worked on. Are
>>>  >>>  services implemented in WINE now, or if they're not is someone 
>>> working
>>>  >>>  on it who I could help out?
>>>  >>>
>>>  >> Services most definitely work now. Some of them you can start 
>>> manually
>>>  >> with "wine net start 'servicename'", however this shouldn't be 
>>> needed.
>>>  >>
>>>  >> Cheers,
>>>  >> Maarten.
>>>  >>
>>>  >>
>>>  >>
>>>  > Thanks Maarten!
>>>  > I tried that, but didn't have anymore luck. The service exits almost
>>>  > immediately, after giving a few fixme messages. Time to do some
>>>  > debugging I guess :)
>>>  >
>>>  > Christopher
>>>  >
>>>  >
>>>  >
>>>  I've been looking into this and found an issue in Wine that I'm not 
>>> sure who to
>>>  test or solve yet.
>>>
>>>  MozyHome creates a key in the Services branch:
>>>
>>>  System\\CurrentControlSet\\Services\\mozybackup
>>>
>>>  It than adds a 'Description' value to this key.
>>>
>>>  A bit later it checks for the service by doing an OpenService. This 
>>> succeeds on
>>>  Wine but shouldn't.
>>>
>>>  I've created a simple test that creates the key and some value in 
>>> it. Doing an
>>>  OpenService fails every time on Windows.
>>>
>>>  I took another approach whereby I created a proper service 
>>> (CreateService) and
>>>  checked whether I could do an OpenService. This succeeded every 
>>> time even after
>>>  deleting the whole key.
>>>
>>>  What it boils down to is that the service control manager keeps 
>>> track of the
>>>  services. Only proper service calls can influence the service 
>>> control manager
>>>  (or a reboot).
>>>
>>>  So as long as we don't implement some service control manager 
>>> functionality
>>>  (services.exe?) we could have some issues as with MozyHome.
>>>
>>>  One approach we could take while we don't have the full 
>>> functionality is to
>>>  check for the minimal required parameters (value) we need for a 
>>> service. Would
>>>  that be acceptable?
>>>
>>>  I think Maarten's patch for CreateService was along those same lines
>>>  (http://source.winehq.org/git/wine.git/?a=commit;h=284f86183cce638ff8fce4023cb76273e979aa09). 
>>>
>>>  We need to find a better way of checking whether a service is truly 
>>> installed.
>>>  (and not just some registry keys).
>>>
>>
>> http://bugs.winehq.org/show_bug.cgi?id=11651#c3
>>
>> but generally comments 2-4.
>>
> It's good we came to same conclusion.
>
> If we wanted to implemented a SCM where would that reside? wineboot?
>
> Cheers,
>
> Paul.
>
>
If one of you (or anyone else) works on implementing a SCM, I'd love to 
help. I don't think I could do it on my own, but I can certainly lend a 
hand if someone with more experience can tell me what needs to be done.

Christopher


From rob at codeweavers.com  Fri Mar 14 14:25:32 2008
From: rob at codeweavers.com (Robert Shearman)
Date: Fri, 14 Mar 2008 19:25:32 +0000
Subject: Running services in WINE?
In-Reply-To: <47DACDF0.3060503@gmail.com>
References: <47D82648.30208@procyongames.com>		<b130c85e0803121939x3f562627pe3ec5cdeb4f94235@mail.gmail.com>		<47D8C6B9.8030607@procyongames.com>
	<47DA77A3.8060206@gmail.com>	<22821af30803140939s40b21dd5pdb3f47cf3c2c8eff@mail.gmail.com>
	<47DACDF0.3060503@gmail.com>
Message-ID: <47DAD12C.3030607@codeweavers.com>

Paul Vriens wrote:
> James Hawkins wrote:
>   
>> On Fri, Mar 14, 2008 at 8:03 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>>     
>>> Christopher wrote:
>>>  > Maarten Lankhorst wrote:
>>>  >> Hi Christopher,
>>>  >>
>>>  >> 2008/3/12, Christopher <raccoonone at procyongames.com>:
>>>  >>
>>>  >>> I've been trying to get MozyHome working on WINE, and have made a little
>>>  >>>  progress. However, it seems that the service which Mozy uses won't
>>>  >>>  start. Searching a bit I found a thread from a year ago stating that
>>>  >>>  services don't work in WINE, but that it was being worked on. Are
>>>  >>>  services implemented in WINE now, or if they're not is someone working
>>>  >>>  on it who I could help out?
>>>  >>>
>>>  >> Services most definitely work now. Some of them you can start manually
>>>  >> with "wine net start 'servicename'", however this shouldn't be needed.
>>>  >>
>>>  >> Cheers,
>>>  >> Maarten.
>>>  >>
>>>  >>
>>>  >>
>>>  > Thanks Maarten!
>>>  > I tried that, but didn't have anymore luck. The service exits almost
>>>  > immediately, after giving a few fixme messages. Time to do some
>>>  > debugging I guess :)
>>>  >
>>>  > Christopher
>>>  >
>>>  >
>>>  >
>>>  I've been looking into this and found an issue in Wine that I'm not sure who to
>>>  test or solve yet.
>>>
>>>  MozyHome creates a key in the Services branch:
>>>
>>>  System\\CurrentControlSet\\Services\\mozybackup
>>>
>>>  It than adds a 'Description' value to this key.
>>>
>>>  A bit later it checks for the service by doing an OpenService. This succeeds on
>>>  Wine but shouldn't.
>>>
>>>  I've created a simple test that creates the key and some value in it. Doing an
>>>  OpenService fails every time on Windows.
>>>
>>>  I took another approach whereby I created a proper service (CreateService) and
>>>  checked whether I could do an OpenService. This succeeded every time even after
>>>  deleting the whole key.
>>>
>>>  What it boils down to is that the service control manager keeps track of the
>>>  services. Only proper service calls can influence the service control manager
>>>  (or a reboot).
>>>
>>>  So as long as we don't implement some service control manager functionality
>>>  (services.exe?) we could have some issues as with MozyHome.
>>>
>>>  One approach we could take while we don't have the full functionality is to
>>>  check for the minimal required parameters (value) we need for a service. Would
>>>  that be acceptable?
>>>
>>>  I think Maarten's patch for CreateService was along those same lines
>>>  (http://source.winehq.org/git/wine.git/?a=commit;h=284f86183cce638ff8fce4023cb76273e979aa09).
>>>  We need to find a better way of checking whether a service is truly installed.
>>>  (and not just some registry keys).
>>>
>>>       
>> http://bugs.winehq.org/show_bug.cgi?id=11651#c3
>>
>> but generally comments 2-4.
>>
>>     
> It's good we came to same conclusion.
>
> If we wanted to implemented a SCM where would that reside? wineboot?
>   

programs/services

It could then be started on demand by wineboot and/or the advapi32 
services functions.
I was planning to work on this after my endpoint mapper patches are 
accepted.

-- 
Rob Shearman



From mikolaj at zalewski.pl  Fri Mar 14 14:33:34 2008
From: mikolaj at zalewski.pl (=?UTF-8?B?TWlrb8WCYWogWmFsZXdza2k=?=)
Date: Fri, 14 Mar 2008 20:33:34 +0100
Subject: Running services in WINE?
In-Reply-To: <47DACDF0.3060503@gmail.com>
References: <47D82648.30208@procyongames.com>		<b130c85e0803121939x3f562627pe3ec5cdeb4f94235@mail.gmail.com>		<47D8C6B9.8030607@procyongames.com>
	<47DA77A3.8060206@gmail.com>	<22821af30803140939s40b21dd5pdb3f47cf3c2c8eff@mail.gmail.com>
	<47DACDF0.3060503@gmail.com>
Message-ID: <47DAD30E.3060105@zalewski.pl>


> If we wanted to implemented a SCM where would that reside? wineboot?
>   
  The SCM is the servies.exe program. Other programs using advapi32 
communicates with it using RPC. I've started writing it - see 
http://www.winehq.org/pipermail/wine-patches/2007-September/044396.html 
. The problems with widl are fixed so it should be possible to add this 
code to Wine. Probably this code should be updated to current Wine and 
I'm not sure if I moved all the database query function to services.exe 
(it's good to more them all in one go to avoid discrepancies between the 
current advapi implementation that relies on the current state of 
registry keys and services.exe that loads all the keys at start time and 
keeps them in memory).
  I may have some time to work on it and I can help if someone who wants 
to do it (if one wants to have an idea how the SCM works there is a 
chapter about it in "Windows Internals" by M. Russinovich and D. Solomon).

Miko?aj Zalewski


From dank at kegel.com  Fri Mar 14 14:33:50 2008
From: dank at kegel.com (Dan Kegel)
Date: Fri, 14 Mar 2008 12:33:50 -0700
Subject: Wine Security Disclosure
Message-ID: <a71bd89a0803141233m62e4135bh1998d9057754b958@mail.gmail.com>

<tehblunderbuss at gmail.com> wrote:
>      The recent discussion about Windows viruses working through Wine leads
> me to questions about its security.
>  I've heard that using a separate user is alright, and then it isn't
> alright.

You're probably referring to
http://www.winehq.org/pipermail/wine-devel/2008-March/063452.html

I was talking about how to make sure your machine is
safe when you *on purpose* load malware.

However, it is true that we should tell users that Wine is
able to run many Windows malware, and that they
should be just as careful running Windows software
with Wine as they would running it with Windows.
We should also show how to install the standard
Linux virus checkers.
- Dan


From dank at kegel.com  Fri Mar 14 14:25:51 2008
From: dank at kegel.com (Dan Kegel)
Date: Fri, 14 Mar 2008 12:25:51 -0700
Subject: new winetricks 20080314: added vcrun2003, improved dotnet,
	fixed gui multiple selections
Message-ID: <a71bd89a0803141225g61682a7aqd7cbfa1854e3e8c1@mail.gmail.com>

Another day, another winetricks :-)

This version finally adds a way to get Visual C++ 2003 runtime
libraries (msvcp71, mfc71).
It also finally adds in all the twisty little workarounds
needed to run trivial .net 1.1 apps.

Also, it looks like enough people are using the gui to send
in bug reports for it, which is great; as a result,
multiple selections should actually work now.

As always, you can grab the latest crosstool from
  http://kegel.com/wine/winetricks
or
  http://winezeug.googlecode.com

Remember, don't use winetricks while operating heavy machinery...
- Dan


From m.b.lankhorst at gmail.com  Fri Mar 14 15:22:13 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Fri, 14 Mar 2008 13:22:13 -0700
Subject: improve winetricks dotnet 1.1
In-Reply-To: <47D7A81A.6040002@redhat.com>
References: <a71bd89a0803111315m6812e01fqb30a2663b30f05d3@mail.gmail.com>
	<22821af30803111616s3a37347l1d63ec8b74cb0470@mail.gmail.com>
	<47D7A81A.6040002@redhat.com>
Message-ID: <b130c85e0803141322h401d6e1bv16c1e2f97f7165c7@mail.gmail.com>

Hi,

2008/3/12, Michael Stefaniuc <mstefani at redhat.com>:
> James Hawkins wrote:
>  > On Tue, Mar 11, 2008 at 3:15 PM, Dan Kegel <dank at kegel.com> wrote:
>  >> Louis wrote:
>  >>  > Hi, i wonder if it would be possible to improve
>  >>  > winetricks dotnet 1.1, so that it's actually able to run
>  >>  >.net-1.1 applications. Currently it only installs the framework,
>  >>  > but due to bugs the apps don't run.   Atm i use pretty worthless
>  >>  > script below to get them running..
>  >>
>  >>  I'm kind of hoping James implements the missing bits in msi
>  >>  soon.  James, think that will happen soon enough that
>  >>  there's no need to update winetricks?
>  >>
>  >
>  > Just sent in the service patch.  If you're referring to anything else,
>  > I'm not sure what it is.  MsiPublishAssemblies won't see the light of
>  > day for a long, long time, because it requires fusion.dll being
>  > implemented.
>
> Implementing fusion.dll sounds like a GSoC project to me (no clue how
>  much work that is). At least getting the basic structure in place should
>  be doable.
It doesn't seem that hard to implementi the fusion dll. The hard part
is that you will probably have to dipe really deep into assemblies for
it if you want to implement it properly. I don't know the specific
code paths taken, but msdn seems to have at least some info on it.

I think that the fusion dll is installed when installing the .net
framework because my windows xp install doesn't have it in system32.
It is in C:\windows\microsoft.net\framework\${VERSION}, which means
it's probably installed as part of the .net framework. Calling it from
MSI doesn't seem to be too hard.

Cheers,
Maarten.


From msclrhd at googlemail.com  Fri Mar 14 12:19:39 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Fri, 14 Mar 2008 17:19:39 +0000
Subject: wine virus story
In-Reply-To: <a71bd89a0803131253y10b5b459n73bdff9ba3be93e@mail.gmail.com>
References: <a71bd89a0803130832u84b7773m154a826182bcea43@mail.gmail.com>
	<a71bd89a0803131211l572d1126sdf4c01d8cd282733@mail.gmail.com>
	<d6c5d7290803131231k29761ad7i908fe667faa2f3c4@mail.gmail.com>
	<200803131949.11704.research@science.su>
	<a71bd89a0803131253y10b5b459n73bdff9ba3be93e@mail.gmail.com>
Message-ID: <3f4fd2640803141019i5b7faab5m8c025fe85a66de32@mail.gmail.com>

On 13/03/2008, Dan Kegel <dank at kegel.com> wrote:
> On 3/13/08, L. Rahyen <research at science.su> wrote:
>  >         Separate user is enough if you don't have world writable files in your
>  >  system.
>
> No, because the malware could root your Linux system
>  using a local priv escalation exploit.  You really want a
>  totally isolated sandbox.

Do you know what the status of the ClamAv support is for malware
detection through the Windows API?

Also, should this really map the Windows API to use Linux API for
malware detection (http://lwn.net/Articles/260918/), or the Mac API,
or other OS APIs if available? If none is provided, the Windows calls
could use ClamAv as a fallback if available.

Also, should an effort be made to get Windows AV products working on
Wine? This has the problem that they would likely require Windows
kernel APIs that Wine isn't providing. It would also require testing.

In addition to AV support, should Wine use the Windows API to use a
firewall if one is available on the OS that Wine is running?

- Reece


From leslie_alistair at hotmail.com  Fri Mar 14 14:27:17 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Sat, 15 Mar 2008 06:27:17 +1100
Subject: msvcrt: Implement wcscat_s
References: <frdk13$s7e$1@ger.gmane.org>
	<034e01c885c4$5e6746d0$a600fea9@DMITRY>
Message-ID: <freji9$jhh$1@ger.gmane.org>

"Dmitry Timoshkov" <dmitry at codeweavers.com> wrote in message 
news:034e01c885c4$5e6746d0$a600fea9 at DMITRY...
> "Alistair Leslie-Hughes" <leslie_alistair at hotmail.com> wrote:
>
>> +@ cdecl wcscat_s(ptr long wstr) MSVCRT_wcscat_s
>
> The first parameter has type wstr. Also, please check actual
> buffer contents in the tests not just the return values.
>
Hi Dmitry,
  When I wrote the wcscpy_s you asked to me change the spec file to
from
cdecl wcscpy_s(wstr long wstr) MSVCRT_wcscpy_s
to
cdecl wcscpy_s(ptr long wstr) MSVCRT_wcscpy_s
since wcscat_s has the same arguments I assmed it to be the same.

After this change I assumed the following
ptr = non-const pointer that will be changed
wstr = const pointer of type wchar

Can you clarify what is correct?

Ill correct the tests.

Best Regards
 Alistair Leslie-Hughes




From mstefani at redhat.com  Fri Mar 14 15:57:33 2008
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Fri, 14 Mar 2008 21:57:33 +0100
Subject: improve winetricks dotnet 1.1
In-Reply-To: <b130c85e0803141322h401d6e1bv16c1e2f97f7165c7@mail.gmail.com>
References: <a71bd89a0803111315m6812e01fqb30a2663b30f05d3@mail.gmail.com>	<22821af30803111616s3a37347l1d63ec8b74cb0470@mail.gmail.com>	<47D7A81A.6040002@redhat.com>
	<b130c85e0803141322h401d6e1bv16c1e2f97f7165c7@mail.gmail.com>
Message-ID: <47DAE6BD.3070902@redhat.com>

Maarten Lankhorst wrote:
> Hi,
> 
> 2008/3/12, Michael Stefaniuc <mstefani at redhat.com>:
>> James Hawkins wrote:
>>  > On Tue, Mar 11, 2008 at 3:15 PM, Dan Kegel <dank at kegel.com> wrote:
>>  >>  I'm kind of hoping James implements the missing bits in msi
>>  >>  soon.  James, think that will happen soon enough that
>>  >>  there's no need to update winetricks?
>>  >>
>>  >
>>  > Just sent in the service patch.  If you're referring to anything else,
>>  > I'm not sure what it is.  MsiPublishAssemblies won't see the light of
>>  > day for a long, long time, because it requires fusion.dll being
>>  > implemented.
>>
>> Implementing fusion.dll sounds like a GSoC project to me (no clue how
>>  much work that is). At least getting the basic structure in place should
>>  be doable.
> It doesn't seem that hard to implementi the fusion dll. The hard part
> is that you will probably have to dipe really deep into assemblies for
> it if you want to implement it properly. I don't know the specific
Just to remove any confusion: I'm _not_ planning to participate in the
GSoC. My student time are long gone .... Means implementing fusion.dll
is free for everybody.

> code paths taken, but msdn seems to have at least some info on it.
> 
> I think that the fusion dll is installed when installing the .net
> framework because my windows xp install doesn't have it in system32.
> It is in C:\windows\microsoft.net\framework\${VERSION}, which means
> it's probably installed as part of the .net framework. Calling it from
> MSI doesn't seem to be too hard.

bye
	michael
-- 
Michael Stefaniuc                           Tel.: +49-711-96437-199
Consulting Communications Engineer          Fax.: +49-711-96437-111
--------------------------------------------------------------------
Reg. Adresse: Red Hat GmbH, Hauptst?tter Strasse 58, 70178 Stuttgart
Handelsregister: Amtsgericht Stuttgart HRB 153243
Gesch?ftsf?hrer: Brendan Lane, Charlie Peters, Michael Cunningham,
                 Werner Knoblich


From m.b.lankhorst at gmail.com  Fri Mar 14 16:38:57 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Fri, 14 Mar 2008 14:38:57 -0700
Subject: Wine SOC - any d3d related projects
In-Reply-To: <47DACC46.8060302@gmail.com>
References: <47DACC46.8060302@gmail.com>
Message-ID: <b130c85e0803141438k57454e89i1a03332109a586b7@mail.gmail.com>

Hi Artur,

2008/3/14, Artur Szymiec <artur.szymiec at gmail.com>:
>  are there any d3d related projects for SOC 2008 ?
>  Who is the Mentor ? How can I join ?
Definitely, look at the idea page to get an ide aof what we think is
good. It's even better if you suggest something YOU want to do here.
It doesn't have to come from the idea page.

Cheers,
Maarten.


From m.b.lankhorst at gmail.com  Fri Mar 14 16:41:39 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Fri, 14 Mar 2008 14:41:39 -0700
Subject: Google Summer of code
In-Reply-To: <47D963B9.3040205@ilidium.com>
References: <47D963B9.3040205@ilidium.com>
Message-ID: <b130c85e0803141441r7cb7e07fh49eb7afdf582e25d@mail.gmail.com>

Hi Luis,

2008/3/13, "Luis C. Busquets P?rez" <luis.busquets at ilidium.com>:
> Proposing another thing if implementing d3dx9_36.dll is too much I
>  propose to implement:
>      1   D3DXAssembleShader
>      2   D3DXAssembleShaderFromFileA
>      3   D3DXCompileShader
>      4   D3DXCompileShaderFromFileA
>      5   D3DXCreateCubeTextureFromFileExA
>      6   D3DXCreateCubeTextureFromFileInMemory
>      7   D3DXCreateEffectCompilerFromFileA
>      8   D3DXCreateEffectFromFileA
>      9   D3DXCreateTextureFromFileExA
>     10   D3DXCreateTextureFromFileInMemory
>     11   D3DXCreateVolumeTextureFromFileExA
>     12   D3DXCreateVolumeTextureFromFileInMemory
>     13   D3DXGetImageInfoFromFileInMemory
>     14   D3DXGetPixelShaderProfile
>     15   D3DXGetShaderConstantTable
>     16   D3DXGetShaderInputSemantics
>     17   D3DXGetShaderVersion
>     18   D3DXGetVertexShaderProfile
>     19   D3DXLoadSurfaceFromSurface
>     20   D3DXSaveSurfaceToFileA
>     21   D3DXSaveTextureToFileA
>
>  Which are the functions that Sid Meier's Civilization 4 calls and are
>  not yet implemented from d3dx9_32 (36)
Your best bet for the A function is to forward them to the W versions.
These do basically the same thing. Call the W version from the A
version and convert any wide strings to ansi strings, this is what
happens all throughout wine. Also, do you have any plans for adding
conformance tests so you can compare it with windows behavior?

Cheers,
Maarten.


From m.b.lankhorst at gmail.com  Fri Mar 14 16:45:58 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Fri, 14 Mar 2008 14:45:58 -0700
Subject: GSoC
In-Reply-To: <47D9B0B3.7050205@open-vote.org>
References: <1dd4d8b40803130731r6681a702x9112f3abac8b795a@mail.gmail.com>
	<47D96054.6050301@gmail.com> <47D9B0B3.7050205@open-vote.org>
Message-ID: <b130c85e0803141445t2966a728r96f263e1aa7ee2a5@mail.gmail.com>

Hi all,

2008/3/13, Scott Ritchie <scott at open-vote.org>:
> Christopher Harvey wrote:
>  > I've had a few ideas that I thought of on my own, but now I'm starting
>  > to see they perhaps aren't as useful as the ideas thought of by current
>  > developers, but I'll float it out there one last time. I thought it
>  > would be cool to create a wine GUI overlay for games, exactly like
>  > nvPerfHUD. The thing about doing it in wine that makes it better than
>  > nvPerHUD is the fact the to use nvPerfHUD the apps have to give
>  > permission for nvPerHUD to run on them. A wine version would actually be
>  > able to force every single 3d app, opengl or directX to output nvPerfHUD
>  > like output. Anyway, just a thought. Would I be able to apply for both
>  > of these projects and pick one last minute?
>  > Thanks,
>  > Chris.
>  >
>
>
> After talking about the concept a bit at the Ubuntu Developer Summit, I
>  really don't like the idea of a "Wine GUI" just for running Wine
>  applications.  From the user's persepctive, installers for Wine
>  applications shouldn't be substantially different from any old Linux
>  installer - they just click on them, it adds something to their
>  applications menu, and from then on they can run it from there.
>
>  Most of the futzing with applications, like messing around with native
>  dlls in winecfg, shouldn't have to be done at all.  The same goes with
>  editing the registry.
>
>  Configuration we'll never be able to eliminate completely, like
>  selecting the windows version, should ultimately be done through an
>  intuitive place and not some central "Wine configuration" program.  For
>  instance, I should be able to right click a Windows application, select
>  properties, and then change the Windows version from there.
>
>  So, yes, I agree.  Winecfg is ugly and inadequate for the kind of
>  configuration our users are doing now.  But before we put too much
>  effort into sprucing up Winecfg, let's instead talk about how feasible
>  it is to make it unneeded in the first place.

I totally agree that a wine gui is not what we want. ui's are counter
productive.
I also found that I need winecfg less and less, I now run winecfg only
to set the windows version to vista. Maybe we should make this version
the default now? More and more applications don't want to run with
windows version set to 2000, and it should just work.

Cheers,
Maarten.


From austinenglish at gmail.com  Fri Mar 14 17:12:48 2008
From: austinenglish at gmail.com (Austin English)
Date: Fri, 14 Mar 2008 17:12:48 -0500
Subject: GSoC
In-Reply-To: <b130c85e0803141445t2966a728r96f263e1aa7ee2a5@mail.gmail.com>
References: <1dd4d8b40803130731r6681a702x9112f3abac8b795a@mail.gmail.com>
	<47D96054.6050301@gmail.com> <47D9B0B3.7050205@open-vote.org>
	<b130c85e0803141445t2966a728r96f263e1aa7ee2a5@mail.gmail.com>
Message-ID: <b6bb06270803141512l146e8740q3ed9c6069d01c223@mail.gmail.com>

On Fri, Mar 14, 2008 at 4:45 PM, Maarten Lankhorst
<m.b.lankhorst at gmail.com> wrote:
> Hi all,
>
>  2008/3/13, Scott Ritchie <scott at open-vote.org>:
>
>
> > Christopher Harvey wrote:
>  >  > I've had a few ideas that I thought of on my own, but now I'm starting
>  >  > to see they perhaps aren't as useful as the ideas thought of by current
>  >  > developers, but I'll float it out there one last time. I thought it
>  >  > would be cool to create a wine GUI overlay for games, exactly like
>  >  > nvPerfHUD. The thing about doing it in wine that makes it better than
>  >  > nvPerHUD is the fact the to use nvPerfHUD the apps have to give
>  >  > permission for nvPerHUD to run on them. A wine version would actually be
>  >  > able to force every single 3d app, opengl or directX to output nvPerfHUD
>  >  > like output. Anyway, just a thought. Would I be able to apply for both
>  >  > of these projects and pick one last minute?
>  >  > Thanks,
>  >  > Chris.
>  >  >
>  >
>  >
>  > After talking about the concept a bit at the Ubuntu Developer Summit, I
>  >  really don't like the idea of a "Wine GUI" just for running Wine
>  >  applications.  From the user's persepctive, installers for Wine
>  >  applications shouldn't be substantially different from any old Linux
>  >  installer - they just click on them, it adds something to their
>  >  applications menu, and from then on they can run it from there.
>  >
>  >  Most of the futzing with applications, like messing around with native
>  >  dlls in winecfg, shouldn't have to be done at all.  The same goes with
>  >  editing the registry.
>  >
>  >  Configuration we'll never be able to eliminate completely, like
>  >  selecting the windows version, should ultimately be done through an
>  >  intuitive place and not some central "Wine configuration" program.  For
>  >  instance, I should be able to right click a Windows application, select
>  >  properties, and then change the Windows version from there.
>  >
>  >  So, yes, I agree.  Winecfg is ugly and inadequate for the kind of
>  >  configuration our users are doing now.  But before we put too much
>  >  effort into sprucing up Winecfg, let's instead talk about how feasible
>  >  it is to make it unneeded in the first place.
>
>  I totally agree that a wine gui is not what we want. ui's are counter
>  productive.
>  I also found that I need winecfg less and less, I now run winecfg only
>  to set the windows version to vista. Maybe we should make this version
>  the default now? More and more applications don't want to run with
>  windows version set to 2000, and it should just work.
>
>  Cheers,
>  Maarten.
>
>
>

There was a discussion a while back about setting the default version
to XP. Vista may be a bad default, considering how badly it's been
running, I wouldn't be surprised if some apps start including their
own workarounds for Vista.


From m.b.lankhorst at gmail.com  Fri Mar 14 17:48:56 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Fri, 14 Mar 2008 15:48:56 -0700
Subject: GSoC
In-Reply-To: <b6bb06270803141512l146e8740q3ed9c6069d01c223@mail.gmail.com>
References: <1dd4d8b40803130731r6681a702x9112f3abac8b795a@mail.gmail.com>
	<47D96054.6050301@gmail.com> <47D9B0B3.7050205@open-vote.org>
	<b130c85e0803141445t2966a728r96f263e1aa7ee2a5@mail.gmail.com>
	<b6bb06270803141512l146e8740q3ed9c6069d01c223@mail.gmail.com>
Message-ID: <b130c85e0803141548r70acad3fnc5a6e530c4e091d7@mail.gmail.com>

Hi Austin,

2008/3/14, Austin English <austinenglish at gmail.com>:
> On Fri, Mar 14, 2008 at 4:45 PM, Maarten Lankhorst
>  <m.b.lankhorst at gmail.com> wrote:
>  > Hi all,
>  >
>  >  2008/3/13, Scott Ritchie <scott at open-vote.org>:
>  >
>  >
>  > > Christopher Harvey wrote:
>  >  >  > I've had a few ideas that I thought of on my own, but now I'm starting
>  >  >  > to see they perhaps aren't as useful as the ideas thought of by current
>  >  >  > developers, but I'll float it out there one last time. I thought it
>  >  >  > would be cool to create a wine GUI overlay for games, exactly like
>  >  >  > nvPerfHUD. The thing about doing it in wine that makes it better than
>  >  >  > nvPerHUD is the fact the to use nvPerfHUD the apps have to give
>  >  >  > permission for nvPerHUD to run on them. A wine version would actually be
>  >  >  > able to force every single 3d app, opengl or directX to output nvPerfHUD
>  >  >  > like output. Anyway, just a thought. Would I be able to apply for both
>  >  >  > of these projects and pick one last minute?
>  >  >  > Thanks,
>  >  >  > Chris.
>  >  >  >
>  >  >
>  >  >
>  >  > After talking about the concept a bit at the Ubuntu Developer Summit, I
>  >  >  really don't like the idea of a "Wine GUI" just for running Wine
>  >  >  applications.  From the user's persepctive, installers for Wine
>  >  >  applications shouldn't be substantially different from any old Linux
>  >  >  installer - they just click on them, it adds something to their
>  >  >  applications menu, and from then on they can run it from there.
>  >  >
>  >  >  Most of the futzing with applications, like messing around with native
>  >  >  dlls in winecfg, shouldn't have to be done at all.  The same goes with
>  >  >  editing the registry.
>  >  >
>  >  >  Configuration we'll never be able to eliminate completely, like
>  >  >  selecting the windows version, should ultimately be done through an
>  >  >  intuitive place and not some central "Wine configuration" program.  For
>  >  >  instance, I should be able to right click a Windows application, select
>  >  >  properties, and then change the Windows version from there.
>  >  >
>  >  >  So, yes, I agree.  Winecfg is ugly and inadequate for the kind of
>  >  >  configuration our users are doing now.  But before we put too much
>  >  >  effort into sprucing up Winecfg, let's instead talk about how feasible
>  >  >  it is to make it unneeded in the first place.
>  >
>  >  I totally agree that a wine gui is not what we want. ui's are counter
>  >  productive.
>  >  I also found that I need winecfg less and less, I now run winecfg only
>  >  to set the windows version to vista. Maybe we should make this version
>  >  the default now? More and more applications don't want to run with
>  >  windows version set to 2000, and it should just work.
>  >
>  >  Cheers,
>  >  Maarten.
>  >
>  >
>  >
>
>
> There was a discussion a while back about setting the default version
>  to XP. Vista may be a bad default, considering how badly it's been
>  running, I wouldn't be surprised if some apps start including their
>  own workarounds for Vista.
It's a good idea to set to vista, I think we'll support it. Some games
for example won't run on xp any more.

I only know apps that will run if windows version is set to vista. I
don't know any that fail if the version is set to that specifically.

Cheers,
Maarten.


From truiken at gmail.com  Fri Mar 14 18:05:20 2008
From: truiken at gmail.com (James Hawkins)
Date: Fri, 14 Mar 2008 18:05:20 -0500
Subject: GSoC
In-Reply-To: <b130c85e0803141548r70acad3fnc5a6e530c4e091d7@mail.gmail.com>
References: <1dd4d8b40803130731r6681a702x9112f3abac8b795a@mail.gmail.com>
	<47D96054.6050301@gmail.com> <47D9B0B3.7050205@open-vote.org>
	<b130c85e0803141445t2966a728r96f263e1aa7ee2a5@mail.gmail.com>
	<b6bb06270803141512l146e8740q3ed9c6069d01c223@mail.gmail.com>
	<b130c85e0803141548r70acad3fnc5a6e530c4e091d7@mail.gmail.com>
Message-ID: <22821af30803141605q50fb85f4x6eb4c17b9ef9b6a5@mail.gmail.com>

On Fri, Mar 14, 2008 at 5:48 PM, Maarten Lankhorst
<m.b.lankhorst at gmail.com> wrote:
> Hi Austin,
>
>  2008/3/14, Austin English <austinenglish at gmail.com>:
>
>
> > On Fri, Mar 14, 2008 at 4:45 PM, Maarten Lankhorst
>  >  <m.b.lankhorst at gmail.com> wrote:
>  >  > Hi all,
>  >  >
>  >  >  2008/3/13, Scott Ritchie <scott at open-vote.org>:
>  >  >
>  >  >
>  >  > > Christopher Harvey wrote:
>  >  >  >  > I've had a few ideas that I thought of on my own, but now I'm starting
>  >  >  >  > to see they perhaps aren't as useful as the ideas thought of by current
>  >  >  >  > developers, but I'll float it out there one last time. I thought it
>  >  >  >  > would be cool to create a wine GUI overlay for games, exactly like
>  >  >  >  > nvPerfHUD. The thing about doing it in wine that makes it better than
>  >  >  >  > nvPerHUD is the fact the to use nvPerfHUD the apps have to give
>  >  >  >  > permission for nvPerHUD to run on them. A wine version would actually be
>  >  >  >  > able to force every single 3d app, opengl or directX to output nvPerfHUD
>  >  >  >  > like output. Anyway, just a thought. Would I be able to apply for both
>  >  >  >  > of these projects and pick one last minute?
>  >  >  >  > Thanks,
>  >  >  >  > Chris.
>  >  >  >  >
>  >  >  >
>  >  >  >
>  >  >  > After talking about the concept a bit at the Ubuntu Developer Summit, I
>  >  >  >  really don't like the idea of a "Wine GUI" just for running Wine
>  >  >  >  applications.  From the user's persepctive, installers for Wine
>  >  >  >  applications shouldn't be substantially different from any old Linux
>  >  >  >  installer - they just click on them, it adds something to their
>  >  >  >  applications menu, and from then on they can run it from there.
>  >  >  >
>  >  >  >  Most of the futzing with applications, like messing around with native
>  >  >  >  dlls in winecfg, shouldn't have to be done at all.  The same goes with
>  >  >  >  editing the registry.
>  >  >  >
>  >  >  >  Configuration we'll never be able to eliminate completely, like
>  >  >  >  selecting the windows version, should ultimately be done through an
>  >  >  >  intuitive place and not some central "Wine configuration" program.  For
>  >  >  >  instance, I should be able to right click a Windows application, select
>  >  >  >  properties, and then change the Windows version from there.
>  >  >  >
>  >  >  >  So, yes, I agree.  Winecfg is ugly and inadequate for the kind of
>  >  >  >  configuration our users are doing now.  But before we put too much
>  >  >  >  effort into sprucing up Winecfg, let's instead talk about how feasible
>  >  >  >  it is to make it unneeded in the first place.
>  >  >
>  >  >  I totally agree that a wine gui is not what we want. ui's are counter
>  >  >  productive.
>  >  >  I also found that I need winecfg less and less, I now run winecfg only
>  >  >  to set the windows version to vista. Maybe we should make this version
>  >  >  the default now? More and more applications don't want to run with
>  >  >  windows version set to 2000, and it should just work.
>  >  >
>  >  >  Cheers,
>  >  >  Maarten.
>  >  >
>  >  >
>  >  >
>  >
>  >
>  > There was a discussion a while back about setting the default version
>  >  to XP. Vista may be a bad default, considering how badly it's been
>  >  running, I wouldn't be surprised if some apps start including their
>  >  own workarounds for Vista.
>  It's a good idea to set to vista, I think we'll support it. Some games
>  for example won't run on xp any more.
>
>  I only know apps that will run if windows version is set to vista. I
>  don't know any that fail if the version is set to that specifically.
>

We should set the default version to the version of Windows that we
emulate the best.  This is determined in part by what version the
tests are written for (and thus the implementation is aligned with).
As can be seen from the test results, the version with the fewest
failures is XP or 2003.  Thus, we should set our default version to
winxp.  Though you say many games don't run on XP anymore, Vista
hasn't been around long enough for us to emulate that version
correctly.  Besides, 'games' is just a subset of the applications
people run in Wine.  Defaulting to Vista is overreaching our bounds
and will lead to many problems.

-- 
James Hawkins


From ivg231 at gmail.com  Fri Mar 14 19:42:27 2008
From: ivg231 at gmail.com (Ivan Gyurdiev)
Date: Fri, 14 Mar 2008 20:42:27 -0400
Subject: Wine Security Disclosure
In-Reply-To: <b050a5e70803140903r2601c8b2s1dd88ddf459f32bd@mail.gmail.com>
References: <47DA9F96.70601@gmail.com>
	<b050a5e70803140903r2601c8b2s1dd88ddf459f32bd@mail.gmail.com>
Message-ID: <47DB1B73.3070204@gmail.com>

> No matter what if your running a program, be it linux or windows (on
> wine) it always has the potential to mess up things that the user
> running it has access too.

Not true - you should be running in a SELinux sandbox to solve this problem. I'm not sure if the technology is mature enough for this, but it can and will constrain beyond user privs.

> So if you run it as a normal user the worst it can do is mess up that users files
> All of your important system files are owned by root (or they should be...) 

Quite the opposite in fact - anything important's already in the user's files - saved passwords, crypto keys, personal data, financial files. The root stuff is not interesting at all, except as a means to get to the user's files.

- Ivan



From chris.kcat at gmail.com  Fri Mar 14 20:37:49 2008
From: chris.kcat at gmail.com (Chris Robinson)
Date: Fri, 14 Mar 2008 17:37:49 -0800
Subject: quartz: Set a default sync source on the filtergraph
In-Reply-To: <b130c85e0803141625t72cedd7egb0ed975b36e985c2@mail.gmail.com>
References: <b130c85e0803141625t72cedd7egb0ed975b36e985c2@mail.gmail.com>
Message-ID: <200803141837.50199.chris.kcat@gmail.com>

On Friday 14 March 2008 04:25:02 pm Maarten Lankhorst wrote:
> Use the fallback system IReferenceClock, unless the app comes up with
> its own clock.

This doesn't look right. According to MSDN, the clock used when Run is called 
is chosen by the following algorithm:

1- The app called IMediaFilter::SetSyncSource

2- A live filter source is connected to the graph and supports the 
IReferenceClock interface

3- Any filters support IReferenceClock, starting with renderers and 
going "upstream" (following pin connections to the source), and falling back 
to disconnected filters if still nothing. Normally, an audio renderer would 
be selected here.

4- If still nothing, use the system reference clock.


I don't think SetDefaultSyncSource should should just jump right to the system 
clock. As far as I can tell, you need to hold a reference to a clock, and a 
bool saying if it's custom set (as even NULL can be a valid custom override). 
When Run is called, if no custom override is set, it would release the 
current set clock (if any) and check as steps 2, 3, and 4 describe.

So really what the function needs to do is release the current set reference 
clock (if non-NULL), clear a custom-override flag (while SetSyncSource sets 
the custom-override flag and holds a reference for non-NULL filters), and 
check steps 2, 3, and 4. So something like:

SetSyncSource(clock) {
    if(this->ref_clock)
        this->ref_clock->Release();
    this->ref_clock = clock;
    if(clock)
        clock->AddRef();
    this->custom_clock = TRUE;
}
SetDefaultSyncSource() {
    SetSyncSource(NULL);
    this->custom_clock = FALSE;
    ...do steps 2, 3, and 4...
    this->ref_clock = selected_clock;
}
Run() {
    if(!this->custom_clock)
        SetDefaultSyncSource();
    ...run...
}


From winehacker at gmail.com  Fri Mar 14 20:36:46 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Fri, 14 Mar 2008 21:36:46 -0400
Subject: GSoC
In-Reply-To: <b6bb06270803141512l146e8740q3ed9c6069d01c223@mail.gmail.com>
References: <1dd4d8b40803130731r6681a702x9112f3abac8b795a@mail.gmail.com>
	<47D96054.6050301@gmail.com> <47D9B0B3.7050205@open-vote.org>
	<b130c85e0803141445t2966a728r96f263e1aa7ee2a5@mail.gmail.com>
	<b6bb06270803141512l146e8740q3ed9c6069d01c223@mail.gmail.com>
Message-ID: <19e31a080803141836g60fea439ld717cd545d0724e1@mail.gmail.com>

On Fri, Mar 14, 2008 at 6:12 PM, Austin English
> There was a discussion a while back about setting the default version
> to XP. Vista may be a bad default, considering how badly it's been
> running, I wouldn't be surprised if some apps start including their
> own workarounds for Vista.

Given each application tends to have different results depending on
which version of Wine is emulated, the solution to me seems that there
should be a default set like now, such as XP and then the Desktop
Environment should support a right click on the *.EXE where the user
can select

Open With Wine
Open With Wine in Win2000 Mode
Open With Wine in WinXP Mode
etc

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From m.b.lankhorst at gmail.com  Fri Mar 14 21:20:45 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Fri, 14 Mar 2008 19:20:45 -0700
Subject: quartz: Set a default sync source on the filtergraph
In-Reply-To: <200803141837.50199.chris.kcat@gmail.com>
References: <b130c85e0803141625t72cedd7egb0ed975b36e985c2@mail.gmail.com>
	<200803141837.50199.chris.kcat@gmail.com>
Message-ID: <b130c85e0803141920g381099f2x1088173eae578842@mail.gmail.com>

Hi Chris,

2008/3/14, Chris Robinson <chris.kcat at gmail.com>:
> On Friday 14 March 2008 04:25:02 pm Maarten Lankhorst wrote:
>  > Use the fallback system IReferenceClock, unless the app comes up with
>  > its own clock.
>
>
> This doesn't look right. According to MSDN, the clock used when Run is called
>  is chosen by the following algorithm:
>
>  1- The app called IMediaFilter::SetSyncSource
>
>  2- A live filter source is connected to the graph and supports the
>  IReferenceClock interface
>
>  3- Any filters support IReferenceClock, starting with renderers and
>  going "upstream" (following pin connections to the source), and falling back
>  to disconnected filters if still nothing. Normally, an audio renderer would
>  be selected here.
>
>  4- If still nothing, use the system reference clock.
Almost right.

You're specifying behavior when doing 'run'.

Quoting msdn on IFilterGraph::SetSyncSource:
"This method instructs the Filter Graph Manager to choose a reference
clock using its default algorithm. For more information about the
algorithm that it uses, see Reference Clocks."

There are also strict criteria for live filter sources (basically
webcams or microphones), and when a ireferenceclock will be used from
audio. It needs to expose some interfaces before it is chosen as
reference clock. This patch sets the reference clock to the system
clock, unless overridden by the application. When SetDefaultSyncSource
is called the clock is reset to the system clock.

This isn't entirely conforming, but it's the best solution at the moment.

Cheers,
Maarten.


From m.b.lankhorst at gmail.com  Fri Mar 14 22:11:13 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Fri, 14 Mar 2008 20:11:13 -0700
Subject: GSoC
In-Reply-To: <19e31a080803141836g60fea439ld717cd545d0724e1@mail.gmail.com>
References: <1dd4d8b40803130731r6681a702x9112f3abac8b795a@mail.gmail.com>
	<47D96054.6050301@gmail.com> <47D9B0B3.7050205@open-vote.org>
	<b130c85e0803141445t2966a728r96f263e1aa7ee2a5@mail.gmail.com>
	<b6bb06270803141512l146e8740q3ed9c6069d01c223@mail.gmail.com>
	<19e31a080803141836g60fea439ld717cd545d0724e1@mail.gmail.com>
Message-ID: <b130c85e0803142011r27a31982s6094a2734b4277c4@mail.gmail.com>

Hi Steven,

2008/3/14, Steven Edwards <winehacker at gmail.com>:
> On Fri, Mar 14, 2008 at 6:12 PM, Austin English
>
> > There was a discussion a while back about setting the default version
>  > to XP. Vista may be a bad default, considering how badly it's been
>  > running, I wouldn't be surprised if some apps start including their
>  > own workarounds for Vista.
>
>
> Given each application tends to have different results depending on
>  which version of Wine is emulated, the solution to me seems that there
>  should be a default set like now, such as XP and then the Desktop
>  Environment should support a right click on the *.EXE where the user
>  can select
>
>  Open With Wine
>  Open With Wine in Win2000 Mode
>  Open With Wine in WinXP Mode
>  etc
This isn't about specific applications, but for the default
application wine setting.

Cheers,
Maarten.


From dmitry at codeweavers.com  Fri Mar 14 23:16:20 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sat, 15 Mar 2008 12:16:20 +0800
Subject: msvcrt: Implement wcscat_s
References: <frdk13$s7e$1@ger.gmane.org><034e01c885c4$5e6746d0$a600fea9@DMITRY>
	<freji9$jhh$1@ger.gmane.org>
Message-ID: <007201c88653$54802170$a600fea9@DMITRY>

"Alistair Leslie-Hughes" <leslie_alistair at hotmail.com> wrote:

>>> +@ cdecl wcscat_s(ptr long wstr) MSVCRT_wcscat_s
>>
>> The first parameter has type wstr. Also, please check actual
>> buffer contents in the tests not just the return values.
>>
> Hi Dmitry,
>  When I wrote the wcscpy_s you asked to me change the spec file to
> from
> cdecl wcscpy_s(wstr long wstr) MSVCRT_wcscpy_s
> to
> cdecl wcscpy_s(ptr long wstr) MSVCRT_wcscpy_s
> since wcscat_s has the same arguments I assmed it to be the same.
> 
> After this change I assumed the following
> ptr = non-const pointer that will be changed
> wstr = const pointer of type wchar
> 
> Can you clarify what is correct?

Basically parameters in the .spec files are used as descriptors for
relay debugging, and difference between ptr and wstr is whether the
contents on the buffer or just a pointer should be printed.

First parameter of wcscpy_s is a not initialized buffer, while first
parameter of wcscat_s is an initialized unicode string.

-- 
Dmitry.


From dmitry at codeweavers.com  Sat Mar 15 00:53:04 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sat, 15 Mar 2008 13:53:04 +0800
Subject: user32: test processing of expose events (try 2)
References: <200803142345.02310.cjstimpson@utwire.net>
Message-ID: <01d001c88660$d86020a0$a600fea9@DMITRY>

"Clinton Stimpson" <cjstimpson at utwire.net> wrote:

> Simplified from first try by removing unecessary thread.
> 
> ChangeLog:  
>  user32: test processing of expose events

Is it possible to use 4 space indents as in the rest of file?

-- 
Dmitry.


From xixsimplicityxix at gmail.com  Sat Mar 15 00:56:35 2008
From: xixsimplicityxix at gmail.com (John Klehm)
Date: Sat, 15 Mar 2008 00:56:35 -0500
Subject: user32: Fix enumeration for EnumWindowStations and EnumDesktops,
	try 5
In-Reply-To: <b130c85e0803142215h18c6dbfapbd2dd1b813328383@mail.gmail.com>
References: <b130c85e0803142215h18c6dbfapbd2dd1b813328383@mail.gmail.com>
Message-ID: <78a7dad00803142256h6e1fab50r55ac66e69b1f8010@mail.gmail.com>

On Sat, Mar 15, 2008 at 12:15 AM, Maarten Lankhorst
<m.b.lankhorst at gmail.com> wrote:
> Fixed names to have underscores.
>
>
>
>

+static void test_enumstations(void)
+{
+    BOOL ret;
+
+#if 0 /* Crashes instead */
+    SetLastError(0xbabefeed);
+    ret = EnumWindowStationsA(NULL, 0);
+    ok(!ret, "EnumWindowStationsA returned succesfully!\n");
+    ok(GetLastError() == ERROR_INVALID_PARAMETER, "LastError is set
to %08x\n", GetLastError());
+#endif
+


Dead code?


From truiken at gmail.com  Sat Mar 15 01:00:49 2008
From: truiken at gmail.com (James Hawkins)
Date: Sat, 15 Mar 2008 01:00:49 -0500
Subject: user32: Fix enumeration for EnumWindowStations and EnumDesktops,
	try 5
In-Reply-To: <78a7dad00803142256h6e1fab50r55ac66e69b1f8010@mail.gmail.com>
References: <b130c85e0803142215h18c6dbfapbd2dd1b813328383@mail.gmail.com>
	<78a7dad00803142256h6e1fab50r55ac66e69b1f8010@mail.gmail.com>
Message-ID: <22821af30803142300wf53273dx405ac89c72e3a1fe@mail.gmail.com>

On Sat, Mar 15, 2008 at 12:56 AM, John Klehm <xixsimplicityxix at gmail.com> wrote:
> On Sat, Mar 15, 2008 at 12:15 AM, Maarten Lankhorst
>  <m.b.lankhorst at gmail.com> wrote:
>  > Fixed names to have underscores.
>  >
>  >
>  >
>  >
>
>  +static void test_enumstations(void)
>  +{
>  +    BOOL ret;
>  +
>  +#if 0 /* Crashes instead */
>  +    SetLastError(0xbabefeed);
>  +    ret = EnumWindowStationsA(NULL, 0);
>  +    ok(!ret, "EnumWindowStationsA returned succesfully!\n");
>  +    ok(GetLastError() == ERROR_INVALID_PARAMETER, "LastError is set
>  to %08x\n", GetLastError());
>  +#endif
>  +
>
>
>  Dead code?
>

No, but he should have used if (0) instead.

-- 
James Hawkins


From m.b.lankhorst at gmail.com  Sat Mar 15 01:26:35 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Fri, 14 Mar 2008 23:26:35 -0700
Subject: user32: Fix enumeration for EnumWindowStations and EnumDesktops,
	try 5
In-Reply-To: <78a7dad00803142256h6e1fab50r55ac66e69b1f8010@mail.gmail.com>
References: <b130c85e0803142215h18c6dbfapbd2dd1b813328383@mail.gmail.com>
	<78a7dad00803142256h6e1fab50r55ac66e69b1f8010@mail.gmail.com>
Message-ID: <b130c85e0803142326k6cc4d5cbqe65e2fe7e931e0e9@mail.gmail.com>

Hi John,

2008/3/14, John Klehm <xixsimplicityxix at gmail.com>:
> On Sat, Mar 15, 2008 at 12:15 AM, Maarten Lankhorst
>  <m.b.lankhorst at gmail.com> wrote:
>  > Fixed names to have underscores.
>
> +static void test_enumstations(void)
>  +{
>  +    BOOL ret;
>  +
>  +#if 0 /* Crashes instead */
>  +    SetLastError(0xbabefeed);
>  +    ret = EnumWindowStationsA(NULL, 0);
>  +    ok(!ret, "EnumWindowStationsA returned succesfully!\n");
>  +    ok(GetLastError() == ERROR_INVALID_PARAMETER, "LastError is set
>  to %08x\n", GetLastError());
>  +#endif
>  +
>
>  Dead code?
It's just so that I know the behavior is crashing, instead of setting
an error. This means that windows programs won't rely on the behavior,
and that the test is not needed.

Cheers,
Maarten.


From luis.busquets at ilidium.com  Sat Mar 15 01:36:34 2008
From: luis.busquets at ilidium.com (=?ISO-8859-1?Q?=22Luis_C=2E_Busquets_P=E9rez=22?=)
Date: Sat, 15 Mar 2008 07:36:34 +0100
Subject: Google Summer of code
In-Reply-To: <200803141934.17922.stefandoesinger@gmx.at>
References: <47D963B9.3040205@ilidium.com>
	<200803141934.17922.stefandoesinger@gmx.at>
Message-ID: <47DB6E72.8050908@ilidium.com>

Following your comment I understand that you will be implementing the 
hard core of D3DXCompileShaderxx.

Nevertheless, I have already a simplification of the 
D3DXCompileShaderFromFilexx functionsStefan D?singer escribi?. This are 
being work referring to D3DXCompileShaderFromFileExW on the basement, i.e:

D3DXCompileShaderFromFileA --> D3DXCompileShaderFromFileW
D3DXCompileShaderFromFileExA --> D3DXCompileShaderFromFileExW
D3DXCompileShaderFromFileW --> D3DXCompileShaderFromFileExW

Please find the patch attached. I have tested it with Civilizqation4, which as explained calls D3DXCompileShaderFromFileA. To test 3DXCompileShaderFromFileExA I tried a temporary path of 
D3DXCompileShaderFromFileA --> D3DXCompileShaderFromFileExA

All this using the work around of implementing the three calling functions (D3DXCompileShaderFromFileA, D3DXCompileShaderFromFileW, D3DXCompileShaderFromFileExA) in d3dx9_32 for testing and now setting the code on d3dx9_36 obviously. The tests have been ok.

Please let me know your comments and if you think that it can be submitted to wine-patches.




> Am Donnerstag, 13. M?rz 2008 18:26:17 schrieb Luis C. Busquets P?rez:
>   
>> Proposing another thing if implementing d3dx9_36.dll is too much I
>> propose to implement:
>>      1   D3DXAssembleShader
>>      2   D3DXAssembleShaderFromFileA
>>      3   D3DXCompileShader
>>      4   D3DXCompileShaderFromFileA
>>     
> I plan to implement those as a university project now(I already got the 
> general approval for it, just need to sort out the details)
>
>   
>>      5   D3DXCreateCubeTextureFromFileExA
>>      6   D3DXCreateCubeTextureFromFileInMemory
>>      7   D3DXCreateEffectCompilerFromFileA
>>      8   D3DXCreateEffectFromFileA
>>      9   D3DXCreateTextureFromFileExA
>>     10   D3DXCreateTextureFromFileInMemory
>>     11   D3DXCreateVolumeTextureFromFileExA
>>     12   D3DXCreateVolumeTextureFromFileInMemory
>>     13   D3DXGetImageInfoFromFileInMemory
>>     14   D3DXGetPixelShaderProfile
>>     15   D3DXGetShaderConstantTable
>>     16   D3DXGetShaderInputSemantics
>>     17   D3DXGetShaderVersion
>>     18   D3DXGetVertexShaderProfile
>>     19   D3DXLoadSurfaceFromSurface
>>     20   D3DXSaveSurfaceToFileA
>>     21   D3DXSaveTextureToFileA
>>     
> That's a long enough list in itself I think. You shouldn't cap it off at 
> specifically the functions CIV4 calls, but rather look for blocks of 
> functionality.
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080315/ea65e8f4/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: d342fc5d1d9965313406f1bd3b6bd154f231e8cf.diff
Type: text/x-patch
Size: 5387 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080315/ea65e8f4/attachment.bin 

From julliard at winehq.org  Sat Mar 15 05:03:58 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Sat, 15 Mar 2008 11:03:58 +0100
Subject: fonts: Start of the Symbol font.
In-Reply-To: <8763vqzdfq.fsf@totally-fudged-out-message-id> (Huw Davies's
	message of "Thu, 13 Mar 2008 17:05:38 +0000")
References: <8763vqzdfq.fsf@totally-fudged-out-message-id>
Message-ID: <87tzj8wbg1.fsf@wine.dyndns.org>

Huw Davies <huw at codeweavers.com> writes:

>  fonts/Makefile.in |    1 +
>  fonts/symbol.sfd  |   83 +++++++++++++++++++++++++++++++++++++++++++++++++++++

Upgrading fontforge fixed the gdi32 errors, but now I'm getting errors
in usp10:

../../../tools/runtest -q -P wine -M usp10.dll -T ../../.. -p usp10_test.exe.so usp10.c && touch usp10.ok
usp10.c:76: Test failed: ExtTextOutW should return TRUE
usp10.c:500: Test failed: ScriptTextOut should return 0 not (00000001)
usp10.c:510: Test failed: ScriptTextOut should return 0 not (00000001)
usp10.c:775: Test failed: ScriptStringXtoCP should return Ch = 0 not 7 for X = 0
usp10.c:789: Test failed: ScriptStringXtoCP should return Ch = 1 not 7 for X = 0
usp10.c:775: Test failed: ScriptStringXtoCP should return Ch = 1 not 7 for X = 0
usp10.c:789: Test failed: ScriptStringXtoCP should return Ch = 2 not 7 for X = 0
usp10.c:775: Test failed: ScriptStringXtoCP should return Ch = 2 not 7 for X = 0
usp10.c:789: Test failed: ScriptStringXtoCP should return Ch = 3 not 7 for X = 0
usp10.c:775: Test failed: ScriptStringXtoCP should return Ch = 3 not 7 for X = 0
usp10.c:789: Test failed: ScriptStringXtoCP should return Ch = 4 not 7 for X = 0
usp10.c:775: Test failed: ScriptStringXtoCP should return Ch = 4 not 7 for X = 0
usp10.c:789: Test failed: ScriptStringXtoCP should return Ch = 5 not 7 for X = 0
usp10.c:775: Test failed: ScriptStringXtoCP should return Ch = 5 not 7 for X = 0
usp10.c:789: Test failed: ScriptStringXtoCP should return Ch = 6 not 7 for X = 0
usp10.c:775: Test failed: ScriptStringXtoCP should return Ch = 6 not 7 for X = 0
usp10.c:789: Test failed: ScriptStringXtoCP should return Ch = 8 not 9 for X = 7
usp10.c:775: Test failed: ScriptStringXtoCP should return Ch = 8 not 9 for X = 7
usp10.c:804: Test failed: ScriptStringXtoCP should return Ch = 3 not -1 for X = -1
usp10.c:820: Test failed: ScriptStringXtoCP should return Ch = 4 not 7 for X = 1
usp10.c:836: Test failed: ScriptStringXtoCP should return Ch = 2 not -1 for X = -1
make: *** [usp10.ok] Error 21

-- 
Alexandre Julliard
julliard at winehq.org


From roy.evison at ntlworld.com  Sat Mar 15 06:54:23 2008
From: roy.evison at ntlworld.com (roy.evison at ntlworld.com)
Date: Sat, 15 Mar 2008 11:54:23 +0000
Subject: inbox
Message-ID: <20080315115817.IXRT26699.aamtaout03-winn.ispmail.ntl.com@smtp.ntlworld.com>

 Dear Sir/Madam,
                appologies I have lost my password etc but would be greatful if you could see a way to remove me from current thread as my inbox is constantly filling up with stuff, originally about microsoft dll's, that I really do not understand. Many thanks.
  
  Roy.

-----------------------------------------
Email sent from www.virginmedia.com/email
Virus-checked using McAfee(R) Software and scanned for spam



From epssyis at gmail.com  Sat Mar 15 07:18:53 2008
From: epssyis at gmail.com (Edward Savage)
Date: Sat, 15 Mar 2008 23:18:53 +1100
Subject: Wine Security Disclosure
In-Reply-To: <a71bd89a0803141233m62e4135bh1998d9057754b958@mail.gmail.com>
References: <a71bd89a0803141233m62e4135bh1998d9057754b958@mail.gmail.com>
Message-ID: <d6c5d7290803150518t27307drf04ff78bfd45872@mail.gmail.com>

>  However, it is true that we should tell users that Wine is
>  able to run many Windows malware, and that they
>  should be just as careful running Windows software
>  with Wine as they would running it with Windows.
>  We should also show how to install the standard
>  Linux virus checkers.
>  - Dan
>
>
>

That thread got very nasty very quickly starting with dmitry's
comments and getting almost flameful from contributors after that.
Though after continuing testing out malware and known spyware
infecting applications, since I had the environment already setup, my
opinion of this issue has gone from neutral to very strongly in favor
of documenting cases where malware/(and dangerous) spyware cross over.
 A solution I think would be to tag the applications that fall in to
this group with a strong warning in appdb.

A good example I found was the first version of iMesh that included
spyware (released in 02) that runs and almost seamlessly installs and
runs spyware bundled with it.  While not up to date I feel the better
bug for bug support that wine obtains with windows the more smaller
(and in some cases bigger) software solutions it will run, introducing
more bundled vectors - imagine when that purple ape runs under wine!

While I take the comment that it is misguided to catalog issues with
virus that work maybe valid I cannot see how ignoring software
uneducated windows users consider to be legitimate but still contain
spyware/malware can be any less misguided.  People will try and run
these applications and then blame the wine project when they cause
issues with their systems in the same way they do when they load them
under windows.

Since there is no source available the windows environment binaries
(normally) are far more prone to having malicious software included in
legitimate software and there is no escaping that.

Edward


From jan.wine at zerebecki.de  Sat Mar 15 09:50:50 2008
From: jan.wine at zerebecki.de (Jan Zerebecki)
Date: Sat, 15 Mar 2008 15:50:50 +0100
Subject: Bugzilla Privs
In-Reply-To: <fr73mq$enr$1@ger.gmane.org>
References: <fr73mq$enr$1@ger.gmane.org>
Message-ID: <20080315145050.GJ3557@crissy.swd.zerebecki.de>

On Wed, Mar 12, 2008 at 10:13:42AM +1100, Alistair Leslie-Hughes wrote:
>   Can I please get Privs on Bugzilla to help with the msxml work I am doing?

done.


Jan



From dank at kegel.com  Sat Mar 15 10:11:49 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 15 Mar 2008 08:11:49 -0700
Subject: Updated 1.0.0 release criteria; draft 1.0.0 release plan
Message-ID: <a71bd89a0803150811i67426e0foc0d2cd81e084eec2@mail.gmail.com>

I've updated http://wiki.winehq.org/WineReleaseCriteria
to be a bit more final.

I've also written a draft release plan; see
http://wiki.winehq.org/WineReleasePlan

Comments?


From winehacker at gmail.com  Sat Mar 15 11:54:53 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Sat, 15 Mar 2008 12:54:53 -0400
Subject: GSoC
In-Reply-To: <b130c85e0803142011r27a31982s6094a2734b4277c4@mail.gmail.com>
References: <1dd4d8b40803130731r6681a702x9112f3abac8b795a@mail.gmail.com>
	<47D96054.6050301@gmail.com> <47D9B0B3.7050205@open-vote.org>
	<b130c85e0803141445t2966a728r96f263e1aa7ee2a5@mail.gmail.com>
	<b6bb06270803141512l146e8740q3ed9c6069d01c223@mail.gmail.com>
	<19e31a080803141836g60fea439ld717cd545d0724e1@mail.gmail.com>
	<b130c85e0803142011r27a31982s6094a2734b4277c4@mail.gmail.com>
Message-ID: <19e31a080803150954n57593213je5dcf87c679a354c@mail.gmail.com>

On Fri, Mar 14, 2008 at 11:11 PM, Maarten Lankhorst
<m.b.lankhorst at gmail.com> wrote:
> > Given each application tends to have different results depending on
> >  which version of Wine is emulated, the solution to me seems that there
> >  should be a default set like now, such as XP and then the Desktop
> >  Environment should support a right click on the *.EXE where the user
> >  can select
> >
> >  Open With Wine
> >  Open With Wine in Win2000 Mode
> >  Open With Wine in WinXP Mode
> >  etc
> This isn't about specific applications, but for the default
> application wine setting.

I was replying to Austins comment about applications behaving
differently for vista. They already tend to do this for win2000 verses
windows xp so something should be done to address this for users that
are running these applications. Winecfg or another program does not
feel like the right place to me and Wine needs to tie in better with
GNOME in this regard.

I tend to agree the default global version should be set to XP as
there is a lot of backlash against Vista and XP is going to be with us
for a very very long time once SP3 officially goes gold.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From jgardou at yahoo.fr  Sat Mar 15 12:38:54 2008
From: jgardou at yahoo.fr (=?iso-8859-1?q?J=E9r=F4me_Gardou?=)
Date: Sat, 15 Mar 2008 18:38:54 +0100
Subject: Some questions about texture functions of d3dx8/9
Message-ID: <200803151838.54783.jgardou@yahoo.fr>

I'm trying to implement the D3DXGetImageInfoFrom* functions in d3dx8/9 dlls, 
and I have a few questions.

As there is no related source file from this kind of functions, I created 
texture.c within dlls/d3dx8. I guess this is the way you want it, but I'd 
like to hear it from you. 

Then I need libpng to handle this. I know that gdi32 has some (limited) 
support for this files, but I wasn't able to know how it was included in its 
code. A simple #include <png.h> doesn't work, as I expected. So I would like 
to know how wine build process handle third party libraries.

Then, I'd like to know what you think about the code attached here. Please 
don't forget that this is the very first time I make some code for wine !

Cheers.
J?r?me
-------------- next part --------------
A non-text attachment was scrubbed...
Name: textures.c
Type: text/x-csrc
Size: 5197 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080315/c77dffea/attachment.c 

From jjmckenzie51 at sprintpcs.com  Sat Mar 15 12:50:52 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Sat, 15 Mar 2008 10:50:52 -0700
Subject: [Wine] How should I educate myself in order to code for WineHQ?
In-Reply-To: <00b701c8858e$1999cfe0$a600fea9@DMITRY>
References: <1205367112.m2f.1159@forum.winehq.org>
	<a71bd89a0803121721w3ec8b82agcb84d9bad50cd972@mail.gmail.com>
	<47D9F2A4.2000500@sprintpcs.com>
	<00b701c8858e$1999cfe0$a600fea9@DMITRY>
Message-ID: <47DC0C7C.5070702@sprintpcs.com>

Dmitry Timoshkov wrote:
> "James McKenzie" <jjmckenzie51 at sprintpcs.com> wrote:
>
>> Dan Kegel wrote:
>>> On Wed, Mar 12, 2008 at 5:11 PM, jingo811 
>>> <wineforum-user at winehq.org> wrote:
>>>  
>>>>  So I was wondering can you give me an ordered to-do-list in 
>>>> becoming a Code Monkey for WineHQ?
>>>>
>>>>         Like do I have to know both C and C++ to code for Wine.
>>>>     
>>>
>>> Nope, just C.  Go through "The C Programming Language" by
>>> Kernighan and Ritchie, and do all the exercizes.
>>>
>>>   
>> If you can make it through the book, you are very good and will work 
>> well for the Wine project.
>>
>> BTW, anyone want a spare copy of this book?
>
> Unfortunately that's not that simple. Wine programming requires Windows
> API programming skills as well, one needs an experience of using at least
> APIs for the component(s) of Wine he/she is going to write the code for,
> and a good knowledge how it's supposed to work/operate internally. One
> should be prepared to write lots of tests to investigate/clarify 
> behaviour
> described/missing in MSDN.
>
Agreed.  However, for the basics, K&R will do.  They teach how to write 
excellent code rather than passable code.

Also, knowledge on programming best practices is good to have as well.

James



From jjmckenzie51 at sprintpcs.com  Sat Mar 15 12:57:25 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Sat, 15 Mar 2008 10:57:25 -0700
Subject: Updated 1.0.0 release criteria; draft 1.0.0 release plan
In-Reply-To: <a71bd89a0803150811i67426e0foc0d2cd81e084eec2@mail.gmail.com>
References: <a71bd89a0803150811i67426e0foc0d2cd81e084eec2@mail.gmail.com>
Message-ID: <47DC0E05.7050206@sprintpcs.com>

Dan Kegel wrote:
> I've updated http://wiki.winehq.org/WineReleaseCriteria
> to be a bit more final.
>
> I've also written a draft release plan; see
> http://wiki.winehq.org/WineReleasePlan
>
> Comments?
>
>
>   
+1 to the release plan.

James McKenzie



From julliard at winehq.org  Sat Mar 15 13:04:15 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Sat, 15 Mar 2008 19:04:15 +0100
Subject: Updated 1.0.0 release criteria; draft 1.0.0 release plan
In-Reply-To: <a71bd89a0803150811i67426e0foc0d2cd81e084eec2@mail.gmail.com>
	(Dan Kegel's message of "Sat, 15 Mar 2008 08:11:49 -0700")
References: <a71bd89a0803150811i67426e0foc0d2cd81e084eec2@mail.gmail.com>
Message-ID: <87lk4jx3s0.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> I've updated http://wiki.winehq.org/WineReleaseCriteria
> to be a bit more final.
>
> I've also written a draft release plan; see
> http://wiki.winehq.org/WineReleasePlan
>
> Comments?

We need a code freeze and stabilization period before the release. My
thinking is that we should have a 1.0rc1 release, probably sometime in
May, and from that point on only accept small obvious fixes. Then we'd
have rc2, rc3, etc. as needed until the bug list gets small enough. And
by rc1 (or even earlier) any bug that requires more than a small simple
patch would be deferred to 1.1.0.

-- 
Alexandre Julliard
julliard at winehq.org


From dank at kegel.com  Sat Mar 15 13:43:32 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 15 Mar 2008 11:43:32 -0700
Subject: Updated 1.0.0 release criteria; draft 1.0.0 release plan
In-Reply-To: <87lk4jx3s0.fsf@wine.dyndns.org>
References: <a71bd89a0803150811i67426e0foc0d2cd81e084eec2@mail.gmail.com>
	<87lk4jx3s0.fsf@wine.dyndns.org>
Message-ID: <a71bd89a0803151143m1f7fa448uee6e7d1b24d2e9ef@mail.gmail.com>

On Sat, Mar 15, 2008 at 11:04 AM, Alexandre Julliard
<julliard at winehq.org> wrote:
>  > http://wiki.winehq.org/WineReleasePlan
>
>  We need a code freeze and stabilization period before the release. My
>  thinking is that we should have a 1.0rc1 release, probably sometime in
>  May, and from that point on only accept small obvious fixes. Then we'd
>  have rc2, rc3, etc. as needed until the bug list gets small enough. And
>  by rc1 (or even earlier) any bug that requires more than a small simple
>  patch would be deferred to 1.1.0.

How's it look now?
- Dan


From mstefani at redhat.com  Sat Mar 15 15:08:46 2008
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Sat, 15 Mar 2008 21:08:46 +0100
Subject: Updated 1.0.0 release criteria; draft 1.0.0 release plan
In-Reply-To: <87lk4jx3s0.fsf@wine.dyndns.org>
References: <a71bd89a0803150811i67426e0foc0d2cd81e084eec2@mail.gmail.com>
	<87lk4jx3s0.fsf@wine.dyndns.org>
Message-ID: <47DC2CCE.9010809@redhat.com>

Alexandre Julliard wrote:
> "Dan Kegel" <dank at kegel.com> writes:
> 
>> I've updated http://wiki.winehq.org/WineReleaseCriteria
>> to be a bit more final.
>>
>> I've also written a draft release plan; see
>> http://wiki.winehq.org/WineReleasePlan
>>
>> Comments?
> 
> We need a code freeze and stabilization period before the release. My
> thinking is that we should have a 1.0rc1 release, probably sometime in
> May, and from that point on only accept small obvious fixes. Then we'd
What about small janitorial patches?

> have rc2, rc3, etc. as needed until the bug list gets small enough. And
> by rc1 (or even earlier) any bug that requires more than a small simple
> patch would be deferred to 1.1.0.

bye
	michael


From dank at kegel.com  Sat Mar 15 15:53:37 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 15 Mar 2008 13:53:37 -0700
Subject: Updated 1.0.0 release criteria; draft 1.0.0 release plan
In-Reply-To: <47DC2CCE.9010809@redhat.com>
References: <a71bd89a0803150811i67426e0foc0d2cd81e084eec2@mail.gmail.com>
	<87lk4jx3s0.fsf@wine.dyndns.org> <47DC2CCE.9010809@redhat.com>
Message-ID: <a71bd89a0803151353y9e79412g8ce85cf0602ef60b@mail.gmail.com>

Michael Stefaniuc <mstefani at redhat.com> wrote:
>  > thinking is that we should have a 1.0rc1 release, probably sometime in
>  > May, and from that point on only accept small obvious fixes. Then we'd
>  What about small janitorial patches?

If they have low risk, and are obvious, they might well go in.


From julliard at winehq.org  Sat Mar 15 16:27:27 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Sat, 15 Mar 2008 22:27:27 +0100
Subject: Updated 1.0.0 release criteria; draft 1.0.0 release plan
In-Reply-To: <a71bd89a0803151143m1f7fa448uee6e7d1b24d2e9ef@mail.gmail.com>
	(Dan Kegel's message of "Sat, 15 Mar 2008 11:43:32 -0700")
References: <a71bd89a0803150811i67426e0foc0d2cd81e084eec2@mail.gmail.com>
	<87lk4jx3s0.fsf@wine.dyndns.org>
	<a71bd89a0803151143m1f7fa448uee6e7d1b24d2e9ef@mail.gmail.com>
Message-ID: <87hcf7wudc.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> On Sat, Mar 15, 2008 at 11:04 AM, Alexandre Julliard
> <julliard at winehq.org> wrote:
>>  > http://wiki.winehq.org/WineReleasePlan
>>
>>  We need a code freeze and stabilization period before the release. My
>>  thinking is that we should have a 1.0rc1 release, probably sometime in
>>  May, and from that point on only accept small obvious fixes. Then we'd
>>  have rc2, rc3, etc. as needed until the bug list gets small enough. And
>>  by rc1 (or even earlier) any bug that requires more than a small simple
>>  patch would be deferred to 1.1.0.
>
> How's it look now?

Looks good, now we need to work on shrinking that bug list...

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Sat Mar 15 16:32:17 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Sat, 15 Mar 2008 22:32:17 +0100
Subject: Updated 1.0.0 release criteria; draft 1.0.0 release plan
In-Reply-To: <47DC2CCE.9010809@redhat.com> (Michael Stefaniuc's message of
	"Sat, 15 Mar 2008 21:08:46 +0100")
References: <a71bd89a0803150811i67426e0foc0d2cd81e084eec2@mail.gmail.com>
	<87lk4jx3s0.fsf@wine.dyndns.org> <47DC2CCE.9010809@redhat.com>
Message-ID: <87abkzwu5a.fsf@wine.dyndns.org>

Michael Stefaniuc <mstefani at redhat.com> writes:

> Alexandre Julliard wrote:
>> We need a code freeze and stabilization period before the release. My
>> thinking is that we should have a 1.0rc1 release, probably sometime in
>> May, and from that point on only accept small obvious fixes. Then we'd
> What about small janitorial patches?

Obvious low risk patches could go in, but I don't see much need to put
in janitorial patches during the rc phase, they can just as well wait
until 1.0 is out.

-- 
Alexandre Julliard
julliard at winehq.org


From remco47 at yahoo.com  Sat Mar 15 17:35:07 2008
From: remco47 at yahoo.com (Remco)
Date: Sat, 15 Mar 2008 15:35:07 -0700 (PDT)
Subject: Updated 1.0.0 release criteria; draft 1.0.0 release plan
Message-ID: <682197.30196.qm@web50108.mail.re2.yahoo.com>

----- Original Message ----
> From: Dan Kegel <dank at kegel.com>
> I've updated http://wiki.winehq.org/WineReleaseCriteria
> to be a bit more final.
> 
> I've also written a draft release plan; see
> http://wiki.winehq.org/WineReleasePlan
> 
> Comments?


Please note that I'm not complaining, but doesn't that list of criteriaseem a little disappointing? I know what Wine is capable of, but you'retelling the world that, after 15 years, Wine 1.0 is guaranteed to runabout 4 applications.

What about growing the list with a few applications that work perfectly at the moment (such as the top 10 platinum rated apps)?

There is of course a slight stability problem (mandatory updates) with the Steam apps in that top 10 list, so those would have to be excluded.

Remco



      ___________________________________________________________ 
Rise to the challenge for Sport Relief with Yahoo! For Good  

http://uk.promotions.yahoo.com/forgood/


From dank at kegel.com  Sat Mar 15 17:52:48 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 15 Mar 2008 15:52:48 -0700
Subject: Updated 1.0.0 release criteria; draft 1.0.0 release plan
In-Reply-To: <682197.30196.qm@web50108.mail.re2.yahoo.com>
References: <682197.30196.qm@web50108.mail.re2.yahoo.com>
Message-ID: <a71bd89a0803151552u6d5b746ax141bfa57063bd882@mail.gmail.com>

On Sat, Mar 15, 2008 at 3:35 PM, Remco <remco47 at yahoo.com> wrote:
>  What about growing the list with a few applications that work perfectly at the moment (such as the top 10 platinum rated apps)?

The problem with expanding the list is that each new app
adds a huge amount of testing to each release.

If you can provide an automated test case for your
favorite platinum app, so that we can just run it without
any manual work, I'll gladly add it to the list.
- Dan

p.s.
http://appdb.winehq.org/browse_by_rating.php lists 1227
(that's over a thousand!) platinum applications.
I'm willing to bet that the real number is a lot lower.


From dank at kegel.com  Sat Mar 15 18:15:06 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 15 Mar 2008 16:15:06 -0700
Subject: Wine code freeze in seven weeks; volunteers needed to fix 1.0 bugs
Message-ID: <a71bd89a0803151615u391878e4ub6bd99385ba372b3@mail.gmail.com>

Per http://wiki.winehq.org/WineReleasePlan,
in early May, Wine's trunk will go into code freeze,
and only small, obvious bugfixes will be accepted.

Now might be a good time to start winding down
development, and switching to cleaning up loose ends.

http://bugs.winehq.org/buglist.cgi?query_format=advanced&product=Wine&target_milestone=1.0.0&bug_status=UNCONFIRMED&bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED
lists 99 bugs targeted for the 1.0.0 release.
When the code freeze starts, we will defer most of the
remaining unfixed 1.0 bugs to the 1.1 release.

A bunch of them have patches or good analysis
attached, and it'd be a shame if those got deferred,
so please have a look at these, and if you have time,
pick an easy one to fix.
- Dan


From dank at kegel.com  Sat Mar 15 18:25:51 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 15 Mar 2008 16:25:51 -0700
Subject: Updated 1.0.0 release criteria; draft 1.0.0 release plan
In-Reply-To: <a71bd89a0803151552u6d5b746ax141bfa57063bd882@mail.gmail.com>
References: <682197.30196.qm@web50108.mail.re2.yahoo.com>
	<a71bd89a0803151552u6d5b746ax141bfa57063bd882@mail.gmail.com>
Message-ID: <a71bd89a0803151625r26b1b2bei97230cf6ad2b8f0a@mail.gmail.com>

On Sat, Mar 15, 2008 at 3:52 PM, Dan Kegel <dank at kegel.com> wrote:
>  If you can provide an automated test case for your
>  favorite platinum app, so that we can just run it without
>  any manual work, I'll gladly add it to the list.

That's not as hard as it sounds.
You might consider adapting existing automated installer
scripts such as the ones at http://wpkg.org/ or
http://unattended.sourceforge.net/

There are surely dozens of apps that are
have freely downloadable versions and
can have automated installs.  All of them
ought to be part of the release criteria;
we're just short on manpower to write those scripts.
- Dan


From jjmckenzie51 at sprintpcs.com  Sat Mar 15 19:13:54 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Sat, 15 Mar 2008 17:13:54 -0700
Subject: Updated 1.0.0 release criteria; draft 1.0.0 release plan
In-Reply-To: <a71bd89a0803151143m1f7fa448uee6e7d1b24d2e9ef@mail.gmail.com>
References: <a71bd89a0803150811i67426e0foc0d2cd81e084eec2@mail.gmail.com>
	<87lk4jx3s0.fsf@wine.dyndns.org>
	<a71bd89a0803151143m1f7fa448uee6e7d1b24d2e9ef@mail.gmail.com>
Message-ID: <47DC6642.5060102@sprintpcs.com>

Dan Kegel wrote:
> On Sat, Mar 15, 2008 at 11:04 AM, Alexandre Julliard
> <julliard at winehq.org> wrote:
>   
>>  > http://wiki.winehq.org/WineReleasePlan
>>
>>  We need a code freeze and stabilization period before the release. My
>>  thinking is that we should have a 1.0rc1 release, probably sometime in
>>  May, and from that point on only accept small obvious fixes. Then we'd
>>  have rc2, rc3, etc. as needed until the bug list gets small enough. And
>>  by rc1 (or even earlier) any bug that requires more than a small simple
>>  patch would be deferred to 1.1.0.
>>     
>
> How's it look now?
> - Dan
>
>
>   
Dan:

How much of a pain would it be to switch to weekly releases during the 
rc period to catch patches and regresssions?

James



From austinenglish at gmail.com  Sat Mar 15 19:16:25 2008
From: austinenglish at gmail.com (Austin English)
Date: Sat, 15 Mar 2008 19:16:25 -0500
Subject: Updated 1.0.0 release criteria; draft 1.0.0 release plan
In-Reply-To: <a71bd89a0803151625r26b1b2bei97230cf6ad2b8f0a@mail.gmail.com>
References: <682197.30196.qm@web50108.mail.re2.yahoo.com>
	<a71bd89a0803151552u6d5b746ax141bfa57063bd882@mail.gmail.com>
	<a71bd89a0803151625r26b1b2bei97230cf6ad2b8f0a@mail.gmail.com>
Message-ID: <b6bb06270803151716j2a43d362if6270f7298f007ab@mail.gmail.com>

On Sat, Mar 15, 2008 at 6:25 PM, Dan Kegel <dank at kegel.com> wrote:
>  That's not as hard as it sounds.
>  You might consider adapting existing automated installer
>  scripts such as the ones at http://wpkg.org/ or
>  http://unattended.sourceforge.net/
>
>  There are surely dozens of apps that are
>  have freely downloadable versions and
>  can have automated installs.  All of them
>  ought to be part of the release criteria;
>  we're just short on manpower to write those scripts.
>  - Dan

We had talked a while back about doing this, but it seems it never
went anywhere. If you'd like Dan, I can probably write a few of
those...Just send me an e-mail with what you want/an example.

-Austin


From jjmckenzie51 at sprintpcs.com  Sat Mar 15 19:58:18 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Sat, 15 Mar 2008 17:58:18 -0700
Subject: Wine code freeze in seven weeks; volunteers needed to fix 1.0 bugs
In-Reply-To: <a71bd89a0803151615u391878e4ub6bd99385ba372b3@mail.gmail.com>
References: <a71bd89a0803151615u391878e4ub6bd99385ba372b3@mail.gmail.com>
Message-ID: <47DC70AA.2030305@sprintpcs.com>

Dan Kegel wrote:
> Per http://wiki.winehq.org/WineReleasePlan,
> in early May, Wine's trunk will go into code freeze,
> and only small, obvious bugfixes will be accepted.
>
> Now might be a good time to start winding down
> development, and switching to cleaning up loose ends.
>
> http://bugs.winehq.org/buglist.cgi?query_format=advanced&product=Wine&target_milestone=1.0.0&bug_status=UNCONFIRMED&bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED
> lists 99 bugs targeted for the 1.0.0 release.
> When the code freeze starts, we will defer most of the
> remaining unfixed 1.0 bugs to the 1.1 release.
>
> A bunch of them have patches or good analysis
> attached, and it'd be a shame if those got deferred,
> so please have a look at these, and if you have time,
> pick an easy one to fix.
> - Dan
>
>
>   
Dan:

6254 had a proposed fix from Tony Rollo, and was worked on both Lai 
Zhang and myself.  Can I send the proposed patch to the dev list for 
review?  The patch fixes the problem stated.

James McKenzie



From dank at kegel.com  Sat Mar 15 20:06:18 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 15 Mar 2008 18:06:18 -0700
Subject: Wine code freeze in seven weeks; volunteers needed to fix 1.0 bugs
In-Reply-To: <47DC70AA.2030305@sprintpcs.com>
References: <a71bd89a0803151615u391878e4ub6bd99385ba372b3@mail.gmail.com>
	<47DC70AA.2030305@sprintpcs.com>
Message-ID: <a71bd89a0803151806v50916e6ctfe836829bd226a1b@mail.gmail.com>

<jjmckenzie51 at sprintpcs.com> wrote:
>  6254 had a proposed fix from Tony Rollo, and was worked on both Lai
>  Zhang and myself.  Can I send the proposed patch to the dev list for
>  review?  The patch fixes the problem stated.

Lei, feel like resubmitting
http://winehq.org/pipermail/wine-patches/2007-June/040182.html ?
- Dan


From thestig at google.com  Sat Mar 15 20:13:59 2008
From: thestig at google.com (Lei Zhang)
Date: Sat, 15 Mar 2008 18:13:59 -0700
Subject: Wine code freeze in seven weeks; volunteers needed to fix 1.0 bugs
In-Reply-To: <a71bd89a0803151806v50916e6ctfe836829bd226a1b@mail.gmail.com>
References: <a71bd89a0803151615u391878e4ub6bd99385ba372b3@mail.gmail.com>
	<47DC70AA.2030305@sprintpcs.com>
	<a71bd89a0803151806v50916e6ctfe836829bd226a1b@mail.gmail.com>
Message-ID: <558b2f5c0803151813s56526128v1358cbeeac53cc33@mail.gmail.com>

On Sat, Mar 15, 2008 at 6:06 PM, Dan Kegel <dank at kegel.com> wrote:
> <jjmckenzie51 at sprintpcs.com> wrote:
>  >  6254 had a proposed fix from Tony Rollo, and was worked on both Lai
>  >  Zhang and myself.  Can I send the proposed patch to the dev list for
>  >  review?  The patch fixes the problem stated.
>
>  Lei, feel like resubmitting
>  http://winehq.org/pipermail/wine-patches/2007-June/040182.html ?
>  - Dan
>
>
>

That patch is old and crusty and doesn't apply anymore. James should
have an updated version.


From m.b.lankhorst at gmail.com  Sat Mar 15 20:44:42 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Sat, 15 Mar 2008 18:44:42 -0700
Subject: Is the cxtest.org site down?
Message-ID: <b130c85e0803151844o411b74fbo11e4114ce9de912b@mail.gmail.com>

Hi,

I was trying to look at www.cxtest.org but the site seems not to work.
Can this be fixed?

Cheers,
Maarten.


From tehblunderbuss at gmail.com  Sat Mar 15 23:42:49 2008
From: tehblunderbuss at gmail.com (TheBlunderbuss)
Date: Sat, 15 Mar 2008 23:42:49 -0500
Subject: Wine Security Disclosure
Message-ID: <47DCA549.5010209@gmail.com>

An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080315/7f1341bd/attachment.htm 

From dmitry at codeweavers.com  Sun Mar 16 00:29:20 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 16 Mar 2008 13:29:20 +0800
Subject: Wine Security Disclosure
References: <47DCA549.5010209@gmail.com>
Message-ID: <007501c88726$b1199550$a600fea9@DMITRY>

"TheBlunderbuss" <tehblunderbuss at gmail.com> wrote:

[skipped]

> This level of security info is something everyone should have easy
> access to and know before starting Wine. Of course, wherever I'm not
> accurate, feel free to fill in!

There is nothing special about Wine that doesn't apply to common
unix/linux/windows security practices.

-- 
Dmitry.


From lats at yless4u.com.au  Sun Mar 16 00:46:21 2008
From: lats at yless4u.com.au (Jeff Latimer)
Date: Sun, 16 Mar 2008 16:46:21 +1100
Subject: Wine Security Disclosure
In-Reply-To: <007501c88726$b1199550$a600fea9@DMITRY>
References: <47DCA549.5010209@gmail.com>
	<007501c88726$b1199550$a600fea9@DMITRY>
Message-ID: <47DCB42D.9020709@yless4u.com.au>

Dmitry Timoshkov wrote:
> "TheBlunderbuss" <tehblunderbuss at gmail.com> wrote:
>
> [skipped]
>
>   
>> This level of security info is something everyone should have easy
>> access to and know before starting Wine. Of course, wherever I'm not
>> accurate, feel free to fill in!
>>     
> There is nothing special about Wine that doesn't apply to common
> unix/linux/windows security practices.
here is the myth that Linux/Unix is impervious to viri and for new Linux 
users not to be concerned about the issue.


From winehacker at gmail.com  Sun Mar 16 02:33:19 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Sun, 16 Mar 2008 03:33:19 -0400
Subject: Wine Security Disclosure
In-Reply-To: <007501c88726$b1199550$a600fea9@DMITRY>
References: <47DCA549.5010209@gmail.com>
	<007501c88726$b1199550$a600fea9@DMITRY>
Message-ID: <19e31a080803160033t33e2ac67k4aa974f263063de9@mail.gmail.com>

On Sun, Mar 16, 2008 at 1:29 AM, Dmitry Timoshkov
<dmitry at codeweavers.com> wrote:
>  There is nothing special about Wine that doesn't apply to common
>  unix/linux/windows security practices.

No but people come to Linux hearing that its more secure than Windows
for various reasons. While this may or may not be true, if we are so
compatible that we can run virii and spyware, then we need to document
it as TheBlunderbuss said otherwise there will be many people
disappointed by unrealistic expectations.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From dmitry at codeweavers.com  Sun Mar 16 02:52:01 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 16 Mar 2008 15:52:01 +0800
Subject: Wine Security Disclosure
References: <47DCA549.5010209@gmail.com><007501c88726$b1199550$a600fea9@DMITRY>
	<19e31a080803160033t33e2ac67k4aa974f263063de9@mail.gmail.com>
Message-ID: <020801c8873a$9f945310$a600fea9@DMITRY>

"Steven Edwards" <winehacker at gmail.com> wrote:

>>  There is nothing special about Wine that doesn't apply to common
>>  unix/linux/windows security practices.
> 
> No but people come to Linux hearing that its more secure than Windows
> for various reasons.

I hardly see that it's a Wine problem.

> While this may or may not be true, if we are so
> compatible that we can run virii and spyware, then we need to document
> it as TheBlunderbuss said otherwise there will be many people
> disappointed by unrealistic expectations.

Again, I don't see how Wine developers could help with that, we are developers,
not a health care department.

-- 
Dmitry.


From winehacker at gmail.com  Sun Mar 16 03:07:42 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Sun, 16 Mar 2008 04:07:42 -0400
Subject: Wine Security Disclosure
In-Reply-To: <020801c8873a$9f945310$a600fea9@DMITRY>
References: <47DCA549.5010209@gmail.com>
	<007501c88726$b1199550$a600fea9@DMITRY>
	<19e31a080803160033t33e2ac67k4aa974f263063de9@mail.gmail.com>
	<020801c8873a$9f945310$a600fea9@DMITRY>
Message-ID: <19e31a080803160107g7a68d284k4cf62d5807dbea0f@mail.gmail.com>

On Sun, Mar 16, 2008 at 3:52 AM, Dmitry Timoshkov
<dmitry at codeweavers.com> wrote:
>  Again, I don't see how Wine developers could help with that, we are developers,
>  not a health care department.

And this is why there is a disconnect from developers to users. If you
don't document what are and are not valid assumptions and behaviors,
how the hell do you expect the user to figure it out? One reason there
is not a ton of spyware/virii for Linux and friends is most packages
come in source and binary form  where there is the chance of peer
review (and the fact the market share is so small its not worth
targeting) but users don't know that. They think Wine+Linux will just
magically solve the problem due to the apparent "betterness" of Linux.
If we don't properly address that, then users will be disappointed
because the real value comes from the free as in freedom part of the
software not the assumed enhanced security.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From dmitry at codeweavers.com  Sun Mar 16 03:14:23 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 16 Mar 2008 16:14:23 +0800
Subject: Wine Security Disclosure
References: <47DCA549.5010209@gmail.com>
	<007501c88726$b1199550$a600fea9@DMITRY>
	<19e31a080803160033t33e2ac67k4aa974f263063de9@mail.gmail.com>
	<020801c8873a$9f945310$a600fea9@DMITRY>
	<19e31a080803160107g7a68d284k4cf62d5807dbea0f@mail.gmail.com>
Message-ID: <000d01c8873d$c0351c00$a600fea9@DMITRY>

"Steven Edwards" <winehacker at gmail.com> wrote:

> On Sun, Mar 16, 2008 at 3:52 AM, Dmitry Timoshkov
> <dmitry at codeweavers.com> wrote:
>>  Again, I don't see how Wine developers could help with that, we are developers,
>>  not a health care department.
> 
> And this is why there is a disconnect from developers to users. If you
> don't document what are and are not valid assumptions and behaviors,
> how the hell do you expect the user to figure it out? One reason there
> is not a ton of spyware/virii for Linux and friends is most packages
> come in source and binary form  where there is the chance of peer
> review (and the fact the market share is so small its not worth
> targeting) but users don't know that. They think Wine+Linux will just
> magically solve the problem due to the apparent "betterness" of Linux.
> If we don't properly address that, then users will be disappointed
> because the real value comes from the free as in freedom part of the
> software not the assumed enhanced security.

That's more like a social/mental/political problem, not something this list
is about. The purpse of Wine is to run the code written for Windows, nothing
more nothing less. Perhaps to clarify the assumptions one should start from
reading README in the Wine source and front page of winehq.org.

-- 
Dmitry.


From r.kalbermatter at hccnet.nl  Sun Mar 16 04:05:41 2008
From: r.kalbermatter at hccnet.nl (Rolf Kalbermatter)
Date: Sun, 16 Mar 2008 10:05:41 +0100
Subject: Wine Security Disclosure
In-Reply-To: <007501c88726$b1199550$a600fea9@DMITRY>
References: <47DCA549.5010209@gmail.com>
	<007501c88726$b1199550$a600fea9@DMITRY>
Message-ID: <006601c88744$e8f49c90$4001a8c0@NATERS>

Dmitry Timoshkov [mailto:dmitry at codeweavers.com] wrote:

> > This level of security info is something everyone should have easy 
> > access to and know before starting Wine. Of course, wherever I'm not 
> > accurate, feel free to fill in!
> 
> There is nothing special about Wine that doesn't apply to 
> common unix/linux/windows security practices.

This is correct but with Wine 1.0 approaching you are now targetting an
audience that knows often nothing about Unix/Linux other than it's
mythological lack of sensitivity to viri. That this lack is more a question
of a lack of a common and standardizid target due to it's lower market
penetration in end user systems and many flavors and user specific setups
is beyond them. Wine now offers almost the same attack target as does
Windows due to its already good and still improving compatibility with it.

So although you obviously don't like it, maybe because you do not want to
shy away new potential users, a warning somewhere with a description is
definitly not the wrong thing to do. But I do feel the original poster
used still a to much unix language for the upcoming average Wine users.

There definitely still exists that picture that Linux is much more secure
no matter how bad you treat it and that is simply not true and an upcoming
user should be educated about that. It should be made clear in my opinion
that Wine is not meant and can't be used to run Windows applications
whithout observing exactly the same care and security as you would need
on Windows.

You won't be able to avoid the bad publicity about people messing up their
system under Wine but at least you can say that this was known and
documented
and Wine isn't a magical bulletproof security solution that allows users
to download every single Warez application that is out there without risking
more or less the same problems as you would get under Windows. And once Wine
has gotten the wide spread use we would all like to see, the next step to
Wine aware viri and such is not that big, believe me.

Rolf Kalbermatter



From paul.vriens.wine at gmail.com  Sun Mar 16 04:29:26 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Sun, 16 Mar 2008 10:29:26 +0100
Subject: [Tools 7/7] winetest: Add some heuristics to detect missing dlls
	in	version 3 reports.
In-Reply-To: <alpine.DEB.1.00.0803142003100.23729@amboise.dolphin>
References: <alpine.DEB.1.00.0803142003100.23729@amboise.dolphin>
Message-ID: <47DCE876.8020507@gmail.com>

Hi,

I saw that 'gather' is not creating the index.html file at test.winehq.org anymore.

I had a quick look at test.winehq.org and something seem to have go wrong with 
the patching of 'gather':

pvriens at wine:/home/winehq/opt/winetest$ perl gather
Use of bare << to mean <<"" is deprecated at gather line 142.
Use of bare << to mean <<"" is deprecated at gather line 171.
Global symbol "$testref" requires explicit package name at gather line 142.
Global symbol "$extrema" requires explicit package name at gather line 142.
Global symbol "$extrema" requires explicit package name at gather line 142.
Global symbol "$extrema" requires explicit package name at gather line 142.
Global symbol "$extrema" requires explicit package name at gather line 142.
Global symbol "$extrema" requires explicit package name at gather line 142.
syntax error at gather line 176, near "HEAD:"
   (Might be a runaway multi-line << string starting on line 171)
Execution of gather aborted due to compilation errors.

-- 
Cheers,

Paul.


From artur.szymiec at gmail.com  Sun Mar 16 04:49:36 2008
From: artur.szymiec at gmail.com (Artur Szymiec)
Date: Sun, 16 Mar 2008 10:49:36 +0100
Subject: DSound Issues
Message-ID: <47DCED30.6030106@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Greeetings,

I would like to trackdown an issue with Direct Sound
on TM United (BUG http://bugs.winehq.org/show_bug.cgi?id=12058).

How can I provide some usefull data for DSound maintainers ?

Best regards
Artur

- --
- --------------------------------------------------------------------------
Registered User No 397465
Linux Debian 2.6.24.2 AMD Athlon(tm) 64 X2 Dual Core 5000+
Conquer your Desktop! http://www.kde.org/trykde/
Reclaim Your Inbox!   http://www.mozilla.org/products/thunderbird/
- --------------------------------------------------------------------------
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFH3O0vbB2ld6kq2MsRAoiXAJ94yo6Lyhc6pnjPibpDr0s+aJlbTACg1dJd
gCpvefzVOhd0rJBKPOMXLOg=
=QhL+
-----END PGP SIGNATURE-----



From bobbyg at gmx.net  Sun Mar 16 08:44:37 2008
From: bobbyg at gmx.net (bobbyg at gmx.net)
Date: Sun, 16 Mar 2008 14:44:37 +0100
Subject: ddraw: Fix refcounting of palettes
Message-ID: <47DD2445.2060502@gmx.net>

This fixes a crash in a game called "Autobahnverfolgungsjagd Total"
(not in AppDB).

While tracing this bug I noticed that
IWineD3DBaseSurfaceImpl_GetPalette() does not call AddRef when
returning the palette. Is that intentional?

Cheers,
Cihan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-ddraw-Fix-refcounting-of-palettes.patch
Type: text/x-patch
Size: 0 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080316/d45e0a9b/attachment.bin 

From cia at koala  Sun Mar 16 08:25:27 2008
From: cia at koala (Cihan Altinay)
Date: Sun, 16 Mar 2008 14:25:27 +0100
Subject: ddraw: Fix refcounting of palettes
Message-ID: <mailman.166.1205675095.3731.wine-devel@winehq.org>

This patch prevents releasing the same palettes more than once if main
surfaces have a palette while sub-surfaces haven't.

---
 dlls/ddraw/texture.c |   12 ++++++++++--
 1 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/dlls/ddraw/texture.c b/dlls/ddraw/texture.c
index 8835e4e..551e3b2 100644
--- a/dlls/ddraw/texture.c
+++ b/dlls/ddraw/texture.c
@@ -380,8 +380,16 @@ IDirect3DTextureImpl_Load(IDirect3DTexture2 *iface,
             IDirectDrawPalette_SetEntries(pal, 0, 0, 256, palent);
         }
 
-        if (pal) IDirectDrawPalette_Release(pal);
-        if (pal_src) IDirectDrawPalette_Release(pal_src);
+        if (pal)
+        {
+            IDirectDrawPalette_Release(pal);
+            pal = NULL;
+        }
+        if (pal_src)
+        {
+            IDirectDrawPalette_Release(pal_src);
+            pal_src = NULL;
+        }
 
         /* Copy one surface on the other */
         dst_d = (DDSURFACEDESC *)&(This->surface_desc);
-- 
1.5.4.2


--------------070206050602010305060400--


From dank at kegel.com  Sun Mar 16 09:01:03 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 16 Mar 2008 07:01:03 -0700
Subject: Wine Security Disclosure
In-Reply-To: <d6c5d7290803150518t27307drf04ff78bfd45872@mail.gmail.com>
References: <a71bd89a0803141233m62e4135bh1998d9057754b958@mail.gmail.com>
	<d6c5d7290803150518t27307drf04ff78bfd45872@mail.gmail.com>
Message-ID: <a71bd89a0803160701l396265a1xec06ea8345f67f8a@mail.gmail.com>

dmitry wrote:
>> if we are so compatible that we can run virii and spyware,
>> then we need to document it ... otherwise there will be many people
>> disappointed by unrealistic expectations.
>
> Again, I don't see how Wine developers could help with that,
> we are developers, not a health care department.

We can help in several ways:

1) at the top of our documentation, we can say

 "Warning: Wine can run Windows viruses and malware.
  Always practice safe computing -
  never run anything from somebody you don't trust,
  and never run any Windows app you haven't scanned
  for viruses."

2) we can at least document how to use clamav with wine,
  or link to clamav and its doc, e.g.
  http://www.clamav.net/
  https://help.ubuntu.com/community/ClamAV

3) we can warn on startup if we detect that clamav
  is not present.

4) we can try to make it easy to use free virus scanners
  with wine.  Some ideas:
  http://www.burghardt.pl/2007/11/wine-with-on-access-clamav-scanning/
  http://www.christoph-probst.com/soc2006/wine/

It's not enough to provide Wine and throw up our hands
saying "It's up to users to protect their systems"
because our users are at worst quite literally clueless,
and at best too busy to want to bother with virus issues.
If we can guide them or ease their way, we should.
- Dan


From stefan at codeweavers.com  Sun Mar 16 09:11:34 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 16 Mar 2008 15:11:34 +0100
Subject: Wine SOC - any d3d related projects
In-Reply-To: <47DACC46.8060302@gmail.com>
References: <47DACC46.8060302@gmail.com>
Message-ID: <200803161511.34306.stefan@codeweavers.com>

Am Freitag, 14. M?rz 2008 20:04:38 schrieb Artur Szymiec:
> Hi,
>
> are there any d3d related projects for SOC 2008 ?
> Who is the Mentor ? How can I join ?
For any D3D(not d3dx) gsoc project Henri, Roderick or I would be the mentor. 
If you want to do a project this list is a good place to announce your 
interest, later when the student registration is open you can officially 
apply at google's SOC pages.

I have a few rough ideas which I think might work:

*) Fixed function pipeline replacement shader using ARB shaders or GLSL
*) Pixel shader 1.x support using GL_ATI_fragment_shader(for shader support on 
ATI r200,r250 and r280 cards)
*) Pixel shader 1.x support using GL_NV_texture_shader and 
GL_NV_register_combiners(For shader support on Geforce 3 and Geforce 4 cards)
*) Get native d3drm.dll running. That's a good pool for finding ddraw/d3d7 
bugs.

A few othe ideas which might be hard for someone who doesn't know the code 
yet:

*) Prepare WineD3D for OpenGL 3(is that even out yet???) by splitting opengl 
rendering code from general management code. That is done already for 
surfaces, but needs to be done for IWineD3DDevice and buffers

*) Move WineD3D to a d3d10-like architecture: Restructure the textures, 
surfaces, index and vertex buffers around the D3D10/OpenGL resource model. To 
make use of that implement ATIs R2VB(render to vertex buffer) hack in 
d3d9.dll.

Maybe also worth a consideration:
*) Take an advanced game(e.g. Team Fortress 2 in dxlevel 95, Bioshock or 
Crysis) and a graphics driver which doesn't yet work as intended(e.g. fglrx 
or any MacOS driver) and isolate the problems that prevent it from working on 
the chosen driver. Then either find workarounds or report the bug to the 
driver vendor. The problem here is that we cannot find a timeframe for a 
debugging project. It could be done withhin 5 minutes or take years.

*) Similarly, in cooperation with the Xorg guys: Find the bug that causes 
those pesky random memory corruptions when using WineD3D with Mesa/DRI 
drivers.


From jjmckenzie51 at sprintpcs.com  Sun Mar 16 09:13:22 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Sun, 16 Mar 2008 07:13:22 -0700
Subject: Wine code freeze in seven weeks; volunteers needed to fix 1.0 bugs
In-Reply-To: <558b2f5c0803151813s56526128v1358cbeeac53cc33@mail.gmail.com>
References: <a71bd89a0803151615u391878e4ub6bd99385ba372b3@mail.gmail.com>
	<47DC70AA.2030305@sprintpcs.com>
	<a71bd89a0803151806v50916e6ctfe836829bd226a1b@mail.gmail.com>
	<558b2f5c0803151813s56526128v1358cbeeac53cc33@mail.gmail.com>
Message-ID: <47DD2B02.3050001@sprintpcs.com>

Lei Zhang wrote:
> On Sat, Mar 15, 2008 at 6:06 PM, Dan Kegel <dank at kegel.com> wrote:
>   
>> <jjmckenzie51 at sprintpcs.com> wrote:
>>  >  6254 had a proposed fix from Tony Rollo, and was worked on both Lai
>>  >  Zhang and myself.  Can I send the proposed patch to the dev list for
>>  >  review?  The patch fixes the problem stated.
>>
>>  Lei, feel like resubmitting
>>  http://winehq.org/pipermail/wine-patches/2007-June/040182.html ?
>>  - Dan
>>
>>
>>
>>     
>
> That patch is old and crusty and doesn't apply anymore. James should
> have an updated version.
>
>
>   
Lei:

I do and I will look at it this afternoon.  It is supposed to be very 
rainy with thunderstorms here in Southern Arizona (we'll take every drop 
of rain we can get, we are in a drought) so I should be able to look at 
it and see if it applies to .57.  If it does, I will send it first to 
this list for comments and then after fixing what I can, to patches for 
integration.

I would like to publically thank Tony Rollo and you for the work you 
did, the both of you did the heavy work, I'm just cleaning it up.

James McKenzie



From dank at kegel.com  Sun Mar 16 09:30:06 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 16 Mar 2008 07:30:06 -0700
Subject: appdb request: "Browse Regressions"
Message-ID: <a71bd89a0803160730o466a24f9x2345e3aa64f8b512@mail.gmail.com>

The nice reports in recent wwn's showing changes in
appdb ratings make me want to use the appdb itself
to see which apps have recently fallen in rating.

Following past appdb practice, one would implement
that by adding a new "Browse Regressions" menu
item on the left, below Browse Apps, Browse Newest Apps,
Downloadable Apps, and Browse Apps by Rating.

I expect this will become increasingly useful as
we approach 1.0.  How hard would it be?

(Also, it might be nice to have an "advanced browse"
that let you filter and sort by date, rating, and rating change.
Once that works well, we might not need
all those other specific browse commands...)
- Dan


From phil at newstar.rinet.ru  Sun Mar 16 09:43:12 2008
From: phil at newstar.rinet.ru (Phil Krylov)
Date: Sun, 16 Mar 2008 17:43:12 +0300
Subject: Wine code freeze in seven weeks; volunteers needed to fix 1.0 bugs
In-Reply-To: <47DD2B02.3050001@sprintpcs.com>
References: <a71bd89a0803151615u391878e4ub6bd99385ba372b3@mail.gmail.com>
	<47DC70AA.2030305@sprintpcs.com>
	<a71bd89a0803151806v50916e6ctfe836829bd226a1b@mail.gmail.com>
	<558b2f5c0803151813s56526128v1358cbeeac53cc33@mail.gmail.com>
	<47DD2B02.3050001@sprintpcs.com>
Message-ID: <c10dbf450803160743h203d66e8s8d731d20dd300d63@mail.gmail.com>

Hi,

>  > That patch is old and crusty and doesn't apply anymore. James should
>  > have an updated version.

One thing I can add from looking at that patch is that the comments
about the deficiency of MS richedit tables handling are true only for
versions <=2.0. Later versions, including msftedit, improved tables
handling with each new version.

-- Ph


From truiken at gmail.com  Sun Mar 16 09:30:04 2008
From: truiken at gmail.com (James Hawkins)
Date: Sun, 16 Mar 2008 07:30:04 -0700
Subject: Wine code freeze in seven weeks; volunteers needed to fix 1.0 bugs
In-Reply-To: <47DD2B02.3050001@sprintpcs.com>
References: <a71bd89a0803151615u391878e4ub6bd99385ba372b3@mail.gmail.com>
	<47DC70AA.2030305@sprintpcs.com>
	<a71bd89a0803151806v50916e6ctfe836829bd226a1b@mail.gmail.com>
	<558b2f5c0803151813s56526128v1358cbeeac53cc33@mail.gmail.com>
	<47DD2B02.3050001@sprintpcs.com>
Message-ID: <251311EF-C57F-4D1A-9A81-A1D971F12D53@gmail.com>



On Mar 16, 2008, at 7:13 AM, James McKenzie  
<jjmckenzie51 at sprintpcs.com> wrote:

> Lei Zhang wrote:
>> On Sat, Mar 15, 2008 at 6:06 PM, Dan Kegel <dank at kegel.com> wrote:
>>
>>> <jjmckenzie51 at sprintpcs.com> wrote:
>>>> 6254 had a proposed fix from Tony Rollo, and was worked on both Lai
>>>> Zhang and myself.  Can I send the proposed patch to the dev list  
>>>> for
>>>> review?  The patch fixes the problem stated.
>>>
>>> Lei, feel like resubmitting
>>> http://winehq.org/pipermail/wine-patches/2007-June/040182.html ?
>>> - Dan
>>>
>>>
>>>
>>>
>>
>> That patch is old and crusty and doesn't apply anymore. James should
>> have an updated version.
>>
>>
>>
> Lei:
>
> I do and I will look at it this afternoon.  It is supposed to be very
> rainy with thunderstorms here in Southern Arizona (we'll take every  
> drop
> of rain we can get, we are in a drought) so I should be able to look  
> at
> it and see if it applies to .57.  If it does, I will send it first to
> this list for comments and then after fixing what I can, to patches  
> for
> integration.
>
> I would like to publically thank Tony Rollo and you for the work you
> did, the both of you did the heavy work, I'm just cleaning it up.
>
> James McKenzie
>
>
>

How crazy!  I'm just now driving through that rain on my way to LA :)

James


From kai.blin at gmail.com  Sun Mar 16 09:48:13 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Sun, 16 Mar 2008 15:48:13 +0100
Subject: Wine code freeze in seven weeks; volunteers needed to fix 1.0 bugs
In-Reply-To: <a71bd89a0803151615u391878e4ub6bd99385ba372b3@mail.gmail.com>
References: <a71bd89a0803151615u391878e4ub6bd99385ba372b3@mail.gmail.com>
Message-ID: <200803161548.20259.kai.blin@gmail.com>

On Sunday 16 March 2008 00:15:06 Dan Kegel wrote:
> Per http://wiki.winehq.org/WineReleasePlan,
> in early May, Wine's trunk will go into code freeze,
> and only small, obvious bugfixes will be accepted.

Could we please come up with a good plan on how to handle Summer of Code 
contributions _before_ we do a code freeze? I remember that the 2005 code 
freeze just when I was starting to get my patches in was immensely 
frustrating. Git will make this easier, but we _need_ to decide how we want 
to handle ongoing contributions. I know the idea of a code freeze is to get 
people working on existing bugs but for the SoC students that's just not an 
option. If we don't integrate the code during SoC, I doubt we're really going 
to use it. I still remember the ClamAV plugin that never made it to the 
master branch.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080316/d0b60988/attachment.pgp 

From stefan at codeweavers.com  Sun Mar 16 10:11:51 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 16 Mar 2008 16:11:51 +0100
Subject: d3dx9_36: Implements D3DXGetShaderVersion
In-Reply-To: <47DB11DD.3000708@ilidium.com>
References: <47DB11DD.3000708@ilidium.com>
Message-ID: <200803161611.51758.stefan@codeweavers.com>

Am Samstag, 15. M?rz 2008 01:01:33 schrieb Luis C. Busquets P?rez:
> To implement a test would be far more complicated as it would mean to
> include a binary shader. Anyway, I have tested the results with Civ4 (by
> making a derivation on d3dx9_32 with this function and using the
> original d3dx9_36.D3DXGetShaderVersion function) and the results where
> the same for all the shaders that where present.
You can grab a few binary shaders from dlls/d3d9/tests/visual.c I guess a few 
DWORDs would be enough. You can use the D3D9 sdk compiler to generate a few 
shaders:

wine vsa.exe shader.txt /Fh shader.h

Then shader.h contains a DWORD[] array with the shader bytecode


From dmitry at codeweavers.com  Sun Mar 16 10:21:42 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 16 Mar 2008 23:21:42 +0800
Subject: Wine Security Disclosure
References: <a71bd89a0803141233m62e4135bh1998d9057754b958@mail.gmail.com><d6c5d7290803150518t27307drf04ff78bfd45872@mail.gmail.com>
	<a71bd89a0803160701l396265a1xec06ea8345f67f8a@mail.gmail.com>
Message-ID: <004c01c88779$72d36bb0$a600fea9@DMITRY>

"Dan Kegel" <dank at kegel.com> wrote:

> It's not enough to provide Wine and throw up our hands
> saying "It's up to users to protect their systems"
> because our users are at worst quite literally clueless,
> and at best too busy to want to bother with virus issues.
> If we can guide them or ease their way, we should.

How other projects that provide cross platform compatibility or even
virtual environments to run executables from DOS/Windows/etc. cope with
that? Do they provide any information of possible security risks, or
they assume that the users of a being run software treat the execution
environment same way as an emulated one, and therefore it's fair to
assume the same level of awareness/responsibility as an emulated one
has? What's so special about Wine that doesn't apply to say VMWare,
Parallels, Win4Lin, DOSBox, and others? Probably yes, we could extend
the FAQ section about security, but that's almost everything we can do.

-- 
Dmitry.


From thestig at google.com  Sun Mar 16 10:22:05 2008
From: thestig at google.com (Lei Zhang)
Date: Sun, 16 Mar 2008 08:22:05 -0700
Subject: DSound Issues
In-Reply-To: <47DCED30.6030106@gmail.com>
References: <47DCED30.6030106@gmail.com>
Message-ID: <558b2f5c0803160822r646158dbr65fd5c5fb73c2221@mail.gmail.com>

On Sun, Mar 16, 2008 at 2:49 AM, Artur Szymiec <artur.szymiec at gmail.com> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
>  Hash: SHA1
>
>  Greeetings,
>
>  I would like to trackdown an issue with Direct Sound
>  on TM United (BUG http://bugs.winehq.org/show_bug.cgi?id=12058).
>
>  How can I provide some usefull data for DSound maintainers ?

Hi,

We will triage the bug on Bugzilla. No need to email the devel list.

- Lei


From dank at kegel.com  Sun Mar 16 10:33:13 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 16 Mar 2008 08:33:13 -0700
Subject: Wine Security Disclosure
In-Reply-To: <004c01c88779$72d36bb0$a600fea9@DMITRY>
References: <a71bd89a0803141233m62e4135bh1998d9057754b958@mail.gmail.com>
	<d6c5d7290803150518t27307drf04ff78bfd45872@mail.gmail.com>
	<a71bd89a0803160701l396265a1xec06ea8345f67f8a@mail.gmail.com>
	<004c01c88779$72d36bb0$a600fea9@DMITRY>
Message-ID: <a71bd89a0803160833w1cc18c3cw8fb740a3514f0c0c@mail.gmail.com>

dmitry at codeweavers.com wrote:
>  What's so special about Wine that doesn't apply to say VMWare,
>  Parallels, Win4Lin, DOSBox, and others?

With vmware, parallels, and win4lin, you can actually
run commercial virus scanners inside those environments,
and everybody knows that one should do that if one
cares about viruses.

With DOSBox, well, the target market for that tool is so small
compared to Wine it doesn't matter, they're mostly technical users,
and there isn't much ms-dos malware being written these days.

So Wine really is different; you can't run commercial virus
scanners in it, it's for users who aren't technical enough to
be able to find an antivirus solution on their own, and
(worst of all) everybody assumes Linux is impervious to viruses.

> Probably yes, we could extend  the FAQ section about
> security, but that's almost everything we can do.

I pointed out several other things we could do.
Another one is we could make the wine package list clamav
as a dependency.

Denying there's a problem, or that we can do anything about it,
might lead to a large number of unhappy users.
- Dan


From stefan at codeweavers.com  Sun Mar 16 10:36:03 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 16 Mar 2008 16:36:03 +0100
Subject: ddraw: Fix refcounting of palettes
In-Reply-To: <47DD2445.2060502@gmx.net>
References: <47DD2445.2060502@gmx.net>
Message-ID: <200803161636.03424.stefan@codeweavers.com>

Am Sonntag, 16. M?rz 2008 14:44:37 schrieb bobbyg at gmx.net:
> This fixes a crash in a game called "Autobahnverfolgungsjagd Total"
> (not in AppDB).
I think it would be better to set pal = NULL if there is no wined3d palette 
returned a few lines above the place you're changing.

> While tracing this bug I noticed that
> IWineD3DBaseSurfaceImpl_GetPalette() does not call AddRef when
> returning the palette. Is that intentional?
This looks like it needs a fix


From dmitry at codeweavers.com  Sun Mar 16 10:39:57 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 16 Mar 2008 23:39:57 +0800
Subject: New function "SHParseDisplayName"
References: <1205678381.13535.2.camel@localhost>
Message-ID: <00c001c8877b$fef95760$a600fea9@DMITRY>

"Paul" <paulvgenderen at gmail.com> wrote:

> This is my first code contribution to Wine, I have _no_ idea if this
> patch is 100% correct

Then it's always a good idea to write some tests.

> but it /should/ work =)

It can't work since you haven't added an entry to the spec file.

-- 
Dmitry.


From thunderbird2k at gmx.net  Sun Mar 16 10:53:23 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Sun, 16 Mar 2008 16:53:23 +0100
Subject: appdb request: "Browse Regressions"
In-Reply-To: <a71bd89a0803160730o466a24f9x2345e3aa64f8b512@mail.gmail.com>
References: <a71bd89a0803160730o466a24f9x2345e3aa64f8b512@mail.gmail.com>
Message-ID: <20080316155323.139350@gmx.net>

> The nice reports in recent wwn's showing changes in
> appdb ratings make me want to use the appdb itself
> to see which apps have recently fallen in rating.
> 
> Following past appdb practice, one would implement
> that by adding a new "Browse Regressions" menu
> item on the left, below Browse Apps, Browse Newest Apps,
> Downloadable Apps, and Browse Apps by Rating.
> 
> I expect this will become increasingly useful as
> we approach 1.0.  How hard would it be?
> 
> (Also, it might be nice to have an "advanced browse"
> that let you filter and sort by date, rating, and rating change.
> Once that works well, we might not need
> all those other specific browse commands...)
> - Dan
> 

Personally I don't trust appdb regressions much. The main issue I see is that the appdb rating mechanism is not good. A lot of users don't know how to rate apps properly and even rate something as gold when half of its features don't work. They even rate it gold when they have to copy half a windows registry and tons of windows dlls.

This makes appdb lots of users complain that they saw that an app worked but that they can't reproduce it themselves. I have seen this on a lot of forums and on irc. A too low rating would even be better than a too high rating as it would then surprise users that an app worked.

Someone on irc started this page to come to a new rating:
http://wiki.winehq.org/appdbratingpage

I have extended it a bit and I think we should move to such a system in which the user needs to answer a few questions and that based on those answers a rating is selected.

The problem with the current approach is that due to the way different users rank apps, the appdb scores can fluctuate quite a bit.

Roderick
-- 
Ist Ihr Browser Vista-kompatibel? Jetzt die neuesten 
Browser-Versionen downloaden: http://www.gmx.net/de/go/browser


From dmitry at codeweavers.com  Sun Mar 16 10:57:47 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 16 Mar 2008 23:57:47 +0800
Subject: Wine Security Disclosure
References: <a71bd89a0803141233m62e4135bh1998d9057754b958@mail.gmail.com><d6c5d7290803150518t27307drf04ff78bfd45872@mail.gmail.com><a71bd89a0803160701l396265a1xec06ea8345f67f8a@mail.gmail.com><004c01c88779$72d36bb0$a600fea9@DMITRY>
	<a71bd89a0803160833w1cc18c3cw8fb740a3514f0c0c@mail.gmail.com>
Message-ID: <00da01c8877e$7c5651c0$a600fea9@DMITRY>

"Dan Kegel" <dank at kegel.com> wrote:

>>  What's so special about Wine that doesn't apply to say VMWare,
>>  Parallels, Win4Lin, DOSBox, and others?
> 
> With vmware, parallels, and win4lin, you can actually
> run commercial virus scanners inside those environments,

Is it really necessary to require running a virus scanner from
inside of Wine?

> and everybody knows that one should do that if one
> cares about viruses.

Same sentence applies to Wine I'd assume.

> With DOSBox, well, the target market for that tool is so small
> compared to Wine it doesn't matter, they're mostly technical users,
> and there isn't much ms-dos malware being written these days.

There are thousands of existing DOS viruses, it doesn't matter that
nobody writes new ones anymore, there are plenty of them already.

> So Wine really is different; you can't run commercial virus
> scanners in it,

It's still possible to run a native virus scanner outside of Wine.
Wine is just a part of underlying system, not a separate environment.

> it's for users who aren't technical enough to
> be able to find an antivirus solution on their own,

That's not different from other environments providing DOS/Windows
compatibility.

> and
> (worst of all) everybody assumes Linux is impervious to viruses.

I already answered to this one.

>> Probably yes, we could extend  the FAQ section about
>> security, but that's almost everything we can do.
> 
> I pointed out several other things we could do.
> Another one is we could make the wine package list clamav
> as a dependency.
> 
> Denying there's a problem, or that we can do anything about it,
> might lead to a large number of unhappy users.

Nobody denies that there is a problem, the thing is that personally
I don't see why that problem is Wine specific.

-- 
Dmitry.


From dank at kegel.com  Sun Mar 16 11:01:15 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 16 Mar 2008 09:01:15 -0700
Subject: appdb request: "Browse Regressions"
In-Reply-To: <20080316155323.139350@gmx.net>
References: <a71bd89a0803160730o466a24f9x2345e3aa64f8b512@mail.gmail.com>
	<20080316155323.139350@gmx.net>
Message-ID: <a71bd89a0803160901w63a925e5t3ae4b99edb9b7b03@mail.gmail.com>

Roderick Colenbrander <thunderbird2k at gmx.net> wrote:
> A lot of users don't know how to rate apps properly and
> even rate something as gold when half of its features
> don't work. They even rate it gold when they have to copy
> half a windows registry and tons of windows dlls.

Agreed.  We need to solve this somehow.

>  Someone on irc started this page to come to a new rating:
>  http://wiki.winehq.org/appdbratingpage

I used to think that asking too many questions
would annoy users, but now I agree that a
wizard approach to computing the rating
might provide more reliable results.
- Dan


From dank at kegel.com  Sun Mar 16 11:04:39 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 16 Mar 2008 09:04:39 -0700
Subject: Wine Security Disclosure
In-Reply-To: <00da01c8877e$7c5651c0$a600fea9@DMITRY>
References: <a71bd89a0803141233m62e4135bh1998d9057754b958@mail.gmail.com>
	<d6c5d7290803150518t27307drf04ff78bfd45872@mail.gmail.com>
	<a71bd89a0803160701l396265a1xec06ea8345f67f8a@mail.gmail.com>
	<004c01c88779$72d36bb0$a600fea9@DMITRY>
	<a71bd89a0803160833w1cc18c3cw8fb740a3514f0c0c@mail.gmail.com>
	<00da01c8877e$7c5651c0$a600fea9@DMITRY>
Message-ID: <a71bd89a0803160904w5e58f2ear23873329a2f68a4e@mail.gmail.com>

dmitry at codeweavers.com wrote:
>  Is it really necessary to require running a virus scanner from
>  inside of Wine?

No.  Hey, cool, we agree on something!

>  > and everybody knows that one should do that if one
>  > cares about viruses.
>
>  Same sentence applies to Wine I'd assume.

No, because everybody assumes Linux is impervious
to viruses.  (You say you dealt with this comment, but
I must have missed it.)

>  > So Wine really is different; you can't run commercial virus
>  > scanners in it,
>
>  It's still possible to run a native virus scanner outside of Wine.

Yes.  And we need to encourage this, and perhaps hook into it.

>  Nobody denies that there is a problem, the thing is that personally
>  I don't see why that problem is Wine specific.

Wine increases Linux's attack surface area hugely
*and* attracts new users to Linux who are used
to computers coming with bundled virus scanners.
- Dan


From bobbyg at gmx.net  Sun Mar 16 11:22:52 2008
From: bobbyg at gmx.net (Cihan Altinay)
Date: Sun, 16 Mar 2008 17:22:52 +0100
Subject: ddraw: Fix refcounting of palettes
In-Reply-To: <200803161636.03424.stefan@codeweavers.com>
References: <47DD2445.2060502@gmx.net>
	<200803161636.03424.stefan@codeweavers.com>
Message-ID: <47DD495C.5020300@gmx.net>

Stefan D?singer wrote:
> Am Sonntag, 16. M?rz 2008 14:44:37 schrieb bobbyg at gmx.net:
> I think it would be better to set pal = NULL if there is no wined3d palette 
> returned a few lines above the place you're changing.

That's fine with me but it would mean setting it to NULL in every
iteration instead of only when necessary.

>> While tracing this bug I noticed that
>> IWineD3DBaseSurfaceImpl_GetPalette() does not call AddRef when
>> returning the palette. Is that intentional?
> This looks like it needs a fix

Ok, I'll add that to the same patch since the problem is related.

Cheers,
Cihan


From stefan at codeweavers.com  Sun Mar 16 11:33:21 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 16 Mar 2008 17:33:21 +0100
Subject: ddraw: Fix refcounting of palettes
In-Reply-To: <47DD495C.5020300@gmx.net>
References: <47DD2445.2060502@gmx.net>
	<200803161636.03424.stefan@codeweavers.com>
	<47DD495C.5020300@gmx.net>
Message-ID: <200803161733.21148.stefan@codeweavers.com>

Am Sonntag, 16. M?rz 2008 17:22:52 schrieb Cihan Altinay:
> Stefan D?singer wrote:
> > Am Sonntag, 16. M?rz 2008 14:44:37 schrieb bobbyg at gmx.net:
> > I think it would be better to set pal = NULL if there is no wined3d
> > palette returned a few lines above the place you're changing.
>
> That's fine with me but it would mean setting it to NULL in every
> iteration instead of only when necessary.
I don't think this code is highly performance critical, as it is usually 
called during loading. If you set it to NULL there you'll always set the 
palette that is used rather than relying that the previous iteration left a 
correct palette(maybe NULL) set.

> >> While tracing this bug I noticed that
> >> IWineD3DBaseSurfaceImpl_GetPalette() does not call AddRef when
> >> returning the palette. Is that intentional?
> >
> > This looks like it needs a fix
>
> Ok, I'll add that to the same patch since the problem is related.
If one patch works without the other please send separate patches.


From pure_evil at mail.bg  Sun Mar 16 11:50:04 2008
From: pure_evil at mail.bg (pure_evil at mail.bg)
Date: Sun, 16 Mar 2008 18:50:04 +0200
Subject: wine's very own control panel applets?
Message-ID: <200803161850.04879.pure_evil@mail.bg>

Hey folks
I was thinking of writing some substitutes/stubs for the windows .CPL files.

I migrated to using linux as a desktop fairly recently /used it for servers 
for a while, though/. Adapting to the linux equivalents of the programs I 
use, using wine for the rest etc.
Whilst "reinventing" the software base,I  had an annoyingly  familiar *close 
encounter* with a program which /both windows and wine/ gives out a message 
basically saying in short: "For this program to run, the decimal should 
be '.' and the negative sign - '-'." That's cuz the locale /Bulgarian/ uses 
the ',' as the default decimal /both win and wine/.

The solutions, of course, are the 3 obvious ones - copy intl.cpl from a 
working windows, go "regedit" on the subject, open the regs with a text 
editor. Both 3 are not very appealing (notably the first one; the 2nd and 3rd 
are rather annoying /if you haven't tampered with the registry too much/, but 
I consider the first one a real no-go.). So I decided to write something to 
replace the functions of intl.cpl, and called it "winelocalesetup".

However, this got me thinking further - what if that program instead of 
popping up that message, decided to execute,say, "control.exe intl.cpl", to 
save me some of the trouble? And didn't issue any warning, but instead 
crashed in midst of working with it if the decimal wasn't changed (which 
would normally be the case. It's an accounting program, so, the decimal is 
indeed important...) 

Anywho, I was thinking of creating a bunch of CPLs which mimic their windows 
counterparts in their names. However, the applet itself wouldn't do much - it 
would basically contain a somewhat appropriate icon/description, and, when 
started, launch the real executable, wine*something*.exe. 
That "wine*something*.exe" will for now basically show a 
message "Winesomething. Not implemented yet. If you see this message because 
of a running program, it means that the program is trying to...". With time, 
the .exe will be transformed into a useful substitute for the corresponding 
windows function.
For example:
intl.cpl - contains an icon (preferably a picture of the Earth; was thinking 
of going NASA on the subject), a description "Wine Locale Settings", and will 
execute winelocalesetup.exe. Winelocalesetup.exe would show a message: 
"Winelocalesetup. Not implemented yet. If you see this message, it means that 
a program is trying to call INTL.CPL, probably in order for you to modify the 
regional settings." That way, at least, it will be indicated to the user 
what's going on.

The idea for having both the cpls and the exes is, well, the cpls have to be 
called what they're called for compatibility reasons, and, once in place, 
need not be modified; the actual tool is contained within the .exe, which can 
be, well, a lot more flexible to develop than the CPL itself, and, can be 
replaced at any moment. And, well, although compatible with windows, it 
wouldn't be a pure repetition. (and no longer an empty control panel. Yay!)

BTW I have done quite some work on that winelocalesetup.exe, it reads the 
appropriate values from the registry, doesn't resemble the original 
intl.cpl's vision, and, well, is somewhat kinda useful (if only I could 
figure out how to WRITE the damn values, the keys keep turning back to their 
old values... oh well, guess I'll have to RTFM some more.)

So, any suggestions/comments/ideas? 


From bobbyg at gmx.net  Sun Mar 16 11:43:52 2008
From: bobbyg at gmx.net (Cihan Altinay)
Date: Sun, 16 Mar 2008 17:43:52 +0100
Subject: [RESEND] ddraw: Fix refcounting of palettes
Message-ID: <47DD4E48.2090904@gmx.net>

Changed as suggested by Stefan D?singer.

This fixes a crash in a game called "Autobahnverfolgungsjagd Total"
(not in AppDB).

Cheers,
Cihan

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-ddraw-Fix-refcounting-of-palettes-when-loading-text.patch
Type: text/x-patch
Size: 1518 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080316/3d866920/attachment.bin 

From alexd4 at inbox.lv  Sun Mar 16 11:50:41 2008
From: alexd4 at inbox.lv (Alexander Dorofeyev)
Date: Sun, 16 Mar 2008 18:50:41 +0200
Subject: ddraw: Fix refcounting of palettes
In-Reply-To: <200803161636.03424.stefan@codeweavers.com>
References: <47DD2445.2060502@gmx.net>
	<200803161636.03424.stefan@codeweavers.com>
Message-ID: <47DD4FE1.4040704@inbox.lv>

Stefan D?singer wrote:
> Am Sonntag, 16. M?rz 2008 14:44:37 schrieb bobbyg at gmx.net:
>> This fixes a crash in a game called "Autobahnverfolgungsjagd Total"
>> (not in AppDB).
> I think it would be better to set pal = NULL if there is no wined3d palette 
> returned a few lines above the place you're changing.
> 
>> While tracing this bug I noticed that
>> IWineD3DBaseSurfaceImpl_GetPalette() does not call AddRef when
>> returning the palette. Is that intentional?
> This looks like it needs a fix

To my knowledge, the way refcounting for IWineD3DPalette currently works, 
refcount is always kept equal to 1 during its lifetime, IDirectDrawPalette owns 
this reference and releases it when it (ddraw palette) is getting destroyed. So, 
the real refcounting is done for ddraw palette and it is omitted in most places 
for wined3d palette (which simply gets destroyed together with ddraw palette). 
Generally, this seems to work ok. If IWineD3DBaseSurfaceImpl_GetPalette is 
changed to call AddRef, then all other places must be fixed too (SetPalette and 
callers of IWineD3DBaseSurfaceImpl_GetPalette, possibly others too) or things 
may break (leaks etc) and become inconsistent. For example, 
IDirectDrawSurfaceImpl_GetPalette does not call Release on interface it gets 
from IWineD3DSurface_GetPalette.


From stefan at codeweavers.com  Sun Mar 16 12:36:21 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 16 Mar 2008 18:36:21 +0100
Subject: wined3d: Increment reference count before returning palette
In-Reply-To: <47DD4FA2.4030000@gmx.net>
References: <47DD4FA2.4030000@gmx.net>
Message-ID: <200803161836.22043.stefan@codeweavers.com>

Am Sonntag, 16. M?rz 2008 17:49:38 schrieb Cihan Altinay:
> Cheers,
> Cihan
You'll have to check the code that uses this method. As far as I can see 
DDrawSurface::GetPalette doesn't release the palette it got from WineD3D, so 
just changing WineD3D will cause a leak


From stefan at codeweavers.com  Sun Mar 16 12:39:06 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 16 Mar 2008 18:39:06 +0100
Subject: [RESEND] ddraw: Fix refcounting of palettes
In-Reply-To: <47DD4E48.2090904@gmx.net>
References: <47DD4E48.2090904@gmx.net>
Message-ID: <200803161839.06890.stefan@codeweavers.com>

Am Sonntag, 16. M?rz 2008 17:43:52 schrieb Cihan Altinay:
> Changed as suggested by Stefan D?singer.
Looks good to me


From thestig at google.com  Sun Mar 16 12:45:43 2008
From: thestig at google.com (Lei Zhang)
Date: Sun, 16 Mar 2008 10:45:43 -0700
Subject: wine --show-config option?
Message-ID: <558b2f5c0803161045q40af369cod438e93d995adfb0@mail.gmail.com>

Hi,

Would it be helpful for the wine executable to have a --show-config
option? It can show information such as:

* what options are not compiled in
* the version of gcc, fontforge used
* whether gecko is installed
* what dlls are set to native

- Lei


From alex at thehandofagony.com  Sun Mar 16 12:45:55 2008
From: alex at thehandofagony.com (Alexander Nicolaysen =?iso-8859-1?q?S=F8rnes?=)
Date: Sun, 16 Mar 2008 18:45:55 +0100
Subject: appdb request: "Browse Regressions"
In-Reply-To: <a71bd89a0803160901w63a925e5t3ae4b99edb9b7b03@mail.gmail.com>
References: <a71bd89a0803160730o466a24f9x2345e3aa64f8b512@mail.gmail.com>
	<20080316155323.139350@gmx.net>
	<a71bd89a0803160901w63a925e5t3ae4b99edb9b7b03@mail.gmail.com>
Message-ID: <200803161845.56467.alex@thehandofagony.com>

> Roderick Colenbrander <thunderbird2k at gmx.net> wrote:
> > A lot of users don't know how to rate apps properly and
> > even rate something as gold when half of its features
> > don't work. They even rate it gold when they have to copy
> > half a windows registry and tons of windows dlls.
>
> Agreed.  We need to solve this somehow.
>

Certainly, that's my experience, too.

> >  Someone on irc started this page to come to a new rating:
> >  http://wiki.winehq.org/appdbratingpage
>
> I used to think that asking too many questions
> would annoy users, but now I agree that a
> wizard approach to computing the rating
> might provide more reliable results.
> - Dan

We were planning to add a wizard people could use if they were unsure about 
the rating, but yes, it might be a good idea to make it compulsory.


Alexander N. S?rnes


From thestig at google.com  Sun Mar 16 13:03:00 2008
From: thestig at google.com (Lei Zhang)
Date: Sun, 16 Mar 2008 11:03:00 -0700
Subject: Eric Pouech : riched20: Start handling OLE objects inside
	richedit.
In-Reply-To: <000001c88624$28e2dc80$7aa89580$@com>
References: <000001c88624$28e2dc80$7aa89580$@com>
Message-ID: <558b2f5c0803161103p4690356bjb6d6709966a62f1@mail.gmail.com>

On Fri, Mar 14, 2008 at 3:38 PM, EmpKey Administrator <admin at empkey.com> wrote:
>
>
>
>
> Hi,
>
>
>
> I am using CRichEditView class in MFC library to display RTF. The problem is
> that ole objects are not displayed in-line with their surround texts. Could
> you please let me know how to solve the problem?
>
>
>
> Thanks in advances
>
>
>
> emp
>
>
>
>
>

Wine-cvs is the wrong list. Please ask questions on wine-devel. Better
yet, file a bug on the Wine bugzilla:

http://bugs.winehq.org/

- Lei


From thestig at google.com  Sun Mar 16 13:17:38 2008
From: thestig at google.com (Lei Zhang)
Date: Sun, 16 Mar 2008 11:17:38 -0700
Subject: Improving the Wine Users Guide
Message-ID: <558b2f5c0803161117h4b341754nd5261c16a1372c73@mail.gmail.com>

Hi,

For our 1.0 release, we should have a polished users guide to help
people to learn to use Wine properly. I did a quick read of the Wine
Users Guide [1] and here are my comments:

* Near the top - mention virus / security issues, warn against running
Wine as root.
* Remove references to tools/wineinstall - does anyone use this anymore?
* Section 2.3.1 - mention ./configure --verbose
* Section 3.1.2.1 - are there dlls besides kernel32, gdi32, user32,
and ntdll that we should never use the native one? Add warning about
downloading dlls from the web.
* Section 3.1.3 - the default virtual window resolution is 800x600
now. Add documentation for the dpi setting. Remove references to
"desktop double buffering" - option no longer exists.
* Section 3.1.4 - document the advanced options.
* Section 3.1.5 - add a blurb about setting directsound emulation to
none when wine complains about it.
* Section 4.5 - mention the WINEPREFIX environment variable.
* Section 5.2.1 - mention including hardware / drivers info in bug reports

- Lei

[1] http://www.winehq.org/docs/en/wineusr-guide.html


From thestig at google.com  Sun Mar 16 13:29:26 2008
From: thestig at google.com (Lei Zhang)
Date: Sun, 16 Mar 2008 11:29:26 -0700
Subject: Wine Security Disclosure
In-Reply-To: <a71bd89a0803160701l396265a1xec06ea8345f67f8a@mail.gmail.com>
References: <a71bd89a0803141233m62e4135bh1998d9057754b958@mail.gmail.com>
	<d6c5d7290803150518t27307drf04ff78bfd45872@mail.gmail.com>
	<a71bd89a0803160701l396265a1xec06ea8345f67f8a@mail.gmail.com>
Message-ID: <558b2f5c0803161129v3f6ffbc5n29929d15f74f6e16@mail.gmail.com>

On Sun, Mar 16, 2008 at 7:01 AM, Dan Kegel <dank at kegel.com> wrote:
>  2) we can at least document how to use clamav with wine,
>   or link to clamav and its doc, e.g.
>   http://www.clamav.net/
>   https://help.ubuntu.com/community/ClamAV
>
>  3) we can warn on startup if we detect that clamav
>   is not present.
>
>  4) we can try to make it easy to use free virus scanners
>   with wine.  Some ideas:
>   http://www.burghardt.pl/2007/11/wine-with-on-access-clamav-scanning/
>   http://www.christoph-probst.com/soc2006/wine/

What about working with Linux distros to set up proper SELinux /
AppArmor profiles for Wine?


From ivg231 at gmail.com  Sun Mar 16 09:32:51 2008
From: ivg231 at gmail.com (Ivan Gyurdiev)
Date: Sun, 16 Mar 2008 10:32:51 -0400
Subject: d3dx9_36: Implements D3DXGetShaderVersion
In-Reply-To: <47DB11DD.3000708@ilidium.com>
References: <47DB11DD.3000708@ilidium.com>
Message-ID: <47DD2F93.8060109@gmail.com>

Luis C. Busquets P?rez wrote:
> This functions gets the Version Token of a binary shader. This Token 
> is the first of the binary stream so it is as easy as picling the 
> pointed DWORD. This is all public information available to the public.
What happens when the shader is NULL?
Yours will crash - MSDN says otherwise.

Does this work on Pixel and Vertex shaders ?
Does it always return back the first dword as is - what happens if an 
invalid shader version is passed in.

> To implement a test would be far more complicated as it would mean to 
> include a binary shader. Anyway, I have tested the results with Civ4 
> (by making a derivation on d3dx9_32 with this function and using the 
> original d3dx9_36.D3DXGetShaderVersion function) and the results where 
> the same for all the shaders that where present.
I would suggest an automated test across [ vs: 1.0, 1.1, 2.0, 2.1, 3.0 ] 
, [ ps: 1.0, 1.1, 1.2, 1.3, 1.4,  2.0, 2.1, 3.0 ] , NULL, and an invalid 
token.
You can see some binary shaders in the d3d9 tests.

Ivan






From jan.wine at zerebecki.de  Sun Mar 16 13:38:22 2008
From: jan.wine at zerebecki.de (Jan Zerebecki)
Date: Sun, 16 Mar 2008 19:38:22 +0100
Subject: wine --show-config option?
In-Reply-To: <558b2f5c0803161045q40af369cod438e93d995adfb0@mail.gmail.com>
References: <558b2f5c0803161045q40af369cod438e93d995adfb0@mail.gmail.com>
Message-ID: <20080316183822.GK3557@crissy.swd.zerebecki.de>

On Sun, Mar 16, 2008 at 10:45:43AM -0700, Lei Zhang wrote:
> Would it be helpful for the wine executable to have a --show-config
> option? It can show information such as:
> 
> * what options are not compiled in
> * the version of gcc, fontforge used
> * whether gecko is installed
> * what dlls are set to native

Yes, please :) this would be really helpful . I must not be "wine
--show-config" but we should have the information about how wine
was compiled available in an installed wine and have an easy way
to put together all the important information about an wine
installation and a wine prefix so we can tell a user "Do foo and
give me the resulting file.".

There was already an attempt for some of this, see
http://article.gmane.org/gmane.comp.emulators.wine.patches/45328
.


Jan



From stefan at codeweavers.com  Sun Mar 16 13:40:12 2008
From: stefan at codeweavers.com (Stefan =?utf-8?q?D=C3=B6singer?=)
Date: Sun, 16 Mar 2008 19:40:12 +0100
Subject: d3dx9_36: Implements D3DXGetShaderVersion
In-Reply-To: <47DD2F93.8060109@gmail.com>
References: <47DB11DD.3000708@ilidium.com> <47DD2F93.8060109@gmail.com>
Message-ID: <200803161940.12226.stefan@codeweavers.com>

Am Sonntag, 16. M?rz 2008 15:32:51 schrieb Ivan Gyurdiev:
> I would suggest an automated test across [ vs: 1.0, 1.1, 2.0, 2.1, 3.0 ]
> , [ ps: 1.0, 1.1, 1.2, 1.3, 1.4,  2.0, 2.1, 3.0 ] , NULL, and an invalid
> token.
> You can see some binary shaders in the d3d9 tests.
You can't really iterate over the shader versions as various shader versions 
use different bytecode tokens. Of course you could try to pass an invalid 
shader with a valid version token, but for a basic functionality test it 
should be a valid shader IMHO


From bobbyg at gmx.net  Sun Mar 16 13:57:06 2008
From: bobbyg at gmx.net (Cihan Altinay)
Date: Sun, 16 Mar 2008 19:57:06 +0100
Subject: wined3d: Increment reference count before returning palette
In-Reply-To: <200803161836.22043.stefan@codeweavers.com>
References: <47DD4FA2.4030000@gmx.net>
	<200803161836.22043.stefan@codeweavers.com>
Message-ID: <47DD6D82.9030502@gmx.net>

Stefan D?singer wrote:
> You'll have to check the code that uses this method. As far as I can see 
> DDrawSurface::GetPalette doesn't release the palette it got from WineD3D, so 
> just changing WineD3D will cause a leak

Yes, that's what Alexander Dorofeyev pointed out, too.
So do not apply this patch.


From jgardou at yahoo.fr  Sun Mar 16 14:13:13 2008
From: jgardou at yahoo.fr (=?iso-8859-1?q?J=E9r=F4me_Gardou?=)
Date: Sun, 16 Mar 2008 20:13:13 +0100
Subject: Improving the Wine Users Guide
In-Reply-To: <558b2f5c0803161117h4b341754nd5261c16a1372c73@mail.gmail.com>
References: <558b2f5c0803161117h4b341754nd5261c16a1372c73@mail.gmail.com>
Message-ID: <200803162013.13729.jgardou@yahoo.fr>

Le Sunday 16 March 2008 19:17:38 Lei Zhang, vous avez ?crit?:
> * Section 3.1.2.1 - are there dlls besides kernel32, gdi32, user32,
> and ntdll that we should never use the native one? Add warning about
> downloading dlls from the web.

Isn't ddraw a part of this ones ?

	

	
		
___________________________________________________________________________ 
Yahoo! Mail r?invente le mail ! D?couvrez le nouveau Yahoo! Mail et son interface r?volutionnaire.
http://fr.mail.yahoo.com



From stefan at codeweavers.com  Sun Mar 16 14:55:54 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 16 Mar 2008 20:55:54 +0100
Subject: Improving the Wine Users Guide
In-Reply-To: <200803162013.13729.jgardou@yahoo.fr>
References: <558b2f5c0803161117h4b341754nd5261c16a1372c73@mail.gmail.com>
	<200803162013.13729.jgardou@yahoo.fr>
Message-ID: <200803162055.54607.stefan@codeweavers.com>

Am Sonntag, 16. M?rz 2008 20:13:13 schrieb J?r?me Gardou:
> Le Sunday 16 March 2008 19:17:38 Lei Zhang, vous avez ?crit?:
> > * Section 3.1.2.1 - are there dlls besides kernel32, gdi32, user32,
> > and ntdll that we should never use the native one? Add warning about
> > downloading dlls from the web.
>
> Isn't ddraw a part of this ones ?
ddraw,d3d8,d3d9,d3d10,dsound, also mostly true for dinput


From tehblunderbuss at gmail.com  Sun Mar 16 15:20:29 2008
From: tehblunderbuss at gmail.com (TheBlunderbuss)
Date: Sun, 16 Mar 2008 15:20:29 -0500
Subject: Wine Security Disclosure
In-Reply-To: <004c01c88779$72d36bb0$a600fea9@DMITRY>
References: <a71bd89a0803141233m62e4135bh1998d9057754b958@mail.gmail.com><d6c5d7290803150518t27307drf04ff78bfd45872@mail.gmail.com>	<a71bd89a0803160701l396265a1xec06ea8345f67f8a@mail.gmail.com>
	<004c01c88779$72d36bb0$a600fea9@DMITRY>
Message-ID: <47DD810D.2000504@gmail.com>

An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080316/ad3bc3c2/attachment.htm 

From wine-devel at kievinfo.com  Sun Mar 16 15:26:32 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 16 Mar 2008 14:26:32 -0600
Subject: Improving the Wine Users Guide
In-Reply-To: <200803162055.54607.stefan@codeweavers.com>
References: <558b2f5c0803161117h4b341754nd5261c16a1372c73@mail.gmail.com>	<200803162013.13729.jgardou@yahoo.fr>
	<200803162055.54607.stefan@codeweavers.com>
Message-ID: <47DD8278.8040202@kievinfo.com>

Stefan D?singer wrote:
> Am Sonntag, 16. M?rz 2008 20:13:13 schrieb J?r?me Gardou:
>> Le Sunday 16 March 2008 19:17:38 Lei Zhang, vous avez ?crit :
>>> * Section 3.1.2.1 - are there dlls besides kernel32, gdi32, user32,
>>> and ntdll that we should never use the native one? Add warning about
>>> downloading dlls from the web.
>> Isn't ddraw a part of this ones ?
> ddraw,d3d8,d3d9,d3d10,dsound, also mostly true for dinput
> 
> 

Native dinput works perfectly for keyboard and mouse. Not at all for 
joystick. So I don't see any reason to put it on that list.

Add ntoskrnl.exe, hal.dll.

Vitaliy.


From jeffzaroyko at gmail.com  Sun Mar 16 16:04:35 2008
From: jeffzaroyko at gmail.com (Jeff Zaroyko)
Date: Sun, 16 Mar 2008 21:04:35 +0000 (UTC)
Subject: Improving the Wine Users Guide
References: <558b2f5c0803161117h4b341754nd5261c16a1372c73@mail.gmail.com>
Message-ID: <loom.20080316T210244-471@post.gmane.org>

Lei Zhang <thestig <at> google.com> writes:

> 
> Hi,
> 
> For our 1.0 release, we should have a polished users guide to help
> people to learn to use Wine properly. I did a quick read of the Wine
> Users Guide [1] and here are my comments:
> 
> * Remove references to tools/wineinstall - does anyone use this anymore?
> 

Anyone who reads the README distributed with wine might, it's listed under the
quick start section as the recommended way to build and install.



From juan.lang at gmail.com  Sun Mar 16 16:35:39 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sun, 16 Mar 2008 14:35:39 -0700
Subject: wine's very own control panel applets?
In-Reply-To: <200803161850.04879.pure_evil@mail.bg>
References: <200803161850.04879.pure_evil@mail.bg>
Message-ID: <3a768c550803161435g2c31a271q60339daef3ad4eeb@mail.gmail.com>

Hi,

While I think writing control panel applets for Wine may be a good
idea in general, I wonder whether the specific example you propose--a
locale setting control panel--might be better served by trying to
infer the correct settings from the Linux locale.

--Juan


From ivg231 at gmail.com  Sun Mar 16 09:00:49 2008
From: ivg231 at gmail.com (Ivan Gyurdiev)
Date: Sun, 16 Mar 2008 10:00:49 -0400
Subject: [4/22] WineD3D: A shader backend descriptor for the ati fragment
	shader backend
In-Reply-To: <200803162204.44168.stefan@codeweavers.com>
References: <200803162204.44168.stefan@codeweavers.com>
Message-ID: <47DD2811.3010708@gmail.com>

I don't quite understand why it's necessary to write ARB, GLSL, and NONE 
shader descriptors inside the ati_shader file.
How will this infrastructure scale to a new shader backend added a year 
from now ?

For such a large patchset maybe there should be a high level design 
diagram that explains how it works ?

I very much like that backend-specific functionality ends up in the 
appropriate backend - as per patches 10, 11, and 14.
However, it seems those patches stand on their own, independent of the 
rest of the patchset and this feature.

Ivan









From dank at kegel.com  Sun Mar 16 17:25:04 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 16 Mar 2008 15:25:04 -0700
Subject: Locked topics considered harmful
Message-ID: <a71bd89a0803161525h418c2108p53e18289ad178df5@mail.gmail.com>

wine-users is not a forum, it's a mailing list.
Topics should not be locked except in extreme circumstances;
the bounce messages are annoying, and
it's wrong for the forum to not properly show
what's going on in the mailing list.


From stefan at codeweavers.com  Sun Mar 16 17:25:53 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 16 Mar 2008 23:25:53 +0100
Subject: [4/22] WineD3D: A shader backend descriptor for the ati fragment
	shader backend
In-Reply-To: <47DD2811.3010708@gmail.com>
References: <200803162204.44168.stefan@codeweavers.com>
	<47DD2811.3010708@gmail.com>
Message-ID: <200803162325.53786.stefan@codeweavers.com>

Am Sonntag, 16. M?rz 2008 15:00:49 schrieb Ivan Gyurdiev:
> I don't quite understand why it's necessary to write ARB, GLSL, and NONE
> shader descriptors inside the ati_shader file.
> How will this infrastructure scale to a new shader backend added a year
> from now ?
Currently I am doing that so ATI cards which have ARB_fp or GLSL can use the 
fragment replacement code and d3d pshaders at the same time. As commented in 
the code we can remove all but the ATIfs+ARBvp backend the day we have a ffp 
replacement in ARB or GLSL. Thus there's no need for that to scale, what we 
have here is the worst case.

> I very much like that backend-specific functionality ends up in the
> appropriate backend - as per patches 10, 11, and 14.
> However, it seems those patches stand on their own, independent of the
> rest of the patchset and this feature.
You're right, the shader model changes do not really need the ATIfs code to 
work. However, separating them would be quite a pain, and I do not see any 
gain from that beyong the point where the patches are applied. It won't 
affect regression testing really.

The reason why I wrote it that way was that I needed an implementation of an 
ffp replacement to see where the whole thing goes. I couldn't do that with 
the existing nvts code because nvrc+nvts are quite different from 
arb/glsl/atifs and as described in the other mail putting that code into a 
separate shader backend won't help us much.


From juan.lang at gmail.com  Sun Mar 16 17:32:06 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sun, 16 Mar 2008 15:32:06 -0700
Subject: Improving the Wine Users Guide
In-Reply-To: <558b2f5c0803161117h4b341754nd5261c16a1372c73@mail.gmail.com>
References: <558b2f5c0803161117h4b341754nd5261c16a1372c73@mail.gmail.com>
Message-ID: <3a768c550803161532h3f64077fk2085a5ef0381ad3f@mail.gmail.com>

>  * Section 3.1.2.1 - are there dlls besides kernel32, gdi32, user32,
>  and ntdll that we should never use the native one? Add warning about
>  downloading dlls from the web.

This list may end up being rather large.  Certainly not iphlpapi.
Right now, not netapi32 or crypt32, either, though whether that will
always be the case I can't say.
--Juan


From andrewriedi at gmail.com  Sun Mar 16 17:53:22 2008
From: andrewriedi at gmail.com (Andrew Riedi)
Date: Sun, 16 Mar 2008 15:53:22 -0700
Subject: Redirect http://forums.winehq.org -> http://forum.winehq.org.
Message-ID: <689de9370803161553v195b60f2h3c714782b63e9b70@mail.gmail.com>

Because many other sites have forums spelled in the plural, such as
http://ubuntuforums.org and http://forums.gentoo.org, many users
simply assume we will too.  I would like to request a redirect from
http://fourms.winehq.org to http://forum.winehq.org.

Note, even one of own developers made this mistake, which I sent in a
fix for at:  http://article.gmane.org/gmane.comp.emulators.wine.patches/48512
.

-- 
Andrew Riedi


From jjmckenzie51 at sprintpcs.com  Sun Mar 16 18:23:49 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Sun, 16 Mar 2008 16:23:49 -0700
Subject: Locked topics considered harmful
In-Reply-To: <a71bd89a0803161525h418c2108p53e18289ad178df5@mail.gmail.com>
References: <a71bd89a0803161525h418c2108p53e18289ad178df5@mail.gmail.com>
Message-ID: <47DDAC05.9070402@sprintpcs.com>

Dan Kegel wrote:
> wine-users is not a forum, it's a mailing list.
> Topics should not be locked except in extreme circumstances;
> the bounce messages are annoying, and
> it's wrong for the forum to not properly show
> what's going on in the mailing list.
>
>
>   
+1
If a topic is also posted to the mailing list. 
If this is not possible or practical, put a message in the forum that 
the topic is being locked and why.  This will also reflect into the 
mailing list and make those of us on the list aware that the topic is 
locked.

James McKenzie



From fgouget at free.fr  Sun Mar 16 18:39:43 2008
From: fgouget at free.fr (Francois Gouget)
Date: Mon, 17 Mar 2008 00:39:43 +0100 (CET)
Subject: [Tools 7/7] winetest: Add some heuristics to detect missing dlls
	in version 3 reports.
In-Reply-To: <47DCE876.8020507@gmail.com>
References: <alpine.DEB.1.00.0803142003100.23729@amboise.dolphin>
	<47DCE876.8020507@gmail.com>
Message-ID: <alpine.DEB.1.00.0803170036570.14363@amboise.dolphin>

On Sun, 16 Mar 2008, Paul Vriens wrote:

> Hi,
> 
> I saw that 'gather' is not creating the index.html file at test.winehq.org
> anymore.
> 
> I had a quick look at test.winehq.org and something seem to have go wrong with
> the patching of 'gather':
> 
> pvriens at wine:/home/winehq/opt/winetest$ perl gather
> Use of bare << to mean <<"" is deprecated at gather line 142.
> Use of bare << to mean <<"" is deprecated at gather line 171.
> Global symbol "$testref" requires explicit package name at gather line 142.
> Global symbol "$extrema" requires explicit package name at gather line 142.
> Global symbol "$extrema" requires explicit package name at gather line 142.
> Global symbol "$extrema" requires explicit package name at gather line 142.
> Global symbol "$extrema" requires explicit package name at gather line 142.
> Global symbol "$extrema" requires explicit package name at gather line 142.
> syntax error at gather line 176, near "HEAD:"
>   (Might be a runaway multi-line << string starting on line 171)
> Execution of gather aborted due to compilation errors.

Yes, but I'm surprised because the pristine Git checkout I have here 
does not contain the word 'testref' and lines 142 and 171 don't 
contain '<<'. So it looks like what's being run does not correspond to 
what's in Git.


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
           Cahn's Axiom: When all else fails, read the instructions.


From ivg231 at gmail.com  Sun Mar 16 11:35:25 2008
From: ivg231 at gmail.com (Ivan Gyurdiev)
Date: Sun, 16 Mar 2008 12:35:25 -0400
Subject: [4/22] WineD3D: A shader backend descriptor for the ati fragment
	shader backend
In-Reply-To: <200803162325.53786.stefan@codeweavers.com>
References: <200803162204.44168.stefan@codeweavers.com>
	<47DD2811.3010708@gmail.com>
	<200803162325.53786.stefan@codeweavers.com>
Message-ID: <47DD4C4D.7040605@gmail.com>

Stefan D?singer wrote:
> Am Sonntag, 16. M?rz 2008 15:00:49 schrieb Ivan Gyurdiev:
>   
>> I don't quite understand why it's necessary to write ARB, GLSL, and NONE
>> shader descriptors inside the ati_shader file.
>> How will this infrastructure scale to a new shader backend added a year
>> from now ?
>>     
> Currently I am doing that so ATI cards which have ARB_fp or GLSL can use the 
> fragment replacement code and d3d pshaders at the same time.

To me this suggests that there should be two separate shader backends, 
selected differently for "fixed pipeline replacement" purposes and for 
shaders. I don't like the argument that this is only an intermediate 
step - if no one writes the glsl/arb replacement code, it becomes permanent.

Ivan




From jjmckenzie51 at sprintpcs.com  Sun Mar 16 20:01:58 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Sun, 16 Mar 2008 18:01:58 -0700
Subject: Wine Security Disclosure
In-Reply-To: <00da01c8877e$7c5651c0$a600fea9@DMITRY>
References: <a71bd89a0803141233m62e4135bh1998d9057754b958@mail.gmail.com>
	<d6c5d7290803150518t27307drf04ff78bfd45872@mail.gmail.com>
	<a71bd89a0803160701l396265a1xec06ea8345f67f8a@mail.gmail.com>
	<004c01c88779$72d36bb0$a600fea9@DMITRY>
	<a71bd89a0803160833w1cc18c3cw8fb740a3514f0c0c@mail.gmail.com>
	<00da01c8877e$7c5651c0$a600fea9@DMITRY>
Message-ID: <47DDC306.6060109@sprintpcs.com>

Dmitry Timoshkov wrote:
> "Dan Kegel" <dank at kegel.com> wrote:
>
>   
>>>  What's so special about Wine that doesn't apply to say VMWare,
>>>  Parallels, Win4Lin, DOSBox, and others?
>>>       
>> With vmware, parallels, and win4lin, you can actually
>> run commercial virus scanners inside those environments,
>>     
>
> Is it really necessary to require running a virus scanner from
> inside of Wine?
>
>   
No, but files should be scanned on Linux/UNIX/MacOSX using a virus 
scanner like ClamAV.  There even is a front end for the Mac.
>> and everybody knows that one should do that if one
>> cares about viruses.
>>     
>
> Same sentence applies to Wine I'd assume.
>
>   
Viruses depend on the environment.  The more APIs that are built, the 
more likely a virus will be able to run in Wine.
>
> It's still possible to run a native virus scanner outside of Wine.
> Wine is just a part of underlying system, not a separate environment.
>
>   
See my comment above.  Linux users have to become aware that Wine will 
make their systems vulnerable to Windows Viruses as well as running 
Windows Code.
>> and
>> (worst of all) everybody assumes Linux is impervious to viruses.
>>     
>
> I already answered to this one.
>
>   
Macs are not impervious to viruses, it just is not popular enough and 
the 'hoops' you have to go through to run a virus are major.  However, 
adding Wine does make Macs vulnerable to Windows viruses (at least some 
of them). 
>>> Probably yes, we could extend  the FAQ section about
>>> security, but that's almost everything we can do.
>>>       
>> I pointed out several other things we could do.
>> Another one is we could make the wine package list clamav
>> as a dependency.
>>
>> Denying there's a problem, or that we can do anything about it,
>> might lead to a large number of unhappy users.
>>     
>
> Nobody denies that there is a problem, the thing is that personally
> I don't see why that problem is Wine specific.
>
>   

The problem is that adding Wine to Linux/UNIX/MacOSX opens the system to 
Windows vulnerabilities unless they are blocked.  If we attempt to do 
this, the project may suffer.  So the other alternative is to make Wine 
users aware that adding this product to their systems may increase the 
likelyhood they may become infected if they do not practice good 
computer security habits, like using virus scanners to prevent 
introduction of viruses to their systems.  Even I as a Mac user practice 
good computer security, and that is because I got burned with a DOS 
virus on OS/2. 

+1 to adding Virus warnings on the Wine FAQ.

James McKenzie



From jjmckenzie51 at sprintpcs.com  Sun Mar 16 20:04:07 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Sun, 16 Mar 2008 18:04:07 -0700
Subject: Wine Security Disclosure
In-Reply-To: <558b2f5c0803161129v3f6ffbc5n29929d15f74f6e16@mail.gmail.com>
References: <a71bd89a0803141233m62e4135bh1998d9057754b958@mail.gmail.com>
	<d6c5d7290803150518t27307drf04ff78bfd45872@mail.gmail.com>
	<a71bd89a0803160701l396265a1xec06ea8345f67f8a@mail.gmail.com>
	<558b2f5c0803161129v3f6ffbc5n29929d15f74f6e16@mail.gmail.com>
Message-ID: <47DDC387.10504@sprintpcs.com>

Lei Zhang wrote:
> On Sun, Mar 16, 2008 at 7:01 AM, Dan Kegel <dank at kegel.com> wrote:
>   
>>  2) we can at least document how to use clamav with wine,
>>   or link to clamav and its doc, e.g.
>>   http://www.clamav.net/
>>   https://help.ubuntu.com/community/ClamAV
>>
>>  3) we can warn on startup if we detect that clamav
>>   is not present.
>>
>>  4) we can try to make it easy to use free virus scanners
>>   with wine.  Some ideas:
>>   http://www.burghardt.pl/2007/11/wine-with-on-access-clamav-scanning/
>>   http://www.christoph-probst.com/soc2006/wine/
>>     
>
> What about working with Linux distros to set up proper SELinux /
> AppArmor profiles for Wine?
>
>
>   
Lei:

That would be fine, but what about the other UNIXes and MacOSX?  I don't 
want to attempt a test to see if a Windows virus will affect my Mac.  
Again, we have to make our user base aware that Windows viruses will run 
under Wine and that the results can be disasterous.  They should 
practice good computer security, to include scanning any and all files 
before using them with Wine.

James McKenzie



From stefan at codeweavers.com  Sun Mar 16 20:18:09 2008
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Mon, 17 Mar 2008 02:18:09 +0100
Subject: [4/22] WineD3D: A shader backend descriptor for the ati fragment
	shader backend
In-Reply-To: <47DD4C4D.7040605@gmail.com>
References: <200803162204.44168.stefan@codeweavers.com>
	<200803162325.53786.stefan@codeweavers.com>
	<47DD4C4D.7040605@gmail.com>
Message-ID: <200803170218.09473.stefan@codeweavers.com>

Am Sonntag, 16. M?rz 2008 17:35:25 schrieb Ivan Gyurdiev:

> To me this suggests that there should be two separate shader backends,
> selected differently for "fixed pipeline replacement" purposes and for
> shaders. I don't like the argument that this is only an intermediate
> step - if no one writes the glsl/arb replacement code, it becomes
> permanent.
How would that work with e.g. GLSL, where vertex and fragment shaders are 
linked? How would you use a D3D vertex shader together with a ffp replacement 
fragment shader?

One of the aims of my patches is providing the infrastructure where summer of 
code applicants could kick in. So I think chances that we get an ARB or GLSL 
replacement soon are pretty good.


From madewokherd+d41d at gmail.com  Sun Mar 16 23:39:01 2008
From: madewokherd+d41d at gmail.com (Vincent Povirk)
Date: Mon, 17 Mar 2008 00:39:01 -0400
Subject: explorer: add /startfile switch for starting files from file managers
Message-ID: <ced95fe0803162139q4a765f4dm1a84cc92a0ebe612@mail.gmail.com>

This patch adds a switch, /startfile, to explorer.exe, used as "wine
explorer /startfile filename". It accepts a windows or unix path. It
attempts to mimic what windows explorer does to start files and
provide some visible (gui) feedback when it doesn't work. The idea is
that wine.desktop can then be modified to use this switch instead of
wine, solving the following problems when starting exe files from file
managers:
* File managers typically do not set the working directory to the
directory that contains an exe when they start it. Setting the working
directory is the default behavior for windows explorer, and many
windows programs rely on it.
* File managers naturally use the unix path to start files, and the
wine binary passes the unix path along to the exe it starts, rather
than translating it to a windows path (this can and probably should
also be fixed somewhere else).
* Windows explorer always starts exe files with quotes around the path
in the command-line, even if the path does not contain spaces. The
wine binary does not (and probably should not) add quotes in this
situation. A few apps rely on the quotes. See
http://bugs.winehq.org/show_bug.cgi?id=5224#c14

My last attempt created a new winelib program; apparently this
functionality fits in explorer.

-- 
Vincent Povirk
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-explorer-add-startfile-switch-for-starting-files-f.patch
Type: text/x-patch
Size: 13559 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080317/a0aac1b6/attachment.bin 

From dmitry at codeweavers.com  Mon Mar 17 00:05:04 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 17 Mar 2008 13:05:04 +0800
Subject: user32: Add test_CreateIconFromResourceEx().
References: <689de9370803161544j310ad57p312e928e460aa3d0@mail.gmail.com>
Message-ID: <01bc01c887ec$78e0f720$a600fea9@DMITRY>

"Andrew Riedi" <andrewriedi at gmail.com> wrote:

> changelog: user32: Add test_CreateIconFromResourceEx().

What this patch is supposed to test? Just that CreateIconFromResourceEx
returns a valid icon handle? What about the resulting icon contents?
What about cases when CreateIconFromResourceEx should fail?

-- 
Dmitry.


From pure_evil at mail.bg  Mon Mar 17 02:05:08 2008
From: pure_evil at mail.bg (pure_evil at mail.bg)
Date: Mon, 17 Mar 2008 09:05:08 +0200
Subject: wine's very own control panel applets?
In-Reply-To: <3a768c550803161435g2c31a271q60339daef3ad4eeb@mail.gmail.com>
References: <200803161850.04879.pure_evil@mail.bg>
	<3a768c550803161435g2c31a271q60339daef3ad4eeb@mail.gmail.com>
Message-ID: <200803170905.08268.pure_evil@mail.bg>

On Sunday 16 March 2008 11:35:39 pm you wrote:
> Hi,
>
> While I think writing control panel applets for Wine may be a good
> idea in general, I wonder whether the specific example you propose--a
> locale setting control panel--might be better served by trying to
> infer the correct settings from the Linux locale.
>
> --Juan

I'm not sure how changing the decimal (in the example case) on linux would 
affect the linux apps themselves - will I have to switch it back and forth if 
another, linux app demands it to be ',' whilst the windows one wants a dot. 
(sorry if the question is somewhat stupid, still adapting, trying to get the 
windows way of thinking out of me head). 
So, in this particular case I was thinking of having the wine and linux 
locales as two different entities; After all, the win-apps only care about 
what the registry says, so no need to ever touch the global linux settings. 
(besides, the intl.cpl is the easiest and somewhat useful to make a 
substitute for, a nice starting point and a good test for the entire 
idea/toolkit; The truth is, I still haven't got much of a clue how the 
equivalent of appwiz.cpl would actually operate, not to mention (OMG!) 
hdwwiz.cpl).
In a more general sense, I have fresh memories of how frustrating the 
migration to linux can be in terms of the crash course you take once you see 
the desktop. So for a new user, having his favorite apps up and running 
properly under wine by doing something he's used to ->  Control Panel -> 
Regional Settings, rather than including a lesson in linux locale 
modification in the crash course would be nice. He can always take that 
lesson a few days later when he dares to get out of the box of the software 
he's used to ;)
BTW what about the general idea, a CPL (so the name matches) which executes 
a .exe (which does the real job,and is easier to substitute with another .exe 
when/if needed)? And a little hint on the structure... It looks like there 
are twenty-something *usual* applets. That would make 40+ additional files in 
the system32... maybe a c:/windows/winecontrolapplets folder which contains 
the .exes?


From dmitry at codeweavers.com  Mon Mar 17 02:30:33 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 17 Mar 2008 15:30:33 +0800
Subject: wine's very own control panel applets?
References: <200803161850.04879.pure_evil@mail.bg><3a768c550803161435g2c31a271q60339daef3ad4eeb@mail.gmail.com>
	<200803170905.08268.pure_evil@mail.bg>
Message-ID: <02b501c88800$caeee310$a600fea9@DMITRY>

<pure_evil at mail.bg> wrote:

> I'm not sure how changing the decimal (in the example case) on linux would 
> affect the linux apps themselves - will I have to switch it back and forth if 
> another, linux app demands it to be ',' whilst the windows one wants a dot. 
> (sorry if the question is somewhat stupid, still adapting, trying to get the 
> windows way of thinking out of me head). 

How about setting preferred values in ~/.wine/user.reg, under [Control Panel\International]
using your favourite text editor?

-- 
Dmitry.


From pure_evil at mail.bg  Mon Mar 17 02:53:53 2008
From: pure_evil at mail.bg (pure_evil at mail.bg)
Date: Mon, 17 Mar 2008 09:53:53 +0200
Subject: wine's very own control panel applets?
In-Reply-To: <02b501c88800$caeee310$a600fea9@DMITRY>
References: <200803161850.04879.pure_evil@mail.bg>
	<200803170905.08268.pure_evil@mail.bg>
	<02b501c88800$caeee310$a600fea9@DMITRY>
Message-ID: <200803170953.53247.pure_evil@mail.bg>

On Monday 17 March 2008 09:30:33 am you wrote:
> <pure_evil at mail.bg> wrote:
> > I'm not sure how changing the decimal (in the example case) on linux
> > would affect the linux apps themselves - will I have to switch it back
> > and forth if another, linux app demands it to be ',' whilst the windows
> > one wants a dot. (sorry if the question is somewhat stupid, still
> > adapting, trying to get the windows way of thinking out of me head).
>
> How about setting preferred values in ~/.wine/user.reg, under [Control
> Panel\International] using your favourite text editor?

LoL in my particular case, I did all 3 things on all the 
install/reinstall/uninstall cases I had trying to get that app to work /it 
requires Bulgarian language, it uses MDAC, it has a MSSQL2005 server backend, 
it needs that dot, some part is Tahoma font, others are, well, just about any 
font you can imagine, I know the man who wrote it, his moto is: "allways new 
stuff, always microsoft" /OMG is he really gonna go VISTA in a year or 
two?! /, IT'S THE APP FROM HELL!!!!... And there's no substitute :( /
I copied intl.cpl, went regedit, and, used vi on the reg. All 3 worked, but I 
was thinking in the lines of, will a regular user be happy with any of the 
three options should he encounter such a monstrosity, or, a different 
monstrosity which requires a different cpl.



