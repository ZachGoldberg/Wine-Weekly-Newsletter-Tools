From wes.parish at paradise.net.nz  Mon Sep  1 04:27:30 2008
From: wes.parish at paradise.net.nz (Wesley Parish)
Date: Mon, 01 Sep 2008 21:27:30 +1200
Subject: Adding Flawfinder to Patchwatcher
In-Reply-To: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
Message-ID: <200809012127.31079.wes.parish@paradise.net.nz>

One thing you might do is check your email settings.  I received at least 
twenty coppies of this email - twenty * 3.1 MB.  Not nice.

Wesley Parish

On Friday 29 August 2008 08:59, Austin English wrote:
> I had a discussion with Dan about adding Flawfinder to the
> patchwatcher. Currently, it's got some pretty generic errors, but it
> seems able to test only patches, so we wouldn't be flooded with old
> nonbugs (or we could set up a blacklist of safe errors). For
> reference, I've run it on today's git. I'm attaching the full log, as
> well as a condensed version of the most common errors (1 per error
> type). Looks like a lot of chances for buffer overflows..
>
> Thoughts?
>
> -Austin

-- 
Clinersterton beademung, with all of love - RIP James Blish
-----
Gaul is quartered into three halves.  Things which are 
impossible are equal to each other.  Guerrilla 
warfare means up to their monkey tricks. 
Extracts from "Schoolboy Howlers" - the collective wisdom 
of the foolish.
-----
Mau e ki, he aha te mea nui?
You ask, what is the most important thing?
Maku e ki, he tangata, he tangata, he tangata.
I reply, it is people, it is people, it is people.


From niko.lecam at gmail.com  Mon Sep  1 05:16:15 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 1 Sep 2008 12:16:15 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <48BA65B5.6090403@gmail.com>
References: <48B50FB3.2080904@gmail.com>
	<1219855212.6723.4.camel@belthazor-saved>
	<22821af30808271215re1917f1wdad7c1018a2f5f13@mail.gmail.com>
	<48B5A87D.2050806@gmail.com>
	<22821af30808271220i4c794bcdy1a47866bf793d169@mail.gmail.com>
	<48B9AAD8.4030300@gmail.com>
	<22821af30808301347l6048cba5t1f39320dfeae4b3d@mail.gmail.com>
	<48BA65B5.6090403@gmail.com>
Message-ID: <d7e62e980809010316i5b6f5029j76534317efdc9367@mail.gmail.com>

Same thing here with a 2k box running on VirtualBox.

2008/8/31 Paul Vriens <paul.vriens.wine at gmail.com>

> James Hawkins wrote:
> > On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com>
> wrote:
> >> Hi,
> >>
> >> I just sent a few patches that fix the problem with the timeout on my
> >> machines.
> >>
> >> Do you think it's still worthwhile to disable logging by using
> >> MsiEnableLogA? When I now look in my temp folder I have a few hundred
> MSI
> >> log files. We could either disable logging or create 1 file ourselves
> and
> >> append everything to there (removing it afterwards maybe).
> >>
> >
> > Logging to one file takes just as long as any other type of logging.
> > No logging should be happening.  No I don't think it's worth using
> > MsiEnableLog to disable loggin.  Logging is not enabled by default,
> > and to enable it you have to change some registry entries, which I
> > doubt anyone is doing.
> >
> The reason for the 1 file was not to speed up things but to limit the
> number of
> logfiles in the temp directory (and maybe the ability to remove this file
> as we
> know the one we created ourselves).
>
> On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200
> or so
> logfiles in the temp directory after running the install tests. On none of
> these
> boxes did I do anything to tinker with the msi logging settings.
>
> It would be nice if other could tell if they have a huge number of these
> logfiles in their temp directory after running the tests.
>
> --
> Cheers,
>
> Paul.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080901/9ceef605/attachment.htm 

From niko.lecam at gmail.com  Mon Sep  1 05:16:15 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 1 Sep 2008 12:16:15 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <48BA65B5.6090403@gmail.com>
References: <48B50FB3.2080904@gmail.com>
	<1219855212.6723.4.camel@belthazor-saved>
	<22821af30808271215re1917f1wdad7c1018a2f5f13@mail.gmail.com>
	<48B5A87D.2050806@gmail.com>
	<22821af30808271220i4c794bcdy1a47866bf793d169@mail.gmail.com>
	<48B9AAD8.4030300@gmail.com>
	<22821af30808301347l6048cba5t1f39320dfeae4b3d@mail.gmail.com>
	<48BA65B5.6090403@gmail.com>
Message-ID: <d7e62e980809010316i5b6f5029j76534317efdc9367@mail.gmail.com>

Same thing here with a 2k box running on VirtualBox.

2008/8/31 Paul Vriens <paul.vriens.wine at gmail.com>

> James Hawkins wrote:
> > On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com>
> wrote:
> >> Hi,
> >>
> >> I just sent a few patches that fix the problem with the timeout on my
> >> machines.
> >>
> >> Do you think it's still worthwhile to disable logging by using
> >> MsiEnableLogA? When I now look in my temp folder I have a few hundred
> MSI
> >> log files. We could either disable logging or create 1 file ourselves
> and
> >> append everything to there (removing it afterwards maybe).
> >>
> >
> > Logging to one file takes just as long as any other type of logging.
> > No logging should be happening.  No I don't think it's worth using
> > MsiEnableLog to disable loggin.  Logging is not enabled by default,
> > and to enable it you have to change some registry entries, which I
> > doubt anyone is doing.
> >
> The reason for the 1 file was not to speed up things but to limit the
> number of
> logfiles in the temp directory (and maybe the ability to remove this file
> as we
> know the one we created ourselves).
>
> On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200
> or so
> logfiles in the temp directory after running the install tests. On none of
> these
> boxes did I do anything to tinker with the msi logging settings.
>
> It would be nice if other could tell if they have a huge number of these
> logfiles in their temp directory after running the tests.
>
> --
> Cheers,
>
> Paul.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080901/9ceef605/attachment-0001.htm 

From niko.lecam at gmail.com  Mon Sep  1 05:16:15 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 1 Sep 2008 12:16:15 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <48BA65B5.6090403@gmail.com>
References: <48B50FB3.2080904@gmail.com>
	<1219855212.6723.4.camel@belthazor-saved>
	<22821af30808271215re1917f1wdad7c1018a2f5f13@mail.gmail.com>
	<48B5A87D.2050806@gmail.com>
	<22821af30808271220i4c794bcdy1a47866bf793d169@mail.gmail.com>
	<48B9AAD8.4030300@gmail.com>
	<22821af30808301347l6048cba5t1f39320dfeae4b3d@mail.gmail.com>
	<48BA65B5.6090403@gmail.com>
Message-ID: <d7e62e980809010316i5b6f5029j76534317efdc9367@mail.gmail.com>

Same thing here with a 2k box running on VirtualBox.

2008/8/31 Paul Vriens <paul.vriens.wine at gmail.com>

> James Hawkins wrote:
> > On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com>
> wrote:
> >> Hi,
> >>
> >> I just sent a few patches that fix the problem with the timeout on my
> >> machines.
> >>
> >> Do you think it's still worthwhile to disable logging by using
> >> MsiEnableLogA? When I now look in my temp folder I have a few hundred
> MSI
> >> log files. We could either disable logging or create 1 file ourselves
> and
> >> append everything to there (removing it afterwards maybe).
> >>
> >
> > Logging to one file takes just as long as any other type of logging.
> > No logging should be happening.  No I don't think it's worth using
> > MsiEnableLog to disable loggin.  Logging is not enabled by default,
> > and to enable it you have to change some registry entries, which I
> > doubt anyone is doing.
> >
> The reason for the 1 file was not to speed up things but to limit the
> number of
> logfiles in the temp directory (and maybe the ability to remove this file
> as we
> know the one we created ourselves).
>
> On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200
> or so
> logfiles in the temp directory after running the install tests. On none of
> these
> boxes did I do anything to tinker with the msi logging settings.
>
> It would be nice if other could tell if they have a huge number of these
> logfiles in their temp directory after running the tests.
>
> --
> Cheers,
>
> Paul.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080901/9ceef605/attachment-0002.htm 

From niko.lecam at gmail.com  Mon Sep  1 05:16:15 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 1 Sep 2008 12:16:15 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <48BA65B5.6090403@gmail.com>
References: <48B50FB3.2080904@gmail.com>
	<1219855212.6723.4.camel@belthazor-saved>
	<22821af30808271215re1917f1wdad7c1018a2f5f13@mail.gmail.com>
	<48B5A87D.2050806@gmail.com>
	<22821af30808271220i4c794bcdy1a47866bf793d169@mail.gmail.com>
	<48B9AAD8.4030300@gmail.com>
	<22821af30808301347l6048cba5t1f39320dfeae4b3d@mail.gmail.com>
	<48BA65B5.6090403@gmail.com>
Message-ID: <d7e62e980809010316i5b6f5029j76534317efdc9367@mail.gmail.com>

Same thing here with a 2k box running on VirtualBox.

2008/8/31 Paul Vriens <paul.vriens.wine at gmail.com>

> James Hawkins wrote:
> > On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com>
> wrote:
> >> Hi,
> >>
> >> I just sent a few patches that fix the problem with the timeout on my
> >> machines.
> >>
> >> Do you think it's still worthwhile to disable logging by using
> >> MsiEnableLogA? When I now look in my temp folder I have a few hundred
> MSI
> >> log files. We could either disable logging or create 1 file ourselves
> and
> >> append everything to there (removing it afterwards maybe).
> >>
> >
> > Logging to one file takes just as long as any other type of logging.
> > No logging should be happening.  No I don't think it's worth using
> > MsiEnableLog to disable loggin.  Logging is not enabled by default,
> > and to enable it you have to change some registry entries, which I
> > doubt anyone is doing.
> >
> The reason for the 1 file was not to speed up things but to limit the
> number of
> logfiles in the temp directory (and maybe the ability to remove this file
> as we
> know the one we created ourselves).
>
> On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200
> or so
> logfiles in the temp directory after running the install tests. On none of
> these
> boxes did I do anything to tinker with the msi logging settings.
>
> It would be nice if other could tell if they have a huge number of these
> logfiles in their temp directory after running the tests.
>
> --
> Cheers,
>
> Paul.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080901/9ceef605/attachment-0003.htm 

From niko.lecam at gmail.com  Mon Sep  1 05:16:15 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 1 Sep 2008 12:16:15 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <48BA65B5.6090403@gmail.com>
References: <48B50FB3.2080904@gmail.com>
	<1219855212.6723.4.camel@belthazor-saved>
	<22821af30808271215re1917f1wdad7c1018a2f5f13@mail.gmail.com>
	<48B5A87D.2050806@gmail.com>
	<22821af30808271220i4c794bcdy1a47866bf793d169@mail.gmail.com>
	<48B9AAD8.4030300@gmail.com>
	<22821af30808301347l6048cba5t1f39320dfeae4b3d@mail.gmail.com>
	<48BA65B5.6090403@gmail.com>
Message-ID: <d7e62e980809010316i5b6f5029j76534317efdc9367@mail.gmail.com>

Same thing here with a 2k box running on VirtualBox.

2008/8/31 Paul Vriens <paul.vriens.wine at gmail.com>

> James Hawkins wrote:
> > On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com>
> wrote:
> >> Hi,
> >>
> >> I just sent a few patches that fix the problem with the timeout on my
> >> machines.
> >>
> >> Do you think it's still worthwhile to disable logging by using
> >> MsiEnableLogA? When I now look in my temp folder I have a few hundred
> MSI
> >> log files. We could either disable logging or create 1 file ourselves
> and
> >> append everything to there (removing it afterwards maybe).
> >>
> >
> > Logging to one file takes just as long as any other type of logging.
> > No logging should be happening.  No I don't think it's worth using
> > MsiEnableLog to disable loggin.  Logging is not enabled by default,
> > and to enable it you have to change some registry entries, which I
> > doubt anyone is doing.
> >
> The reason for the 1 file was not to speed up things but to limit the
> number of
> logfiles in the temp directory (and maybe the ability to remove this file
> as we
> know the one we created ourselves).
>
> On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200
> or so
> logfiles in the temp directory after running the install tests. On none of
> these
> boxes did I do anything to tinker with the msi logging settings.
>
> It would be nice if other could tell if they have a huge number of these
> logfiles in their temp directory after running the tests.
>
> --
> Cheers,
>
> Paul.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080901/9ceef605/attachment-0009.htm 

From niko.lecam at gmail.com  Mon Sep  1 05:16:15 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 1 Sep 2008 12:16:15 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <48BA65B5.6090403@gmail.com>
References: <48B50FB3.2080904@gmail.com>
	<1219855212.6723.4.camel@belthazor-saved>
	<22821af30808271215re1917f1wdad7c1018a2f5f13@mail.gmail.com>
	<48B5A87D.2050806@gmail.com>
	<22821af30808271220i4c794bcdy1a47866bf793d169@mail.gmail.com>
	<48B9AAD8.4030300@gmail.com>
	<22821af30808301347l6048cba5t1f39320dfeae4b3d@mail.gmail.com>
	<48BA65B5.6090403@gmail.com>
Message-ID: <d7e62e980809010316i5b6f5029j76534317efdc9367@mail.gmail.com>

Same thing here with a 2k box running on VirtualBox.

2008/8/31 Paul Vriens <paul.vriens.wine at gmail.com>

> James Hawkins wrote:
> > On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com>
> wrote:
> >> Hi,
> >>
> >> I just sent a few patches that fix the problem with the timeout on my
> >> machines.
> >>
> >> Do you think it's still worthwhile to disable logging by using
> >> MsiEnableLogA? When I now look in my temp folder I have a few hundred
> MSI
> >> log files. We could either disable logging or create 1 file ourselves
> and
> >> append everything to there (removing it afterwards maybe).
> >>
> >
> > Logging to one file takes just as long as any other type of logging.
> > No logging should be happening.  No I don't think it's worth using
> > MsiEnableLog to disable loggin.  Logging is not enabled by default,
> > and to enable it you have to change some registry entries, which I
> > doubt anyone is doing.
> >
> The reason for the 1 file was not to speed up things but to limit the
> number of
> logfiles in the temp directory (and maybe the ability to remove this file
> as we
> know the one we created ourselves).
>
> On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200
> or so
> logfiles in the temp directory after running the install tests. On none of
> these
> boxes did I do anything to tinker with the msi logging settings.
>
> It would be nice if other could tell if they have a huge number of these
> logfiles in their temp directory after running the tests.
>
> --
> Cheers,
>
> Paul.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080901/9ceef605/attachment-0010.htm 

From niko.lecam at gmail.com  Mon Sep  1 05:16:15 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 1 Sep 2008 12:16:15 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <48BA65B5.6090403@gmail.com>
References: <48B50FB3.2080904@gmail.com>
	<1219855212.6723.4.camel@belthazor-saved>
	<22821af30808271215re1917f1wdad7c1018a2f5f13@mail.gmail.com>
	<48B5A87D.2050806@gmail.com>
	<22821af30808271220i4c794bcdy1a47866bf793d169@mail.gmail.com>
	<48B9AAD8.4030300@gmail.com>
	<22821af30808301347l6048cba5t1f39320dfeae4b3d@mail.gmail.com>
	<48BA65B5.6090403@gmail.com>
Message-ID: <d7e62e980809010316i5b6f5029j76534317efdc9367@mail.gmail.com>

Same thing here with a 2k box running on VirtualBox.

2008/8/31 Paul Vriens <paul.vriens.wine at gmail.com>

> James Hawkins wrote:
> > On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com>
> wrote:
> >> Hi,
> >>
> >> I just sent a few patches that fix the problem with the timeout on my
> >> machines.
> >>
> >> Do you think it's still worthwhile to disable logging by using
> >> MsiEnableLogA? When I now look in my temp folder I have a few hundred
> MSI
> >> log files. We could either disable logging or create 1 file ourselves
> and
> >> append everything to there (removing it afterwards maybe).
> >>
> >
> > Logging to one file takes just as long as any other type of logging.
> > No logging should be happening.  No I don't think it's worth using
> > MsiEnableLog to disable loggin.  Logging is not enabled by default,
> > and to enable it you have to change some registry entries, which I
> > doubt anyone is doing.
> >
> The reason for the 1 file was not to speed up things but to limit the
> number of
> logfiles in the temp directory (and maybe the ability to remove this file
> as we
> know the one we created ourselves).
>
> On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200
> or so
> logfiles in the temp directory after running the install tests. On none of
> these
> boxes did I do anything to tinker with the msi logging settings.
>
> It would be nice if other could tell if they have a huge number of these
> logfiles in their temp directory after running the tests.
>
> --
> Cheers,
>
> Paul.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080901/9ceef605/attachment-0011.htm 

From jjmckenzie51 at earthlink.net  Mon Sep  1 10:18:21 2008
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Mon, 1 Sep 2008 08:18:21 -0700 (GMT-07:00)
Subject: Recent msi/package tests failures
Message-ID: <11697395.1220282302084.JavaMail.root@mswamui-blood.atl.sa.earthlink.net>

Paul/James:
Paul Vriens wrote:
>James Hawkins wrote:
>> On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>>> Hi,
>>>
>>> I just sent a few patches that fix the problem with the timeout on my
>>> machines.
>>>
>>> Do you think it's still worthwhile to disable logging by using
>>> MsiEnableLogA? When I now look in my temp folder I have a few hundred MSI
>>> log files. We could either disable logging or create 1 file ourselves and
>>> append everything to there (removing it afterwards maybe).
>>>
>> 
>> Logging to one file takes just as long as any other type of logging.
>> No logging should be happening.  No I don't think it's worth using
>> MsiEnableLog to disable loggin.  Logging is not enabled by default,
>> and to enable it you have to change some registry entries, which I
>> doubt anyone is doing.
>> 
>The reason for the 1 file was not to speed up things but to limit the number of 
>logfiles in the temp directory (and maybe the ability to remove this file as we 
>know the one we created ourselves).
>
>On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200 or so 
>logfiles in the temp directory after running the install tests. On none of these 
>boxes did I do anything to tinker with the msi logging settings.
>
>It would be nice if other could tell if they have a huge number of these 
>logfiles in their temp directory after running the tests.
>

+1 to one log file.  I hate having to look through piles of log files to find errors.  Yes, I know that I could grep them, but that is an added step that should not be needed.

-- 
James McKenzie



From niko.lecam at gmail.com  Mon Sep  1 05:16:15 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 1 Sep 2008 12:16:15 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <48BA65B5.6090403@gmail.com>
References: <48B50FB3.2080904@gmail.com>
	<1219855212.6723.4.camel@belthazor-saved>
	<22821af30808271215re1917f1wdad7c1018a2f5f13@mail.gmail.com>
	<48B5A87D.2050806@gmail.com>
	<22821af30808271220i4c794bcdy1a47866bf793d169@mail.gmail.com>
	<48B9AAD8.4030300@gmail.com>
	<22821af30808301347l6048cba5t1f39320dfeae4b3d@mail.gmail.com>
	<48BA65B5.6090403@gmail.com>
Message-ID: <d7e62e980809010316i5b6f5029j76534317efdc9367@mail.gmail.com>

Same thing here with a 2k box running on VirtualBox.

2008/8/31 Paul Vriens <paul.vriens.wine at gmail.com>

> James Hawkins wrote:
> > On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com>
> wrote:
> >> Hi,
> >>
> >> I just sent a few patches that fix the problem with the timeout on my
> >> machines.
> >>
> >> Do you think it's still worthwhile to disable logging by using
> >> MsiEnableLogA? When I now look in my temp folder I have a few hundred
> MSI
> >> log files. We could either disable logging or create 1 file ourselves
> and
> >> append everything to there (removing it afterwards maybe).
> >>
> >
> > Logging to one file takes just as long as any other type of logging.
> > No logging should be happening.  No I don't think it's worth using
> > MsiEnableLog to disable loggin.  Logging is not enabled by default,
> > and to enable it you have to change some registry entries, which I
> > doubt anyone is doing.
> >
> The reason for the 1 file was not to speed up things but to limit the
> number of
> logfiles in the temp directory (and maybe the ability to remove this file
> as we
> know the one we created ourselves).
>
> On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200
> or so
> logfiles in the temp directory after running the install tests. On none of
> these
> boxes did I do anything to tinker with the msi logging settings.
>
> It would be nice if other could tell if they have a huge number of these
> logfiles in their temp directory after running the tests.
>
> --
> Cheers,
>
> Paul.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080901/9ceef605/attachment-0012.htm 

From niko.lecam at gmail.com  Mon Sep  1 05:16:15 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 1 Sep 2008 12:16:15 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <48BA65B5.6090403@gmail.com>
References: <48B50FB3.2080904@gmail.com>
	<1219855212.6723.4.camel@belthazor-saved>
	<22821af30808271215re1917f1wdad7c1018a2f5f13@mail.gmail.com>
	<48B5A87D.2050806@gmail.com>
	<22821af30808271220i4c794bcdy1a47866bf793d169@mail.gmail.com>
	<48B9AAD8.4030300@gmail.com>
	<22821af30808301347l6048cba5t1f39320dfeae4b3d@mail.gmail.com>
	<48BA65B5.6090403@gmail.com>
Message-ID: <d7e62e980809010316i5b6f5029j76534317efdc9367@mail.gmail.com>

Same thing here with a 2k box running on VirtualBox.

2008/8/31 Paul Vriens <paul.vriens.wine at gmail.com>

> James Hawkins wrote:
> > On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com>
> wrote:
> >> Hi,
> >>
> >> I just sent a few patches that fix the problem with the timeout on my
> >> machines.
> >>
> >> Do you think it's still worthwhile to disable logging by using
> >> MsiEnableLogA? When I now look in my temp folder I have a few hundred
> MSI
> >> log files. We could either disable logging or create 1 file ourselves
> and
> >> append everything to there (removing it afterwards maybe).
> >>
> >
> > Logging to one file takes just as long as any other type of logging.
> > No logging should be happening.  No I don't think it's worth using
> > MsiEnableLog to disable loggin.  Logging is not enabled by default,
> > and to enable it you have to change some registry entries, which I
> > doubt anyone is doing.
> >
> The reason for the 1 file was not to speed up things but to limit the
> number of
> logfiles in the temp directory (and maybe the ability to remove this file
> as we
> know the one we created ourselves).
>
> On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200
> or so
> logfiles in the temp directory after running the install tests. On none of
> these
> boxes did I do anything to tinker with the msi logging settings.
>
> It would be nice if other could tell if they have a huge number of these
> logfiles in their temp directory after running the tests.
>
> --
> Cheers,
>
> Paul.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080901/9ceef605/attachment-0015.htm 

From hselasky at c2i.net  Mon Sep  1 12:03:20 2008
From: hselasky at c2i.net (Hans Petter Selasky)
Date: Mon, 1 Sep 2008 19:03:20 +0200
Subject: Adding Flawfinder to Patchwatcher
In-Reply-To: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
Message-ID: <200809011903.22347.hselasky@c2i.net>

Hi,

I've received +50 copies of this e-mail now with full attachments flooding my 
inbox. Is there a bug at my ISP or is there a bug in the mailman software ?

Thanks,
--HPS


From truiken at gmail.com  Mon Sep  1 12:49:22 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 1 Sep 2008 12:49:22 -0500
Subject: Recent msi/package tests failures
In-Reply-To: <11697395.1220282302084.JavaMail.root@mswamui-blood.atl.sa.earthlink.net>
References: <11697395.1220282302084.JavaMail.root@mswamui-blood.atl.sa.earthlink.net>
Message-ID: <22821af30809011049t65f47bces3d6e9810e71bd8cb@mail.gmail.com>

On Mon, Sep 1, 2008 at 10:18 AM, James Mckenzie
<jjmckenzie51 at earthlink.net> wrote:
> Paul/James:
> Paul Vriens wrote:
>>James Hawkins wrote:
>>> On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>>>> Hi,
>>>>
>>>> I just sent a few patches that fix the problem with the timeout on my
>>>> machines.
>>>>
>>>> Do you think it's still worthwhile to disable logging by using
>>>> MsiEnableLogA? When I now look in my temp folder I have a few hundred MSI
>>>> log files. We could either disable logging or create 1 file ourselves and
>>>> append everything to there (removing it afterwards maybe).
>>>>
>>>
>>> Logging to one file takes just as long as any other type of logging.
>>> No logging should be happening.  No I don't think it's worth using
>>> MsiEnableLog to disable loggin.  Logging is not enabled by default,
>>> and to enable it you have to change some registry entries, which I
>>> doubt anyone is doing.
>>>
>>The reason for the 1 file was not to speed up things but to limit the number of
>>logfiles in the temp directory (and maybe the ability to remove this file as we
>>know the one we created ourselves).
>>
>>On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200 or so
>>logfiles in the temp directory after running the install tests. On none of these
>>boxes did I do anything to tinker with the msi logging settings.
>>
>>It would be nice if other could tell if they have a huge number of these
>>logfiles in their temp directory after running the tests.
>>
>
> +1 to one log file.  I hate having to look through piles of log files to find errors.  Yes, I know that I could grep them, but that is an added step that should not be needed.
>

Why would you be grep'ing windows msi log files?

-- 
James Hawkins


From truiken at gmail.com  Mon Sep  1 12:49:22 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 1 Sep 2008 12:49:22 -0500
Subject: Recent msi/package tests failures
In-Reply-To: <11697395.1220282302084.JavaMail.root@mswamui-blood.atl.sa.earthlink.net>
References: <11697395.1220282302084.JavaMail.root@mswamui-blood.atl.sa.earthlink.net>
Message-ID: <22821af30809011049t65f47bces3d6e9810e71bd8cb@mail.gmail.com>

On Mon, Sep 1, 2008 at 10:18 AM, James Mckenzie
<jjmckenzie51 at earthlink.net> wrote:
> Paul/James:
> Paul Vriens wrote:
>>James Hawkins wrote:
>>> On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>>>> Hi,
>>>>
>>>> I just sent a few patches that fix the problem with the timeout on my
>>>> machines.
>>>>
>>>> Do you think it's still worthwhile to disable logging by using
>>>> MsiEnableLogA? When I now look in my temp folder I have a few hundred MSI
>>>> log files. We could either disable logging or create 1 file ourselves and
>>>> append everything to there (removing it afterwards maybe).
>>>>
>>>
>>> Logging to one file takes just as long as any other type of logging.
>>> No logging should be happening.  No I don't think it's worth using
>>> MsiEnableLog to disable loggin.  Logging is not enabled by default,
>>> and to enable it you have to change some registry entries, which I
>>> doubt anyone is doing.
>>>
>>The reason for the 1 file was not to speed up things but to limit the number of
>>logfiles in the temp directory (and maybe the ability to remove this file as we
>>know the one we created ourselves).
>>
>>On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200 or so
>>logfiles in the temp directory after running the install tests. On none of these
>>boxes did I do anything to tinker with the msi logging settings.
>>
>>It would be nice if other could tell if they have a huge number of these
>>logfiles in their temp directory after running the tests.
>>
>
> +1 to one log file.  I hate having to look through piles of log files to find errors.  Yes, I know that I could grep them, but that is an added step that should not be needed.
>

Why would you be grep'ing windows msi log files?

-- 
James Hawkins


From niko.lecam at gmail.com  Mon Sep  1 05:16:15 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 1 Sep 2008 12:16:15 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <48BA65B5.6090403@gmail.com>
References: <48B50FB3.2080904@gmail.com>
	<1219855212.6723.4.camel@belthazor-saved>
	<22821af30808271215re1917f1wdad7c1018a2f5f13@mail.gmail.com>
	<48B5A87D.2050806@gmail.com>
	<22821af30808271220i4c794bcdy1a47866bf793d169@mail.gmail.com>
	<48B9AAD8.4030300@gmail.com>
	<22821af30808301347l6048cba5t1f39320dfeae4b3d@mail.gmail.com>
	<48BA65B5.6090403@gmail.com>
Message-ID: <d7e62e980809010316i5b6f5029j76534317efdc9367@mail.gmail.com>

Same thing here with a 2k box running on VirtualBox.

2008/8/31 Paul Vriens <paul.vriens.wine at gmail.com>

> James Hawkins wrote:
> > On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com>
> wrote:
> >> Hi,
> >>
> >> I just sent a few patches that fix the problem with the timeout on my
> >> machines.
> >>
> >> Do you think it's still worthwhile to disable logging by using
> >> MsiEnableLogA? When I now look in my temp folder I have a few hundred
> MSI
> >> log files. We could either disable logging or create 1 file ourselves
> and
> >> append everything to there (removing it afterwards maybe).
> >>
> >
> > Logging to one file takes just as long as any other type of logging.
> > No logging should be happening.  No I don't think it's worth using
> > MsiEnableLog to disable loggin.  Logging is not enabled by default,
> > and to enable it you have to change some registry entries, which I
> > doubt anyone is doing.
> >
> The reason for the 1 file was not to speed up things but to limit the
> number of
> logfiles in the temp directory (and maybe the ability to remove this file
> as we
> know the one we created ourselves).
>
> On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200
> or so
> logfiles in the temp directory after running the install tests. On none of
> these
> boxes did I do anything to tinker with the msi logging settings.
>
> It would be nice if other could tell if they have a huge number of these
> logfiles in their temp directory after running the tests.
>
> --
> Cheers,
>
> Paul.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080901/9ceef605/attachment-0016.htm 

From truiken at gmail.com  Mon Sep  1 12:49:22 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 1 Sep 2008 12:49:22 -0500
Subject: Recent msi/package tests failures
In-Reply-To: <11697395.1220282302084.JavaMail.root@mswamui-blood.atl.sa.earthlink.net>
References: <11697395.1220282302084.JavaMail.root@mswamui-blood.atl.sa.earthlink.net>
Message-ID: <22821af30809011049t65f47bces3d6e9810e71bd8cb@mail.gmail.com>

On Mon, Sep 1, 2008 at 10:18 AM, James Mckenzie
<jjmckenzie51 at earthlink.net> wrote:
> Paul/James:
> Paul Vriens wrote:
>>James Hawkins wrote:
>>> On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>>>> Hi,
>>>>
>>>> I just sent a few patches that fix the problem with the timeout on my
>>>> machines.
>>>>
>>>> Do you think it's still worthwhile to disable logging by using
>>>> MsiEnableLogA? When I now look in my temp folder I have a few hundred MSI
>>>> log files. We could either disable logging or create 1 file ourselves and
>>>> append everything to there (removing it afterwards maybe).
>>>>
>>>
>>> Logging to one file takes just as long as any other type of logging.
>>> No logging should be happening.  No I don't think it's worth using
>>> MsiEnableLog to disable loggin.  Logging is not enabled by default,
>>> and to enable it you have to change some registry entries, which I
>>> doubt anyone is doing.
>>>
>>The reason for the 1 file was not to speed up things but to limit the number of
>>logfiles in the temp directory (and maybe the ability to remove this file as we
>>know the one we created ourselves).
>>
>>On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200 or so
>>logfiles in the temp directory after running the install tests. On none of these
>>boxes did I do anything to tinker with the msi logging settings.
>>
>>It would be nice if other could tell if they have a huge number of these
>>logfiles in their temp directory after running the tests.
>>
>
> +1 to one log file.  I hate having to look through piles of log files to find errors.  Yes, I know that I could grep them, but that is an added step that should not be needed.
>

Why would you be grep'ing windows msi log files?

-- 
James Hawkins


From truiken at gmail.com  Mon Sep  1 12:49:22 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 1 Sep 2008 12:49:22 -0500
Subject: Recent msi/package tests failures
In-Reply-To: <11697395.1220282302084.JavaMail.root@mswamui-blood.atl.sa.earthlink.net>
References: <11697395.1220282302084.JavaMail.root@mswamui-blood.atl.sa.earthlink.net>
Message-ID: <22821af30809011049t65f47bces3d6e9810e71bd8cb@mail.gmail.com>

On Mon, Sep 1, 2008 at 10:18 AM, James Mckenzie
<jjmckenzie51 at earthlink.net> wrote:
> Paul/James:
> Paul Vriens wrote:
>>James Hawkins wrote:
>>> On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>>>> Hi,
>>>>
>>>> I just sent a few patches that fix the problem with the timeout on my
>>>> machines.
>>>>
>>>> Do you think it's still worthwhile to disable logging by using
>>>> MsiEnableLogA? When I now look in my temp folder I have a few hundred MSI
>>>> log files. We could either disable logging or create 1 file ourselves and
>>>> append everything to there (removing it afterwards maybe).
>>>>
>>>
>>> Logging to one file takes just as long as any other type of logging.
>>> No logging should be happening.  No I don't think it's worth using
>>> MsiEnableLog to disable loggin.  Logging is not enabled by default,
>>> and to enable it you have to change some registry entries, which I
>>> doubt anyone is doing.
>>>
>>The reason for the 1 file was not to speed up things but to limit the number of
>>logfiles in the temp directory (and maybe the ability to remove this file as we
>>know the one we created ourselves).
>>
>>On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200 or so
>>logfiles in the temp directory after running the install tests. On none of these
>>boxes did I do anything to tinker with the msi logging settings.
>>
>>It would be nice if other could tell if they have a huge number of these
>>logfiles in their temp directory after running the tests.
>>
>
> +1 to one log file.  I hate having to look through piles of log files to find errors.  Yes, I know that I could grep them, but that is an added step that should not be needed.
>

Why would you be grep'ing windows msi log files?

-- 
James Hawkins


From hverbeet at gmail.com  Mon Sep  1 14:04:28 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 1 Sep 2008 21:04:28 +0200
Subject: [PATCH 4/5] wined3d: Remove glDrawBuffer calls in BltOverride.
In-Reply-To: <48BAA53A.6010702@inbox.lv>
References: <48BAA53A.6010702@inbox.lv>
Message-ID: <d658b69e0809011204n1fed1ff9nf4921020ac825382@mail.gmail.com>

2008/8/31 Alexander Dorofeyev <alexd4 at inbox.lv>:
>
> Handled in ActivateContext, must be remains of pre-context management code.
> ---
>  dlls/wined3d/surface.c |   10 ----------
>  1 files changed, 0 insertions(+), 10 deletions(-)
>
If you're going to remove those glDrawBuffer calls, you should remove
the buffer variable completely.


From hverbeet at gmail.com  Mon Sep  1 14:24:51 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 1 Sep 2008 21:24:51 +0200
Subject: [PATCH 3/5] wined3d: Make the condition to enter p8 conversion
	shader path more strict.
In-Reply-To: <48BAA531.6020206@inbox.lv>
References: <48BAA531.6020206@inbox.lv>
Message-ID: <d658b69e0809011224r7ff1c7at70775ef78358fd27@mail.gmail.com>

2008/8/31 Alexander Dorofeyev <alexd4 at inbox.lv>:
>
> This prevents shader path from being entered for an offscreen surface when
> there is p8 render target and fixes failures in ddraw visual test (with
> opengl rendering and RTL_READDRAW mode) and visual glitches in Red Alert.
> ---
>  dlls/wined3d/surface.c |    6 +++++-
>  1 files changed, 5 insertions(+), 1 deletions(-)
>
This is probably ok for this specific case, but in general I think
primary_render_target_is_p8() is somewhat broken. It seems that in
most places where it's used it is assumed that "This" is the primary
render target. In some cases that's actually always true, but in those
cases primary_render_target_is_p8() wouldn't need to check if there's
a primary render target, it could just use a surface passed in as
parameter. In the other cases, you don't actually know the surface is
the primary render target, and you'd need to verify that first, after
which you've essentially got the first case again.


From austinenglish at gmail.com  Mon Sep  1 14:33:08 2008
From: austinenglish at gmail.com (Austin English)
Date: Mon, 1 Sep 2008 14:33:08 -0500
Subject: Repeated messages (was Re: Adding Flawfinder to Patchwatcher)
In-Reply-To: <20080901093800.3165f14f.mle+win@mega-nerd.com>
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
	<20080901093800.3165f14f.mle+win@mega-nerd.com>
Message-ID: <b6bb06270809011233h6d7008f5x8a6a7ce7ca332c63@mail.gmail.com>

On Sun, Aug 31, 2008 at 6:38 PM, Erik de Castro Lopo
<mle+win at mega-nerd.com> wrote:
> Austin English wrote:
>
>> I had a discussion with Dan about adding Flawfinder to the
>> patchwatcher.
>
> Is anyone else getting multiple copies of this message? I seem
> to be getting one every 10-20 minutes.
>
> A quick scan of the email headers suggests that this is getting
> resent from within the Gmail system. Each duplicate has a received
> line like:
>
>   Received: by ey-out-1920.google.com with SMTP id 4so195432eyg.30
>        for <wine-devel at winehq.org>; Thu, 28 Aug 2008 20:50:50 -0700 (PDT)
>
> with a unique SMTP id.
>
> Erik
> --
> -----------------------------------------------------------------
> Erik de Castro Lopo
> -----------------------------------------------------------------
> Beware the Lollipop of Mediocrity.
> Lick it once, and you suck forever.
>
>
>

I received a few messages telling me it didn't go through, then after
a few days it did. I didn't resend it at all though...

-Austin


From austinenglish at gmail.com  Mon Sep  1 14:39:25 2008
From: austinenglish at gmail.com (Austin English)
Date: Mon, 1 Sep 2008 14:39:25 -0500
Subject: Adding Flawfinder to Patchwatcher
In-Reply-To: <200809011903.22347.hselasky@c2i.net>
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
	<200809011903.22347.hselasky@c2i.net>
Message-ID: <b6bb06270809011239m23483eccr3129e741011a4035@mail.gmail.com>

On Mon, Sep 1, 2008 at 12:03 PM, Hans Petter Selasky <hselasky at c2i.net> wrote:
> Hi,
>
> I've received +50 copies of this e-mail now with full attachments flooding my
> inbox. Is there a bug at my ISP or is there a bug in the mailman software ?
>
> Thanks,
> --HPS
>

Someone else mentioned this as well. I didn't send multiple, and I
didn't receive any, though I have mailman prefs set to not send me a
copy when I'm author/cc.

If I need to notify Gmail, someone please let me know.

-Austin


From research at science.su  Mon Sep  1 15:00:47 2008
From: research at science.su (L. Rahyen)
Date: Mon, 1 Sep 2008 20:00:47 +0000
Subject: Repeated messages (was Re: Adding Flawfinder to Patchwatcher)
In-Reply-To: <20080901093800.3165f14f.mle+win@mega-nerd.com>
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
	<20080901093800.3165f14f.mle+win@mega-nerd.com>
Message-ID: <200809012000.48220.research@science.su>

On Sunday August 31 2008 23:38:00 Erik de Castro Lopo wrote:
> Austin English wrote:
> > I had a discussion with Dan about adding Flawfinder to the
> > patchwatcher.
>
> Is anyone else getting multiple copies of this message? I seem
> to be getting one every 10-20 minutes.

	Yes, I can confirm this. Some time ago copies of this message 
stopped coming. However, this was annoying because the message 
contains "heavy" attachment. I hope this will not happen again...


From tim at sanityinternet.com  Mon Sep  1 15:42:26 2008
From: tim at sanityinternet.com (Tim Schwartz)
Date: Mon, 1 Sep 2008 15:42:26 -0500
Subject: wine-devel Digest, Vol 37, Issue 111
In-Reply-To: <mailman.4114.1220173962.4616.wine-devel@winehq.org>
References: <mailman.4114.1220173962.4616.wine-devel@winehq.org>
Message-ID: <2390B3DC-8483-49A7-9DA7-B48690C2CFC0@sanityinternet.com>

So Austin, have you had a chance to have a discussion with Dan about  
adding flawfinder to patchwatcher?

On Aug 31, 2008, at 4:12 AM, wine-devel-request at winehq.org wrote:

> Send wine-devel mailing list submissions to
>    wine-devel at winehq.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>    http://www.winehq.org/mailman/listinfo/wine-devel
> or, via email, send a message with subject or body 'help' to
>    wine-devel-request at winehq.org
>
> You can reach the person managing the list at
>    wine-devel-owner at winehq.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of wine-devel digest..."
>
>
> Today's Topics:
>
>   1. Adding Flawfinder to Patchwatcher (Austin English)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Thu, 28 Aug 2008 15:59:20 -0500
> From: "Austin English" <austinenglish at gmail.com>
> Subject: Adding Flawfinder to Patchwatcher
> To: "wine-devel at winehq.org" <wine-devel at winehq.org>
> Message-ID:
>    <b6bb06270808281359o1d1258f9m1af82eddbb763f32 at mail.gmail.com>
> Content-Type: text/plain; charset="utf-8"
>
> I had a discussion with Dan about adding Flawfinder to the
> patchwatcher. Currently, it's got some pretty generic errors, but it
> seems able to test only patches, so we wouldn't be flooded with old
> nonbugs (or we could set up a blacklist of safe errors). For
> reference, I've run it on today's git. I'm attaching the full log, as
> well as a condensed version of the most common errors (1 per error
> type). Looks like a lot of chances for buffer overflows..
>
> Thoughts?
>
> -Austin
> -------------- next part --------------
> An embedded and charset-unspecified text was scrubbed...
> Name: flaws.txt
> Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080828/fca404cc/attachment-0044.txt
> -------------- next part --------------
> An embedded and charset-unspecified text was scrubbed...
> Name: trimmed.txt
> Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080828/fca404cc/attachment-0045.txt
>
> ------------------------------
>
> _______________________________________________
> wine-devel mailing list  -  wine-devel at winehq.org
> http://www.winehq.org/mailman/listinfo/wine-devel
>
>
> End of wine-devel Digest, Vol 37, Issue 111
> *******************************************


From niko.lecam at gmail.com  Mon Sep  1 05:16:15 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 1 Sep 2008 12:16:15 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <48BA65B5.6090403@gmail.com>
References: <48B50FB3.2080904@gmail.com>
	<1219855212.6723.4.camel@belthazor-saved>
	<22821af30808271215re1917f1wdad7c1018a2f5f13@mail.gmail.com>
	<48B5A87D.2050806@gmail.com>
	<22821af30808271220i4c794bcdy1a47866bf793d169@mail.gmail.com>
	<48B9AAD8.4030300@gmail.com>
	<22821af30808301347l6048cba5t1f39320dfeae4b3d@mail.gmail.com>
	<48BA65B5.6090403@gmail.com>
Message-ID: <d7e62e980809010316i5b6f5029j76534317efdc9367@mail.gmail.com>

Same thing here with a 2k box running on VirtualBox.

2008/8/31 Paul Vriens <paul.vriens.wine at gmail.com>

> James Hawkins wrote:
> > On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com>
> wrote:
> >> Hi,
> >>
> >> I just sent a few patches that fix the problem with the timeout on my
> >> machines.
> >>
> >> Do you think it's still worthwhile to disable logging by using
> >> MsiEnableLogA? When I now look in my temp folder I have a few hundred
> MSI
> >> log files. We could either disable logging or create 1 file ourselves
> and
> >> append everything to there (removing it afterwards maybe).
> >>
> >
> > Logging to one file takes just as long as any other type of logging.
> > No logging should be happening.  No I don't think it's worth using
> > MsiEnableLog to disable loggin.  Logging is not enabled by default,
> > and to enable it you have to change some registry entries, which I
> > doubt anyone is doing.
> >
> The reason for the 1 file was not to speed up things but to limit the
> number of
> logfiles in the temp directory (and maybe the ability to remove this file
> as we
> know the one we created ourselves).
>
> On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200
> or so
> logfiles in the temp directory after running the install tests. On none of
> these
> boxes did I do anything to tinker with the msi logging settings.
>
> It would be nice if other could tell if they have a huge number of these
> logfiles in their temp directory after running the tests.
>
> --
> Cheers,
>
> Paul.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080901/9ceef605/attachment-0019.htm 

From celticht32 at aol.com  Mon Sep  1 17:35:51 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Mon, 01 Sep 2008 18:35:51 -0400
Subject: Repeated messages (was Re: Adding Flawfinder to Patchwatcher)
In-Reply-To: <20080901093800.3165f14f.mle+win@mega-nerd.com>
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
	<20080901093800.3165f14f.mle+win@mega-nerd.com>
Message-ID: <48BC6E47.3010409@aol.com>

Erik de Castro Lopo wrote:
> Austin English wrote:
> 
>> I had a discussion with Dan about adding Flawfinder to the
>> patchwatcher.
> 
> Is anyone else getting multiple copies of this message? I seem
> to be getting one every 10-20 minutes.
> 
> A quick scan of the email headers suggests that this is getting
> resent from within the Gmail system. Each duplicate has a received
> line like:
> 
>    Received: by ey-out-1920.google.com with SMTP id 4so195432eyg.30
>     for <wine-devel at winehq.org>; Thu, 28 Aug 2008 20:50:50 -0700 (PDT)
> 
> with a unique SMTP id.
> 
> Erik
I am getting tonnes of them.. also I am getting refused connections from 
  the git repository.. I can ping the server but the connection is refused.


  Chris


From niko.lecam at gmail.com  Mon Sep  1 05:16:15 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 1 Sep 2008 12:16:15 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <48BA65B5.6090403@gmail.com>
References: <48B50FB3.2080904@gmail.com>
	<1219855212.6723.4.camel@belthazor-saved>
	<22821af30808271215re1917f1wdad7c1018a2f5f13@mail.gmail.com>
	<48B5A87D.2050806@gmail.com>
	<22821af30808271220i4c794bcdy1a47866bf793d169@mail.gmail.com>
	<48B9AAD8.4030300@gmail.com>
	<22821af30808301347l6048cba5t1f39320dfeae4b3d@mail.gmail.com>
	<48BA65B5.6090403@gmail.com>
Message-ID: <d7e62e980809010316i5b6f5029j76534317efdc9367@mail.gmail.com>

Same thing here with a 2k box running on VirtualBox.

2008/8/31 Paul Vriens <paul.vriens.wine at gmail.com>

> James Hawkins wrote:
> > On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com>
> wrote:
> >> Hi,
> >>
> >> I just sent a few patches that fix the problem with the timeout on my
> >> machines.
> >>
> >> Do you think it's still worthwhile to disable logging by using
> >> MsiEnableLogA? When I now look in my temp folder I have a few hundred
> MSI
> >> log files. We could either disable logging or create 1 file ourselves
> and
> >> append everything to there (removing it afterwards maybe).
> >>
> >
> > Logging to one file takes just as long as any other type of logging.
> > No logging should be happening.  No I don't think it's worth using
> > MsiEnableLog to disable loggin.  Logging is not enabled by default,
> > and to enable it you have to change some registry entries, which I
> > doubt anyone is doing.
> >
> The reason for the 1 file was not to speed up things but to limit the
> number of
> logfiles in the temp directory (and maybe the ability to remove this file
> as we
> know the one we created ourselves).
>
> On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200
> or so
> logfiles in the temp directory after running the install tests. On none of
> these
> boxes did I do anything to tinker with the msi logging settings.
>
> It would be nice if other could tell if they have a huge number of these
> logfiles in their temp directory after running the tests.
>
> --
> Cheers,
>
> Paul.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080901/9ceef605/attachment-0020.htm 

From jjmckenzie51 at earthlink.net  Mon Sep  1 20:03:18 2008
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Mon, 1 Sep 2008 18:03:18 -0700 (GMT-07:00)
Subject: Repeated messages (was Re: Adding Flawfinder to Patchwatcher)
Message-ID: <8739946.1220317399200.JavaMail.root@mswamui-thinleaf.atl.sa.earthlink.net>

Erik:

I am and at four MB a pop this is getting very expensive.  Fortunately, I have caught every one of them.  Maybe gmail is choking on the message or the 'finished' command comes too late to prevent the message from being sent again and again.  

James McKenzie


-----Original Message-----
>From: Erik de Castro Lopo <mle+win at mega-nerd.com>
>Sent: Aug 31, 2008 4:38 PM
>To: wine-devel at winehq.org
>Subject: Repeated messages (was Re: Adding Flawfinder to Patchwatcher)
>
>Austin English wrote:
>
>> I had a discussion with Dan about adding Flawfinder to the
>> patchwatcher.
>
>Is anyone else getting multiple copies of this message? I seem
>to be getting one every 10-20 minutes.
>
>A quick scan of the email headers suggests that this is getting
>resent from within the Gmail system. Each duplicate has a received
>line like:
>
>   Received: by ey-out-1920.google.com with SMTP id 4so195432eyg.30
>	for <wine-devel at winehq.org>; Thu, 28 Aug 2008 20:50:50 -0700 (PDT)
>
>with a unique SMTP id.
>
>Erik
>-- 
>-----------------------------------------------------------------
>Erik de Castro Lopo
>-----------------------------------------------------------------
>Beware the Lollipop of Mediocrity.
>Lick it once, and you suck forever.
>
>



From jjmckenzie51 at earthlink.net  Mon Sep  1 20:08:51 2008
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Mon, 1 Sep 2008 18:08:51 -0700 (GMT-07:00)
Subject: Recent msi/package tests failures
Message-ID: <3131247.1220317732061.JavaMail.root@mswamui-thinleaf.atl.sa.earthlink.net>

James:
>From: James Hawkins <truiken at gmail.com>
>Sent: Sep 1, 2008 10:49 AM
>To: James Mckenzie <jjmckenzie51 at earthlink.net>
>Cc: Paul Vriens <paul.vriens.wine at gmail.com>, "wine-devel at winehq.org" <wine-devel at winehq.org>
>Subject: Re: Recent msi/package tests failures
>
>On Mon, Sep 1, 2008 at 10:18 AM, James Mckenzie
><jjmckenzie51 at earthlink.net> wrote:
>> Paul/James:
>> Paul Vriens wrote:
>>>James Hawkins wrote:
>>>> On Sat, Aug 30, 2008 at 3:17 PM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>>>>> Hi,
>>>>>
>>>>> I just sent a few patches that fix the problem with the timeout on my
>>>>> machines.
>>>>>
>>>>> Do you think it's still worthwhile to disable logging by using
>>>>> MsiEnableLogA? When I now look in my temp folder I have a few hundred MSI
>>>>> log files. We could either disable logging or create 1 file ourselves and
>>>>> append everything to there (removing it afterwards maybe).
>>>>>
>>>>
>>>> Logging to one file takes just as long as any other type of logging.
>>>> No logging should be happening.  No I don't think it's worth using
>>>> MsiEnableLog to disable loggin.  Logging is not enabled by default,
>>>> and to enable it you have to change some registry entries, which I
>>>> doubt anyone is doing.
>>>>
>>>The reason for the 1 file was not to speed up things but to limit the number of
>>>logfiles in the temp directory (and maybe the ability to remove this file as we
>>>know the one we created ourselves).
>>>
>>>On all of my boxes (95/98/NT/W2K/ 2 times XP/W2K3/Vista) I end up with 200 or so
>>>logfiles in the temp directory after running the install tests. On none of these
>>>boxes did I do anything to tinker with the msi logging settings.
>>>
>>>It would be nice if other could tell if they have a huge number of these
>>>logfiles in their temp directory after running the tests.
>>>
>>
>> +1 to one log file.  I hate having to look through piles of log files to find errors.  Yes, I know that I could grep them, but that is an added step that should not be needed.
>>
>
>Why would you be grep'ing windows msi log files?
>
grep is the tool of choice when working with Linux/UNIX text files and searching through thousands of them. If this process is run on Wine in the state that I understand it is, and I may be incorrect, thousands of logging files may be created.  Also it is less resource intensive to search one text file under Windows, unless the file is very, very large (> 1 MB).  Searching a directory of thousands of files can take a long time (I have experience with this.)  One file per run is all that should be created, IMHO.

James McKenzie



From truiken at gmail.com  Mon Sep  1 20:26:55 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 1 Sep 2008 20:26:55 -0500
Subject: Recent msi/package tests failures
In-Reply-To: <3131247.1220317732061.JavaMail.root@mswamui-thinleaf.atl.sa.earthlink.net>
References: <3131247.1220317732061.JavaMail.root@mswamui-thinleaf.atl.sa.earthlink.net>
Message-ID: <22821af30809011826g2e7be77bs7cb52cbb41bae156@mail.gmail.com>

On Mon, Sep 1, 2008 at 8:08 PM, James Mckenzie
<jjmckenzie51 at earthlink.net> wrote:
> James:
>>>
>>> +1 to one log file.  I hate having to look through piles of log files to find errors.  Yes, I know that I could grep them, but that is an added step that should not be needed.
>>>
>>
>>Why would you be grep'ing windows msi log files?
>>
> grep is the tool of choice when working with Linux/UNIX text files and searching through thousands of them.

Don't patronize me.  If you can't be mature on this list, then don't post.

> If this process is run on Wine in the state that I understand it is, and I may be incorrect, thousands of logging files may be created.

Incorrect.  Logging is not implemented in Wine's msi, and probably
never will be as we have our own logging mechanism.

> Also it is less resource intensive to search one text file under Windows, unless the file is very, very large (> 1 MB).  Searching a directory of thousands of files can take a long time (I have experience with this.)

That doesn't answer the question of why you, a winetest user in this
sense, would be searching through windows installer logs after running
the tests.

> One file per run is all that should be created, IMHO.

No, zero log files should be created.  This discussion is about
reducing the time it takes to run the tests, and any logging hinders
that effort.

-- 
James Hawkins


From linux at audioscience.com  Mon Sep  1 20:31:13 2008
From: linux at audioscience.com (Eliot Blennerhassett)
Date: Tue, 02 Sep 2008 13:31:13 +1200
Subject: Repeated messages (was Re: Adding Flawfinder to Patchwatcher)
In-Reply-To: <20080901093800.3165f14f.mle+win@mega-nerd.com>
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
	<20080901093800.3165f14f.mle+win@mega-nerd.com>
Message-ID: <48BC9761.9090101@audioscience.com>

Erik de Castro Lopo wrote:
> Austin English wrote:
> 
>> I had a discussion with Dan about adding Flawfinder to the
>> patchwatcher.
> 
> Is anyone else getting multiple copies of this message? I seem
> to be getting one every 10-20 minutes.

Yep.  Overflowed my mailbox quota while I was away on vacation :(
And now proceeding to try it again... grr.




From dmitry at codeweavers.com  Mon Sep  1 21:31:15 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 2 Sep 2008 11:31:15 +0900
Subject: git still down...
References: <a71bd89a0808311946h72f1b327v6376bb62ba4693c4@mail.gmail.com>
Message-ID: <93AE7872AE81474AB9EDB4B2D33923A0@DMITRY>

"Dan Kegel" <dank at kegel.com> wrote:

>$ git pull
> source.winehq.org[0: 209.46.25.134]: errno=Connection refused

As a temporary solution I've replaced 'git://' protocol by 'http://'
in .git/config.

-- 
Dmitry.


From paul.vriens.wine at gmail.com  Tue Sep  2 00:45:25 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Tue, 02 Sep 2008 07:45:25 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <22821af30809011826g2e7be77bs7cb52cbb41bae156@mail.gmail.com>
References: <3131247.1220317732061.JavaMail.root@mswamui-thinleaf.atl.sa.earthlink.net>
	<22821af30809011826g2e7be77bs7cb52cbb41bae156@mail.gmail.com>
Message-ID: <48BCD2F5.2060809@gmail.com>

James Hawkins wrote:
> On Mon, Sep 1, 2008 at 8:08 PM, James Mckenzie
> <jjmckenzie51 at earthlink.net> wrote:
>> One file per run is all that should be created, IMHO.
> 
> No, zero log files should be created.  This discussion is about
> reducing the time it takes to run the tests, and any logging hinders
> that effort.
> 
OK, back to the initial discussion then.

I did find that 'System Restore' was the cause of the slowdown on a lot of (at 
least) XP and Vista systems. Patches are being sent for that.

Disabling logging as I suggested at first only helps to get rid of a few seconds 
from the total run time of these tests. The question remains however why some 
people have loads of log files in their temp directory and some don't.

Do you think that for testing purposes we could add a check in the install tests 
that shows us the number of MSI logfiles in the temp directory before and 
afterwards? Or is it enough that several people already responded to my question 
about those logfiles?

-- 
Cheers,

Paul.


From truiken at gmail.com  Tue Sep  2 00:51:20 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 2 Sep 2008 00:51:20 -0500
Subject: Recent msi/package tests failures
In-Reply-To: <48BCD2F5.2060809@gmail.com>
References: <3131247.1220317732061.JavaMail.root@mswamui-thinleaf.atl.sa.earthlink.net>
	<22821af30809011826g2e7be77bs7cb52cbb41bae156@mail.gmail.com>
	<48BCD2F5.2060809@gmail.com>
Message-ID: <22821af30809012251v1d1326csf1e84234951244c5@mail.gmail.com>

On Tue, Sep 2, 2008 at 12:45 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> James Hawkins wrote:
>>
>> On Mon, Sep 1, 2008 at 8:08 PM, James Mckenzie
>> <jjmckenzie51 at earthlink.net> wrote:
>>>
>>> One file per run is all that should be created, IMHO.
>>
>> No, zero log files should be created.  This discussion is about
>> reducing the time it takes to run the tests, and any logging hinders
>> that effort.
>>
> OK, back to the initial discussion then.
>
> I did find that 'System Restore' was the cause of the slowdown on a lot of
> (at least) XP and Vista systems. Patches are being sent for that.
>
> Disabling logging as I suggested at first only helps to get rid of a few
> seconds from the total run time of these tests. The question remains however
> why some people have loads of log files in their temp directory and some
> don't.
>
> Do you think that for testing purposes we could add a check in the install
> tests that shows us the number of MSI logfiles in the temp directory before
> and afterwards? Or is it enough that several people already responded to my
> question about those logfiles?
>

It's not worth messing with.  The slowdown is because of the restore
points, and that has been solved, so hopefully the patches will be
accepted and we won't have any timeouts.  On my Server 2008 system,
logs are created that usually contain just one line about whatever
error was being tested.  I haven't tested whether MsiEnableLog affects
that, but my guess is it doesn't.  Either way, those are just one line
log files in a temp directory.

-- 
James Hawkins


From paul.vriens.wine at gmail.com  Tue Sep  2 00:55:40 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Tue, 02 Sep 2008 07:55:40 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <22821af30809012251v1d1326csf1e84234951244c5@mail.gmail.com>
References: <3131247.1220317732061.JavaMail.root@mswamui-thinleaf.atl.sa.earthlink.net>	
	<22821af30809011826g2e7be77bs7cb52cbb41bae156@mail.gmail.com>	
	<48BCD2F5.2060809@gmail.com>
	<22821af30809012251v1d1326csf1e84234951244c5@mail.gmail.com>
Message-ID: <48BCD55C.1050108@gmail.com>

James Hawkins wrote:
> On Tue, Sep 2, 2008 at 12:45 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>> James Hawkins wrote:
>>> On Mon, Sep 1, 2008 at 8:08 PM, James Mckenzie
>>> <jjmckenzie51 at earthlink.net> wrote:
>>>> One file per run is all that should be created, IMHO.
>>> No, zero log files should be created.  This discussion is about
>>> reducing the time it takes to run the tests, and any logging hinders
>>> that effort.
>>>
>> OK, back to the initial discussion then.
>>
>> I did find that 'System Restore' was the cause of the slowdown on a lot of
>> (at least) XP and Vista systems. Patches are being sent for that.
>>
>> Disabling logging as I suggested at first only helps to get rid of a few
>> seconds from the total run time of these tests. The question remains however
>> why some people have loads of log files in their temp directory and some
>> don't.
>>
>> Do you think that for testing purposes we could add a check in the install
>> tests that shows us the number of MSI logfiles in the temp directory before
>> and afterwards? Or is it enough that several people already responded to my
>> question about those logfiles?
>>
> 
> It's not worth messing with.  The slowdown is because of the restore
> points, and that has been solved, so hopefully the patches will be
> accepted and we won't have any timeouts.  On my Server 2008 system,
> logs are created that usually contain just one line about whatever
> error was being tested.  I haven't tested whether MsiEnableLog affects
> that, but my guess is it doesn't.  Either way, those are just one line
> log files in a temp directory.
> 

So we can say that logfiles are created, although they only contain 1 line per 
logfile (this is the same on my boxes).

I did test with MsiEnableLog and it does effect the creation of these files.

I'm in favor of using MsiEnableLog to create just one logfile in the temp 
directory. It doesn't need to be removed as it could be used for all kinds of 
other purposes. I do like it however that there are hardly leftovers after 
running winetest.

-- 
Cheers,

Paul.


From truiken at gmail.com  Tue Sep  2 00:59:52 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 2 Sep 2008 00:59:52 -0500
Subject: Recent msi/package tests failures
In-Reply-To: <48BCD55C.1050108@gmail.com>
References: <3131247.1220317732061.JavaMail.root@mswamui-thinleaf.atl.sa.earthlink.net>
	<22821af30809011826g2e7be77bs7cb52cbb41bae156@mail.gmail.com>
	<48BCD2F5.2060809@gmail.com>
	<22821af30809012251v1d1326csf1e84234951244c5@mail.gmail.com>
	<48BCD55C.1050108@gmail.com>
Message-ID: <22821af30809012259l5618901fh327814ceaa1f0b31@mail.gmail.com>

On Tue, Sep 2, 2008 at 12:55 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> James Hawkins wrote:
>>
>> On Tue, Sep 2, 2008 at 12:45 AM, Paul Vriens <paul.vriens.wine at gmail.com>
>> wrote:
>>>
>>> James Hawkins wrote:
>>>>
>>>> On Mon, Sep 1, 2008 at 8:08 PM, James Mckenzie
>>>> <jjmckenzie51 at earthlink.net> wrote:
>>>>>
>>>>> One file per run is all that should be created, IMHO.
>>>>
>>>> No, zero log files should be created.  This discussion is about
>>>> reducing the time it takes to run the tests, and any logging hinders
>>>> that effort.
>>>>
>>> OK, back to the initial discussion then.
>>>
>>> I did find that 'System Restore' was the cause of the slowdown on a lot
>>> of
>>> (at least) XP and Vista systems. Patches are being sent for that.
>>>
>>> Disabling logging as I suggested at first only helps to get rid of a few
>>> seconds from the total run time of these tests. The question remains
>>> however
>>> why some people have loads of log files in their temp directory and some
>>> don't.
>>>
>>> Do you think that for testing purposes we could add a check in the
>>> install
>>> tests that shows us the number of MSI logfiles in the temp directory
>>> before
>>> and afterwards? Or is it enough that several people already responded to
>>> my
>>> question about those logfiles?
>>>
>>
>> It's not worth messing with.  The slowdown is because of the restore
>> points, and that has been solved, so hopefully the patches will be
>> accepted and we won't have any timeouts.  On my Server 2008 system,
>> logs are created that usually contain just one line about whatever
>> error was being tested.  I haven't tested whether MsiEnableLog affects
>> that, but my guess is it doesn't.  Either way, those are just one line
>> log files in a temp directory.
>>
>
> So we can say that logfiles are created, although they only contain 1 line
> per logfile (this is the same on my boxes).
>
> I did test with MsiEnableLog and it does effect the creation of these files.
>
> I'm in favor of using MsiEnableLog to create just one logfile in the temp
> directory. It doesn't need to be removed as it could be used for all kinds
> of other purposes. I do like it however that there are hardly leftovers
> after running winetest.
>

If MsiEnableLog has any affect, and people are bothered by small log
files in a temp directory, then all you need is one call to
MsiEnableLog in the beginning of the tests to disable logging.

/* disable logging */
MsiEnableLog(0, NULL, 0);

-- 
James Hawkins


From truiken at gmail.com  Tue Sep  2 00:59:52 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 2 Sep 2008 00:59:52 -0500
Subject: Recent msi/package tests failures
In-Reply-To: <48BCD55C.1050108@gmail.com>
References: <3131247.1220317732061.JavaMail.root@mswamui-thinleaf.atl.sa.earthlink.net>
	<22821af30809011826g2e7be77bs7cb52cbb41bae156@mail.gmail.com>
	<48BCD2F5.2060809@gmail.com>
	<22821af30809012251v1d1326csf1e84234951244c5@mail.gmail.com>
	<48BCD55C.1050108@gmail.com>
Message-ID: <22821af30809012259l5618901fh327814ceaa1f0b31@mail.gmail.com>

On Tue, Sep 2, 2008 at 12:55 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> James Hawkins wrote:
>>
>> On Tue, Sep 2, 2008 at 12:45 AM, Paul Vriens <paul.vriens.wine at gmail.com>
>> wrote:
>>>
>>> James Hawkins wrote:
>>>>
>>>> On Mon, Sep 1, 2008 at 8:08 PM, James Mckenzie
>>>> <jjmckenzie51 at earthlink.net> wrote:
>>>>>
>>>>> One file per run is all that should be created, IMHO.
>>>>
>>>> No, zero log files should be created.  This discussion is about
>>>> reducing the time it takes to run the tests, and any logging hinders
>>>> that effort.
>>>>
>>> OK, back to the initial discussion then.
>>>
>>> I did find that 'System Restore' was the cause of the slowdown on a lot
>>> of
>>> (at least) XP and Vista systems. Patches are being sent for that.
>>>
>>> Disabling logging as I suggested at first only helps to get rid of a few
>>> seconds from the total run time of these tests. The question remains
>>> however
>>> why some people have loads of log files in their temp directory and some
>>> don't.
>>>
>>> Do you think that for testing purposes we could add a check in the
>>> install
>>> tests that shows us the number of MSI logfiles in the temp directory
>>> before
>>> and afterwards? Or is it enough that several people already responded to
>>> my
>>> question about those logfiles?
>>>
>>
>> It's not worth messing with.  The slowdown is because of the restore
>> points, and that has been solved, so hopefully the patches will be
>> accepted and we won't have any timeouts.  On my Server 2008 system,
>> logs are created that usually contain just one line about whatever
>> error was being tested.  I haven't tested whether MsiEnableLog affects
>> that, but my guess is it doesn't.  Either way, those are just one line
>> log files in a temp directory.
>>
>
> So we can say that logfiles are created, although they only contain 1 line
> per logfile (this is the same on my boxes).
>
> I did test with MsiEnableLog and it does effect the creation of these files.
>
> I'm in favor of using MsiEnableLog to create just one logfile in the temp
> directory. It doesn't need to be removed as it could be used for all kinds
> of other purposes. I do like it however that there are hardly leftovers
> after running winetest.
>

If MsiEnableLog has any affect, and people are bothered by small log
files in a temp directory, then all you need is one call to
MsiEnableLog in the beginning of the tests to disable logging.

/* disable logging */
MsiEnableLog(0, NULL, 0);

-- 
James Hawkins


From paul.vriens.wine at gmail.com  Tue Sep  2 01:19:34 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Tue, 02 Sep 2008 08:19:34 +0200
Subject: mlang: Remove a test that fails on all systems 
Message-ID: <48BCDAF6.2060607@gmail.com>

Hi,

(Grabbed this mail from http://www.winehq.org/pipermail/wine-patches)

This test however fails on Windows and succeeds on Wine so there must be 
something wrong (not 100% correct) in Wine? Maybe Aric should check this one out?

-- 
Cheers,

Paul.


From xixsimplicityxix at gmail.com  Tue Sep  2 02:10:14 2008
From: xixsimplicityxix at gmail.com (John Klehm)
Date: Tue, 2 Sep 2008 02:10:14 -0500
Subject: Patch for font size = 0x7fff in dialog templates
In-Reply-To: <g9enmk$tmh$1@ger.gmane.org>
References: <4893AC6D.2010700@korosoft.net> <g9enmk$tmh$1@ger.gmane.org>
Message-ID: <78a7dad00809020010n4430f8e3s10bc1bbb6c652e01@mail.gmail.com>

On Sun, Aug 31, 2008 at 1:25 PM, Koro <webmaster at korosoft.net> wrote:
>> This is a patch that fixes a discrepancy between WINE's dialog manager
>> and the real Windows one. If, in a dialog template, (assuming DS_SETFONT
>> is set) the font size is 0x7fff, it means that the dialog manager must
>> use the message box font and not read the rest of the font data
>> (facename and others) off the template.
>>
>> This quirk is "documented" in a comment there, and I have myself
>> confirmed this behavior with some of my code a few months ago:
>> http://blogs.msdn.com/oldnewthing/archive/2005/04/29/412577.aspx#413552
>>
>> Sending patch as attachment because putting it inline would probably
>> word-wrap it all over the place.
>
> What was wrong with my patch? I never heard of it again, and last time I
> checked http://source.winehq.org/source/dlls/user32/dialog.c it still
> wasn't there.
>
>

You must use your real name when sending in patches.

Regards,
--John Klehm


From xixsimplicityxix at gmail.com  Tue Sep  2 02:10:14 2008
From: xixsimplicityxix at gmail.com (John Klehm)
Date: Tue, 2 Sep 2008 02:10:14 -0500
Subject: Patch for font size = 0x7fff in dialog templates
In-Reply-To: <g9enmk$tmh$1@ger.gmane.org>
References: <4893AC6D.2010700@korosoft.net> <g9enmk$tmh$1@ger.gmane.org>
Message-ID: <78a7dad00809020010n4430f8e3s10bc1bbb6c652e01@mail.gmail.com>

On Sun, Aug 31, 2008 at 1:25 PM, Koro <webmaster at korosoft.net> wrote:
>> This is a patch that fixes a discrepancy between WINE's dialog manager
>> and the real Windows one. If, in a dialog template, (assuming DS_SETFONT
>> is set) the font size is 0x7fff, it means that the dialog manager must
>> use the message box font and not read the rest of the font data
>> (facename and others) off the template.
>>
>> This quirk is "documented" in a comment there, and I have myself
>> confirmed this behavior with some of my code a few months ago:
>> http://blogs.msdn.com/oldnewthing/archive/2005/04/29/412577.aspx#413552
>>
>> Sending patch as attachment because putting it inline would probably
>> word-wrap it all over the place.
>
> What was wrong with my patch? I never heard of it again, and last time I
> checked http://source.winehq.org/source/dlls/user32/dialog.c it still
> wasn't there.
>
>

You must use your real name when sending in patches.

Regards,
--John Klehm


From amorozov at etersoft.ru  Tue Sep  2 02:57:16 2008
From: amorozov at etersoft.ru (Alexander Morozov)
Date: Tue, 2 Sep 2008 11:57:16 +0400
Subject: ntoskrnl.exe tests
Message-ID: <200809021157.16602.amorozov@etersoft.ru>

Hello,

What should modify in these patches that they can be accepted:

[try 5] [1/4] dlls/Maketest.rules.in: Add support of building various 
resources for cross and usual tests
http://www.winehq.org/pipermail/wine-patches/2008-August/060204.html
[try 5] [2/4] Add tests for ntoskrnl.exe
http://www.winehq.org/pipermail/wine-patches/2008-August/060205.html
[try 5] [3/4] include/ddk/wdm.h: Add IO_TYPE_* defines
http://www.winehq.org/pipermail/wine-patches/2008-August/060203.html
[try 5] [4/4] ntoskrnl.exe/tests: Add tests for IoInitializeIrp and 
IoAllocateIrp
http://www.winehq.org/pipermail/wine-patches/2008-August/060206.html


From mle+win at mega-nerd.com  Tue Sep  2 03:47:11 2008
From: mle+win at mega-nerd.com (Erik de Castro Lopo)
Date: Tue, 2 Sep 2008 18:47:11 +1000
Subject: Adding Flawfinder to Patchwatcher
In-Reply-To: <200809011903.22347.hselasky@c2i.net>
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
	<200809011903.22347.hselasky@c2i.net>
Message-ID: <20080902184711.1b245ca0.mle+win@mega-nerd.com>

Hans Petter Selasky wrote:

> Hi,
> 
> I've received +50 copies of this e-mail now with full attachments flooding my 
> inbox. Is there a bug at my ISP or is there a bug in the mailman software ?

Its not your ISP and its not the mailman software, its Gmail.

Erik
-- 
-----------------------------------------------------------------
Erik de Castro Lopo
-----------------------------------------------------------------
"The growing and dangerous intrusion of this new technology,
threatens an entire industry's economic vitality and future
security." -- Jack Valenti (MPAA president) on the video
cassette recorder, 1982.


From winehacker at gmail.com  Tue Sep  2 03:59:47 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Tue, 2 Sep 2008 04:59:47 -0400
Subject: Implementing textures functions of d3dx using an extern library.
In-Reply-To: <1dbe04c10808281420u13c95b22n3dea3dbd686b5275@mail.gmail.com>
References: <1dbe04c10808261305ue440adfid97cf3f0422df800@mail.gmail.com>
	<1dbe04c10808281420u13c95b22n3dea3dbd686b5275@mail.gmail.com>
Message-ID: <19e31a080809020159o2db40e52o5e29c152f107ecbf@mail.gmail.com>

On Thu, Aug 28, 2008 at 5:20 PM, J?r?me Gardou <jerome.gardou at gmail.com> wrote:
> FreeImage : Quite easy to use, the only files not supported are DIB and
> PFM... Not so widely represented. I had to recompile it, as packages for it
> are not available for 32 bits. (I use a 64 bits ubuntu system).

I think this is going to be a show stopper. If we are going to add
more external dependencies, we need them to be pretty common.

> Here is an implementation of D3DXGetImageInfoFromFileInMemory using
> FreeImage.
>
> Suggestions and comments are welcomed.

Also you need to add a configure check for the header and the like.

Thanks
-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From bunglehead at gmail.com  Tue Sep  2 04:15:05 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Tue, 02 Sep 2008 13:15:05 +0400
Subject: gdiplus: Add some documentation stubs to make winapicheck happy.
In-Reply-To: <alpine.DEB.1.10.0809011701210.4247@amboise.dolphin>
References: <alpine.DEB.1.10.0809011701210.4247@amboise.dolphin>
Message-ID: <48BD0419.5020703@gmail.com>

Francois Gouget wrote:
> +/*****************************************************************************
> + * GdipSetEmptye [GDIPLUS.@]
> + */
>   
Typo here.


From felix at compsoc.nuigalway.ie  Tue Sep  2 04:37:07 2008
From: felix at compsoc.nuigalway.ie (Darragh Bailey)
Date: Tue, 2 Sep 2008 10:37:07 +0100
Subject: Adding Flawfinder to Patchwatcher
In-Reply-To: <200809011903.22347.hselasky@c2i.net>
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
	<200809011903.22347.hselasky@c2i.net>
Message-ID: <20080902093707.GA3027@riviera.nuigalway.ie>

On Mon, Sep 01, 2008 at 07:03:20PM +0200, Hans Petter Selasky wrote:
> Hi,
> 
> I've received +50 copies of this e-mail now with full attachments flooding my 
> inbox. Is there a bug at my ISP or is there a bug in the mailman software ?
> 
> Thanks,
> --HPS

Most likely a problem on the gmail side. All emails for the last day or
two from people using gmail accounts to send mail to this list has
resulted in duplicate emails.

-- 
Darragh

"Nothing is foolproof to a sufficiently talented fool."


From mstefani at redhat.com  Tue Sep  2 05:43:53 2008
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Tue, 02 Sep 2008 12:43:53 +0200
Subject: Proposal: switch Wine source tree to utf-8
In-Reply-To: <a71bd89a0808292110j4ded9f79lcddbfc67e89df292@mail.gmail.com>
References: <a71bd89a0808292110j4ded9f79lcddbfc67e89df292@mail.gmail.com>
Message-ID: <48BD18E9.50301@redhat.com>

Dan Kegel wrote:
> The Chinese resource files are already utf-8,
Romanian was always utf-8. Slovenian seems to be on a quick glance utf-8 
only too.

German, French and Spanish have a few files in utf-8 too.

> but I suspect lots of other files are in obscure character
> sets, which complicates patch processing and display.
> 
> Just how silly would it be for us to bite the bullet
> and set all source files to utf-8?
> We'd need to recode a bunch of files once,
> but after that, there'd be less confusion about
> how to view and edit various resource files.
Preferably that should be done by a translator of the language. There 
might be some oddities that prevent a full automatic recoding: e.g. 
Romanian uses latin-2 and that one has only a "t with cedilla" which 
exists in utf-8 too but utf-8 has the more correct "t with comma below 
accent".

> Not saying we should up and do it, just
> throwing out an idea for discussion...
We should encourage the translators to move to utf-8.

bye
	michael


From aric at codeweavers.com  Tue Sep  2 06:52:05 2008
From: aric at codeweavers.com (Aric Stewart)
Date: Tue, 02 Sep 2008 06:52:05 -0500
Subject: mlang: Remove a test that fails on all systems
In-Reply-To: <48BCDAF6.2060607@gmail.com>
References: <48BCDAF6.2060607@gmail.com>
Message-ID: <48BD28E5.6090408@codeweavers.com>

That is interesting...  I am pretty confident that test passed when I 
was testing it on Japanese windows XP.  I will try it again to be sure.

-aric

Paul Vriens wrote:
> Hi,
> 
> (Grabbed this mail from http://www.winehq.org/pipermail/wine-patches)
> 
> This test however fails on Windows and succeeds on Wine so there must be 
> something wrong (not 100% correct) in Wine? Maybe Aric should check this 
> one out?
> 


From paul.vriens.wine at gmail.com  Tue Sep  2 07:01:00 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Tue, 02 Sep 2008 14:01:00 +0200
Subject: mlang: Remove a test that fails on all systems
In-Reply-To: <48BD28E5.6090408@codeweavers.com>
References: <48BCDAF6.2060607@gmail.com> <48BD28E5.6090408@codeweavers.com>
Message-ID: <48BD2AFC.30902@gmail.com>

Aric Stewart wrote:
> That is interesting...  I am pretty confident that test passed when I 
> was testing it on Japanese windows XP.  I will try it again to be sure.
> 

I guess it should pass on all Windows and Wine boxes unless it has to be skipped.

-- 
Cheers,

Paul.


From fgouget at free.fr  Tue Sep  2 07:07:39 2008
From: fgouget at free.fr (Francois Gouget)
Date: Tue, 2 Sep 2008 14:07:39 +0200 (CEST)
Subject: Adding Flawfinder to Patchwatcher
In-Reply-To: <b6bb06270809011239m23483eccr3129e741011a4035@mail.gmail.com>
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
	<200809011903.22347.hselasky@c2i.net>
	<b6bb06270809011239m23483eccr3129e741011a4035@mail.gmail.com>
Message-ID: <alpine.DEB.1.10.0809021406440.12125@amboise.dolphin>

On Mon, 1 Sep 2008, Austin English wrote:
[...]
> Someone else mentioned this as well. I didn't send multiple, and I
> didn't receive any, though I have mailman prefs set to not send me a
> copy when I'm author/cc.
> 
> If I need to notify Gmail, someone please let me know.

You're not the only one whose emails got sent multiple times. There are 
a couple of other victims. I didn't check if Gmail was the common point.


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                            $live{free} || die "";


From aric at codeweavers.com  Tue Sep  2 08:08:46 2008
From: aric at codeweavers.com (Aric Stewart)
Date: Tue, 02 Sep 2008 08:08:46 -0500
Subject: mlang: Remove a test that fails on all systems
In-Reply-To: <48BD2AFC.30902@gmail.com>
References: <48BCDAF6.2060607@gmail.com> <48BD28E5.6090408@codeweavers.com>
	<48BD2AFC.30902@gmail.com>
Message-ID: <48BD3ADE.6030409@codeweavers.com>

Interestingly I am also seeing this failure with my Japanese windows 
2000 VM.  I do not have access to windows XP at this time. I would 
support removing that test for now and I will write it in my list of 
TODOs to investigate that more when I next have access to Japanese 
Windows XP.

-aric

Paul Vriens wrote:
> Aric Stewart wrote:
>> That is interesting...  I am pretty confident that test passed when I 
>> was testing it on Japanese windows XP.  I will try it again to be sure.
>>
> 
> I guess it should pass on all Windows and Wine boxes unless it has to be 
> skipped.
> 


From darkwalker_ at yahoo.com  Tue Sep  2 08:15:35 2008
From: darkwalker_ at yahoo.com (F Capela)
Date: Tue, 2 Sep 2008 06:15:35 -0700 (PDT)
Subject: Repeated messages (was Re: Adding Flawfinder to Patchwatcher)
Message-ID: <436900.40266.qm@web38003.mail.mud.yahoo.com>

----- Original Message ----

From: L. Rahyen <research at science.su>

>     Yes, I can confirm this. Some time ago copies of this message 
> stopped coming. However, this was annoying because the message 
> contains "heavy" attachment. I hope this will not happen again...

I'm receiving multiple copies of other messages also, from at least 4 different authors. Seems like all of them use GMail.


F?bio Oliveira Schmidt Capela
darkwalker_ at yahoo.com



      


From alexd4 at inbox.lv  Tue Sep  2 08:31:20 2008
From: alexd4 at inbox.lv (Alexander Dorofeyev)
Date: Tue, 02 Sep 2008 16:31:20 +0300
Subject: [PATCH 4/5] wined3d: Remove glDrawBuffer calls in BltOverride.
In-Reply-To: <d658b69e0809011204n1fed1ff9nf4921020ac825382@mail.gmail.com>
References: <48BAA53A.6010702@inbox.lv>
	<d658b69e0809011204n1fed1ff9nf4921020ac825382@mail.gmail.com>
Message-ID: <48BD4028.3090009@inbox.lv>

Henri Verbeet wrote:
> 2008/8/31 Alexander Dorofeyev <alexd4 at inbox.lv>:
>> Handled in ActivateContext, must be remains of pre-context management code.
>> ---
>>  dlls/wined3d/surface.c |   10 ----------
>>  1 files changed, 0 insertions(+), 10 deletions(-)
>>
> If you're going to remove those glDrawBuffer calls, you should remove
> the buffer variable completely.

I don't think this is possible yet, the variable is also used for some 
window/screen and upside-down coordinate magic. I do suspect that the code doing 
so may need to be fixed or removed, because it looks inconsistent with code in 
e.g. ClearSurface (device.c) and doesn't seem to work correctly with windowed 
ddraw. But it probably must be done in another patch. Setting buffer for 
offscreen surface case could be removed though, as it doesn't do anything after 
removal of glDrawBuffer.



From bunglehead at gmail.com  Tue Sep  2 09:02:23 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Tue, 02 Sep 2008 18:02:23 +0400
Subject: mailman problems?
Message-ID: <48BD476F.4090505@gmail.com>

What seems to be the problems with mailing lists? As for me I get emails 
with a huge lag, still able to see them on web as they come (without any 
lag)


From alexd4 at inbox.lv  Tue Sep  2 08:59:55 2008
From: alexd4 at inbox.lv (Alexander Dorofeyev)
Date: Tue, 02 Sep 2008 16:59:55 +0300
Subject: [PATCH 3/5] wined3d: Make the condition to enter p8 conversion
	shader path more strict.
In-Reply-To: <d658b69e0809011224r7ff1c7at70775ef78358fd27@mail.gmail.com>
References: <48BAA531.6020206@inbox.lv>
	<d658b69e0809011224r7ff1c7at70775ef78358fd27@mail.gmail.com>
Message-ID: <48BD46DB.1080902@inbox.lv>

Henri Verbeet wrote:
> 2008/8/31 Alexander Dorofeyev <alexd4 at inbox.lv>:
>> This prevents shader path from being entered for an offscreen surface when
>> there is p8 render target and fixes failures in ddraw visual test (with
>> opengl rendering and RTL_READDRAW mode) and visual glitches in Red Alert.
>> ---
>>  dlls/wined3d/surface.c |    6 +++++-
>>  1 files changed, 5 insertions(+), 1 deletions(-)
>>
> This is probably ok for this specific case, but in general I think
> primary_render_target_is_p8() is somewhat broken. It seems that in
> most places where it's used it is assumed that "This" is the primary
> render target. In some cases that's actually always true, but in those
> cases primary_render_target_is_p8() wouldn't need to check if there's
> a primary render target, it could just use a surface passed in as
> parameter. In the other cases, you don't actually know the surface is
> the primary render target, and you'd need to verify that first, after
> which you've essentially got the first case again.

I think that it's not that primary_render_target_is_p8() is broken, but things 
sometimes get confusing because there are two kinds of cases. Sometimes, we only 
want to care that primary is p8 (this is used as kind of indicator we are in 8 
bit 2-D ddraw game and don't need to care about 3D requirements) and if so do 
something for all p8 surfaces. d3dfmt_p8_init_palette is one such place (index 
in alpha optimization).

But one case with different requirements seems to be the p8 conversion shader. I 
think as it is currently implemented, it is only meant to work for the p8 
primary itself. But, because primary_render_target_is_p8() check was used in 
d3dfmt_get_conv, p8 conversion shader-specific paths were sometimes hit when 
they shouldn't.


From bunglehead at gmail.com  Tue Sep  2 09:02:23 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Tue, 02 Sep 2008 18:02:23 +0400
Subject: mailman problems?
Message-ID: <48BD476F.4090505@gmail.com>

What seems to be the problems with mailing lists? As for me I get emails 
with a huge lag, still able to see them on web as they come (without any 
lag)


From bunglehead at gmail.com  Tue Sep  2 09:02:23 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Tue, 02 Sep 2008 18:02:23 +0400
Subject: mailman problems?
Message-ID: <48BD476F.4090505@gmail.com>

What seems to be the problems with mailing lists? As for me I get emails 
with a huge lag, still able to see them on web as they come (without any 
lag)


From jnewman at codeweavers.com  Tue Sep  2 09:43:41 2008
From: jnewman at codeweavers.com (Jeremy Newman)
Date: Tue, 02 Sep 2008 09:43:41 -0500
Subject: git still down...
In-Reply-To: <a71bd89a0808311946h72f1b327v6376bb62ba4693c4@mail.gmail.com>
References: <a71bd89a0808311946h72f1b327v6376bb62ba4693c4@mail.gmail.com>
Message-ID: <48BD511D.8070206@codeweavers.com>

Server crashed on Sunday.

-Newman

Dan Kegel wrote:
> $ git pull
> source.winehq.org[0: 209.46.25.134]: errno=Connection refused
> 
> :-(
> 
> 


From fgouget at free.fr  Tue Sep  2 10:05:54 2008
From: fgouget at free.fr (Francois Gouget)
Date: Tue, 2 Sep 2008 17:05:54 +0200 (CEST)
Subject: Adding Flawfinder to Patchwatcher
In-Reply-To: <alpine.DEB.1.10.0809021406440.12125@amboise.dolphin>
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
	<200809011903.22347.hselasky@c2i.net>
	<b6bb06270809011239m23483eccr3129e741011a4035@mail.gmail.com>
	<alpine.DEB.1.10.0809021406440.12125@amboise.dolphin>
Message-ID: <alpine.DEB.1.10.0809021705150.21959@amboise.dolphin>

On Tue, 2 Sep 2008, Francois Gouget wrote:

> On Mon, 1 Sep 2008, Austin English wrote:
> [...]
> > Someone else mentioned this as well. I didn't send multiple, and I
> > didn't receive any, though I have mailman prefs set to not send me a
> > copy when I'm author/cc.
> > 
> > If I need to notify Gmail, someone please let me know.
> 
> You're not the only one whose emails got sent multiple times. There are 
> a couple of other victims. I didn't check if Gmail was the common point.

I checked this time around and Gmail is the common denominator. But not 
all Gmail emails are impacted.


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
  Nouvelle version : les anciens bogues ont ?t? remplac?s par de nouveaux.

From bunglehead at gmail.com  Tue Sep  2 09:02:23 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Tue, 02 Sep 2008 18:02:23 +0400
Subject: mailman problems?
Message-ID: <48BD476F.4090505@gmail.com>

What seems to be the problems with mailing lists? As for me I get emails 
with a huge lag, still able to see them on web as they come (without any 
lag)


From austinenglish at gmail.com  Tue Sep  2 10:08:37 2008
From: austinenglish at gmail.com (Austin English)
Date: Tue, 2 Sep 2008 10:08:37 -0500
Subject: wine-devel Digest, Vol 37, Issue 111
In-Reply-To: <2390B3DC-8483-49A7-9DA7-B48690C2CFC0@sanityinternet.com>
References: <mailman.4114.1220173962.4616.wine-devel@winehq.org>
	<2390B3DC-8483-49A7-9DA7-B48690C2CFC0@sanityinternet.com>
Message-ID: <b6bb06270809020808ge5ed74bs9055b08e125ca2a4@mail.gmail.com>

On Mon, Sep 1, 2008 at 3:42 PM, Tim Schwartz <tim at sanityinternet.com> wrote:
> So Austin, have you had a chance to have a discussion with Dan about
> adding flawfinder to patchwatcher?
>
> On Aug 31, 2008, at 4:12 AM, wine-devel-request at winehq.org wrote:
>
>> Send wine-devel mailing list submissions to
>>    wine-devel at winehq.org
>>
>> To subscribe or unsubscribe via the World Wide Web, visit
>>    http://www.winehq.org/mailman/listinfo/wine-devel
>> or, via email, send a message with subject or body 'help' to
>>    wine-devel-request at winehq.org
>>
>> You can reach the person managing the list at
>>    wine-devel-owner at winehq.org
>>
>> When replying, please edit your Subject line so it is more specific
>> than "Re: Contents of wine-devel digest..."
>>
>>
>> Today's Topics:
>>
>>   1. Adding Flawfinder to Patchwatcher (Austin English)
>>
>>
>> ----------------------------------------------------------------------
>>
>> Message: 1
>> Date: Thu, 28 Aug 2008 15:59:20 -0500
>> From: "Austin English" <austinenglish at gmail.com>
>> Subject: Adding Flawfinder to Patchwatcher
>> To: "wine-devel at winehq.org" <wine-devel at winehq.org>
>> Message-ID:
>>    <b6bb06270808281359o1d1258f9m1af82eddbb763f32 at mail.gmail.com>
>> Content-Type: text/plain; charset="utf-8"
>>
>> I had a discussion with Dan about adding Flawfinder to the
>> patchwatcher. Currently, it's got some pretty generic errors, but it
>> seems able to test only patches, so we wouldn't be flooded with old
>> nonbugs (or we could set up a blacklist of safe errors). For
>> reference, I've run it on today's git. I'm attaching the full log, as
>> well as a condensed version of the most common errors (1 per error
>> type). Looks like a lot of chances for buffer overflows..
>>
>> Thoughts?
>>
>> -Austin
>> -------------- next part --------------
>> An embedded and charset-unspecified text was scrubbed...
>> Name: flaws.txt
>> Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080828/fca404cc/attachment-0044.txt
>> -------------- next part --------------
>> An embedded and charset-unspecified text was scrubbed...
>> Name: trimmed.txt
>> Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080828/fca404cc/attachment-0045.txt
>>
>> ------------------------------
>>
>> _______________________________________________
>> wine-devel mailing list  -  wine-devel at winehq.org
>> http://www.winehq.org/mailman/listinfo/wine-devel
>>
>>
>> End of wine-devel Digest, Vol 37, Issue 111
>> *******************************************
>
>
>

Seems Flawfinder is a bit too paranoid/dumb and flags every possible
error, even ones that are non issues. Most people didn't seem to like
the idea of integrating Flawfinder as a result. I've found a few other
static analysis tools, I'm going to try them over the next few days
and see if I can find one that gives a better balance.

-Austin


From austinenglish at gmail.com  Tue Sep  2 10:08:37 2008
From: austinenglish at gmail.com (Austin English)
Date: Tue, 2 Sep 2008 10:08:37 -0500
Subject: wine-devel Digest, Vol 37, Issue 111
In-Reply-To: <2390B3DC-8483-49A7-9DA7-B48690C2CFC0@sanityinternet.com>
References: <mailman.4114.1220173962.4616.wine-devel@winehq.org>
	<2390B3DC-8483-49A7-9DA7-B48690C2CFC0@sanityinternet.com>
Message-ID: <b6bb06270809020808ge5ed74bs9055b08e125ca2a4@mail.gmail.com>

On Mon, Sep 1, 2008 at 3:42 PM, Tim Schwartz <tim at sanityinternet.com> wrote:
> So Austin, have you had a chance to have a discussion with Dan about
> adding flawfinder to patchwatcher?
>
> On Aug 31, 2008, at 4:12 AM, wine-devel-request at winehq.org wrote:
>
>> Send wine-devel mailing list submissions to
>>    wine-devel at winehq.org
>>
>> To subscribe or unsubscribe via the World Wide Web, visit
>>    http://www.winehq.org/mailman/listinfo/wine-devel
>> or, via email, send a message with subject or body 'help' to
>>    wine-devel-request at winehq.org
>>
>> You can reach the person managing the list at
>>    wine-devel-owner at winehq.org
>>
>> When replying, please edit your Subject line so it is more specific
>> than "Re: Contents of wine-devel digest..."
>>
>>
>> Today's Topics:
>>
>>   1. Adding Flawfinder to Patchwatcher (Austin English)
>>
>>
>> ----------------------------------------------------------------------
>>
>> Message: 1
>> Date: Thu, 28 Aug 2008 15:59:20 -0500
>> From: "Austin English" <austinenglish at gmail.com>
>> Subject: Adding Flawfinder to Patchwatcher
>> To: "wine-devel at winehq.org" <wine-devel at winehq.org>
>> Message-ID:
>>    <b6bb06270808281359o1d1258f9m1af82eddbb763f32 at mail.gmail.com>
>> Content-Type: text/plain; charset="utf-8"
>>
>> I had a discussion with Dan about adding Flawfinder to the
>> patchwatcher. Currently, it's got some pretty generic errors, but it
>> seems able to test only patches, so we wouldn't be flooded with old
>> nonbugs (or we could set up a blacklist of safe errors). For
>> reference, I've run it on today's git. I'm attaching the full log, as
>> well as a condensed version of the most common errors (1 per error
>> type). Looks like a lot of chances for buffer overflows..
>>
>> Thoughts?
>>
>> -Austin
>> -------------- next part --------------
>> An embedded and charset-unspecified text was scrubbed...
>> Name: flaws.txt
>> Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080828/fca404cc/attachment-0044.txt
>> -------------- next part --------------
>> An embedded and charset-unspecified text was scrubbed...
>> Name: trimmed.txt
>> Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080828/fca404cc/attachment-0045.txt
>>
>> ------------------------------
>>
>> _______________________________________________
>> wine-devel mailing list  -  wine-devel at winehq.org
>> http://www.winehq.org/mailman/listinfo/wine-devel
>>
>>
>> End of wine-devel Digest, Vol 37, Issue 111
>> *******************************************
>
>
>

Seems Flawfinder is a bit too paranoid/dumb and flags every possible
error, even ones that are non issues. Most people didn't seem to like
the idea of integrating Flawfinder as a result. I've found a few other
static analysis tools, I'm going to try them over the next few days
and see if I can find one that gives a better balance.

-Austin


From austinenglish at gmail.com  Tue Sep  2 10:08:37 2008
From: austinenglish at gmail.com (Austin English)
Date: Tue, 2 Sep 2008 10:08:37 -0500
Subject: wine-devel Digest, Vol 37, Issue 111
In-Reply-To: <2390B3DC-8483-49A7-9DA7-B48690C2CFC0@sanityinternet.com>
References: <mailman.4114.1220173962.4616.wine-devel@winehq.org>
	<2390B3DC-8483-49A7-9DA7-B48690C2CFC0@sanityinternet.com>
Message-ID: <b6bb06270809020808ge5ed74bs9055b08e125ca2a4@mail.gmail.com>

On Mon, Sep 1, 2008 at 3:42 PM, Tim Schwartz <tim at sanityinternet.com> wrote:
> So Austin, have you had a chance to have a discussion with Dan about
> adding flawfinder to patchwatcher?
>
> On Aug 31, 2008, at 4:12 AM, wine-devel-request at winehq.org wrote:
>
>> Send wine-devel mailing list submissions to
>>    wine-devel at winehq.org
>>
>> To subscribe or unsubscribe via the World Wide Web, visit
>>    http://www.winehq.org/mailman/listinfo/wine-devel
>> or, via email, send a message with subject or body 'help' to
>>    wine-devel-request at winehq.org
>>
>> You can reach the person managing the list at
>>    wine-devel-owner at winehq.org
>>
>> When replying, please edit your Subject line so it is more specific
>> than "Re: Contents of wine-devel digest..."
>>
>>
>> Today's Topics:
>>
>>   1. Adding Flawfinder to Patchwatcher (Austin English)
>>
>>
>> ----------------------------------------------------------------------
>>
>> Message: 1
>> Date: Thu, 28 Aug 2008 15:59:20 -0500
>> From: "Austin English" <austinenglish at gmail.com>
>> Subject: Adding Flawfinder to Patchwatcher
>> To: "wine-devel at winehq.org" <wine-devel at winehq.org>
>> Message-ID:
>>    <b6bb06270808281359o1d1258f9m1af82eddbb763f32 at mail.gmail.com>
>> Content-Type: text/plain; charset="utf-8"
>>
>> I had a discussion with Dan about adding Flawfinder to the
>> patchwatcher. Currently, it's got some pretty generic errors, but it
>> seems able to test only patches, so we wouldn't be flooded with old
>> nonbugs (or we could set up a blacklist of safe errors). For
>> reference, I've run it on today's git. I'm attaching the full log, as
>> well as a condensed version of the most common errors (1 per error
>> type). Looks like a lot of chances for buffer overflows..
>>
>> Thoughts?
>>
>> -Austin
>> -------------- next part --------------
>> An embedded and charset-unspecified text was scrubbed...
>> Name: flaws.txt
>> Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080828/fca404cc/attachment-0044.txt
>> -------------- next part --------------
>> An embedded and charset-unspecified text was scrubbed...
>> Name: trimmed.txt
>> Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080828/fca404cc/attachment-0045.txt
>>
>> ------------------------------
>>
>> _______________________________________________
>> wine-devel mailing list  -  wine-devel at winehq.org
>> http://www.winehq.org/mailman/listinfo/wine-devel
>>
>>
>> End of wine-devel Digest, Vol 37, Issue 111
>> *******************************************
>
>
>

Seems Flawfinder is a bit too paranoid/dumb and flags every possible
error, even ones that are non issues. Most people didn't seem to like
the idea of integrating Flawfinder as a result. I've found a few other
static analysis tools, I'm going to try them over the next few days
and see if I can find one that gives a better balance.

-Austin


From bunglehead at gmail.com  Tue Sep  2 09:02:23 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Tue, 02 Sep 2008 18:02:23 +0400
Subject: mailman problems?
Message-ID: <48BD476F.4090505@gmail.com>

What seems to be the problems with mailing lists? As for me I get emails 
with a huge lag, still able to see them on web as they come (without any 
lag)


From austinenglish at gmail.com  Tue Sep  2 10:08:37 2008
From: austinenglish at gmail.com (Austin English)
Date: Tue, 2 Sep 2008 10:08:37 -0500
Subject: wine-devel Digest, Vol 37, Issue 111
In-Reply-To: <2390B3DC-8483-49A7-9DA7-B48690C2CFC0@sanityinternet.com>
References: <mailman.4114.1220173962.4616.wine-devel@winehq.org>
	<2390B3DC-8483-49A7-9DA7-B48690C2CFC0@sanityinternet.com>
Message-ID: <b6bb06270809020808ge5ed74bs9055b08e125ca2a4@mail.gmail.com>

On Mon, Sep 1, 2008 at 3:42 PM, Tim Schwartz <tim at sanityinternet.com> wrote:
> So Austin, have you had a chance to have a discussion with Dan about
> adding flawfinder to patchwatcher?
>
> On Aug 31, 2008, at 4:12 AM, wine-devel-request at winehq.org wrote:
>
>> Send wine-devel mailing list submissions to
>>    wine-devel at winehq.org
>>
>> To subscribe or unsubscribe via the World Wide Web, visit
>>    http://www.winehq.org/mailman/listinfo/wine-devel
>> or, via email, send a message with subject or body 'help' to
>>    wine-devel-request at winehq.org
>>
>> You can reach the person managing the list at
>>    wine-devel-owner at winehq.org
>>
>> When replying, please edit your Subject line so it is more specific
>> than "Re: Contents of wine-devel digest..."
>>
>>
>> Today's Topics:
>>
>>   1. Adding Flawfinder to Patchwatcher (Austin English)
>>
>>
>> ----------------------------------------------------------------------
>>
>> Message: 1
>> Date: Thu, 28 Aug 2008 15:59:20 -0500
>> From: "Austin English" <austinenglish at gmail.com>
>> Subject: Adding Flawfinder to Patchwatcher
>> To: "wine-devel at winehq.org" <wine-devel at winehq.org>
>> Message-ID:
>>    <b6bb06270808281359o1d1258f9m1af82eddbb763f32 at mail.gmail.com>
>> Content-Type: text/plain; charset="utf-8"
>>
>> I had a discussion with Dan about adding Flawfinder to the
>> patchwatcher. Currently, it's got some pretty generic errors, but it
>> seems able to test only patches, so we wouldn't be flooded with old
>> nonbugs (or we could set up a blacklist of safe errors). For
>> reference, I've run it on today's git. I'm attaching the full log, as
>> well as a condensed version of the most common errors (1 per error
>> type). Looks like a lot of chances for buffer overflows..
>>
>> Thoughts?
>>
>> -Austin
>> -------------- next part --------------
>> An embedded and charset-unspecified text was scrubbed...
>> Name: flaws.txt
>> Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080828/fca404cc/attachment-0044.txt
>> -------------- next part --------------
>> An embedded and charset-unspecified text was scrubbed...
>> Name: trimmed.txt
>> Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080828/fca404cc/attachment-0045.txt
>>
>> ------------------------------
>>
>> _______________________________________________
>> wine-devel mailing list  -  wine-devel at winehq.org
>> http://www.winehq.org/mailman/listinfo/wine-devel
>>
>>
>> End of wine-devel Digest, Vol 37, Issue 111
>> *******************************************
>
>
>

Seems Flawfinder is a bit too paranoid/dumb and flags every possible
error, even ones that are non issues. Most people didn't seem to like
the idea of integrating Flawfinder as a result. I've found a few other
static analysis tools, I'm going to try them over the next few days
and see if I can find one that gives a better balance.

-Austin


From austinenglish at gmail.com  Tue Sep  2 11:08:55 2008
From: austinenglish at gmail.com (Austin English)
Date: Tue, 2 Sep 2008 11:08:55 -0500
Subject: Repeated messages (was Re: Adding Flawfinder to Patchwatcher)
In-Reply-To: <8739946.1220317399200.JavaMail.root@mswamui-thinleaf.atl.sa.earthlink.net>
References: <8739946.1220317399200.JavaMail.root@mswamui-thinleaf.atl.sa.earthlink.net>
Message-ID: <b6bb06270809020908p179ff4c3m5dc6c8ea3d586285@mail.gmail.com>

On Mon, Sep 1, 2008 at 8:03 PM, James Mckenzie
<jjmckenzie51 at earthlink.net> wrote:
> Erik:
>
> I am and at four MB a pop this is getting very expensive.  Fortunately, I have caught every one of them.  Maybe gmail is choking on the message or the 'finished' command comes too late to prevent the message from being sent again and again.
>
> James McKenzie
>
>
> -----Original Message-----
>>From: Erik de Castro Lopo <mle+win at mega-nerd.com>
>>Sent: Aug 31, 2008 4:38 PM
>>To: wine-devel at winehq.org
>>Subject: Repeated messages (was Re: Adding Flawfinder to Patchwatcher)
>>
>>Austin English wrote:
>>
>>> I had a discussion with Dan about adding Flawfinder to the
>>> patchwatcher.
>>
>>Is anyone else getting multiple copies of this message? I seem
>>to be getting one every 10-20 minutes.
>>
>>A quick scan of the email headers suggests that this is getting
>>resent from within the Gmail system. Each duplicate has a received
>>line like:
>>
>>   Received: by ey-out-1920.google.com with SMTP id 4so195432eyg.30
>>       for <wine-devel at winehq.org>; Thu, 28 Aug 2008 20:50:50 -0700 (PDT)
>>
>>with a unique SMTP id.
>>
>>Erik
>>--
>>-----------------------------------------------------------------
>>Erik de Castro Lopo
>>-----------------------------------------------------------------
>>Beware the Lollipop of Mediocrity.
>>Lick it once, and you suck forever.
>>
>>
>
>
>
>

I've attempted to contact Gmail to see if they can help with this.

-Austin


From zac at zacbrown.org  Tue Sep  2 11:30:29 2008
From: zac at zacbrown.org (Zac Brown)
Date: Tue, 02 Sep 2008 12:30:29 -0400
Subject: git still down...
In-Reply-To: <93AE7872AE81474AB9EDB4B2D33923A0@DMITRY>
References: <a71bd89a0808311946h72f1b327v6376bb62ba4693c4@mail.gmail.com>
	<93AE7872AE81474AB9EDB4B2D33923A0@DMITRY>
Message-ID: <48BD6A25.7050607@zacbrown.org>

Dmitry Timoshkov wrote:
> "Dan Kegel" <dank at kegel.com> wrote:
> 
>> $ git pull
>> source.winehq.org[0: 209.46.25.134]: errno=Connection refused
> 
> As a temporary solution I've replaced 'git://' protocol by 'http://'
> in .git/config.
> 

Should be up now anyway. I did a 'git fetch' this morning when AJ did commits or 
at least whenever he did commits (maybe yesterday's?).

-Zac


From hverbeet at gmail.com  Tue Sep  2 14:44:29 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Tue, 2 Sep 2008 21:44:29 +0200
Subject: [PATCH 4/5] wined3d: Remove glDrawBuffer calls in BltOverride.
In-Reply-To: <48BD4028.3090009@inbox.lv>
References: <48BAA53A.6010702@inbox.lv>
	<d658b69e0809011204n1fed1ff9nf4921020ac825382@mail.gmail.com>
	<48BD4028.3090009@inbox.lv>
Message-ID: <d658b69e0809021244j3e2ee420mbd6e21cbb970b5d9@mail.gmail.com>

2008/9/2 Alexander Dorofeyev <alexd4 at inbox.lv>:
> I don't think this is possible yet, the variable is also used for some
> window/screen and upside-down coordinate magic. I do suspect that the code doing
> so may need to be fixed or removed, because it looks inconsistent with code in
> e.g. ClearSurface (device.c) and doesn't seem to work correctly with windowed
> ddraw. But it probably must be done in another patch. Setting buffer for
> offscreen surface case could be removed though, as it doesn't do anything after
> removal of glDrawBuffer.
>
After this patch it would only be used to check if the surface is the
frontbuffer by comparing it to GL_FRONT. That doesn't make sense of
course.

if(buffer == GL_FRONT) {
should be replaced with
if ((IWineD3DSurface *)This == dstSwapchain->frontBuffer) {


From jnewman at codeweavers.com  Tue Sep  2 14:57:41 2008
From: jnewman at codeweavers.com (Jeremy Newman)
Date: Tue, 02 Sep 2008 14:57:41 -0500
Subject: mailman problems?
In-Reply-To: <48BD476F.4090505@gmail.com>
References: <48BD476F.4090505@gmail.com>
Message-ID: <48BD9AB5.3010804@codeweavers.com>

The server crash put mailman into a bad state. I have cleaned up the 
queue the best I can. Sorry for the duplicate posts going out, this was 
because on each of my attempts to fix the problem, mailman decided to 
resend the same messages.

Things should be clearing up as it finally gets through the rest of the 
backlog of messages.

-Newman

Nikolay Sivov wrote:
> What seems to be the problems with mailing lists? As for me I get emails 
> with a huge lag, still able to see them on web as they come (without any 
> lag)
> 
> 


From hverbeet at gmail.com  Tue Sep  2 14:59:29 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Tue, 2 Sep 2008 21:59:29 +0200
Subject: [PATCH 3/5] wined3d: Make the condition to enter p8 conversion
	shader path more strict.
In-Reply-To: <48BD46DB.1080902@inbox.lv>
References: <48BAA531.6020206@inbox.lv>
	<d658b69e0809011224r7ff1c7at70775ef78358fd27@mail.gmail.com>
	<48BD46DB.1080902@inbox.lv>
Message-ID: <d658b69e0809021259k43afc65cyadf78171b5436f50@mail.gmail.com>

2008/9/2 Alexander Dorofeyev <alexd4 at inbox.lv>:
> I think that it's not that primary_render_target_is_p8() is broken, but things
> sometimes get confusing because there are two kinds of cases. Sometimes, we only
> want to care that primary is p8 (this is used as kind of indicator we are in 8
> bit 2-D ddraw game and don't need to care about 3D requirements) and if so do
> something for all p8 surfaces. d3dfmt_p8_init_palette is one such place (index
> in alpha optimization).
>
I think that's a rather hacky way to detect that. If that's what the
function is supposed to do it should at the very least be named
differently (to prevent this kind of bugs), but you should probably
just check if the device is supposed to be 3D capable. I realize
that's not possible yet and would need to be built, but we'll probably
need this in other places as well.


From robertshearman at gmail.com  Tue Sep  2 17:03:09 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 2 Sep 2008 23:03:09 +0100
Subject: rpcrt4: Fix a failing test in Vista
In-Reply-To: <22821af30809012309g4d6c0aas2f0c9b60a7ad9c77@mail.gmail.com>
References: <22821af30809012309g4d6c0aas2f0c9b60a7ad9c77@mail.gmail.com>
Message-ID: <1096648c0809021503y611e21d8h44b0b71ccb50e06d@mail.gmail.com>

2008/9/2 James Hawkins <jhawkins at codeweavers.com>:
> Hi,
>
> Changelog:
> * Fix a failing test in Vista.
>
>  dlls/rpcrt4/tests/rpc.c    |    4 +++-
>  dlls/schannel/tests/main.c |    4 +++-
>  2 files changed, 6 insertions(+), 2 deletions(-)

It looks like another fix got mixed in with this commit. Please resend
without the schannel change.

-- 
Rob Shearman


From ken at codeweavers.com  Tue Sep  2 17:22:22 2008
From: ken at codeweavers.com (Ken Thomases)
Date: Tue, 2 Sep 2008 17:22:22 -0500
Subject: Proposal: switch Wine source tree to utf-8
In-Reply-To: <a71bd89a0808292110j4ded9f79lcddbfc67e89df292@mail.gmail.com>
References: <a71bd89a0808292110j4ded9f79lcddbfc67e89df292@mail.gmail.com>
Message-ID: <2A8A6DE5-E9E9-41B8-B98C-1651141D9963@codeweavers.com>

On Aug 29, 2008, at 11:10 PM, Dan Kegel wrote:

> Just how silly would it be for us to bite the bullet
> and set all source files to utf-8?
> We'd need to recode a bunch of files once,
> but after that, there'd be less confusion about
> how to view and edit various resource files.

One area that I know will be a problem is in winex11.drv/keyboard.c.   
The keyboard tables there are expected to be in the encoding that  
will be in effect at runtime.  That is, the bytes need to equal to  
what will be returned by XkbTranslateKeySym and X[mb]LookupString.

So, that file is a mishmash of multiple encodings.  Each table is in  
a different encoding, the one most likely to be used with that  
keyboard.  I guess we could replace non-ASCII characters in the  
tables with escaped hex codes, although that makes it more difficult  
to edit (at least for folks using the encoding in question).  We  
should probably comment each table with the encoding being used.

-Ken


From dank at kegel.com  Wed Sep  3 00:19:36 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 2 Sep 2008 22:19:36 -0700
Subject: Common conformance test errors
Message-ID: <a71bd89a0809022219k8dc511ak39e4b9f76fce55bb@mail.gmail.com>

The file
  http://kegel.com/wine/common-errors.txt
is a list of the most common errors in patchwatcher log files, computed
by running
  egrep ": Test failed: |: Test succeeded inside todo block:
|^make\[.*\]: \*\*\* \["| sort | uniq -c | sort -rn
on about 500 "make test" runs on a dual core box with a new nvidia card.

Here are the top ten:
2597 urlmon:protocol.c:1597: Test failed: Read failed: 8000000a (0 bytes)
    927 wininet:http.c:115: Test failed: unexpected status 51
(INTERNET_STATUS_CONNECTION_CLOSED)
    927 wininet:http.c:115: Test failed: unexpected status 50
(INTERNET_STATUS_CLOSING_CONNECTION)
    927 wininet:http.c:115: Test failed: unexpected status 11
(INTERNET_STATUS_NAME_RESOLVED)
    927 wininet:http.c:115: Test failed: unexpected status 10
(INTERNET_STATUS_RESOLVING_NAME)
    824 d3d9:device.c:829: Test failed: Screen height is 1024
    824 d3d9:device.c:828: Test failed: Screen width is 1280
    824 d3d9:device.c:782: Test failed: Screen height is 1024
    824 d3d9:device.c:781: Test failed: Screen width is 1280
    519 make[1]: *** [user32/tests/__test__] Error 2

So many of the tests fail always that I will probably have to start
running the baseline tests fifty times after each git change,
to catch all the ones that only happen a small percentage of the time.
- Dan


From paul.vriens.wine at gmail.com  Wed Sep  3 00:55:39 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 03 Sep 2008 07:55:39 +0200
Subject: msxml3: Fix two failing tests in win98
In-Reply-To: <22821af30809022055x269c3ab4w50137e7fcd497ad0@mail.gmail.com>
References: <22821af30809022055x269c3ab4w50137e7fcd497ad0@mail.gmail.com>
Message-ID: <48BE26DB.2000809@gmail.com>

James Hawkins wrote:
> Hi,
> 
> Changelog:
> * Fix two failing tests in win98.
> 
>  dlls/msxml3/tests/saxreader.c |    6 ++++--
>  1 files changed, 4 insertions(+), 2 deletions(-)
> 
> 
> 
> ------------------------------------------------------------------------
> 
> 
I don't think this is the correct fix. It all fails because of the CreateFileW 
slightly above that.

-- 
Cheers,

Paul.


From paul.vriens.wine at gmail.com  Wed Sep  3 01:05:13 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 03 Sep 2008 08:05:13 +0200
Subject: msxml3: Fix a failing test in win98
In-Reply-To: <22821af30809022055h6e05311cq6139c173666dd6aa@mail.gmail.com>
References: <22821af30809022055h6e05311cq6139c173666dd6aa@mail.gmail.com>
Message-ID: <48BE2919.8080909@gmail.com>

James Hawkins wrote:
> Hi,
> 
> Changelog:
> * Fix a failing test in win98.
> 
>  dlls/msxml3/tests/xmlelem.c |    4 +++-
>  1 files changed, 3 insertions(+), 1 deletions(-)
> 
> 
> 
> ------------------------------------------------------------------------
> 
> 
Two things:

The comment says "Win98 returns ERROR_URL_NOT_FOUND" but the ok now has a 
different comment.

I don't think this fix is correct as the failure comes most likely from the 
GetFullPathNameW just above that. (This probably means the first change, commit 
558ae52cc464269457833cfb08879550a63a5d13, was wrong as well).

-- 
Cheers,

Paul.


From jhawkins at codeweavers.com  Wed Sep  3 01:48:31 2008
From: jhawkins at codeweavers.com (James Hawkins)
Date: Wed, 3 Sep 2008 01:48:31 -0500
Subject: msxml3: Fix a failing test in win98
In-Reply-To: <48BE2919.8080909@gmail.com>
References: <22821af30809022055h6e05311cq6139c173666dd6aa@mail.gmail.com>
	<48BE2919.8080909@gmail.com>
Message-ID: <22821af30809022348o2e5e3aa4ief068f2ce4920e05@mail.gmail.com>

On Wed, Sep 3, 2008 at 1:05 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> James Hawkins wrote:
>>
>> Hi,
>>
>> Changelog:
>> * Fix a failing test in win98.
>>
>>  dlls/msxml3/tests/xmlelem.c |    4 +++-
>>  1 files changed, 3 insertions(+), 1 deletions(-)
>>
>>
>>
>> ------------------------------------------------------------------------
>>
>>
> Two things:
>
> The comment says "Win98 returns ERROR_URL_NOT_FOUND" but the ok now has a
> different comment.
>
> I don't think this fix is correct as the failure comes most likely from the
> GetFullPathNameW just above that. (This probably means the first change,
> commit 558ae52cc464269457833cfb08879550a63a5d13, was wrong as well).
>

Feel free to work on this or the other one; I'm done for the night.

-- 
James Hawkins


From truiken at gmail.com  Wed Sep  3 03:19:53 2008
From: truiken at gmail.com (James Hawkins)
Date: Wed, 3 Sep 2008 03:19:53 -0500
Subject: [msxml3/tests 1/2] Use CreateFileA to please win98
In-Reply-To: <48BE42C5.8080608@gmail.com>
References: <48BE42C5.8080608@gmail.com>
Message-ID: <22821af30809030119s5cfa488bo86b075d474e74d41@mail.gmail.com>

On Wed, Sep 3, 2008 at 2:54 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> Hi,
>
> CreateFileW is not implemented on win98. This fixes the 2 remaining test
> failures for win98.
>
> (This is a replacement for the patch James sent).
>
> Changelog
>  Use CreateFileA to please win98
>

Just a nitpick:

+    static const CHAR testXmlA[] = "test.xml";

You don't really need this variable.  Same thing for the next patch.

-- 
James Hawkins


From paul.vriens.wine at gmail.com  Wed Sep  3 03:29:45 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 03 Sep 2008 10:29:45 +0200
Subject: [msxml3/tests 1/2] Use CreateFileA to please win98
In-Reply-To: <22821af30809030119s5cfa488bo86b075d474e74d41@mail.gmail.com>
References: <48BE42C5.8080608@gmail.com>
	<22821af30809030119s5cfa488bo86b075d474e74d41@mail.gmail.com>
Message-ID: <48BE4AF9.7020902@gmail.com>

James Hawkins wrote:
> On Wed, Sep 3, 2008 at 2:54 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>> Hi,
>>
>> CreateFileW is not implemented on win98. This fixes the 2 remaining test
>> failures for win98.
>>
>> (This is a replacement for the patch James sent).
>>
>> Changelog
>>  Use CreateFileA to please win98
>>
> 
> Just a nitpick:
> 
> +    static const CHAR testXmlA[] = "test.xml";
> 
> You don't really need this variable.  Same thing for the next patch.
> 
The reason for this one was just that we also have a W version of this string. I 
try to keep them together so it's more obvious that changing one also means 
changing the other.

For the other one, I think in general I prefer to have a definition whenever a 
string is used multiple times. But that's of course my personal preference.

-- 
Cheers,

Paul.


From julliard at winehq.org  Wed Sep  3 04:53:18 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 03 Sep 2008 11:53:18 +0200
Subject: [9/9] gdiplus: initial GdipFlattenPath implementation
In-Reply-To: <1220389723.28358.19.camel@debian.localdomain> (Nikolay Sivov's
	message of "Wed, 03 Sep 2008 01:08:43 +0400")
References: <1220389723.28358.19.camel@debian.localdomain>
Message-ID: <87vdxdk12p.fsf@wine.dyndns.org>

Nikolay Sivov <bunglehead at gmail.com> writes:

> +/* free all nodes including argument */
> +void free_path_list(path_list_node_t *node)
> +{
> +    path_list_node_t *n = node;
> +
> +    while(!n){
> +        GdipFree(node);
> +        node = n = n->next;
> +    }

This won't do what you want.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Sep  3 04:55:55 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 03 Sep 2008 11:55:55 +0200
Subject: ntdll: Fix a few failing tests in Vista
In-Reply-To: <22821af30809012306x4efaa3fftd65c979e1706be16@mail.gmail.com>
	(James Hawkins's message of "Tue, 2 Sep 2008 01:06:15 -0500")
References: <22821af30809012306x4efaa3fftd65c979e1706be16@mail.gmail.com>
Message-ID: <87r681k0yc.fsf@wine.dyndns.org>

"James Hawkins" <jhawkins at codeweavers.com> writes:

> @@ -325,13 +327,21 @@ static void read_file_test(void)
>      iosb.Information = 0xdeadbeef;
>      offset.QuadPart = strlen(text) + 2;
>      status = pNtReadFile( handle, event, apc, &apc_count, &iosb, buffer, 2, &offset, NULL );
> -    ok( status == STATUS_END_OF_FILE, "wrong status %x\n", status );
> -    ok( U(iosb).Status == 0xdeadbabe, "wrong status %x\n", U(iosb).Status );
> -    ok( iosb.Information == 0xdeadbeef, "wrong info %lu\n", iosb.Information );
> -    ok( !is_signaled( event ), "event is signaled\n" );
> +    ok( status == STATUS_END_OF_FILE ||
> +        status == STATUS_PENDING, /* Vista */
> +        "wrong status %x\n", status );
> +    ok( U(iosb).Status == 0xdeadbabe ||
> +        U(iosb).Status == STATUS_END_OF_FILE, /* Vista */
> +        "wrong status %x\n", U(iosb).Status );
> +    ok( iosb.Information == 0xdeadbeef ||
> +        iosb.Information == 0, /* Vista */
> +        "wrong info %lu\n", iosb.Information );
>      ok( !apc_count, "apc was called\n" );
>      SleepEx( 1, TRUE ); /* alertable sleep */
> -    ok( !apc_count, "apc was called\n" );
> +    if ( is_signaled( event ) )
> +        ok( apc_count == 1, "apc was not called\n" );
> +    else
> +        ok( !apc_count, "apc was called\n" );

The results are not independent, they should all depend on whether we
got STATUS_PENDING or not.

-- 
Alexandre Julliard
julliard at winehq.org


From bunglehead at gmail.com  Wed Sep  3 05:11:57 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Wed, 03 Sep 2008 14:11:57 +0400
Subject: [9/9] gdiplus: initial GdipFlattenPath implementation
In-Reply-To: <87vdxdk12p.fsf@wine.dyndns.org>
References: <1220389723.28358.19.camel@debian.localdomain>
	<87vdxdk12p.fsf@wine.dyndns.org>
Message-ID: <48BE62ED.9060607@gmail.com>

Alexandre Julliard wrote:
> Nikolay Sivov <bunglehead at gmail.com> writes:
>
>   
>> +/* free all nodes including argument */
>> +void free_path_list(path_list_node_t *node)
>> +{
>> +    path_list_node_t *n = node;
>> +
>> +    while(!n){
>> +        GdipFree(node);
>> +        node = n = n->next;
>> +    }
>>     
>
> This won't do what you want.
Actually doesn't free anything. Thanks, will be corrected.


From wes.parish at paradise.net.nz  Wed Sep  3 05:36:48 2008
From: wes.parish at paradise.net.nz (Wesley Parish)
Date: Wed, 03 Sep 2008 22:36:48 +1200
Subject: Repeated messages (was Re: Adding Flawfinder to Patchwatcher)
In-Reply-To: <b6bb06270809011233h6d7008f5x8a6a7ce7ca332c63@mail.gmail.com>
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
	<20080901093800.3165f14f.mle+win@mega-nerd.com>
	<b6bb06270809011233h6d7008f5x8a6a7ce7ca332c63@mail.gmail.com>
Message-ID: <200809032236.49757.wes.parish@paradise.net.nz>

On Tuesday 02 September 2008 07:33, Austin English wrote:
> On Sun, Aug 31, 2008 at 6:38 PM, Erik de Castro Lopo
>
> <mle+win at mega-nerd.com> wrote:
> > Austin English wrote:
> >> I had a discussion with Dan about adding Flawfinder to the
> >> patchwatcher.
> >
> > Is anyone else getting multiple copies of this message? I seem
> > to be getting one every 10-20 minutes.
> >
> > A quick scan of the email headers suggests that this is getting
> > resent from within the Gmail system. Each duplicate has a received
> > line like:
> >
> >   Received: by ey-out-1920.google.com with SMTP id 4so195432eyg.30
> >        for <wine-devel at winehq.org>; Thu, 28 Aug 2008 20:50:50 -0700 (PDT)
> >
> > with a unique SMTP id.
> >
> > Erik
> > --
> > -----------------------------------------------------------------
> > Erik de Castro Lopo
> > -----------------------------------------------------------------
> > Beware the Lollipop of Mediocrity.
> > Lick it once, and you suck forever.
>
> I received a few messages telling me it didn't go through, then after
> a few days it did. I didn't resend it at all though...
>
> -Austin

Which probably accounts for it arriving en masse.  And if that behaviour was 
repeated once or or more ...

Wesley Parish

-- 
Clinersterton beademung, with all of love - RIP James Blish
-----
Gaul is quartered into three halves.  Things which are 
impossible are equal to each other.  Guerrilla 
warfare means up to their monkey tricks. 
Extracts from "Schoolboy Howlers" - the collective wisdom 
of the foolish.
-----
Mau e ki, he aha te mea nui?
You ask, what is the most important thing?
Maku e ki, he tangata, he tangata, he tangata.
I reply, it is people, it is people, it is people.


From robertshearman at gmail.com  Wed Sep  3 06:51:36 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 3 Sep 2008 12:51:36 +0100
Subject: oleaut32: Add support for loading typelibs from NE files.
In-Reply-To: <48be5c68.1f2d400a.1ca0.ffffa57cSMTPIN_ADDED@mx.google.com>
References: <48be5c68.1f2d400a.1ca0.ffffa57cSMTPIN_ADDED@mx.google.com>
Message-ID: <1096648c0809030451x6aab81fbjae514f506a9d5196@mail.gmail.com>

2008/9/2 Huw Davies <huw at codeweavers.com>:
> --- a/dlls/oleaut32/typelib.c
> +++ b/dlls/oleaut32/typelib.c
> @@ -64,6 +64,7 @@
>  #include "winnls.h"
>  #include "winreg.h"
>  #include "winuser.h"
> +#include "wine/winbase16.h"
>
>  #include "wine/unicode.h"
>  #include "objbase.h"

I don't think we should be including a 16-bit header file and using
16-bit functions in a 32-bit source file if we can avoid it. In this
case, we can avoid it.

-- 
Rob Shearman


From hverbeet at gmail.com  Wed Sep  3 07:25:08 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Wed, 3 Sep 2008 14:25:08 +0200
Subject: wined3d: fix a memory leak and a performance regression in
	gen_arbfp_ffp_shader
In-Reply-To: <f5d9424f0809030505k388cead4u253774665edb50c1@mail.gmail.com>
References: <f5d9424f0809030505k388cead4u253774665edb50c1@mail.gmail.com>
Message-ID: <d658b69e0809030525y86fb7ado7893f52bb8f86ca5@mail.gmail.com>

2008/9/3 Jeff Zaroyko <jeffzaroyko at gmail.com>:
> Please ignore the previous patch sent two days ago, this one fixes a
> performance regression as well as removing the memory leak.
>
> -Jeff
>
Do you have some kind of benchmark data for this change? I don't think
allocating relatively large buffers like that on the stack is a good
idea. If it does make a lot of difference in terms of performance, it
probably makes sense to allocate the buffer in arbfp_alloc() instead
and just reuse it. In that case it probably also makes sense to do
that for the ARB and GLSL shader backends as well.


From jeffzaroyko at gmail.com  Wed Sep  3 08:06:17 2008
From: jeffzaroyko at gmail.com (Jeff Zaroyko)
Date: Wed, 3 Sep 2008 23:06:17 +1000
Subject: wined3d: fix a memory leak and a performance regression in
	gen_arbfp_ffp_shader
In-Reply-To: <d658b69e0809030525y86fb7ado7893f52bb8f86ca5@mail.gmail.com>
References: <f5d9424f0809030505k388cead4u253774665edb50c1@mail.gmail.com>
	<d658b69e0809030525y86fb7ado7893f52bb8f86ca5@mail.gmail.com>
Message-ID: <f5d9424f0809030606h3cdc22dcu542727ddae7d26c3@mail.gmail.com>

On Wed, Sep 3, 2008 at 10:25 PM, Henri Verbeet <hverbeet at gmail.com> wrote:
> 2008/9/3 Jeff Zaroyko <jeffzaroyko at gmail.com>:
>> Please ignore the previous patch sent two days ago, this one fixes a
>> performance regression as well as removing the memory leak.
>>
>> -Jeff
>>
> Do you have some kind of benchmark data for this change? I don't think
> allocating relatively large buffers like that on the stack is a good
> idea. If it does make a lot of difference in terms of performance, it
> probably makes sense to allocate the buffer in arbfp_alloc() instead
> and just reuse it. In that case it probably also makes sense to do
> that for the ARB and GLSL shader backends as well.
>
>
>

None as such since difference in performance is so large.  I can say
that without a doubt using HeapAlloc and HeapFree in this function
causes noticeable delays such that in Battlefield 1942 the framerate
is falls so much that it is unplayable, changing the allocation leaves
no trace of this.


From alexd4 at inbox.lv  Wed Sep  3 08:08:39 2008
From: alexd4 at inbox.lv (Alexander Dorofeyev)
Date: Wed, 03 Sep 2008 16:08:39 +0300
Subject: [PATCH 4/5] wined3d: Remove glDrawBuffer calls in BltOverride.
In-Reply-To: <d658b69e0809021244j3e2ee420mbd6e21cbb970b5d9@mail.gmail.com>
References: <48BAA53A.6010702@inbox.lv>	
	<d658b69e0809011204n1fed1ff9nf4921020ac825382@mail.gmail.com>	
	<48BD4028.3090009@inbox.lv>
	<d658b69e0809021244j3e2ee420mbd6e21cbb970b5d9@mail.gmail.com>
Message-ID: <48BE8C57.7020903@inbox.lv>

Henri Verbeet wrote:
> 2008/9/2 Alexander Dorofeyev <alexd4 at inbox.lv>:
>> I don't think this is possible yet, the variable is also used for some
>> window/screen and upside-down coordinate magic. I do suspect that the code doing
>> so may need to be fixed or removed, because it looks inconsistent with code in
>> e.g. ClearSurface (device.c) and doesn't seem to work correctly with windowed
>> ddraw. But it probably must be done in another patch. Setting buffer for
>> offscreen surface case could be removed though, as it doesn't do anything after
>> removal of glDrawBuffer.
>>
> After this patch it would only be used to check if the surface is the
> frontbuffer by comparing it to GL_FRONT. That doesn't make sense of
> course.
> 
> if(buffer == GL_FRONT) {
> should be replaced with
> if ((IWineD3DSurface *)This == dstSwapchain->frontBuffer) {

The question is whether it truly has to be 'This == swapchain->frontBuffer' or
maybe simply 'if (swapchain)' or maybe something like
'!device->render_offscreen'. Not sure myself because it seems to be different in
BltOverride and other places. Some of this may be effectively equal, but for the
sake of less confusion IMO it's best to come up with a single working way and
use it, maybe even abstract in some ddraw-to-opengl-drawable coordinate
function. The problem I ran into is that I can't really get either ClearSurface
and BltOveride to work properly in a windowed ddraw testcase, so it's difficult
to say which way is the right one - possibly neither. That's why I would rather
not touch the code yet and fix it later in a different patch.



From julliard at winehq.org  Wed Sep  3 09:32:32 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 03 Sep 2008 16:32:32 +0200
Subject: wined3d: fix a memory leak and a performance regression in
	gen_arbfp_ffp_shader
In-Reply-To: <f5d9424f0809030606h3cdc22dcu542727ddae7d26c3@mail.gmail.com>
	(Jeff Zaroyko's message of "Wed, 3 Sep 2008 23:06:17 +1000")
References: <f5d9424f0809030505k388cead4u253774665edb50c1@mail.gmail.com>
	<d658b69e0809030525y86fb7ado7893f52bb8f86ca5@mail.gmail.com>
	<f5d9424f0809030606h3cdc22dcu542727ddae7d26c3@mail.gmail.com>
Message-ID: <87hc8xjo5b.fsf@wine.dyndns.org>

"Jeff Zaroyko" <jeffzaroyko at gmail.com> writes:

> None as such since difference in performance is so large.  I can say
> that without a doubt using HeapAlloc and HeapFree in this function
> causes noticeable delays such that in Battlefield 1942 the framerate
> is falls so much that it is unplayable, changing the allocation leaves
> no trace of this.

The first thing to try would be to get rid of the useless
HEAP_ZERO_MEMORY. If that's not enough you should profile it to find
where the bottleneck is.

-- 
Alexandre Julliard
julliard at winehq.org


From jacek at codeweavers.com  Wed Sep  3 09:37:48 2008
From: jacek at codeweavers.com (Jacek Caban)
Date: Wed, 03 Sep 2008 16:37:48 +0200
Subject: winhttp: Implement some more options.
In-Reply-To: <200809031634.21472.hans@codeweavers.com>
References: <200809031634.21472.hans@codeweavers.com>
Message-ID: <48BEA13C.7010508@codeweavers.com>

Hi Hans,

Hans Leidekker wrote:
>  
> +static BOOL session_set_option( object_header_t *hdr, DWORD option, LPVOID buffer, DWORD buflen )
> +{
> +    if (hdr->type != WINHTTP_HANDLE_TYPE_SESSION)
> +    {
> +        release_object( hdr );
> +        set_last_error( ERROR_WINHTTP_INCORRECT_HANDLE_TYPE );
> +        return FALSE;
> +    

release_object call looks wrong here. Also, if you use vtbls properly, 
you shouldn't need to check the type here.


Jacek


From hans at codeweavers.com  Wed Sep  3 09:59:28 2008
From: hans at codeweavers.com (Hans Leidekker)
Date: Wed, 3 Sep 2008 16:59:28 +0200
Subject: winhttp: Implement some more options.
In-Reply-To: <48BEA13C.7010508@codeweavers.com>
References: <200809031634.21472.hans@codeweavers.com>
	<48BEA13C.7010508@codeweavers.com>
Message-ID: <200809031659.28223.hans@codeweavers.com>

On Wednesday 03 September 2008 16:37:48 Jacek Caban wrote:

> > +static BOOL session_set_option( object_header_t *hdr, DWORD option, LPVOID buffer, DWORD buflen )
> > +{
> > +    if (hdr->type != WINHTTP_HANDLE_TYPE_SESSION)
> > +    {
> > +        release_object( hdr );
> > +        set_last_error( ERROR_WINHTTP_INCORRECT_HANDLE_TYPE );
> > +        return FALSE;
> > +    
> 
> release_object call looks wrong here. Also, if you use vtbls properly, 
> you shouldn't need to check the type here.

Thanks for catching that, I forgot to remove those blocks after
copy-pasting from an old patch. Revised patch sent.

 -Hans


From stefan at codeweavers.com  Wed Sep  3 11:21:34 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Wed, 3 Sep 2008 11:21:34 -0500
Subject: wined3d: fix a memory leak and a performance regression
	in	gen_arbfp_ffp_shader
In-Reply-To: <f5d9424f0809030606h3cdc22dcu542727ddae7d26c3@mail.gmail.com>
References: <f5d9424f0809030505k388cead4u253774665edb50c1@mail.gmail.com>	<d658b69e0809030525y86fb7ado7893f52bb8f86ca5@mail.gmail.com>
	<f5d9424f0809030606h3cdc22dcu542727ddae7d26c3@mail.gmail.com>
Message-ID: <02ef01c90de1$22225d90$666718b0$@com>

The real problems are that the ffp description structure still contains 3
uninitialized padding bytes, and that a HeapFree is missing. I'm going to
send patches for those




From wine-devel at kievinfo.com  Wed Sep  3 13:10:07 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Wed, 03 Sep 2008 12:10:07 -0600
Subject: [2/2] WineD3D: Make the srgb write flag bigger
In-Reply-To: <02fa01c90de2$eb469050$c1d3b0f0$@com>
References: <02fa01c90de2$eb469050$c1d3b0f0$@com>
Message-ID: <48BED2FF.3000305@kievinfo.com>

Stefan D?singer wrote:
> 
> ------------------------------------------------------------------------
> 
> Apparently gcc pads the structure size to DWORD alignment, which
> leaves 3 padding bytes which trigger differences in the memset.
> This fixes memory "leaks" in the fragment pipeline replacement
> without needing a memset

You should add a note to the source about this. Or someone might change the
size of this structure and the old bug will return.

However the best way to fix this problem would be to pack this structure:

#include <pshpack1.h>
struct ffp_settings {
...
};
#include <poppack.h>


Vitaliy.


From jdahlin at gmail.com  Wed Sep  3 14:34:13 2008
From: jdahlin at gmail.com (Johan Dahlin)
Date: Wed, 03 Sep 2008 21:34:13 +0200
Subject: wineboot: Basic RunOnceEx support
Message-ID: <48BEE6B5.3050808@gmail.com>

Just enough to make ie6 setup work.
I'm not receiving list mail, please CC me when replying.

Johan
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: wineboot-runonce.diff
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080903/58957db4/attachment.txt 

From austinenglish at gmail.com  Wed Sep  3 15:50:55 2008
From: austinenglish at gmail.com (Austin English)
Date: Wed, 3 Sep 2008 15:50:55 -0500
Subject: Recent msi/package tests failures
In-Reply-To: <48BCD2F5.2060809@gmail.com>
References: <3131247.1220317732061.JavaMail.root@mswamui-thinleaf.atl.sa.earthlink.net>
	<22821af30809011826g2e7be77bs7cb52cbb41bae156@mail.gmail.com>
	<48BCD2F5.2060809@gmail.com>
Message-ID: <b6bb06270809031350g442b4280v4a8a5c69eae98404@mail.gmail.com>

On Tue, Sep 2, 2008 at 12:45 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> James Hawkins wrote:
>> On Mon, Sep 1, 2008 at 8:08 PM, James Mckenzie
>> <jjmckenzie51 at earthlink.net> wrote:
>>> One file per run is all that should be created, IMHO.
>>
>> No, zero log files should be created.  This discussion is about
>> reducing the time it takes to run the tests, and any logging hinders
>> that effort.
>>
> OK, back to the initial discussion then.
>
> I did find that 'System Restore' was the cause of the slowdown on a lot of (at
> least) XP and Vista systems. Patches are being sent for that.
>
> Disabling logging as I suggested at first only helps to get rid of a few seconds
> from the total run time of these tests. The question remains however why some
> people have loads of log files in their temp directory and some don't.
>
> Do you think that for testing purposes we could add a check in the install tests
> that shows us the number of MSI logfiles in the temp directory before and
> afterwards? Or is it enough that several people already responded to my question
> about those logfiles?
>
> --
> Cheers,
>
> Paul.
>
>
>

FWIW, my work XP box times out on quite a few tests, but has system
restore disabled.

-Austin


From slindeneau at gmail.com  Wed Sep  3 16:24:29 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Thu, 4 Sep 2008 06:24:29 +0900
Subject: AcceptEx Patch set Sep.4
Message-ID: <81fd805b0809031424n1dedac6bn762edff3328c8551@mail.gmail.com>

I have tried to make this new patch set as clean as possible. The
previous set made numerous changes to many parts of the wineserver.
This set attempts to only make modifications to the sock.c functions.
Most of it is simply added functionality which is, in my opinion,
required to have a correct implementation of AcceptEx. As far as I
know, if wine is going to handle simultaneous connections the accept
functionality of AcceptEx must be built into the wineserver and not
into the dll's. If the dll's only use existing wineserver functions
and async commands then connections will be missed due to a race
condition between  the wineserver threads and the dll user threads. If
necessary I can provide proof of concept code for this.

I placed the conformance tests at the end of the patch series because
I do not know how to correctly use the todo_wine{} brackets in this
particular case, and I don't particularly feel like breaking down and
rewriting the conformance tests at this point in time.


From dank at kegel.com  Wed Sep  3 18:49:08 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 3 Sep 2008 16:49:08 -0700
Subject: intermittent ddraw/visual crash
Message-ID: <a71bd89a0809031649j68a0e12ap52036fec5f38f5e2@mail.gmail.com>

I'm seeing a crash occasionally in ddraw/tests/visual.c
on hardy, with a cheap PNY 8500 GT 512MB PCIe nvidia card.
(Hrm.  http://www.overclockersclub.com/reviews/8500gt/11.htm
has a review that says "stay away from this one",
maybe I shouldn't have gone for the cheapest card.)

Out of 200 runs, I saw two instances of the crash.
Anyone seen this before?


http://kegel.com/wine/patchwatcher/results/869.log
../../../tools/runtest -q -P wine -M ddraw.dll -T ../../.. -p
ddraw_test.exe.so visual.c && touch visual.ok
fixme:d3d:IWineD3DImpl_FillGLCaps OpenGL implementation supports 32
vertex samplers and 32 total samplers
fixme:d3d:IWineD3DImpl_FillGLCaps Expected vertex samplers +
MAX_TEXTURES(=8) > combined_samplers
fixme:win:EnumDisplayDevicesW ((null),0,0x32ed78,0x00000000), stub!
fixme:d3d:WineD3D_ChoosePixelFormat Add OpenGL context recreation
support to SetDepthStencilSurface
fixme:d3d_draw:drawPrimitive Using software emulation because manual
fog coordinates are provided
fixme:d3d:WineD3D_ChoosePixelFormat Add OpenGL context recreation
support to SetDepthStencilSurface
fixme:d3d:WineD3D_ChoosePixelFormat Add OpenGL context recreation
support to SetDepthStencilSurface
wine: Unhandled page fault on read access to 0x0000015c at address
0x611048ce (thread 0013), starting debugger...
Unhandled exception: page fault on read access to 0x0000015c in 32-bit
code (0x611048ce).
Register dump:
 CS:0073 SS:007b DS:007b ES:007b FS:0033 GS:003b
 EIP:611048ce ESP:0032e3e0 EBP:ffffffff EFLAGS:00010246(   - 00      -RIZP1)
 EAX:00000000 EBX:61ab2000 ECX:7c0a7ca0 EDX:00000000
 ESI:7c0a7ca0 EDI:7c0a7ca0
Stack dump:
0x0032e3e0:  61ab2000 61b57008 61ac7840 0001ffff
0x0032e3f0:  0032e428 601ea4f0 012c7160 7c07dcb8
0x0032e400:  00000001 00000024 00000002 7c07dcb0
0x0032e410:  601e2e24 beef0003 bfef1f69 602c5ff4
0x0032e420:  0032e5db 0032e448 601e409d 0032e46c
0x0032e430:  0032e59c 0032e5db 0032e58c 602c5ff4
Backtrace:
0x611048ce: movl	0x15c(%eax),%eax

http://kegel.com/wine/patchwatcher/results/857.log
../../../tools/runtest -q -P wine -M ddraw.dll -T ../../.. -p
ddraw_test.exe.so visual.c && touch visual.ok
fixme:d3d:IWineD3DImpl_FillGLCaps OpenGL implementation supports 32
vertex samplers and 32 total samplers
fixme:d3d:IWineD3DImpl_FillGLCaps Expected vertex samplers +
MAX_TEXTURES(=8) > combined_samplers
fixme:win:EnumDisplayDevicesW ((null),0,0x32ed78,0x00000000), stub!
fixme:d3d:WineD3D_ChoosePixelFormat Add OpenGL context recreation
support to SetDepthStencilSurface
wine: Unhandled page fault on read access to 0x0000015c at address
0x611048ce (thread 0013), starting debugger...
Unhandled exception: page fault on read access to 0x0000015c in 32-bit
code (0x611048ce).
Register dump:
 CS:0073 SS:007b DS:007b ES:007b FS:0033 GS:003b
 EIP:611048ce ESP:0032e500 EBP:ffffffff EFLAGS:00010246(   - 00      -RIZP1)
 EAX:00000000 EBX:61ab2000 ECX:7c0a6370 EDX:00000000
 ESI:7c0a6370 EDI:7c0a6370
Stack dump:
0x0032e500:  61ab2000 61b57008 61ac7840 0001ffff
0x0032e510:  0032e548 601ea4f0 012c7160 7c072010
0x0032e520:  00000001 00000024 7c097560 602a82f5
0x0032e530:  601e2e24 602c7190 bfef1ac2 602c5ff4
0x0032e540:  0032e6fb 0032e568 601e409d 0032e58c
0x0032e550:  0032e6bc 0032e6fb 0032e6ac 602c5ff4
Backtrace:
0x611048ce: movl	0x15c(%eax),%eax


From dmitry at codeweavers.com  Wed Sep  3 22:29:06 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 4 Sep 2008 12:29:06 +0900
Subject: wineboot: Basic RunOnceEx support
References: <48BEE6B5.3050808@gmail.com>
Message-ID: <24D79F736E414001BF01806C412DA403@DMITRY>

"Johan Dahlin" <jdahlin at gmail.com> wrote:

> +typedef HRESULT (*DLLREGISTER)          (void);
> +typedef HRESULT (*DLLINSTALL)           (BOOL,LPCWSTR);

Wrong calling convention.

> +static int RunDllRegisterServer(WCHAR* strDll)
> +{
> +    DLLREGISTER pfRegister = NULL;
> +    HRESULT hr;
> +    HMODULE DllHandle = NULL;
> +
> +    pfRegister = LoadProc(strDll, "DllRegisterServer", &DllHandle);
> +
> +    if (!pfRegister)
> +      return -1;

If you've decided to return an HRESULT then use something more appropriate
here instead of -1.

> +    hr = pfRegister();
> +
> +    if(DllHandle)
> +        FreeLibrary(DllHandle);

'if(DllHandle)' check above is redundant.

> +
> +    return hr;
> +}

If you are returning an HRESULT then use an appropriate return type for
the function.

> +static HRESULT RunDllInstall(WCHAR *strDll, BOOL install, WCHAR *command_line)
> +{
> +    DLLINSTALL pfInstall = NULL;
> +    HRESULT hr;
> +    HMODULE DllHandle = NULL;
> +
> +    pfInstall = LoadProc(strDll, "DllInstall", &DllHandle);
> +
> +    if (!pfInstall)
> +      return -1;

Same as above.

> +    hr = pfInstall(install, command_line);
> +
> +    if(DllHandle)
> +        FreeLibrary(DllHandle);

Same as above.

> +static BOOL ProcessRunOnceExKey(HKEY hkRunEntry)
> +{
> +    DWORD i;
> +    DWORD res;
> +    DWORD nMaxCmdLine=0, nMaxValue=0;
> +    WCHAR *szCmdLine=NULL;
> +    WCHAR *szValue=NULL;
> +    static const WCHAR KEY_DLLREGISTERSERVER[]={
> +      'D','l','l','R','e','g','i','s','t','e','r','S','e','r','v','e','r',0};
> +    static const WCHAR KEY_DLLINSTALL[]={
> +      'D','l','l','I','n','s','t','a','l','l',0};
> +
> +    if( (res=RegQueryInfoKeyW( hkRunEntry, NULL, NULL, NULL, NULL, NULL, NULL, &i, &nMaxValue,
> +                    &nMaxCmdLine, NULL, NULL ))!=ERROR_SUCCESS )
> +        goto end;

Why not 'return' isntead of 'goto'?

> +    if( (szCmdLine=HeapAlloc(GetProcessHeap(),0,nMaxCmdLine))==NULL )
> +    {
> +        WINE_ERR("Couldn't allocate memory for the commands to be executed\n");
> +
> +        res=ERROR_NOT_ENOUGH_MEMORY;
> +        goto end;
> +    }

Same here.

> +    if( (szValue=HeapAlloc(GetProcessHeap(),0,(++nMaxValue)*sizeof(*szValue)))==NULL )
> +    {
> +        WINE_ERR("Couldn't allocate memory for the value names\n");
> +
> +        res=ERROR_NOT_ENOUGH_MEMORY;
> +        goto end;
> +    }
> +
> +    while( i>0 )
> +    {
> +        DWORD nValLength=nMaxValue, nDataLength=nMaxCmdLine;
> +        DWORD type;
> +        WCHAR *first, *second, *third; /* | separated parts of the entry */
> +        WCHAR pipe[] = {'|',0};
> +        i--;
> +
> +        if( (res=RegEnumValueW( hkRunEntry, i, szValue, &nValLength, 0, &type,
> +                                (LPBYTE)szCmdLine, &nDataLength ))!=ERROR_SUCCESS )
> +        {
> +            WINE_ERR("Couldn't read in value %d - %d\n", i, res );
> +            break;
> +        }
> +
> +        if (strlenW(szValue) == 0)
> +        {
> +          WINE_TRACE("Processing %s entries\n", wine_dbgstr_w( szCmdLine ));
> +          continue;
> +        }
> +
> +        if( type!=REG_SZ )
> +        {
> +            WINE_ERR("Incorrect type of value #%d (%d)\n", i, type );
> +            continue;
> +        }
> +
> +        if( (res=RegDeleteValueW( hkRunEntry, szValue ))!=ERROR_SUCCESS )
> +        {
> +            WINE_ERR("Couldn't delete value - %d, %d. Running command anyways.\n", i, res );
> +        }
> +
> +        if ((first = strstrW(szCmdLine, pipe)) != NULL)
> +        {
> +          WCHAR *value = first + strlenW(pipe);
> +          HRESULT retval;
> +          if (strncmpW(value, KEY_DLLREGISTERSERVER,
> +                       strlenW(KEY_DLLREGISTERSERVER)) == 0)
> +            {
> +              DWORD len;
> +              WCHAR *cmd;
> +              len = strlenW(szCmdLine) - strlenW(first) + strlenW(pipe);
> +              cmd = HeapAlloc(GetProcessHeap(), 0, sizeof(WCHAR) * len);
> +              if (cmd == NULL)
> +                goto end;
> +
> +              if (lstrcpynW(cmd, szCmdLine, len))
> +              {
> +                  WINE_TRACE("DllRegisterServer %s\n", wine_dbgstr_w(cmd));
> +                  retval = RunDllRegisterServer(cmd);
> +                  WINE_TRACE("DllRegisterServer returned %d\n", retval);
> +              }
> +              HeapFree(GetProcessHeap(), 0, cmd);
> +            }
> +          else if (strncmpW(value, KEY_DLLINSTALL,
> +                            strlenW(KEY_DLLINSTALL)) == 0)
> +            {
> +              WCHAR *filename, *arg = NULL;
> +              WCHAR install = FALSE;
> +              HRESULT retval;
> +              DWORD filenameLength, argLength;
> +
> +              /* filename|DllInstall
> +               * filename|DllInstall|i,arg
> +               * filename|DllInstall|I,arg
> +               * FIXME: is i=FALSE,I=TRUE or the reverse?
> +               */
> +              second = strstrW(first + strlenW(pipe), pipe);
> +              if (second == NULL)
> +                filenameLength = strlenW(szCmdLine) - strlenW(first) + strlenW(pipe);
> +              else if ((third = strstrW(second, pipe)) != NULL)
> +                {
> +                  filenameLength = strlenW(szCmdLine) - strlenW(first) + strlenW(pipe);
> +                  install = *(second + strlenW(pipe));
> +
> +                  argLength = strlenW(third) - strlenW(pipe) - 1;
> +                  filename = HeapAlloc(GetProcessHeap(), 0, sizeof(WCHAR) * argLength);
> +                  lstrcpynW(arg, third + strlenW(pipe) + 2, argLength);
> +                }
> +
> +              filename = HeapAlloc(GetProcessHeap(), 0, sizeof(WCHAR) * filenameLength);
> +              lstrcpynW(filename, szCmdLine, filenameLength);
> +
> +              WINE_TRACE("DllInstall (%s, %d, %s)\n",
> +                         wine_dbgstr_w(filename),
> +                         install == 'i',
> +                         wine_dbgstr_w(arg));
> +              retval = RunDllInstall(filename, install == 'i', arg);
> +              WINE_TRACE("DllInstall returned %d\n", retval);
> +              HeapFree( GetProcessHeap(), 0, filename );
> +              if (arg)
> +                HeapFree( GetProcessHeap(), 0, arg );
> +            }
> +        } else {
> +          if( (res=runCmd(szCmdLine, NULL, TRUE, FALSE ))==INVALID_RUNCMD_RETURN )
> +          {
> +              WINE_ERR("Error running cmd #%d (%d)\n", i, GetLastError() );
> +          }
> +        }
> +    }
> + end:
> +    HeapFree( GetProcessHeap(), 0, szValue );
> +    HeapFree( GetProcessHeap(), 0, szCmdLine );
> +
> +    return res;
> +}

You are returning 'res' while using 'retval' in some code paths.

-- 
Dmitry.


From stefan at codeweavers.com  Wed Sep  3 22:34:10 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Wed, 3 Sep 2008 22:34:10 -0500
Subject: [2/2] WineD3D: Make the srgb write flag bigger
In-Reply-To: <48BED2FF.3000305@kievinfo.com>
References: <02fa01c90de2$eb469050$c1d3b0f0$@com>
	<48BED2FF.3000305@kievinfo.com>
Message-ID: <00a901c90e3f$18a0ce10$49e26a30$@com>

> You should add a note to the source about this. Or someone might change
> the
> size of this structure and the old bug will return.
That's probably a good idea
 
> However the best way to fix this problem would be to pack this
> structure:
> 
> #include <pshpack1.h>
> struct ffp_settings {
> ...
> };
> #include <poppack.h>
Is this portable?




From wine-devel at kievinfo.com  Thu Sep  4 00:16:25 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Wed, 03 Sep 2008 23:16:25 -0600
Subject: [2/2] WineD3D: Make the srgb write flag bigger
In-Reply-To: <00a901c90e3f$18a0ce10$49e26a30$@com>
References: <02fa01c90de2$eb469050$c1d3b0f0$@com>
	<48BED2FF.3000305@kievinfo.com>
	<00a901c90e3f$18a0ce10$49e26a30$@com>
Message-ID: <48BF6F29.8010006@kievinfo.com>

Stefan D?singer wrote:
>> You should add a note to the source about this. Or someone might change
>> the
>> size of this structure and the old bug will return.
> That's probably a good idea
>  
>> However the best way to fix this problem would be to pack this
>> structure:
>>
>> #include <pshpack1.h>
>> struct ffp_settings {
>> ...
>> };
>> #include <poppack.h>
> Is this portable?
> 
> 
That's Wine's header files. And AFAIK they should work on all platforms.
If anything, number of structures in windows headers are packed...

Vitaliy.


From hverbeet at gmail.com  Thu Sep  4 00:41:13 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Thu, 4 Sep 2008 07:41:13 +0200
Subject: intermittent ddraw/visual crash
In-Reply-To: <a71bd89a0809031649j68a0e12ap52036fec5f38f5e2@mail.gmail.com>
References: <a71bd89a0809031649j68a0e12ap52036fec5f38f5e2@mail.gmail.com>
Message-ID: <d658b69e0809032241w43ffb3f8y73517965ebecce83@mail.gmail.com>

2008/9/4 Dan Kegel <dank at kegel.com>:
> I'm seeing a crash occasionally in ddraw/tests/visual.c
> on hardy, with a cheap PNY 8500 GT 512MB PCIe nvidia card.
> (Hrm.  http://www.overclockersclub.com/reviews/8500gt/11.htm
> has a review that says "stay away from this one",
> maybe I shouldn't have gone for the cheapest card.)
>
> Out of 200 runs, I saw two instances of the crash.
> Anyone seen this before?
>
>
I'm afraid not :-/
Unfortunately I don't see much of a backtrace in the log either.


From paul.vriens.wine at gmail.com  Thu Sep  4 00:50:19 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 04 Sep 2008 07:50:19 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <b6bb06270809031350g442b4280v4a8a5c69eae98404@mail.gmail.com>
References: <3131247.1220317732061.JavaMail.root@mswamui-thinleaf.atl.sa.earthlink.net>	
	<22821af30809011826g2e7be77bs7cb52cbb41bae156@mail.gmail.com>	
	<48BCD2F5.2060809@gmail.com>
	<b6bb06270809031350g442b4280v4a8a5c69eae98404@mail.gmail.com>
Message-ID: <48BF771B.1010106@gmail.com>

Austin English wrote:
> On Tue, Sep 2, 2008 at 12:45 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>> James Hawkins wrote:
>>> On Mon, Sep 1, 2008 at 8:08 PM, James Mckenzie
>>> <jjmckenzie51 at earthlink.net> wrote:
>>>> One file per run is all that should be created, IMHO.
>>> No, zero log files should be created.  This discussion is about
>>> reducing the time it takes to run the tests, and any logging hinders
>>> that effort.
>>>
>> OK, back to the initial discussion then.
>>
>> I did find that 'System Restore' was the cause of the slowdown on a lot of (at
>> least) XP and Vista systems. Patches are being sent for that.
>>
>> Disabling logging as I suggested at first only helps to get rid of a few seconds
>> from the total run time of these tests. The question remains however why some
>> people have loads of log files in their temp directory and some don't.
>>
>> Do you think that for testing purposes we could add a check in the install tests
>> that shows us the number of MSI logfiles in the temp directory before and
>> afterwards? Or is it enough that several people already responded to my question
>> about those logfiles?
>>
>> --
>> Cheers,
>>
>> Paul.
>>
>>
>>
> 
> FWIW, my work XP box times out on quite a few tests, but has system
> restore disabled.
> 
> -Austin
> 
Yes, the same happens to other boxes when looking at test.winehq.org. 'System 
Restore' is definitely one of the causes but we are not there yet.

The other (non msi) timeouts are most likely not influenced by the system 
restore facility but have to be fixed as well (most noticeably dplayx).

-- 
Cheers,

Paul.


From paul.vriens.wine at gmail.com  Thu Sep  4 02:07:03 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 04 Sep 2008 09:07:03 +0200
Subject: Recent msi/package tests failures
In-Reply-To: <b6bb06270809031350g442b4280v4a8a5c69eae98404@mail.gmail.com>
References: <3131247.1220317732061.JavaMail.root@mswamui-thinleaf.atl.sa.earthlink.net>	
	<22821af30809011826g2e7be77bs7cb52cbb41bae156@mail.gmail.com>	
	<48BCD2F5.2060809@gmail.com>
	<b6bb06270809031350g442b4280v4a8a5c69eae98404@mail.gmail.com>
Message-ID: <48BF8917.40600@gmail.com>

Austin English wrote:
> 
> FWIW, my work XP box times out on quite a few tests, but has system
> restore disabled.
> 
> -Austin
> 
Hi Austin,

Could you check something for me on your XP box?

According to 
http://test.winehq.org/data/5e1ac66b258415a33d96bb983c7e2ec3c7eea968/xp_aenglish-xp-sp3/kernel32:debugger.html, 
there are some leftovers from old tests in the HKLM\Software\Microsoft\Windows 
NT\CurrentVersion\AeDebug\debugger registry value. Is that correct?

Could you run 'drwtsn32 -i' from a command prompt before you run a next 
winetest? That will at least put that to a much saner value (the Windows 
out-of-the-box default).

-- 
Cheers,

Paul.


From kai.blin at gmail.com  Thu Sep  4 03:22:43 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Thu, 4 Sep 2008 10:22:43 +0200
Subject: Adding Flawfinder to Patchwatcher
In-Reply-To: <1096648c0808310603k2b5c2be9if93a9a5b77cdfd44@mail.gmail.com>
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
	<1096648c0808310603k2b5c2be9if93a9a5b77cdfd44@mail.gmail.com>
Message-ID: <200809041022.53659.kai.blin@gmail.com>

On Sunday 31 August 2008 15:03:38 Rob Shearman wrote:
> 2008/8/28 Austin English <austinenglish at gmail.com>:
> > I had a discussion with Dan about adding Flawfinder to the
> > patchwatcher. Currently, it's got some pretty generic errors, but it
> > seems able to test only patches, so we wouldn't be flooded with old
> > nonbugs (or we could set up a blacklist of safe errors). For
> > reference, I've run it on today's git. I'm attaching the full log, as
> > well as a condensed version of the most common errors (1 per error
> > type). Looks like a lot of chances for buffer overflows..
> >
> > Thoughts?
>
> Too many false positives to make it worth using. Just because you use
> strcpy, for example, it doesn't mean your program has a chance for a
> buffer overflow; it's using strcpy with a destination buffer that
> might not be large enough that causes buffer overflows.

Ack. Just checking for the part of Wine that I know best:

wine-git/dlls/secur32/dispatcher.c:104:  [4] (shell) execvp: This causes a new 
program to execute and is difficult to use safely. try using a library call 
that implements the same functionality if available.

Arguably correct, but no way to fix it. This is expected noise.

wine-git/dlls/secur32/dispatcher.c:119:  [4] (crypto) crypt: Function crypt is 
a poor one-way hashing algorithm; since it only accepts passwords of 8 
characters or less, and only a two-byte salt, it is excessively vulnerable to 
dictionary attacks given today's faster computing equipment. Use a different 
algorithm, such as SHA-1, with a larger non-repeating salt.

This one is just rubbish. For your convenience, line 119 of dispatcher.c looks 
like this:
        helper->crypt.ntlm.a4i = NULL;

Now, given that there's a struct in the helper struct called "crypt" and 
flawfinder triggers on that, there's a ton of repeated useless warnings, as 
flawfinder doesn't even notice this isn't a function call. What does that 
tool do? grep over the sources for a blacklist of strings?

wine-git/dlls/secur32/wrapper.c:568:  [4] (access) ImpersonateSecurityContext: 
If this call fails, the program could fail to drop heightened privileges. 
Make sure the return value is checked, and do not continue if a failure is 
reported.

Er, duh? It's nice to see the blacklist includes win32 function calls as well. 
Just a bit pointless for the implementation of this function. We'll probably 
see this for other "potentially dangerous" functions as well. This would make 
sense if and only if this warning only would trigger if the return value 
wasn't checked, not on a plain string match.

So while I agree that intelligent checking of patches is a nice thing to have, 
I'm not convinced flawfinder is intelligent enough.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080904/a9881ae5/attachment.pgp 

From julliard at winehq.org  Thu Sep  4 04:19:14 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 04 Sep 2008 11:19:14 +0200
Subject: [PATCH] annotate with allocation size attribute
In-Reply-To: <877i9sjmxr.fsf@totally-fudged-out-message-id> (Marcus Meissner's
	message of "Thu, 4 Sep 2008 08:21:00 +0200")
References: <877i9sjmxr.fsf@totally-fudged-out-message-id>
Message-ID: <871w00jmjx.fsf@wine.dyndns.org>

Marcus Meissner <marcus at jet.franken.de> writes:

> --- a/include/windef.h
> +++ b/include/windef.h
> @@ -49,6 +49,12 @@ extern "C" {
>  #define _WIN64
>  #endif
>  
> +#if ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 4)
> +#define ALLOC_SIZE(x) __attribute__((__alloc_size__(x)))
> +#else
> +#define ALLOC_SIZE(x)
> +#endif

Since this is an exported header you should use a name that is less
likely to conflict with user macros, something like __WINE_ALLOC_SIZE.

-- 
Alexandre Julliard
julliard at winehq.org


From jdahlin at gmail.com  Thu Sep  4 05:17:28 2008
From: jdahlin at gmail.com (Johan Dahlin)
Date: Thu, 04 Sep 2008 12:17:28 +0200
Subject: wineboot: Basic RunOnceEx support
In-Reply-To: <24D79F736E414001BF01806C412DA403@DMITRY>
References: <48BEE6B5.3050808@gmail.com>
	<24D79F736E414001BF01806C412DA403@DMITRY>
Message-ID: <48BFB5B8.9060208@gmail.com>

Dmitry Timoshkov wrote:
> "Johan Dahlin" <jdahlin at gmail.com> wrote:
> 
>> +typedef HRESULT (*DLLREGISTER)          (void);
>> +typedef HRESULT (*DLLINSTALL)           (BOOL,LPCWSTR);
> 
> Wrong calling convention.

I'm not sure I follow here. (This is all quite of new to me)
Are you telling me that I should add WINAPI after HRESULT?

>> +    hr = pfRegister();
>> +
>> +    if(DllHandle)
>> +        FreeLibrary(DllHandle);
> 
> 'if(DllHandle)' check above is redundant.

Will fix.

>> +
>> +    return hr;
>> +}
> 
> If you are returning an HRESULT then use an appropriate return type for
> the function.

I wanted to propagate the return value from the called function, but perhaps 
I should just refactor a bit and do the logging in there instead.

>> +static BOOL ProcessRunOnceExKey(HKEY hkRunEntry)
>> +{
[..]
> 
> Why not 'return' isntead of 'goto'?

To avoid duplicating a couple of HeapFree() calls.
Besides, I'm conforming to the style of the file, the same construct is used 
at other places in the same file.

> You are returning 'res' while using 'retval' in some code paths.

Well, they are used for different things. But sure, I'll try to avoid it and 
thus make it a bit clearer.

Johan


From fgouget at free.fr  Thu Sep  4 05:29:47 2008
From: fgouget at free.fr (Francois Gouget)
Date: Thu, 4 Sep 2008 12:29:47 +0200 (CEST)
Subject: ntdll/file: Add sub-second resolution to
 NtQueryInformationFile
In-Reply-To: <1219044632.5626.19.camel@p4.lan>
References: <1218992624.18015.22.camel@hermes2.karcher.local>
	<1219044632.5626.19.camel@p4.lan>
Message-ID: <alpine.DEB.1.10.0809041226570.8976@amboise.dolphin>

On Mon, 18 Aug 2008, Detlef Riekenberg wrote:

> On So, 2008-08-17 at 19:03 +0200, Michael Karcher wrote:
> > ---
> >  configure           |  303
> > +++++++++++++++++++++++++++++++++++++++++++++++++++
> 
> You should never include autogenerated code in a Patch.

How do you do that with Git?

When I modify configure.ac I do a local commit of configure.ac and 
configure, since they are a single changeset. But then when I use 
git-format-patch to prepare the email to wine-patches, both configure.ac 
and configure get included in that email.

So do you then edit the email that got prepared by git-format-patch? Do 
you do two local commits (seems like a pain and ugly)?

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                  Hiroshima '45 - Czernobyl '86 - Windows '95


From mstefani at redhat.com  Thu Sep  4 05:59:04 2008
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Thu, 04 Sep 2008 12:59:04 +0200
Subject: ntdll/file: Add sub-second resolution to NtQueryInformationFile
In-Reply-To: <alpine.DEB.1.10.0809041226570.8976@amboise.dolphin>
References: <1218992624.18015.22.camel@hermes2.karcher.local>	<1219044632.5626.19.camel@p4.lan>
	<alpine.DEB.1.10.0809041226570.8976@amboise.dolphin>
Message-ID: <48BFBF78.3010406@redhat.com>

Francois Gouget wrote:
> On Mon, 18 Aug 2008, Detlef Riekenberg wrote:
> 
>> On So, 2008-08-17 at 19:03 +0200, Michael Karcher wrote:
>>> ---
>>>  configure           |  303
>>> +++++++++++++++++++++++++++++++++++++++++++++++++++
>> You should never include autogenerated code in a Patch.
> 
> How do you do that with Git?
> 
> When I modify configure.ac I do a local commit of configure.ac and 
> configure, since they are a single changeset. But then when I use 
That is not really a single changeset. Not logically (one a real change
the other an autogenerated one) nor technically as both files can be
modified independently without breaking the compile of Wine.

> git-format-patch to prepare the email to wine-patches, both configure.ac 
> and configure get included in that email.
> 
> So do you then edit the email that got prepared by git-format-patch? Do 
> you do two local commits (seems like a pain and ugly)?
Two commits is easier and cleaner imho. You don't have to edit the patch
before sending and it's easier to rebase on upstream after Alexandre
committed your patches. The configure patch you can then just "git
rebase --skip". Hmm ... actually you can do the same with the combined
patch too. Though the configure patch can have a nice commit message
that makes it visually easy to see that you can safely skip the patch
without loosing anything. With the combined patch one would have to
check that really only the configure part conflicted (Alexandre might
have edited the configure.ac part).

bye
	michael


From julliard at winehq.org  Thu Sep  4 06:43:42 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 04 Sep 2008 13:43:42 +0200
Subject: [PATCH 3/6] shell32: add tests for SHAppBarMessage
In-Reply-To: <1220391753.28831.10.camel@vincent> (Vincent Povirk's message of
	"Tue, 02 Sep 2008 16:42:33 -0500")
References: <1220391753.28831.10.camel@vincent>
Message-ID: <87tzcwi1ap.fsf@wine.dyndns.org>

Vincent Povirk <vincent at codeweavers.com> writes:

> +/* process messages for 1 second */
> +static void do_events(void)
> +{
> +    MSG msg;
> +    UINT_PTR timerid;
> +    
> +    timerid = SetTimer(NULL, 0, 1000, NULL);
> +    while (GetMessageW(&msg, NULL, 0, 0) &&
> +        !(msg.message == WM_TIMER && msg.hwnd == NULL && msg.wParam == timerid))
> +    {
> +        TranslateMessage(&msg);
> +        DispatchMessageW(&msg);
> +    }
> +    
> +    KillTimer(NULL, timerid);

You shouldn't do it that way, it makes the test much slower than
necessary. If you really have to wait for async events you should use
something like flush_events() in the message tests, though in this case
it doesn't seem necessary at all since you don't check the resulting
messages.

-- 
Alexandre Julliard
julliard at winehq.org


From stefan at codeweavers.com  Thu Sep  4 09:16:00 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Thu, 4 Sep 2008 09:16:00 -0500
Subject: Fix for patchwatcher error in my 16 vertex shader type
In-Reply-To: <48BFDB4F.80602@aol.com>
References: <mailman.382.1220528057.25122.wine-patches@winehq.org>
	<48BFDB4F.80602@aol.com>
Message-ID: <005d01c90e98$c2304150$4690c3f0$@com>

Well, the patch is still wrong conceptually. See my description in the bug
report how to fix it properly



> -----Original Message-----
> From: wine-patches-bounces at winehq.org [mailto:wine-patches-
> bounces at winehq.org] On Behalf Of Chris Ahrendt
> Sent: Thursday, September 04, 2008 7:58 AM
> To: wine-patches at winehq.org
> Subject: Fix for patchwatcher error in my 16 vertex shader type
> 
> This fixes the patchwatcher failure in my last submission of this fix.
> This is not a total implementation of the 16 vertex shaders.
> It is an assumption that no type checking for the 2 other vertex shader
> calls are needed (short and int) and can be called with the current
> implementation of 4 parms. This seems to work without adding the two
> opengl calls.




From dank at kegel.com  Thu Sep  4 10:14:27 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 4 Sep 2008 08:14:27 -0700
Subject: [3/10 AcceptEx] Modifies accept_socket,
	allows it to take sock structures instead of handles
Message-ID: <a71bd89a0809040814j4c1e645dg439add1a8bd57fee@mail.gmail.com>

This patch seemed to cause wineserver to crash.  See

http://kegel.com/wine/patchwatcher/results
http://kegel.com/wine/patchwatcher/results/1033.log
http://kegel.com/wine/patchwatcher/results/1034.log


From huw at codeweavers.com  Thu Sep  4 10:39:31 2008
From: huw at codeweavers.com (Huw Davies)
Date: Thu, 4 Sep 2008 16:39:31 +0100
Subject: oleaut32: Add support for loading typelibs from NE files.
In-Reply-To: <1096648c0809030451x6aab81fbjae514f506a9d5196@mail.gmail.com>
References: <48be5c68.1f2d400a.1ca0.ffffa57cSMTPIN_ADDED@mx.google.com>
	<1096648c0809030451x6aab81fbjae514f506a9d5196@mail.gmail.com>
Message-ID: <20080904153930.GB17225@merlot.physics.ox.ac.uk>

On Wed, Sep 03, 2008 at 12:51:36PM +0100, Rob Shearman wrote:
> 2008/9/2 Huw Davies <huw at codeweavers.com>:
> > --- a/dlls/oleaut32/typelib.c
> > +++ b/dlls/oleaut32/typelib.c
> > @@ -64,6 +64,7 @@
> >  #include "winnls.h"
> >  #include "winreg.h"
> >  #include "winuser.h"
> > +#include "wine/winbase16.h"
> >
> >  #include "wine/unicode.h"
> >  #include "objbase.h"
> 
> I don't think we should be including a 16-bit header file and using
> 16-bit functions in a 32-bit source file if we can avoid it. In this
> case, we can avoid it.

Hi Rob,

How do you suggest we avoid it?

Cheers,
Huw.
-- 
Huw Davies
huw at codeweavers.com


From robertshearman at gmail.com  Thu Sep  4 11:37:45 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Thu, 4 Sep 2008 17:37:45 +0100
Subject: [PATCH] buffer overflow checking for string functions
In-Reply-To: <48bf9c3d.232d400a.1654.2ebcSMTPIN_ADDED@mx.google.com>
References: <48bf9c3d.232d400a.1654.2ebcSMTPIN_ADDED@mx.google.com>
Message-ID: <1096648c0809040937o4d55d076s1a936eada57fd6ef@mail.gmail.com>

2008/9/4 Marcus Meissner <marcus at jet.franken.de>:
> +#ifndef STATUS_STACK_BUFFER_OVERRUN
> +# define STATUS_STACK_BUFFER_OVERRUN      0xC0000409
> +#endif
> +#ifndef EH_NONCONTINUABLE
> +# define EH_NONCONTINUABLE 0x01
> +#endif

These defines are not used. Either use them or remove them, but I
would recommend removing them to keep the namespace clean.

-- 
Rob Shearman


From dank at kegel.com  Thu Sep  4 11:45:52 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 4 Sep 2008 09:45:52 -0700
Subject: Patchwatcher status
Message-ID: <a71bd89a0809040945x4a84cb0ax887153d4176cc454@mail.gmail.com>

Patchwatcher is almost recovered from its move
to the new machine.   I expect to turn email
notifications back on tomorrow.

The old machine could only just barely keep up with
the patch flow.  The new machine is two or so times
faster, so it's much, much better at catching up
when a patch flood hits it.

The new machine has a fairly modern nvidia card, so
more of the tests are actually run.

To-do list:

1. Figure out what card I need to buy to avoid these:
overlay.c:218: Tests skipped: Failed to initialize ddraw
overlay.c:89: Tests skipped: Failed to create an overlay - assuming
not supported
sysparams.c:2313: Tests skipped: Setting depth 24 failed(ret = -2)
visual.c:7453: Tests skipped: Card has unconditional pow2 support,
skipping conditional NP2 tests
visual.c:8456: Tests skipped: Only 1 simultaneous render target
supported, skipping MRT test
visual.c:8595: Tests skipped: D3DFMT_G16R16F textures not supported
visual.c:8595: Tests skipped: D3DFMT_G32R32F textures not supported
visual.c:9690: Tests skipped: Sanity check returned an incorrect
color(00552200), can't assure the correctness of the tests, skipping

2. Install corefonts to avoid these:
font.c:1163: Tests skipped: Arial is not installed
font.c:1473: Tests skipped: Arial is not installed
font.c:1653: Tests skipped: Arial Black is not installed
font.c:1653: Tests skipped: Symbol is not installed

3. Figure out what's causing these:
font.c:1879: Tests skipped: Font DejaVu Sans doesn't contain 'x',
skipping the test
font.c:1879: Tests skipped: Font Lohit Gujarati doesn't contain 'x',
skipping the test
font.c:1879: Tests skipped: Font Lohit Hindi doesn't contain 'x',
skipping the test
font.c:1879: Tests skipped: Font Lohit Punjabi doesn't contain 'x',
skipping the test
font.c:1879: Tests skipped: Font Lohit Tamil doesn't contain 'x',
skipping the test
font.c:1879: Tests skipped: Font Mallige doesn't contain 'x', skipping the test
font.c:1879: Tests skipped: Font OpenSymbol doesn't contain 'x',
skipping the test
font.c:1879: Tests skipped: Font Purisa doesn't contain 'x', skipping the test
font.c:1879: Tests skipped: Font UnBatang doesn't contain 'x', skipping the test
font.c:1879: Tests skipped: Font UnDotum doesn't contain 'x', skipping the test
font.c:1879: Tests skipped: Font Vemana2000 doesn't contain 'x',
skipping the test
font.c:1879: Tests skipped: Font utkal doesn't contain 'x', skipping the test

4. Get the mailing list parser to handle multiple overlapping patch series
so it doesn't get stuck when somebody sends a partial one.

5. Bring up my new refactored patchwatcher script.

6. Add multiple worker machines.

7. Bring up valgrind support.

8. Figure out why I have to blacklist the following tests:
comctl32:tooltips.c
ddraw:visual.c
dsound:ds3d.c
kernel32:thread.c
riched20:editor.c
user32:input.c
user32:msg.c
user32:win.c
wininet:http.c

9. Figure out why winmm_test.exe.so wave.c always hangs on my new test machine.


From dank at kegel.com  Thu Sep  4 11:45:52 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 4 Sep 2008 09:45:52 -0700
Subject: Patchwatcher status
Message-ID: <a71bd89a0809040945x4a84cb0ax887153d4176cc454@mail.gmail.com>

Patchwatcher is almost recovered from its move
to the new machine.   I expect to turn email
notifications back on tomorrow.

The old machine could only just barely keep up with
the patch flow.  The new machine is two or so times
faster, so it's much, much better at catching up
when a patch flood hits it.

The new machine has a fairly modern nvidia card, so
more of the tests are actually run.

To-do list:

1. Figure out what card I need to buy to avoid these:
overlay.c:218: Tests skipped: Failed to initialize ddraw
overlay.c:89: Tests skipped: Failed to create an overlay - assuming
not supported
sysparams.c:2313: Tests skipped: Setting depth 24 failed(ret = -2)
visual.c:7453: Tests skipped: Card has unconditional pow2 support,
skipping conditional NP2 tests
visual.c:8456: Tests skipped: Only 1 simultaneous render target
supported, skipping MRT test
visual.c:8595: Tests skipped: D3DFMT_G16R16F textures not supported
visual.c:8595: Tests skipped: D3DFMT_G32R32F textures not supported
visual.c:9690: Tests skipped: Sanity check returned an incorrect
color(00552200), can't assure the correctness of the tests, skipping

2. Install corefonts to avoid these:
font.c:1163: Tests skipped: Arial is not installed
font.c:1473: Tests skipped: Arial is not installed
font.c:1653: Tests skipped: Arial Black is not installed
font.c:1653: Tests skipped: Symbol is not installed

3. Figure out what's causing these:
font.c:1879: Tests skipped: Font DejaVu Sans doesn't contain 'x',
skipping the test
font.c:1879: Tests skipped: Font Lohit Gujarati doesn't contain 'x',
skipping the test
font.c:1879: Tests skipped: Font Lohit Hindi doesn't contain 'x',
skipping the test
font.c:1879: Tests skipped: Font Lohit Punjabi doesn't contain 'x',
skipping the test
font.c:1879: Tests skipped: Font Lohit Tamil doesn't contain 'x',
skipping the test
font.c:1879: Tests skipped: Font Mallige doesn't contain 'x', skipping the test
font.c:1879: Tests skipped: Font OpenSymbol doesn't contain 'x',
skipping the test
font.c:1879: Tests skipped: Font Purisa doesn't contain 'x', skipping the test
font.c:1879: Tests skipped: Font UnBatang doesn't contain 'x', skipping the test
font.c:1879: Tests skipped: Font UnDotum doesn't contain 'x', skipping the test
font.c:1879: Tests skipped: Font Vemana2000 doesn't contain 'x',
skipping the test
font.c:1879: Tests skipped: Font utkal doesn't contain 'x', skipping the test

4. Get the mailing list parser to handle multiple overlapping patch series
so it doesn't get stuck when somebody sends a partial one.

5. Bring up my new refactored patchwatcher script.

6. Add multiple worker machines.

7. Bring up valgrind support.

8. Figure out why I have to blacklist the following tests:
comctl32:tooltips.c
ddraw:visual.c
dsound:ds3d.c
kernel32:thread.c
riched20:editor.c
user32:input.c
user32:msg.c
user32:win.c
wininet:http.c

9. Figure out why winmm_test.exe.so wave.c always hangs on my new test machine.


From marcus at jet.franken.de  Thu Sep  4 11:59:11 2008
From: marcus at jet.franken.de (Marcus Meissner)
Date: Thu, 4 Sep 2008 18:59:11 +0200
Subject: [PATCH] buffer overflow checking for string functions
In-Reply-To: <1096648c0809040937o4d55d076s1a936eada57fd6ef@mail.gmail.com>
References: <48bf9c3d.232d400a.1654.2ebcSMTPIN_ADDED@mx.google.com>
	<1096648c0809040937o4d55d076s1a936eada57fd6ef@mail.gmail.com>
Message-ID: <20080904165911.GA4572@galeere>

On Thu, Sep 04, 2008 at 05:37:45PM +0100, Rob Shearman wrote:
> 2008/9/4 Marcus Meissner <marcus at jet.franken.de>:
> > +#ifndef STATUS_STACK_BUFFER_OVERRUN
> > +# define STATUS_STACK_BUFFER_OVERRUN      0xC0000409
> > +#endif
> > +#ifndef EH_NONCONTINUABLE
> > +# define EH_NONCONTINUABLE 0x01
> > +#endif
> 
> These defines are not used. Either use them or remove them, but I
> would recommend removing them to keep the namespace clean.

Thanks, did so, and will be in next submission.

Ciao, Marcus


From jeffzaroyko at gmail.com  Thu Sep  4 12:17:50 2008
From: jeffzaroyko at gmail.com (Jeff Zaroyko)
Date: Fri, 5 Sep 2008 03:17:50 +1000
Subject: Patchwatcher status
In-Reply-To: <a71bd89a0809040945x4a84cb0ax887153d4176cc454@mail.gmail.com>
References: <a71bd89a0809040945x4a84cb0ax887153d4176cc454@mail.gmail.com>
Message-ID: <f5d9424f0809041017x5bf85779re648705f2b579d49@mail.gmail.com>

On Fri, Sep 5, 2008 at 2:45 AM, Dan Kegel <dank at kegel.com> wrote:
> Patchwatcher is almost recovered from its move
> to the new machine.   I expect to turn email
> notifications back on tomorrow.
>
> The old machine could only just barely keep up with
> the patch flow.  The new machine is two or so times
> faster, so it's much, much better at catching up
> when a patch flood hits it.
>
> The new machine has a fairly modern nvidia card, so
> more of the tests are actually run.
>
> To-do list:
>
>
> 9. Figure out why winmm_test.exe.so wave.c always hangs on my new test machine.
>

I get this too, it should work after doing a `git diff 3995627de20^
dlls/winealsa.drv | patch -Rp1` and recompiling winealsa.drv

http://bugs.winehq.org/show_bug.cgi?id=15030


From paul.vriens.wine at gmail.com  Thu Sep  4 12:39:06 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 04 Sep 2008 19:39:06 +0200
Subject: Patchwatcher status
In-Reply-To: <a71bd89a0809040945x4a84cb0ax887153d4176cc454@mail.gmail.com>
References: <a71bd89a0809040945x4a84cb0ax887153d4176cc454@mail.gmail.com>
Message-ID: <48C01D3A.9060001@gmail.com>

Dan Kegel wrote:
> Patchwatcher is almost recovered from its move
> to the new machine.   I expect to turn email
> notifications back on tomorrow.
> 

Hi Dan,

Are there any changes compared to the email notification a week ago?

I've received several emails about a failure with my patches but it turns out 
they were marked as "ignore" or "Patch already in git.". I'm not sure I should 
be receiving email about them?

-- 
Cheers,

Paul.


From dank at kegel.com  Thu Sep  4 13:13:23 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 4 Sep 2008 11:13:23 -0700
Subject: Patchwatcher status
In-Reply-To: <48C01D3A.9060001@gmail.com>
References: <a71bd89a0809040945x4a84cb0ax887153d4176cc454@mail.gmail.com>
	<48C01D3A.9060001@gmail.com>
Message-ID: <a71bd89a0809041113s76c9e1a8j8995f9341eb65b55@mail.gmail.com>

On Thu, Sep 4, 2008 at 10:39 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> Are there any changes compared to the email notification a week ago?
>
> I've received several emails about a failure with my patches but it turns
> out they were marked as "ignore" or "Patch already in git.". I'm not sure I
> should be receiving email about them?

That needs fixing still.  (Forgot to put that on the to-do list.)


From dank at kegel.com  Thu Sep  4 13:34:43 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 4 Sep 2008 11:34:43 -0700
Subject: [PATCH] buffer overflow checking for string functions
Message-ID: <a71bd89a0809041134i48d59afcu7567e59b6f5b24b7@mail.gmail.com>

Hi Marcus,
http://kegel.com/wine/patchwatcher/results/ shows your patch seems
to have caused a test to fail.  The full log is at
http://kegel.com/wine/patchwatcher/results/1045.log
Can you check it and see if it's spurious, or if this is something
you need to fix up, or if it was a lurking bug?
Thanks,
Dan

p.s. the interesting bit is:


../../../tools/runtest -q -P wine -M msxml3.dll -T ../../.. -p
msxml3_test.exe.so saxreader.c && touch saxreader.ok
wine: Unhandled exception 0xc0000409 at address 0x60415fa0 (thread
0062), starting debugger...
Unhandled exception: 0xc0000409 in 32-bit code (0x60416016).
Register dump:
 CS:0073 SS:007b DS:007b ES:007b FS:0033 GS:003b
 EIP:60416016 ESP:0032f174 EBP:0032f1d8 EFLAGS:00000246(   - 00      - IZP1)
 EAX:603ffc99 EBX:60485d88 ECX:001230a8 EDX:00000000
 ESI:6053eda0 EDI:00000000
Stack dump:
0x0032f174:  610602b0 0032f3d8 6053d1c4 00000001
0x0032f184:  c0000409 00000001 00000000 60415fa0
0x0032f194:  00000000 6051f145 6053766a 6053d1c4
0x0032f1a4:  00000000 0032f1d8 605378ce 00000001
0x0032f1b4:  6053ae6f 0032f1e8 6053753c 6053add6
0x0032f1c4:  0000005c 0032f83c 6053d1c4 0032f1e8
Backtrace:
=>1 0x60416016 RaiseException+0x76(code=3221226505, flags=1, nbargs=0,
args=(nil)) [/home/patchwatcher/winezeug/patchwatcher/wine-continuous-workdir/active/dlls/kernel32/except.c:85]
in kernel32 (0x0032f1d8)
  2 0x60531cca test_saxstr+0xca(line=281, szStr=(nil), nStr=<register
EDI not in topmost frame>, szTest="")
[/home/patchwatcher/winezeug/patchwatcher/wine-continuous-workdir/active/dlls/msxml3/tests/../../../include/winnls.h:813]
in msxml3_test (0x0032fa28)
  3 0x605320e1 contentHandler_startElement+0x41(iface=0x6053da20,
pNamespaceUri=(nil), nNamespaceUri=0, pLocalName=0x1296f4,
nLocalName=11, pQName=0x12971c, nQName=11, pAttr=0x129744)
[/home/patchwatcher/winezeug/patchwatcher/wine-continuous-workdir/active/dlls/msxml3/tests/saxreader.c:282]
in msxml3_test (0x0032fa38)
  4 0x60d46d31 libxmlStartElementNS+0x781(ctx=0x124820,
localname="BankAccount", prefix=0x0, URI=0x0, nb_namespaces=0,
namespaces=(nil), nb_attributes=0, nb_defaulted=0, attributes=(nil))
[/home/patchwatcher/winezeug/patchwatcher/wine-continuous-workdir/active/dlls/msxml3/saxreader.c:1065]
in msxml3 (0x0032fad8)
  5 0x60da11b1 in libxml2.so.2 (+0x321b1) (0x0032fba8)
  6 0x60dab6e0 xmlParseElement+0xa0() in libxml2.so.2 (0x0032fc08)
  7 0x60dabd1b xmlParseDocument+0x2ab() in libxml2.so.2 (0x0032fc48)
  8 0x60d42181 internal_parseBuffer+0x131(This=<register EDI not in
topmost frame>, buffer="<", size=212, vbInterface=0)
[/home/patchwatcher/winezeug/patchwatcher/wine-continuous-workdir/active/dlls/msxml3/saxreader.c:1672]
in msxml3 (0x0032fc88)
  9 0x60d4261d internal_parse+0x2fd(This=0x124778,
varInput={n1={n2={vt=8, wReserved1=50, wReserved2=39728,
wReserved3=24626, n3={cVal=-20, uiVal=38380, ulVal=1218028,
intVal=1218028, uintVal=1218028, bVal=-20, iVal=-27156, lVal=1218028,
fltVal=0.000000,
dblVal=653372038842717154926174532926646266288408872873133910620420354698643182695076070838141136872900174886019390565640505833484670903847518474844878350132969472.000000,
boolVal=-27156, scode=1218028,
date=653372038842717154926174532926646266288408872873133910620420354698643182695076070838141136872900174886019390565640505833484670903847518474844878350132969472.000000,
bstrVal=0x1295ec, cyVal={={Lo=1218028, Hi=1615355272},
int64=6937898064662402540}, punkVal=0x1295ec, pdispVal=0x1295ec,
parray=0x1295ec, llVal=6937898064662402540,
ullVal=6937898064662402540, pcVal="<", puiVal=0x1295ec,
pulVal=0x1295ec, pintVal=0x1295ec, puintVal=0x1295ec, pbVal="<",
piVal=0x1295ec, plVal=0x1295ec, pfltVal=0x1295ec, pdblVal=0x1295ec,
pboolVal=0x1295ec, pscode=0x1295ec, pdate=0x1295ec, pbstrVal=0x1295ec,
pvarVal=0x1295ec, byref=0x1295ec, pcyVal=0x1295ec, pdecVal=0x1295ec,
ppunkVal=0x1295ec, ppdispVal=0x1295ec, pparray=0x1295ec,
pllVal=0x1295ec, pullVal=0x1295ec, brecVal={pvRecord=0x1295ec,
pRecInfo=0x60485d88}}}, decVal={wReserved=8, ={={scale='2', sign=0},
signscale=50}, Hi32=1613929264, ={={Lo32=1218028, Mid32=1615355272},
Lo64=6937898064662402540}}}}, vbInterface=0)
[/home/patchwatcher/winezeug/patchwatcher/wine-continuous-workdir/active/dlls/msxml3/saxreader.c:1835]
in msxml3 (0x0032fd48)
  10 0x605316f3 func_saxreader+0x3d3()
[/home/patchwatcher/winezeug/patchwatcher/wine-continuous-workdir/active/dlls/msxml3/tests/saxreader.c:523]
in msxml3_test (0x0032fdd8)
  11 0x605371ca run_test+0x14a(name="saxreader.c")
[/home/patchwatcher/winezeug/patchwatcher/wine-continuous-workdir/active/dlls/msxml3/tests/../../../include/wine/test.h:454]
in msxml3_test (0x0032fe18)
  12 0x60537a29 main+0x149(argc=<register ECX not in topmost frame>,
argv=0x1103d8) [/home/patchwatcher/winezeug/patchwatcher/wine-continuous-workdir/active/dlls/msxml3/tests/../../../include/wine/test.h:503]
in msxml3_test (0x0032fed8)
  13 0x60537b9b __wine_spec_exe_entry+0x5b(peb=0x7ffdf000)
[/home/patchwatcher/winezeug/patchwatcher/wine-continuous-workdir/active/dlls/winecrt0/exe_entry.c:36]
in msxml3_test (0x0032ff08)
  14 0x60447577 start_process+0xc7(arg=(nil))
[/home/patchwatcher/winezeug/patchwatcher/wine-continuous-workdir/active/dlls/kernel32/process.c:904]
in kernel32 (0x0032ffe8)
0x60416016 RaiseException+0x76
[/home/patchwatcher/winezeug/patchwatcher/wine-continuous-workdir/active/dlls/kernel32/except.c:85]
in kernel32: movl	0xfffffffc(%ebp),%ebx
85	}


From marcus at jet.franken.de  Thu Sep  4 14:09:15 2008
From: marcus at jet.franken.de (Marcus Meissner)
Date: Thu, 4 Sep 2008 21:09:15 +0200
Subject: [PATCH] buffer overflow checking for string functions
In-Reply-To: <a71bd89a0809041134i48d59afcu7567e59b6f5b24b7@mail.gmail.com>
References: <a71bd89a0809041134i48d59afcu7567e59b6f5b24b7@mail.gmail.com>
Message-ID: <20080904190914.GB4572@galeere>

On Thu, Sep 04, 2008 at 11:34:43AM -0700, Dan Kegel wrote:
> Hi Marcus,
> http://kegel.com/wine/patchwatcher/results/ shows your patch seems
> to have caused a test to fail.  The full log is at
> http://kegel.com/wine/patchwatcher/results/1045.log
> Can you check it and see if it's spurious, or if this is something
> you need to fix up, or if it was a lurking bug?

I already did and send in a patch...
But I should have found it before submitting, yes.

Ciao, Marcus


From celticht32 at aol.com  Thu Sep  4 16:22:30 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Thu, 04 Sep 2008 17:22:30 -0400
Subject: Patch for vertex > 4 shaders
In-Reply-To: <mailman.451.1220556621.25122.wine-patches@winehq.org>
References: <mailman.451.1220556621.25122.wine-patches@winehq.org>
Message-ID: <48C05196.1020607@aol.com>

 >Hmm. Does the application use a fixed function texture coordinate 
specified
 >with D3DECLUSAGE_FLOAT4?

I don't know I can look in my logs and see if I see it...
but don't remember off the top of my head at the moment.

 >It should be simple to support this. Essentially the "int coordsToUse =
 >sd->u.s.texCoords[coordIdx].dwType + 1" is wrong, this needs a better 
mapping:

 >decltype:                   coordsToUse:

 >D3DDECLTYPE_FLOAT1          1
 >D3DDECLTYPE_FLOAT2          2
 >D3DDECLTYPE_FLOAT3          3
 >D3DDECLTYPE_FLOAT4          4
 >D3DDECLTYPE_D3DCOLOR        4
 >D3DDECLTYPE_UBYTE4          4
 >D3DDECLTYPE_SHORT2          2
 >D3DDECLTYPE_SHORT4          4
 >D3DDECLTYPE_UBYTE4N         4
 >D3DDECLTYPE_SHORT2N         2
 >D3DDECLTYPE_SHORT4N         4
 >D3DDECLTYPE_USHORT2N        2
 >D3DDECLTYPE_USHORT4N        4
 >D3DDECLTYPE_UDEC3           3
 >D3DDECLTYPE_DEC3N           3
 >D3DDECLTYPE_FLOAT16_2       2
 >D3DDECLTYPE_FLOAT16_4       4

The app. should pass these in to us already in the correct format

 >Also the function calls below shouldn't be selected based on a 
 >switch-case statement, but rather on the declaration itself. q, r, t 
 >and s should be read in a different way too. The system used for 
 >providing other parameters like diffuse_funcs sounds sane here, 
 >although some extra care is needed to >keep working without 
 >GL_ARB_multitexture support.

ok explain... I am lost here..  like I said earlier I divided it into 
the gl calls (float, int, short) and the screen went a little bonkers...
so any suggestions here would be great =)

Was thinking about it on the trip to the airport and came up with the 
following pseudo code:


switch( vertex shader type)
{
case D3DDECLTYPE_FLOAT1:
                         g = value 1;
                         totalParms =  1;
                         break;
case D3DDECLTYPE_FLOAT2:
case D3DDECLTYPE_SHORT2:
case D3DDECLTYPE_USHORT2N:
case D3DDECLTYPE_SHORT2N:
case D3DDECLTYPE_FLOAT16_2: g = value1;
                             r = value2;
                             totalParms=2;
                             break;
case D3DDECLTYPE_FLOAT3:
case D3DDECLTYPE_UDEC3:
case D3DDECLTYPE_DEC3N: g = value1;
                         r = value2;
                         t= value3;
                         totalParms=3;
                         break;
case D3DDECLTYPE_FLOAT4:
case D3DDECLTYPE_D3DCOLOR:
case D3DDECLTYPE_UBYTE4:
case D3DDECLTYPE_SHORT4:
case D3DDECLTYPE_UBYTE4N:
case D3DDECLTYPE_SHORT4N:
case D3DDECLTYPE_USHORT4N:
case D3DDECLTYPE_FLOAT16_4:
                         g = value1;
                         r = value2;
                         t= value3;
                         s = value4;
                         totalParms=4;
                         break;

default: TRACE("Error\n");
          return;
          break;
}
switch(totalParms)
{
case 1: gl call with 1 parm
         break;
case 2: gl call with 2 parms
         break;
case 3: gl call with 3 parms
         break;
case 4: gl call with 4 parms
         break;
default: TRACE("ERROR\n");
          break;
}

 >Also I strongly recommend writing a test here. Generally, fixed 
 >function attributes with non-standard data types are spooky on Windows,
 >so the real problem may be somewhere else.

Is there currently a test case for this written?  I think on windows it 
just ignores the parms to be honest..

Chris



From austinenglish at gmail.com  Thu Sep  4 16:25:07 2008
From: austinenglish at gmail.com (Austin English)
Date: Thu, 4 Sep 2008 16:25:07 -0500
Subject: Recent msi/package tests failures
In-Reply-To: <48BF8917.40600@gmail.com>
References: <3131247.1220317732061.JavaMail.root@mswamui-thinleaf.atl.sa.earthlink.net>
	<22821af30809011826g2e7be77bs7cb52cbb41bae156@mail.gmail.com>
	<48BCD2F5.2060809@gmail.com>
	<b6bb06270809031350g442b4280v4a8a5c69eae98404@mail.gmail.com>
	<48BF8917.40600@gmail.com>
Message-ID: <b6bb06270809041425o5f2abe97k999cdce892b22062@mail.gmail.com>

On Thu, Sep 4, 2008 at 2:07 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> Austin English wrote:
>>
>> FWIW, my work XP box times out on quite a few tests, but has system
>> restore disabled.
>>
>> -Austin
>>
> Hi Austin,
>
> Could you check something for me on your XP box?
>
> According to
> http://test.winehq.org/data/5e1ac66b258415a33d96bb983c7e2ec3c7eea968/xp_aenglish-xp-sp3/kernel32:debugger.html,
> there are some leftovers from old tests in the
> HKLM\Software\Microsoft\Windows NT\CurrentVersion\AeDebug\debugger registry
> value. Is that correct?

C:\DOCUME~1\Admail\LOCALS~1\Temp\wct16\kernel32_test.exe debugger
dbg,attach,event,code2 C:\DOCUME~1\Admail\LOCALS~1\Temp\wt38.tmp %ld
%ld

> Could you run 'drwtsn32 -i' from a command prompt before you run a next
> winetest? That will at least put that to a much saner value (the Windows
> out-of-the-box default).

Still times out on quite a few. Here are the results:

http://test.winehq.org/data/6e90756307bfd5aa6ce2207f9419dabd26f46ec6/#group_XP
http://test.winehq.org/data/6e90756307bfd5aa6ce2207f9419dabd26f46ec6/xp_aenglish-xp-sp3/report.html

Any other ideas/tests needed, let me know.

-Austin


From celticht32 at aol.com  Thu Sep  4 16:26:35 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Thu, 04 Sep 2008 17:26:35 -0400
Subject: Patch for vertex > 4 shaders
In-Reply-To: <48C05196.1020607@aol.com>
References: <mailman.451.1220556621.25122.wine-patches@winehq.org>
	<48C05196.1020607@aol.com>
Message-ID: <48C0528B.2000109@aol.com>

Chris Ahrendt wrote:
>  >Hmm. Does the application use a fixed function texture coordinate 
> specified
>  >with D3DECLUSAGE_FLOAT4?
> 
> I don't know I can look in my logs and see if I see it...
> but don't remember off the top of my head at the moment.
> 
>  >It should be simple to support this. Essentially the "int coordsToUse =
>  >sd->u.s.texCoords[coordIdx].dwType + 1" is wrong, this needs a better 
> mapping:
> 
>  >decltype:                   coordsToUse:
> 
>  >D3DDECLTYPE_FLOAT1          1
>  >D3DDECLTYPE_FLOAT2          2
>  >D3DDECLTYPE_FLOAT3          3
>  >D3DDECLTYPE_FLOAT4          4
>  >D3DDECLTYPE_D3DCOLOR        4
>  >D3DDECLTYPE_UBYTE4          4
>  >D3DDECLTYPE_SHORT2          2
>  >D3DDECLTYPE_SHORT4          4
>  >D3DDECLTYPE_UBYTE4N         4
>  >D3DDECLTYPE_SHORT2N         2
>  >D3DDECLTYPE_SHORT4N         4
>  >D3DDECLTYPE_USHORT2N        2
>  >D3DDECLTYPE_USHORT4N        4
>  >D3DDECLTYPE_UDEC3           3
>  >D3DDECLTYPE_DEC3N           3
>  >D3DDECLTYPE_FLOAT16_2       2
>  >D3DDECLTYPE_FLOAT16_4       4
> 
> The app. should pass these in to us already in the correct format
> 
>  >Also the function calls below shouldn't be selected based on a 
>  >switch-case statement, but rather on the declaration itself. q, r, t 
>  >and s should be read in a different way too. The system used for 
>  >providing other parameters like diffuse_funcs sounds sane here, 
>  >although some extra care is needed to >keep working without 
>  >GL_ARB_multitexture support.
> 
> ok explain... I am lost here..  like I said earlier I divided it into 
> the gl calls (float, int, short) and the screen went a little bonkers...
> so any suggestions here would be great =)
> 
> Was thinking about it on the trip to the airport and came up with the 
> following pseudo code:
> 
> 
> switch( vertex shader type)
> {
> case D3DDECLTYPE_FLOAT1:
>                          g = value 1;
>                          totalParms =  1;
>                          break;
> case D3DDECLTYPE_FLOAT2:
> case D3DDECLTYPE_SHORT2:
> case D3DDECLTYPE_USHORT2N:
> case D3DDECLTYPE_SHORT2N:
> case D3DDECLTYPE_FLOAT16_2: g = value1;
>                              r = value2;
>                              totalParms=2;
>                              break;
> case D3DDECLTYPE_FLOAT3:
> case D3DDECLTYPE_UDEC3:
> case D3DDECLTYPE_DEC3N: g = value1;
>                          r = value2;
>                          t= value3;
>                          totalParms=3;
>                          break;
> case D3DDECLTYPE_FLOAT4:
> case D3DDECLTYPE_D3DCOLOR:
> case D3DDECLTYPE_UBYTE4:
> case D3DDECLTYPE_SHORT4:
> case D3DDECLTYPE_UBYTE4N:
> case D3DDECLTYPE_SHORT4N:
> case D3DDECLTYPE_USHORT4N:
> case D3DDECLTYPE_FLOAT16_4:
>                          g = value1;
>                          r = value2;
>                          t= value3;
>                          s = value4;
>                          totalParms=4;
>                          break;
> 
> default: TRACE("Error\n");
>           return;
>           break;
> }
> switch(totalParms)
> {
> case 1: gl call with 1 parm
>          break;
> case 2: gl call with 2 parms
>          break;
> case 3: gl call with 3 parms
>          break;
> case 4: gl call with 4 parms
>          break;
> default: TRACE("ERROR\n");
>           break;
> }
> 
>  >Also I strongly recommend writing a test here. Generally, fixed 
>  >function attributes with non-standard data types are spooky on Windows,
>  >so the real problem may be somewhere else.
> 
> Is there currently a test case for this written?  I think on windows it 
> just ignores the parms to be honest..
> 
> Chris
> 
> 
> 
the last comment I meant to say it ignores the types and calls it with 
all floats... not that it ignores it =)

chris


From paul.vriens.wine at gmail.com  Fri Sep  5 00:53:49 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Fri, 05 Sep 2008 07:53:49 +0200
Subject: kernel32: Test import entries of a core windows DLL (riched20.dll)
In-Reply-To: <20080905003306.GA31239@teop>
References: <20080905003306.GA31239@teop>
Message-ID: <48C0C96D.1070501@gmail.com>

Roy Shea wrote:
> ---
>  dlls/kernel32/tests/Makefile.in    |    1 +
>  dlls/kernel32/tests/loader_image.c |   80 ++++++++++++++++++++++++++++++++++++
>  2 files changed, 81 insertions(+), 0 deletions(-)
>  create mode 100644 dlls/kernel32/tests/loader_image.c
> 
> 
> ------------------------------------------------------------------------
> 
> 

No license and copyright information?

-- 
Cheers,

Paul.


From julliard at winehq.org  Fri Sep  5 03:45:30 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 05 Sep 2008 10:45:30 +0200
Subject: winemenubuilder: eliminate wineshelllink
In-Reply-To: <9e89675b0809041230l5d4a71ddt99583b58ddcf78f5@mail.gmail.com>
	(Damjan Jovanovic's message of "Thu, 4 Sep 2008 21:30:10 +0200")
References: <9e89675b0809041230l5d4a71ddt99583b58ddcf78f5@mail.gmail.com>
Message-ID: <87y727gevp.fsf@wine.dyndns.org>

"Damjan Jovanovic" <damjan.jov at gmail.com> writes:

> @@ -169,6 +170,10 @@ MAKE_FUNCPTR(png_write_info);
>  MAKE_FUNCPTR(png_write_row);
>  #undef MAKE_FUNCPTR
>  
> +static char xdg_config_dir[MAX_PATH];
> +static char xdg_data_dir[MAX_PATH];
> +static char xdg_desktop_dir[MAX_PATH];

MAX_PATH is not appropriate for unix paths, please allocate them
dynamically.

> +        if (filename[i] == '/' && i > 0)
> +        {
> +            struct stat st;
> +            filename[i] = 0;
> +            if (stat(filename, &st) != 0)
> +            {
> +                if (errno == ENOENT)
> +                {
> +                    if (mkdir(filename, 0777))
> +                        ret = FALSE;
> +                }

mkdir fails on existing paths, there's no need to stat first.

> +    snprintf(xpmPath, xpmPathLen, "%s/icons/%s", xdg_data_dir, name);
> +    dot = strrchr(xpmPath, '.');
> +    if (dot != NULL)
> +        *dot = 0;

You should only match a dot in the filename, not in the directory.

> +        dst = fopen(xpmPath, "w");
> +        if (dst)
> +        {
> +            char buffer[8096];

What's with the strange size?

> +    if (getenv("WINEPREFIX"))
> +        snprintf(winePrefix, sizeof(winePrefix), "%s", getenv("WINEPREFIX"));
> +    else
> +        snprintf(winePrefix, sizeof(winePrefix), "%s/.wine", getenv("HOME"));

You want wine_get_config_dir().

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Sep  5 03:47:28 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 05 Sep 2008 10:47:28 +0200
Subject: sane.ds: Workaround for wsprintf does not support floats.
In-Reply-To: <558b2f5c0809041709m123c0a52r72880402e77c9c47@mail.gmail.com>
	(Lei Zhang's message of "Thu, 4 Sep 2008 17:09:06 -0700")
References: <558b2f5c0809041709m123c0a52r72880402e77c9c47@mail.gmail.com>
Message-ID: <87tzcvgesf.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> Float values in sane dialogs show up as "f". This is because wsprintf
> does not support %f. This started occurring in commit
> 4fd668d01088e82b4639ee2f4f088e0b718e6a88.

sprintfW should work.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Sep  5 03:50:36 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 05 Sep 2008 10:50:36 +0200
Subject: [5/5] user32: Move character conversion logic to dde_server.d &
	remove todo's
In-Reply-To: <48BFC1D2.4030200@yless4u.com.au> (Jeff Latimer's message of
	"Thu, 04 Sep 2008 21:09:06 +1000")
References: <48BFC1D2.4030200@yless4u.com.au>
Message-ID: <87prnjgen7.fsf@wine.dyndns.org>

Jeff Latimer <lats at yless4u.com.au> writes:

> @@ -772,12 +774,51 @@ static	WDML_QUEUE_STATE WDML_ServerHandleExecute(WDML_CONV* pConv, WDML_XACT* pX
>  
>  	if (ptr)
>  	{
> -	    hDdeData = DdeCreateDataHandle(0, ptr, GlobalSize(pXAct->hMem),
> +            DWORD memSize, ptrSize = GlobalSize(pXAct->hMem);
> +
> +            TRACE("Client is %s, Server is %s, Text is %s\n",
> +                  IsWindowUnicode(pConv->hwndClient) ? "Unicode" : "ANSI",
> +                  IsWindowUnicode(pConv->hwndServer) ? "Unicode" : "ANSI",
> +                  IsTextUnicode(ptr, ptrSize, NULL) ? "Unicode" : "ANSI");
> +
> +            if (!(IsWindowUnicode(pConv->hwndClient)) && !(IsWindowUnicode(pConv->hwndServer)) && IsTextUnicode(ptr, ptrSize, NULL))
> +                memSize = WideCharToMultiByte( CP_ACP, 0, ptr, ptrSize / sizeof(WCHAR), NULL, 0, NULL, NULL);
> +
> +            else if (IsWindowUnicode(pConv->hwndServer) && !IsTextUnicode(ptr, ptrSize, NULL))
> +                memSize = MultiByteToWideChar( CP_ACP, 0, ptr, ptrSize, NULL, 0) * sizeof(WCHAR);

Using IsTextUnicode doesn't look right, you shouldn't need to guess.

-- 
Alexandre Julliard
julliard at winehq.org


From fgouget at free.fr  Fri Sep  5 06:01:05 2008
From: fgouget at free.fr (Francois Gouget)
Date: Fri, 5 Sep 2008 13:01:05 +0200 (CEST)
Subject: [PATCH] buffer overflow checking for string functions
Message-ID: <alpine.DEB.1.10.0809051234460.24905@amboise.dolphin>

On Thu, 4 Sep 2008, Marcus Meissner wrote:
[...]
> +#if defined(__GNUC__) && (__GNUC__ < 4)
> +# define __builtin_object_size(x,y) -1
> +#endif

Shouldn't this be:

   #if !defined(__GNUC__) || (__GNUC__ < 4)

To preserve compatibility with non-GNU compilers.


> +static inline INT
> +WINAPI MultiByteToWideChar_ichk(
> +	UINT cp,DWORD flags,
> +	LPCSTR src,INT srclen,INT srcbuflen,
> +	LPWSTR dst,INT dstlen,INT dstbuflen
> +) {
> +	if ((srclen != -1) && (srcbuflen != -1) && (srcbuflen < srclen))
> +		RaiseException(0xC0000409,0x01,0,NULL);

It would be nice to issue a trace clarifying the cause of the exception 
before raising it. Maybe something like this:

   TRACE("used %d as the size when >= %d is needed for the builtin object\n", ...);

Sending it to the seh channel would be best.

[...]
> +#define MultiByteToWideChar(cp,flags,src,srclen,dst,dstlen)	\
> +	MultiByteToWideChar_ichk(cp,flags,			\
> +		src,srclen,__builtin_object_size(src,0),	\
> +		dst,dstlen,__builtin_object_size(dst,0)		\
> +	)

I have a few other concerns here:
 * Why do we need a macro here? I thought it was so that 
   __builtin_object_size() could do its work, but the strcpy() functions 
   above in the patch have no associated macro and they call 
   __builtin_object_size() on their parameter which would seem to be 
   poinless. So I must be misunderstanding something here.
 * It's customary to add some extra parenthesing in such macros:
      (src),(srclen),__builtin_object_size((src),0),
 * The macro itself can cause trouble in some cases. In Winelib 
   code it can cause naming collisions with user functions (especially 
   with class methods, though it may not be very likely here), which 
   would especially be an issue with strcpy*(). Maybe it should be 
   protected by something like a WINE_NO_OVERFLOW_CHECK macro?
 * The macro can also cause trouble in case its parameters have 
   side-effects, like x++ or similar (though the __builtin_object_size() 
   mentions returning -1 in case or side-effects). This could impact 
   Wine too.


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                      Computers are like airconditioners
                They stop working properly if you open WINDOWS


From fgouget at free.fr  Fri Sep  5 06:20:30 2008
From: fgouget at free.fr (Francois Gouget)
Date: Fri, 5 Sep 2008 13:20:30 +0200 (CEST)
Subject: winemenubuilder: eliminate wineshelllink
In-Reply-To: <9e89675b0809041230l5d4a71ddt99583b58ddcf78f5@mail.gmail.com>
References: <9e89675b0809041230l5d4a71ddt99583b58ddcf78f5@mail.gmail.com>
Message-ID: <alpine.DEB.1.10.0809051218120.18392@amboise.dolphin>

On Thu, 4 Sep 2008, Damjan Jovanovic wrote:

> Changelog:
> * moved the functionality of wineshelllink into winemenubuilder, and
> eliminated wineshelllink

What is the rational for eliminating wineshelllink?

It seems to me that by eliminating it we are losing a lot of flexibility 
for handling special setups (and there are a lot of these in menuing 
systems).


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
             Research is the transformation of money to knowledge.
            Innovation is the transformation of knowledge to money.
                              -- Dr. Hans Meixner


From damjan.jov at gmail.com  Fri Sep  5 06:59:42 2008
From: damjan.jov at gmail.com (Damjan Jovanovic)
Date: Fri, 5 Sep 2008 13:59:42 +0200
Subject: winemenubuilder: eliminate wineshelllink
In-Reply-To: <alpine.DEB.1.10.0809051218120.18392@amboise.dolphin>
References: <9e89675b0809041230l5d4a71ddt99583b58ddcf78f5@mail.gmail.com>
	<alpine.DEB.1.10.0809051218120.18392@amboise.dolphin>
Message-ID: <9e89675b0809050459o15c890f0qd0ed8bf2d834cee@mail.gmail.com>

On Fri, Sep 5, 2008 at 1:20 PM, Francois Gouget <fgouget at free.fr> wrote:
> On Thu, 4 Sep 2008, Damjan Jovanovic wrote:
>
>> Changelog:
>> * moved the functionality of wineshelllink into winemenubuilder, and
>> eliminated wineshelllink
>
> What is the rational for eliminating wineshelllink?

Alexandre asked for it when I tried to send a patch that gets .url
files to link into fd.o menus and the desktop. I'm not sure why, but I
agree: having 2 programs to create menus adds complexity, fewer people
understand both C and bash, patching both is ugly, debugging bash is
hard, and personally wineshelllink has always felt like a thorn in my
side when I tried to understand/change the menu code.

> It seems to me that by eliminating it we are losing a lot of flexibility
> for handling special setups (and there are a lot of these in menuing
> systems).

There shouldn't be any "special" setups, fd.o is there just for that
reason. Menus and desktop files should be bog standard now, and should
have been that way from the very beginning.

>
> --
> Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
>             Research is the transformation of money to knowledge.
>            Innovation is the transformation of knowledge to money.
>                              -- Dr. Hans Meixner
>

Damjan Jovanovic


From lats at yless4u.com.au  Fri Sep  5 08:04:14 2008
From: lats at yless4u.com.au (Jeff Latimer)
Date: Fri, 05 Sep 2008 23:04:14 +1000
Subject: [5/5] user32: Move character conversion logic to dde_server.d
	& remove todo's
In-Reply-To: <87prnjgen7.fsf@wine.dyndns.org>
References: <48BFC1D2.4030200@yless4u.com.au> <87prnjgen7.fsf@wine.dyndns.org>
Message-ID: <48C12E4E.5030207@yless4u.com.au>

Alexandre Julliard wrote:
> Jeff Latimer <lats at yless4u.com.au> writes:
>
>   
>> @@ -772,12 +774,51 @@ static	WDML_QUEUE_STATE WDML_ServerHandleExecute(WDML_CONV* pConv, WDML_XACT* pX
>>  
>>  	if (ptr)
>>  	{
>> -	    hDdeData = DdeCreateDataHandle(0, ptr, GlobalSize(pXAct->hMem),
>> +            DWORD memSize, ptrSize = GlobalSize(pXAct->hMem);
>> +
>> +            TRACE("Client is %s, Server is %s, Text is %s\n",
>> +                  IsWindowUnicode(pConv->hwndClient) ? "Unicode" : "ANSI",
>> +                  IsWindowUnicode(pConv->hwndServer) ? "Unicode" : "ANSI",
>> +                  IsTextUnicode(ptr, ptrSize, NULL) ? "Unicode" : "ANSI");
>> +
>> +            if (!(IsWindowUnicode(pConv->hwndClient)) && !(IsWindowUnicode(pConv->hwndServer)) && IsTextUnicode(ptr, ptrSize, NULL))
>> +                memSize = WideCharToMultiByte( CP_ACP, 0, ptr, ptrSize / sizeof(WCHAR), NULL, 0, NULL, NULL);
>> +
>> +            else if (IsWindowUnicode(pConv->hwndServer) && !IsTextUnicode(ptr, ptrSize, NULL))
>> +                memSize = MultiByteToWideChar( CP_ACP, 0, ptr, ptrSize, NULL, 0) * sizeof(WCHAR);
>>     
> Using IsTextUnicode doesn't look right, you shouldn't need to guess.
>
>   
I am not sure how to get around guessing in this case.  The client call 
DdeClientTransaction and passes the data as LPBYTE.  The server receives 
the data as a block of bytes and has to work out whether the data is 
Unicode.  The client does not really know if the data is Unicode and DDE 
does not pass a data type with XTYP_EXECUTE.  I could stick a FIXME note 
in there for the meantime.

Jeff


From winehacker at gmail.com  Fri Sep  5 08:09:18 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Fri, 5 Sep 2008 09:09:18 -0400
Subject: winemenubuilder: eliminate wineshelllink
In-Reply-To: <9e89675b0809050459o15c890f0qd0ed8bf2d834cee@mail.gmail.com>
References: <9e89675b0809041230l5d4a71ddt99583b58ddcf78f5@mail.gmail.com>
	<alpine.DEB.1.10.0809051218120.18392@amboise.dolphin>
	<9e89675b0809050459o15c890f0qd0ed8bf2d834cee@mail.gmail.com>
Message-ID: <19e31a080809050609s60a5bdddhbab49bfccf8c36a7@mail.gmail.com>

On Fri, Sep 5, 2008 at 7:59 AM, Damjan Jovanovic <damjan.jov at gmail.com> wrote:
> There shouldn't be any "special" setups, fd.o is there just for that
> reason. Menus and desktop files should be bog standard now, and should
> have been that way from the very beginning.

Amen.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From julliard at winehq.org  Fri Sep  5 09:04:54 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 05 Sep 2008 16:04:54 +0200
Subject: notepad: Only append .txt to missing files without a dot in them
In-Reply-To: <200809051250.42441.alex@thehandofagony.com> ("Alexander
	Nicolaysen =?utf-8?Q?S=C3=B8rnes=22's?= message of "Fri, 5 Sep 2008
	12:50:41 +0200")
References: <200809051250.42441.alex@thehandofagony.com>
Message-ID: <87hc8uhent.fsf@wine.dyndns.org>

Alexander Nicolaysen S?rnes <alex at thehandofagony.com> writes:

> @@ -590,7 +591,8 @@ static void HandleCommandLine(LPWSTR cmdline)
>              static const WCHAR txtW[] = { '.','t','x','t',0 };
>  
>              /* try to find file with ".txt" extension */
> -            if (!lstrcmp(txtW, cmdline + lstrlen(cmdline) - lstrlen(txtW)))
> +            if (!lstrcmp(txtW, cmdline + lstrlen(cmdline) - lstrlen(txtW)) ||
> +                strchrW(cmdline, '.'))

There's no point in checking for .txt if any extension will match
anyway. Also you should most likely check for a dot only in the
filename, not in the whole path.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Sep  5 09:05:58 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 05 Sep 2008 16:05:58 +0200
Subject: user32: Resend Check for NULL pData in DdeClientTransaction
	expecting to be passed a handle
In-Reply-To: <48C13912.3020100@yless4u.com.au> (Jeff Latimer's message of
	"Fri, 05 Sep 2008 23:50:10 +1000")
References: <48C13912.3020100@yless4u.com.au>
Message-ID: <87d4jihem1.fsf@wine.dyndns.org>

Jeff Latimer <lats at yless4u.com.au> writes:

> @@ -1157,7 +1157,10 @@ HDDEDATA WINAPI DdeClientTransaction(LPBYTE pData, DWORD cbData, HCONV hConv, HS
>          /* Windows simply ignores hszItem and wFmt in this case */
>  	if (pData == NULL)
>  	{
> -	    pConv->instance->lastError = DMLERR_INVALIDPARAMETER;
> +	    if (cbData == -1)
> +	        pConv->instance->lastError = DMLERR_INVALIDPARAMETER;
> +	    else
> +	        pConv->instance->lastError = DMLERR_MEMORY_ERROR;
>  	    return 0;
>  	}
>  	pXAct = WDML_ClientQueueExecute(pConv, pData, cbData);

It would be cleaner to do the checks inside WDML_ClientQueueExecute
since it already handles the cbData==-1 case differently.

-- 
Alexandre Julliard
julliard at winehq.org


From jasonspiro4 at gmail.com  Fri Sep  5 09:18:17 2008
From: jasonspiro4 at gmail.com (Jason Spiro)
Date: Fri, 5 Sep 2008 14:18:17 +0000
Subject: 1st resend: Can we import MSConfig from ReactOS? (was: autorun
	perhaps dangerous)
Message-ID: <c241693f0809050718m7a8c7cf9x8981446e1dab8b0c@mail.gmail.com>

(Hi Alexandre.  I sent the below email 2 weeks ago and didn't get a
response yet.  I know you are busy, but please do try to find the time
to reply, even if it's to say "I'm not sure".  Cheers, --Jason)

cc: wine-devel at winehq.org

Hi Alexandre,

In January 2008, Steven Edwards wondered[1] if you would let Wine import
"msconfig" (the System Configuration Utility) from ROS.  Would you allow it?

Thanks,
--Jason Spiro (not a Wine developer)

^ [1].
http://news.gmane.org/find-root.php?message_id=%3c19e31a080801122302u52d51353w1b2875f5c30582ff%40mail.gmail.com%3e

-- 
Jason Spiro: software/web developer, trainer, IT consultant. I support
Linux, UNIX, Windows, and more. Contact me to discuss your needs and
get a free estimate. +1 (613) 668-6096 / info at jspiro.com


From julliard at winehq.org  Fri Sep  5 09:38:48 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 05 Sep 2008 16:38:48 +0200
Subject: 1st resend: Can we import MSConfig from ReactOS? (was: autorun
	perhaps dangerous)
In-Reply-To: <c241693f0809050718m7a8c7cf9x8981446e1dab8b0c@mail.gmail.com>
	(Jason Spiro's message of "Fri, 5 Sep 2008 14:18:17 +0000")
References: <c241693f0809050718m7a8c7cf9x8981446e1dab8b0c@mail.gmail.com>
Message-ID: <87zlmmfyiv.fsf@wine.dyndns.org>

"Jason Spiro" <jasonspiro4 at gmail.com> writes:

> Hi Alexandre,
>
> In January 2008, Steven Edwards wondered[1] if you would let Wine import
> "msconfig" (the System Configuration Utility) from ROS.  Would you allow it?

No, we don't want to import code from ReactOS at this point.

-- 
Alexandre Julliard
julliard at winehq.org


From stefan at codeweavers.com  Fri Sep  5 12:17:54 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Fri, 5 Sep 2008 12:17:54 -0500
Subject: wined3d: add missing HeapFree
In-Reply-To: <f5d9424f0809050919t42fd9cecq79a52b5039e535bf@mail.gmail.com>
References: <f5d9424f0809050919t42fd9cecq79a52b5039e535bf@mail.gmail.com>
Message-ID: <007201c90f7b$55c24980$0146dc80$@com>

This looks ok to me


> -----Original Message-----
> From: wine-patches-bounces at winehq.org [mailto:wine-patches-
> bounces at winehq.org] On Behalf Of Jeff Zaroyko
> Sent: Friday, September 05, 2008 11:19 AM
> To: wine-patches at winehq.org
> Subject: wined3d: add missing HeapFree
> 




From dank at kegel.com  Fri Sep  5 12:24:17 2008
From: dank at kegel.com (Dan Kegel)
Date: Fri, 5 Sep 2008 10:24:17 -0700
Subject: Patchwatcher online
Message-ID: <a71bd89a0809051024k5f65d745m300071cf870fb738@mail.gmail.com>

OK, I've checked in the updated Patchwatcher source
http://code.google.com/p/winezeug/source/detail?r=177
and have turned email notifications back on.

I also told it to rerun the most recent 11 patches,
just to test that it's sending the good patches to
http://groups.google.com/group/wine-patches-filtered
again.

The results page
http://kegel.com/wine/patchwatcher/results/
looks nice and green; the blacklist at
http://winezeug.googlecode.com/svn/trunk/patchwatcher/blacklist.txt
filters out all the tests that tend to fail on my
test machine infrequently enough that they
show up in the five baseline test runs, but
frequently enough that they caused bogus
failure reports in the few hundered patches I've
processed.

It would be *very good* to whittle that blacklist down to zero.
I should update http://bugs.winehq.org/show_bug.cgi?id=9916
with a script that runs just the problematic tests over
and over again.  (Or maybe I should start a new bug, that
one is pretty long.)


From jasonspiro4 at gmail.com  Fri Sep  5 14:04:53 2008
From: jasonspiro4 at gmail.com (Jason Spiro)
Date: Fri, 5 Sep 2008 15:04:53 -0400
Subject: 1st resend: Can we import MSConfig from ReactOS? (was: autorun
	perhaps dangerous)
In-Reply-To: <87zlmmfyiv.fsf@wine.dyndns.org>
References: <c241693f0809050718m7a8c7cf9x8981446e1dab8b0c@mail.gmail.com>
	<87zlmmfyiv.fsf@wine.dyndns.org>
Message-ID: <c241693f0809051204xaa562e6wd9147adcb17e5057@mail.gmail.com>

2008/9/5 Alexandre Julliard <julliard at winehq.org> wrote:
> No, we don't want to import code from ReactOS at this point.

Thanks for your reply.  Some more questions:  Could the Wine team make
up a whitelist of trusted ReactOS developers who won't reverse
engineer any Windows code?  Or a whitelist of trusted portions of
ReactOS, such as msconfig[1] that are extremely unlikely to have been
written using reverse engineering?

^ [1].  msconfig is a simple GUI utility for changing certain Registry
settings like AutoRun items and such.

-- 
Jason Spiro: software/web developer, trainer, IT consultant. I support
Linux, UNIX, Windows, and more. Contact me to discuss your needs and
get a free estimate. +1 (613) 668-6096 / info at jspiro.com


From dank at kegel.com  Fri Sep  5 15:00:21 2008
From: dank at kegel.com (Dan Kegel)
Date: Fri, 5 Sep 2008 13:00:21 -0700
Subject: Can we import MSConfig from ReactOS?
Message-ID: <a71bd89a0809051300kddad264x698ef98b97c2beba@mail.gmail.com>

Jason Spiro wrote:
> Could the Wine team make up a whitelist of trusted ReactOS
> developers who won't reverse engineer any Windows code?

There is already a whitelist of sorts; look at whom Alexandre
accepts patches from.

>  Or a whitelist of trusted portions of ReactOS...?

IMHO it's not worth the effort.
- Dan


From fgouget at free.fr  Fri Sep  5 15:59:57 2008
From: fgouget at free.fr (Francois Gouget)
Date: Fri, 5 Sep 2008 22:59:57 +0200 (CEST)
Subject: winemenubuilder: eliminate wineshelllink
In-Reply-To: <9e89675b0809050459o15c890f0qd0ed8bf2d834cee@mail.gmail.com>
References: <9e89675b0809041230l5d4a71ddt99583b58ddcf78f5@mail.gmail.com>
	<alpine.DEB.1.10.0809051218120.18392@amboise.dolphin>
	<9e89675b0809050459o15c890f0qd0ed8bf2d834cee@mail.gmail.com>
Message-ID: <alpine.DEB.1.10.0809052258300.12557@amboise.dolphin>

On Fri, 5 Sep 2008, Damjan Jovanovic wrote:
[...]
> There shouldn't be any "special" setups, fd.o is there just for that
> reason.

Riiiiight. Like that's going to be true any day soon.
Already on many distros you need to generate separate .menu files for 
Gnome and KDE (and yet another one for KDE 4 sometimes).

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
          Demander si un ordinateur peut penser revient ? demander
                         si un sous-marin peut nager.

From truiken at gmail.com  Fri Sep  5 16:26:11 2008
From: truiken at gmail.com (James Hawkins)
Date: Fri, 5 Sep 2008 16:26:11 -0500
Subject: msi: Reduce destination file name used in the MoveFiles action to
	the long file name.
In-Reply-To: <1096648c0809051418p3d2005c1m2b7de2bf41852a9e@mail.gmail.com>
References: <1096648c0809051418p3d2005c1m2b7de2bf41852a9e@mail.gmail.com>
Message-ID: <22821af30809051426s60db187ak27d4dba7ae232764@mail.gmail.com>

On Fri, Sep 5, 2008 at 4:18 PM, Rob Shearman <robertshearman at gmail.com> wrote:
> ---
>  dlls/msi/action.c |   22 ++++++++++++++++------
>  1 files changed, 16 insertions(+), 6 deletions(-)
>
> There doesn't appear to be any documentation on MSDN suggesting this
> behaviour but it fixes the following snippet of a log from a
> customised Office 2003 installer:
>
> 0065:trace:msi:msi_move_file copying
> L"C:\\windows\\temp\\~OCW0023.TMP" -> L"C:\\Program Files\\Microsoft
> Office\\sfn|custom11.prf"
> 0065:Call KERNEL32.CopyFileW(0105f4d0
> L"C:\\windows\\temp\\~OCW0023.TMP",0105f1f8 L"C:\\Program
> Files\\Microsoft Office\\sfn|custom11.prf",00000000) ret=7eded205
> 0065:Ret  KERNEL32.CopyFileW() retval=00000000 ret=7eded205
> 0065:warn:msi:msi_move_file CopyFile failed: 123
>

Can you please add a test case?  The test_movefiles already exists,
and adding this case shouldn't take more than 5 minutes.

-- 
James Hawkins


From robertshearman at gmail.com  Fri Sep  5 16:27:47 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Fri, 5 Sep 2008 22:27:47 +0100
Subject: msi: Reduce destination file name used in the MoveFiles action to
	the long file name.
In-Reply-To: <22821af30809051426s60db187ak27d4dba7ae232764@mail.gmail.com>
References: <1096648c0809051418p3d2005c1m2b7de2bf41852a9e@mail.gmail.com>
	<22821af30809051426s60db187ak27d4dba7ae232764@mail.gmail.com>
Message-ID: <1096648c0809051427o1b4baadfmcfdde1bcdbc05108@mail.gmail.com>

2008/9/5 James Hawkins <truiken at gmail.com>:
> Can you please add a test case?  The test_movefiles already exists,
> and adding this case shouldn't take more than 5 minutes.

Sure, no problem.

-- 
Rob Shearman


From robertshearman at gmail.com  Fri Sep  5 16:32:07 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Fri, 5 Sep 2008 22:32:07 +0100
Subject: oleaut32: Add support for loading typelibs from NE files.
In-Reply-To: <20080904153930.GB17225@merlot.physics.ox.ac.uk>
References: <48be5c68.1f2d400a.1ca0.ffffa57cSMTPIN_ADDED@mx.google.com>
	<1096648c0809030451x6aab81fbjae514f506a9d5196@mail.gmail.com>
	<20080904153930.GB17225@merlot.physics.ox.ac.uk>
Message-ID: <1096648c0809051432m2a30b6c6x4b4aa547d6f837b8@mail.gmail.com>

2008/9/4 Huw Davies <huw at codeweavers.com>:
> On Wed, Sep 03, 2008 at 12:51:36PM +0100, Rob Shearman wrote:
>> 2008/9/2 Huw Davies <huw at codeweavers.com>:
>> > --- a/dlls/oleaut32/typelib.c
>> > +++ b/dlls/oleaut32/typelib.c
>> > @@ -64,6 +64,7 @@
>> >  #include "winnls.h"
>> >  #include "winreg.h"
>> >  #include "winuser.h"
>> > +#include "wine/winbase16.h"
>> >
>> >  #include "wine/unicode.h"
>> >  #include "objbase.h"
>>
>> I don't think we should be including a 16-bit header file and using
>> 16-bit functions in a 32-bit source file if we can avoid it. In this
>> case, we can avoid it.
>
> How do you suggest we avoid it?

By parsing the file manually. There is code to do this already in
dlls/version/resource.c:find_ne_resource

-- 
Rob Shearman


From robertshearman at gmail.com  Fri Sep  5 16:44:50 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Fri, 5 Sep 2008 22:44:50 +0100
Subject: [PATCH] buffer overflow checking for string functions
In-Reply-To: <alpine.DEB.1.10.0809051234460.24905@amboise.dolphin>
References: <alpine.DEB.1.10.0809051234460.24905@amboise.dolphin>
Message-ID: <1096648c0809051444t3a4e178es2acceb6e2807d8f@mail.gmail.com>

2008/9/5 Francois Gouget <fgouget at free.fr>:
> I have a few other concerns here:
>  * Why do we need a macro here? I thought it was so that
>   __builtin_object_size() could do its work, but the strcpy() functions
>   above in the patch have no associated macro and they call
>   __builtin_object_size() on their parameter which would seem to be
>   poinless. So I must be misunderstanding something here.
>  * It's customary to add some extra parenthesing in such macros:
>      (src),(srclen),__builtin_object_size((src),0),
>  * The macro itself can cause trouble in some cases. In Winelib
>   code it can cause naming collisions with user functions (especially
>   with class methods, though it may not be very likely here), which
>   would especially be an issue with strcpy*(). Maybe it should be
>   protected by something like a WINE_NO_OVERFLOW_CHECK macro?
>  * The macro can also cause trouble in case its parameters have
>   side-effects, like x++ or similar (though the __builtin_object_size()
>   mentions returning -1 in case or side-effects). This could impact
>   Wine too.

I also have some questions:
* Is there any runtime overhead of using __builtin_object_size and/or
the __alloc_size__ attribute?
* If not and it's a compile time only thing, why can't these buffer
overruns be detected at compile time instead of runtime (which
obviously depends on test coverage)?

-- 
Rob Shearman


From winehacker at gmail.com  Fri Sep  5 18:38:02 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Fri, 5 Sep 2008 19:38:02 -0400
Subject: 1st resend: Can we import MSConfig from ReactOS? (was: autorun
	perhaps dangerous)
In-Reply-To: <c241693f0809051204xaa562e6wd9147adcb17e5057@mail.gmail.com>
References: <c241693f0809050718m7a8c7cf9x8981446e1dab8b0c@mail.gmail.com>
	<87zlmmfyiv.fsf@wine.dyndns.org>
	<c241693f0809051204xaa562e6wd9147adcb17e5057@mail.gmail.com>
Message-ID: <19e31a080809051638i30f366e7te466b06e5004a0f2@mail.gmail.com>

On Fri, Sep 5, 2008 at 3:04 PM, Jason Spiro <jasonspiro4 at gmail.com> wrote:
> ^ [1].  msconfig is a simple GUI utility for changing certain Registry
> settings like AutoRun items and such.

I am going to hijack the thread for a sec. I think we do need a
msconfig tool, just to make it less trouble for Windows users that are
used to messing with it to have the ability to change things like
services and run entries. But with regards to autorun...

I have a patch in my tree that adds AutoRun options to winecfg if you
want to use it. I've not sent it along yet because

1. Its not done
2. I'm not sure Wine even really needs to mess with it. Scott and the
Ubuntu guys have been working to fix autorun support in Nautilus and
it mostly works now. I've not really had a chance to mess with it yet,
but from looking over the bug reports I think it could still use a few
enhancements. Windows gives you the ability to set Autorun options for
CD/DVD and Flash. I don't know if Nautilus does this. Also it needs to
have the ability to honor a WINEPREFIX variable to support Wine,
CrossOver, Bordeaux, et al.

Here is the direction I was going for, I was using the DirectSound
registry key modification code as a template but didn't finish it.
Feel free to use it as a starting point if Alexandre agrees we need to
have autorun options in winecfg.

Thanks
-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0012-Started-work-on-autorun.-Nowhere-near-ready-yet.patch
Type: text/x-diff
Size: 5418 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080905/41bd9718/attachment-0001.patch 

From hverbeet at gmail.com  Sat Sep  6 00:07:06 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sat, 6 Sep 2008 07:07:06 +0200
Subject: wined3d: Be more careful when deleting FBOs
In-Reply-To: <48BE4189.5090101@codeweavers.com>
References: <48BE4189.5090101@codeweavers.com>
Message-ID: <d658b69e0809052207m763c7506lf5e0abccb994084d@mail.gmail.com>

Ignore these, I sent them a few days ago without being subscribed to the list.


From hverbeet at gmail.com  Sat Sep  6 00:52:23 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sat, 6 Sep 2008 07:52:23 +0200
Subject: wined3d: Add support for updating part of a compressed surface.
In-Reply-To: <48C15AAF.8050302@intenode.on.net>
References: <48C15AAF.8050302@intenode.on.net>
Message-ID: <d658b69e0809052252g4cfcf3qd6876d0c30dafabc@mail.gmail.com>

2008/9/5 Christof Sigel <christof.sigel at intenode.on.net>:
> +                        /* since DXT compressed formats are specified in 4x4 pixel blocks devide pitch by 4 */
> +                        int srcPitch=srcLockedRect.Pitch>>2;
> +                        int destPitch=destLockedRect.Pitch>>2;

That will break with DXT1 surfaces. All the DXT formats are specified
in 4x4 blocks, but for DXT1 a 4x4 block is 8 bytes, while for the
other DXT formats a block is 16 bytes. This also has implications for
how you should handle copying row by row, since each row is 4 pixels
high. Strictly speaking you should also verify that the pitch exactly
corresponds to the surface width before using the "single memcpy"
path, since theory the surface layout in memory could look like this:

|<----width--->|
|<-----------pitch------------>|
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
|--------------|xxxxxxxxxxxxxxxx
|              |xxxxxxxxxxxxxxxx
|              |xxxxxxxxxxxxxxxx
|    surface   |xxxxxxxxxxxxxxxx
|              |xxxxxxxxxxxxxxxx
|              |xxxxxxxxxxxxxxxx
|              |xxxxxxxxxxxxxxxx
|--------------|xxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

In other words, for a DXT1 surface with height h, width w and pitch p,
you should copy h/4 rows of w*2 bytes, where each row starts at
pBits+p*row. For DXT2/3/4/5 you'd copy w*4 bytes for each row. A test
for this code would be appreciated.


From hans at codeweavers.com  Sat Sep  6 02:47:15 2008
From: hans at codeweavers.com (Hans Leidekker)
Date: Sat, 6 Sep 2008 09:47:15 +0200
Subject: modified:   dlls/wininet/http.c
In-Reply-To: <48BED875.1080603@dawncrow.de>
References: <48BED875.1080603@dawncrow.de>
Message-ID: <200809060947.15663.hans@codeweavers.com>

On Wednesday 03 September 2008 20:33:25 Nerv wrote:

> -It seems Windows XP only increments lpdwIndex if the Function returns 
> true, so it is fixed if you just look on bSuccess

This patch is likely correct but please do add a test case to prove your
finding.

 -Hans


From dmitry at codeweavers.com  Sat Sep  6 04:20:59 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sat, 6 Sep 2008 18:20:59 +0900
Subject: user32: Resend Check for NULL pData in DdeClientTransAction
	expectingto be passed a handle
References: <48C22DB2.8030200@yless4u.com.au>
Message-ID: <8C4080DC70E2461A9353EC603709B78E@DMITRY>

"Jeff Latimer" <lats at yless4u.com.au> wrote:

> diff --git a/dlls/user32/dde_client.c b/dlls/user32/dde_client.c
> index 99e2d1c..cbbf99a 100644
> --- a/dlls/user32/dde_client.c
> +++ b/dlls/user32/dde_client.c
> @@ -632,6 +632,15 @@ static WDML_XACT* WDML_ClientQueueExecute(WDML_CONV* pConv, LPVOID pData, DWORD
> 
>     TRACE("XTYP_EXECUTE transaction\n");
> 
> +    if (pData == NULL)
> +    {
> +        if (cbData == (DWORD)-1)
> +            pConv->instance->lastError = DMLERR_INVALIDPARAMETER;
> +        else
> +            pConv->instance->lastError = DMLERR_MEMORY_ERROR;
> +        return NULL;
> +    }

Alexandre suggested to use the existing 'if (cbData == (DWORD)-1)' block,
not introduce a new one.

> @@ -1154,13 +1163,10 @@ HDDEDATA WINAPI DdeClientTransaction(LPBYTE pData, DWORD cbData, HCONV hConv, HS
>     switch (wType)
>     {
>     case XTYP_EXECUTE:
> -        /* Windows simply ignores hszItem and wFmt in this case */
> - if (pData == NULL)
> - {
> -     pConv->instance->lastError = DMLERR_INVALIDPARAMETER;
> -     return 0;
> - }
> +    /* Windows simply ignores hszItem and wFmt in this case */
>  pXAct = WDML_ClientQueueExecute(pConv, pData, cbData);
> +    if (pXAct == NULL)
> +        return 0;
>  break;

The formatting of the above block is strange. Set the tab size in your
editor to 8 and you will see the mess.

-- 
Dmitry.


From paul.vriens.wine at gmail.com  Sat Sep  6 05:19:19 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Sat, 06 Sep 2008 12:19:19 +0200
Subject: Fixing the conformance tests
Message-ID: <48C25927.9040609@gmail.com>

Hi,

As we are slowly progressing towards a more green test.winehq.org there are 
still some conformance tests that fail either on all platforms or with a 
specific configuration (like IE7).

This email is merely to list those and see if the SME's can have a look in these 
tests. (I didn't put to much effort in stuff below XP and left out user32)

Tests with timeouts
===================
- dplayx:dplayx fails with a timeout on all windows servers
- msi:install fails with a timeout on a lot of windows servers

Tests that fail with IE7 installed
==================================
- hlink:hlink has a consistent 8 failures on servers with IE7
- mshtml:htmldoc has 8 failures on servers with IE7 (and more, but also on others)
- shdocvw:webbrowser has 3 failures on servers with IE7.

Tests that fail starting with a specific OS (or level)
======================================================
- msi:package has 16 failures on XP-SP3+ and 16 extra on W2K3-SP2+
- ole32:storage32 has 24 failures on XP-SP3+ and 24 extra on W2K3-SP2+
(both the above have to do with access rights on files)

Tests that fail on Windows and succeed on Wine
==============================================
- ws2_32:sock has 1 consistent failure on all Windows boxes but not on Wine

Tests with failures on all Windows boxes
========================================
- riched20:editor has failures on all boxes
- urlmon:protocol either has timeouts or failures on all boxes
- urlmon:url fails with 6 consistent failures on all boxes

The above is a subset of all the failures and are not the easy ones. There are 
still loads of tests that fail on only 1 OS or even on 1 server.

-- 
Cheers,

Paul.


From dank at kegel.com  Sat Sep  6 06:43:49 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 6 Sep 2008 04:43:49 -0700
Subject: Fixing the conformance tests
Message-ID: <a71bd89a0809060443u2745148axe4012d6150e2f152@mail.gmail.com>

Paul V. wrote:
> As we are slowly progressing towards a more green
> test.winehq.org there are still some conformance tests
> that fail either on all platforms or with a specific configuration (like IE7).

Here's some data.
On my new box (CPU: Core 2 Duo e8400,
graphics: nVidia Corporation GeForce 8500 GT (rev a1)
window manager: metacity 2.25.0 built from source)
distro: 32 bit Hardy), out of 212 full runs of 'make -k test',
here's a count of failures by test name:

6 d3d9 device
6 comdlg32 printdlg
8 wininet http
14 kernel32 thread
19 comctl32 tooltips
24 ddraw visual
32 riched20 editor
46 user32 win
137 user32 input
215 user32 msg
216 dsound ds3d
216 winmm wave
216 urlmon protocol
216 dsound ds3d8

In my perfect world, those tests would all pass, every time, even if
you ran them 100 times.
That would make patchwatcher a lot more useful, since
then it wouldn't have to blacklist these tests.

Here's a little script to tickle just the flaky tests I found:

#!/bin/sh
try()
{
    cd dlls/$1/tests
    rm $2.ok
    make $2.ok
    cd ../../..
}
set -e
set -x
while true
do
    try comctl32 tooltips
    try comdlg32 printdlg
    try d3d9 device
    try ddraw visual
    try dsound ds3d8
    try kernel32 thread
    try riched20 editor
    try user32 input
    try user32 win
    try wininet http
done

This aborts for me in just five seconds.   Can *anyone* run it for
an hour without failure?  If so, how can I duplicate your setup?
- Dan


From winehacker at gmail.com  Sat Sep  6 09:11:01 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Sat, 6 Sep 2008 10:11:01 -0400
Subject: Fixing the conformance tests
In-Reply-To: <a71bd89a0809060443u2745148axe4012d6150e2f152@mail.gmail.com>
References: <a71bd89a0809060443u2745148axe4012d6150e2f152@mail.gmail.com>
Message-ID: <19e31a080809060711w497d575l2e56a43dc8f39d67@mail.gmail.com>

On Sat, Sep 6, 2008 at 7:43 AM, Dan Kegel <dank at kegel.com> wrote:
> This aborts for me in just five seconds.   Can *anyone* run it for
> an hour without failure?  If so, how can I duplicate your setup?

Ask Alexandre for a Ghost image of his machine. =P

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From slindeneau at gmail.com  Sat Sep  6 09:11:59 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Sat, 6 Sep 2008 23:11:59 +0900
Subject: [3/10 AcceptEx] Modifies accept_socket,
	allows it to take sock structures instead of handles
In-Reply-To: <a71bd89a0809040814j4c1e645dg439add1a8bd57fee@mail.gmail.com>
References: <a71bd89a0809040814j4c1e645dg439add1a8bd57fee@mail.gmail.com>
Message-ID: <81fd805b0809060711m206f85d7se0d7e707519ca311@mail.gmail.com>

Wouldn't you know it. Should I post the whole series to wine-patches
again or should I just post the two patch that causes the wineserver
to fail

(I committed a single line to the wrong patch)

On Fri, Sep 5, 2008 at 12:14 AM, Dan Kegel <dank at kegel.com> wrote:
> This patch seemed to cause wineserver to crash.  See
>
> http://kegel.com/wine/patchwatcher/results
> http://kegel.com/wine/patchwatcher/results/1033.log
> http://kegel.com/wine/patchwatcher/results/1034.log
>


From dank at kegel.com  Sat Sep  6 10:49:05 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 6 Sep 2008 08:49:05 -0700
Subject: [3/10 AcceptEx] Modifies accept_socket,
	allows it to take sock structures instead of handles
In-Reply-To: <81fd805b0809060711m206f85d7se0d7e707519ca311@mail.gmail.com>
References: <a71bd89a0809040814j4c1e645dg439add1a8bd57fee@mail.gmail.com>
	<81fd805b0809060711m206f85d7se0d7e707519ca311@mail.gmail.com>
Message-ID: <a71bd89a0809060849uea8a536n1618c66e9c8aea2d@mail.gmail.com>

patchwatcher prefers that you post patch series
that apply cleanly to current git, so to keep it
happy, post the whole series.

On Sat, Sep 6, 2008 at 7:11 AM, Scott Lindeneau <slindeneau at gmail.com> wrote:
> Wouldn't you know it. Should I post the whole series to wine-patches
> again or should I just post the two patch that causes the wineserver
> to fail
>
> (I committed a single line to the wrong patch)
>
> ~Scott
>
> On Fri, Sep 5, 2008 at 12:14 AM, Dan Kegel <dank at kegel.com> wrote:
>> This patch seemed to cause wineserver to crash.  See
>>
>> http://kegel.com/wine/patchwatcher/results
>> http://kegel.com/wine/patchwatcher/results/1033.log
>> http://kegel.com/wine/patchwatcher/results/1034.log
>>
>


From truiken at gmail.com  Sat Sep  6 15:21:15 2008
From: truiken at gmail.com (James Hawkins)
Date: Sat, 6 Sep 2008 15:21:15 -0500
Subject: Fixing the conformance tests
In-Reply-To: <48C25927.9040609@gmail.com>
References: <48C25927.9040609@gmail.com>
Message-ID: <22821af30809061321i56bbc42x5c27fbd40040c5d8@mail.gmail.com>

On Sat, Sep 6, 2008 at 5:19 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> Hi,
>
> As we are slowly progressing towards a more green test.winehq.org there are
> still some conformance tests that fail either on all platforms or with a
> specific configuration (like IE7).
>
> This email is merely to list those and see if the SME's can have a look in these
> tests. (I didn't put to much effort in stuff below XP and left out user32)
>
> Tests with timeouts
> ===================
> - dplayx:dplayx fails with a timeout on all windows servers

According to Ismael, he has a few fixes that cut the time needed in
half.  Ismael, what's the status on this?

http://winehq.org/pipermail/wine-devel/2008-August/068125.html

> - msi:install fails with a timeout on a lot of windows servers
>

Working on it, but it makes me seriously grumpy.

> Tests that fail with IE7 installed
> ==================================
> - hlink:hlink has a consistent 8 failures on servers with IE7

Mike M.'s gone, so someone is going to have to step up to the plate on
this one.  It won't be that hard.

> - mshtml:htmldoc has 8 failures on servers with IE7 (and more, but also on others)
> - shdocvw:webbrowser has 3 failures on servers with IE7.
>

Jacek has stated he doesn't have much time or interest in fixing
these, so the plate calls again.

> Tests that fail starting with a specific OS (or level)
> ======================================================
> - msi:package has 16 failures on XP-SP3+ and 16 extra on W2K3-SP2+
> - ole32:storage32 has 24 failures on XP-SP3+ and 24 extra on W2K3-SP2+
> (both the above have to do with access rights on files)
>

Pretty easy.  I have a patch to send in tomorrow.

> Tests that fail on Windows and succeed on Wine
> ==============================================
> - ws2_32:sock has 1 consistent failure on all Windows boxes but not on Wine
>

Last attempt got no comments:

http://winehq.org/pipermail/wine-patches/2008-May/054547.html

> Tests with failures on all Windows boxes
> ========================================
> - riched20:editor has failures on all boxes

These are all pretty easy to fix.

> - urlmon:protocol either has timeouts or failures on all boxes

Jacek has said this is a known bug, but the fix is not easy.  Jacek,
can you elaborate on that?  Maybe someone else can take a look at it
if you're too busy.

> - urlmon:url fails with 6 consistent failures on all boxes
>

Just need someone to look at the results and write up a fix.

> The above is a subset of all the failures and are not the easy ones. There are
> still loads of tests that fail on only 1 OS or even on 1 server.
>

Besides the urlmon:protocol bug, the rest are all pretty easy to fix
(referring to the issues you brought up in this message).

Folks, fixing the tests is a relatively easy task.   It's also a great
way to become better acquainted with the code base and the development
process if you're new to working on Wine.  For current developers, if
you've written tests in the past, check out test.winehq.org every once
in a while and see if any of your tests are failing.  And yes, we do
care about failures in win9x.  The average number of test failures
today is 64.7, which is down from 72.4 a month ago*.  Let's get that
down to zero.

* Averages of each windows version were then averaged together.

-- 
James Hawkins


From kgbricola at web.de  Sat Sep  6 16:37:08 2008
From: kgbricola at web.de (=?ISO-8859-1?Q?Rico_Sch=FCller?=)
Date: Sat, 06 Sep 2008 23:37:08 +0200
Subject: Fixing the conformance tests
In-Reply-To: <a71bd89a0809060443u2745148axe4012d6150e2f152@mail.gmail.com>
References: <a71bd89a0809060443u2745148axe4012d6150e2f152@mail.gmail.com>
Message-ID: <48C2F804.8050009@web.de>

Dan Kegel schrieb:
> This aborts for me in just five seconds.   Can *anyone* run it for
> an hour without failure?  If so, how can I duplicate your setup?
> - Dan
>   
These tests run without any issue for me (200 times) - in virtual 
desktop mode and fbo (haven't checked the default settings yet):
    comdlg32 printdlg
    dsound ds3d8
    riched20 editor
    wininet http

kernel32 thread: This crashes randomly.

comctl32 tooltips: This fails always in virtual desktop mode but in full 
screen mode the test runs without problems, it only fails if I move the 
mouse.

d3d9 device: This works with OffscreenRenderingMode = backbuffer or 
pbuffer without any problems. But with fbo it always crashes.

ddraw visual: This works with OffscreenRenderingMode = backbuffer. But 
not with pbuffer and fbo (random error).

user32 input: If I move the mouse in the upper left corner the test 
fails. It always fails if "Allow the window manager to control the 
windows" is enabled (this is the default, isn't it?) otherwise it runs fine.

user32 win: This always fails.

Cheers
Rico



From hverbeet at gmail.com  Sat Sep  6 18:26:16 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sun, 7 Sep 2008 01:26:16 +0200
Subject: Fixing the conformance tests
In-Reply-To: <48C2F804.8050009@web.de>
References: <a71bd89a0809060443u2745148axe4012d6150e2f152@mail.gmail.com>
	<48C2F804.8050009@web.de>
Message-ID: <d658b69e0809061626h1c4dadacme5021548061ae639@mail.gmail.com>

2008/9/6 Rico Sch?ller <kgbricola at web.de>:
> Dan Kegel schrieb:
>> This aborts for me in just five seconds.   Can *anyone* run it for
>> an hour without failure?  If so, how can I duplicate your setup?
>> - Dan
>>

> d3d9 device: This works with OffscreenRenderingMode = backbuffer or
> pbuffer without any problems. But with fbo it always crashes.
>
> ddraw visual: This works with OffscreenRenderingMode = backbuffer. But
> not with pbuffer and fbo (random error).
>

I know there are some issues with FBOs in recent nvidia drivers, but
personally I haven't seen these crashes since commit
4b6887b8e374826156305094ba547b42b5673da5. I just ran d3d9 device &
ddraw visual for an hour without crashing or failures.

For what it's worth:
OpenGL renderer string: GeForce Go 7900 GS/PCI/SSE2
OpenGL version string: 2.1.2 NVIDIA 177.70
KDE 3.5.9 on Gentoo

From slindeneau at gmail.com  Sun Sep  7 01:49:33 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Sun, 7 Sep 2008 15:49:33 +0900
Subject: Patchwatcher: failed regression tests: [6/10 AcceptEx] Implements
	sock_close_handle
In-Reply-To: <a71bd89a0809061714n1ca01e83rfbec1816bce6dc06@mail.gmail.com>
References: <E1Kc7Qa-00015Q-7L@super>
	<a71bd89a0809061714n1ca01e83rfbec1816bce6dc06@mail.gmail.com>
Message-ID: <81fd805b0809062349y1bf6a46h345b0fbdec100cb4@mail.gmail.com>

I don't understand, this patch doesn't cause any regressions on my
machine using the latest git (none of them do). The patch[6/10] is
(nearly) identical to the patch I submitted earlier (which did not
cause regressions). The only difference is in the hash. The next
patch[7/10] changes zero functionality because the function that is
implemented in [7/10] is unused at this point in time and patch [7/10]
passes the conformance tests.

scott at SocialSycotic:~/programming/wine/wine/patch$ diff
9.7.2/0006-Implements-sock_close_handle.txt
9-4.7/0006-Implements-sock_close_handle.txt
1c1
< From 40ae4098b66df1cb30dc77368ccfc1c495bb0b68 Mon Sep 17 00:00:00 2001
---
> From d1e0353beb8490bbd9b8818523c6d79daae510ff Mon Sep 17 00:00:00 2001
scott at SocialSycotic:~/programming/wine/wine/patch$

Using only patches [1/10 - 6/10] (The patches applied by patchwatcher
when it displays the failure):

../../../tools/runtest -q -P wine -M urlmon.dll -T ../../.. -p
urlmon_test.exe.so protocol.c && touch protocol.ok
fixme:wininet:InternetLockRequestFile STUB
fixme:wininet:InternetLockRequestFile STUB
fixme:wininet:InternetLockRequestFile STUB
fixme:wininet:InternetLockRequestFile STUB
../../../tools/runtest -q -P wine -M urlmon.dll -T ../../.. -p
urlmon_test.exe.so stream.c && touch stream.ok

As for the conformance test. I will look into how I have to change the
sock.c test loop.

~Scott

On Sun, Sep 7, 2008 at 9:14 AM, Dan Kegel <dank at kegel.com> wrote:
> This is interesting.   It does seem like that patch changed
> an error code and added a new failure to urlmon:protocol.c.
> Was this just a case of "I should have combined two of the
> patches in the series"?
>
> BTW, if you end up resending the patch series again,
> you might send the test case first (with todo_wine's),
> and then after the errors are fixed, remove the todo_wine's.
>
>
> On Sat, Sep 6, 2008 at 4:42 PM, Patchwatcher <patchwatcher at kegel.com> wrote:
>> Hi!  This is the experimental automated wine patchwatcher thingy.
>> The latest git sources were built and tested with your patch
>> "[6/10 AcceptEx] Implements sock_close_handle"
>> Result: the patch failed regression tests.
>>
>> You can retrieve the full build results at
>>  http://kegel.com/wine/patchwatcher/results/1162.log
>> and see the patch as parsed at
>>  http://kegel.com/wine/patchwatcher/results/1162.txt
>> See
>>  http://kegel.com/wine/patchwatcher/results
>> for more info.
>>
>>
>


From slindeneau at gmail.com  Sun Sep  7 02:04:05 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Sun, 7 Sep 2008 16:04:05 +0900
Subject: Patchwatcher: failed regression tests: [6/10 AcceptEx] Implements
	sock_close_handle
In-Reply-To: <81fd805b0809062349y1bf6a46h345b0fbdec100cb4@mail.gmail.com>
References: <E1Kc7Qa-00015Q-7L@super>
	<a71bd89a0809061714n1ca01e83rfbec1816bce6dc06@mail.gmail.com>
	<81fd805b0809062349y1bf6a46h345b0fbdec100cb4@mail.gmail.com>
Message-ID: <81fd805b0809070004s721b7a65h3bcc89adbb1b9aea@mail.gmail.com>

With regards to the info with patch [7/10] I see that it still fails
on patchwatcher, but patchwatcher ignores those. Does this mean that
it was causing this regression on patchwatcher before and that i never
noticed them because of a different regression? They still don't cause
regressions on my system however.

~Scott

On Sun, Sep 7, 2008 at 3:49 PM, Scott Lindeneau <slindeneau at gmail.com> wrote:
> I don't understand, this patch doesn't cause any regressions on my
> machine using the latest git (none of them do). The patch[6/10] is
> (nearly) identical to the patch I submitted earlier (which did not
> cause regressions). The only difference is in the hash. The next
> patch[7/10] changes zero functionality because the function that is
> implemented in [7/10] is unused at this point in time and patch [7/10]
> passes the conformance tests.
>
> scott at SocialSycotic:~/programming/wine/wine/patch$ diff
> 9.7.2/0006-Implements-sock_close_handle.txt
> 9-4.7/0006-Implements-sock_close_handle.txt
> 1c1
> < From 40ae4098b66df1cb30dc77368ccfc1c495bb0b68 Mon Sep 17 00:00:00 2001
> ---
>> From d1e0353beb8490bbd9b8818523c6d79daae510ff Mon Sep 17 00:00:00 2001
> scott at SocialSycotic:~/programming/wine/wine/patch$
>
> Using only patches [1/10 - 6/10] (The patches applied by patchwatcher
> when it displays the failure):
>
> ../../../tools/runtest -q -P wine -M urlmon.dll -T ../../.. -p
> urlmon_test.exe.so protocol.c && touch protocol.ok
> fixme:wininet:InternetLockRequestFile STUB
> fixme:wininet:InternetLockRequestFile STUB
> fixme:wininet:InternetLockRequestFile STUB
> fixme:wininet:InternetLockRequestFile STUB
> ../../../tools/runtest -q -P wine -M urlmon.dll -T ../../.. -p
> urlmon_test.exe.so stream.c && touch stream.ok
>
> As for the conformance test. I will look into how I have to change the
> sock.c test loop.
>
> ~Scott
>
> On Sun, Sep 7, 2008 at 9:14 AM, Dan Kegel <dank at kegel.com> wrote:
>> This is interesting.   It does seem like that patch changed
>> an error code and added a new failure to urlmon:protocol.c.
>> Was this just a case of "I should have combined two of the
>> patches in the series"?
>>
>> BTW, if you end up resending the patch series again,
>> you might send the test case first (with todo_wine's),
>> and then after the errors are fixed, remove the todo_wine's.
>>
>>
>> On Sat, Sep 6, 2008 at 4:42 PM, Patchwatcher <patchwatcher at kegel.com> wrote:
>>> Hi!  This is the experimental automated wine patchwatcher thingy.
>>> The latest git sources were built and tested with your patch
>>> "[6/10 AcceptEx] Implements sock_close_handle"
>>> Result: the patch failed regression tests.
>>>
>>> You can retrieve the full build results at
>>>  http://kegel.com/wine/patchwatcher/results/1162.log
>>> and see the patch as parsed at
>>>  http://kegel.com/wine/patchwatcher/results/1162.txt
>>> See
>>>  http://kegel.com/wine/patchwatcher/results
>>> for more info.
>>>
>>>
>>
>


From kgbricola at web.de  Sun Sep  7 04:04:53 2008
From: kgbricola at web.de (=?UTF-8?B?UmljbyBTY2jDvGxsZXI=?=)
Date: Sun, 07 Sep 2008 11:04:53 +0200
Subject: Fixing the conformance tests
In-Reply-To: <d658b69e0809061626h1c4dadacme5021548061ae639@mail.gmail.com>
References: <a71bd89a0809060443u2745148axe4012d6150e2f152@mail.gmail.com>	
	<48C2F804.8050009@web.de>
	<d658b69e0809061626h1c4dadacme5021548061ae639@mail.gmail.com>
Message-ID: <48C39935.2000807@web.de>

Henri Verbeet schrieb:
> 2008/9/6 Rico Sch?ller <kgbricola at web.de>:
>   
>> Dan Kegel schrieb:
>>     
>>> This aborts for me in just five seconds.   Can *anyone* run it for
>>> an hour without failure?  If so, how can I duplicate your setup?
>>> - Dan
>>>
>>>       
>
>   
>> d3d9 device: This works with OffscreenRenderingMode = backbuffer or
>> pbuffer without any problems. But with fbo it always crashes.
>>
>> ddraw visual: This works with OffscreenRenderingMode = backbuffer. But
>> not with pbuffer and fbo (random error).
>>
>>     
>
> I know there are some issues with FBOs in recent nvidia drivers, but
> personally I haven't seen these crashes since commit
> 4b6887b8e374826156305094ba547b42b5673da5. I just ran d3d9 device &
> ddraw visual for an hour without crashing or failures.
>
> For what it's worth:
> OpenGL renderer string: GeForce Go 7900 GS/PCI/SSE2
> OpenGL version string: 2.1.2 NVIDIA 177.70
> KDE 3.5.9 on Gentoo
>   
I updated my drivers but it is the same thing.

d3d9 device uses 100%cpu (didn't go further) and I have to kill them in 
test_depthstenciltest(). This is the problematic code (only with fbo):
    hr = IDirect3DDevice9_SetDepthStencilSurface(pDevice, NULL);
    ok(hr == D3D_OK, "IDirect3DDevice9_SetDepthStencilSurface failed 
with %08x\n", hr);

ddraw visual fails in "if(!D3D1_createObjects()) {" and in 
"D3D3_ViewportClearTest();" with a crash. I'll take a closer look at 
this two things.

OpenGL renderer string: GeForce 8800 GTS/PCI/SSE2
OpenGL version string: 2.1.2 NVIDIA 177.70
gnome 2.22.3 on FC9 (x86_64)


From truiken at gmail.com  Sun Sep  7 05:09:00 2008
From: truiken at gmail.com (James Hawkins)
Date: Sun, 7 Sep 2008 05:09:00 -0500
Subject: [1/2] hlink/tests: display the expected data,
	as well as the actual data.
In-Reply-To: <3f4fd2640809070256j260f0c17ifc459e8cbfe7654b@mail.gmail.com>
References: <3f4fd2640809070256j260f0c17ifc459e8cbfe7654b@mail.gmail.com>
Message-ID: <22821af30809070309y31d7a3b9l3460751968a94057@mail.gmail.com>

On Sun, Sep 7, 2008 at 4:56 AM, Reece Dunn <msclrhd at googlemail.com> wrote:
> This improves the error reporting for the hlink tests.
>

I think you need to think this one over.  Why would we care to display
the expected data, when the expected data is in the tests?  For simple
tests, e.g. last errors or simple integer results, displaying the
expected data makes it easier to understand the returned value.  On
the other hand, for the hlink tests, the expected binary data adds no
value to the output.

-- 
James Hawkins


From msclrhd at googlemail.com  Sun Sep  7 05:15:36 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Sun, 7 Sep 2008 11:15:36 +0100
Subject: [1/2] hlink/tests: display the expected data,
	as well as the actual data.
In-Reply-To: <22821af30809070309y31d7a3b9l3460751968a94057@mail.gmail.com>
References: <3f4fd2640809070256j260f0c17ifc459e8cbfe7654b@mail.gmail.com>
	<22821af30809070309y31d7a3b9l3460751968a94057@mail.gmail.com>
Message-ID: <3f4fd2640809070315v60a10ed4t89aa2724f1229c19@mail.gmail.com>

2008/9/7 James Hawkins <truiken at gmail.com>:
> On Sun, Sep 7, 2008 at 4:56 AM, Reece Dunn <msclrhd at googlemail.com> wrote:
>> This improves the error reporting for the hlink tests.
>
> I think you need to think this one over.  Why would we care to display
> the expected data, when the expected data is in the tests?  For simple
> tests, e.g. last errors or simple integer results, displaying the
> expected data makes it easier to understand the returned value.  On
> the other hand, for the hlink tests, the expected binary data adds no
> value to the output.

Ok, I'll remove this one and just provide the 2nd patch.

I'm currently fixing the secur32:schannel tests, so I'll do that once
those have been addressed.

Thanks,
- Reece


From paul.vriens.wine at gmail.com  Sun Sep  7 05:54:34 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Sun, 07 Sep 2008 12:54:34 +0200
Subject: Fixing the conformance tests
In-Reply-To: <22821af30809061321i56bbc42x5c27fbd40040c5d8@mail.gmail.com>
References: <48C25927.9040609@gmail.com>
	<22821af30809061321i56bbc42x5c27fbd40040c5d8@mail.gmail.com>
Message-ID: <48C3B2EA.4060803@gmail.com>

James Hawkins wrote:
> On Sat, Sep 6, 2008 at 5:19 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>> Hi,
>>
>> As we are slowly progressing towards a more green test.winehq.org there are
>> still some conformance tests that fail either on all platforms or with a
>> specific configuration (like IE7).
>>
>> This email is merely to list those and see if the SME's can have a look in these
>> tests. (I didn't put to much effort in stuff below XP and left out user32)
>>
>> Tests with timeouts
>> ===================
>> - dplayx:dplayx fails with a timeout on all windows servers
> 
> According to Ismael, he has a few fixes that cut the time needed in
> half.  Ismael, what's the status on this?
> 
> http://winehq.org/pipermail/wine-devel/2008-August/068125.html
> 

Unfortunately half won't do. I've tested this on an XP of mine and it 
already took 8 minutes before it crashed. (I'm very interested in the 
results on Wine once most of the dplayx stuff gets implemented.)

>> - mshtml:htmldoc has 8 failures on servers with IE7 (and more, but also on others)
>> - shdocvw:webbrowser has 3 failures on servers with IE7.
>>
> 
> Jacek has stated he doesn't have much time or interest in fixing
> these, so the plate calls again.

Time is a valid argument. No interest isn't. How can we be sure to 
implement the correct stuff if the conformance tests fail? (At some 
point in the not to far future we could only have IE7 boxes where the 
tests are run).

> Folks, fixing the tests is a relatively easy task.   It's also a great
> way to become better acquainted with the code base and the development
> process if you're new to working on Wine.  For current developers, if
> you've written tests in the past, check out test.winehq.org every once
> in a while and see if any of your tests are failing.  And yes, we do
> care about failures in win9x.  The average number of test failures
> today is 64.7, which is down from 72.4 a month ago*.  Let's get that
> down to zero.
> 

+1

-- 
Cheers,

Paul.


From lats at yless4u.com.au  Sun Sep  7 07:26:44 2008
From: lats at yless4u.com.au (Jeff Latimer)
Date: Sun, 07 Sep 2008 22:26:44 +1000
Subject: user32: Resend Check for NULL pData in DdeClientTransAction
	expectingto be passed a handle
In-Reply-To: <8C4080DC70E2461A9353EC603709B78E@DMITRY>
References: <48C22DB2.8030200@yless4u.com.au>
	<8C4080DC70E2461A9353EC603709B78E@DMITRY>
Message-ID: <48C3C884.9050701@yless4u.com.au>

Dmitry Timoshkov wrote:
>> +    if (pData == NULL)
>> +    {
>> +        if (cbData == (DWORD)-1)
>> +            pConv->instance->lastError = DMLERR_INVALIDPARAMETER;
>> +        else
>> +            pConv->instance->lastError = DMLERR_MEMORY_ERROR;
>> +        return NULL;
>> +    }
>
> Alexandre suggested to use the existing 'if (cbData == (DWORD)-1)' block,
> not introduce a new one.
True, though when looking how we handle invalid parameters in most other 
code, the check is upfront where possible and return is as quickly as 
possible.  In this case it looks a lot cleaner and more understandable 
to put in the extra block rather than to work it into the logic.  It 
looks like more elses and I would have to handle the  
WDML_AllocTransaction as it is not be needed if pData was NULL.  It 
seems to complicate the logic and I don't see the benefit.
>
> The formatting of the above block is strange. Set the tab size in your
> editor to 8 and you will see the mess.
True, I generally use 4 for the tabstop but I can fix that.

Jeff




From dank at kegel.com  Sun Sep  7 08:11:07 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 7 Sep 2008 06:11:07 -0700
Subject: Patchwatcher: failed regression tests: [6/10 AcceptEx] Implements
	sock_close_handle
In-Reply-To: <81fd805b0809070004s721b7a65h3bcc89adbb1b9aea@mail.gmail.com>
References: <E1Kc7Qa-00015Q-7L@super>
	<a71bd89a0809061714n1ca01e83rfbec1816bce6dc06@mail.gmail.com>
	<81fd805b0809062349y1bf6a46h345b0fbdec100cb4@mail.gmail.com>
	<81fd805b0809070004s721b7a65h3bcc89adbb1b9aea@mail.gmail.com>
Message-ID: <a71bd89a0809070611g5abab255wa822c211286c6c5d@mail.gmail.com>

That test almost always fails, but you managed to get
it to fail in two new ways.  patchwatcher has a novelty
filter, and ignores known failure messages.  Since
your code triggered new,different failure messages,
it got flagged.  It's possible that the new failure mode
is semirare, so you might have to run the test over
and over again in a loop for a while to catch it.
- Dan

On Sun, Sep 7, 2008 at 12:04 AM, Scott Lindeneau <slindeneau at gmail.com> wrote:
> With regards to the info with patch [7/10] I see that it still fails
> on patchwatcher, but patchwatcher ignores those. Does this mean that
> it was causing this regression on patchwatcher before and that i never
> noticed them because of a different regression? They still don't cause
> regressions on my system however.
>
> ~Scott
>
> On Sun, Sep 7, 2008 at 3:49 PM, Scott Lindeneau <slindeneau at gmail.com> wrote:
>> I don't understand, this patch doesn't cause any regressions on my
>> machine using the latest git (none of them do). The patch[6/10] is
>> (nearly) identical to the patch I submitted earlier (which did not
>> cause regressions). The only difference is in the hash. The next
>> patch[7/10] changes zero functionality because the function that is
>> implemented in [7/10] is unused at this point in time and patch [7/10]
>> passes the conformance tests.
>>
>> scott at SocialSycotic:~/programming/wine/wine/patch$ diff
>> 9.7.2/0006-Implements-sock_close_handle.txt
>> 9-4.7/0006-Implements-sock_close_handle.txt
>> 1c1
>> < From 40ae4098b66df1cb30dc77368ccfc1c495bb0b68 Mon Sep 17 00:00:00 2001
>> ---
>>> From d1e0353beb8490bbd9b8818523c6d79daae510ff Mon Sep 17 00:00:00 2001
>> scott at SocialSycotic:~/programming/wine/wine/patch$
>>
>> Using only patches [1/10 - 6/10] (The patches applied by patchwatcher
>> when it displays the failure):
>>
>> ../../../tools/runtest -q -P wine -M urlmon.dll -T ../../.. -p
>> urlmon_test.exe.so protocol.c && touch protocol.ok
>> fixme:wininet:InternetLockRequestFile STUB
>> fixme:wininet:InternetLockRequestFile STUB
>> fixme:wininet:InternetLockRequestFile STUB
>> fixme:wininet:InternetLockRequestFile STUB
>> ../../../tools/runtest -q -P wine -M urlmon.dll -T ../../.. -p
>> urlmon_test.exe.so stream.c && touch stream.ok
>>
>> As for the conformance test. I will look into how I have to change the
>> sock.c test loop.
>>
>> ~Scott
>>
>> On Sun, Sep 7, 2008 at 9:14 AM, Dan Kegel <dank at kegel.com> wrote:
>>> This is interesting.   It does seem like that patch changed
>>> an error code and added a new failure to urlmon:protocol.c.
>>> Was this just a case of "I should have combined two of the
>>> patches in the series"?
>>>
>>> BTW, if you end up resending the patch series again,
>>> you might send the test case first (with todo_wine's),
>>> and then after the errors are fixed, remove the todo_wine's.
>>>
>>>
>>> On Sat, Sep 6, 2008 at 4:42 PM, Patchwatcher <patchwatcher at kegel.com> wrote:
>>>> Hi!  This is the experimental automated wine patchwatcher thingy.
>>>> The latest git sources were built and tested with your patch
>>>> "[6/10 AcceptEx] Implements sock_close_handle"
>>>> Result: the patch failed regression tests.
>>>>
>>>> You can retrieve the full build results at
>>>>  http://kegel.com/wine/patchwatcher/results/1162.log
>>>> and see the patch as parsed at
>>>>  http://kegel.com/wine/patchwatcher/results/1162.txt
>>>> See
>>>>  http://kegel.com/wine/patchwatcher/results
>>>> for more info.
>>>>
>>>>
>>>
>>
>


From dmitry at codeweavers.com  Sun Sep  7 11:52:48 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 8 Sep 2008 01:52:48 +0900
Subject: wineboot: Basic RunOnceEx support v2 (with patch)
References: <48C2BAAE.2020600@gmail.com>
Message-ID: <F904F5414C844AEDA85ACEFC4C406913@DMITRY>

"Johan Dahlin" <jdahlin at gmail.com> wrote:

> +typedef HRESULT WINAPI (*DLLREGISTER)          (void);
> +typedef HRESULT WINAPI (*DLLINSTALL)           (BOOL,LPCWSTR);

This is still not right, have a look at other places that use pointers
to the exported win32 APIs.

> +typedef enum {
> +  ROEF_DISABLED = 0x00000000,
> +  ROEF_SHELLSTATUS = 0x00000004,
> +  ROEF_NOERRORDIALOGS = 0x00000008,
> +  ROEF_ERRORLOG = 0x00000010,
> +  ROEF_EXECUTELOG = 0x00000020,
> +  ROEF_NOEXCTRAP = 0x00000040,
> +  ROEF_NOSTATUSDIALOG = 0x00000080
> +} RunOnceExFlags;

Please use 4 spaces as an indentation like existing code does, here and
everywhere else.

> +static VOID *LoadProc(WCHAR* strDllW, const char* procName, HMODULE* DllHandle)
> +{
> +    VOID* (*proc)(void);

Why not use just 'void *' as a type for proc, since that's what you are
casting it to and returning to the caller anyway? Also using 'VOID' instead
of 'void' is not justified.


-- 
Dmitry.


From razielmine at gmail.com  Sun Sep  7 12:08:43 2008
From: razielmine at gmail.com (Ismael Barros)
Date: Sun, 7 Sep 2008 19:08:43 +0200
Subject: Fixing the conformance tests
In-Reply-To: <22821af30809061321i56bbc42x5c27fbd40040c5d8@mail.gmail.com>
References: <48C25927.9040609@gmail.com>
	<22821af30809061321i56bbc42x5c27fbd40040c5d8@mail.gmail.com>
Message-ID: <82e274890809071008s2d3212c6hf41942ec4f56df9@mail.gmail.com>

On 9/6/08, James Hawkins <truiken at gmail.com> wrote:
>> Tests with timeouts
>> ===================
>> - dplayx:dplayx fails with a timeout on all windows servers
>
> According to Ismael, he has a few fixes that cut the time needed in
> half.  Ismael, what's the status on this?
>
> http://winehq.org/pipermail/wine-devel/2008-August/068125.html

I managed to cut the time (in 3/4, if I recall correctly) just
changing a default timeout value in a function, but times were still
bigger than desired (around 7 minutes for all tests, I think).

Then I tried to run all tests concurrently, but it looks like dplay
doesn't like concurrency too much, in my Windows XP I started seeing
~200 errors in tests that produce 0 errors when run secuentially. When
running like only the 4 first tests at a time, it somtimes produced
errors, sometimes didn't, and I'm afraid random results in tests are
not really liked.

This attempt to make the tests concurrent can be found at
http://repo.or.cz/w/wine/gsoc_dplay.git

I'll try to figure out how to solve this, but right now and until next
week I'll be busy with exams, and even after that I won't have much
time to spend on wine. If somebody wants to quickly get rid of those
errors for now, it'd be okay to comment the test calls out in the
START_TEST of tests/dplay.c, I'll re-enable them when I find a
solution.

About the errors in non-XP versions of Windows, I suppose I'll have to
get and virtualize them to run the tests against them.

Cheers
Ismael


From jasonspiro4 at gmail.com  Sun Sep  7 12:40:21 2008
From: jasonspiro4 at gmail.com (Jason Spiro)
Date: Sun, 7 Sep 2008 17:40:21 +0000 (UTC)
Subject: 1st resend: Can we import MSConfig from ReactOS? (was:
	=?utf-8?b?YXV0b3J1bglwZXJoYXBz?= dangerous)
References: <c241693f0809050718m7a8c7cf9x8981446e1dab8b0c@mail.gmail.com>
	<87zlmmfyiv.fsf@wine.dyndns.org>
	<c241693f0809051204xaa562e6wd9147adcb17e5057@mail.gmail.com>
Message-ID: <loom.20080907T173845-120@post.gmane.org>

I wrote:
> [...] msconfig is a simple GUI utility for changing certain Registry
> settings like AutoRun items and such.

I used the wrong terminology when I said "AutoRun items".  I should've said
"startup items", i.e. HKLM\Software\Microsoft\Windows\CurrentVersion\Run items
and other startup items.



From jasonspiro4 at gmail.com  Sun Sep  7 13:10:24 2008
From: jasonspiro4 at gmail.com (Jason Spiro)
Date: Sun, 7 Sep 2008 18:10:24 +0000 (UTC)
Subject: Adding Flawfinder to Patchwatcher
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
	<1096648c0808310603k2b5c2be9if93a9a5b77cdfd44@mail.gmail.com>
Message-ID: <loom.20080907T175913-400@post.gmane.org>

Rob Shearman <robertshearman <at> gmail.com> wrote:
> Coverity and Prefast are both static analysis tools with a bit more
> intelligence that identify bad code rather than just using "bad"
> functions.

I'm pretty sure Coverity's tool, Prevent, costs money to buy.  IIRC if the
maintainers of an OSS project ask them to, they will set their
http://scan.coverity.com server to run a scan on that project's code and upload
the scan results to the web at no charge.  But their tool will always remain
closed-source (unmodifiable) software.

Prefast is closed-source freeware for Windows.  IIRC they ship it as part of a
package called "Prefast for Drivers".  The package includes Prefast, plus a
Prefast plugin for scanning Windows hardware drivers.  You don't have to use the
plugin.

> Other people may be able to suggest more good tools.

AFAIK "splint" is one of the most popular OSS static analysis tools, but I've
never really used it.  Has anyone here used it?  On the flawfinder homepage, it
says that splint does deeper analysis than flawfinder.  It says it "...works
somewhat like lint, searching for probable errors; to really use it, developers
need to add additional annotations to help the tool identify problems. This is a
very mature program, widely used, and one you can start using right away on
'real programs'."



From kgbricola at web.de  Sun Sep  7 13:21:43 2008
From: kgbricola at web.de (=?UTF-8?B?UmljbyBTY2jDvGxsZXI=?=)
Date: Sun, 07 Sep 2008 20:21:43 +0200
Subject: Fixing the conformance tests
In-Reply-To: <d658b69e0809061626h1c4dadacme5021548061ae639@mail.gmail.com>
References: <a71bd89a0809060443u2745148axe4012d6150e2f152@mail.gmail.com>	
	<48C2F804.8050009@web.de>
	<d658b69e0809061626h1c4dadacme5021548061ae639@mail.gmail.com>
Message-ID: <48C41BB7.9090701@web.de>

Henri Verbeet schrieb:
> 2008/9/6 Rico Sch?ller <kgbricola at web.de>:
>   
>> Dan Kegel schrieb:
>>     
>>> This aborts for me in just five seconds.   Can *anyone* run it for
>>> an hour without failure?  If so, how can I duplicate your setup?
>>> - Dan
>>>
>>>       
>
>   
>> d3d9 device: This works with OffscreenRenderingMode = backbuffer or
>> pbuffer without any problems. But with fbo it always crashes.
>>
>> ddraw visual: This works with OffscreenRenderingMode = backbuffer. But
>> not with pbuffer and fbo (random error).
>>
>>     
>
> I know there are some issues with FBOs in recent nvidia drivers, but
> personally I haven't seen these crashes since commit
> 4b6887b8e374826156305094ba547b42b5673da5. I just ran d3d9 device &
> ddraw visual for an hour without crashing or failures.
>
> For what it's worth:
> OpenGL renderer string: GeForce Go 7900 GS/PCI/SSE2
> OpenGL version string: 2.1.2 NVIDIA 177.70
> KDE 3.5.9 on Gentoo
>   
It's exactly that patch which broke this test for me!

Cheers
Rico


From mpartap at gmx.net  Sun Sep  7 13:36:19 2008
From: mpartap at gmx.net (Marcel Partap)
Date: Sun, 07 Sep 2008 20:36:19 +0200
Subject: 1st resend: Can we import MSConfig from ReactOS? (was: autorun
	perhaps dangerous)
In-Reply-To: <loom.20080907T173845-120@post.gmane.org>
References: <c241693f0809050718m7a8c7cf9x8981446e1dab8b0c@mail.gmail.com>	<87zlmmfyiv.fsf@wine.dyndns.org>	<c241693f0809051204xaa562e6wd9147adcb17e5057@mail.gmail.com>
	<loom.20080907T173845-120@post.gmane.org>
Message-ID: <48C41F23.8010402@gmx.net>

Jason Spiro wrote:
> I wrote:
>> [...] msconfig is a simple GUI utility for changing certain Registry
>> settings like AutoRun items and such.
In the meantime: the autoruns.exe tool from the ingenious Sysinternals
Suite (bought by M$) does seem to work on wine, have a look at it..
regards_marcel.

-- 
 "Obstacles are those frightful things you see when you take
  your eyes off your goal."         -- Henry Ford (1863-1947)

  Change the world! Vote revolution: http://hfopi.org/vote-future


From bunglehead at gmail.com  Sun Sep  7 14:07:02 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sun, 07 Sep 2008 23:07:02 +0400
Subject: Changing configure.ac script
Message-ID: <48C42656.5050408@gmail.com>

Is there any way not to include a regenerated 'configure' script into a 
patch but be able to 'git fetch' it when it's changed remotely in repo?

As I see there is no need to patch a 'configure' file in repository 
since it's always regenerated when 'configure.ac' changed.

Thanks in advance.


From wine-devel at kievinfo.com  Sun Sep  7 14:18:08 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 07 Sep 2008 13:18:08 -0600
Subject: Changing configure.ac script
In-Reply-To: <48C42656.5050408@gmail.com>
References: <48C42656.5050408@gmail.com>
Message-ID: <48C428F0.2080309@kievinfo.com>

Nikolay Sivov wrote:
> Is there any way not to include a regenerated 'configure' script into a 
> patch but be able to 'git fetch' it when it's changed remotely in repo?
> 
> As I see there is no need to patch a 'configure' file in repository 
> since it's always regenerated when 'configure.ac' changed.

Create two patches. One with changes to configure.ac and possibly other
changes another with configure only. Of course you send only former to
wine-patch. Then if you version of automake matches to the one AJ uses, git
rebase will automatically throw away the later patch for being already
applied upstream. Or you can always skip this patch during rebase.

Same applies to any other automatically generated files.

Vitaliy



From bunglehead at gmail.com  Sun Sep  7 14:29:30 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sun, 07 Sep 2008 23:29:30 +0400
Subject: Changing configure.ac script
In-Reply-To: <48C428F0.2080309@kievinfo.com>
References: <48C42656.5050408@gmail.com> <48C428F0.2080309@kievinfo.com>
Message-ID: <48C42B9A.9010608@gmail.com>

Vitaliy Margolen wrote:
> Nikolay Sivov wrote:
>   
>> Is there any way not to include a regenerated 'configure' script into a 
>> patch but be able to 'git fetch' it when it's changed remotely in repo?
>>
>> As I see there is no need to patch a 'configure' file in repository 
>> since it's always regenerated when 'configure.ac' changed.
>>     
>
> Create two patches. One with changes to configure.ac and possibly other
> changes another with configure only. Of course you send only former to
> wine-patch. Then if you version of automake matches to the one AJ uses, git
> rebase will automatically throw away the later patch for being already
> applied upstream. Or you can always skip this patch during rebase.
>
> Same applies to any other automatically generated files.
>
> Vitaliy
>   
So I first of all send the one with new configure.ac and then second 
with regenerated configure (by mine autoconf).
Alexandre applies them as series and then regenerates by his autoconf? 
Or he regenerate it after first one? That will lead
to a second patch to fail if our versions (i.e. autoconf outputs) are 
not the same.




From wine-devel at kievinfo.com  Sun Sep  7 14:34:20 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 07 Sep 2008 13:34:20 -0600
Subject: Changing configure.ac script
In-Reply-To: <48C42B9A.9010608@gmail.com>
References: <48C42656.5050408@gmail.com> <48C428F0.2080309@kievinfo.com>
	<48C42B9A.9010608@gmail.com>
Message-ID: <48C42CBC.8020506@kievinfo.com>

Nikolay Sivov wrote:
> Vitaliy Margolen wrote:
>> Nikolay Sivov wrote:
>>  
>>> Is there any way not to include a regenerated 'configure' script into
>>> a patch but be able to 'git fetch' it when it's changed remotely in
>>> repo?
>>>
>>> As I see there is no need to patch a 'configure' file in repository
>>> since it's always regenerated when 'configure.ac' changed.
>>>     
>>
>> Create two patches. One with changes to configure.ac and possibly other
>> changes another with configure only. Of course you send only former to
>> wine-patch. Then if you version of automake matches to the one AJ
>> uses, git
>> rebase will automatically throw away the later patch for being already
>> applied upstream. Or you can always skip this patch during rebase.
>>
>> Same applies to any other automatically generated files.
>>
> So I first of all send the one with new configure.ac and then second
> with regenerated configure (by mine autoconf).

No you don't need to send patches for any automatically generated files. So
that means you do not send patch with changes to configure. Just keep it in
your tree until your other patch(es) get committed.

Vitaliy


From bunglehead at gmail.com  Sun Sep  7 14:40:16 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sun, 07 Sep 2008 23:40:16 +0400
Subject: Changing configure.ac script
In-Reply-To: <48C42CBC.8020506@kievinfo.com>
References: <48C42656.5050408@gmail.com> <48C428F0.2080309@kievinfo.com>
	<48C42B9A.9010608@gmail.com> <48C42CBC.8020506@kievinfo.com>
Message-ID: <48C42E20.4080804@gmail.com>

Vitaliy Margolen wrote:
> Nikolay Sivov wrote:
>   
>> Vitaliy Margolen wrote:
>>     
>>> Nikolay Sivov wrote:
>>>  
>>>       
>>>> Is there any way not to include a regenerated 'configure' script into
>>>> a patch but be able to 'git fetch' it when it's changed remotely in
>>>> repo?
>>>>
>>>> As I see there is no need to patch a 'configure' file in repository
>>>> since it's always regenerated when 'configure.ac' changed.
>>>>     
>>>>         
>>> Create two patches. One with changes to configure.ac and possibly other
>>> changes another with configure only. Of course you send only former to
>>> wine-patch. Then if you version of automake matches to the one AJ
>>> uses, git
>>> rebase will automatically throw away the later patch for being already
>>> applied upstream. Or you can always skip this patch during rebase.
>>>
>>> Same applies to any other automatically generated files.
>>>
>>>       
>> So I first of all send the one with new configure.ac and then second
>> with regenerated configure (by mine autoconf).
>>     
>
> No you don't need to send patches for any automatically generated files. So
> that means you do not send patch with changes to configure. Just keep it in
> your tree until your other patch(es) get committed.
>
> Vitaliy
>
>   
Ok, thank you.



From marcus at rennboot.centrumbabylon.cz  Sun Sep  7 15:15:11 2008
From: marcus at rennboot.centrumbabylon.cz (Marcus Meissner)
Date: Sun, 7 Sep 2008 22:15:11 +0200
Subject: [PATCH] buffer overflow checking for string functions
In-Reply-To: <1096648c0809051444t3a4e178es2acceb6e2807d8f@mail.gmail.com>
References: <alpine.DEB.1.10.0809051234460.24905@amboise.dolphin>
	<1096648c0809051444t3a4e178es2acceb6e2807d8f@mail.gmail.com>
Message-ID: <20080907201511.GA27788@rennboot.centrumbabylon.cz>

On Fri, Sep 05, 2008 at 10:44:50PM +0100, Rob Shearman wrote:
> 2008/9/5 Francois Gouget <fgouget at free.fr>:
> > I have a few other concerns here:
> >  * Why do we need a macro here? I thought it was so that
> >   __builtin_object_size() could do its work, but the strcpy() functions
> >   above in the patch have no associated macro and they call
> >   __builtin_object_size() on their parameter which would seem to be
> >   poinless. So I must be misunderstanding something here.

The strcpy functions there are inline, so we can modify the inline version.

strcpy() itself is replaced by glibc headers (bits/string2.h and string3.h)
into either a __builtin_strcpy_chk call, which gcc knows how to handle.
(in earlier glibc/gcc versions with an additional macro wrapper).


> >  * It's customary to add some extra parenthesing in such macros:
> >      (src),(srclen),__builtin_object_size((src),0),

Yes, need to fix.

> >  * The macro itself can cause trouble in some cases. In Winelib
> >   code it can cause naming collisions with user functions (especially
> >   with class methods, though it may not be very likely here), which
> >   would especially be an issue with strcpy*(). Maybe it should be
> >   protected by something like a WINE_NO_OVERFLOW_CHECK macro?

So far we have no problems in Wine sourcecode. I could easily limit
it to be __WINESRC__ only.

> >  * The macro can also cause trouble in case its parameters have
> >   side-effects, like x++ or similar (though the __builtin_object_size()
> >   mentions returning -1 in case or side-effects). This could impact
> >   Wine too.

Need to fix, yes.

> I also have some questions:
> * Is there any runtime overhead of using __builtin_object_size and/or
> the __alloc_size__ attribute?

There is no runtime overhead.

__alloc_size__ is applied at compile time only for constant size
allocations (and carried along with the pointer inside GCC during compile).

__builtin_object_size is evaluated at compile time too. If it cannot
be determined, it will evaluate to -1.

> * If not and it's a compile time only thing, why can't these buffer
> overruns be detected at compile time instead of runtime (which
> obviously depends on test coverage)?

If you have a known-size destination buffer, but a variable source buffer
this cannot be detected.

If both are known-size at compile time, a compilation abort should be
possible.

Hmm, parts of the MBtoWC check at least could be made to fail at compile time,
like the bug I fixed some days ago.

This patch needs to go back to the drawing board ;)

Ciao, Marcus


From austinenglish at gmail.com  Sun Sep  7 16:50:01 2008
From: austinenglish at gmail.com (Austin English)
Date: Sun, 7 Sep 2008 16:50:01 -0500
Subject: itircl: add a stub for DllUnregisterServer
In-Reply-To: <b6bb06270809071208t66426c2cu928d8e285f3e07d3@mail.gmail.com>
References: <b6bb06270809071208t66426c2cu928d8e285f3e07d3@mail.gmail.com>
Message-ID: <b6bb06270809071450x161dd78fv8d5cac356d4b2796@mail.gmail.com>

Please ignore this patch. It's not ready, and not sure why it was sent yet...

-Austin

On Sun, Sep 7, 2008 at 2:08 PM, Austin English <austinenglish at gmail.com> wrote:
>
>


From truiken at gmail.com  Sun Sep  7 18:30:00 2008
From: truiken at gmail.com (James Hawkins)
Date: Sun, 7 Sep 2008 18:30:00 -0500
Subject: crypt32: fixed the testGetCertChain tests on Vista.
In-Reply-To: <3f4fd2640809070359w24e2dde0qa25a79a85550c8b3@mail.gmail.com>
References: <3f4fd2640809070359w24e2dde0qa25a79a85550c8b3@mail.gmail.com>
Message-ID: <22821af30809071630j6968a3b9lc2b271fc283d4743@mail.gmail.com>

On Sun, Sep 7, 2008 at 5:59 AM, Reece Dunn <msclrhd at googlemail.com> wrote:
> This fixes these crypt32:chain testGetCertChain tests on Vista and Windows 2008.
>

-    ok(!ret && GetLastError() == ERROR_INVALID_DATA,
-     "Expected ERROR_INVALID_DATA, got %d\n", GetLastError());
+    ok(!ret, "Expected CertGetCertificateChain to fail\n");
+    ok(GetLastError() == ERROR_INVALID_DATA ||
+       GetLastError() == CRYPT_E_ASN1_BADTAG /* Vista/win2k8 */,


I'm not NACK'ing this patch, but for future reference, please put
comments *after* the comma or logical OR marker, and each system
condition should be on its own line.  I've seen this in several
patches recently.  While it's syntactically OK, it looks wrong and
there's no need for everyone to have to play Find The Comma.  Yes
there are other places in the code where this happens, but that
doesn't make it correct or preferable.  For example, the following is
significantly easier to read:

    ok(result == ERROR_BUFFER_TOO_SMALL ||
        result == ERROR_INVALID_USER_BUFFER || /* win98 */
        result == ERROR_INVALID_DATA, /* Vista */
        "Expected ERROR_BUFFER_TOO_SMALL, got %08d\n", result);

than

    ok(result == ERROR_BUFFER_TOO_SMALL || result ==
ERROR_INVALID_USER_BUFFER /* win98 */ || result == ERROR_INVALID_DATA
/* Vista */,  "Expected ERROR_BUFFER_TOO_SMALL, got %08d\n", result);

-- 
James Hawkins


From dank at kegel.com  Sun Sep  7 19:25:40 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 7 Sep 2008 17:25:40 -0700
Subject: Coverity and Wine (was: re: Adding Flawfinder to Patchwatcher)
Message-ID: <a71bd89a0809071725o164708cekf07f081c2544d658@mail.gmail.com>

Jason wrote:
> I'm pretty sure Coverity's tool, Prevent, costs money to buy.
> IIRC if the maintainers of an OSS project ask them to,
> they will set their http://scan.coverity.com server to
> run a scan on that project's code and upload
> the scan results to the web at no charge

And they in fact do this for Wine.  We've fixed a number
of issues it found, see e.g.
http://marc.info/?l=wine-patches&w=2&r=1&s=coverity&q=b
There are lots more to fix.

The last scan they did was in late May, though.  They
say they migrated to new servers and have been
slowly bringing up all the OSS scans again.
They haven't given a target date for having Wine's scan back online yet.
- Dan


From juan.lang at gmail.com  Sun Sep  7 22:16:47 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sun, 7 Sep 2008 20:16:47 -0700
Subject: Adding Flawfinder to Patchwatcher
In-Reply-To: <loom.20080907T175913-400@post.gmane.org>
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
	<1096648c0808310603k2b5c2be9if93a9a5b77cdfd44@mail.gmail.com>
	<loom.20080907T175913-400@post.gmane.org>
Message-ID: <3a768c550809072016w55d13305pad3a31b49e4ff321@mail.gmail.com>

> AFAIK "splint" is one of the most popular OSS static analysis tools, but I've
> never really used it.  Has anyone here used it?  On the flawfinder homepage, it
> says that splint does deeper analysis than flawfinder.  It says it "...works
> somewhat like lint, searching for probable errors; to really use it, developers
> need to add additional annotations to help the tool identify problems. This is a
> very mature program, widely used, and one you can start using right away on
> 'real programs'."

splint is merely one of the first, but hardly one of the most popular.
 It requires far too much code annotation to be useful.  There are
other more recent static analysis tools (cqual, or more recently oink,
come to mind) that could be used, but they're not that useful "out of
the box."  Rules for common things would need to be written before the
tools would be useful.

The analysis Coverity did was pretty high quality in comparison to
other tools I've tried.  The trouble with Coverity's scans was lack of
developer time to analyze the results, I think.  Even a relatively
good tool has false positives, and it takes time sort out the real
bugs from the noise.

Also, smatch is based on the same paper (the Stanford checker,
metacomp) that Coverity's tool started as.  At least Michael Stefaniuc
uses it to some success around here, and it could be extended to cover
more cases.
--Juan


From paul.vriens.wine at gmail.com  Mon Sep  8 01:47:12 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Mon, 08 Sep 2008 08:47:12 +0200
Subject: Coverity and Wine (was: re: Adding Flawfinder to Patchwatcher)
In-Reply-To: <a71bd89a0809071725o164708cekf07f081c2544d658@mail.gmail.com>
References: <a71bd89a0809071725o164708cekf07f081c2544d658@mail.gmail.com>
Message-ID: <48C4CA70.4090307@gmail.com>

Dan Kegel wrote:
> Jason wrote:
>> I'm pretty sure Coverity's tool, Prevent, costs money to buy.
>> IIRC if the maintainers of an OSS project ask them to,
>> they will set their http://scan.coverity.com server to
>> run a scan on that project's code and upload
>> the scan results to the web at no charge
> 
> And they in fact do this for Wine.  We've fixed a number
> of issues it found, see e.g.
> http://marc.info/?l=wine-patches&w=2&r=1&s=coverity&q=b
> There are lots more to fix.
> 
> The last scan they did was in late May, though.  They
> say they migrated to new servers and have been
> slowly bringing up all the OSS scans again.
> They haven't given a target date for having Wine's scan back online yet.
> - Dan
> 
> 
> 
Or http://source.winehq.org/git/wine.git/?a=search&st=commit&s=coverity&sr=1

-- 
Cheers,

Paul.



From paul.vriens.wine at gmail.com  Mon Sep  8 02:22:35 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Mon, 08 Sep 2008 09:22:35 +0200
Subject: dsound: fix a few failing tests and a crash on 2008
In-Reply-To: <f5d9424f0809071447p84f0aafubcf6b0f5eb8a2ee@mail.gmail.com>
References: <f5d9424f0809071447p84f0aafubcf6b0f5eb8a2ee@mail.gmail.com>
Message-ID: <48C4D2BB.7090807@gmail.com>

Jeff Zaroyko wrote:
> 
> ------------------------------------------------------------------------
> 
> 
I found more or less the same thing for Vista a few days ago. Doing a 
IDirectSoundBuffer_Release sets the reference counter to zero but doesn't clear 
secondary. Is this something worthwhile to add a comment for (or a test)? It 
does seem important as it's a change of behavior starting with Vista?

-- 
Cheers,

Paul.


From kai.blin at gmail.com  Mon Sep  8 03:30:33 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Mon, 8 Sep 2008 10:30:33 +0200
Subject: Fixing the conformance tests
In-Reply-To: <22821af30809061321i56bbc42x5c27fbd40040c5d8@mail.gmail.com>
References: <48C25927.9040609@gmail.com>
	<22821af30809061321i56bbc42x5c27fbd40040c5d8@mail.gmail.com>
Message-ID: <200809081030.33558.kai.blin@gmail.com>

On Saturday 06 September 2008 22:21:15 James Hawkins wrote:

> > Tests that fail on Windows and succeed on Wine
> > ==============================================
> > - ws2_32:sock has 1 consistent failure on all Windows boxes but not on
> > Wine
>
> Last attempt got no comments:
>
> http://winehq.org/pipermail/wine-patches/2008-May/054547.html

Actually, Alexandre commented on this on IRC. I don't really recall his 
comment, but he didn't like the approach. I'll have some time to look into 
this again tomorrow, but I remember I quit posting new patches to this as I 
was out of ideas on how to fix it. A couple of bug reports seem to be related 
to this, I need to dig around some more. 

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080908/57347104/attachment.pgp 

From mah at jump-ing.de  Mon Sep  8 04:38:38 2008
From: mah at jump-ing.de (Markus Hitter)
Date: Mon, 8 Sep 2008 11:38:38 +0200
Subject: crypt32: fixed the testGetCertChain tests on Vista.
In-Reply-To: <22821af30809071630j6968a3b9lc2b271fc283d4743@mail.gmail.com>
References: <3f4fd2640809070359w24e2dde0qa25a79a85550c8b3@mail.gmail.com>
	<22821af30809071630j6968a3b9lc2b271fc283d4743@mail.gmail.com>
Message-ID: <1359D0ED-372A-4D6C-9A28-81D5ACFB9AE2@jump-ing.de>


Am 08.09.2008 um 01:30 schrieb James Hawkins:

> For example, the following is significantly easier to read:
>
>     ok(result == ERROR_BUFFER_TOO_SMALL ||
>         result == ERROR_INVALID_USER_BUFFER || /* win98 */
>         result == ERROR_INVALID_DATA, /* Vista */
>         "Expected ERROR_BUFFER_TOO_SMALL, got %08d\n", result);

Wouldn't it be even better to print the expected number in the same  
format as the actually received result?

          ...
          "Expected ERROR_BUFFER_TOO_SMALL (%08d), got %08d\n",
          ERROR_BUFFER_TOO_SMALL, result);

This should ease log reading as well.


MarKus




From truiken at gmail.com  Mon Sep  8 04:41:51 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 8 Sep 2008 04:41:51 -0500
Subject: crypt32: fixed the testGetCertChain tests on Vista.
In-Reply-To: <1359D0ED-372A-4D6C-9A28-81D5ACFB9AE2@jump-ing.de>
References: <3f4fd2640809070359w24e2dde0qa25a79a85550c8b3@mail.gmail.com>
	<22821af30809071630j6968a3b9lc2b271fc283d4743@mail.gmail.com>
	<1359D0ED-372A-4D6C-9A28-81D5ACFB9AE2@jump-ing.de>
Message-ID: <22821af30809080241y3a2978e9ndc4d3b957f5903d9@mail.gmail.com>

On Mon, Sep 8, 2008 at 4:38 AM, Markus Hitter <mah at jump-ing.de> wrote:
>
> Am 08.09.2008 um 01:30 schrieb James Hawkins:
>
>> For example, the following is significantly easier to read:
>>
>>    ok(result == ERROR_BUFFER_TOO_SMALL ||
>>        result == ERROR_INVALID_USER_BUFFER || /* win98 */
>>        result == ERROR_INVALID_DATA, /* Vista */
>>        "Expected ERROR_BUFFER_TOO_SMALL, got %08d\n", result);
>
> Wouldn't it be even better to print the expected number in the same format
> as the actually received result?
>

Yes, the %08d should just be %d....I just copied the first example I
could find in my git log.

>         ...
>         "Expected ERROR_BUFFER_TOO_SMALL (%08d), got %08d\n",
>         ERROR_BUFFER_TOO_SMALL, result);
>
> This should ease log reading as well.
>

I don't see how that would help.  The decimal values of error
constants aren't related in a meaningful way.  If you want to know the
decimal value of ERROR_BUFFER_TOO_SMALL, grep include/winerror.h.

-- 
James Hawkins


From lats at yless4u.com.au  Mon Sep  8 04:47:27 2008
From: lats at yless4u.com.au (Jeff Latimer)
Date: Mon, 08 Sep 2008 19:47:27 +1000
Subject: user32: Resend Check for NULL pData in DdeClientTransAction
	expectingto be passed a handle
In-Reply-To: <8C4080DC70E2461A9353EC603709B78E@DMITRY>
References: <48C22DB2.8030200@yless4u.com.au>
	<8C4080DC70E2461A9353EC603709B78E@DMITRY>
Message-ID: <48C4F4AF.7020004@yless4u.com.au>

Dmitry Timoshkov wrote:
>> +    if (pData == NULL)
>> +    {
>> +        if (cbData == (DWORD)-1)
>> +            pConv->instance->lastError = DMLERR_INVALIDPARAMETER;
>> +        else
>> +            pConv->instance->lastError = DMLERR_MEMORY_ERROR;
>> +        return NULL;
>> +    }
>
> Alexandre suggested to use the existing 'if (cbData == (DWORD)-1)' block,
> not introduce a new one.
True, though when looking how we handle invalid parameters in most other
code, the check is upfront where possible and return is as quickly as
possible.  In this case it looks a lot cleaner and more understandable
to put in the extra block rather than to work it into the logic.  It
looks like more elses and I would have to handle the
WDML_AllocTransaction as it is not be needed if pData was NULL.  It
seems to complicate the logic and I don't see the benefit.
>
> The formatting of the above block is strange. Set the tab size in your
> editor to 8 and you will see the mess.
True, I generally use 4 for the tabstop but I can fix that.

Jeff





From truiken at gmail.com  Mon Sep  8 05:02:52 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 8 Sep 2008 05:02:52 -0500
Subject: crypt32: fixed the testGetCertChain tests on Vista.
In-Reply-To: <22821af30809080241y3a2978e9ndc4d3b957f5903d9@mail.gmail.com>
References: <3f4fd2640809070359w24e2dde0qa25a79a85550c8b3@mail.gmail.com>
	<22821af30809071630j6968a3b9lc2b271fc283d4743@mail.gmail.com>
	<1359D0ED-372A-4D6C-9A28-81D5ACFB9AE2@jump-ing.de>
	<22821af30809080241y3a2978e9ndc4d3b957f5903d9@mail.gmail.com>
Message-ID: <22821af30809080302r430bd2eaufc5488ff0da08925@mail.gmail.com>

On Mon, Sep 8, 2008 at 4:41 AM, James Hawkins <truiken at gmail.com> wrote:
> On Mon, Sep 8, 2008 at 4:38 AM, Markus Hitter <mah at jump-ing.de> wrote:
>>
>> Am 08.09.2008 um 01:30 schrieb James Hawkins:
>>
>>> For example, the following is significantly easier to read:
>>>
>>>    ok(result == ERROR_BUFFER_TOO_SMALL ||
>>>        result == ERROR_INVALID_USER_BUFFER || /* win98 */
>>>        result == ERROR_INVALID_DATA, /* Vista */
>>>        "Expected ERROR_BUFFER_TOO_SMALL, got %08d\n", result);
>>
>> Wouldn't it be even better to print the expected number in the same format
>> as the actually received result?
>>
>
> Yes, the %08d should just be %d....I just copied the first example I
> could find in my git log.
>

I'm sorry, I thought you were asking about the %08d i.e. the format of
the value.  My answer to your actual question is no as explained in my
previous email.

-- 
James Hawkins


From julliard at winehq.org  Mon Sep  8 07:33:42 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 08 Sep 2008 14:33:42 +0200
Subject: winemenubuilder: eliminate wineshelllink
In-Reply-To: <alpine.DEB.1.10.0809051218120.18392@amboise.dolphin> (Francois
	Gouget's message of "Fri, 5 Sep 2008 13:20:30 +0200 (CEST)")
References: <9e89675b0809041230l5d4a71ddt99583b58ddcf78f5@mail.gmail.com>
	<alpine.DEB.1.10.0809051218120.18392@amboise.dolphin>
Message-ID: <87ljy2x1eh.fsf@wine.dyndns.org>

Francois Gouget <fgouget at free.fr> writes:

> What is the rational for eliminating wineshelllink?
>
> It seems to me that by eliminating it we are losing a lot of flexibility 
> for handling special setups (and there are a lot of these in menuing 
> systems).

We don't gain much flexibility by splitting functionality in a C half
and a shell half, but it adds a lot of complexity and an ill-defined
interface. The original design was to do everything in shell but that
turns out to not be possible, so doing everything in C is the next best
choice.

-- 
Alexandre Julliard
julliard at winehq.org


From jeffzaroyko at gmail.com  Mon Sep  8 07:35:48 2008
From: jeffzaroyko at gmail.com (Jeff Zaroyko)
Date: Mon, 8 Sep 2008 22:35:48 +1000
Subject: dsound: fix a few failing tests and a crash on 2008
In-Reply-To: <48C4D2BB.7090807@gmail.com>
References: <f5d9424f0809071447p84f0aafubcf6b0f5eb8a2ee@mail.gmail.com>
	<48C4D2BB.7090807@gmail.com>
Message-ID: <f5d9424f0809080535v755acab1jdb636d7f3129546c@mail.gmail.com>

On Mon, Sep 8, 2008 at 5:22 PM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> Jeff Zaroyko wrote:
>>
>> ------------------------------------------------------------------------
>>
>>
> I found more or less the same thing for Vista a few days ago. Doing a
> IDirectSoundBuffer_Release sets the reference counter to zero but doesn't
> clear secondary. Is this something worthwhile to add a comment for (or a
> test)? It does seem important as it's a change of behavior starting with
> Vista?
>
> --
> Cheers,
>
> Paul.
>

I've tested this on 95, 2003 and 2008 none of them appear to clear
secondary on Release.

The crash occurs on 2008 when the tests that are expected to fail on
other platforms succeed, since secondary is not NULL in the next check
to see if the buffer needs to be released it attempts to release an
already released buffer.  Initializing secondary to NULL before each
test gives some consistency.  I don't think any further comment or
test case is necessary.

Jeff


From aric at codeweavers.com  Mon Sep  8 08:30:37 2008
From: aric at codeweavers.com (Aric Stewart)
Date: Mon, 08 Sep 2008 08:30:37 -0500
Subject: imm32: Improve ImmGetCompositionString.
In-Reply-To: <48A28608.1060505@gmail.com>
References: <48A1E89D.90304@codeweavers.com> <48A28608.1060505@gmail.com>
Message-ID: <48C528FD.7020502@codeweavers.com>

So I have been banging my head against this test for a few weeks now.
There are just so many variables, what IME is on the windows box, what 
locale is set, and such. This all changes the behavior in a way that it 
is a headache to write a test that will demonstrate the behavior this 
fixes and also work on all the boxes (windows and wine) out there.

I can write a test that will already pass for almost everyone except for 
those people in a multibyte locale that demonstrates the issue (such as 
Japanese).  Would that be an acceptable test?  Then the patch will 
correct the issue for those locales as it should.

-aric

Paul Vriens wrote:
> Aric Stewart wrote:
>>
>> It should return number of copied bytes. But it always returns required
>> buffer size to receive all information.
>> (originally by Kusanagi Kouichi (slash at ma.neweb.ne.jp) )
>> ---
>>  dlls/imm32/imm.c |  207 
>> ++++++++++++++++++++++++++++++++++--------------------
>>  1 files changed, 130 insertions(+), 77 deletions(-)
>>
>>
>>
>> ------------------------------------------------------------------------
>>
>>
> Shouldn't patches like these be accompanied by tests? It changes the 
> behavior after all.
> 


From mah at jump-ing.de  Mon Sep  8 08:59:48 2008
From: mah at jump-ing.de (Markus Hitter)
Date: Mon, 8 Sep 2008 15:59:48 +0200
Subject: Peb->BeingDebugged and a debugger messing up
Message-ID: <5937FA09-00A7-4063-9C30-DAA43A10DA33@jump-ing.de>


Hello all,

after wrestling severals days with Wine's debugging capabilities I  
think I need some advice.

First, regardless wether my app (Catia) is launched with wine or  
winedbg, Peb->BeingDebugged is always False. To the best of my  
efforts I can't find the code snippet which  sets this variable or  
does some sort of probing for the correct value. Oddly enough, the  
app breaks into the debugger after creation of a new process, anyways.

As the app uses a launcher, I have the chance to set BeingDebugged  
explicitely to True. Some time later, after the app created a few  
threads, it's back to False. Are there applications out there setting  
this flag to what they think is best? Any other possible reasons for  
going BeingDebugged back to False while running in winedbg? None of  
the functions Wine provides and handles this variable appears to be  
called by the application.

Third thing is, Wine's attempt to auto-launch the debugger messes up.  
Not only if BeingDebugged is reported wrongly, it obviously runs in  
conflicts if launched due to a exception stack overflow. Is it really  
wise to launch it by triggering an interrupt in DbgBreakPoint()?

Short of better suggestions, I'd try to make debugger launching  
independent from Peb->BeingDebugged (server/kernel should know  
better), try to get rid of the interrupt in DbgBreakPoint() and/or  
make debugger autolaunching optional (at compile time).

What do you think?


Thanks,
MarKus


- - - - - - - - - - - - - - - - - - -
Dipl. Ing. Markus Hitter
http://www.jump-ing.de/






From christof.sigel at intenode.on.net  Sat Sep  6 07:15:57 2008
From: christof.sigel at intenode.on.net (Christof Sigel)
Date: Sat, 06 Sep 2008 21:45:57 +0930
Subject: wined3d: Add support for updating part of a compressed surface.
In-Reply-To: <d658b69e0809052252g4cfcf3qd6876d0c30dafabc@mail.gmail.com>
References: <48C15AAF.8050302@intenode.on.net>
	<d658b69e0809052252g4cfcf3qd6876d0c30dafabc@mail.gmail.com>
Message-ID: <48C2747D.6020100@intenode.on.net>

Thanks for the input, I really should have realised my approach was 
incorrect as soon as I saw that DXT textures are in blocks.
I'm not quite sure how to go about writing a test case, would I just 
have to create and update surface(s) and check that the resulting 
surface(s) have been updated correctly?

also, there is another patch coming that can be ignored (I missed some 
variable name changes that caused my patch to fail to compile), not sure 
why my mails are showing up late on the mailing list (I am subscribed).

Henri Verbeet wrote:
> 2008/9/5 Christof Sigel <christof.sigel at intenode.on.net>:
>> +                        /* since DXT compressed formats are specified in 4x4 pixel blocks devide pitch by 4 */
>> +                        int srcPitch=srcLockedRect.Pitch>>2;
>> +                        int destPitch=destLockedRect.Pitch>>2;
> 
> That will break with DXT1 surfaces. All the DXT formats are specified
> in 4x4 blocks, but for DXT1 a 4x4 block is 8 bytes, while for the
> other DXT formats a block is 16 bytes. This also has implications for
> how you should handle copying row by row, since each row is 4 pixels
> high. Strictly speaking you should also verify that the pitch exactly
> corresponds to the surface width before using the "single memcpy"
> path, since theory the surface layout in memory could look like this:
> 
> |<----width--->|
> |<-----------pitch------------>|
> xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
> xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
> |--------------|xxxxxxxxxxxxxxxx
> |              |xxxxxxxxxxxxxxxx
> |              |xxxxxxxxxxxxxxxx
> |    surface   |xxxxxxxxxxxxxxxx
> |              |xxxxxxxxxxxxxxxx
> |              |xxxxxxxxxxxxxxxx
> |              |xxxxxxxxxxxxxxxx
> |--------------|xxxxxxxxxxxxxxxx
> xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
> xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
> 
> In other words, for a DXT1 surface with height h, width w and pitch p,
> you should copy h/4 rows of w*2 bytes, where each row starts at
> pBits+p*row. For DXT2/3/4/5 you'd copy w*4 bytes for each row. A test
> for this code would be appreciated.
> 
> 


From hverbeet at gmail.com  Mon Sep  8 15:10:53 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 8 Sep 2008 22:10:53 +0200
Subject: wined3d: Add support for updating part of a compressed surface.
In-Reply-To: <48C2747D.6020100@intenode.on.net>
References: <48C15AAF.8050302@intenode.on.net>
	<d658b69e0809052252g4cfcf3qd6876d0c30dafabc@mail.gmail.com>
	<48C2747D.6020100@intenode.on.net>
Message-ID: <d658b69e0809081310n735a8352r21878356c82adeb0@mail.gmail.com>

2008/9/6 Christof Sigel <christof.sigel at intenode.on.net>:
> Thanks for the input, I really should have realised my approach was
> incorrect as soon as I saw that DXT textures are in blocks.
> I'm not quite sure how to go about writing a test case, would I just
> have to create and update surface(s) and check that the resulting
> surface(s) have been updated correctly?
>
Pretty much.


From thunderbird2k at gmx.net  Mon Sep  8 15:54:50 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Mon, 08 Sep 2008 22:54:50 +0200
Subject: Wine mouse input: Fwd: [RFC] Preliminary XI 2 feature list
Message-ID: <20080908205450.223680@gmx.net>

Hi all,

Today Peter Hutterer posted a preliminary feature list of Xinput 2. I have forwarded the email to here so that Vitaly and others can check it out and see if it offers what we need in Wine. If you have comments I would send them to the xorg list.

Regards,
Roderick Colenbrander


--- Xorg mail ---
Subject: [RFC] Preliminary XI 2 feature list

Following XDS, various notes, the discussions and preliminary executive
decisions by me, here's a first draft of XI2 features. If you have anything to
add, please speak up.

Time-line: I'd like to get it into server 1.6 but it doesn't look particularly
likely. 7.5 is more likely.

- Compatibility with XI 1.x, although some requests will be deactivated or of
  limited functionality.
- 16 bit device IDs
- All events available as XGE events.
- Event selection through event masks (instead or in addition to the event
  classes).  i.e.  the common cases of "select from all devices" and "select
  from all master devices" will be simplified.
- Devices may have relative + absolute axes simultaneously, and change the
  mode on any of these axes at runtime.
- Relative coordinates as a separate event.
- 32 bit keycodes (reliant on XKB2)
- ListInputDevices will include the currently attached Slave
- Axis and button labelling through device properties.
- subpixel resolution (from relative devices) available to clients.
  i.e. you get the data in screen coordinates, but with subpixel resolution
  available as fixed floating point.
- no window access protocol, this will be thrown out.
- dynamic device classes - device may add/remove classes at runtime.
- aspect-ratio scaling of valuators.

Probable implementation details:
- libXi: "namespacing": i.e. X<dosomething> will be XI<dosomething>
- server-internal use of XGE events, XI 1.x events emulated when needed.
- some standardisation on axis label Atom names.
- Clients have to announce XI2 support, otherwise they will be treated as XI
  1.x clients. 

Once the feature discussion is complete, I'll get a protocol spec out.

Cheers,
  Peter
_______________________________________________
xorg mailing list
xorg at lists.freedesktop.org
http://lists.freedesktop.org/mailman/listinfo/xorg

-- 
Psssst! Schon das coole Video vom GMX MultiMessenger gesehen?
Der Eine f?r Alle: http://www.gmx.net/de/go/messenger03


From ambro at b4ever.net  Mon Sep  8 16:01:45 2008
From: ambro at b4ever.net (Ambroz Bizjak)
Date: Mon, 8 Sep 2008 23:01:45 +0200
Subject: Patchwatcher security improvements
Message-ID: <200809082301.46031.ambro@b4ever.net>

Hi,

I've abandoned my chroot aproach to improving security in patchwatcher.
Instead I've implemented the ability to run untrusted code as a user
different than the one running patchwatcher. This is because creating a
chroot where Wine could be compiled and tested proved to be too difficult
and platform-dependent.

I've also added external time limits for running untrusted code. This as a
whole should help prevent individual patches from stalling the patch
watching process.

It very easy to set up. All you need is a low-privileged user (but enough
to run the tests, e.g. audio, video groups) and an empty folder where you
can write but this user can only read (not your home folder, it shouldn't
have access there anyway).

To use it, start with a clean patchwatcher and adjust the variables in the
patchwatcher.sh, then run "patchwatcher.sh intialize". It will instruct
you to run some commands as root (setuid the wrapper). Run initialize
again and it should build wine and run baseline tests. Then you can test
it by putting a patch in patches/ and issuing the try_one_patch command.
To start watching use the continuous_build command.

Patch is attached.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: patchwatcher-crossuser10.patch.bz2
Type: application/x-bzip
Size: 7879 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080908/d5aea781/attachment.bin 

From marcus at rennboot.centrumbabylon.cz  Mon Sep  8 16:26:28 2008
From: marcus at rennboot.centrumbabylon.cz (Marcus Meissner)
Date: Mon, 8 Sep 2008 23:26:28 +0200
Subject: [1/5] secur32: Require gnutls for schannel
In-Reply-To: <d658b69e0809081410x2478b1bevcfb871093b897fa5@mail.gmail.com>
References: <d658b69e0809081410x2478b1bevcfb871093b897fa5@mail.gmail.com>
Message-ID: <20080908212628.GA11120@rennboot.centrumbabylon.cz>

On Mon, Sep 08, 2008 at 11:10:11PM +0200, Henri Verbeet wrote:
> 

> From cb10664e7d7526951d97f6d9ba2f7429d20b69d4 Mon Sep 17 00:00:00 2001
> From: Henri Verbeet <hverbeet at gmail.com>
> Date: Mon, 8 Sep 2008 22:39:11 +0200
> Subject: secur32: Require gnutls for schannel

> +AC_ARG_WITH(gnutls,    AS_HELP_STRING([--without-gnutls],[do not use GnuTLS (schannel support)]))

Hmm,

I really do not think gnutls will have a long feature,
NSS seems to be the future choice of crypto frameworks :/

Ciao, Marcus


From thestig at google.com  Mon Sep  8 16:36:36 2008
From: thestig at google.com (Lei Zhang)
Date: Mon, 8 Sep 2008 14:36:36 -0700
Subject: [1/5] secur32: Require gnutls for schannel
In-Reply-To: <20080908212628.GA11120@rennboot.centrumbabylon.cz>
References: <d658b69e0809081410x2478b1bevcfb871093b897fa5@mail.gmail.com>
	<20080908212628.GA11120@rennboot.centrumbabylon.cz>
Message-ID: <558b2f5c0809081436q6026b836hb80518039dd8b069@mail.gmail.com>

On Mon, Sep 8, 2008 at 2:26 PM, Marcus Meissner
<marcus at rennboot.centrumbabylon.cz> wrote:
> On Mon, Sep 08, 2008 at 11:10:11PM +0200, Henri Verbeet wrote:
>>
>
>> From cb10664e7d7526951d97f6d9ba2f7429d20b69d4 Mon Sep 17 00:00:00 2001
>> From: Henri Verbeet <hverbeet at gmail.com>
>> Date: Mon, 8 Sep 2008 22:39:11 +0200
>> Subject: secur32: Require gnutls for schannel
>
>> +AC_ARG_WITH(gnutls,    AS_HELP_STRING([--without-gnutls],[do not use GnuTLS (schannel support)]))
>
> Hmm,
>
> I really do not think gnutls will have a long feature,
> NSS seems to be the future choice of crypto frameworks :/
>
> Ciao, Marcus
>

s/feature/future/ ?


From hverbeet at gmail.com  Mon Sep  8 16:37:39 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 8 Sep 2008 23:37:39 +0200
Subject: [1/5] secur32: Require gnutls for schannel
In-Reply-To: <20080908212628.GA11120@rennboot.centrumbabylon.cz>
References: <d658b69e0809081410x2478b1bevcfb871093b897fa5@mail.gmail.com>
	<20080908212628.GA11120@rennboot.centrumbabylon.cz>
Message-ID: <d658b69e0809081437s6baaac2fv1374ccac26411f8b@mail.gmail.com>

2008/9/8 Marcus Meissner <marcus at rennboot.centrumbabylon.cz>:
> Hmm,
>
> I really do not think gnutls will have a long feature,
> NSS seems to be the future choice of crypto frameworks :/
>
> Ciao, Marcus
>
I did have a look at NSS, but didn't see a way to make it work with a
simple buffer, which makes in impractical to use for schannel.
Perhaps I missed something there though. Another option would of
course be to implement TLS ourselves, it's not all that complicated
actually.


From marcus at rennboot.centrumbabylon.cz  Mon Sep  8 16:41:11 2008
From: marcus at rennboot.centrumbabylon.cz (Marcus Meissner)
Date: Mon, 8 Sep 2008 23:41:11 +0200
Subject: [1/5] secur32: Require gnutls for schannel
In-Reply-To: <558b2f5c0809081436q6026b836hb80518039dd8b069@mail.gmail.com>
References: <d658b69e0809081410x2478b1bevcfb871093b897fa5@mail.gmail.com>
	<20080908212628.GA11120@rennboot.centrumbabylon.cz>
	<558b2f5c0809081436q6026b836hb80518039dd8b069@mail.gmail.com>
Message-ID: <20080908214111.GB11120@rennboot.centrumbabylon.cz>

On Mon, Sep 08, 2008 at 02:36:36PM -0700, Lei Zhang wrote:
> On Mon, Sep 8, 2008 at 2:26 PM, Marcus Meissner
> <marcus at rennboot.centrumbabylon.cz> wrote:
> > On Mon, Sep 08, 2008 at 11:10:11PM +0200, Henri Verbeet wrote:
> >>
> >
> >> From cb10664e7d7526951d97f6d9ba2f7429d20b69d4 Mon Sep 17 00:00:00 2001
> >> From: Henri Verbeet <hverbeet at gmail.com>
> >> Date: Mon, 8 Sep 2008 22:39:11 +0200
> >> Subject: secur32: Require gnutls for schannel
> >
> >> +AC_ARG_WITH(gnutls,    AS_HELP_STRING([--without-gnutls],[do not use GnuTLS (schannel support)]))
> >
> > Hmm,
> >
> > I really do not think gnutls will have a long feature,
> > NSS seems to be the future choice of crypto frameworks :/
> >
> > Ciao, Marcus
> >
> 
> s/feature/future/ ?

future, yes.

But in the end ... well, we will see what wins ;)

Ciao, Marcus


From marcus at rennboot.centrumbabylon.cz  Mon Sep  8 16:43:09 2008
From: marcus at rennboot.centrumbabylon.cz (Marcus Meissner)
Date: Mon, 8 Sep 2008 23:43:09 +0200
Subject: [1/5] secur32: Require gnutls for schannel
In-Reply-To: <d658b69e0809081437s6baaac2fv1374ccac26411f8b@mail.gmail.com>
References: <d658b69e0809081410x2478b1bevcfb871093b897fa5@mail.gmail.com>
	<20080908212628.GA11120@rennboot.centrumbabylon.cz>
	<d658b69e0809081437s6baaac2fv1374ccac26411f8b@mail.gmail.com>
Message-ID: <20080908214309.GC11120@rennboot.centrumbabylon.cz>

On Mon, Sep 08, 2008 at 11:37:39PM +0200, Henri Verbeet wrote:
> 2008/9/8 Marcus Meissner <marcus at rennboot.centrumbabylon.cz>:
> > Hmm,
> >
> > I really do not think gnutls will have a long feature,
> > NSS seems to be the future choice of crypto frameworks :/
> >
> > Ciao, Marcus
> >
> I did have a look at NSS, but didn't see a way to make it work with a
> simple buffer, which makes in impractical to use for schannel.
> Perhaps I missed something there though. Another option would of
> course be to implement TLS ourselves, it's not all that complicated
> actually.

Hmm. The security guy in me says "do not reimplement" ;)

If its easier with gnutls, please use it. (It will not go away
due to lots of software requiring it).

Ciao, Marcus


From truiken at gmail.com  Mon Sep  8 16:53:25 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 8 Sep 2008 16:53:25 -0500
Subject: winhttp test failures
Message-ID: <22821af30809081453u469fa016kd8d7a2d1263e3188@mail.gmail.com>

Hi Hans,

Tests you added to the file dlls/winhttp/tests/notification.c are
causing several test failures across all platforms.  Can you please
have a look at this?

Thanks,
James Hawkins


From truiken at gmail.com  Mon Sep  8 17:05:55 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 8 Sep 2008 17:05:55 -0500
Subject: wininet: InternetQueryOption return size when buffer too small
In-Reply-To: <48C5A0BA.60200@gmail.com>
References: <48C5A0BA.60200@gmail.com>
Message-ID: <22821af30809081505q4f2efac9v42154db27dd167e9@mail.gmail.com>

On Mon, Sep 8, 2008 at 5:01 PM, Rotem Zach <rotemz at gmail.com> wrote:
>
> +
> +  internetQWCheckOption(NULL,INTERNET_OPTION_MAX_CONNS_PER_SERVER,(WCHAR*)"Open: INTERNET_OPTION_MAX_CONNS_PER_SERVER Got wrong length %d instead of %d\n",sizeof(ULONG));
> +  internetQWCheckErr(ERROR_INSUFFICIENT_BUFFER,(WCHAR*)"Open: INTERNET_OPTION_MAX_CONNS_PER_SERVER Wrong Error %d Expecting %d\n");
> +
> +  internetQWCheckOption(NULL,INTERNET_OPTION_MAX_CONNS_PER_1_0_SERVER,(WCHAR*)"Open: INTERNET_OPTION_MAX_CONNS_PER_1_0_SERVER Got wrong length %d instead of %d\n",sizeof(ULONG));
> +  internetQWCheckErr(ERROR_INSUFFICIENT_BUFFER,(WCHAR*)"Open: INTERNET_OPTION_MAX_CONNS_PER_1_0_SERVER Wrong Error %d Expecting %d\n");
> +

All of these lines are way too long.  Please stick close to an 80-col
line limit.

-- 
James Hawkins


From robertshearman at gmail.com  Mon Sep  8 17:31:35 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Mon, 8 Sep 2008 23:31:35 +0100
Subject: user32.dll: Add stub for LockWorkStation
In-Reply-To: <200809082132.58845.paulc@voip.null.ro>
References: <200809082132.58845.paulc@voip.null.ro>
Message-ID: <1096648c0809081531i6b14ed81wc23622151187fb1a@mail.gmail.com>

2008/9/8 Paul Chitescu <paulc at voip.null.ro>:
> /***********************************************************************
>+ *		LockWorkStation (USER32.@)
>+ */
>+BOOL WINAPI LockWorkStation()

This is the right place to put it be the above should be
"LockWorkStation(void)" not "LockWorkStation()".

-- 
Rob Shearman


From winehacker at gmail.com  Mon Sep  8 17:46:37 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Mon, 8 Sep 2008 18:46:37 -0400
Subject: user32.dll: Add stub for LockWorkStation
In-Reply-To: <200809082132.58845.paulc@voip.null.ro>
References: <200809082132.58845.paulc@voip.null.ro>
Message-ID: <19e31a080809081546j48399038jd98d6539485cdf96@mail.gmail.com>

On Mon, Sep 8, 2008 at 2:32 PM, Paul Chitescu <paulc at voip.null.ro> wrote:
> Changelog:
>        user32.dll: Stub for LockWorkStation()
>
> Not sure if user_main.c is the right place but I put it together with
> ExitWindowsEx.

Would you mind taking a shot at implementing this properly? It was on
my TODO but I most likely will never get back to it. Here is my patch
from before which was wrong.

http://www.winehq.org/pipermail/wine-patches/2007-May/039240.html

What we need to do is use SendMessage to talk to the existing
explorer.exe process and have it do the locking. Feel free to use what
i have to make a patch if your interested.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From dank at kegel.com  Mon Sep  8 18:06:07 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 8 Sep 2008 16:06:07 -0700
Subject: Patchwatcher security improvements
Message-ID: <a71bd89a0809081606y6cbe16dftc6ce7c2ce0a7956d@mail.gmail.com>

Interesting.    One of my goals is to support Solaris and BSD;
have you tried your stuff there?

I'm currently refactoring patchwatcher.sh; I've pulled
the generic stuff out into libpatchwatcher.sh and
the wine-specific stuff into wine-slave.sh.
Your changes will fit nicely into wine-slave.sh, I hope.

I'm surprised you had to give up on the chroot...
I was planning on trying to run just wine-slave.sh in
a chroot jail, since it's the only part that would
actually try to run any part of the wine build system.
- Dan


From dank at kegel.com  Mon Sep  8 18:12:34 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 8 Sep 2008 16:12:34 -0700
Subject: [1/5] secur32: Require gnutls for schannel
Message-ID: <a71bd89a0809081612q23c3ef52o4caed6b294fa2d2b@mail.gmail.com>

> If its easier with gnutls, please use it.

+1

I also agree that nss is likely to replace openssl as the toolkit
of choice. But if depending
on gnutls is the easiest path to a working schannel, that's
the right thing to do.  We can always change later if a
compelling reason arises.
- Dan


From ambro at b4ever.net  Mon Sep  8 18:42:08 2008
From: ambro at b4ever.net (Ambroz Bizjak)
Date: Tue, 9 Sep 2008 01:42:08 +0200
Subject: Patchwatcher security improvements
Message-ID: <200809090142.08553.ambro@b4ever.net>

> Interesting.    One of my goals is to support Solaris and BSD;
> have you tried your stuff there?
Not yet, but that stuff is pretty generic, so it shouldn't be hard to get
it to work.

> I'm surprised you had to give up on the chroot...
> I was planning on trying to run just wine-slave.sh in
> a chroot jail, since it's the only part that would
> actually try to run any part of the wine build system.
Creating the chroot itself is really hard and has to be
done for each platform separately. The basic system and also all
development tools and Wine dependencies have to be copied properly. And
there are the tests with their own bunch of requirements. In the end you
would end up with a chroot that is not much different from the base system
itself.
And it doesn't really bring many security benefits. Many potentially
insecure interfaces have to be exposed anyway (/proc, X server with
OpenGL, sound hardware). If a clean and dedicated system is used and
permissions are properly configured, running stuff on the base system
shouldn't really be a problem. Furthermore, using some advanced access
control system (like SELinux) would probably be easier to configure and
more efficient.





From ambro at b4ever.net  Mon Sep  8 19:29:56 2008
From: ambro at b4ever.net (Ambroz Bizjak)
Date: Tue, 9 Sep 2008 02:29:56 +0200
Subject: Patchwatcher security improvements
Message-ID: <200809090229.56293.ambro@b4ever.net>

> Also, it's possible some of your changes won't be needed
> after the refactoring... I plan to run wine-slave as a different
> user anyway...
That doesn't solve much; although in may look clean, it is not secure. The 
user should have a limited amount of resources to work with. Your way, for 
example, it can write the whole master Wine tree. With my patches, the master 
tree is read-only for the user, and it only has its own copy to work with 
which is never used again.
I plan to further improve things. In particular, killing stall processes is 
not implemented securely now. As I have already mentioned, additional access 
control is needed to produce a fully solid system. For example, disk access 
should be limited (think about world-writable folders and stuff like 
~/.bashrc), and memory usage should be limited as well (could patchwatcher get 
killed when the patch starts consuming memory?).
Considering the refactoring, I see you are just some moving stuff into its own 
file; I can easily adjust my code.



From k_krieser at sbcglobal.net  Mon Sep  8 20:52:45 2008
From: k_krieser at sbcglobal.net (Kevin K)
Date: Mon, 8 Sep 2008 20:52:45 -0500
Subject: Debugging applications running on wine
Message-ID: <000601c9121e$c263a980$472afc80$@net>

Is winedbg the only method of debugging applications being developed for
Windows on Wine?

For instance, assume a program developed with Visual Studio in C or C++, and
I needed to debug it on Linux?

Thanks,
Kevin 



From dank at kegel.com  Mon Sep  8 21:36:25 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 8 Sep 2008 19:36:25 -0700
Subject: Debugging applications running on wine
Message-ID: <a71bd89a0809081936x595c8676mcbe8c433200f1f76@mail.gmail.com>

Kevin K wrote:
> Is winedbg the only method of debugging applications being
> developed for Windows on Wine?
>
> For instance, assume a program developed with Visual Studio
> in C or C++, and I needed to debug it on Linux?

If winedbg doesn't work for you, we should fix it.   Same
goes for other debuggers.

For instance, ollydbg seems to work
http://appdb.winehq.org/objectManager.php?sClass=application&iId=2619

Visual C++ 6's debugger seems to work at least a little, too:
http://appdb.winehq.org/objectManager.php?sClass=version&iId=31

Please file bugs for any problems you run into.
- Dan


From celticht32 at aol.com  Mon Sep  8 22:03:32 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Mon, 08 Sep 2008 23:03:32 -0400
Subject: socket errors...
In-Reply-To: <a71bd89a0809081936x595c8676mcbe8c433200f1f76@mail.gmail.com>
References: <a71bd89a0809081936x595c8676mcbe8c433200f1f76@mail.gmail.com>
Message-ID: <48C5E784.5030701@aol.com>

I started narrowing down some information in debugging a winemm issue 
and noticed the following in my logs...

trace:winsock:WSARecvFrom socket 00e8, wsabuf 0x33f638, nbufs 1, flags 
0, from 0x33f67c, fromlen 16, ovl (nil), func (nil)
trace:winsock:WSARecvFrom fd=51, options=0
warn:winsock:WSARecvFrom  -> ERROR 10035

The 10035 is a buffer overflow error (I think)

and I don't know much if at all how this set of code is supposed to 
work... anyone else getting this with the latest git tree?

and any help on figuring out why the buffer is getting this error...

thanks

Chris



From truiken at gmail.com  Mon Sep  8 22:10:47 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 8 Sep 2008 22:10:47 -0500
Subject: socket errors...
In-Reply-To: <48C5E784.5030701@aol.com>
References: <a71bd89a0809081936x595c8676mcbe8c433200f1f76@mail.gmail.com>
	<48C5E784.5030701@aol.com>
Message-ID: <22821af30809082010s45d183dencc76e9b1f7811c68@mail.gmail.com>

On Mon, Sep 8, 2008 at 10:03 PM, Chris Ahrendt <celticht32 at aol.com> wrote:
> I started narrowing down some information in debugging a winemm issue
> and noticed the following in my logs...
>
> trace:winsock:WSARecvFrom socket 00e8, wsabuf 0x33f638, nbufs 1, flags
> 0, from 0x33f67c, fromlen 16, ovl (nil), func (nil)
> trace:winsock:WSARecvFrom fd=51, options=0
> warn:winsock:WSARecvFrom  -> ERROR 10035
>
> The 10035 is a buffer overflow error (I think)
>
> and I don't know much if at all how this set of code is supposed to
> work... anyone else getting this with the latest git tree?
>
> and any help on figuring out why the buffer is getting this error...
>

A little context might help...I, for one, have no idea what you're
talking about.

-- 
James Hawkins


From celticht32 at aol.com  Mon Sep  8 22:35:41 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Mon, 08 Sep 2008 23:35:41 -0400
Subject: socket errors...
In-Reply-To: <22821af30809082010s45d183dencc76e9b1f7811c68@mail.gmail.com>
References: <a71bd89a0809081936x595c8676mcbe8c433200f1f76@mail.gmail.com>	
	<48C5E784.5030701@aol.com>
	<22821af30809082010s45d183dencc76e9b1f7811c68@mail.gmail.com>
Message-ID: <48C5EF0D.7010406@aol.com>

James Hawkins wrote:
> On Mon, Sep 8, 2008 at 10:03 PM, Chris Ahrendt <celticht32 at aol.com> wrote:
>> I started narrowing down some information in debugging a winemm issue
>> and noticed the following in my logs...
>>
>> trace:winsock:WSARecvFrom socket 00e8, wsabuf 0x33f638, nbufs 1, flags
>> 0, from 0x33f67c, fromlen 16, ovl (nil), func (nil)
>> trace:winsock:WSARecvFrom fd=51, options=0
>> warn:winsock:WSARecvFrom  -> ERROR 10035
>>
>> The 10035 is a buffer overflow error (I think)
>>
>> and I don't know much if at all how this set of code is supposed to
>> work... anyone else getting this with the latest git tree?
>>
>> and any help on figuring out why the buffer is getting this error...
>>
> 
> A little context might help...I, for one, have no idea what you're
> talking about.
> 
ok context.. I turned on tracing for winsock while trying to narrow down 
another issue I am working on. When I did... I started seeing these 
errors in my output where I had not before... (IE turn +winsock off does 
not output the above)

Chris


From austinenglish at gmail.com  Mon Sep  8 23:01:10 2008
From: austinenglish at gmail.com (Austin English)
Date: Mon, 8 Sep 2008 23:01:10 -0500
Subject: Patchwatcher security improvements
In-Reply-To: <a71bd89a0809081606y6cbe16dftc6ce7c2ce0a7956d@mail.gmail.com>
References: <a71bd89a0809081606y6cbe16dftc6ce7c2ce0a7956d@mail.gmail.com>
Message-ID: <b6bb06270809082101v72590636m928e8c31cc9e03ba@mail.gmail.com>

On Mon, Sep 8, 2008 at 6:06 PM, Dan Kegel <dank at kegel.com> wrote:
> Interesting.    One of my goals is to support Solaris and BSD;
> have you tried your stuff there?
>

What about OS X?


From damjan.jov at gmail.com  Tue Sep  9 00:01:37 2008
From: damjan.jov at gmail.com (Damjan Jovanovic)
Date: Tue, 9 Sep 2008 07:01:37 +0200
Subject: socket errors...
In-Reply-To: <48C5E784.5030701@aol.com>
References: <a71bd89a0809081936x595c8676mcbe8c433200f1f76@mail.gmail.com>
	<48C5E784.5030701@aol.com>
Message-ID: <9e89675b0809082201y6223b05ay1cab5acd4cbd16e2@mail.gmail.com>

On Tue, Sep 9, 2008 at 5:03 AM, Chris Ahrendt <celticht32 at aol.com> wrote:
> I started narrowing down some information in debugging a winemm issue
> and noticed the following in my logs...
>
> trace:winsock:WSARecvFrom socket 00e8, wsabuf 0x33f638, nbufs 1, flags
> 0, from 0x33f67c, fromlen 16, ovl (nil), func (nil)
> trace:winsock:WSARecvFrom fd=51, options=0
> warn:winsock:WSARecvFrom  -> ERROR 10035
>
> The 10035 is a buffer overflow error (I think)

No, 10035 is WSAEWOULDBLOCK, which is normal for WSARecvFrom() on
non-blocking sockets that currently have no data in the receive
buffer.

> and I don't know much if at all how this set of code is supposed to
> work... anyone else getting this with the latest git tree?
>
> and any help on figuring out why the buffer is getting this error...

I'd be more worried if it wasn't :-).

> thanks
>
> Chris
>

Bye
Damjan


From robertshearman at gmail.com  Tue Sep  9 02:01:39 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 9 Sep 2008 08:01:39 +0100
Subject: add minimal ctxtcall.h
In-Reply-To: <532693.64639.qm@web23208.mail.ird.yahoo.com>
References: <532693.64639.qm@web23208.mail.ird.yahoo.com>
Message-ID: <1096648c0809090001k6699aba1iab73c3c521f20eac@mail.gmail.com>

2008/9/8 Louis. Lenders <xerox_xerox2000 at yahoo.co.uk>:
> +typedef HRESULT (*PFNCONTEXTCALL)(ComCallData *pparam);

You don't explicitly tell widl that this function is a __stdcall
function. Please check if that is automatically added in the generated
header file. If not, you'll have to specify it here.

> +
> +/*****************************************************************************
> + * IContextcallback interface
> + */

Please change "IContextcallback" to "IContextCallback".

-- 
Rob Shearman


From julliard at winehq.org  Tue Sep  9 04:07:37 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 09 Sep 2008 11:07:37 +0200
Subject: Simplify tools/wrc a bit (RESEND)
In-Reply-To: <alpine.LSU.1.99.0809070209190.3773@acrux.dbai.tuwien.ac.at>
	(Gerald Pfeifer's message of "Sun, 7 Sep 2008 02:09:42 +0200 (CEST)")
References: <alpine.LSU.1.99.0809070209190.3773@acrux.dbai.tuwien.ac.at>
Message-ID: <8763p5wuue.fsf@wine.dyndns.org>

Gerald Pfeifer <gerald at pfeifer.com> writes:

> Any thoughts on this patch?

It breaks the WANT_NEAR_INDICATION case.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Sep  9 04:36:48 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 09 Sep 2008 11:36:48 +0200
Subject: mshtml: Implement HTMLElement2 get_scrollLeft
In-Reply-To: <48C31189.6080800@hotmail.com> (Alistair Leslie-Hughes's message
	of "Sun, 07 Sep 2008 09:26:01 +1000")
References: <48C31189.6080800@hotmail.com>
Message-ID: <871vztwthr.fsf@wine.dyndns.org>

Alistair Leslie-Hughes <leslie_alistair at hotmail.com> writes:

> @@ -831,8 +831,31 @@ static HRESULT WINAPI HTMLElement2_put_scrollLeft(IHTMLElement2 *iface, long v)
>  static HRESULT WINAPI HTMLElement2_get_scrollLeft(IHTMLElement2 *iface, long *p)
>  {
>      HTMLElement *This = HTMLELEM2_THIS(iface);
> -    FIXME("(%p)->(%p)\n", This, p);
> -    return E_NOTIMPL;
> +    nsIDOMNSHTMLElement *nselem;
> +    PRInt32 left = 0;
> +    nsresult nsres;
> +
> +    TRACE("(%p)->(%p)\n", This, p);
> +    
> +    if(!This->nselem) {
> +        FIXME("NULL nselem\n");
> +        return E_NOTIMPL;
> +    }
> +
> +    nsres = nsIDOMHTMLElement_QueryInterface(This->nselem, &IID_nsIDOMNSHTMLElement, (void**)&nselem);
> +    if(NS_SUCCEEDED(nsres)) {
> +        nsres = nsIDOMNSHTMLElement_GetScrollLeft(nselem, &left);
> +        nsIDOMNSHTMLElement_Release(nselem);
> +        if(NS_FAILED(nsres))
> +            ERR("GetScrollLeft failed: %08x\n", nsres);
> +    }else {
> +        ERR("Could not get nsIDOMNSHTMLElement interface: %08x\n", nsres);
> +    }

Printing an ERR is not a substitute for handling errors, you can't just
continue as if nothing happened. Or if the error really can be
legitimately ignored then you shouldn't have an ERR.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Sep  9 04:45:43 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 09 Sep 2008 11:45:43 +0200
Subject: [1/5] secur32: Require gnutls for schannel
In-Reply-To: <d658b69e0809081410x2478b1bevcfb871093b897fa5@mail.gmail.com>
	(Henri Verbeet's message of "Mon, 8 Sep 2008 23:10:11 +0200")
References: <d658b69e0809081410x2478b1bevcfb871093b897fa5@mail.gmail.com>
Message-ID: <87r67tveig.fsf@wine.dyndns.org>

"Henri Verbeet" <hverbeet at gmail.com> writes:

> diff --git a/dlls/secur32/Makefile.in b/dlls/secur32/Makefile.in
> index df9695a..9805d92 100644
> --- a/dlls/secur32/Makefile.in
> +++ b/dlls/secur32/Makefile.in
> @@ -6,6 +6,8 @@ MODULE    = secur32.dll
>  IMPORTLIB = secur32
>  IMPORTS   = netapi32 advapi32 kernel32 ntdll
>  DELAYIMPORTS = crypt32
> +EXTRALIBS = @GNUTLSLIBS@
> +EXTRAINCL = @GNUTLSINCL@

You need to load the library dynamically, we don't want the whole dll to
fail to load if gnutls is missing at run-time.

-- 
Alexandre Julliard
julliard at winehq.org


From robertshearman at gmail.com  Tue Sep  9 05:22:00 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 9 Sep 2008 11:22:00 +0100
Subject: notepad: Only append .txt to missing files without a dot in them
	(try2)
In-Reply-To: <200809090050.24772.alex@thehandofagony.com>
References: <200809090050.24772.alex@thehandofagony.com>
Message-ID: <1096648c0809090322ra30855auad078c9f2aebc6e4@mail.gmail.com>

2008/9/8 Alexander Nicolaysen S?rnes <alex at thehandofagony.com>:
> -            if (!lstrcmp(txtW, cmdline + lstrlen(cmdline) - lstrlen(txtW)))
> +            if (strchrW(PathFindFileNameW(cmdline), '.'))

You're using one shell helper function already so why not use
PathFindExtensionW instead?

-- 
Rob Shearman

From marcus at rennboot.centrumbabylon.cz  Tue Sep  9 07:19:47 2008
From: marcus at rennboot.centrumbabylon.cz (Marcus Meissner)
Date: Tue, 9 Sep 2008 14:19:47 +0200
Subject: coverity ... new run finally
Message-ID: <20080909121946.GA8241@rennboot.centrumbabylon.cz>

Hi folks,

A new Coverity run (274) was done finally, so
we can restart looking at issues ;)

Still a lot of NULL ptr migration issues which suck
to fix, but well.

Ciao, Marcus


From wine at mkarcher.dialup.fu-berlin.de  Tue Sep  9 07:23:21 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Tue, 09 Sep 2008 14:23:21 +0200
Subject: user32/test Added test about window sizes
In-Reply-To: <1220962431-6236-1-git-send-email-FloriansKarten@web.de>
References: <>  <1220962431-6236-1-git-send-email-FloriansKarten@web.de>
Message-ID: <1220963002.12534.4.camel@hermes2.karcher.local>

Am Dienstag, den 09.09.2008, 14:13 +0200 schrieb Florian K?berle:
> +        ok( width == 500 && height == 6, "rect is not 6x6 but %dx%d: %d,%d-%d,%d\n",
> +            width, height, rect.left, rect.top, rect.right, rect.bottom);
[...]
> +        ok( width == 6 && height == 500, "rect is not 6x6 but %dx%d: %d,%d-%d,%d\n",
> +            width, height, rect.left, rect.top, rect.right, rect.bottom);
These messages contain a copy & paste mistake. Please fix the 6x6.

Regards,
  Michael Karcher



From dank at kegel.com  Tue Sep  9 07:36:23 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 9 Sep 2008 05:36:23 -0700
Subject: Patchwatcher security improvements
In-Reply-To: <b6bb06270809082101v72590636m928e8c31cc9e03ba@mail.gmail.com>
References: <a71bd89a0809081606y6cbe16dftc6ce7c2ce0a7956d@mail.gmail.com>
	<b6bb06270809082101v72590636m928e8c31cc9e03ba@mail.gmail.com>
Message-ID: <a71bd89a0809090536s2c075556w8cec1161554a829d@mail.gmail.com>

On Mon, Sep 8, 2008 at 9:01 PM, Austin English <austinenglish at gmail.com> wrote:
> On Mon, Sep 8, 2008 at 6:06 PM, Dan Kegel <dank at kegel.com> wrote:
>> Interesting.    One of my goals is to support Solaris and BSD;
>> have you tried your stuff there?
>
> What about OS X?

Yes, of course.


From robertshearman at gmail.com  Tue Sep  9 07:53:22 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 9 Sep 2008 13:53:22 +0100
Subject: user32.dll: Add stub for LockWorkStation
In-Reply-To: <19e31a080809081546j48399038jd98d6539485cdf96@mail.gmail.com>
References: <200809082132.58845.paulc@voip.null.ro>
	<19e31a080809081546j48399038jd98d6539485cdf96@mail.gmail.com>
Message-ID: <1096648c0809090553g18dc125p7ee64bf9b1d8fae3@mail.gmail.com>

2008/9/8 Steven Edwards <winehacker at gmail.com>:
> On Mon, Sep 8, 2008 at 2:32 PM, Paul Chitescu <paulc at voip.null.ro> wrote:
>> Changelog:
>>        user32.dll: Stub for LockWorkStation()
>>
>> Not sure if user_main.c is the right place but I put it together with
>> ExitWindowsEx.
>
> Would you mind taking a shot at implementing this properly? It was on
> my TODO but I most likely will never get back to it. Here is my patch
> from before which was wrong.
>
> http://www.winehq.org/pipermail/wine-patches/2007-May/039240.html
>
> What we need to do is use SendMessage to talk to the existing
> explorer.exe process and have it do the locking. Feel free to use what
> i have to make a patch if your interested.

Having a stub implementation is a good first step towards a full
implementation, provided that the stub won't cause security issues or
cause more applications to crash, which I don't believe is the case
here.

If you have an existing implementation, you can rebase it on top of
this patch and submit it to wine-devel/wine-patches.

-- 
Rob Shearman


From celticht32 at aol.com  Tue Sep  9 08:44:27 2008
From: celticht32 at aol.com (celticht32 at aol.com)
Date: Tue, 09 Sep 2008 09:44:27 -0400
Subject: socket errors...
In-Reply-To: <9e89675b0809082201y6223b05ay1cab5acd4cbd16e2@mail.gmail.com>
References: <a71bd89a0809081936x595c8676mcbe8c433200f1f76@mail.gmail.com>	
	<48C5E784.5030701@aol.com>
	<9e89675b0809082201y6223b05ay1cab5acd4cbd16e2@mail.gmail.com>
Message-ID: <8CAE0994FB4DBC8-14B4-10D@FWM-D41.sysops.aol.com>


 Ok thanks... so its safe to ignore which is what I was wondering =)

Chris


 


 

-----Original Message-----
From: Damjan Jovanovic <damjan.jov at gmail.com>
To: celticht32 at aol.com
Cc: wine-devel <wine-devel at winehq.org>
Sent: Tue, 9 Sep 2008 1:01 am
Subject: Re: socket errors...










On Tue, Sep 9, 2008 at 5:03 AM, Chris Ahrendt <celticht32 at aol.com> wrote:
> I started narrowing down some information in debugging a winemm issue
> and noticed the following in my logs...
>
> trace:winsock:WSARecvFrom socket 00e8, wsabuf 0x33f638, nbufs 1, flags
> 0, from 0x33f67c, fromlen 16, ovl (nil), func (nil)
> trace:winsock:WSARecvFrom fd=51, options=0
> warn:winsock:WSARecvFrom  -> ERROR 10035
>
> The 10035 is a buffer overflow error (I think)

No, 10035 is WSAEWOULDBLOCK, which is normal for WSARecvFrom() on
non-blocking sockets that currently have no data in the receive
buffer.

> and I don't know much if at all how this set of code is supposed to
> work... anyone else getting this with the latest git tree?
>
> and any help on figuring out why the buffer is getting this error...

I'd be more worried if it wasn't :-).

> thanks
>
> Chris
>

Bye
Damjan






 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080909/4cbca342/attachment-0001.htm 

From dank at kegel.com  Tue Sep  9 08:45:21 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 9 Sep 2008 06:45:21 -0700
Subject: Patchwatcher status: added urlmon:protocol.c and urlmon:url.c to
	blacklist
Message-ID: <a71bd89a0809090645t7892074ega5856b65225e3577@mail.gmail.com>

These tests failed randomly for a few people:

urlmon:url.c:2125: Test succeeded inside todo block: unexpected
OnProgress_CONNECTING
urlmon:url.c:2129: Test failed: expected OnProgress_SENDINGREQUEST
urlmon:url.c:2131: Test failed: expected OnResponse
urlmon:protocol.c:1597: Test failed: Read failed: 00000001 (0 bytes)
urlmon:protocol.c:365: Test failed: expected ReportData
urlmon:protocol.c:1598: Test failed: Read failed: 8000000a (0 bytes)

so I've added urlmon:url.c and urlmon:protocol.c to the patchwatcher blacklist,

All of the tests that currently touch the real internet
probably need to be changed to touch a mock internet
if we want to have reliable tests.


From dank at kegel.com  Tue Sep  9 08:58:59 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 9 Sep 2008 06:58:59 -0700
Subject: coverity ... new run finally
Message-ID: <a71bd89a0809090658y71524777s183f53073ce650ad@mail.gmail.com>

Marcus wrote:
> A new Coverity run (274) was done finally, so
> we can restart looking at issues ;)
>
> Still a lot of NULL ptr migration issues which suck
> to fix, but well.

Yay!  Here are the new errors introduced since the end of May, sorted
by source file.
There are only 23 not in test code:

725     NULL_RETURNS    Context_CopyProperties  crypt32/context.c
715     FORWARD_NULL    CryptMsgGetAndVerifySigner      crypt32/msg.c
709     DEADCODE        DEVENUM_ReadPinTypes    devenum/createdevenum.c
717     FORWARD_NULL    DEVENUM_ReadPinTypes    devenum/createdevenum.c
726     OVERRUN_STATIC  test_EnumGroupsInGroup  dplayx/tests/dplayx.c
718     FORWARD_NULL    MSI_GetUserInfo         msi/msi.c
747     REVERSE_INULL   ILockBytes_RemoteReadAt_Stub    ole32/ole32_objidl_p.c
748     REVERSE_INULL   ILockBytes_RemoteReadAt_Stub    ole32/ole32_objidl_p.c
749     REVERSE_INULL   ISequentialStream_RemoteRead_Stub
ole32/ole32_objidl_p.c
750     REVERSE_INULL   ISequentialStream_RemoteRead_Stub
ole32/ole32_objidl_p.c
751     REVERSE_INULL   IEnumOLEVERB_RemoteNext_Stub    ole32/ole32_oleidl_p.c
752     REVERSE_INULL   IEnumOLEVERB_RemoteNext_Stub    ole32/ole32_oleidl_p.c
373     REVERSE_INULL   IDispatch_GetIDsOfNames_Stub
oleaut32/oleaut32_oaidl_p.c
753     REVERSE_INULL   ITypeLib_RemoteFindName_Stub
oleaut32/oleaut32_oaidl_p.c
754     REVERSE_INULL   IEnumConnectionPoints_RemoteNext_Stub
oleaut32/oleaut32_ocidl_p.c
755     REVERSE_INULL   IEnumConnections_RemoteNext_Stub
oleaut32/oleaut32_ocidl_p.c
714     FORWARD_NULL    MediaSeekingImpl_SetPositions   quartz/control.c
713     FORWARD_NULL    TestFilter_Create       quartz/tests/filtergraph.c
719     FORWARD_NULL    ME_FindPixelPos         riched20/caret.c
708     DEADCODE        array_compute_and_size_conformance
rpcrt4/ndr_marshall.c
720     FORWARD_NULL    CreateContext   wined3d/context.c
721     FORWARD_NULL    CreateContext   wined3d/context.c
722     FORWARD_NULL    test_OpenRequest        winhttp/tests/winhttp.c
723     FORWARD_NULL    test_SendRequest        winhttp/tests/winhttp.c
724     FORWARD_NULL    test_WinHttpAddHeaders  winhttp/tests/winhttp.c
716     FORWARD_NULL    InternetCrackUrlW       wininet/internet.c
712     FORWARD_NULL    test_mmioOpen   winmm/tests/mmio.c
710     FORWARD_NULL    ldap_parse_sort_controlW        wldap32/parse.c
711     FORWARD_NULL    ldap_parse_vlv_controlW         wldap32/parse.c

Sure would be nice if Coverity could identify the cl which introduced
each problem :-)
- Dan


From hawaii.wine at gmail.com  Tue Sep  9 09:25:52 2008
From: hawaii.wine at gmail.com (hawaii.wine wong)
Date: Tue, 9 Sep 2008 22:25:52 +0800
Subject: =?UTF-8?Q?I_just_found_out_that_when_the_input_content_is_alread?=
	=?UTF-8?Q?y_GB2312, _=E2=80=9Cwine=E2=80=9D_automatica?=
	=?UTF-8?Q?lly_mistakes_it_for_unicode?=
Message-ID: <4f79e2250809090725l5b8553f8k701954a6844a61ce@mail.gmail.com>

?*Hi there,

I am a Chinese programmer. I have a problem here with "wine"
As we know "wine" is able to convert unicode to GB2312-- but weirdly, I just
found out that when the input content is already GB2312, "wine"
automatically mistakes it for unicode and therefore attempts to convert it
again?and of course it gets a wrong output.

*?*I thought "wine" could recognize GB2312 input and knows this input needs
no conversion.

Thanks in advance!!*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080909/58f8a330/attachment.htm 

From msclrhd at googlemail.com  Tue Sep  9 09:32:29 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Tue, 9 Sep 2008 15:32:29 +0100
Subject: coverity ... new run finally
In-Reply-To: <a71bd89a0809090658y71524777s183f53073ce650ad@mail.gmail.com>
References: <a71bd89a0809090658y71524777s183f53073ce650ad@mail.gmail.com>
Message-ID: <3f4fd2640809090732n45e00c50va68fff8356a54fa9@mail.gmail.com>

2008/9/9 Dan Kegel <dank at kegel.com>:
> Marcus wrote:
>> A new Coverity run (274) was done finally, so
>> we can restart looking at issues ;)
>>
>> Still a lot of NULL ptr migration issues which suck
>> to fix, but well.
>
> Sure would be nice if Coverity could identify the cl which introduced
> each problem :-)

Given the line number you can always get that information using blame.
Admittedly, this requires more work on our part, but it should be
possible to write a script that can do this automatically.

- Reece


From robertshearman at gmail.com  Tue Sep  9 09:47:52 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 9 Sep 2008 15:47:52 +0100
Subject: =?UTF-8?Q?Re:_I_just_found_out_that_when_the_input_content_is_alre?=
	=?UTF-8?Q?ady_GB2312, _=E2=80=9Cwine=E2=80=9D_automatic?=
	=?UTF-8?Q?ally_mistakes_it_for_unicode?=
In-Reply-To: <4f79e2250809090725l5b8553f8k701954a6844a61ce@mail.gmail.com>
References: <4f79e2250809090725l5b8553f8k701954a6844a61ce@mail.gmail.com>
Message-ID: <1096648c0809090747o6cc8a96ep773c66e31aed5047@mail.gmail.com>

2008/9/9 hawaii.wine wong <hawaii.wine at gmail.com>:
> ?Hi there,
>
> I am a Chinese programmer. I have a problem here with "wine"
> As we know "wine" is able to convert unicode to GB2312-- but weirdly, I just
> found out that when the input content is already GB2312, "wine"
> automatically mistakes it for unicode and therefore attempts to convert it
> again?and of course it gets a wrong output.
>
> ?I thought "wine" could recognize GB2312 input and knows this input needs no
> conversion.

"wine" is a bit too vague to make any sense to anyone, so could you
answer a few questions:
Where is the data being input - a builtin app like notepad, or a 3rd party app?
How is the data being input - keyboard, clipboard, file or network and
if not a builtin app, which APIs are being used?
What OS are you running?
What does the typing "locale" in a terminal output?

-- 
Rob Shearman

From winehacker at gmail.com  Tue Sep  9 09:52:42 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Tue, 9 Sep 2008 10:52:42 -0400
Subject: [PATCH] Open file in binary mode to work around a windows bug
Message-ID: <19e31a080809090752hd43b75x1d5c72ff74142c23@mail.gmail.com>

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-Open-file-in-binary-mode-to-work-around-a-windows-bu.patch
Type: text/x-diff
Size: 885 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080909/bf4ba3a7/attachment.patch 

From dmitry at codeweavers.com  Tue Sep  9 10:03:05 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Wed, 10 Sep 2008 00:03:05 +0900
Subject: [PATCH] Open file in binary mode to work around a windows bug
References: <19e31a080809090752hd43b75x1d5c72ff74142c23@mail.gmail.com>
Message-ID: <3A4C6C1D47A9418FB54A7DEA44187A3C@DMITRY>

"Steven Edwards" <winehacker at gmail.com> wrote:

> [PATCH] Open file in binary mode to work around a windows bug

What bug is that? If that's a Windows bug why Wine needs to be patched?

-- 
Dmitry.


From hawaii.wine at gmail.com  Tue Sep  9 10:08:12 2008
From: hawaii.wine at gmail.com (hawaii.wine wong)
Date: Tue, 9 Sep 2008 23:08:12 +0800
Subject: =?UTF-8?Q?Re:_I_just_found_out_that_when_the_input_content_is_alre?=
	=?UTF-8?Q?ady_GB2312, _=E2=80=9Cwine=E2=80=9D_automatic?=
	=?UTF-8?Q?ally_mistakes_it_for_unicode?=
In-Reply-To: <1096648c0809090747o6cc8a96ep773c66e31aed5047@mail.gmail.com>
References: <4f79e2250809090725l5b8553f8k701954a6844a61ce@mail.gmail.com>
	<1096648c0809090747o6cc8a96ep773c66e31aed5047@mail.gmail.com>
Message-ID: <4f79e2250809090808k4848a66oe5abf13b94dc48e0@mail.gmail.com>

?I am using some third party apps developed in Chinese GB2312 by some
Chinese companies(in china, usually the companies use GB 2312)
OS info:
Linux version 2.6.24-19-generic (buildd at terranova)
 (gcc version 4.2.3 (Ubuntu 4.2.3-2ubuntu7))
#1 SMP Wed Aug 20 22:56:21 UTC 2008

wine-1.1.4( install from source )


locale'soutput follows :
~$ locale -a
C
en_AU.utf8
en_BW.utf8
en_CA.utf8
en_DK.utf8
en_GB.utf8
en_HK.utf8
en_IE.utf8
en_IN
en_NZ.utf8
en_PH.utf8
en_SG.utf8
en_US.utf8
en_ZA.utf8
en_ZW.utf8
POSIX
zh_CN
zh_CN.gb18030
zh_CN.gb2312
zh_CN.gbk
zh_CN.utf8
zh_HK.utf8
zh_SG.utf8
zh_TW.utf8



On Tue, Sep 9, 2008 at 10:47 PM, Rob Shearman <robertshearman at gmail.com> wrote:
>
> 2008/9/9 hawaii.wine wong <hawaii.wine at gmail.com>:
> > ?Hi there,
> >
> > I am a Chinese programmer. I have a problem here with "wine"
> > As we know "wine" is able to convert unicode to GB2312-- but weirdly, I just
> > found out that when the input content is already GB2312, "wine"
> > automatically mistakes it for unicode and therefore attempts to convert it
> > again?and of course it gets a wrong output.
> >
> > ?I thought "wine" could recognize GB2312 input and knows this input needs no
> > conversion.
>
> "wine" is a bit too vague to make any sense to anyone, so could you
> answer a few questions:
> Where is the data being input - a builtin app like notepad, or a 3rd party app?
> How is the data being input - keyboard, clipboard, file or network and
> if not a builtin app, which APIs are being used?
> What OS are you running?
> What does the typing "locale" in a terminal output?
>
> --
> Rob Shearman

From robertshearman at gmail.com  Tue Sep  9 10:10:54 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 9 Sep 2008 16:10:54 +0100
Subject: [PATCH] Open file in binary mode to work around a windows bug
In-Reply-To: <3A4C6C1D47A9418FB54A7DEA44187A3C@DMITRY>
References: <19e31a080809090752hd43b75x1d5c72ff74142c23@mail.gmail.com>
	<3A4C6C1D47A9418FB54A7DEA44187A3C@DMITRY>
Message-ID: <1096648c0809090810t5d7ba905gaff8acdd6d8ac5a3@mail.gmail.com>

2008/9/9 Dmitry Timoshkov <dmitry at codeweavers.com>:
> "Steven Edwards" <winehacker at gmail.com> wrote:
>
>> [PATCH] Open file in binary mode to work around a windows bug
>
> What bug is that? If that's a Windows bug why Wine needs to be patched?

It's not a bug. When opening a file in text mode on Windows, all LFs
will be converted to CRLFs. Typelib files are binary and therefore
random parts of the typelib data
will seemingly be corrupted when read.

The patch is correct, even if the description isn't.

-- 
Rob Shearman


From robertshearman at gmail.com  Tue Sep  9 10:14:15 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 9 Sep 2008 16:14:15 +0100
Subject: =?UTF-8?Q?Re:_I_just_found_out_that_when_the_input_content_is_alre?=
	=?UTF-8?Q?ady_GB2312, _=E2=80=9Cwine=E2=80=9D_automatic?=
	=?UTF-8?Q?ally_mistakes_it_for_unicode?=
In-Reply-To: <4f79e2250809090808k4848a66oe5abf13b94dc48e0@mail.gmail.com>
References: <4f79e2250809090725l5b8553f8k701954a6844a61ce@mail.gmail.com>
	<1096648c0809090747o6cc8a96ep773c66e31aed5047@mail.gmail.com>
	<4f79e2250809090808k4848a66oe5abf13b94dc48e0@mail.gmail.com>
Message-ID: <1096648c0809090814r25de0466rfeb88cfbe015202f@mail.gmail.com>

2008/9/9 hawaii.wine wong <hawaii.wine at gmail.com>:
> I am using some third party apps developed in Chinese GB2312 by some
> Chinese companies(in china, usually the companies use GB 2312)
> OS info:
> Linux version 2.6.24-19-generic (buildd at terranova)
>  (gcc version 4.2.3 (Ubuntu 4.2.3-2ubuntu7))
> #1 SMP Wed Aug 20 22:56:21 UTC 2008
>
> wine-1.1.4( install from source )
>
>
> locale'soutput follows :
> ~$ locale -a

Please read my previous mail carefully and try to answer all of the
questions. It will be difficult to help you otherwise.

> On Tue, Sep 9, 2008 at 10:47 PM, Rob Shearman <robertshearman at gmail.com> wrote:
>>
>> 2008/9/9 hawaii.wine wong <hawaii.wine at gmail.com>:
>> > ?Hi there,
>> >
>> > I am a Chinese programmer. I have a problem here with "wine"
>> > As we know "wine" is able to convert unicode to GB2312-- but weirdly, I just
>> > found out that when the input content is already GB2312, "wine"
>> > automatically mistakes it for unicode and therefore attempts to convert it
>> > again?and of course it gets a wrong output.
>> >
>> > ?I thought "wine" could recognize GB2312 input and knows this input needs no
>> > conversion.
>>
>> "wine" is a bit too vague to make any sense to anyone, so could you
>> answer a few questions:
>> Where is the data being input - a builtin app like notepad, or a 3rd party app?
>> How is the data being input - keyboard, clipboard, file or network and
>> if not a builtin app, which APIs are being used?
>> What OS are you running?
>> What does the typing "locale" in a terminal output?


-- 
Rob Shearman

From hawaii.wine at gmail.com  Tue Sep  9 10:22:23 2008
From: hawaii.wine at gmail.com (hawaii.wine wong)
Date: Tue, 9 Sep 2008 23:22:23 +0800
Subject: =?UTF-8?Q?Re:_I_just_found_out_that_when_the_input_content_is_alre?=
	=?UTF-8?Q?ady_GB2312, _=E2=80=9Cwine=E2=80=9D_automatic?=
	=?UTF-8?Q?ally_mistakes_it_for_unicode?=
In-Reply-To: <1096648c0809090814r25de0466rfeb88cfbe015202f@mail.gmail.com>
References: <4f79e2250809090725l5b8553f8k701954a6844a61ce@mail.gmail.com>
	<1096648c0809090747o6cc8a96ep773c66e31aed5047@mail.gmail.com>
	<4f79e2250809090808k4848a66oe5abf13b94dc48e0@mail.gmail.com>
	<1096648c0809090814r25de0466rfeb88cfbe015202f@mail.gmail.com>
Message-ID: <4f79e2250809090822g4c85f40dl46c3c92cfabe519@mail.gmail.com>

In simple words, i use a app that's text written in gb2312, wine can
not show that correctly.
i use ubuntu and it has support for gb2312 , because i can use gedit
to read text encoding in  gb2312 .


On Tue, Sep 9, 2008 at 11:14 PM, Rob Shearman <robertshearman at gmail.com> wrote:
> 2008/9/9 hawaii.wine wong <hawaii.wine at gmail.com>:
>> I am using some third party apps developed in Chinese GB2312 by some
>> Chinese companies(in china, usually the companies use GB 2312)
>> OS info:
>> Linux version 2.6.24-19-generic (buildd at terranova)
>>  (gcc version 4.2.3 (Ubuntu 4.2.3-2ubuntu7))
>> #1 SMP Wed Aug 20 22:56:21 UTC 2008
>>
>> wine-1.1.4( install from source )
>>
>>
>> locale'soutput follows :
>> ~$ locale -a
>
> Please read my previous mail carefully and try to answer all of the
> questions. It will be difficult to help you otherwise.
>
>> On Tue, Sep 9, 2008 at 10:47 PM, Rob Shearman <robertshearman at gmail.com> wrote:
>>>
>>> 2008/9/9 hawaii.wine wong <hawaii.wine at gmail.com>:
>>> > ?Hi there,
>>> >
>>> > I am a Chinese programmer. I have a problem here with "wine"
>>> > As we know "wine" is able to convert unicode to GB2312-- but weirdly, I just
>>> > found out that when the input content is already GB2312, "wine"
>>> > automatically mistakes it for unicode and therefore attempts to convert it
>>> > again?and of course it gets a wrong output.
>>> >
>>> > ?I thought "wine" could recognize GB2312 input and knows this input needs no
>>> > conversion.
>>>
>>> "wine" is a bit too vague to make any sense to anyone, so could you
>>> answer a few questions:
>>> Where is the data being input - a builtin app like notepad, or a 3rd party app?
>>> How is the data being input - keyboard, clipboard, file or network and
>>> if not a builtin app, which APIs are being used?
>>> What OS are you running?
>>> What does the typing "locale" in a terminal output?
>
>
> --
> Rob Shearman
>

From mike.engelhardt at sbcglobal.net  Tue Sep  9 10:24:46 2008
From: mike.engelhardt at sbcglobal.net (Mike Engelhardt)
Date: Tue, 9 Sep 2008 08:24:46 -0700
Subject: Launching a Linux Executable from a Windows app Running under Wine
Message-ID: <A9FF9CF9D61C457781569145F8077378@notebook>

I write a Windows application that I want to be
useful under Linux & WINE.  I want to use xchm to
view the help documentation .chm file since
WINE doesn't yet properly display this .chm file
which was generated with third party tools and
includes advanced features.  xchm does render the
file acceptably and I'll e-mail the .chm file to
anyone interested in that.

But for the time being, I want to simply launch
xchm from my app whenever my app finds itself
being run under WINE.  What I have is done so far
is system() a command with path names of xchm
and my .chm file that seem to basically be trying
to outsmart WINE outsmarting Windows.  Clearly this
is an ugly hack and is not a long term solution.

Is there a supported/recommended manner of launching
an X Window System executable with Linux absolute
path arguments from a MS Windows application running
under Linux & WINE?

--Mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080909/dd2120ff/attachment.htm 

From robertshearman at gmail.com  Tue Sep  9 10:27:27 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 9 Sep 2008 16:27:27 +0100
Subject: Simplify dlls/atl/registrar.c
In-Reply-To: <alpine.LSU.1.99.0809071542570.3773@acrux.dbai.tuwien.ac.at>
References: <alpine.LSU.1.99.0809071542570.3773@acrux.dbai.tuwien.ac.at>
Message-ID: <1096648c0809090827i57735379l3aae0fe7c9256dd4@mail.gmail.com>

2008/9/7 Gerald Pfeifer <gerald at pfeifer.com>:
> --- dlls/atl/registrar.c        7 May 2008 12:06:02 -0000       1.29
> +++ dlls/atl/registrar.c        7 Sep 2008 13:42:54 -0000
> @@ -661,7 +661,7 @@ static const IRegistrarVtbl RegistrarVtb
>     Registrar_ResourceUnregister,
>  };
>
> -static HRESULT Registrar_create(const IUnknown *pUnkOuter, REFIID riid, void **ppvObject)
> +static HRESULT Registrar_create(REFIID riid, void **ppvObject)
>  {
>     Registrar *ret;
>
> @@ -711,7 +711,7 @@ static HRESULT WINAPI RegistrarCF_Create
>                                                 REFIID riid, void **ppvObject)
>  {
>     TRACE("(%p)->(%s %p)\n", iface, debugstr_guid(riid), ppvObject);
> -    return Registrar_create(pUnkOuter, riid, ppvObject);
> +    return Registrar_create(riid, ppvObject);
>  }

A test needs to be added to see whether or not the Registrar class
factory supports aggregation. If it does then a FIXME should be
emitted. If not then an ERR may be emitted and CLASS_E_NOAGGREGATION
returned. Just removing pUnkOuter isn't the right thing to do.

-- 
Rob Shearman


From robertshearman at gmail.com  Tue Sep  9 10:30:16 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 9 Sep 2008 16:30:16 +0100
Subject: =?UTF-8?Q?Re:_I_just_found_out_that_when_the_input_content_is_alre?=
	=?UTF-8?Q?ady_GB2312, _=E2=80=9Cwine=E2=80=9D_automatic?=
	=?UTF-8?Q?ally_mistakes_it_for_unicode?=
In-Reply-To: <4f79e2250809090822g4c85f40dl46c3c92cfabe519@mail.gmail.com>
References: <4f79e2250809090725l5b8553f8k701954a6844a61ce@mail.gmail.com>
	<1096648c0809090747o6cc8a96ep773c66e31aed5047@mail.gmail.com>
	<4f79e2250809090808k4848a66oe5abf13b94dc48e0@mail.gmail.com>
	<1096648c0809090814r25de0466rfeb88cfbe015202f@mail.gmail.com>
	<4f79e2250809090822g4c85f40dl46c3c92cfabe519@mail.gmail.com>
Message-ID: <1096648c0809090830o2ec0204w1667efaf5896ffdc@mail.gmail.com>

2008/9/9 hawaii.wine wong <hawaii.wine at gmail.com>:
> In simple words, i use a app that's text written in gb2312, wine can
> not show that correctly.
> i use ubuntu and it has support for gb2312 , because i can use gedit
> to read text encoding in  gb2312 .

So, you're trying to type text into the application and it doesn't
show up correctly, right?

Does it work if you use Wine's notepad?

-- 
Rob Shearman


From hawaii.wine at gmail.com  Tue Sep  9 10:42:22 2008
From: hawaii.wine at gmail.com (hawaii.wine wong)
Date: Tue, 9 Sep 2008 23:42:22 +0800
Subject: =?UTF-8?Q?Re:_I_just_found_out_that_when_the_input_content_is_alre?=
	=?UTF-8?Q?ady_GB2312, _=E2=80=9Cwine=E2=80=9D_automatic?=
	=?UTF-8?Q?ally_mistakes_it_for_unicode?=
In-Reply-To: <1096648c0809090830o2ec0204w1667efaf5896ffdc@mail.gmail.com>
References: <4f79e2250809090725l5b8553f8k701954a6844a61ce@mail.gmail.com>
	<1096648c0809090747o6cc8a96ep773c66e31aed5047@mail.gmail.com>
	<4f79e2250809090808k4848a66oe5abf13b94dc48e0@mail.gmail.com>
	<1096648c0809090814r25de0466rfeb88cfbe015202f@mail.gmail.com>
	<4f79e2250809090822g4c85f40dl46c3c92cfabe519@mail.gmail.com>
	<1096648c0809090830o2ec0204w1667efaf5896ffdc@mail.gmail.com>
Message-ID: <4f79e2250809090842o2030a9d9scad41c4e99e35b4e@mail.gmail.com>

i can not type Chinese into notepad~~~~

and
the code follows also can not work correctly
it'soutput was
45
???

not
45
??

//winegcc -o test test.c
#include<stdio.h>
//#include<windows.h>
#include <locale.h>

int main()
{
  int i;
  int sum=0;
  for( i=0 ; i< 10 ; i++ ){
    sum+=i;
  }
  printf("%d\r\n",sum);
  printf("??\n");
  return sum;
}



On Tue, Sep 9, 2008 at 11:30 PM, Rob Shearman <robertshearman at gmail.com> wrote:
> 2008/9/9 hawaii.wine wong <hawaii.wine at gmail.com>:
>> In simple words, i use a app that's text written in gb2312, wine can
>> not show that correctly.
>> i use ubuntu and it has support for gb2312 , because i can use gedit
>> to read text encoding in  gb2312 .
>
> So, you're trying to type text into the application and it doesn't
> show up correctly, right?
>
> Does it work if you use Wine's notepad?
>
> --
> Rob Shearman
>

From winehacker at gmail.com  Tue Sep  9 10:46:25 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Tue, 9 Sep 2008 11:46:25 -0400
Subject: [PATCH] Open file in binary mode to work around a windows bug
In-Reply-To: <1096648c0809090810t5d7ba905gaff8acdd6d8ac5a3@mail.gmail.com>
References: <19e31a080809090752hd43b75x1d5c72ff74142c23@mail.gmail.com>
	<3A4C6C1D47A9418FB54A7DEA44187A3C@DMITRY>
	<1096648c0809090810t5d7ba905gaff8acdd6d8ac5a3@mail.gmail.com>
Message-ID: <19e31a080809090846j58a7d38dk69b9695a6f57e0e6@mail.gmail.com>

On Tue, Sep 9, 2008 at 11:10 AM, Rob Shearman <robertshearman at gmail.com> wrote:
> 2008/9/9 Dmitry Timoshkov <dmitry at codeweavers.com>:
>> "Steven Edwards" <winehacker at gmail.com> wrote:
>>
>>> [PATCH] Open file in binary mode to work around a windows bug
>>
>> What bug is that? If that's a Windows bug why Wine needs to be patched?
>
> It's not a bug. When opening a file in text mode on Windows, all LFs
> will be converted to CRLFs. Typelib files are binary and therefore
> random parts of the typelib data
> will seemingly be corrupted when read.
>
> The patch is correct, even if the description isn't.

Sorry I should have said "Allow opening files in binary mode to avoid
corruption from text mode on Windows" or some such. I know the line
LF/CRLF stuff is not really a bug as there is not a standard that says
"All line endings should follow the Unix method" I just view the
historic dos/windows usage as a bug.

If Alexandre does not apply it I will resend.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From juan.lang at gmail.com  Tue Sep  9 10:51:32 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 9 Sep 2008 08:51:32 -0700
Subject: coverity ... new run finally
In-Reply-To: <a71bd89a0809090658y71524777s183f53073ce650ad@mail.gmail.com>
References: <a71bd89a0809090658y71524777s183f53073ce650ad@mail.gmail.com>
Message-ID: <3a768c550809090851i7fbfcfc8vcdf8d3d9725e772f@mail.gmail.com>

Hi Dan,

> There are only 23 not in test code:

am I confused by this statement?  The following sure seem to be in
test code, unless I misunderstand your meaning:
> 726     OVERRUN_STATIC  test_EnumGroupsInGroup  dplayx/tests/dplayx.c
> 722     FORWARD_NULL    test_OpenRequest        winhttp/tests/winhttp.c
> 723     FORWARD_NULL    test_SendRequest        winhttp/tests/winhttp.c
> 724     FORWARD_NULL    test_WinHttpAddHeaders  winhttp/tests/winhttp.c
> 712     FORWARD_NULL    test_mmioOpen   winmm/tests/mmio.c

--Juan


From wine at mkarcher.dialup.fu-berlin.de  Tue Sep  9 10:51:46 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Tue, 09 Sep 2008 17:51:46 +0200
Subject: user32.dll: Implementation for LockWorkStation() based on
	xdg-screensaver
In-Reply-To: <200809091825.03919.paulc@voip.null.ro>
References: <200809091825.03919.paulc@voip.null.ro>
Message-ID: <1220975506.12534.18.camel@hermes2.karcher.local>

Am Dienstag, den 09.09.2008, 18:25 +0300 schrieb Paul Chitescu:
> Known problems:
> 1. Although trying to check with access() if /usr/bin/xdg-screensaver is 
> executable there is no error returned from spawnvp() if exec() eventually 
> fails after fork() succeeds. Unlikely but possible.
I see that as a bug in spawnvp(). You can not do anything about that.
But I dislike checking using access, because
 a) it is a well-known race condition (in this case, it does not seem to
    matter, as /usr/bin should be writable by root only).
 b) you sacrifice the possibility to find /usr/local/bin/xdg-screensaver
    if the utility has been locally added. (more important point).
Would removing the access call and just trying to call xdg-screensaver
have any negative implication except for not letting the windows
application know that locking failed? If not, I would remove the call,
as MSDN says that locking can also fail on Windows for various reasons
even if LockWorkStation returned TRUE.

> 2. No way to disable it - maybe users don't want their screen locked.
So what? If a windows process calls LockWorkStation when the user does
not want the workstation to be locked, it's a bug in the windows
process, except...

> 3. Doesn't take into account virtual desktops, and I have no idea what it 
> should do in that case, just deny access?
... if running in virtual desktop mode. (I suppose you mean
"explorer /desktop" and not virtual desktop provided by X Window
managers or virtual desktops provided by the linux kernel) As the real
right way to implement this call is to SendMessage to explorer.exe, and
explorer knows whether it runs in virtual desktop mode, I would suggest
that the patch be extended to handle the screensaver start in Wine's
explorer process, and just do nothing in the virtual desktop case.

Regards,
  Michael Karcher




From winehacker at gmail.com  Tue Sep  9 10:55:10 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Tue, 9 Sep 2008 11:55:10 -0400
Subject: user32.dll: Implementation for LockWorkStation() based on
	xdg-screensaver
In-Reply-To: <200809091825.03919.paulc@voip.null.ro>
References: <200809091825.03919.paulc@voip.null.ro>
Message-ID: <19e31a080809090855vcad2453yfb95c6863db0c8e6@mail.gmail.com>

On Tue, Sep 9, 2008 at 11:25 AM, Paul Chitescu <paulc at voip.null.ro> wrote:
> Changelog:
>        user32.dll: Implementation for LockWorkStation() based on
> xdg-screensaver
>
> Thanks to Steven Edwards (winehacker at gmail.com) for the idea of
> using "xdg-screensaver lock".

When I submitted the patch before, Alexandre and I discussed this both
on and off list, I think there is another thread somewhere regarding
it and I think he wanted it in explorer because of applications
running in Desktop mode. I think the right behavior is to send a
message to Explorer and if a wine application is not running in
desktop mode then to invoke the xdg-screensaver, otherwise we should
stub out or load a windows style screensaver in the emulated desktop.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From kai.blin at gmail.com  Tue Sep  9 10:59:05 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Tue, 9 Sep 2008 17:59:05 +0200
Subject: James Hawkins : netapi32: Fix two failing tests in NT4.
In-Reply-To: <E1KariF-00034j-TY@wine.codeweavers.com>
References: <E1KariF-00034j-TY@wine.codeweavers.com>
Message-ID: <200809091759.16201.kai.blin@gmail.com>

On Wednesday 03 September 2008 14:43:55 Alexandre Julliard wrote:

> -        ok(ret == NERR_BadUsername, "Adding user with too long username
> returned 0x%08x\n", ret); +        ok(ret == NERR_BadUsername ||
> +           broken(ret == NERR_PasswordTooShort), /* NT4 */
> +           "Adding user with too long username returned 0x%08x\n", ret);
>

I'd argue that this is not broken, but the only error NT4 returns for bad 
username/password combinations. At least the comments in the surrounding code 
should be updated. Sorry for not catching this one earlier, I didn't have 
that much time for Wine recently.

Cheers,
Kai

--
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080909/bd5d7cbb/attachment-0001.pgp 

From winehacker at gmail.com  Tue Sep  9 11:00:15 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Tue, 9 Sep 2008 12:00:15 -0400
Subject: Launching a Linux Executable from a Windows app Running under Wine
In-Reply-To: <A9FF9CF9D61C457781569145F8077378@notebook>
References: <A9FF9CF9D61C457781569145F8077378@notebook>
Message-ID: <19e31a080809090900l5e18ffd2rd09f27b4dc4c99fd@mail.gmail.com>

On Tue, Sep 9, 2008 at 11:24 AM, Mike Engelhardt
<mike.engelhardt at sbcglobal.net> wrote:
> Is there a supported/recommended manner of launching
> an X Window System executable with Linux absolute
> path arguments from a MS Windows application running
> under Linux & WINE?

There is a script to invoke native apps that have a windows
association. I don't know if this will really work the way you want.
If you expect to be able to just click on help and have it invoke xchm
for chm files, then no but if there is a windows association set and
your application tries to open the file using the association method,
like say you have pdf files registered using xpdf and IE tries to Open
the pdf, then yes it will work.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From dmitry at codeweavers.com  Tue Sep  9 11:03:26 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Wed, 10 Sep 2008 01:03:26 +0900
Subject: [PATCH] Open file in binary mode to work around a windows bug
References: <19e31a080809090752hd43b75x1d5c72ff74142c23@mail.gmail.com>
	<3A4C6C1D47A9418FB54A7DEA44187A3C@DMITRY>
	<1096648c0809090810t5d7ba905gaff8acdd6d8ac5a3@mail.gmail.com>
	<19e31a080809090846j58a7d38dk69b9695a6f57e0e6@mail.gmail.com>
Message-ID: <8C458916BB624F4BA46B0BF7E312A41E@DMITRY>

"Steven Edwards" <winehacker at gmail.com> wrote:

> If Alexandre does not apply it I will resend.

Usually he doesn't apply the patches sent to wine-devel, so
you have to resend.

-- 
Dmitry.


From winehacker at gmail.com  Tue Sep  9 11:06:43 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Tue, 9 Sep 2008 12:06:43 -0400
Subject: [PATCH] Open file in binary mode to work around a windows bug
In-Reply-To: <8C458916BB624F4BA46B0BF7E312A41E@DMITRY>
References: <19e31a080809090752hd43b75x1d5c72ff74142c23@mail.gmail.com>
	<3A4C6C1D47A9418FB54A7DEA44187A3C@DMITRY>
	<1096648c0809090810t5d7ba905gaff8acdd6d8ac5a3@mail.gmail.com>
	<19e31a080809090846j58a7d38dk69b9695a6f57e0e6@mail.gmail.com>
	<8C458916BB624F4BA46B0BF7E312A41E@DMITRY>
Message-ID: <19e31a080809090906k2fcd0fdbq72bf3f16bd0e336b@mail.gmail.com>

On Tue, Sep 9, 2008 at 12:03 PM, Dmitry Timoshkov
<dmitry at codeweavers.com> wrote:
> "Steven Edwards" <winehacker at gmail.com> wrote:
>
>> If Alexandre does not apply it I will resend.
>
> Usually he doesn't apply the patches sent to wine-devel, so
> you have to resend.

Duh! I am being really careless today for some reason...

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From dank at kegel.com  Tue Sep  9 11:31:43 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 9 Sep 2008 09:31:43 -0700
Subject: coverity ... new run finally
In-Reply-To: <3a768c550809090851i7fbfcfc8vcdf8d3d9725e772f@mail.gmail.com>
References: <a71bd89a0809090658y71524777s183f53073ce650ad@mail.gmail.com>
	<3a768c550809090851i7fbfcfc8vcdf8d3d9725e772f@mail.gmail.com>
Message-ID: <a71bd89a0809090931u1093ada9xcdce410f539db63@mail.gmail.com>

On Tue, Sep 9, 2008 at 8:51 AM, Juan Lang <juan.lang at gmail.com> wrote:
>> There are only 23 not in test code:
>
> am I confused by this statement?  The following sure seem to be in
> test code, unless I misunderstand your meaning:
>> 726     OVERRUN_STATIC  test_EnumGroupsInGroup  dplayx/tests/dplayx.c
>> 722     FORWARD_NULL    test_OpenRequest        winhttp/tests/winhttp.c
>> 723     FORWARD_NULL    test_SendRequest        winhttp/tests/winhttp.c
>> 724     FORWARD_NULL    test_WinHttpAddHeaders  winhttp/tests/winhttp.c
>> 712     FORWARD_NULL    test_mmioOpen   winmm/tests/mmio.c

Did you count the ones I listed not in test code?  I probably should
have separated them out...


From juan.lang at gmail.com  Tue Sep  9 11:39:48 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 9 Sep 2008 09:39:48 -0700
Subject: coverity ... new run finally
In-Reply-To: <a71bd89a0809090931u1093ada9xcdce410f539db63@mail.gmail.com>
References: <a71bd89a0809090658y71524777s183f53073ce650ad@mail.gmail.com>
	<3a768c550809090851i7fbfcfc8vcdf8d3d9725e772f@mail.gmail.com>
	<a71bd89a0809090931u1093ada9xcdce410f539db63@mail.gmail.com>
Message-ID: <3a768c550809090939q794b0a14l32abe5fffb9be575@mail.gmail.com>

> Did you count the ones I listed not in test code?  I probably should
> have separated them out...

No, I didn't.  Now I understand the source of my confusion, thanks.

My account appears to be closed, so I hope you don't mind if I tell
you the status of the two new crypt32 reports:
725     NULL_RETURNS    Context_CopyProperties  crypt32/context.c
This one is valid, sort of.  The returned property lists might indeed
be NULL, but only if a) the app passes a bogus pointer, which will
crash on Windows, b) Wine's code passes a bogus pointer, which is a
bug elsewhere, or c) memory gets corrupted.  As these are all
exceptional conditions, I'll introduce an assert.

715     FORWARD_NULL    CryptMsgGetAndVerifySigner      crypt32/msg.c
False positive, though it would be hard for a static analyzer to know
it.  I believe it's complaining about pdwSignerIndex being
dereferenced on line 2848, when it's checked against NULL on line
2827, implying it might be allowed to be NULL.  However it's only
dereferenced if CMSG_USE_SIGNER_INDEX_FLAG is set, which implies that
pdwSignerIndex must not be NULL.
--Juan


From mike.engelhardt at sbcglobal.net  Tue Sep  9 11:56:00 2008
From: mike.engelhardt at sbcglobal.net (Mike Engelhardt)
Date: Tue, 9 Sep 2008 09:56:00 -0700
Subject: Launching a Linux Executable from a Windows app Running under Wine
References: <A9FF9CF9D61C457781569145F8077378@notebook>
	<19e31a080809090900l5e18ffd2rd09f27b4dc4c99fd@mail.gmail.com>
Message-ID: <24EFB3ABCDC842FE846EE78B6EE7CC32@notebook>

Steve,


> On Tue, Sep 9, 2008 at 11:24 AM, Mike Engelhardt
> <mike.engelhardt at sbcglobal.net> wrote:
>> Is there a supported/recommended manner of launching
>> an X Window System executable with Linux absolute
>> path arguments from a MS Windows application running
>> under Linux & WINE?
> 
> There is a script to invoke native apps that have a windows
> association. I don't know if this will really work the way you want.
> If you expect to be able to just click on help and have it invoke xchm
> for chm files, then no but if there is a windows association set and
> your application tries to open the file using the association method,
> like say you have pdf files registered using xpdf and IE tries to Open
> the pdf, then yes it will work.

I'm do not want to change global associations, I just
want a way to launch a Linux executable from a Windows
program.  Right now, I've written the Windows app to
do this:

   char XchmViewer[MAX_PATH] = "Z:\\usr\\bin\\xchm";
   sprintf(cmd, "%s %s", XchmViewer, helpfilepath);
   system(cmd);

Where the helpfilepath is computed to outsmart WINE
trying to outsmart Windows.  I also don't like that
I have to use a path like "Z:\\usr\\bin\\xchm" to
invoke /usr/bin/xchm since my app should not need to
know what the drive letters are.

Since I'm the one writing the Windows app, I would like
to be able to launch a better native Linux app to launch
than WINE's .chm viewer.

--Mike


From juan.lang at gmail.com  Tue Sep  9 11:57:56 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 9 Sep 2008 09:57:56 -0700
Subject: ws2_32: ioctlsocket should try to check if argp is valid
Message-ID: <3a768c550809090957s4a4e535dl9c39b460dcfe56d2@mail.gmail.com>

Hi Jeff, I have a stylistic complaint about your tests in this patch:

+    if(sock == INVALID_SOCKET)
+    {
+        ok(0, "Creating the socket failed: %d, skipping test\n",
WSAGetLastError());
+        return;
+    }
If you intend to skip a test, shouldn't you use skip instead?

+        ret = ioctlsocket(sock, cmds[i], (u_long *)1);
+        if(ret != SOCKET_ERROR)
+           ok(0, "ioctlsocket succeeded unexpectedly\n");
+        else
+        {
I'm not a fan of the ok(0) approach here.  Why not use ok(ret ==
SOCKET_ERROR) instead?
--Juan


From robertshearman at gmail.com  Tue Sep  9 12:08:41 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 9 Sep 2008 18:08:41 +0100
Subject: Launching a Linux Executable from a Windows app Running under Wine
In-Reply-To: <24EFB3ABCDC842FE846EE78B6EE7CC32@notebook>
References: <A9FF9CF9D61C457781569145F8077378@notebook>
	<19e31a080809090900l5e18ffd2rd09f27b4dc4c99fd@mail.gmail.com>
	<24EFB3ABCDC842FE846EE78B6EE7CC32@notebook>
Message-ID: <1096648c0809091008t5703f10cw9f2fc3a2952f1849@mail.gmail.com>

2008/9/9 Mike Engelhardt <mike.engelhardt at sbcglobal.net>:
> Steve,
>
>
>> On Tue, Sep 9, 2008 at 11:24 AM, Mike Engelhardt
>> <mike.engelhardt at sbcglobal.net> wrote:
>>> Is there a supported/recommended manner of launching
>>> an X Window System executable with Linux absolute
>>> path arguments from a MS Windows application running
>>> under Linux & WINE?
>>
>> There is a script to invoke native apps that have a windows
>> association. I don't know if this will really work the way you want.
>> If you expect to be able to just click on help and have it invoke xchm
>> for chm files, then no but if there is a windows association set and
>> your application tries to open the file using the association method,
>> like say you have pdf files registered using xpdf and IE tries to Open
>> the pdf, then yes it will work.
>
> I'm do not want to change global associations, I just
> want a way to launch a Linux executable from a Windows
> program.  Right now, I've written the Windows app to
> do this:
>
>   char XchmViewer[MAX_PATH] = "Z:\\usr\\bin\\xchm";
>   sprintf(cmd, "%s %s", XchmViewer, helpfilepath);
>   system(cmd);
>
> Where the helpfilepath is computed to outsmart WINE
> trying to outsmart Windows.  I also don't like that
> I have to use a path like "Z:\\usr\\bin\\xchm" to
> invoke /usr/bin/xchm since my app should not need to
> know what the drive letters are.
>
> Since I'm the one writing the Windows app, I would like
> to be able to launch a better native Linux app to launch
> than WINE's .chm viewer.

Hi Mike,

You should you should just do "ShellExecute(helpfilepath)" and set the
default value of HKCR\chm.file\shell\open\command to Z:\usr\bin\xchm
on install and the user can change this if he or she wishes.

I think it is safe to assume that Z: will always map to "/" in Wine.
You can always not install the association if Z: isn't mapped to
anything.

-- 
Rob Shearman


From jeffzaroyko at gmail.com  Tue Sep  9 12:21:10 2008
From: jeffzaroyko at gmail.com (Jeff Zaroyko)
Date: Wed, 10 Sep 2008 03:21:10 +1000
Subject: ws2_32: ioctlsocket should try to check if argp is valid
In-Reply-To: <3a768c550809090957s4a4e535dl9c39b460dcfe56d2@mail.gmail.com>
References: <3a768c550809090957s4a4e535dl9c39b460dcfe56d2@mail.gmail.com>
Message-ID: <f5d9424f0809091021i19f836fcxe292958f9940e9cf@mail.gmail.com>

On Wed, Sep 10, 2008 at 2:57 AM, Juan Lang <juan.lang at gmail.com> wrote:
> Hi Jeff, I have a stylistic complaint about your tests in this patch:
>
> +    if(sock == INVALID_SOCKET)
> +    {
> +        ok(0, "Creating the socket failed: %d, skipping test\n",
> WSAGetLastError());
> +        return;
> +    }
> If you intend to skip a test, shouldn't you use skip instead?
> +        ret = ioctlsocket(sock, cmds[i], (u_long *)1);
> +        if(ret != SOCKET_ERROR)
> +           ok(0, "ioctlsocket succeeded unexpectedly\n");
> +        else
> +        {
> I'm not a fan of the ok(0) approach here.  Why not use ok(ret ==
> SOCKET_ERROR) instead?
> --Juan
>

Good point, I'll use skip instead and for your second concern, I guess
I can use the return value of ok(ret == SOCKET_ERROR,.. in an if
expression.

I'll resend.

Thanks
-Jeff


From alexd4 at inbox.lv  Tue Sep  9 13:12:55 2008
From: alexd4 at inbox.lv (Alexander Dorofeyev)
Date: Tue, 09 Sep 2008 21:12:55 +0300
Subject: coverity ... new run finally
In-Reply-To: <a71bd89a0809090658y71524777s183f53073ce650ad@mail.gmail.com>
References: <a71bd89a0809090658y71524777s183f53073ce650ad@mail.gmail.com>
Message-ID: <48C6BCA7.9020601@inbox.lv>

Dan Kegel wrote:

>> Still a lot of NULL ptr migration issues which suck
>> to fix, but well.
> 709     DEADCODE        DEVENUM_ReadPinTypes    devenum/createdevenum.c
> 717     FORWARD_NULL    DEVENUM_ReadPinTypes    devenum/createdevenum.c

NULL-dereference may be a false positive from the way memory for lpMediaType is 
allocated there. Not sure though, will look some more later; BTW, a stupid 
question - is there more details available on what and where it detects in the 
function (free of charge)? Couldn't really find it by quick look around their 
website and google, except short definition of FORWARD_NULL meaning etc.

> 713     FORWARD_NULL    TestFilter_Create       quartz/tests/filtergraph.c

I sent a patch for this.


From wine.dev at web.de  Tue Sep  9 13:37:36 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Tue, 09 Sep 2008 20:37:36 +0200
Subject: Patchwatcher online
In-Reply-To: <a71bd89a0809051024k5f65d745m300071cf870fb738@mail.gmail.com>
References: <a71bd89a0809051024k5f65d745m300071cf870fb738@mail.gmail.com>
Message-ID: <1220985456.5832.13.camel@p4.lan>

On Fr, 2008-09-05 at 10:24 -0700, Dan Kegel wrote:
> The results page
> http://kegel.com/wine/patchwatcher/results/
> looks nice and green; 

Opps, all developer send there Patches in September with "09" as minute,
and in August with "08" ...

:-)

And it would be very nice, when you hide the Email-Address to
block the bots, who collect spam targets.




-- 
 
By by ... Detlef




From dank at kegel.com  Tue Sep  9 13:45:54 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 9 Sep 2008 11:45:54 -0700
Subject: Patchwatcher online
In-Reply-To: <1220985456.5832.13.camel@p4.lan>
References: <a71bd89a0809051024k5f65d745m300071cf870fb738@mail.gmail.com>
	<1220985456.5832.13.camel@p4.lan>
Message-ID: <a71bd89a0809091145s2812ccfcwb3f327985a4bd53a@mail.gmail.com>

On Tue, Sep 9, 2008 at 11:37 AM, Detlef Riekenberg <wine.dev at web.de> wrote:
>> http://kegel.com/wine/patchwatcher/results/
>
> Opps, all developer send there Patches in September with "09" as minute,
> and in August with "08" ...

Whoops!

> And it would be very nice, when you hide the Email-Address to
> block the bots, who collect spam targets.

Is that needed, given how the addresses are in the open on
the mailing list and all its archives?


From juan.lang at gmail.com  Tue Sep  9 13:55:43 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 9 Sep 2008 11:55:43 -0700
Subject: ws2_32: ioctlsocket should try to check if argp is valid (try 2)
Message-ID: <3a768c550809091155k6ec9ab6al2567fff0e72ee217@mail.gmail.com>

Hi Jeff,

+    if(sock == INVALID_SOCKET)
+        skip("Creating the socket failed: %d, skipping test.\n",
WSAGetLastError());
skip needs a return too.

+        ret = ioctlsocket(sock, cmds[i], (u_long *)1);
+        if(ok(ret == SOCKET_ERROR, "ioctlsocket succeeded unexpectedly\n"))
+        {
I think you mean:
ok(ret == SOCKET_ERROR...)
if (ret == SOCKET_ERROR)
{
}
although really the if is unnecessary, as you won't cause a crash if
the first test fails.
--Juan


From jeffzaroyko at gmail.com  Tue Sep  9 14:13:18 2008
From: jeffzaroyko at gmail.com (Jeff Zaroyko)
Date: Wed, 10 Sep 2008 05:13:18 +1000
Subject: ws2_32: ioctlsocket should try to check if argp is valid (try 2)
In-Reply-To: <3a768c550809091155k6ec9ab6al2567fff0e72ee217@mail.gmail.com>
References: <3a768c550809091155k6ec9ab6al2567fff0e72ee217@mail.gmail.com>
Message-ID: <f5d9424f0809091213h60c6adc7x4081adfdd41d50f@mail.gmail.com>

On Wed, Sep 10, 2008 at 4:55 AM, Juan Lang <juan.lang at gmail.com> wrote:
> Hi Jeff,
>
> +    if(sock == INVALID_SOCKET)
> +        skip("Creating the socket failed: %d, skipping test.\n",
> WSAGetLastError());
> skip needs a return too.
>
> +        ret = ioctlsocket(sock, cmds[i], (u_long *)1);
> +        if(ok(ret == SOCKET_ERROR, "ioctlsocket succeeded unexpectedly\n"))
> +        {
> I think you mean:
> ok(ret == SOCKET_ERROR...)
> if (ret == SOCKET_ERROR)
> {
> }
> although really the if is unnecessary, as you won't cause a crash if
> the first test fails.
> --Juan
>

Oops, yes, there should be a return there.  if(ok(expr, seems
perfectly valid, but yes I see that it could be considered
unnecessary.  I only added the if expression because printing the
value of WSALastError(); didn't seem relevant if ioctlsocket
succeeded.  I'll remove the if to simplify it.

Thanks for the feedback
-Jeff


From hverbeet at gmail.com  Tue Sep  9 15:01:47 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Tue, 9 Sep 2008 22:01:47 +0200
Subject: Patchwatcher online
In-Reply-To: <a71bd89a0809091145s2812ccfcwb3f327985a4bd53a@mail.gmail.com>
References: <a71bd89a0809051024k5f65d745m300071cf870fb738@mail.gmail.com>
	<1220985456.5832.13.camel@p4.lan>
	<a71bd89a0809091145s2812ccfcwb3f327985a4bd53a@mail.gmail.com>
Message-ID: <d658b69e0809091301qbefbbfdi9d925846d1f7fca@mail.gmail.com>

2008/9/9 Dan Kegel <dank at kegel.com>:
>> And it would be very nice, when you hide the Email-Address to
>> block the bots, who collect spam targets.
>
> Is that needed, given how the addresses are in the open on
> the mailing list and all its archives?
>
I doubt it, we're probably on every possible spam list anyway.


From wine.dev at web.de  Tue Sep  9 15:08:43 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Tue, 09 Sep 2008 22:08:43 +0200
Subject: splint (Re: Adding Flawfinder to Patchwatcher)
In-Reply-To: <loom.20080907T175913-400@post.gmane.org>
References: <b6bb06270808281359o1d1258f9m1af82eddbb763f32@mail.gmail.com>
	<1096648c0808310603k2b5c2be9if93a9a5b77cdfd44@mail.gmail.com>
	<loom.20080907T175913-400@post.gmane.org>
Message-ID: <1220990923.5832.22.camel@p4.lan>

On So, 2008-09-07 at 18:10 +0000, Jason Spiro wrote:

> > Other people may be able to suggest more good tools.
> 
> AFAIK "splint" is one of the most popular OSS static analysis tools, but I've
> never really used it.  Has anyone here used it?  On the flawfinder homepage, it
> says that splint does deeper analysis than flawfinder.  It says it "...works
> somewhat like lint, 

Use grep / read the source:
  dnl Check for lint
  AC_CHECK_PROGS(LINT, lclint lint)
...

But I think, thats unused for years...
(and it does not work for splint)


-- 
 
By by ... Detlef




From truiken at gmail.com  Tue Sep  9 16:01:32 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 9 Sep 2008 16:01:32 -0500
Subject: msi: Uninitialized variable fix (Coverity)
In-Reply-To: <200809092154.43355.andrew.talbot@talbotville.com>
References: <200809092154.43355.andrew.talbot@talbotville.com>
Message-ID: <22821af30809091401m3b985461h111b3e5ff8cfa8dc@mail.gmail.com>

On Tue, Sep 9, 2008 at 3:54 PM, Andrew Talbot
<andrew.talbot at talbotville.com> wrote:
> Fix for Coverity error CID: 762.
>
> ---
> Changelog:
>    msi: Uninitialized variable fix (Coverity).
>
> diff --git a/dlls/msi/action.c b/dlls/msi/action.c
> index 8a8efe7..48557f0 100644
> --- a/dlls/msi/action.c
> +++ b/dlls/msi/action.c
> @@ -3838,7 +3838,7 @@ static UINT ACTION_PublishFeatures(MSIPACKAGE *package)
>     MSIFEATURE *feature;
>     UINT rc;
>     HKEY hkey;
> -    HKEY userdata;
> +    HKEY userdata = NULL;
>
>     if (!msi_check_publish(package))
>         return ERROR_SUCCESS;
> @@ -3952,7 +3952,7 @@ static UINT ACTION_PublishFeatures(MSIPACKAGE *package)
>
>  end:
>     RegCloseKey(hkey);
> -    RegCloseKey(userdata);
> +    if (userdata) RegCloseKey(userdata);
>     return rc;

Please don't add another NULL-before-free check.

-- 
James Hawkins


From Andrew.Talbot at talbotville.com  Tue Sep  9 16:24:47 2008
From: Andrew.Talbot at talbotville.com (Andrew Talbot)
Date: Tue, 09 Sep 2008 22:24:47 +0100
Subject: msi: Uninitialized variable fix (Coverity)
References: <200809092154.43355.andrew.talbot@talbotville.com>
	<22821af30809091401m3b985461h111b3e5ff8cfa8dc@mail.gmail.com>
Message-ID: <ga6pj0$tje$1@ger.gmane.org>

James Hawkins wrote:

> On Tue, Sep 9, 2008 at 3:54 PM, Andrew Talbot
> <andrew.talbot at talbotville.com> wrote:
>> Fix for Coverity error CID: 762.
>>
>> [...]
>> -    RegCloseKey(userdata);
>> +    if (userdata) RegCloseKey(userdata);
>>     return rc;
> 
> Please don't add another NULL-before-free check.
> 

Hi James,

Sorry, I don't understand what I have done wrong. RegCloseKey() will return ERROR_INVALID_HANDLE if called with hkey==NULL.

-- 
Andy.



From truiken at gmail.com  Tue Sep  9 16:30:10 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 9 Sep 2008 16:30:10 -0500
Subject: msi: Uninitialized variable fix (Coverity)
In-Reply-To: <ga6pj0$tje$1@ger.gmane.org>
References: <200809092154.43355.andrew.talbot@talbotville.com>
	<22821af30809091401m3b985461h111b3e5ff8cfa8dc@mail.gmail.com>
	<ga6pj0$tje$1@ger.gmane.org>
Message-ID: <22821af30809091430q77764d9dt26fe80298fd1262a@mail.gmail.com>

On Tue, Sep 9, 2008 at 4:24 PM, Andrew Talbot
<Andrew.Talbot at talbotville.com> wrote:
> James Hawkins wrote:
>
>> On Tue, Sep 9, 2008 at 3:54 PM, Andrew Talbot
>> <andrew.talbot at talbotville.com> wrote:
>>> Fix for Coverity error CID: 762.
>>>
>>> [...]
>>> -    RegCloseKey(userdata);
>>> +    if (userdata) RegCloseKey(userdata);
>>>     return rc;
>>
>> Please don't add another NULL-before-free check.
>>
>
> Hi James,
>
> Sorry, I don't understand what I have done wrong. RegCloseKey() will return ERROR_INVALID_HANDLE if called with hkey==NULL.
>

...and we don't care what value it returns.

-- 
James Hawkins


From dank at kegel.com  Tue Sep  9 16:32:08 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 9 Sep 2008 14:32:08 -0700
Subject: coverity ... new run finally
In-Reply-To: <3a768c550809090939q794b0a14l32abe5fffb9be575@mail.gmail.com>
References: <a71bd89a0809090658y71524777s183f53073ce650ad@mail.gmail.com>
	<3a768c550809090851i7fbfcfc8vcdf8d3d9725e772f@mail.gmail.com>
	<a71bd89a0809090931u1093ada9xcdce410f539db63@mail.gmail.com>
	<3a768c550809090939q794b0a14l32abe5fffb9be575@mail.gmail.com>
Message-ID: <a71bd89a0809091432j2cff1800ud3d406c7012b2846@mail.gmail.com>

alexd4 asked:
> is there more details available on what and where it detects in the
> function (free of charge)?

Yes.  See
http://scan.coverity.com/devfaq.html#account
- Dan


From juan.lang at gmail.com  Tue Sep  9 16:34:42 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 9 Sep 2008 14:34:42 -0700
Subject: msi: Uninitialized variable fix (Coverity)
In-Reply-To: <ga6pj0$tje$1@ger.gmane.org>
References: <200809092154.43355.andrew.talbot@talbotville.com>
	<22821af30809091401m3b985461h111b3e5ff8cfa8dc@mail.gmail.com>
	<ga6pj0$tje$1@ger.gmane.org>
Message-ID: <3a768c550809091434i9ef193agd3e3bf188e229404@mail.gmail.com>

Hi Andy,

> Sorry, I don't understand what I have done wrong. RegCloseKey() will return ERROR_INVALID_HANDLE if called with hkey==NULL.

To expand on James's brief response,

> -    HKEY userdata;
> +    HKEY userdata = NULL;

This change looks correct, but the other isn't necessary.
--Juan


From Andrew.Talbot at talbotville.com  Tue Sep  9 16:44:12 2008
From: Andrew.Talbot at talbotville.com (Andrew Talbot)
Date: Tue, 09 Sep 2008 22:44:12 +0100
Subject: msi: Uninitialized variable fix (Coverity)
References: <200809092154.43355.andrew.talbot@talbotville.com>
	<22821af30809091401m3b985461h111b3e5ff8cfa8dc@mail.gmail.com>
	<ga6pj0$tje$1@ger.gmane.org>
	<22821af30809091430q77764d9dt26fe80298fd1262a@mail.gmail.com>
Message-ID: <ga6qnc$gj$1@ger.gmane.org>

James Hawkins wrote:

>> Sorry, I don't understand what I have done wrong. RegCloseKey() will
>> return ERROR_INVALID_HANDLE if called with hkey==NULL.
>>
> 
> ...and we don't care what value it returns.
> 

Ah, of course! Thanks, James (and Juan).

-- 
Andy.




From k_krieser at sbcglobal.net  Tue Sep  9 18:18:07 2008
From: k_krieser at sbcglobal.net (Kevin Krieser)
Date: Tue, 9 Sep 2008 18:18:07 -0500
Subject: Debugging applications running on wine
In-Reply-To: <a71bd89a0809081936x595c8676mcbe8c433200f1f76@mail.gmail.com>
References: <a71bd89a0809081936x595c8676mcbe8c433200f1f76@mail.gmail.com>
Message-ID: <023BF42D-ED28-49BC-A45C-6EBB78A0FB66@sbcglobal.net>


On Sep 8, 2008, at 9:36 PM, Dan Kegel wrote:

> Kevin K wrote:
>> Is winedbg the only method of debugging applications being
>> developed for Windows on Wine?
>>
>> For instance, assume a program developed with Visual Studio
>> in C or C++, and I needed to debug it on Linux?
>
> If winedbg doesn't work for you, we should fix it.   Same
> goes for other debuggers.
>
> For instance, ollydbg seems to work
> http://appdb.winehq.org/objectManager.php?sClass=application&iId=2619
>
> Visual C++ 6's debugger seems to work at least a little, too:
> http://appdb.winehq.org/objectManager.php?sClass=version&iId=31
>
> Please file bugs for any problems you run into.
> - Dan

Thanks.

This is just hypothetical right now about some future development that  
may have to support Linux, XP/Vista, and Windows Mobile.



From dank at kegel.com  Tue Sep  9 20:53:12 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 9 Sep 2008 18:53:12 -0700
Subject: Praise of sorts for Wine re Softmaker Office 2008
Message-ID: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>

http://forum.ubuntuusers.de/topic/softmaker-office-2008--eine-alternative--vora/
has a review of an office suite named Softmaker Office 2008,
available for Windows and now also Linux.  The review says in part

"Irritiert hat uns, da? die Windows-Version von Office 2008, die
von Stick gestartet werden kann, unter Wine besser, schneller
und stabiler l?uft, wie die native Office 2008 f?r Linux. Wer also
die Windows-Version legal erworben hat, kann hier Geld sparen."

("It irritated us that the Windows version runs better on Wine
than the native Linux version.  If you have the Windows version
already, save your money and run it on Wine.")

That's praise of sorts... although I hope it doesn't
dissuade other vendors from doing native ports.
- Dan


From leslie_alistair at hotmail.com  Wed Sep 10 01:28:38 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Wed, 10 Sep 2008 16:28:38 +1000
Subject: [2/3] mshtml: Add tests for get_scrollLeft
References: <48C65494.2010204@hotmail.com>
Message-ID: <ga7pee$jur$1@ger.gmane.org>


"Alistair Leslie-Hughes" <leslie_alistair at hotmail.com> wrote in message 
news:48C65494.2010204 at hotmail.com...
> Hi,
>
> Changelog:
> mshtml: Add tests for get_scrollLeft
>
> Best Regards
>   Alistair Leslie-Hughes
Hi,

Swap the order of patch 2 and 3 and everything all tests will pass ok.

Best Regards
 Alistair Leslie-Hughes 




From marcus at rennboot.centrumbabylon.cz  Wed Sep 10 03:03:42 2008
From: marcus at rennboot.centrumbabylon.cz (Marcus Meissner)
Date: Wed, 10 Sep 2008 10:03:42 +0200
Subject: coverity ... new run finally
In-Reply-To: <48C6BCA7.9020601@inbox.lv>
References: <a71bd89a0809090658y71524777s183f53073ce650ad@mail.gmail.com>
	<48C6BCA7.9020601@inbox.lv>
Message-ID: <20080910080342.GA12398@rennboot.centrumbabylon.cz>

On Tue, Sep 09, 2008 at 09:12:55PM +0300, Alexander Dorofeyev wrote:
> Dan Kegel wrote:
> 
> >> Still a lot of NULL ptr migration issues which suck
> >> to fix, but well.
> > 709     DEADCODE        DEVENUM_ReadPinTypes    devenum/createdevenum.c
> > 717     FORWARD_NULL    DEVENUM_ReadPinTypes    devenum/createdevenum.c
> 
> NULL-dereference may be a false positive from the way memory for lpMediaType is 
> allocated there. Not sure though, will look some more later; BTW, a stupid 
> question - is there more details available on what and where it detects in the 
> function (free of charge)? Couldn't really find it by quick look around their 
> website and google, except short definition of FORWARD_NULL meaning etc.

Of course, if you click on a specifiy ID it will show the sourcecode with the decisions
the analyzer did, including the path where it thought this can happen.
 
Ciao, Marcus


From paul.vriens.wine at gmail.com  Wed Sep 10 03:10:18 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 10 Sep 2008 10:10:18 +0200
Subject: coverity ... new run finally
In-Reply-To: <20080910080342.GA12398@rennboot.centrumbabylon.cz>
References: <a71bd89a0809090658y71524777s183f53073ce650ad@mail.gmail.com>	<48C6BCA7.9020601@inbox.lv>
	<20080910080342.GA12398@rennboot.centrumbabylon.cz>
Message-ID: <48C780EA.9070005@gmail.com>

Marcus Meissner wrote:
> On Tue, Sep 09, 2008 at 09:12:55PM +0300, Alexander Dorofeyev wrote:
>> Dan Kegel wrote:
>>
>>>> Still a lot of NULL ptr migration issues which suck
>>>> to fix, but well.
>>> 709     DEADCODE        DEVENUM_ReadPinTypes    devenum/createdevenum.c
>>> 717     FORWARD_NULL    DEVENUM_ReadPinTypes    devenum/createdevenum.c
>> NULL-dereference may be a false positive from the way memory for lpMediaType is 
>> allocated there. Not sure though, will look some more later; BTW, a stupid 
>> question - is there more details available on what and where it detects in the 
>> function (free of charge)? Couldn't really find it by quick look around their 
>> website and google, except short definition of FORWARD_NULL meaning etc.
> 
> Of course, if you click on a specifiy ID it will show the sourcecode with the decisions
> the analyzer did, including the path where it thought this can happen.
>  
> Ciao, Marcus
> 
> 
> 
But I don't think Alexander has an account.

This is the list of currently defined users for Wine:

mmcc 		Mike McCormack
rollo 		Troy Rollo 	
reif 		Robert Reif 	
rshearman 	Robert Shearman 	
scottb 		Scott Bambrough 	
mhearn 		Mike Hearn 	
cmorgan 	Chris Morgan
jacek 		Jacek Caban 	
detlef 		Detlef Riekenberg 	
dank 		Daniel Kegel 	
timoshkov 	Dmitry Timoshkov 	
lenders 	Louis Lenders 	
lats 		Jeff Latimer 	
vriens 		Paul Vriens 	
atalbot 	Andrew Talbot
ploujnikov 	Michael Ploujnikov 	
kblin 		Kai Blin 	
jhawk 		James Hawkins 	
jan.wine 	Jan Zerebecki 	
stefan 		Stefan D??singer 	
marcus 		Marcus Meissner 	
bvincent 	Brian Vincent 	
juan 		Juan Lang 	

-- 
Cheers,

Paul.


From kai.blin at gmail.com  Wed Sep 10 03:12:47 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Wed, 10 Sep 2008 10:12:47 +0200
Subject: Praise of sorts for Wine re Softmaker Office 2008
In-Reply-To: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>
Message-ID: <200809101012.52721.kai.blin@gmail.com>

On Wednesday 10 September 2008 03:53:12 Dan Kegel wrote:

> That's praise of sorts... although I hope it doesn't
> dissuade other vendors from doing native ports.

It'd be interesting to know who wrote this. Grammar errors like in the 
sentence you quoted aside, this article leaves me wondering about the 
author's background. It's also unclear what "better, faster and more stable" 
means in respect to the software running in Wine. E.g. it wouldn't surprise 
me if the Wine printer integration was better than what the office software 
has, according to the article.

Cheers,
Kai
-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080910/5d27eb7b/attachment.pgp 

From paul.vriens.wine at gmail.com  Wed Sep 10 03:33:52 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 10 Sep 2008 10:33:52 +0200
Subject: include: Define sigset_t in pthread.h if HAVE_SIGSET_T isn't
	defined.
In-Reply-To: <1096648c0809081519l5f6cfb9dq8709049238d8e7d5@mail.gmail.com>
References: <1096648c0809081519l5f6cfb9dq8709049238d8e7d5@mail.gmail.com>
Message-ID: <48C78670.2030906@gmail.com>

Rob Shearman wrote:
> ---
>  include/wine/pthread.h |    5 +++++
>  1 files changed, 5 insertions(+), 0 deletions(-)
> 
> 
> ------------------------------------------------------------------------
> 
> 
Hi Rob,

MingW has it's own definition of sigset_t (include/sys/types.h) which conflicts 
with this.

Do we need to guard the definition in pthread.h with a "!defined(__MINGW32__)" 
or is this something that needs to be fixed on the MingW side.

(Maybe change our configure?)

-- 
Cheers,

Paul.


From julliard at winehq.org  Wed Sep 10 04:05:03 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 10 Sep 2008 11:05:03 +0200
Subject: [1/3] mshtml: Implement HTMLElement2 get_scrollLeft (try 2)
In-Reply-To: <48C6541C.2030707@hotmail.com> (Alistair Leslie-Hughes's message
	of "Tue, 09 Sep 2008 20:46:52 +1000")
References: <48C6541C.2030707@hotmail.com>
Message-ID: <87tzcoz800.fsf@wine.dyndns.org>

Alistair Leslie-Hughes <leslie_alistair at hotmail.com> writes:

> +    nsres = nsIDOMHTMLElement_QueryInterface(This->nselem, &IID_nsIDOMNSHTMLElement, (void**)&nselem);
> +    if(NS_SUCCEEDED(nsres))
> +    {
> +        nsres = nsIDOMNSHTMLElement_GetScrollLeft(nselem, &left);
> +        nsIDOMNSHTMLElement_Release(nselem);
> +        if(NS_FAILED(nsres))            
> +			left = 0;
> +    }
> +    else
> +    {
> +        ERR("Could not get nsIDOMNSHTMLElement interface: %08x\n", nsres);
> +    }

This ERR obviously needs the same treatment as the other one. Also
please fix your tab size.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Sep 10 04:10:09 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 10 Sep 2008 11:10:09 +0200
Subject: [PATCH] kernel32/test: Test import entries of a core windows DLL
	(riched20.dll) (Revision)
In-Reply-To: <20080909212729.GA14485@teop> (Roy Shea's message of "Tue, 9 Sep
	2008 14:27:29 -0700")
References: <20080909212729.GA14485@teop>
Message-ID: <87prncz7ri.fsf@wine.dyndns.org>

Roy Shea <royshea at gmail.com> writes:

> This revision adds copyright information, removes todo_wine statements
> to reflect the current wine head, and fixes an implicit typecast
> warning.
> ---
>  dlls/kernel32/tests/Makefile.in    |    1 +
>  dlls/kernel32/tests/loader_image.c |   98 ++++++++++++++++++++++++++++++++++++
>  2 files changed, 99 insertions(+), 0 deletions(-)
>  create mode 100644 dlls/kernel32/tests/loader_image.c

Please merge that into the other loader tests, no need to create a new
file. Also you should test this on kernel32.dll, there's no reason to
create a dependency on richedit.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Sep 10 04:13:41 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 10 Sep 2008 11:13:41 +0200
Subject: typelib: Implement LoadTypeLib16
In-Reply-To: <1221017300.6051.3.camel@p4.lan> (Detlef Riekenberg's message of
	"Wed, 10 Sep 2008 05:28:20 +0200")
References: <1221017300.6051.3.camel@p4.lan>
Message-ID: <87iqt4z7lm.fsf@wine.dyndns.org>

Detlef Riekenberg <wine.dev at web.de> writes:

> +HRESULT WINAPI LoadTypeLib16(LPSTR szFile, ITypeLib** pptLib)
>  {
> -    FIXME("(%s,%p): stub\n",debugstr_a(szFile),pptLib);
> +    LPWSTR nameW = NULL;
> +    HRESULT hr;
> +    DWORD len;
>  
> -    if (pptLib!=0)
> -      *pptLib=0;
> +    TRACE("(%s, %p)\n", debugstr_a(szFile), pptLib);
> +
> +    if (szFile) {
> +        len = MultiByteToWideChar(CP_ACP, 0, szFile, -1, NULL, 0);
> +        nameW = HeapAlloc(GetProcessHeap(), 0, len * sizeof(WCHAR));
> +        MultiByteToWideChar(CP_ACP, 0, szFile, -1, nameW, len);
> +    }
>  
> -    return E_FAIL;
> +    hr = LoadTypeLib(nameW, pptLib);
> +    HeapFree(GetProcessHeap(), 0, nameW);
> +    return hr;

Most likely you need to return a 16-bit interface here.

-- 
Alexandre Julliard
julliard at winehq.org


From robertshearman at gmail.com  Wed Sep 10 05:02:50 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 10 Sep 2008 11:02:50 +0100
Subject: include: Define sigset_t in pthread.h if HAVE_SIGSET_T isn't
	defined.
In-Reply-To: <48C78670.2030906@gmail.com>
References: <1096648c0809081519l5f6cfb9dq8709049238d8e7d5@mail.gmail.com>
	<48C78670.2030906@gmail.com>
Message-ID: <1096648c0809100302p724ab18bh91b39daa7c6d08e4@mail.gmail.com>

2008/9/10 Paul Vriens <paul.vriens.wine at gmail.com>:
> Rob Shearman wrote:
>>
>> ---
>>  include/wine/pthread.h |    5 +++++
>>  1 files changed, 5 insertions(+), 0 deletions(-)
>>
>>
>> ------------------------------------------------------------------------
>>
>>
> Hi Rob,
>
> MingW has it's own definition of sigset_t (include/sys/types.h) which
> conflicts with this.
>
> Do we need to guard the definition in pthread.h with a
> "!defined(__MINGW32__)" or is this something that needs to be fixed on the
> MingW side.
>
> (Maybe change our configure?)

Yes, configure should detect it. If it doesn't then it's a bug in our
configure check.

-- 
Rob Shearman


From paul.vriens.wine at gmail.com  Wed Sep 10 05:04:30 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 10 Sep 2008 12:04:30 +0200
Subject: include: Define sigset_t in pthread.h if HAVE_SIGSET_T isn't
	defined.
In-Reply-To: <1096648c0809100302p724ab18bh91b39daa7c6d08e4@mail.gmail.com>
References: <1096648c0809081519l5f6cfb9dq8709049238d8e7d5@mail.gmail.com>	
	<48C78670.2030906@gmail.com>
	<1096648c0809100302p724ab18bh91b39daa7c6d08e4@mail.gmail.com>
Message-ID: <48C79BAE.2080106@gmail.com>

Rob Shearman wrote:
> 2008/9/10 Paul Vriens <paul.vriens.wine at gmail.com>:
>> Rob Shearman wrote:
>>> ---
>>>  include/wine/pthread.h |    5 +++++
>>>  1 files changed, 5 insertions(+), 0 deletions(-)
>>>
>>>
>>> ------------------------------------------------------------------------
>>>
>>>
>> Hi Rob,
>>
>> MingW has it's own definition of sigset_t (include/sys/types.h) which
>> conflicts with this.
>>
>> Do we need to guard the definition in pthread.h with a
>> "!defined(__MINGW32__)" or is this something that needs to be fixed on the
>> MingW side.
>>
>> (Maybe change our configure?)
> 
> Yes, configure should detect it. If it doesn't then it's a bug in our
> configure check.
> 
Hi Rob,

AJ put in a fix for this.

-- 
Cheers,

Paul.


From FloriansKarten at web.de  Wed Sep 10 05:11:33 2008
From: FloriansKarten at web.de (=?ISO-8859-1?Q?Florian_K=F6berle?=)
Date: Wed, 10 Sep 2008 12:11:33 +0200
Subject: user32/test Added test about window sizes
In-Reply-To: <1220963781-7039-1-git-send-email-FloriansKarten@web.de>
References: <1220963002.12534.4.camel@hermes2.karcher.local>
	<1220963781-7039-1-git-send-email-FloriansKarten@web.de>
Message-ID: <48C79D55.1030003@web.de>

Hi

Please don't apply this patch. I will commit an updated version with a
fix soon.

Thanks,
Florian Koeberle


From dank at kegel.com  Wed Sep 10 05:50:27 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 10 Sep 2008 03:50:27 -0700
Subject: [2/3] mshtml: Add tests for get_scrollLeft
Message-ID: <a71bd89a0809100350m130bc249g723ebb3f8c8ef021@mail.gmail.com>

Did you forget a todo_wine?

../../../tools/runtest -q -P wine -M mshtml.dll -T ../../.. -p
mshtml_test.exe.so dom.c
...
fixme:mshtml:HTMLTextContainer_get_scrollLeft (0x15371b8)->(0x32fd34)
dom.c:1077: Test failed: IHTMLTextContainer::get_scrollLeft failed: -1
dom.c:1078: Test failed: unexpected left -1, expected 0
...
make[2]: *** [dom.ok] Error 2

On Tue, Sep 9, 2008 at 8:48 PM, Patchwatcher <patchwatcher at kegel.com> wrote:
> Hi!  This is the experimental automated wine patchwatcher thingy.
> The latest git sources were built and tested with your patch
> "[2/3] mshtml: Add tests for get_scrollLeft"
> Result: the patch failed regression tests.
>
> You can retrieve the full build results at
>  http://kegel.com/wine/patchwatcher/results/1347.log
> and see the patch as parsed at
>  http://kegel.com/wine/patchwatcher/results/1347.txt
> See
>  http://kegel.com/wine/patchwatcher/results
> for more info.
>
>


From fgouget at free.fr  Wed Sep 10 06:37:55 2008
From: fgouget at free.fr (Francois Gouget)
Date: Wed, 10 Sep 2008 13:37:55 +0200 (CEST)
Subject: Patchwatcher security improvements
In-Reply-To: <200809082301.46031.ambro@b4ever.net>
References: <200809082301.46031.ambro@b4ever.net>
Message-ID: <alpine.DEB.1.10.0809101333420.21665@amboise.dolphin>

On Mon, 8 Sep 2008, Ambroz Bizjak wrote:

> Hi,
> 
> I've abandoned my chroot aproach to improving security in patchwatcher.
> Instead I've implemented the ability to run untrusted code as a user
> different than the one running patchwatcher. This is because creating a
> chroot where Wine could be compiled and tested proved to be too difficult
> and platform-dependent.

This seems like an almost perfect task for a virtual machine:
 * set up you virtual machine to taste
 * take a snapshot
 * to test a patch, fire up the virtual machine
 * have it test the patch
 * after the test or when it times out, revert it to the snapshot
 * rinse (done in the step above), repeat

This could be done with VirtualBox, but maybe other alternatives based 
on Xen or KVM or some such would be better. The main issue I see with 
this is that the OpenGL / DirectSound tests will not run on the real 
hardware (as usual), but maybe a Xen-like approach could help there.

It would also make it easy to test on FreeBSD / Solaris, at least if 
based on something like VirtualBox (not sure about the Xen-like 
approaches).


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
 Advice is what we ask for when we already know the answer but wish we didn't
                                 -- Eric Jong


From zac at zacbrown.org  Wed Sep 10 06:58:30 2008
From: zac at zacbrown.org (Zac Brown)
Date: Wed, 10 Sep 2008 07:58:30 -0400
Subject: Praise of sorts for Wine re Softmaker Office 2008
In-Reply-To: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>
Message-ID: <48C7B666.9060601@zacbrown.org>

Dan Kegel wrote:
> http://forum.ubuntuusers.de/topic/softmaker-office-2008--eine-alternative--vora/
> has a review of an office suite named Softmaker Office 2008,
> available for Windows and now also Linux.  The review says in part
> 
> "Irritiert hat uns, da? die Windows-Version von Office 2008, die
> von Stick gestartet werden kann, unter Wine besser, schneller
> und stabiler l?uft, wie die native Office 2008 f?r Linux. Wer also
> die Windows-Version legal erworben hat, kann hier Geld sparen."
> 
> ("It irritated us that the Windows version runs better on Wine
> than the native Linux version.  If you have the Windows version
> already, save your money and run it on Wine.")
> 
> That's praise of sorts... although I hope it doesn't
> dissuade other vendors from doing native ports.
> - Dan
> 

I noticed the same type of thing when I was playing with DVD Shrink a couple 
days ago. Ripping speed in DVD Shrink via Wine was significantly faster than on 
Windows. What usually is a 2.5 hour process was about 1.5-1.75 hour process.

I agree though, hopefully the software vendors will do native ports :).

-Zac



From vit.hrachovy at sandbox.cz  Wed Sep 10 07:06:59 2008
From: vit.hrachovy at sandbox.cz (Vit Hrachovy)
Date: Wed, 10 Sep 2008 14:06:59 +0200
Subject: Patchwatcher security improvements
In-Reply-To: <alpine.DEB.1.10.0809101333420.21665@amboise.dolphin>
References: <200809082301.46031.ambro@b4ever.net>
	<alpine.DEB.1.10.0809101333420.21665@amboise.dolphin>
Message-ID: <48C7B863.8030904@sandbox.cz>


Francois Gouget wrote:
> On Mon, 8 Sep 2008, Ambroz Bizjak wrote:
> 
>> Hi,
>>
>> I've abandoned my chroot aproach to improving security in patchwatcher.
>> Instead I've implemented the ability to run untrusted code as a user
>> different than the one running patchwatcher. This is because creating a
>> chroot where Wine could be compiled and tested proved to be too difficult
>> and platform-dependent.
> 
> This seems like an almost perfect task for a virtual machine:
>  * set up you virtual machine to taste
>  * take a snapshot
>  * to test a patch, fire up the virtual machine
>  * have it test the patch
>  * after the test or when it times out, revert it to the snapshot
>  * rinse (done in the step above), repeat
> 
> This could be done with VirtualBox, but maybe other alternatives based 
> on Xen or KVM or some such would be better. The main issue I see with 
> this is that the OpenGL / DirectSound tests will not run on the real 
> hardware (as usual), but maybe a Xen-like approach could help there.
> 
> It would also make it easy to test on FreeBSD / Solaris, at least if 
> based on something like VirtualBox (not sure about the Xen-like 
> approaches).

Yep. Virtualizaion has 3D shortcomings.

I can see the way how to use pbuilder/pdebuild toolchain on dedicated 
user account in Debian to automate this in pretty safe and easy way.

pbuilder uses fakeroot/chroot for this and its use is a nobrainer, 
hellish easy and effective.

But this is limited to Debian systems only.
Positive is that we still have access to 3DHW (although not 
concurrent/parallel).

Anybody has experience with User-mode Linux kernels for that?

~*~

Another environment is OpenSolaris.
There we can leverage technologie of zones & ZFS for cheap 
pseudovirtualization and fast FS recovery using FS snapshots.

~*~

IMO there is no silver bullet to bite all problems on all OS.
We can build OS-specific toolchains around patchwatcher and I think 
that's more viable alternative.

Cheers
Hark


From dank at kegel.com  Wed Sep 10 07:02:57 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 10 Sep 2008 05:02:57 -0700
Subject: Patchwatcher security improvements
In-Reply-To: <alpine.DEB.1.10.0809101333420.21665@amboise.dolphin>
References: <200809082301.46031.ambro@b4ever.net>
	<alpine.DEB.1.10.0809101333420.21665@amboise.dolphin>
Message-ID: <a71bd89a0809100502s5e0291f4s7ea5d04a78d178f7@mail.gmail.com>

On Wed, Sep 10, 2008 at 4:37 AM, Francois Gouget <fgouget at free.fr> wrote:
> This seems like an almost perfect task for a virtual machine:
> ... The main issue I see with
> this is that the OpenGL / DirectSound tests will not run on the real
> hardware (as usual)

I just came off a project (Zumastor) which used a virtual
machine in its test loop as you suggest.   We ended up
using qemu because kvm was too broken at the time.
The whole experience left a bad taste in my mouth,
so I'm pushing ahead with a more lightweight approach
to be able to make progress on the key problem.

If somebody wants to run patchwatcher inside VMs, great,
that's definitely a safe way to go, and events might push us
in that direction someday.


From dank at kegel.com  Wed Sep 10 07:09:08 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 10 Sep 2008 05:09:08 -0700
Subject: Patchwatcher security improvements
In-Reply-To: <48C7B863.8030904@sandbox.cz>
References: <200809082301.46031.ambro@b4ever.net>
	<alpine.DEB.1.10.0809101333420.21665@amboise.dolphin>
	<48C7B863.8030904@sandbox.cz>
Message-ID: <a71bd89a0809100509w2d29e5e0pbfab83931ce7dfc0@mail.gmail.com>

On Wed, Sep 10, 2008 at 5:06 AM, Vit Hrachovy <vit.hrachovy at sandbox.cz> wrote:
> I can see the way how to use pbuilder/pdebuild toolchain on dedicated user
> account in Debian to automate this in pretty safe and easy way.
>
> pbuilder uses fakeroot/chroot for this and its use is a nobrainer, hellish
> easy and effective.
>
> But this is limited to Debian systems only.
> Positive is that we still have access to 3DHW (although not
> concurrent/parallel).

Yes.  We used pbuilder in the automated test for zumastor, and
were tied to Debian as a result.  We obviously need to
avoid requiring that for patchwatcher, which has to
run on non-Debian systems.
(BTW, we had some difficulty with unreliable distribution mirrors;
the only way to get pbuilder to be reliable was to point to a local
archive of all the packages.)

> Anybody has experience with User-mode Linux kernels for that?

That's getting even further away from the hardware...

> IMO there is no silver bullet to bite all problems on all OS.
> We can build OS-specific toolchains around patchwatcher and I think that's
> more viable alternative.

Indeed.    After I finish refactoring patchwatcher, the build slaves
will be pretty simple, and it'll be easy to put together custom
build slaves for various environments.  In particular, a pbuilder-based
build slave for Debian / Ubuntu seems like a good idea (as long
as you use a local package archive to avoid the flakiness I mentioned
above).
- Dan


From dank at kegel.com  Wed Sep 10 07:15:01 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 10 Sep 2008 05:15:01 -0700
Subject: Patchwatcher security improvements
In-Reply-To: <a71bd89a0809100502s5e0291f4s7ea5d04a78d178f7@mail.gmail.com>
References: <200809082301.46031.ambro@b4ever.net>
	<alpine.DEB.1.10.0809101333420.21665@amboise.dolphin>
	<a71bd89a0809100502s5e0291f4s7ea5d04a78d178f7@mail.gmail.com>
Message-ID: <a71bd89a0809100515t26ff3bbboce2220bc601ded8d@mail.gmail.com>

On Wed, Sep 10, 2008 at 5:02 AM, Dan Kegel <dank at kegel.com> wrote:
> On Wed, Sep 10, 2008 at 4:37 AM, Francois Gouget <fgouget at free.fr> wrote:
>> This seems like an almost perfect task for a virtual machine:

Incidentally, I documented how to produce a really small vmware image
for Ubuntu at
http://kegel.com/linux/jeos-vmware-player/
(I used this as a demo platform for Zumastor, and wanted the
demo to be as easy to download as possible.)


From winehacker at gmail.com  Wed Sep 10 07:19:45 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Wed, 10 Sep 2008 08:19:45 -0400
Subject: explorer.exe: Implement SC_SCREENSAVE by starting xdg-screensaver
In-Reply-To: <200809101428.00444.paulc@voip.null.ro>
References: <200809101428.00444.paulc@voip.null.ro>
Message-ID: <19e31a080809100519o5274c9e6j7de4381ef4ba373f@mail.gmail.com>

On Wed, Sep 10, 2008 at 7:28 AM, Paul Chitescu <paulc at voip.null.ro> wrote:
> Changelog:
>        explorer.exe: Implement SC_SCREENSAVE by starting xdg-screensaver with option
> to lock the screen.
>
> The desktop window reacts to SC_SCREENSAVE by starting the screen saver, just
> like it happens in Windows. No action is taken (and returns FALSE) if running
> in a virtual desktop.
>
> Alternatively, a non-zero lparam is used to signal that the screen should be
> locked. This cooperates with the user32.dll patch that implements
> LockWorkStation(). This is an extension, there is no equivalent in Windows
> but all the programs I've seen that trigger the system screen saver set
> lparam=0.

You forgot to attach the patch. Also you can send both patches
together as one diff. There is no reason to split them up in this
case.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From ambro at b4ever.net  Wed Sep 10 07:48:14 2008
From: ambro at b4ever.net (Ambroz Bizjak)
Date: Wed, 10 Sep 2008 14:48:14 +0200
Subject: Patchwatcher security improvements
Message-ID: <200809101448.14322.ambro@b4ever.net>

Francois Gouget wrote:
> This seems like an almost perfect task for a virtual machine:
>  * set up you virtual machine to taste
>  * take a snapshot
>  * to test a patch, fire up the virtual machine
>  * have it test the patch
>  * after the test or when it times out, revert it to the snapshot *
rinse (done in the step above), repeat
>
> This could be done with VirtualBox, but maybe other alternatives based
on Xen or KVM or some such would be better. The main issue I see with this
is that the OpenGL / DirectSound tests will not run on the real hardware
(as usual), but maybe a Xen-like approach could help there.
>
> It would also make it easy to test on FreeBSD / Solaris, at least if
based on something like VirtualBox (not sure about the Xen-like
> approaches).

Seems like a good idea. I suggest only to use Linux as the host OS and run
guests with KVM or VirtualBox, or even UML for Linux builds. Then we can
run any OS that uses X as a guest and configure it to use the host's X
display (through the virtual network). This should theoretically allow
OpenGL through the XGL protocol, but VMGL can also be used if it doesn't
work well. And sound hardware would be emulated by the VM software.

I think I'll try getting a small Gentoo system to run in UML with a
read-only root fs and make it boot as fast as possible. To try a patch, I
would give it read access to the master Wine tree on the host, it would
copy it to a writable temp folder and try it out. After it's finished or
if the external timeout elapses, the UML process will be terminated and
all of its writable storage will be reverted.







From truiken at gmail.com  Wed Sep 10 08:04:43 2008
From: truiken at gmail.com (James Hawkins)
Date: Wed, 10 Sep 2008 08:04:43 -0500
Subject: [msi/tests] Create only one log file and delete it afterwards
In-Reply-To: <48C7BFFC.9020102@gmail.com>
References: <48C7BFFC.9020102@gmail.com>
Message-ID: <22821af30809100604w302e9854gb5b482eb6b6fbecf@mail.gmail.com>

On Wed, Sep 10, 2008 at 7:39 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> Hi,
>
> Instead of having 200 logfiles we now create one that we can delete
> afterwards
> as we know the name. This is not to speed up the tests but merely to get rid
> of
> the log files.
>
> We have to pass something for the log mode otherwise we would still have
> multiple files.
>
> (It also looks like Wine is still appending to that one file which is not
> the
> same as on Windows).
>
> Changelog
>  Create only one log file and delete it afterwards
>

Why don't you just disable logging?

MsiEnableLog(0, NULL, 0);

-- 
James Hawkins


From paul.vriens.wine at gmail.com  Wed Sep 10 08:07:12 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 10 Sep 2008 15:07:12 +0200
Subject: [msi/tests] Create only one log file and delete it afterwards
In-Reply-To: <22821af30809100604w302e9854gb5b482eb6b6fbecf@mail.gmail.com>
References: <48C7BFFC.9020102@gmail.com>
	<22821af30809100604w302e9854gb5b482eb6b6fbecf@mail.gmail.com>
Message-ID: <48C7C680.7050802@gmail.com>

James Hawkins wrote:
> On Wed, Sep 10, 2008 at 7:39 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>> Hi,
>>
>> Instead of having 200 logfiles we now create one that we can delete
>> afterwards
>> as we know the name. This is not to speed up the tests but merely to get rid
>> of
>> the log files.
>>
>> We have to pass something for the log mode otherwise we would still have
>> multiple files.
>>
>> (It also looks like Wine is still appending to that one file which is not
>> the
>> same as on Windows).
>>
>> Changelog
>>  Create only one log file and delete it afterwards
>>
> 
> Why don't you just disable logging?
> 
> MsiEnableLog(0, NULL, 0);
> 
Hi,

Because that doesn't work. After you mailed that suggestion the other day I of 
course gave it a try.

-- 
Cheers,

Paul.


From dank at kegel.com  Wed Sep 10 08:46:16 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 10 Sep 2008 06:46:16 -0700
Subject: Patchwatcher security improvements
In-Reply-To: <a71bd89a0809100515t26ff3bbboce2220bc601ded8d@mail.gmail.com>
References: <200809082301.46031.ambro@b4ever.net>
	<alpine.DEB.1.10.0809101333420.21665@amboise.dolphin>
	<a71bd89a0809100502s5e0291f4s7ea5d04a78d178f7@mail.gmail.com>
	<a71bd89a0809100515t26ff3bbboce2220bc601ded8d@mail.gmail.com>
Message-ID: <a71bd89a0809100646v73a44853k524f7ed86ee52c15@mail.gmail.com>

Ambroz wrote:
> I think I'll try getting a small Gentoo system to run in UML with a
> read-only root fs and make it boot as fast as possible. To try a patch, I
> would give it read access to the master Wine tree on the host, it would
> copy it to a writable temp folder and try it out. After it's finished or
> if the external timeout elapses, the UML process will be terminated and
> all of its writable storage will be reverted.

Right.  That's how the refactored patchwatcher is designed.
There's a shared directory containing one subdirectory
for each build slave.
Each slave is expected to somehow get a read/write mount
to its own subdirectory of the shared directory.
The master watches the mailing list and puts incoming patches
into an inbox directory.  Each patch series is called a job, and
gets its own subdirectory of inbox.  The master dispatches
a job to a build slave by moving the job directory into one
of the build slave's directories.

The build slaves watch for jobs to appear in their directory.
When one appears, then do all the builds it implies, then create
a log file.
The master notices the log file and moves that job out of the
slave's subdirectory.

So the slave can be in another real machine, another virtual machine,
or running as another user; anything as long as it can get read/write
access to its subdirectory of the shared directory.
- Dan


From celticht32 at aol.com  Wed Sep 10 10:16:39 2008
From: celticht32 at aol.com (celticht32 at aol.com)
Date: Wed, 10 Sep 2008 11:16:39 -0400
Subject: Debugging Wine thoughts
In-Reply-To: <48C7B666.9060601@zacbrown.org>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>
	<48C7B666.9060601@zacbrown.org>
Message-ID: <8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>

Dan / All,
I think what the guy was asking on improving winedbg is to have some sort of visual debugger much like VC/C++ , Eclipse, 
Borland C++ or the like... Where you can step through the code (seeing the whole thing like any visual debugger).? 
Then when looking at stacks you? click on a variable or stack and it either winds it back or display's it.? 

Below is my thoughts on what would be a nice to have in some form of Debugger / Gui Debugger for Wine

So my wish list would be:
1) Some form of a Standard Gui Debugger
2) A way to select? the debug flags used with an explanation of what each is for... +sed is for this +relay does that...etc....?? 
3) When you do +relay you could open separate output windows for each thread 
4) The ability to turn each of the +relay wine thread output on or off... 
4) Currently Wading through a relay log is a real pain and in some cases it prevents the problem from occuring.
??? Time outs because of too much data being collected and then having to wade through and determine what to and not to turn off.
??? So a note or best practice somewhere showing the heavy hitters in a +relay log? and turn them off by default.? However, note 
??? somewhere saying? if +relay doesnt give enough information then turn on just these flags and run. That way we are not managing 
??? flag lists when trying to figure out whats going wrong in an application. IMHO +relay is too unweldly and turning each flag on 
??? individually is as well, so there needs to be some sort of happy medium somewhere.
5) A window with a list of the important wine structures or resources that can be watched as the application runs.
6) Source code debugging in the GUI with step through, break points, etc..( not like now in winedbg but more like one of the GUI's mentioned before)
7) Loading of application from gui debugger and run it
8) Ability to look at a stack and backtrace in the GUI
9) Value Watches within the GUI.
10) Code Checking
????? Some sort of bounds checking...
????? Uninitialized variable checking....
????? Unreachable Code Checking
11) Use the GUI to help enforce the Wine Coding standard.. most modern GUI environments let you specify a style of coding.
This would help the new people understand and follow the coding standards set up... instead of guessing like they do now.
12) Online help / Context help...? point to the IC in the wiki... lots of good stuff there... just hard to find sometimes....
13) Integration with bugzilla... they find a bug... they create it in the GUI.. dump out the screen, stack and the like... so some 
of the base information is collected instead of wasting time back and forth and having so many invalid bugs. Again this format 
can be enforced through coding style templates... you want to submit a bug here is what you do... check boxes to include things...
like I said screen shots... logs, traces, variables, hardware config, etc...
14) Integration with GIT... check and see if there is a new tree out there.. if so... flag it and git it...
15) Link to whats fixed in the new GIT tree... or a list of it...
16) Link to Dan's patchwatcher status... (kinda a workflow sort of thing) to know whats good and bad...
17) Generation of the GIT patch and then mail it to the list through a button...
18) GIT integration

You have to remember guy's alot of the new people coming in are not old timers like some of us who grew up in a non-gui 
world.. Like it or not? they are used to doing things in certain ways and I think we could get alot more people looking at 
bugs and helping fix them if we started thinking of something along these lines. This of course is not a complete list... 
And I am sure this is going to start a flame war or something close to it.. But I think this might be a good next step for something
like the summer of code people to do.. or whomever maintains the wine debugger to think seriously about.

Most of these things I think could be implemented using the current wine debugger with some form of pipe between it and the GUI.
That way the 'purists' can still debug using winedebug like now and the new people who choose to can use the GUI?

Thoughts????????????????????????????????


Problems I have noticed when debugging...
If I kill (press the X button or close it from the task bar) the wine application, Wine does not clean up from itself... it leaves the 
wine mount daemon running. so I have to kill all the wine processes before I can restart wine. Otherwise any windows 
application which loads another application fails to start IE a game with a loader which then starts the game (I have found this
in alot of MMO's where you have some form of login screen / loader which then loads in the actual game) (and no you cant
always just call the main exe)

Question :
Why does wine have to allocate all its memory at startup? re... the issue that is causing the ATI drivers to have such
a fuss....? why not just allocate as needed? or have the ability (if its not there already) to specify the total amount of memory
which is available to the wine process and limit wine to just that ammount of memory (kind of like the way most VM machines
have the option of setting the maximum amount of memory which is available).



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080910/a8de4206/attachment.htm 

From susancragin at earthlink.net  Wed Sep 10 10:17:35 2008
From: susancragin at earthlink.net (Susan Cragin)
Date: Wed, 10 Sep 2008 11:17:35 -0400 (GMT-04:00)
Subject: Praise of sorts for Wine re Softmaker Office 2008
Message-ID: <19562126.1221059855834.JavaMail.root@mswamui-chipeau.atl.sa.earthlink.net>

>Dan Kegel wrote:
>> http://forum.ubuntuusers.de/topic/softmaker-office-2008--eine-alternative--vora/
>> has a review of an office suite named Softmaker Office 2008,
>> available for Windows and now also Linux.  The review says in part
>> 
>> "Irritiert hat uns, da? die Windows-Version von Office 2008, die
>> von Stick gestartet werden kann, unter Wine besser, schneller
>> und stabiler l?uft, wie die native Office 2008 f?r Linux. Wer also
>> die Windows-Version legal erworben hat, kann hier Geld sparen."
>> 
>> ("It irritated us that the Windows version runs better on Wine
>> than the native Linux version.  If you have the Windows version
>> already, save your money and run it on Wine.")
>> 
>> That's praise of sorts... although I hope it doesn't
>> dissuade other vendors from doing native ports.
>> - Dan
>> 
>
>I noticed the same type of thing when I was playing with DVD Shrink a couple 
>days ago. Ripping speed in DVD Shrink via Wine was significantly faster than on 
>Windows. What usually is a 2.5 hour process was about 1.5-1.75 hour process.
>
>I agree though, hopefully the software vendors will do native ports :).
>
>-Zac

I just attended the convention for the National Verbatim Reporters Association in Savannah, where I demonstrated DNS 9.0 running on WINE with Ubuntu Studio (realtime kernel seems to make a slight difference). All the vendors were impressed, and one said he'd never seen DNS 9 run that fast, that accurately. 





From stefan at codeweavers.com  Wed Sep 10 10:32:24 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Wed, 10 Sep 2008 10:32:24 -0500
Subject: Debugging Wine thoughts
In-Reply-To: <8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>	<48C7B666.9060601@zacbrown.org>
	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>
Message-ID: <002a01c9135a$6d3cb810$47b62830$@com>

You can attach any debugger to a Win32 process running in Wine. This
includes Linux debuggers like gdb, or any graphical frontends, as well as
Windows debuggers like visual studio. If you built wine from source, the
Linux debuggers will see the Wine source. Probably they can also read the
Windows apps source if you have it. I'm not sure if Windows debuggers can
access the Wine source, but maybe dbghelp.dll can do that

 

 

From: wine-devel-bounces at winehq.org [mailto:wine-devel-bounces at winehq.org]
On Behalf Of celticht32 at aol.com
Sent: Wednesday, September 10, 2008 10:17 AM
To: dank at kegel.com
Cc: wine-devel at winehq.org
Subject: Debugging Wine thoughts

 

Dan / All,
I think what the guy was asking on improving winedbg is to have some sort of
visual debugger much like VC/C++ , Eclipse, 
Borland C++ or the like... Where you can step through the code (seeing the
whole thing like any visual debugger).  
Then when looking at stacks you  click on a variable or stack and it either
winds it back or display's it.  

Below is my thoughts on what would be a nice to have in some form of
Debugger / Gui Debugger for Wine

So my wish list would be:
1) Some form of a Standard Gui Debugger
2) A way to select  the debug flags used with an explanation of what each is
for... +sed is for this +relay does that...etc....   
3) When you do +relay you could open separate output windows for each thread

4) The ability to turn each of the +relay wine thread output on or off... 
4) Currently Wading through a relay log is a real pain and in some cases it
prevents the problem from occuring.
    Time outs because of too much data being collected and then having to
wade through and determine what to and not to turn off.
    So a note or best practice somewhere showing the heavy hitters in a
+relay log  and turn them off by default.  However, note 
    somewhere saying  if +relay doesnt give enough information then turn on
just these flags and run. That way we are not managing 
    flag lists when trying to figure out whats going wrong in an
application. IMHO +relay is too unweldly and turning each flag on 
    individually is as well, so there needs to be some sort of happy medium
somewhere.
5) A window with a list of the important wine structures or resources that
can be watched as the application runs.
6) Source code debugging in the GUI with step through, break points, etc..(
not like now in winedbg but more like one of the GUI's mentioned before)
7) Loading of application from gui debugger and run it
8) Ability to look at a stack and backtrace in the GUI
9) Value Watches within the GUI.
10) Code Checking
      Some sort of bounds checking...
      Uninitialized variable checking....
      Unreachable Code Checking
11) Use the GUI to help enforce the Wine Coding standard.. most modern GUI
environments let you specify a style of coding.
This would help the new people understand and follow the coding standards
set up... instead of guessing like they do now.
12) Online help / Context help...  point to the IC in the wiki... lots of
good stuff there... just hard to find sometimes....
13) Integration with bugzilla... they find a bug... they create it in the
GUI.. dump out the screen, stack and the like... so some 
of the base information is collected instead of wasting time back and forth
and having so many invalid bugs. Again this format 
can be enforced through coding style templates... you want to submit a bug
here is what you do... check boxes to include things...
like I said screen shots... logs, traces, variables, hardware config, etc...
14) Integration with GIT... check and see if there is a new tree out there..
if so... flag it and git it...
15) Link to whats fixed in the new GIT tree... or a list of it...
16) Link to Dan's patchwatcher status... (kinda a workflow sort of thing) to
know whats good and bad...
17) Generation of the GIT patch and then mail it to the list through a
button...
18) GIT integration

You have to remember guy's alot of the new people coming in are not old
timers like some of us who grew up in a non-gui 
world.. Like it or not  they are used to doing things in certain ways and I
think we could get alot more people looking at 
bugs and helping fix them if we started thinking of something along these
lines. This of course is not a complete list... 
And I am sure this is going to start a flame war or something close to it..
But I think this might be a good next step for something
like the summer of code people to do.. or whomever maintains the wine
debugger to think seriously about.

Most of these things I think could be implemented using the current wine
debugger with some form of pipe between it and the GUI.
That way the 'purists' can still debug using winedebug like now and the new
people who choose to can use the GUI?

Thoughts????????????????????????????????


Problems I have noticed when debugging...
If I kill (press the X button or close it from the task bar) the wine
application, Wine does not clean up from itself... it leaves the 
wine mount daemon running. so I have to kill all the wine processes before I
can restart wine. Otherwise any windows 
application which loads another application fails to start IE a game with a
loader which then starts the game (I have found this
in alot of MMO's where you have some form of login screen / loader which
then loads in the actual game) (and no you cant
always just call the main exe)

Question :
Why does wine have to allocate all its memory at startup? re... the issue
that is causing the ATI drivers to have such
a fuss....  why not just allocate as needed? or have the ability (if its not
there already) to specify the total amount of memory
which is available to the wine process and limit wine to just that ammount
of memory (kind of like the way most VM machines
have the option of setting the maximum amount of memory which is available).

  _____  

Looking for spoilers and reviews on the new TV season? Get
<http://television.aol.com/feature/fall_tv?ncid=aoletv00050000000037>  AOL's
ultimate guide to fall TV. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080910/2ee5dca3/attachment-0001.htm 

From ambro at b4ever.net  Wed Sep 10 11:04:53 2008
From: ambro at b4ever.net (Ambroz Bizjak)
Date: Wed, 10 Sep 2008 18:04:53 +0200
Subject: Patchwatcher security improvements
Message-ID: <200809101804.53402.ambro@b4ever.net>

Dan Kegel wrote:
> So the slave can be in another real machine, another virtual machine, or 
running as another user; anything as long as it can get read/write access to 
its subdirectory of the shared directory.

The problem with your design right now is that you want to run the slave in 
some isolated environment and expect it to be secure. The build slave itself 
is a mission-critical process and putting it in a quarantine to run together 
with untrusted code allows malicious patches to interfere with its operation. 
This means an attacker can just kill it from inside his patch, causing the 
whole patch building operation to fail, or corrupt the baseline tree, or send 
hundreds of fake emails through the slave interface.
So I plan to run the build slave itself in a trusted environment, but make it 
quarantine individual build operations (similar to my previous design with 
user switching). This way the impact of an attack is highly limited - all it 
can theoretically do is fake his own patch results.




From tony.wasserka at freenet.de  Wed Sep 10 11:16:42 2008
From: tony.wasserka at freenet.de (Tony)
Date: Wed, 10 Sep 2008 18:16:42 +0200
Subject: d3dx9_36: Fix the tests for native Windows.
In-Reply-To: <5f9140a20809091055u3fbfb586u41391988bf5c0e93@mail.gmail.com>
References: <5f9140a20809091055u3fbfb586u41391988bf5c0e93@mail.gmail.com>
Message-ID: <48C7F2EA.6040507@freenet.de>

Hi,
At least for all Windows versions below Vista, the d3dx9 importlib does 
exist (and d3dx9_36 does not),
so either something is screwed up with your system or Vista is handling 
it otherwise (in that case we need
another solution though).

Best regards,
    Tony


From mah at jump-ing.de  Wed Sep 10 11:37:04 2008
From: mah at jump-ing.de (Markus Hitter)
Date: Wed, 10 Sep 2008 18:37:04 +0200
Subject: Debugging Wine thoughts
In-Reply-To: <8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>
	<48C7B666.9060601@zacbrown.org>
	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>
Message-ID: <09730D1B-F1BE-4C08-A790-C9011413FAEC@jump-ing.de>


Am 10.09.2008 um 17:16 schrieb celticht32 at aol.com:

> 2) A way to select? the debug flags used with an explanation of  
> what each is for... +sed is for this +relay does that...etc....??
> 3) When you do +relay you could open separate output windows for  
> each thread
> 4) The ability to turn each of the +relay wine thread output on or  
> off...

Sounds like you have a tool in mind to switch tracing flags on and  
off while the app is running in Wine. That would be awesome.

A GUI has not only the advantage of being more attractive, it also  
shows/documents the available switches and (hopefully) tracks them.


MarKus

- - - - - - - - - - - - - - - - - - -
Dipl. Ing. Markus Hitter
http://www.jump-ing.de/






From martin.profittlich at gmx.de  Wed Sep 10 11:52:57 2008
From: martin.profittlich at gmx.de (Martin Profittlich)
Date: Wed, 10 Sep 2008 18:52:57 +0200
Subject: Size of SUBHEAP in heap.c
Message-ID: <20080910165257.181750@gmx.net>

Hello,

when trying to fix an issue with Guitar Rig 3 on Wine (Bug 10129, "Guitar Rig 3 crashes"), I found out something odd: The crash is affected by the size of the SUBHEAP structure in dlls/ntdll/heap.c. Just by adding 8 unused bytes to SUBHEAP, GR3 does not crash anymore. Add another 8 bytes, GR3 crashes again, yet another 8 bytes - no crash and so on.

The bug surfaced with this commit:

[1d063ae18d990343fc077dcbf650add797924018]
ntdll: Remove assumptions that the subheap is at the beginning of the memory block.

I don't think the commit is the cause of the problem. It merely changed the size of SUBHEAP to a problematic value.

I don't really understand the inner workings of heap.c. Does anyone have an idea what the cause might be, or where to look for more information?

Cheers,
Martin

P.S. Link to the bug: http://bugs.winehq.org/show_bug.cgi?id=10129





-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer


From austinenglish at gmail.com  Wed Sep 10 12:58:04 2008
From: austinenglish at gmail.com (Austin English)
Date: Wed, 10 Sep 2008 12:58:04 -0500
Subject: gdi32: Don't crash when copying to an EMF from a NULL bitmap.
In-Reply-To: <b6bb06270809081303u6417a773h5f8deb32121464cd@mail.gmail.com>
References: <b6bb06270809081303u6417a773h5f8deb32121464cd@mail.gmail.com>
Message-ID: <b6bb06270809101058v4f862d84ue054f651e308ed4a@mail.gmail.com>

On Mon, Sep 8, 2008 at 3:03 PM, Austin English <austinenglish at gmail.com> wrote:
> Based on an original patch by Mike McCormack. Rediffed against current
> git. Testcase included, passes in WinXP. Fixes bug 4543.
>

Anything wrong with this one?


From celticht32 at aol.com  Wed Sep 10 13:17:12 2008
From: celticht32 at aol.com (celticht32 at aol.com)
Date: Wed, 10 Sep 2008 14:17:12 -0400
Subject: Debugging Wine thoughts
In-Reply-To: <002a01c9135a$6d3cb810$47b62830$@com>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>	<48C7B666.9060601@zacbrown.org>
	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>
	<002a01c9135a$6d3cb810$47b62830$@com>
Message-ID: <8CAE188949C9959-9C0-119E@WEBMAIL-MA17.sysops.aol.com>


 Is there any documentation on the wine site how to set this up stefan???? It may be a start to what I am thinking..... 

chris


 


 

-----Original Message-----
From: Stefan D?singer <stefan at codeweavers.com>
To: celticht32 at aol.com
Cc: wine-devel at winehq.org
Sent: Wed, 10 Sep 2008 11:32 am
Subject: RE: Debugging Wine thoughts

























You can
attach any debugger to a Win32 process running in Wine. This includes Linux
debuggers like gdb, or any graphical frontends, as well as Windows debuggers
like visual studio. If you built wine from source, the Linux debuggers will see
the Wine source. Probably they can also read the Windows apps source if you
have it. I'm not sure if Windows debuggers can access the Wine source, but
maybe dbghelp.dll can do that



?



?












From:
wine-devel-bounces at winehq.org [mailto:wine-devel-bounces at winehq.org] On Behalf Of celticht32 at aol.com

Sent: Wednesday, September 10,
2008 10:17 AM

To: dank at kegel.com

Cc: wine-devel at winehq.org

Subject: Debugging Wine thoughts









?



Dan / All,

I think what the guy was asking on improving winedbg is to have some sort of
visual debugger much like VC/C++ , Eclipse, 

Borland C++ or the like... Where you can step through the code (seeing the
whole thing like any visual debugger).? 

Then when looking at stacks you? click on a variable or stack and it
either winds it back or display's it.? 



Below 
is my thoughts on what would be a nice to have in some form of Debugger /
Gui Debugger for Wine



So my wish list would be:

1) Some form of a Standard Gui Debugger

2) A way to select? the debug flags used with an explanation of what each
is for... +sed is for this +relay does that...etc....?? 

3) When you do +relay you could open separate output windows for each thread 

4) The ability to turn each of the +relay wine thread output on or off... 

4) Currently Wading through a relay log is a real pain and in some cases it
prevents the problem from occuring.

??? Time outs because of too much data being collected and then
having to wade through and determine what to and not to turn off.

??? So a note or best practice somewhere showing the heavy
hitters in a +relay log? and turn them off by default.? However, note


??? somewhere saying? if +relay doesnt give enough
information then turn on just these flags and run. That way we are not managing


??? flag lists when trying to figure out whats going wrong in an
application. IMHO +relay is too unweldly and turning each flag on 

??? individually is as well, so there needs to be some sort of
happy medium somewhere.

5) A window with a list of the important wine structures or resources that can
be watched as the application runs.

6) Source code debugging in the GUI with step through, break points, etc..( not
like no
w in winedbg but more like one of the GUI's mentioned before)

7) Loading of application from gui debugger and run it

8) Ability to look at a stack and backtrace in the GUI

9) Value Watches within the GUI.

10) Code Checking

????? Some sort of bounds checking...

????? Uninitialized variable checking....

????? Unreachable Code Checking

11) Use the GUI to help enforce the Wine Coding standard.. most modern GUI
environments let you specify a style of coding.

This would help the new people understand and follow the coding standards set
up... instead of guessing like they do now.

12) Online help / Context help...? point to the IC in the wiki... lots of
good stuff there... just hard to find sometimes....

13) Integration with bugzilla... they find a bug... they create it in the GUI..
dump out the screen, stack and the like... so some 

of the base information is collected instead of wasting time back and forth and
having so many invalid bugs. Again this format 

can be enforced through coding style templates... you want to submit a bug here
is what you do... check boxes to include things...

like I said screen shots... logs, traces, variables, hardware config, etc...

14) Integration with GIT... check and see if there is a new tree out there.. if
so... flag it and git it...

15) Link to whats fixed in the new GIT tree... or a list of it...

16) Link to Dan's patchwatcher status... (kinda a workflow sort 
of thing) to
know whats good and bad...

17) Generation of the GIT patch and then mail it to the list through a
button...

18) GIT integration



You have to remember guy's alot of the new people coming in are not old timers
like some of us who grew up in a non-gui 

world.. Like it or not? they are used to doing things in certain ways and
I think we could get alot more people looking at 

bugs and helping fix them if we started thinking of something along these
lines. This of course is not a complete list... 

And I am sure this is going to start a flame war or something close to it.. But
I think this might be a good next step for something

like the summer of code people to do.. or whomever maintains the wine debugger
to think seriously about.



Most of these things I think could be implemented using the current wine debugger
with some form of pipe between it and the GUI.

That way the 'purists' can still debug using winedebug like now and the new
people who choose to can use the GUI?



Thoughts????????????????????????????????





Problems I have noticed when debugging...

If I kill (press the X button or close it from the task bar) the wine
application, Wine does not clean up from itself... it leaves the 

wine mount daemon running. so I have to kill all the wine processes before I
can restart wine. Otherwise any windows 

application which loads another application fails to start IE a game with a
loader which then starts th
e game (I have found this

in alot of MMO's where you have some form of login screen / loader which then
loads in the actual game) (and no you cant

always just call the main exe)



Question :

Why does wine have to allocate all its memory at startup? re... the issue that
is causing the ATI drivers to have such

a fuss....? why not just allocate as needed? or have the ability (if its
not there already) to specify the total amount of memory

which is available to the wine process and limit wine to just that ammount of
memory (kind of like the way most VM machines

have the option of setting the maximum amount of memory which is available).






















Looking for spoilers and reviews on the new TV season? Get
AOL's ultimate guide to fall TV. 












 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080910/ecf74cc9/attachment.htm 

From celticht32 at aol.com  Wed Sep 10 13:20:17 2008
From: celticht32 at aol.com (celticht32 at aol.com)
Date: Wed, 10 Sep 2008 14:20:17 -0400
Subject: Debugging Wine thoughts
In-Reply-To: <09730D1B-F1BE-4C08-A790-C9011413FAEC@jump-ing.de>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>
	<48C7B666.9060601@zacbrown.org>
	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>
	<09730D1B-F1BE-4C08-A790-C9011413FAEC@jump-ing.de>
Message-ID: <8CAE1890298EEA3-9C0-11DB@WEBMAIL-MA17.sysops.aol.com>


 Exactly my thoughts....? and might make things a little easier for new people coming in...? But I don't know if it can be done 
once the trace has started...? I do know that +relay intermixes its output with a thread id in it... so there would be some need 
to say once a new thread starts... do you want to trace that thread etc.... Is what I am asking doable? or is it a 'pipe' (snicker) 
dream..... (hey it was there and I had to use it)

Chris


 


 

-----Original Message-----
From: Markus Hitter <mah at jump-ing.de>
To: celticht32 at aol.com
Cc: dank at kegel.com; wine-devel at winehq.org
Sent: Wed, 10 Sep 2008 12:37 pm
Subject: Re: Debugging Wine thoughts










Am 10.09.2008 um 17:16 schrieb celticht32 at aol.com:?
?

> 2) A way to select? the debug flags used with an explanation of > what each is for... +sed is for this +relay does that...etc....???

> 3) When you do +relay you could open separate output windows for > each thread?

> 4) The ability to turn each of the +relay wine thread output on or > off...?
?

Sounds like you have a tool in mind to switch tracing flags on and off while the app is running in Wine. That would be awesome.?
?

A GUI has not only the advantage of being more attractive, it also shows/documents the available switches and (hopefully) tracks them.?
?


MarKus?
?

- - - - - - - - - - - - - - - - - - -?

Dipl. Ing. Markus Hitter?

http://www.jump-ing.de/?
?

?




 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080910/fae66996/attachment.htm 

From tony.wasserka at freenet.de  Wed Sep 10 13:23:08 2008
From: tony.wasserka at freenet.de (Tony Wasserka)
Date: Wed, 10 Sep 2008 20:23:08 +0200
Subject: d3dx9_36: Fix the tests for native Windows.
In-Reply-To: <5f9140a20809100941g272eed5pc4037dec54c63823@mail.gmail.com>
References: <5f9140a20809091055u3fbfb586u41391988bf5c0e93@mail.gmail.com>	
	<48C7F2EA.6040507@freenet.de>
	<5f9140a20809100941g272eed5pc4037dec54c63823@mail.gmail.com>
Message-ID: <48C8108C.2040504@freenet.de>

yeah, but your patch is only semi-correct in that regard.
What you are referring to (d3dx9.dll) is an import (IMPORTS) of the test 
program, i.e. a dll which is needed to run the program. What your patch 
is doing with that var is correct (i.e. we must use d3dx9_36 instead of 
d3dx9).
However, the IMPORTLIB is the lib which is used to compile the program. 
And if Vista didn't change anything about it (and I'm quite sure it 
didn't), this MUST be d3dx9(.lib), for some reason, which is only known 
by the Microsoft programmers.
So this means, your patch indeed fixed RUNNING the test applications 
under Windows, but now they won't COMPILE anymore, because the linker 
won't be able to find d3dx9_36.lib (the IMPORTLIB) This is assuming you 
didn't install Wines implementation of course; one should be able to 
compile the Wine D3DX9 tests out of the box with the official DirectX SDK.

Best regards,
 Tony
> Hi,
>
> Yes, I learnt that in IRC. But there is a real problem. With a native 
> box, there is no d3dx9.dll. So, wine-test mustn't call it.
> Currently, wine-test calls it and all the tests are skipped in a real 
> windows box. You can check it in the wine-webpage  that collects all 
> the test results.
>
> David
>
>
> 2008/9/10 Tony <tony.wasserka at freenet.de 
> <mailto:tony.wasserka at freenet.de>>
>
>     Hi,
>     At least for all Windows versions below Vista, the d3dx9 importlib
>     does exist (and d3dx9_36 does not),
>     so either something is screwed up with your system or Vista is
>     handling it otherwise (in that case we need
>     another solution though).
>
>     Best regards,
>       Tony
>
>



From celticht32 at aol.com  Wed Sep 10 13:23:20 2008
From: celticht32 at aol.com (celticht32 at aol.com)
Date: Wed, 10 Sep 2008 14:23:20 -0400
Subject: Size of SUBHEAP in heap.c
In-Reply-To: <20080910165257.181750@gmx.net>
References: <20080910165257.181750@gmx.net>
Message-ID: <8CAE1896FA6DAB9-9C0-1209@WEBMAIL-MA17.sysops.aol.com>


 This sounds like a segment / Boundry issue... how far up does it repeat this action? or have you tried??? is it an even number of blocks that the error does not occur?

Chris


 


 

-----Original Message-----
From: Martin Profittlich <martin.profittlich at gmx.de>
To: wine-devel at winehq.org
Sent: Wed, 10 Sep 2008 12:52 pm
Subject: Size of SUBHEAP in heap.c










Hello,

when trying to fix an issue with Guitar Rig 3 on Wine (Bug 10129, "Guitar Rig 3 
crashes"), I found out something odd: The crash is affected by the size of the 
SUBHEAP structure in dlls/ntdll/heap.c. Just by adding 8 unused bytes to 
SUBHEAP, GR3 does not crash anymore. Add another 8 bytes, GR3 crashes again, yet 
another 8 bytes - no crash and so on.

The bug surfaced with this commit:

[1d063ae18d990343fc077dcbf650add797924018]
ntdll: Remove assumptions that the subheap is at the beginning of the memory 
block.

I don't think the commit is the cause of the problem. It merely changed the size 
of SUBHEAP to a problematic value.

I don't really understand the inner workings of heap.c. Does anyone have an idea 
what the cause might be, or where to look for more information?

Cheers,
Martin

P.S. Link to the bug: http://bugs.winehq.org/show_bug.cgi?id=10129





-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer




 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080910/331ebb54/attachment.htm 

From julliard at winehq.org  Wed Sep 10 13:28:11 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 10 Sep 2008 20:28:11 +0200
Subject: gdi32: Don't crash when copying to an EMF from a NULL bitmap.
In-Reply-To: <b6bb06270809101058v4f862d84ue054f651e308ed4a@mail.gmail.com>
	(Austin English's message of "Wed, 10 Sep 2008 12:58:04 -0500")
References: <b6bb06270809081303u6417a773h5f8deb32121464cd@mail.gmail.com>
	<b6bb06270809101058v4f862d84ue054f651e308ed4a@mail.gmail.com>
Message-ID: <87od2vyhxg.fsf@wine.dyndns.org>

"Austin English" <austinenglish at gmail.com> writes:

> On Mon, Sep 8, 2008 at 3:03 PM, Austin English <austinenglish at gmail.com> wrote:
>> Based on an original patch by Mike McCormack. Rediffed against current
>> git. Testcase included, passes in WinXP. Fixes bug 4543.
>
> Anything wrong with this one?

Yes, and it has been rejected already IIRC.

-- 
Alexandre Julliard
julliard at winehq.org


From dank at kegel.com  Wed Sep 10 13:50:28 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 10 Sep 2008 11:50:28 -0700
Subject: Patchwatcher security improvements
In-Reply-To: <a71bd89a0809100646v73a44853k524f7ed86ee52c15@mail.gmail.com>
References: <200809082301.46031.ambro@b4ever.net>
	<alpine.DEB.1.10.0809101333420.21665@amboise.dolphin>
	<a71bd89a0809100502s5e0291f4s7ea5d04a78d178f7@mail.gmail.com>
	<a71bd89a0809100515t26ff3bbboce2220bc601ded8d@mail.gmail.com>
	<a71bd89a0809100646v73a44853k524f7ed86ee52c15@mail.gmail.com>
Message-ID: <a71bd89a0809101150nf32b8f4xf612e0d761071265@mail.gmail.com>

Ambroz wrote:
> The problem with your design right now is that you want to run the slave in
> some isolated environment and expect it to be secure. The build slave itself
> is a mission-critical process and putting it in a quarantine to run together
> with untrusted code allows malicious patches to interfere with its operation.
> This means an attacker can just kill it from inside his patch, causing the
> whole patch building operation to fail, or corrupt the baseline tree, or send
> hundreds of fake emails through the slave interface.

It can't directly send fake emails, since the build slave doesn't have
the email password, but it could certainly disrupt the build slave
and make it give bogus and malicious results.   The design isn't for
security, it's for ease of prototyping and plugging in new build slaves.

> So I plan to run the build slave itself in a trusted environment, but make it
> quarantine individual build operations (similar to my previous design with
> user switching). This way the impact of an attack is highly limited - all it
> can theoretically do is fake his own patch results.

Yes, good, just please don't change the interface to the build master,
all your changes should be encapsulated in a custom build slave.
- Dan


From paul.vriens.wine at gmail.com  Wed Sep 10 13:55:24 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 10 Sep 2008 20:55:24 +0200
Subject: [PATCH 1/2] kernel32/test: Test import entries of a core windows
	DLLs (Revision 2)
In-Reply-To: <20080910183113.GA16315@teop>
References: <20080910183113.GA16315@teop>
Message-ID: <48C8181C.3050609@gmail.com>

Roy Shea wrote:
> This revision places the new test with the other loader tests in
> loader.c, and for testing loads kernel32.dll rather than riched20.dll
> 
> The prior version of this patch is available for reference at:
> http://www.winehq.org/pipermail/wine-patches/2008-September/061226.html
> ---
>  dlls/kernel32/tests/loader.c |   72 ++++++++++++++++++++++++++++++++++++++++++
>  1 files changed, 72 insertions(+), 0 deletions(-)
> 
> 
> ------------------------------------------------------------------------
> 
> 
Hi,

Minor things : typo in "kerenl32_module" and shouldn't you free the library 
after the test? (Or maybe use GetModuleHandle, or does that defeat the test?)

-- 
Cheers,

Paul.


From eric.pouech at orange.fr  Wed Sep 10 14:18:25 2008
From: eric.pouech at orange.fr (Eric Pouech)
Date: Wed, 10 Sep 2008 21:18:25 +0200
Subject: Fixed an infite loop in winedbg: review wanted
In-Reply-To: <48C77D23.2040602@web.de>
References: <48C77D23.2040602@web.de>
Message-ID: <48C81D81.7030202@orange.fr>

Florian K?berle a ?crit :
> Hello
>
> This patch address the infinite loop found at bug 15209:
> http://bugs.winehq.org/show_bug.cgi?id=15209
>
> At least one of the lines I moved in the loop doesn't make sense outsite:
> count -= min(count, 256);
> because the value of count will be always 0 after the loop.
>
> I also moved the following line which might be at the wrong position
> too. About that I am not sure:
> +                    fcp->Start += 256;
>
> Best regards,
> Florian Koeberle
>   
> ------------------------------------------------------------------------
>
>
looks a correct fix to me (moving both lines)
A+

-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)




From jacek at codeweavers.com  Wed Sep 10 14:20:13 2008
From: jacek at codeweavers.com (Jacek Caban)
Date: Wed, 10 Sep 2008 21:20:13 +0200
Subject: [jscript/tests] Prevent a crash on win9x
In-Reply-To: <48C809D8.3020100@gmail.com>
References: <48C809D8.3020100@gmail.com>
Message-ID: <48C81DED.1070000@codeweavers.com>

Paul Vriens wrote:
> Hi,
>
> This at least prevents the crash on win9x. There are still numerous 
> failures on
> win9x but they are visible now. (I'm not so sure about returning 
> S_FALSE in this case btw).

IMO it would be better to return error code and break whole test on 
win9x or find a way to do so before running script. If we wanted to 
support win9x we'd probably need to add objects representing each 
function, which is not worth the trouble.


Thanks,
Jacek


From eric.pouech at orange.fr  Wed Sep 10 14:40:08 2008
From: eric.pouech at orange.fr (Eric Pouech)
Date: Wed, 10 Sep 2008 21:40:08 +0200
Subject: Debugging Wine thoughts
In-Reply-To: <8CAE188949C9959-9C0-119E@WEBMAIL-MA17.sysops.aol.com>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>	<48C7B666.9060601@zacbrown.org>	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>	<002a01c9135a$6d3cb810$47b62830$@com>
	<8CAE188949C9959-9C0-119E@WEBMAIL-MA17.sysops.aol.com>
Message-ID: <48C82298.1000308@orange.fr>

dbghelp supports both linux debug formats (stabs, dwarf) as well as 
microsoft's one
so any debugger using dbghelp as it's debug info provide should debug 
with all bells & whistles native & builtin applications
I had some success with windbg (with a an 'e' between n & d ;-)

unfortunately, http://www.winehq.org/site/docs/winedev-guide/dbg-others 
isn't fully uptodate
A+

-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)




From truiken at gmail.com  Wed Sep 10 15:11:58 2008
From: truiken at gmail.com (James Hawkins)
Date: Wed, 10 Sep 2008 15:11:58 -0500
Subject: [setupapi/tests] Fix a failure on Windows 2000
In-Reply-To: <48C7E1DC.1060208@gmail.com>
References: <48C7E1DC.1060208@gmail.com>
Message-ID: <22821af30809101311k6bb266b9j7b2ac0c0cd6798b1@mail.gmail.com>

On Wed, Sep 10, 2008 at 10:03 AM, Paul Vriens
<paul.vriens.wine at gmail.com> wrote:
> Hi,
>
> W2K doesn't fail with ERROR_INVALID_NAME but with ERROR_GENERAL_SYNTAX
> (setupapi
> error).
>

That error was added for a reason; it was seen on a win2k box.  Please
don't remove it.

-- 
James Hawkins


From paul.vriens.wine at gmail.com  Wed Sep 10 15:15:58 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 10 Sep 2008 22:15:58 +0200
Subject: [setupapi/tests] Fix a failure on Windows 2000
In-Reply-To: <22821af30809101311k6bb266b9j7b2ac0c0cd6798b1@mail.gmail.com>
References: <48C7E1DC.1060208@gmail.com>
	<22821af30809101311k6bb266b9j7b2ac0c0cd6798b1@mail.gmail.com>
Message-ID: <04E9E61D-330C-4E40-ADF4-B6CC1F9EED91@gmail.com>

On Sep 10, 2008, at 22:11, "James Hawkins" <truiken at gmail.com> wrote:

> On Wed, Sep 10, 2008 at 10:03 AM, Paul Vriens
> <paul.vriens.wine at gmail.com> wrote:
>> Hi,
>>
>> W2K doesn't fail with ERROR_INVALID_NAME but with  
>> ERROR_GENERAL_SYNTAX
>> (setupapi
>> error).
>>
>
> That error was added for a reason; it was seen on a win2k box.  Please
> don't remove it.
>
> -- 
> James Hawkins
I checked all w2k tests from the last 30 runs and they all came back  
with that same error.

Cheers,

Paul


From wine at mkarcher.dialup.fu-berlin.de  Wed Sep 10 15:27:06 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Wed, 10 Sep 2008 22:27:06 +0200
Subject: [PATCH] static buffer overflow checking
Message-ID: <1221078426.12534.66.camel@hermes2.karcher.local>

Am Mittwoch, den 10.09.2008, 22:12 +0200 schrieb Marcus Meissner:
> This approach will not work with -O0, which might be a problem.
If I were to decide, that would kill the patch. I really like to
recompile the dlls I am currently debugging with -O0, as that makes
following the code flow much easier. Having MultiByteToWideChar calls
fail in that case seems to make recompilation of most DLLs (that export
A and W functions) with -O0 impossible.

Regards,
  Michael Karcher



From chris.kcat at gmail.com  Wed Sep 10 15:34:22 2008
From: chris.kcat at gmail.com (Chris Robinson)
Date: Wed, 10 Sep 2008 13:34:22 -0700
Subject: devenum: Fix order of operations bug (Coverity id 709)
In-Reply-To: <3a768c550809101134i527452d1l4de4ac22e5f459ab@mail.gmail.com>
References: <3a768c550809101134i527452d1l4de4ac22e5f459ab@mail.gmail.com>
Message-ID: <200809101334.22089.chris.kcat@gmail.com>

On Wednesday 10 September 2008 11:34:03 am Juan Lang wrote:
> dwMediaTypeSize + (dwMediaTypeSize < 2 ? 1 : dwMediaTypeSize / 2)

I'm pretty sure this would come out as:
dwMediaTypeSize + (dwMediaTypeSize < (2 ? 1 : dwMediaTypeSize) / 2)

But even if it doesn't, I don't think it'd hurt to be more explicit:
dwMediaTypeSize + ((dwMediaTypeSize < 2) ? 1 : (dwMediaTypeSize/2))


From juan.lang at gmail.com  Wed Sep 10 15:38:03 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Wed, 10 Sep 2008 13:38:03 -0700
Subject: devenum: Fix order of operations bug (Coverity id 709)
In-Reply-To: <200809101334.22089.chris.kcat@gmail.com>
References: <3a768c550809101134i527452d1l4de4ac22e5f459ab@mail.gmail.com>
	<200809101334.22089.chris.kcat@gmail.com>
Message-ID: <3a768c550809101338r67827a92pbe665ca02c70312f@mail.gmail.com>

> I'm pretty sure this would come out as:
> dwMediaTypeSize + (dwMediaTypeSize < (2 ? 1 : dwMediaTypeSize) / 2)

It doesn't, check the order of operations again.

> But even if it doesn't, I don't think it'd hurt to be more explicit:
> dwMediaTypeSize + ((dwMediaTypeSize < 2) ? 1 : (dwMediaTypeSize/2))

Why use two parentheses when 6 will do, eh?  Sorry, I don't agree that
this is clearer.
--Juan


From marcus at rennboot.centrumbabylon.cz  Wed Sep 10 15:38:08 2008
From: marcus at rennboot.centrumbabylon.cz (Marcus Meissner)
Date: Wed, 10 Sep 2008 22:38:08 +0200
Subject: [PATCH] static buffer overflow checking
In-Reply-To: <1221078426.12534.66.camel@hermes2.karcher.local>
References: <1221078426.12534.66.camel@hermes2.karcher.local>
Message-ID: <20080910203808.GA31697@rennboot.centrumbabylon.cz>

On Wed, Sep 10, 2008 at 10:27:06PM +0200, Michael Karcher wrote:
> Am Mittwoch, den 10.09.2008, 22:12 +0200 schrieb Marcus Meissner:
> > This approach will not work with -O0, which might be a problem.
> If I were to decide, that would kill the patch. I really like to
> recompile the dlls I am currently debugging with -O0, as that makes
> following the code flow much easier. Having MultiByteToWideChar calls
> fail in that case seems to make recompilation of most DLLs (that export
> A and W functions) with -O0 impossible.

Hmm, I might stand corrected for newer gccs.

I just tested some code with -O0 and the functioncall still gets
optimized away. This is with gcc 4.1 and gcc 4.3. gcc 2.95 does not.

But frankly, I can debug similar easily with -O2. Its not that confusing.

Ciao, Marcus


From wine.dev at web.de  Wed Sep 10 15:47:50 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Wed, 10 Sep 2008 22:47:50 +0200
Subject: d3dx9_36: Fix the tests for native Windows.
In-Reply-To: <48C7F2EA.6040507@freenet.de>
References: <5f9140a20809091055u3fbfb586u41391988bf5c0e93@mail.gmail.com>
	<48C7F2EA.6040507@freenet.de>
Message-ID: <1221079670.5830.24.camel@p4.lan>

On Mi, 2008-09-10 at 18:16 +0200, Tony wrote:
> Hi,
> At least for all Windows versions below Vista, the d3dx9 importlib does 
> exist (and d3dx9_36 does not),

I installed a recent dx9-runtime on my w2k test system, but a d3dx9.dll
is not
present (d3dx9_36.dll exist).

I get always a blocking popup, when the testlist is created.


-- 
 
By by ... Detlef




From wine at mkarcher.dialup.fu-berlin.de  Wed Sep 10 15:50:42 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Wed, 10 Sep 2008 22:50:42 +0200
Subject: [PATCH] static buffer overflow checking
In-Reply-To: <20080910203808.GA31697@rennboot.centrumbabylon.cz>
References: <1221078426.12534.66.camel@hermes2.karcher.local>
	<20080910203808.GA31697@rennboot.centrumbabylon.cz>
Message-ID: <1221079842.12534.71.camel@hermes2.karcher.local>

Am Mittwoch, den 10.09.2008, 22:38 +0200 schrieb Marcus Meissner:
> I just tested some code with -O0 and the functioncall still gets
> optimized away. This is with gcc 4.1 and gcc 4.3. gcc 2.95 does not.
If it's just a performance pessimisation with -O0, I don't care. If I
get compiler or linker errors, it would be bad. I don't care about gcc
2.95 at all, so if it breaks this ancient version, so be it.

> But frankly, I can debug similar easily with -O2. Its not that confusing.
How do you set a breakpoint into a function that has been inlined? Bonus
points: That has been inlined at three different places.

Regards,
  Michael Karcher



From david at l8s.co.uk  Wed Sep 10 15:52:02 2008
From: david at l8s.co.uk (David Laight)
Date: Wed, 10 Sep 2008 21:52:02 +0100
Subject: devenum: Fix order of operations bug (Coverity id 709)
In-Reply-To: <3a768c550809101338r67827a92pbe665ca02c70312f@mail.gmail.com>
References: <3a768c550809101134i527452d1l4de4ac22e5f459ab@mail.gmail.com>
	<200809101334.22089.chris.kcat@gmail.com>
	<3a768c550809101338r67827a92pbe665ca02c70312f@mail.gmail.com>
Message-ID: <20080910205202.GD476@snowdrop.l8s.co.uk>

On Wed, Sep 10, 2008 at 01:38:03PM -0700, Juan Lang wrote:
> > I'm pretty sure this would come out as:
> > dwMediaTypeSize + (dwMediaTypeSize < (2 ? 1 : dwMediaTypeSize) / 2)
> 
> It doesn't, check the order of operations again.
> 
> > But even if it doesn't, I don't think it'd hurt to be more explicit:
> > dwMediaTypeSize + ((dwMediaTypeSize < 2) ? 1 : (dwMediaTypeSize/2))
> 
> Why use two parentheses when 6 will do, eh?  Sorry, I don't agree that
> this is clearer.

Agreed, if you add too many parenthesis it gets difficult to see
where they line up (which some tool to show you).
I get peeved that gcc always warns about && and || - where the order
is obvious and correctly defined.

Blindly putting parenthesis around conditional expressions leads people 
to write:
    dwMediaTypeSize + (dwMediaTypeSize < 2) ? 1 : dwMediaTypeSize / 2
which is unlikely to have the desired effect!

	David

-- 
David Laight: david at l8s.co.uk


From meissner at suse.de  Wed Sep 10 16:06:10 2008
From: meissner at suse.de (Marcus Meissner)
Date: Wed, 10 Sep 2008 23:06:10 +0200
Subject: [PATCH] static buffer overflow checking
In-Reply-To: <1221079842.12534.71.camel@hermes2.karcher.local>
References: <1221078426.12534.66.camel@hermes2.karcher.local>
	<20080910203808.GA31697@rennboot.centrumbabylon.cz>
	<1221079842.12534.71.camel@hermes2.karcher.local>
Message-ID: <20080910210609.GA7111@suse.de>

On Wed, Sep 10, 2008 at 10:50:42PM +0200, Michael Karcher wrote:
> Am Mittwoch, den 10.09.2008, 22:38 +0200 schrieb Marcus Meissner:
> > I just tested some code with -O0 and the functioncall still gets
> > optimized away. This is with gcc 4.1 and gcc 4.3. gcc 2.95 does not.
> If it's just a performance pessimisation with -O0, I don't care. If I
> get compiler or linker errors, it would be bad. I don't care about gcc
> 2.95 at all, so if it breaks this ancient version, so be it.
> 
> > But frankly, I can debug similar easily with -O2. Its not that confusing.
> How do you set a breakpoint into a function that has been inlined? Bonus
> points: That has been inlined at three different places.

Difficult. ;)

Ciao, Marcus


From chris.kcat at gmail.com  Wed Sep 10 16:32:42 2008
From: chris.kcat at gmail.com (Chris Robinson)
Date: Wed, 10 Sep 2008 14:32:42 -0700
Subject: devenum: Fix order of operations bug (Coverity id 709)
In-Reply-To: <20080910205202.GD476@snowdrop.l8s.co.uk>
References: <3a768c550809101134i527452d1l4de4ac22e5f459ab@mail.gmail.com>
	<3a768c550809101338r67827a92pbe665ca02c70312f@mail.gmail.com>
	<20080910205202.GD476@snowdrop.l8s.co.uk>
Message-ID: <200809101432.42646.chris.kcat@gmail.com>

On Wednesday 10 September 2008 01:52:02 pm David Laight wrote:
> On Wed, Sep 10, 2008 at 01:38:03PM -0700, Juan Lang wrote:
> > Why use two parentheses when 6 will do, eh?  Sorry, I don't agree that
> > this is clearer.
>
> Agreed, if you add too many parenthesis it gets difficult to see
> where they line up (which some tool to show you).

Any good editor should be able to highlight parenthesis and bracket pairs.

> I get peeved that gcc always warns about && and || - where the order
> is obvious and correctly defined.

The order may be properly defined, but it's hardly obvious to everyone, all of 
the time. And just because you know it doesn't mean someone who'll look over 
the code later will, and make an incorrect assumption based off it.

> Blindly putting parenthesis around conditional expressions leads people
> to write:
>     dwMediaTypeSize + (dwMediaTypeSize < 2) ? 1 : dwMediaTypeSize / 2
> which is unlikely to have the desired effect!

That's exactly the point. It's better to be verbose than to confuse oneself. 
I've personally had several cases where I thought the order of operation was 
obvious (mostly with the ?: op), didn't use parenthesis, and ran into 
inexplicable bugs. It wasn't until I went back over the code and added 
explicit parenthesis that I found out the problem.

Of course, I never went to school to learn this stuff. All I know about 
programming has largely been self-taught. But, for me at least, it helps 
visualizing what happens when things are properly grouped (spacing helps, eg. 
foo<2 ? 1 : bar/2, but it still leaves a question since the spacing can be 
wrong given the order of operations, and give unexpected results; parenthesis 
gaurantees the evaluation is as specified).


From markus.amsler at oribi.org  Wed Sep 10 16:39:20 2008
From: markus.amsler at oribi.org (Markus Amsler)
Date: Wed, 10 Sep 2008 23:39:20 +0200
Subject: Debugging Wine thoughts
In-Reply-To: <09730D1B-F1BE-4C08-A790-C9011413FAEC@jump-ing.de>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>	<48C7B666.9060601@zacbrown.org>	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>
	<09730D1B-F1BE-4C08-A790-C9011413FAEC@jump-ing.de>
Message-ID: <48C83E88.5030404@oribi.org>

Markus Hitter wrote:
> Am 10.09.2008 um 17:16 schrieb celticht32 at aol.com:
> 
>> 2) A way to select? the debug flags used with an explanation of  
>> what each is for... +sed is for this +relay does that...etc....??
>> 3) When you do +relay you could open separate output windows for  
>> each thread
>> 4) The ability to turn each of the +relay wine thread output on or  
>> off...
> 
> Sounds like you have a tool in mind to switch tracing flags on and  
> off while the app is running in Wine. That would be awesome.
> 
> A GUI has not only the advantage of being more attractive, it also  
> shows/documents the available switches and (hopefully) tracks them.
> 
> 

Wine's taskmgr has in the Processes tab a context menu entry "Edit Debug 
Channels ...". Unfortunately it's broken.

Markus



From wine-devel at kievinfo.com  Wed Sep 10 16:54:35 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Wed, 10 Sep 2008 15:54:35 -0600
Subject: Debugging Wine thoughts
In-Reply-To: <48C83E88.5030404@oribi.org>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>	<48C7B666.9060601@zacbrown.org>	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>	<09730D1B-F1BE-4C08-A790-C9011413FAEC@jump-ing.de>
	<48C83E88.5030404@oribi.org>
Message-ID: <48C8421B.4010109@kievinfo.com>

Markus Amsler wrote:
> Wine's taskmgr has in the Processes tab a context menu entry "Edit Debug 
> Channels ...". Unfortunately it's broken.
> 
No it's not broken. You can only enable/disable debug channels from there
that were enabled with WINEDEBUG env var at the start of the program. This
is optimization AJ put in place a long time ago.

Vitaliy.


From wine-devel at kievinfo.com  Wed Sep 10 17:05:31 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Wed, 10 Sep 2008 16:05:31 -0600
Subject: Wine mouse input: Fwd: [RFC] Preliminary XI 2 feature list
In-Reply-To: <20080908205450.223680@gmx.net>
References: <20080908205450.223680@gmx.net>
Message-ID: <48C844AB.3020800@kievinfo.com>

Roderick Colenbrander wrote:
> Hi all,
> 
> Today Peter Hutterer posted a preliminary feature list of Xinput 2. I have forwarded the email to here so that Vitaly and others can check it out and see if it offers what we need in Wine. If you have comments I would send them to the xorg list.
> 
> Regards,
> Roderick Colenbrander
> 
> 
> --- Xorg mail ---
> Subject: [RFC] Preliminary XI 2 feature list
> 
> Following XDS, various notes, the discussions and preliminary executive
> decisions by me, here's a first draft of XI2 features. If you have anything to
> add, please speak up.
> 
> Time-line: I'd like to get it into server 1.6 but it doesn't look particularly
> likely. 7.5 is more likely.
> 
> - Compatibility with XI 1.x, although some requests will be deactivated or of
>   limited functionality.
> - 16 bit device IDs
> - All events available as XGE events.
> - Event selection through event masks (instead or in addition to the event
>   classes).  i.e.  the common cases of "select from all devices" and "select
>   from all master devices" will be simplified.
> - Devices may have relative + absolute axes simultaneously, and change the
>   mode on any of these axes at runtime.
> - Relative coordinates as a separate event.
> - 32 bit keycodes (reliant on XKB2)
> - ListInputDevices will include the currently attached Slave
> - Axis and button labelling through device properties.
> - subpixel resolution (from relative devices) available to clients.
>   i.e. you get the data in screen coordinates, but with subpixel resolution
>   available as fixed floating point.
> - no window access protocol, this will be thrown out.
> - dynamic device classes - device may add/remove classes at runtime.
> - aspect-ratio scaling of valuators.
> 
> Probable implementation details:
> - libXi: "namespacing": i.e. X<dosomething> will be XI<dosomething>
> - server-internal use of XGE events, XI 1.x events emulated when needed.
> - some standardisation on axis label Atom names.
> - Clients have to announce XI2 support, otherwise they will be treated as XI
>   1.x clients. 
> 
> Once the feature discussion is complete, I'll get a protocol spec out.
> 
> Cheers,
>   Peter

I'm still not clear which one will provide the exact events from the device?
Relative events doesn't mean the device events. If this is pointer events,
then it won't help. Pointer gets stuck on the border of the screen. But not
mouse/trackball.

Also it would be nice to have a way to completely stop pointer from moving.
Right now it's impossible, even with Xevie which was supposed to add exactly
that.

Vitaliy.


From celticht32 at aol.com  Wed Sep 10 17:28:40 2008
From: celticht32 at aol.com (celticht32 at aol.com)
Date: Wed, 10 Sep 2008 18:28:40 -0400
Subject: Debugging Wine thoughts
In-Reply-To: <48C8421B.4010109@kievinfo.com>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>	<48C7B666.9060601@zacbrown.org>	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>	<09730D1B-F1BE-4C08-A790-C9011413FAEC@jump-ing.de>	<48C83E88.5030404@oribi.org>
	<48C8421B.4010109@kievinfo.com>
Message-ID: <8CAE1ABB5CBA565-B90-27B0@webmail-dd01.sysops.aol.com>


 


 So is there a way... from say something like GDB to send a message to wine to do the same thing..

The problem is the task manager is envoked in wine correct? so If we are debugging its kind of 
hard to get to the taskmgr....?? 

Chris


 

-----Original Message-----
From: Vitaliy Margolen <wine-devel at kievinfo.com>
To: Markus Amsler <markus.amsler at oribi.org>
Cc: wine-devel at winehq.org
Sent: Wed, 10 Sep 2008 5:54 pm
Subject: Re: Debugging Wine thoughts










Markus Amsler wrote:
> Wine's taskmgr has in the Processes tab a context menu entry "Edit Debug 
> Channels ...". Unfortunately it's broken.
> 
No it's not broken. You can only enable/disable debug channels from there
that were enabled with WINEDEBUG env var at the start of the program. This
is optimization AJ put in place a long time ago.

Vitaliy.





 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080910/8de4fac2/attachment.htm 

From wine-devel at kievinfo.com  Wed Sep 10 17:57:06 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Wed, 10 Sep 2008 16:57:06 -0600
Subject: Debugging Wine thoughts
In-Reply-To: <8CAE1ABB5CBA565-B90-27B0@webmail-dd01.sysops.aol.com>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>	<48C7B666.9060601@zacbrown.org>	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>	<09730D1B-F1BE-4C08-A790-C9011413FAEC@jump-ing.de>	<48C83E88.5030404@oribi.org>
	<48C8421B.4010109@kievinfo.com>
	<8CAE1ABB5CBA565-B90-27B0@webmail-dd01.sysops.aol.com>
Message-ID: <48C850C2.50900@kievinfo.com>

Do not top post! Especially with html message!

celticht32 at aol.com wrote:
> 
> So is there a way... from say something like GDB to send a message to
> wine to do the same thing..
> 
> The problem is the task manager is envoked in wine correct? so If we are
> debugging its kind of
> hard to get to the taskmgr....  
> 
> Chris
> 
> -----Original Message-----
> From: Vitaliy Margolen <wine-devel at kievinfo.com>
> To: Markus Amsler <markus.amsler at oribi.org>
> Cc: wine-devel at winehq.org
> Sent: Wed, 10 Sep 2008 5:54 pm
> Subject: Re: Debugging Wine thoughts
> 
> Markus Amsler wrote:
> 
>> Wine's taskmgr has in the Processes tab a context menu entry "Edit Debug 
> 
>> Channels ...". Unfortunately it's broken.
> 
>> 
> 
> No it's not broken. You can only enable/disable debug channels from there
> 
> that were enabled with WINEDEBUG env var at the start of the program. This
> 
> is optimization AJ put in place a long time ago.
> 

You can read the source of task manager and see how it's doing it.

Vitaliy


From celticht32 at aol.com  Wed Sep 10 21:06:11 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Wed, 10 Sep 2008 22:06:11 -0400
Subject: Debugging Wine thoughts
In-Reply-To: <48C850C2.50900@kievinfo.com>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>	<48C7B666.9060601@zacbrown.org>	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>	<09730D1B-F1BE-4C08-A790-C9011413FAEC@jump-ing.de>	<48C83E88.5030404@oribi.org>
	<48C8421B.4010109@kievinfo.com>
	<8CAE1ABB5CBA565-B90-27B0@webmail-dd01.sysops.aol.com>
	<48C850C2.50900@kievinfo.com>
Message-ID: <48C87D13.9020300@aol.com>

Vitaliy Margolen wrote:
> Do not top post! Especially with html message!
> 
> celticht32 at aol.com wrote:
>> So is there a way... from say something like GDB to send a message to
>> wine to do the same thing..
>>
>> The problem is the task manager is envoked in wine correct? so If we are
>> debugging its kind of
>> hard to get to the taskmgr....  
>>
>> Chris
>>
>> -----Original Message-----
>> From: Vitaliy Margolen <wine-devel at kievinfo.com>
>> To: Markus Amsler <markus.amsler at oribi.org>
>> Cc: wine-devel at winehq.org
>> Sent: Wed, 10 Sep 2008 5:54 pm
>> Subject: Re: Debugging Wine thoughts
>>
>> Markus Amsler wrote:
>>
>>> Wine's taskmgr has in the Processes tab a context menu entry "Edit Debug 
>>> Channels ...". Unfortunately it's broken.
>> No it's not broken. You can only enable/disable debug channels from there
>>
>> that were enabled with WINEDEBUG env var at the start of the program. This
>>
>> is optimization AJ put in place a long time ago.
>>
> 
> You can read the source of task manager and see how it's doing it.
> 
> Vitaliy
So again I ask.. is there a way from something like GDB to do the same 
thing? Yes I can look at the task manager but if someone could explain 
it could be documented and possibly turned into IC for others to use...

Chris


From wine-devel at kievinfo.com  Wed Sep 10 22:22:14 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Wed, 10 Sep 2008 21:22:14 -0600
Subject: Debugging Wine thoughts
In-Reply-To: <48C87D13.9020300@aol.com>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>	<48C7B666.9060601@zacbrown.org>	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>	<09730D1B-F1BE-4C08-A790-C9011413FAEC@jump-ing.de>	<48C83E88.5030404@oribi.org>
	<48C8421B.4010109@kievinfo.com>
	<8CAE1ABB5CBA565-B90-27B0@webmail-dd01.sysops.aol.com>
	<48C850C2.50900@kievinfo.com> <48C87D13.9020300@aol.com>
Message-ID: <48C88EE6.3080107@kievinfo.com>

Chris Ahrendt wrote:
> Vitaliy Margolen wrote:
>> Do not top post! Especially with html message!
>>
>> celticht32 at aol.com wrote:
>>> So is there a way... from say something like GDB to send a message to
>>> wine to do the same thing..
>>>
>>> The problem is the task manager is envoked in wine correct? so If we are
>>> debugging its kind of
>>> hard to get to the taskmgr.... 
>>> Chris
>>>
>>> -----Original Message-----
>>> From: Vitaliy Margolen <wine-devel at kievinfo.com>
>>> To: Markus Amsler <markus.amsler at oribi.org>
>>> Cc: wine-devel at winehq.org
>>> Sent: Wed, 10 Sep 2008 5:54 pm
>>> Subject: Re: Debugging Wine thoughts
>>>
>>> Markus Amsler wrote:
>>>
>>>> Wine's taskmgr has in the Processes tab a context menu entry "Edit
>>>> Debug Channels ...". Unfortunately it's broken.
>>> No it's not broken. You can only enable/disable debug channels from
>>> there
>>>
>>> that were enabled with WINEDEBUG env var at the start of the program.
>>> This
>>>
>>> is optimization AJ put in place a long time ago.
>>>
>>
>> You can read the source of task manager and see how it's doing it.
>>
>> Vitaliy
> So again I ask.. is there a way from something like GDB to do the same
> thing? Yes I can look at the task manager but if someone could explain
> it could be documented and possibly turned into IC for others to use...

It's not that easy. Task manager reads/writes directly into the memory of
the process to get state, enable or disable debug channels. So yeah you can
do that from GDB, You just need to find exactly the place to read from/write to.

This is such a pain because it's made to be fast with a minimal overhead.
Not to be easily used on the low level.

Vitaliy.


From dmitry at codeweavers.com  Wed Sep 10 22:28:04 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 11 Sep 2008 12:28:04 +0900
Subject: [PATCH 1/2] kernel32/test: Test import entries of a core
	windowsDLLs (Revision 2)
References: <20080910183113.GA16315@teop>
Message-ID: <19B4B1FF948D4041B91F983E1AE8C849@DMITRY>

"Roy Shea" <royshea at gmail.com> wrote:

> This revision places the new test with the other loader tests in
> loader.c, and for testing loads kernel32.dll rather than riched20.dll

Please move an existing and new tests to their own bodies, and use
GetModuleHandle instead of LoadLibrary.

-- 
Dmitry.


From damjan.jov at gmail.com  Thu Sep 11 00:44:09 2008
From: damjan.jov at gmail.com (Damjan Jovanovic)
Date: Thu, 11 Sep 2008 07:44:09 +0200
Subject: Debugging Wine thoughts
In-Reply-To: <8CAE188949C9959-9C0-119E@WEBMAIL-MA17.sysops.aol.com>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>
	<48C7B666.9060601@zacbrown.org>
	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>
	<002a01c9135a$6d3cb810$47b62830$@com>
	<8CAE188949C9959-9C0-119E@WEBMAIL-MA17.sysops.aol.com>
Message-ID: <9e89675b0809102244y14ca2a6ck87f6604ae5cb217e@mail.gmail.com>

On Wed, Sep 10, 2008 at 8:17 PM,  <celticht32 at aol.com> wrote:

> Question :
> Why does wine have to allocate all its memory at startup? re... the issue
> that is causing the ATI drivers to have such
> a fuss....  why not just allocate as needed? or have the ability (if its not
> there already) to specify the total amount of memory
> which is available to the wine process and limit wine to just that ammount
> of memory (kind of like the way most VM machines
> have the option of setting the maximum amount of memory which is available).

Windows applications assume a certain memory layout, which sometimes
conflicts with what *nix does.

For example applications don't expect to see pointers into the upper
1-2 GB of the 4 GB virtual memory address space because on Windows the
kernel's memory is mapped there. But, ld-linux.so.2 could load
libraries there, including libraries hosting Wine's DLLs, and pointers
to memory in those would leak into the Windows code. So Wine prevents
the "special" areas of Windows memory from being used by *nix
libraries and functions like malloc() by mmap()ing that memory in
advance.

In my opinion, it would be better if we used a custom dynamic linker
(ie. an ld-wine.so) that could control where all libraries get loaded
so we wouldn't have to steal memory in advance and go through one of
the most elaborate startup processes in existence, where an assembly
_start routine in wine-preloader loads before ld-linux.so.2 and then
pretends to be the kernel.

Bye
Damjan Jovanovic


From paul.vriens.wine at gmail.com  Thu Sep 11 01:14:41 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 11 Sep 2008 08:14:41 +0200
Subject: [setupapi/tests] Fix a failure on Windows 2000
In-Reply-To: <22821af30809101311k6bb266b9j7b2ac0c0cd6798b1@mail.gmail.com>
References: <48C7E1DC.1060208@gmail.com>
	<22821af30809101311k6bb266b9j7b2ac0c0cd6798b1@mail.gmail.com>
Message-ID: <48C8B751.5020501@gmail.com>

James Hawkins wrote:
> On Wed, Sep 10, 2008 at 10:03 AM, Paul Vriens
> <paul.vriens.wine at gmail.com> wrote:
>> Hi,
>>
>> W2K doesn't fail with ERROR_INVALID_NAME but with ERROR_GENERAL_SYNTAX
>> (setupapi
>> error).
>>
> 
> That error was added for a reason; it was seen on a win2k box.  Please
> don't remove it.
> 
Ok, don't apply my patch.

The strange thing is that W2K appears to use 2 different failures but also on 
the same system!? (I checked the current data and the old-data on 
tests.winehq.org for this). FWIW, I even saw some W2K boxes return 
ERROR_FILE_NOT_FOUND.

I'll sent another one but will wait till after your other setupapi patch is applied.

-- 
Cheers,

Paul.


From celticht32 at aol.com  Thu Sep 11 01:20:35 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Thu, 11 Sep 2008 02:20:35 -0400
Subject: Drawprim.c  patchwatcher failure
In-Reply-To: <a71bd89a0809071725o164708cekf07f081c2544d658@mail.gmail.com>
References: <a71bd89a0809071725o164708cekf07f081c2544d658@mail.gmail.com>
Message-ID: <48C8B8B3.9040302@aol.com>

patching file dlls/wined3d/drawprim.c
Hunk #2 FAILED at 448.
1 out of 2 hunks FAILED -- saving rejects to file 
dlls/wined3d/drawprim.c.rej

> 
> 
Dan what does this mean on a patch I submitted tonight????
How do I fix it?

Chris


From chris.kcat at gmail.com  Thu Sep 11 01:26:07 2008
From: chris.kcat at gmail.com (Chris Robinson)
Date: Wed, 10 Sep 2008 23:26:07 -0700
Subject: Debugging Wine thoughts
In-Reply-To: <9e89675b0809102244y14ca2a6ck87f6604ae5cb217e@mail.gmail.com>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>
	<8CAE188949C9959-9C0-119E@WEBMAIL-MA17.sysops.aol.com>
	<9e89675b0809102244y14ca2a6ck87f6604ae5cb217e@mail.gmail.com>
Message-ID: <200809102326.08638.chris.kcat@gmail.com>

On Wednesday 10 September 2008 10:44:09 pm Damjan Jovanovic wrote:
> For example applications don't expect to see pointers into the upper
> 1-2 GB of the 4 GB virtual memory address space because on Windows the
> kernel's memory is mapped there. But, ld-linux.so.2 could load
> libraries there, including libraries hosting Wine's DLLs, and pointers
> to memory in those would leak into the Windows code.

AFAIK, Wine doesn't load .dll.so files using the standard dl lib functions. At 
least, the dlopen/dlsym functions don't recognize the .dll.so files in a 
winelib app. What it does, again AFAIK, is mmap the lower 2-3GB range so it 
can put kernel32/etc where some apps expect it to be, and to mimick Windows' 
allocation algorithms.

However, because it's all premapped, further libc malloc calls can't use that 
same range, and will quickly run out of allocatable memory. This causes 
problems particularly with video cards that have 512MB VRAM or more, since 
there's not enough room to map and/or mirror the card resources.


An idea I had and mentioned on IRC a couple times is to have libwine expose 
functions that can be used by drivers and other native modules to 
allocate "win32 memory" instead of using the standard libc functions. It 
would be pretty easy for a driver or such to do:

void *hdl = dlopen("libwine.so", RTLD_NOLOAD);
void *(*mallocfunc)(size_t) = (hdl ? dlsym(hdl, "wine_malloc") : NULL);
void (*freefunc)(void*) = (hdl ? dlsym(hdl, "wine_free") : NULL);
if(!mallocfunc || !freefunc || dlerror() != NULL)
{
    mallocfunc = malloc;
    freefunc = free;
}
..use mallocfunc/freefunc for memory..

This will, of course, rely on drivers to be aware of Wine and handle it.

An alternative idea Alexandre had was to override libc's mmap, so anything 
loaded in the process would automatically use the new function (and thus not 
need any Wine-specific code). However, my attempts at doing that caused glibc 
to crash on init.


From dmitry at codeweavers.com  Thu Sep 11 01:25:51 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 11 Sep 2008 15:25:51 +0900
Subject: Drawprim.c  patchwatcher failure
References: <a71bd89a0809071725o164708cekf07f081c2544d658@mail.gmail.com>
	<48C8B8B3.9040302@aol.com>
Message-ID: <EB9D0A81BA984F8B946B3ABFC311AE76@DMITRY>

"Chris Ahrendt" <celticht32 at aol.com> wrote:

> patching file dlls/wined3d/drawprim.c
> Hunk #2 FAILED at 448.
> 1 out of 2 hunks FAILED -- saving rejects to file 
> dlls/wined3d/drawprim.c.rej
> 
>> 
>> 
> Dan what does this mean on a patch I submitted tonight????

That means that the source you have used to generate the patch
doesn't match what patch watcher uses (latest git).

> How do I fix it?

Update to current git and regenerate the patch:

-- 
Dmitry.


From celticht32 at aol.com  Thu Sep 11 01:28:50 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Thu, 11 Sep 2008 02:28:50 -0400
Subject: Drawprim.c  patchwatcher failure
In-Reply-To: <EB9D0A81BA984F8B946B3ABFC311AE76@DMITRY>
References: <a71bd89a0809071725o164708cekf07f081c2544d658@mail.gmail.com>
	<48C8B8B3.9040302@aol.com>
	<EB9D0A81BA984F8B946B3ABFC311AE76@DMITRY>
Message-ID: <48C8BAA2.9050102@aol.com>

Dmitry Timoshkov wrote:
> "Chris Ahrendt" <celticht32 at aol.com> wrote:
> 
>> patching file dlls/wined3d/drawprim.c
>> Hunk #2 FAILED at 448.
>> 1 out of 2 hunks FAILED -- saving rejects to file 
>> dlls/wined3d/drawprim.c.rej
>>
>>>
>>>
>> Dan what does this mean on a patch I submitted tonight????
> 
> That means that the source you have used to generate the patch
> doesn't match what patch watcher uses (latest git).
> 
>> How do I fix it?
> 
> Update to current git and regenerate the patch:
> 
The thing is I just did a refresh and it said I was up to date...

I guess wait till tomorrow morning and submit it then


Chris


From paul.vriens.wine at gmail.com  Thu Sep 11 01:42:49 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 11 Sep 2008 08:42:49 +0200
Subject: crypt32: Fix a failing test in win9x
In-Reply-To: <22821af30809102059s3ac109ap19abd3bbc79661da@mail.gmail.com>
References: <22821af30809102059s3ac109ap19abd3bbc79661da@mail.gmail.com>
Message-ID: <48C8BDE9.7030407@gmail.com>

James Hawkins wrote:
> Hi,
> 
> Changelog:
> * Fix a failing test in win9x.
> 
>  dlls/crypt32/tests/ctl.c |   15 +++++++++++----
>  1 files changed, 11 insertions(+), 4 deletions(-)
> 
> 
> 
> ------------------------------------------------------------------------
> 
> 
The !ret in:

+    else
+    {
+        ok(!ret && GetLastError() == CRYPT_E_EXISTS,
+           "expected CRYPT_E_EXISTS, got %d %08x\n", ret, GetLastError());
+    }

is superfluous.

-- 
Cheers,

Paul.


From tony.wasserka at freenet.de  Thu Sep 11 01:55:25 2008
From: tony.wasserka at freenet.de (Tony Wasserka)
Date: Thu, 11 Sep 2008 08:55:25 +0200
Subject: d3dx9_36: Fix the tests for native Windows.
In-Reply-To: <1221079670.5830.24.camel@p4.lan>
References: <5f9140a20809091055u3fbfb586u41391988bf5c0e93@mail.gmail.com>	
	<48C7F2EA.6040507@freenet.de> <1221079670.5830.24.camel@p4.lan>
Message-ID: <48C8C0DD.6060201@freenet.de>


> On Mi, 2008-09-10 at 18:16 +0200, Tony wrote:
>   
>> Hi,
>> At least for all Windows versions below Vista, the d3dx9 importlib does 
>> exist (and d3dx9_36 does not),
>>     
>
> I installed a recent dx9-runtime on my w2k test system, but a d3dx9.dll
> is not
> present (d3dx9_36.dll exist).
>
> I get always a blocking popup, when the testlist is created.
>
>
>   
You are speaking about the IMPORT d3dx9_36.dll.
I was talking about the IMPORTLIB which is called d3dx9.lib,
which is part of the DirectX SDK and used to compile d3dx9 applications, 
whereas the dll file is used to run them.



From truiken at gmail.com  Thu Sep 11 02:14:18 2008
From: truiken at gmail.com (James Hawkins)
Date: Thu, 11 Sep 2008 02:14:18 -0500
Subject: crypt32: Fix a failing test in win9x
In-Reply-To: <48C8BDE9.7030407@gmail.com>
References: <22821af30809102059s3ac109ap19abd3bbc79661da@mail.gmail.com>
	<48C8BDE9.7030407@gmail.com>
Message-ID: <22821af30809110014j50384817icabdf13e071f9e28@mail.gmail.com>

On Thu, Sep 11, 2008 at 1:42 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>>
> The !ret in:
>
> +    else
> +    {
> +        ok(!ret && GetLastError() == CRYPT_E_EXISTS,
> +           "expected CRYPT_E_EXISTS, got %d %08x\n", ret, GetLastError());
> +    }
>
> is superfluous.
>

It is, but I'm sticking with precedent in leaving the original test in
place.  Please remove wine-patches from the CC when you reply to a
patch.

-- 
James Hawkins


From paul.vriens.wine at gmail.com  Thu Sep 11 02:17:52 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 11 Sep 2008 09:17:52 +0200
Subject: crypt32: Fix a failing test in win9x
In-Reply-To: <22821af30809110014j50384817icabdf13e071f9e28@mail.gmail.com>
References: <22821af30809102059s3ac109ap19abd3bbc79661da@mail.gmail.com>	
	<48C8BDE9.7030407@gmail.com>
	<22821af30809110014j50384817icabdf13e071f9e28@mail.gmail.com>
Message-ID: <48C8C620.9010709@gmail.com>

James Hawkins wrote:
> On Thu, Sep 11, 2008 at 1:42 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>> The !ret in:
>>
>> +    else
>> +    {
>> +        ok(!ret && GetLastError() == CRYPT_E_EXISTS,
>> +           "expected CRYPT_E_EXISTS, got %d %08x\n", ret, GetLastError());
>> +    }
>>
>> is superfluous.
>>
> 
> It is, but I'm sticking with precedent in leaving the original test in
> place.  Please remove wine-patches from the CC when you reply to a
> patch.
> 
Yeah, I think this is the first time I didn't pay attention to that, sorry.

-- 
Cheers,

Paul.


From julliard at winehq.org  Thu Sep 11 05:00:19 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 11 Sep 2008 12:00:19 +0200
Subject: [PATCH 02/14] inetcomm: Add a stub MimeInternational object.
In-Reply-To: <87tzcoxf61.fsf@totally-fudged-out-message-id> (Huw Davies's
	message of "Wed, 10 Sep 2008 12:05:37 +0100")
References: <87tzcoxf61.fsf@totally-fudged-out-message-id>
Message-ID: <873ak7xarw.fsf@wine.dyndns.org>

Huw Davies <huw at codeweavers.com> writes:

> @@ -8,6 +8,7 @@ IMPORTS   = uuid ole32 ws2_32 user32 advapi32 kernel32
>  
>  C_SRCS = \
>  	inetcomm_main.c \
> +	internat.c \
>  	internettransport.c \
>  	mimeole.c \
>  	regsvr.c

I find that abbreviating 'international' as 'internat' is a bit
confusing, especially in a dll that also uses 'internet' in various
places. Would you mind changing it to mimeintl.c or something like that?

-- 
Alexandre Julliard
julliard at winehq.org


From thunderbird2k at gmx.net  Thu Sep 11 05:38:41 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Thu, 11 Sep 2008 12:38:41 +0200
Subject: Wine mouse input: Fwd: [RFC] Preliminary XI 2 feature list
In-Reply-To: <48C844AB.3020800@kievinfo.com>
References: <20080908205450.223680@gmx.net> <48C844AB.3020800@kievinfo.com>
Message-ID: <20080911103841.202540@gmx.net>

Hi,

I forwarded your concerns to the xorg list and got the following response from Daniel Stone:

"Stopping the pointer from moving is easily done by temporarily detaching
the device.  Getting unclipped relative events will also be catered for."

Roderick

> Roderick Colenbrander wrote:
> > Hi all,
> > 
> > Today Peter Hutterer posted a preliminary feature list of Xinput 2. I
> have forwarded the email to here so that Vitaly and others can check it out
> and see if it offers what we need in Wine. If you have comments I would send
> them to the xorg list.
> > 
> > Regards,
> > Roderick Colenbrander
> > 
> > 
> > --- Xorg mail ---
> > Subject: [RFC] Preliminary XI 2 feature list
> > 
> > Following XDS, various notes, the discussions and preliminary executive
> > decisions by me, here's a first draft of XI2 features. If you have
> anything to
> > add, please speak up.
> > 
> > Time-line: I'd like to get it into server 1.6 but it doesn't look
> particularly
> > likely. 7.5 is more likely.
> > 
> > - Compatibility with XI 1.x, although some requests will be deactivated
> or of
> >   limited functionality.
> > - 16 bit device IDs
> > - All events available as XGE events.
> > - Event selection through event masks (instead or in addition to the
> event
> >   classes).  i.e.  the common cases of "select from all devices" and
> "select
> >   from all master devices" will be simplified.
> > - Devices may have relative + absolute axes simultaneously, and change
> the
> >   mode on any of these axes at runtime.
> > - Relative coordinates as a separate event.
> > - 32 bit keycodes (reliant on XKB2)
> > - ListInputDevices will include the currently attached Slave
> > - Axis and button labelling through device properties.
> > - subpixel resolution (from relative devices) available to clients.
> >   i.e. you get the data in screen coordinates, but with subpixel
> resolution
> >   available as fixed floating point.
> > - no window access protocol, this will be thrown out.
> > - dynamic device classes - device may add/remove classes at runtime.
> > - aspect-ratio scaling of valuators.
> > 
> > Probable implementation details:
> > - libXi: "namespacing": i.e. X<dosomething> will be XI<dosomething>
> > - server-internal use of XGE events, XI 1.x events emulated when needed.
> > - some standardisation on axis label Atom names.
> > - Clients have to announce XI2 support, otherwise they will be treated
> as XI
> >   1.x clients. 
> > 
> > Once the feature discussion is complete, I'll get a protocol spec out.
> > 
> > Cheers,
> >   Peter
> 
> I'm still not clear which one will provide the exact events from the
> device?
> Relative events doesn't mean the device events. If this is pointer events,
> then it won't help. Pointer gets stuck on the border of the screen. But
> not
> mouse/trackball.
> 
> Also it would be nice to have a way to completely stop pointer from
> moving.
> Right now it's impossible, even with Xevie which was supposed to add
> exactly
> that.
> 
> Vitaliy.

-- 
GMX startet ShortView.de. Hier findest Du Leute mit Deinen Interessen!
Jetzt dabei sein: http://www.shortview.de/wasistshortview.php?mc=sv_ext_mf at gmx


From mah at jump-ing.de  Thu Sep 11 06:20:42 2008
From: mah at jump-ing.de (Markus Hitter)
Date: Thu, 11 Sep 2008 13:20:42 +0200
Subject: Debugging Wine thoughts
In-Reply-To: <002a01c9135a$6d3cb810$47b62830$@com>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>	<48C7B666.9060601@zacbrown.org>
	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>
	<002a01c9135a$6d3cb810$47b62830$@com>
Message-ID: <25B7E582-04F4-4E85-B824-712B025EF027@jump-ing.de>


Am 10.09.2008 um 17:32 schrieb Stefan D?singer:

> You can attach any debugger to a Win32 process running in Wine. This
> includes Linux debuggers like gdb, [...]

As I didn't find hints on how to do this I tried myself:

** First, start gdb in the C: directory

mah at piccard:/otherubuntu/home/mah/.wine/drive_c$ gdb
GNU gdb 6.8-debian
Copyright [...]
This GDB was configured as "x86_64-linux-gnu".
(gdb) file wine
Reading symbols from /usr/local/bin/wine...done.
(gdb) directory /otherubuntu/home/mah/wine/
Source directories searched: /otherubuntu/home/mah/wine:$cdir:$cwd
(gdb)

** Then, run the app

(gdb) run windows/notepad.exe
Starting program: /usr/local/bin/wine windows/notepad.exe
[Thread debugging using libthread_db enabled]
[New Thread 0xf7c628c0 (LWP 793)]
[New Thread 0xf7c61b90 (LWP 796)]
[Thread 0xf7c61b90 (LWP 796) exited]
[New process 793]
Executing new program: /usr/local/bin/wine-preloader
warning: Cannot initialize thread debugging library: generic error
warning: Cannot initialize thread debugging library: generic error
[New process 793]
Fontconfig warning: "/etc/fonts/conf.d/53-monospace-lcd-filter.conf",  
line 17: invalid constant used : lcdlegacy
Fontconfig warning: "/etc/fonts/conf.d/53-monospace-lcd-filter.conf",  
line 17: invalid constant used : lcdlegacy
Fontconfig warning: "/etc/fonts/conf.d/53-monospace-lcd-filter.conf",  
line 17: invalid constant used : lcdlegacy

** Notepad should be running here. Interrupt it from the command line  
to have a look:

^C
Program received signal SIGINT, Interrupt.
0xf7fec430 in ?? ()
(gdb) bt
#0  0xf7fec430 in ?? ()
#1  0x00000008 in ?? ()
#2  0x7bc76516 in ?? ()
#3  [...]
(gdb) list
1	/*
2	 * Preloader for ld.so
3	 *
4	 * Copyright (C) [...]

As you see, listing appears to work in principle, while symbol lookup  
doesn't.

It's no secret Wine runs multiple processes and Windows applications  
run multiple threads, so you might want to look up how to handle this  
in gdb:

http://sources.redhat.com/gdb/current/onlinedocs/gdb_5.html

My tries to break not into the preloader, but the actual Windows  
application weren't successful so far, gdb's console appears to lock  
up somehow when setting follow-fork-mode & friends.


MarKus

- - - - - - - - - - - - - - - - - - -
Dipl. Ing. Markus Hitter
http://www.jump-ing.de/






From julliard at winehq.org  Thu Sep 11 06:25:52 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 11 Sep 2008 13:25:52 +0200
Subject: winemenubuilder: eliminate wineshelllink (try 3)
In-Reply-To: <9e89675b0809101257u5719db69p2c0723a4cde4d5@mail.gmail.com>
	(Damjan Jovanovic's message of "Wed, 10 Sep 2008 21:57:18 +0200")
References: <9e89675b0809101257u5719db69p2c0723a4cde4d5@mail.gmail.com>
Message-ID: <87vdx2x6tb.fsf@wine.dyndns.org>

"Damjan Jovanovic" <damjan.jov at gmail.com> writes:

> +    /* winemenubuilder_semaphore ensures mutual exclusion for the temp file */
> +    tempfilename = heap_printf("%s/next-wine-menu.temp", xdg_config_dir);

That's not good enough, the config dir is global to all Wine
instances. You really need safe temp file creation.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Thu Sep 11 06:27:48 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 11 Sep 2008 13:27:48 +0200
Subject: winex11.drv: Add support for _NET_WORKAREA
In-Reply-To: <E1Kde84-0003U9-Dy@mail.codeweavers.com> (Dmitry Timoshkov's
	message of "Thu, 11 Sep 2008 13:50:09 +0900")
References: <E1Kde84-0003U9-Dy@mail.codeweavers.com>
Message-ID: <87r67qx6q3.fsf@wine.dyndns.org>

Dmitry Timoshkov <dmitry at codeweavers.com> writes:

>      SetRect( &rect, 0, 0, width, height );
> +    rc_work = rect;
>  
> -    if (root_window != DefaultRootWindow( gdi_display ) || !query_screens())
> +    if (!XGetWindowProperty( gdi_display, DefaultRootWindow(gdi_display), x11drv_atom(_NET_WORKAREA), 0,
> +                             ~0, False, XA_CARDINAL, &type, &format, &count,
> +                             &remaining, (unsigned char **)&work_area ))
>      {
> -        default_monitor.rcWork = default_monitor.rcMonitor = rect;
> +        if (type == XA_CARDINAL && format == 32 && count >= 4)
> +        {
> +            SetRect( &rc_work, work_area[0], work_area[1],
> +                     work_area[0] + work_area[2], work_area[1] + work_area[3] );
> +        }
> +        XFree( work_area );
> +    }
> +
> +    if (root_window != DefaultRootWindow( gdi_display ) || !query_screens( &rc_work ))
> +    {
> +        default_monitor.rcMonitor = rect;
> +        default_monitor.rcWork = rc_work;

That won't do the right thing in desktop mode.

-- 
Alexandre Julliard
julliard at winehq.org


From marcus at rennboot.centrumbabylon.cz  Thu Sep 11 06:41:35 2008
From: marcus at rennboot.centrumbabylon.cz (Marcus Meissner)
Date: Thu, 11 Sep 2008 13:41:35 +0200
Subject: Debugging Wine thoughts
In-Reply-To: <25B7E582-04F4-4E85-B824-712B025EF027@jump-ing.de>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>
	<48C7B666.9060601@zacbrown.org>
	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>
	<002a01c9135a$6d3cb810$47b62830$@com>
	<25B7E582-04F4-4E85-B824-712B025EF027@jump-ing.de>
Message-ID: <20080911114135.GA20423@rennboot.centrumbabylon.cz>

On Thu, Sep 11, 2008 at 01:20:42PM +0200, Markus Hitter wrote:
> 
> Am 10.09.2008 um 17:32 schrieb Stefan D?singer:
> 
> > You can attach any debugger to a Win32 process running in Wine. This
> > includes Linux debuggers like gdb, [...]
> 
> As I didn't find hints on how to do this I tried myself:
> 
> ** First, start gdb in the C: directory
> 
> mah at piccard:/otherubuntu/home/mah/.wine/drive_c$ gdb
> GNU gdb 6.8-debian
> Copyright [...]
> This GDB was configured as "x86_64-linux-gnu".
> (gdb) file wine
> Reading symbols from /usr/local/bin/wine...done.
> (gdb) directory /otherubuntu/home/mah/wine/
> Source directories searched: /otherubuntu/home/mah/wine:$cdir:$cwd
> (gdb)
> 
> ** Then, run the app
> 
> (gdb) run windows/notepad.exe
> Starting program: /usr/local/bin/wine windows/notepad.exe
> [Thread debugging using libthread_db enabled]
> [New Thread 0xf7c628c0 (LWP 793)]
> [New Thread 0xf7c61b90 (LWP 796)]
> [Thread 0xf7c61b90 (LWP 796) exited]
> [New process 793]
> Executing new program: /usr/local/bin/wine-preloader
> warning: Cannot initialize thread debugging library: generic error
> warning: Cannot initialize thread debugging library: generic error
> [New process 793]
> Fontconfig warning: "/etc/fonts/conf.d/53-monospace-lcd-filter.conf",  
> line 17: invalid constant used : lcdlegacy
> Fontconfig warning: "/etc/fonts/conf.d/53-monospace-lcd-filter.conf",  
> line 17: invalid constant used : lcdlegacy
> Fontconfig warning: "/etc/fonts/conf.d/53-monospace-lcd-filter.conf",  
> line 17: invalid constant used : lcdlegacy
> 
> ** Notepad should be running here. Interrupt it from the command line  
> to have a look:
> 
> ^C
> Program received signal SIGINT, Interrupt.
> 0xf7fec430 in ?? ()
> (gdb) bt
> #0  0xf7fec430 in ?? ()
> #1  0x00000008 in ?? ()
> #2  0x7bc76516 in ?? ()
> #3  [...]
> (gdb) list
> 1	/*
> 2	 * Preloader for ld.so
> 3	 *
> 4	 * Copyright (C) [...]
> 
> As you see, listing appears to work in principle, while symbol lookup  
> doesn't.
> 
> It's no secret Wine runs multiple processes and Windows applications  
> run multiple threads, so you might want to look up how to handle this  
> in gdb:
> 
> http://sources.redhat.com/gdb/current/onlinedocs/gdb_5.html
> 
> My tries to break not into the preloader, but the actual Windows  
> application weren't successful so far, gdb's console appears to lock  
> up somehow when setting follow-fork-mode & friends.

Easy to do for most applications you use wine-pthread for debugging:

$ gdb wine-pthread
(gdb) break CreateWindowExW
Function "CreateWindowExW" not defined.
Make breakpoint pending on future shared library load? (y or [n]) y

Breakpoint 1 (CreateWindowExW) pending.
(gdb) r notepad.exe
Starting program: /usr/bin/wine-pthread notepad.exe
[Thread debugging using libthread_db enabled]
[New Thread 0xf7d106c0 (LWP 9202)]
[Switching to Thread 0xf7d106c0 (LWP 9202)]

Breakpoint 1, CreateWindowExW (exStyle=0, className=0x7fcf7c70, windowName=0x7fcf7c60, 
    style=13565952, x=1, y=2, width=729, height=546, parent=0x0, menu=0x0, instance=0x7fcf0000, 
    data=0x0) at win.c:1401
1401        cs.lpCreateParams = data;
(gdb) 

Ciao, Marcus


From dylan.ah.smith at gmail.com  Thu Sep 11 09:27:31 2008
From: dylan.ah.smith at gmail.com (Dylan Smith)
Date: Thu, 11 Sep 2008 10:27:31 -0400
Subject: richedit: Avoid acting on control words in skipped RTF groups
	(Bug 15227)
In-Reply-To: <5c6ee3b70809101954y525bf709ma274b87bf8c48f31@mail.gmail.com>
References: <5c6ee3b70809101954y525bf709ma274b87bf8c48f31@mail.gmail.com>
Message-ID: <5c6ee3b70809110727i214a6013x67ebde2a21c4a671@mail.gmail.com>

I noticed that this introduced a glitch, because I didn't have a destination
callback for the \nesttableprops control word.  This led to it being
ignored, so nested tables would take on default properties.

I will update this patch to fix this glitch and then resend it.

On Wed, Sep 10, 2008 at 10:54 PM, Dylan Smith <dylan.ah.smith at gmail.com>wrote:

> Previously the control words in skipped groups were being processed by
> the read hook on the RTF parser.  By moving this code into the class
> callbacks for the parser, the skipped groups actually remain skipped.
>
> An example of a skipped group is a optional destination that isn't
> recognized by the parser.  The RTF specifications say to ignore these
> groups, and native richedit controls act accordingly.
>
> This patch fixes bug 15227 which was caused by the \itap4 control word
> in a destination which caused an unterminated table, since this control
> word changes the nesting level by starting nested tables to reach that
> nesting level.
> ---
>  dlls/riched20/editor.c |   28 ++++++----------------------
>  dlls/riched20/editor.h |    6 ++++++
>  dlls/riched20/reader.c |    8 ++++++++
>  3 files changed, 20 insertions(+), 22 deletions(-)
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080911/787a971c/attachment.htm 

From dank at kegel.com  Thu Sep 11 09:39:04 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 11 Sep 2008 07:39:04 -0700
Subject: OT: linux market share trend data
Message-ID: <a71bd89a0809110739s253f63e5tc00bec690bd417fa@mail.gmail.com>

I finally threw together a summary of four sources of linux market
share data, see
http://kegel.com/linux/marketshare.html


From julliard at winehq.org  Thu Sep 11 09:50:36 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 11 Sep 2008 16:50:36 +0200
Subject: Size of SUBHEAP in heap.c
In-Reply-To: <20080910165257.181750@gmx.net> (Martin Profittlich's message of
	"Wed, 10 Sep 2008 18:52:57 +0200")
References: <20080910165257.181750@gmx.net>
Message-ID: <87r67qvirn.fsf@wine.dyndns.org>

"Martin Profittlich" <martin.profittlich at gmx.de> writes:

> Hello,
>
> when trying to fix an issue with Guitar Rig 3 on Wine (Bug 10129, "Guitar Rig 3 crashes"), I found out something odd: The crash is affected by the size of the SUBHEAP structure in dlls/ntdll/heap.c. Just by adding 8 unused bytes to SUBHEAP, GR3 does not crash anymore. Add another 8 bytes, GR3 crashes again, yet another 8 bytes - no crash and so on.
>
> The bug surfaced with this commit:
>
> [1d063ae18d990343fc077dcbf650add797924018]
> ntdll: Remove assumptions that the subheap is at the beginning of the memory block.
>
> I don't think the commit is the cause of the problem. It merely changed the size of SUBHEAP to a problematic value.
>
> I don't really understand the inner workings of heap.c. Does anyone have an idea what the cause might be, or where to look for more information?

Probably the app expects some heap block to be 16-byte aligned, and uses
MMX vector functions that crash on unaligned data. I guess you need to
figure out where the block comes from, and why it would always be
aligned on Windows. Maybe it's large enough that Windows allocates it
with VirtualAlloc or something like that.

-- 
Alexandre Julliard
julliard at winehq.org


From mah at jump-ing.de  Thu Sep 11 10:16:08 2008
From: mah at jump-ing.de (Markus Hitter)
Date: Thu, 11 Sep 2008 17:16:08 +0200
Subject: Debugging Wine thoughts
In-Reply-To: <20080911114135.GA20423@rennboot.centrumbabylon.cz>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>
	<48C7B666.9060601@zacbrown.org>
	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>
	<002a01c9135a$6d3cb810$47b62830$@com>
	<25B7E582-04F4-4E85-B824-712B025EF027@jump-ing.de>
	<20080911114135.GA20423@rennboot.centrumbabylon.cz>
Message-ID: <A2D766FD-E90D-427A-BCEF-02E7B19DE43C@jump-ing.de>


Am 11.09.2008 um 13:41 schrieb Marcus Meissner:

> $ gdb wine-pthread
> (gdb) break CreateWindowExW
> Function "CreateWindowExW" not defined.
> Make breakpoint pending on future shared library load? (y or [n]) y
>
> Breakpoint 1 (CreateWindowExW) pending.
> (gdb) r notepad.exe
> Starting program: /usr/bin/wine-pthread notepad.exe
> [Thread debugging using libthread_db enabled]
> [New Thread 0xf7d106c0 (LWP 9202)]
> [Switching to Thread 0xf7d106c0 (LWP 9202)]
>
> Breakpoint 1, CreateWindowExW (exStyle=0, className=0x7fcf7c70,  
> windowName=0x7fcf7c60,
>     style=13565952, x=1, y=2, width=729, height=546, parent=0x0,  
> menu=0x0, instance=0x7fcf0000,
>     data=0x0) at win.c:1401
> 1401        cs.lpCreateParams = data;
> (gdb)

That works great, thanks.


MarKus

- - - - - - - - - - - - - - - - - - -
Dipl. Ing. Markus Hitter
http://www.jump-ing.de/






From martin.profittlich at gmx.de  Thu Sep 11 11:18:11 2008
From: martin.profittlich at gmx.de (Martin Profittlich)
Date: Thu, 11 Sep 2008 18:18:11 +0200
Subject: Size of SUBHEAP in heap.c
In-Reply-To: <8CAE1896FA6DAB9-9C0-1209@WEBMAIL-MA17.sysops.aol.com>
References: <20080910165257.181750@gmx.net>
	<8CAE1896FA6DAB9-9C0-1209@WEBMAIL-MA17.sysops.aol.com>
Message-ID: <20080911161811.43740@gmx.net>

>  This sounds like a segment / Boundry issue... how far up does it repeat
> this action? or have you tried??? is it an even number of blocks that the
> error does not occur?

I tried this: I added DWORD reserved[N] to SUBHEAP and tested various values of N. Odd numbers trigger an assertion due to 8-byte alignment (or lack thereof). If N is 4 * x, then GR3 crashes. If N is 4 * x + 2, it does not crash. I tested this with the following values: 1 2 3 4 6 8 10 12 14 16 18 20 200 202 204 206 1020 1022 1024 1026. The sizeof (SUBHEAP) is 32 for N=0.

Martin
-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger


From tony.wasserka at freenet.de  Thu Sep 11 11:20:27 2008
From: tony.wasserka at freenet.de (Tony Wasserka)
Date: Thu, 11 Sep 2008 18:20:27 +0200
Subject: d3dx9_36: Fix the tests for native Windows.
In-Reply-To: <5f9140a20809110709x1273d0e4r28785a24efddf295@mail.gmail.com>
References: <5f9140a20809091055u3fbfb586u41391988bf5c0e93@mail.gmail.com>	
	<48C7F2EA.6040507@freenet.de> <1221079670.5830.24.camel@p4.lan>	
	<48C8C0DD.6060201@freenet.de>
	<5f9140a20809110709x1273d0e4r28785a24efddf295@mail.gmail.com>
Message-ID: <48C9454B.9010704@freenet.de>

Your latest patch is already doing it right, IMPORTS must be changed to 
d3dx9_36 and IMPORTLIB must stay d3dx9.

>
>
> any idea to fix this problem?
>
> David
>
> 2008/9/11 Tony Wasserka <tony.wasserka at freenet.de 
> <mailto:tony.wasserka at freenet.de>>
>
>
>         On Mi, 2008-09-10 at 18:16 +0200, Tony wrote:
>          
>
>             Hi,
>             At least for all Windows versions below Vista, the d3dx9
>             importlib does exist (and d3dx9_36 does not),
>                
>
>
>         I installed a recent dx9-runtime on my w2k test system, but a
>         d3dx9.dll
>         is not
>         present (d3dx9_36.dll exist).
>
>         I get always a blocking popup, when the testlist is created.
>
>
>          
>
>     You are speaking about the IMPORT d3dx9_36.dll.
>     I was talking about the IMPORTLIB which is called d3dx9.lib,
>     which is part of the DirectX SDK and used to compile d3dx9
>     applications, whereas the dll file is used to run them.
>
>



From martin.profittlich at gmx.de  Thu Sep 11 11:21:35 2008
From: martin.profittlich at gmx.de (Martin Profittlich)
Date: Thu, 11 Sep 2008 18:21:35 +0200
Subject: Size of SUBHEAP in heap.c
In-Reply-To: <1221077425.12534.55.camel@hermes2.karcher.local>
References: <20080910165257.181750@gmx.net>
	<1221077425.12534.55.camel@hermes2.karcher.local>
Message-ID: <20080911162135.43750@gmx.net>


Michael Karcher wrote:
> Have you tried to run with warn+heap? In that case, on each
> HeapAlloc/HeapFree, heap integrity will be checked. Also freed blocks
> are directly overwritten with dummy data. The behaviour of warn+heap
> might be insightful.

warn+heap does not produce any additional messages.

> The size-dependent behaviour might also indicate alignment issues: There
> are SSE instructions that insist on 16-byte alignment. If these are used
> and our size of SUBHEAP happens to make the data only 8-byte aligned,
> that might cause a crash, too.
> 
> In this particular case, I think the crash log does not really indicate
> an alignment problem, but a "x/i $eip" in winedbg on the crash might
> help to check further. I suspect a [edx-1] address while edx contains a
> NULL pointer.

x/i $eip does not show anything after the address.
x $eip shows 3004290f

Regards,
Martin
-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer


From martin.profittlich at gmx.de  Thu Sep 11 11:27:34 2008
From: martin.profittlich at gmx.de (Martin Profittlich)
Date: Thu, 11 Sep 2008 18:27:34 +0200
Subject: Size of SUBHEAP in heap.c
In-Reply-To: <87r67qvirn.fsf@wine.dyndns.org>
References: <20080910165257.181750@gmx.net> <87r67qvirn.fsf@wine.dyndns.org>
Message-ID: <20080911162734.43740@gmx.net>

Alexandre Julliard wrote:
> Probably the app expects some heap block to be 16-byte aligned, and uses
> MMX vector functions that crash on unaligned data. I guess you need to
> figure out where the block comes from, and why it would always be
> aligned on Windows. Maybe it's large enough that Windows allocates it
> with VirtualAlloc or something like that.

Any hints on how I would do that? I'm pretty new to this...

Regards,
Martin
-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer


From tony.wasserka at freenet.de  Thu Sep 11 11:50:00 2008
From: tony.wasserka at freenet.de (Tony Wasserka)
Date: Thu, 11 Sep 2008 18:50:00 +0200
Subject: d3dx9_36: Fix the tests for native Windows.
In-Reply-To: <5f9140a20809110709x1273d0e4r28785a24efddf295@mail.gmail.com>
References: <5f9140a20809091055u3fbfb586u41391988bf5c0e93@mail.gmail.com>	
	<48C7F2EA.6040507@freenet.de> <1221079670.5830.24.camel@p4.lan>	
	<48C8C0DD.6060201@freenet.de>
	<5f9140a20809110709x1273d0e4r28785a24efddf295@mail.gmail.com>
Message-ID: <48C94C38.8080905@freenet.de>

Ah wait, ignore my last answer to this email.
I misunderstood the way the IMPORTS var influences the make process.

I now see that it's actually the IMPORTS which are the libs, the 
executable gets linked with. (and not the dll it is run with like I 
though in the other mails)
However, I see no problem in the existing makefiles then, as linking 
with d3dx9 should work.
Can't help you with that though as I don't have a working Windows 
installation ATM though :-/



> Hi,
>
> any idea to fix this problem?
>
> David
>
> 2008/9/11 Tony Wasserka <tony.wasserka at freenet.de 
> <mailto:tony.wasserka at freenet.de>>
>
>
>         On Mi, 2008-09-10 at 18:16 +0200, Tony wrote:
>          
>
>             Hi,
>             At least for all Windows versions below Vista, the d3dx9
>             importlib does exist (and d3dx9_36 does not),
>                
>
>
>         I installed a recent dx9-runtime on my w2k test system, but a
>         d3dx9.dll
>         is not
>         present (d3dx9_36.dll exist).
>
>         I get always a blocking popup, when the testlist is created.
>
>
>          
>
>     You are speaking about the IMPORT d3dx9_36.dll.
>     I was talking about the IMPORTLIB which is called d3dx9.lib,
>     which is part of the DirectX SDK and used to compile d3dx9
>     applications, whereas the dll file is used to run them.
>
>



From dylan.ah.smith at gmail.com  Thu Sep 11 12:24:34 2008
From: dylan.ah.smith at gmail.com (Dylan Smith)
Date: Thu, 11 Sep 2008 13:24:34 -0400
Subject: richedit: Avoid acting on control words in skipped RTF groups
	(Bug 15227) [try 2]
In-Reply-To: <5c6ee3b70809110734h327cb386oa68f1ad136926a8@mail.gmail.com>
References: <5c6ee3b70809110734h327cb386oa68f1ad136926a8@mail.gmail.com>
Message-ID: <5c6ee3b70809111024v5104580ah7c390f53997383c8@mail.gmail.com>

It seems like I somehow missed the fact that patch was already accepted
on the first try, however I still ended up rebasing the patch against the
origin.

I'll resend it anyways, since the commit message needs to be changed.

On Thu, Sep 11, 2008 at 10:34 AM, Dylan Smith <dylan.ah.smith at gmail.com>wrote:

> Previously the control words in skipped groups were being processed by
> the read hook on the RTF parser.  By moving this code into the class
> callbacks for the parser, the skipped groups actually remain skipped.
>
> An example of a skipped group is a optional destination that isn't
> recognized by the parser.  The RTF specifications say to ignore these
> groups, and native richedit controls act accordingly.
>
> This patch fixes bug 15227 which was caused by the \itap4 control word
> in a destination which caused an unterminated table, since this control
> word changes the nesting level by starting nested tables to reach that
> nesting level.
>
> Changes for try 2:
> Added in a destination callback for nesttableprops to avoid it being
> ignored.  Otherwise this patch would cause a regression where the
> default table properties would be used for nested tables.
> ---
>  dlls/riched20/editor.c |    3 +++
>  dlls/riched20/reader.c |   10 ++++++++++
>  dlls/riched20/rtf.h    |    1 +
>  3 files changed, 14 insertions(+), 0 deletions(-)
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080911/e22b5116/attachment.htm 

From andrewfenn at gmail.com  Thu Sep 11 12:40:56 2008
From: andrewfenn at gmail.com (Andrew Fenn)
Date: Fri, 12 Sep 2008 00:40:56 +0700
Subject: xinput implementation
Message-ID: <b594ca9d0809111040w60f9c2e6uc50fd7f6a31dfb4d@mail.gmail.com>

Hi,

I was wondering how you were coming with your implementation of xinput1_3.dll ?

It sounds quite interesting although I would personally prefer the
wine implementation to be able to use all joysticks and not just Xbox
360 controllers. Perhaps another configuration screen could be added
to winecfg so that you can map your own joystick/joysticks controls to
the key codes that are returned by XInputGetKeystroke?

Regards,
Andrew


From wine at mkarcher.dialup.fu-berlin.de  Thu Sep 11 12:44:49 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Thu, 11 Sep 2008 19:44:49 +0200
Subject: Size of SUBHEAP in heap.c
In-Reply-To: <20080911162135.43750@gmx.net>
References: <20080910165257.181750@gmx.net>
	<1221077425.12534.55.camel@hermes2.karcher.local>
	<20080911162135.43750@gmx.net>
Message-ID: <1221155089.12534.128.camel@hermes2.karcher.local>

Am Donnerstag, den 11.09.2008, 18:21 +0200 schrieb Martin Profittlich:
> > In this particular case, I think the crash log does not really indicate
> > an alignment problem, but a "x/i $eip" in winedbg on the crash might
> > help to check further. I suspect a [edx-1] address while edx contains a
> > NULL pointer.
> x/i $eip does not show anything after the address.
Seems like winedbg dislikes SSE2.

> x $eip shows 3004290f
Thats
  movapd [esi+eax],xmm0
if my table-lookup-skills did not fool me. movapd is an instruction that
needs the memory address 16 byte aligned. eax is 0x00040000 (2^18) [from
1], probably some kind of index into a buffer, whereas esi is 0x6d50028.
Is the size of SUBHEAP 0x28 by any chance? Then esi is a pointer to a
block allocated in a fresh heap rooted at 0x6d50000.

So you should find out where the HeapAlloc call was issued from that
returned 0x6d50028. If it was from a wine dll, that dll might need to be
fixed to ensure more strict alignment (might be some kind of audio
buffer in dsound stuff); if it is directly from guitar rig, wine has to
implement the needed alignment in its ntdll implementation.

[1]: http://bugs.winehq.org/attachment.cgi?id=8706



From thunderbird2k at gmx.net  Thu Sep 11 13:35:13 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Thu, 11 Sep 2008 20:35:13 +0200
Subject: Wine mouse input: Fwd: [RFC] Preliminary XI 2 feature list
In-Reply-To: <48C844AB.3020800@kievinfo.com>
References: <20080908205450.223680@gmx.net> <48C844AB.3020800@kievinfo.com>
Message-ID: <20080911183513.72440@gmx.net>

Hi Vitaliy,

For the record here another reply but this time from Peter Hutterer the guy who wrote the XI 2 specification. Is this all enough for Wine?

Roderick

On Thu, Sep 11, 2008 at 09:29:45AM +0200, Roderick Colenbrander wrote:
> I'm still not clear which one will provide the exact events from the device?
> Relative events doesn't mean the device events. If this is pointer events,
> then it won't help. Pointer gets stuck on the border of the screen. But not
> mouse/trackball.

This is the reason why relative events will be separate from standard events
as they won't be affected by clipping. 

> Also it would be nice to have a way to completely stop pointer from moving.
> Right now it's impossible, even with Xevie which was supposed to add exactly
> that.

Grabbing an attached SD temporarily detaches it from the MD. Alternatively,
you could explicitly detach it. Either way, the visible representation of the
cursor ceases to move (from this device anyway, other attached ones may still
change the cursor position).

Cheers,
  Peter
-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer


From andrewfenn at gmail.com  Thu Sep 11 15:13:00 2008
From: andrewfenn at gmail.com (Andrew Fenn)
Date: Fri, 12 Sep 2008 03:13:00 +0700
Subject: xinput implementation
In-Reply-To: <374283970809111104l17a9bea2h12c91bbb6ea0c795@mail.gmail.com>
References: <b594ca9d0809111040w60f9c2e6uc50fd7f6a31dfb4d@mail.gmail.com>
	<374283970809111104l17a9bea2h12c91bbb6ea0c795@mail.gmail.com>
Message-ID: <b594ca9d0809111313k4d27436cr79dc55bceb757136@mail.gmail.com>

On Fri, Sep 12, 2008 at 1:04 AM, chourmovs vs <chourmovs at gmail.com> wrote:
> No sorry
> No time and no skill for that, but maybe i could help doing some tests
>

In that case I will have a try at implementing it. Can someone have a
look at this patch I made and offer any advice on where I may be going
wrong (incorrect syntax, etc).

This patch lets me load Assassin's Creed without complaining about
missing the native dll (it's a start I guess), problem is that
Assassin's Creed is so slow it's impossible to use for testing with a
joystick.

Regards,
Andrew
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-Started-on-implementing-xinput-for-joystick-support.patch
Type: text/x-diff
Size: 6163 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080912/a974426d/attachment.patch 

From juan.lang at gmail.com  Thu Sep 11 15:30:07 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 11 Sep 2008 13:30:07 -0700
Subject: Buffer overrun in dlls/riched20/editor.c
Message-ID: <3a768c550809111330j2ff77b39ibc90d662dc234e3b@mail.gmail.com>

Hi Dylan, commit 11c80396995065701205f2facb3dba10a6f8170f[1]
introduced a buffer overrun in riched20's editor.c.  Here's the hunk
that did it:

@@ -666,35 +661,83 @@ static void ME_RTFParAttrHook(RTF_Info *info)

 static void ME_RTFTblAttrHook(RTF_Info *info)
 {
-  ME_DisplayItem *para;
-
   switch (info->rtfMinor)
   {
     case rtfRowDef:
-      RTFFlushOutputBuffer(info);
-      para = ME_GetParagraph(info->editor->pCursors[0].pRun);
-
-      /* Release possibly inherited cell definitions */
-      ME_DestroyTableCellList(para);
-
-      para->member.para.pCells = ALLOC_OBJ(ME_TableCell);
-      para->member.para.pCells->nRightBoundary = 0;
-      para->member.para.pCells->next = NULL;
-      para->member.para.pLastCell = para->member.para.pCells;
+      if (!info->tableDef)
+        info->tableDef = ALLOC_OBJ(RTFTable);
+      ZeroMemory(info->tableDef, sizeof(RTFTable));
       break;
     case rtfCellPos:
+      if (!info->tableDef)
+      {
+        info->tableDef = ALLOC_OBJ(RTFTable);
+        ZeroMemory(info->tableDef, sizeof(RTFTable));
+      }
+      if (info->tableDef->numCellsDefined >= MAX_TABLE_CELLS)
+        break;
+      info->tableDef->cells[info->tableDef->numCellsDefined].rightBoundary
= info->rtfParam;
+      {
+        /* Tab stops store the cell positions. */
+        ME_DisplayItem *para = ME_GetParagraph(info->editor->pCursors[0].pRun);
+        PARAFORMAT2 *pFmt = para->member.para.pFmt;
+        int cellNum = info->tableDef->numCellsDefined;
+        pFmt->rgxTabs[cellNum] &= ~0x00FFFFFF;
+        pFmt->rgxTabs[cellNum] = 0x00FFFFFF & info->rtfParam;
The trouble is, numCellsDefined is only guaranteed to be less than
MAX_TABLE_CELLS (defined as 63 in include/richedit.h), while rgxTabs
is of size MAX_TAB_STOPS, or 32.

I'm not sure what the correct fix is.  Would you mind having a look?
For what it's worth, this is Coverity id 727.

Thanks,
--Juan

1: http://source.winehq.org/git/wine.git/?a=commit;h=11c80396995065701205f2facb3dba10a6f8170f


From juan.lang at gmail.com  Thu Sep 11 15:30:11 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 11 Sep 2008 13:30:11 -0700
Subject: Buffer overrun in dlls/riched20/editor.c
Message-ID: <3a768c550809111330r10d6a574u8a9ab0d5564afbaf@mail.gmail.com>

Hi Dylan, commit 11c80396995065701205f2facb3dba10a6f8170f[1]
introduced a buffer overrun in riched20's editor.c.  Here's the hunk
that did it:

@@ -666,35 +661,83 @@ static void ME_RTFParAttrHook(RTF_Info *info)

 static void ME_RTFTblAttrHook(RTF_Info *info)
 {
-  ME_DisplayItem *para;
-
   switch (info->rtfMinor)
   {
     case rtfRowDef:
-      RTFFlushOutputBuffer(info);
-      para = ME_GetParagraph(info->editor->pCursors[0].pRun);
-
-      /* Release possibly inherited cell definitions */
-      ME_DestroyTableCellList(para);
-
-      para->member.para.pCells = ALLOC_OBJ(ME_TableCell);
-      para->member.para.pCells->nRightBoundary = 0;
-      para->member.para.pCells->next = NULL;
-      para->member.para.pLastCell = para->member.para.pCells;
+      if (!info->tableDef)
+        info->tableDef = ALLOC_OBJ(RTFTable);
+      ZeroMemory(info->tableDef, sizeof(RTFTable));
       break;
     case rtfCellPos:
+      if (!info->tableDef)
+      {
+        info->tableDef = ALLOC_OBJ(RTFTable);
+        ZeroMemory(info->tableDef, sizeof(RTFTable));
+      }
+      if (info->tableDef->numCellsDefined >= MAX_TABLE_CELLS)
+        break;
+      info->tableDef->cells[info->tableDef->numCellsDefined].rightBoundary
= info->rtfParam;
+      {
+        /* Tab stops store the cell positions. */
+        ME_DisplayItem *para = ME_GetParagraph(info->editor->pCursors[0].pRun);
+        PARAFORMAT2 *pFmt = para->member.para.pFmt;
+        int cellNum = info->tableDef->numCellsDefined;
+        pFmt->rgxTabs[cellNum] &= ~0x00FFFFFF;
+        pFmt->rgxTabs[cellNum] = 0x00FFFFFF & info->rtfParam;
The trouble is, numCellsDefined is only guaranteed to be less than
MAX_TABLE_CELLS (defined as 63 in include/richedit.h), while rgxTabs
is of size MAX_TAB_STOPS, or 32.

I'm not sure what the correct fix is.  Would you mind having a look?
For what it's worth, this is Coverity id 727.

Thanks,
--Juan

1: http://source.winehq.org/git/wine.git/?a=commit;h=11c80396995065701205f2facb3dba10a6f8170f


From hverbeet at gmail.com  Thu Sep 11 16:19:18 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Thu, 11 Sep 2008 23:19:18 +0200
Subject: Patchwatcher: patchwatcher bug: Try number 2 drawprim.c
	drawStridedSlow
In-Reply-To: <48C988B6.3020404@aol.com>
References: <E1Kdsur-0008SH-HK@super> <48C988B6.3020404@aol.com>
Message-ID: <d658b69e0809111419tb7ee963g5a2ddd1b8f9d6e66@mail.gmail.com>

2008/9/11 Chris Ahrendt <celticht32 at aol.com>:
> Ok what now.... I did a git to get the latest tree... I generated the
> patch off the latest tree.. and submitted it again... what I am failing.
> so I can fix it =).. the code compiles just fine and runs on my machine
> so not sure...
>
> chris
>
The patch is not against current git, it's against an earlier version
of your patch.

More importantly though, the patch is completely unacceptable. You
really need to try to get a better understanding of how D3D vertex
declarations work, and what the different D3DDECLTYPE values mean.


From celticht32 at aol.com  Thu Sep 11 16:22:16 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Thu, 11 Sep 2008 17:22:16 -0400
Subject: Patchwatcher: patchwatcher bug: Try number 2 drawprim.c
	drawStridedSlow
In-Reply-To: <d658b69e0809111419tb7ee963g5a2ddd1b8f9d6e66@mail.gmail.com>
References: <E1Kdsur-0008SH-HK@super> <48C988B6.3020404@aol.com>
	<d658b69e0809111419tb7ee963g5a2ddd1b8f9d6e66@mail.gmail.com>
Message-ID: <48C98C08.7060002@aol.com>

Henri Verbeet wrote:
> 2008/9/11 Chris Ahrendt <celticht32 at aol.com>:
>> Ok what now.... I did a git to get the latest tree... I generated the
>> patch off the latest tree.. and submitted it again... what I am failing.
>> so I can fix it =).. the code compiles just fine and runs on my machine
>> so not sure...
>>
>> chris
>>
> The patch is not against current git, it's against an earlier version
> of your patch.
> 
> More importantly though, the patch is completely unacceptable. You
> really need to try to get a better understanding of how D3D vertex
> declarations work, and what the different D3DDECLTYPE values mean.

Henri,

Actually it was based on the current Git tree not a back level.... but 
will try and do a merge to see if there is an issue...

I disagree on your comment... I am following the MSDN definition of what 
the function does.  I do know what they mean I have been discussing 
these with stefan.


Chris



From dylan.ah.smith at gmail.com  Thu Sep 11 16:29:14 2008
From: dylan.ah.smith at gmail.com (Dylan Smith)
Date: Thu, 11 Sep 2008 17:29:14 -0400
Subject: Buffer overrun in dlls/riched20/editor.c
In-Reply-To: <3a768c550809111330r10d6a574u8a9ab0d5564afbaf@mail.gmail.com>
References: <3a768c550809111330r10d6a574u8a9ab0d5564afbaf@mail.gmail.com>
Message-ID: <5c6ee3b70809111429s6abf2a3ai2d39e23b12174887@mail.gmail.com>

On Thu, Sep 11, 2008 at 4:30 PM, Juan Lang <juan.lang at gmail.com> wrote:

> Hi Dylan, commit 11c80396995065701205f2facb3dba10a6f8170f[1]
> introduced a buffer overrun in riched20's editor.c.
>

Thanks for pointing out the problem.

I sent a patch to wine-patches that fixes the problem.

http://www.winehq.org/pipermail/wine-patches/2008-September/061453.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080911/d78753ca/attachment.htm 

From kai.blin at gmail.com  Thu Sep 11 16:47:54 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Thu, 11 Sep 2008 23:47:54 +0200
Subject: dplayx: Fix static overrun of pDP array in test. (Coverity)
In-Reply-To: <82e274890809111150m4e6be2b5ic4633104e9b66eec@mail.gmail.com>
References: <200809101058.52630.kai.blin@gmail.com>
	<82e274890809111150m4e6be2b5ic4633104e9b66eec@mail.gmail.com>
Message-ID: <200809112348.07005.kai.blin@gmail.com>

On Thursday 11 September 2008 20:50:58 Ismael Barros wrote:
> On 9/10/08, Kai Blin <kai.blin at gmail.com> wrote:
> > ---
> >  dlls/dplayx/tests/dplayx.c |    2 +-
> >  1 files changed, 1 insertions(+), 1 deletions(-)
>
> Sorry for the delay, I should have checked this before. I hadn't even
> read the coverity thread.
>
> The patch is incorrect, because EnumSessions_cb_join always receives a
> LPDIRECTPLAY4 as lpContext argument, even if most callbacks receive a
> lpCallbackData. The initialization of callbackData before the call was
> an error on my side.
>
> This patch fixes the double error.

Just the reason why I cc'ed you on this patch. :)

Thanks,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080911/d1b35a93/attachment.pgp 

From hverbeet at gmail.com  Thu Sep 11 17:01:14 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 12 Sep 2008 00:01:14 +0200
Subject: Patchwatcher: patchwatcher bug: Try number 2 drawprim.c
	drawStridedSlow
In-Reply-To: <48C98C08.7060002@aol.com>
References: <E1Kdsur-0008SH-HK@super> <48C988B6.3020404@aol.com>
	<d658b69e0809111419tb7ee963g5a2ddd1b8f9d6e66@mail.gmail.com>
	<48C98C08.7060002@aol.com>
Message-ID: <d658b69e0809111501n3ee4778elac0fb057bf14cbe5@mail.gmail.com>

2008/9/11 Chris Ahrendt <celticht32 at aol.com>:
> Henri Verbeet wrote:
>>
>> 2008/9/11 Chris Ahrendt <celticht32 at aol.com>:
>>>
>>> Ok what now.... I did a git to get the latest tree... I generated the
>>> patch off the latest tree.. and submitted it again... what I am failing.
>>> so I can fix it =).. the code compiles just fine and runs on my machine
>>> so not sure...
>>>
>>> chris
>>>
>> The patch is not against current git, it's against an earlier version
>> of your patch.
>>
>> More importantly though, the patch is completely unacceptable. You
>> really need to try to get a better understanding of how D3D vertex
>> declarations work, and what the different D3DDECLTYPE values mean.
>
> Henri,
>
> Actually it was based on the current Git tree not a back level.... but will
> try and do a merge to see if there is an issue...
>

Current git:
 449                     /* The coords to supply depend completely on
the fvf / vertex shader */
 450                     switch (coordsToUse) {
 451                     case 4: q = ptrToCoords[3]; /* drop through */
 452                     case 3: r = ptrToCoords[2]; /* drop through */
 453                     case 2: t = ptrToCoords[1]; /* drop through */
 454                     case 1: s = ptrToCoords[0];
 455                     }

Your patch:
>                     switch (coordsToUse) {
>-                    case 16:
>-                    case 15:
>-                    case 14:
>+                    case 17:
>                     case 13:
>-                    case 12:

Where do you see those lines you're removing in current git?

> I disagree on your comment... I am following the MSDN definition of what the
> function does.  I do know what they mean I have been discussing these with
> stefan.
>
Well, proof me wrong then:
Did you test on a native Windows system if the code should behave the
way you think it should? Why are you creating a switch statement based
on numeric constants instead of the appropriate enum values? Do you
understand what, for example, D3DDECLTYPE_UBYTE4N means? What is the
size of a D3DDECLTYPE_UBYTE4N element? What is the range of a
component of a D3DDECLTYPE_UBYTE4N element? What is the size of a
float? What is it's range? What are the implications of all that for
using ptrToCoords, which is a float pointer, for D3DDECLTYPE_UBYTE4N
in combination with glMultiTexCoord4fARB(), which expects four
normalized floating point values? How is all this handled for the
other attributes, like diffuse, specular, normal and position? How
does drawStridedSlowVs() handle this? What about
drawStridedInstanced()?


From hverbeet at gmail.com  Thu Sep 11 17:28:29 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 12 Sep 2008 00:28:29 +0200
Subject: d3dx8 [patch 1/2]: Implement D3DXGetFVFVertexSize
In-Reply-To: <5f9140a20809111345j3ede6569kb2c5140063de71ea@mail.gmail.com>
References: <5f9140a20809111345j3ede6569kb2c5140063de71ea@mail.gmail.com>
Message-ID: <d658b69e0809111528l568714d6y4e96aa5a9b8a14e6@mail.gmail.com>

> +    switch (FVF & 0xe)
You should use D3DFVF_POSITION_MASK instead of 0xe here.

> +    texture = FVF >> 16;
> +
> +    for (i = 0; i < ((FVF&D3DFVF_TEXCOUNT_MASK) >> D3DFVF_TEXCOUNT_SHIFT); i++)
> +    {
> +     switch (texture & 3)
> +     {
> +      case D3DFVF_TEXTUREFORMAT1:
> +           size = size + sizeof(FLOAT);
> +           break;
> +      case D3DFVF_TEXTUREFORMAT2:
> +           size = size + sizeof(FLOAT) * 2;
> +           break;
> +      case D3DFVF_TEXTUREFORMAT3:
> +           size = size + sizeof(FLOAT) * 3;
> +           break;
> +      case D3DFVF_TEXTUREFORMAT4:
> +           size = size + sizeof(FLOAT) * 4;
> +           break;
> +      default:
> +           break;
> +      }
> +      texture = texture >> 2;
> +    }
It's not completely obvious where you get the different shifts and
masks here, a comment wouldn't hurt.


From hverbeet at gmail.com  Thu Sep 11 17:53:09 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 12 Sep 2008 00:53:09 +0200
Subject: xinput implementation
In-Reply-To: <b594ca9d0809111313k4d27436cr79dc55bceb757136@mail.gmail.com>
References: <b594ca9d0809111040w60f9c2e6uc50fd7f6a31dfb4d@mail.gmail.com>
	<374283970809111104l17a9bea2h12c91bbb6ea0c795@mail.gmail.com>
	<b594ca9d0809111313k4d27436cr79dc55bceb757136@mail.gmail.com>
Message-ID: <d658b69e0809111553q17bca26di7c26d3f40abfd0c1@mail.gmail.com>

2008/9/11 Andrew Fenn <andrewfenn at gmail.com>:
> In that case I will have a try at implementing it. Can someone have a
> look at this patch I made and offer any advice on where I may be going
> wrong (incorrect syntax, etc).
>
The directory should be called after the dll. Ie, xinput1_3 instead of
xinput. You also don't generally want to submit changes to
autogenerated files like configure or dlls/Makefile.in, although IIRC
they will just be ignored.


From wine-devel at kievinfo.com  Thu Sep 11 20:11:44 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Thu, 11 Sep 2008 19:11:44 -0600
Subject: Wine mouse input: Fwd: [RFC] Preliminary XI 2 feature list
In-Reply-To: <20080911183513.72440@gmx.net>
References: <20080908205450.223680@gmx.net> <48C844AB.3020800@kievinfo.com>
	<20080911183513.72440@gmx.net>
Message-ID: <48C9C1D0.4030808@kievinfo.com>

Roderick Colenbrander wrote:
> Hi Vitaliy,
> 
> For the record here another reply but this time from Peter Hutterer the guy who wrote the XI 2 specification. Is this all enough for Wine?
> 
> Roderick
> 
> On Thu, Sep 11, 2008 at 09:29:45AM +0200, Roderick Colenbrander wrote:
>> I'm still not clear which one will provide the exact events from the device?
>> Relative events doesn't mean the device events. If this is pointer events,
>> then it won't help. Pointer gets stuck on the border of the screen. But not
>> mouse/trackball.
> 
> This is the reason why relative events will be separate from standard events
> as they won't be affected by clipping. 
> 
>> Also it would be nice to have a way to completely stop pointer from moving.
>> Right now it's impossible, even with Xevie which was supposed to add exactly
>> that.
> 
> Grabbing an attached SD temporarily detaches it from the MD. Alternatively,
> you could explicitly detach it. Either way, the visible representation of the
> cursor ceases to move (from this device anyway, other attached ones may still
> change the cursor position).
> 

Thanks Roderick. This does sounds like enough for what needed for direct input.

Vitaliy.


From wine-devel at kievinfo.com  Thu Sep 11 20:20:29 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Thu, 11 Sep 2008 19:20:29 -0600
Subject: Drawprim.c  patchwatcher failure
In-Reply-To: <48C8BAA2.9050102@aol.com>
References: <a71bd89a0809071725o164708cekf07f081c2544d658@mail.gmail.com>	<48C8B8B3.9040302@aol.com>	<EB9D0A81BA984F8B946B3ABFC311AE76@DMITRY>
	<48C8BAA2.9050102@aol.com>
Message-ID: <48C9C3DD.404@kievinfo.com>

Chris Ahrendt wrote:
> Dmitry Timoshkov wrote:
>> "Chris Ahrendt" <celticht32 at aol.com> wrote:
>>
>>> patching file dlls/wined3d/drawprim.c
>>> Hunk #2 FAILED at 448.
>>> 1 out of 2 hunks FAILED -- saving rejects to file 
>>> dlls/wined3d/drawprim.c.rej
>>>
>>>>
>>> Dan what does this mean on a patch I submitted tonight????
>> That means that the source you have used to generate the patch
>> doesn't match what patch watcher uses (latest git).
>>
>>> How do I fix it?
>> Update to current git and regenerate the patch:
>>
> The thing is I just did a refresh and it said I was up to date...
> 
> I guess wait till tomorrow morning and submit it then
> 

The proper way to do it is:
git fetch
git rebase origin

For more information on how to use git see http://wiki.winehq.org/GitWine
and of course git's manual.

Vitaliy.


From celticht32 at aol.com  Thu Sep 11 20:23:54 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Thu, 11 Sep 2008 21:23:54 -0400
Subject: Patchwatcher: patchwatcher bug: Try number 2 drawprim.c
	drawStridedSlow
In-Reply-To: <d658b69e0809111501n3ee4778elac0fb057bf14cbe5@mail.gmail.com>
References: <E1Kdsur-0008SH-HK@super> <48C988B6.3020404@aol.com>	
	<d658b69e0809111419tb7ee963g5a2ddd1b8f9d6e66@mail.gmail.com>	
	<48C98C08.7060002@aol.com>
	<d658b69e0809111501n3ee4778elac0fb057bf14cbe5@mail.gmail.com>
Message-ID: <48C9C4AA.7060107@aol.com>

Henri Verbeet wrote:
> 2008/9/11 Chris Ahrendt <celticht32 at aol.com>:
>> Henri Verbeet wrote:
>>> 2008/9/11 Chris Ahrendt <celticht32 at aol.com>:
>>>> Ok what now.... I did a git to get the latest tree... I generated the
>>>> patch off the latest tree.. and submitted it again... what I am failing.
>>>> so I can fix it =).. the code compiles just fine and runs on my machine
>>>> so not sure...
>>>>
>>>> chris
>>>>
>>> The patch is not against current git, it's against an earlier version
>>> of your patch.
>>>
>>> More importantly though, the patch is completely unacceptable. You
>>> really need to try to get a better understanding of how D3D vertex
>>> declarations work, and what the different D3DDECLTYPE values mean.
>> Henri,
>>
>> Actually it was based on the current Git tree not a back level.... but will
>> try and do a merge to see if there is an issue...
>>
> 
> Current git:
>  449                     /* The coords to supply depend completely on
> the fvf / vertex shader */
>  450                     switch (coordsToUse) {
>  451                     case 4: q = ptrToCoords[3]; /* drop through */
>  452                     case 3: r = ptrToCoords[2]; /* drop through */
>  453                     case 2: t = ptrToCoords[1]; /* drop through */
>  454                     case 1: s = ptrToCoords[0];
>  455                     }
> 
> Your patch:
>>                     switch (coordsToUse) {
>> -                    case 16:
>> -                    case 15:
>> -                    case 14:
>> +                    case 17:
>>                     case 13:
>> -                    case 12:
> 
> Where do you see those lines you're removing in current git?
> 
>> I disagree on your comment... I am following the MSDN definition of what the
>> function does.  I do know what they mean I have been discussing these with
>> stefan.
>>
> Well, proof me wrong then:
> Did you test on a native Windows system if the code should behave the
> way you think it should? Why are you creating a switch statement based
> on numeric constants instead of the appropriate enum values? Do you
> understand what, for example, D3DDECLTYPE_UBYTE4N means? What is the
> size of a D3DDECLTYPE_UBYTE4N element? What is the range of a
> component of a D3DDECLTYPE_UBYTE4N element? What is the size of a
> float? What is it's range? What are the implications of all that for
> using ptrToCoords, which is a float pointer, for D3DDECLTYPE_UBYTE4N
> in combination with glMultiTexCoord4fARB(), which expects four
> normalized floating point values? How is all this handled for the
> other attributes, like diffuse, specular, normal and position? How
> does drawStridedSlowVs() handle this? What about
> drawStridedInstanced()?
Because the original code was set up with the numbers originally..
If you look at any of the pre say 1.1.3 code you will see only the
switch code with 4 - 1 in it.. and nothing more...
to get rid of an error I was getting in an application which was sending 
  a 7 for coordstouse which is a valid value (its a 6 the code adds 1 to 
it for some odd reason so I followed the present convention as last time 
I cleaned something up and did it with #defines or moved code I was told 
to leave it as it is if I see it that way).
I know the various types... I put the comment in there and was telling
stefan what they were so I am aware of it... however it does not seem to 
make a difference if its float or short). The values are not normalized 
in the code but by the application and passed into the call.

That I do not know how they are handled in other places...   the code 
was really simple when I started working with it to clear what I 
submitted up...


Chris


From celticht32 at aol.com  Thu Sep 11 20:34:03 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Thu, 11 Sep 2008 21:34:03 -0400
Subject: Drawprim.c  patchwatcher failure
In-Reply-To: <48C9C3DD.404@kievinfo.com>
References: <a71bd89a0809071725o164708cekf07f081c2544d658@mail.gmail.com>	<48C8B8B3.9040302@aol.com>	<EB9D0A81BA984F8B946B3ABFC311AE76@DMITRY>
	<48C8BAA2.9050102@aol.com> <48C9C3DD.404@kievinfo.com>
Message-ID: <48C9C70B.1010102@aol.com>

Vitaliy Margolen wrote:
> Chris Ahrendt wrote:
>> Dmitry Timoshkov wrote:
>>> "Chris Ahrendt" <celticht32 at aol.com> wrote:
>>>
>>>> patching file dlls/wined3d/drawprim.c
>>>> Hunk #2 FAILED at 448.
>>>> 1 out of 2 hunks FAILED -- saving rejects to file 
>>>> dlls/wined3d/drawprim.c.rej
>>>>
>>>> Dan what does this mean on a patch I submitted tonight????
>>> That means that the source you have used to generate the patch
>>> doesn't match what patch watcher uses (latest git).
>>>
>>>> How do I fix it?
>>> Update to current git and regenerate the patch:
>>>
>> The thing is I just did a refresh and it said I was up to date...
>>
>> I guess wait till tomorrow morning and submit it then
>>
> 
> The proper way to do it is:
> git fetch
> git rebase origin
> 
> For more information on how to use git see http://wiki.winehq.org/GitWine
> and of course git's manual.
> 
> Vitaliy.
Did that before I submitted it..

chris


From wine-devel at kievinfo.com  Thu Sep 11 20:38:44 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Thu, 11 Sep 2008 19:38:44 -0600
Subject: xinput implementation
In-Reply-To: <d658b69e0809111553q17bca26di7c26d3f40abfd0c1@mail.gmail.com>
References: <b594ca9d0809111040w60f9c2e6uc50fd7f6a31dfb4d@mail.gmail.com>	<374283970809111104l17a9bea2h12c91bbb6ea0c795@mail.gmail.com>	<b594ca9d0809111313k4d27436cr79dc55bceb757136@mail.gmail.com>
	<d658b69e0809111553q17bca26di7c26d3f40abfd0c1@mail.gmail.com>
Message-ID: <48C9C824.9000908@kievinfo.com>

Henri Verbeet wrote:
> 2008/9/11 Andrew Fenn <andrewfenn at gmail.com>:
>> In that case I will have a try at implementing it. Can someone have a
>> look at this patch I made and offer any advice on where I may be going
>> wrong (incorrect syntax, etc).
>>
> The directory should be called after the dll. Ie, xinput1_3 instead of
> xinput. You also don't generally want to submit changes to
> autogenerated files like configure or dlls/Makefile.in, although IIRC
> they will just be ignored.
> 
> 

But you need to submit changes to files that these auto-generated files are
 created from. In this case configure.ac

I will add that you need to create a proper DllMain() function. See any
other stab dlls for examples.

Makefiles please use tabs and set your tab size to 8 spaces.

Why do you need libxinput? xinput is a standard dll.

Vitaliy.


From stefan at codeweavers.com  Thu Sep 11 23:15:11 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Thu, 11 Sep 2008 23:15:11 -0500
Subject: Patchwatcher: patchwatcher bug: Try number 2
	drawprim.c	drawStridedSlow
In-Reply-To: <48C9C4AA.7060107@aol.com>
References: <E1Kdsur-0008SH-HK@super>
	<48C988B6.3020404@aol.com>		<d658b69e0809111419tb7ee963g5a2ddd1b8f9d6e66@mail.gmail.com>		<48C98C08.7060002@aol.com>	<d658b69e0809111501n3ee4778elac0fb057bf14cbe5@mail.gmail.com>
	<48C9C4AA.7060107@aol.com>
Message-ID: <00ff01c9148e$264d1ff0$72e75fd0$@com>

> Because the original code was set up with the numbers originally..
And this is wrong. So the original code is wrong here. The assumption the
code makes just happens to work for FLOAT1 to FLOAT4 D3DDECL types, and not
for higher ones




From hverbeet at gmail.com  Fri Sep 12 02:38:48 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 12 Sep 2008 09:38:48 +0200
Subject: xinput implementation
In-Reply-To: <48C9C824.9000908@kievinfo.com>
References: <b594ca9d0809111040w60f9c2e6uc50fd7f6a31dfb4d@mail.gmail.com>
	<374283970809111104l17a9bea2h12c91bbb6ea0c795@mail.gmail.com>
	<b594ca9d0809111313k4d27436cr79dc55bceb757136@mail.gmail.com>
	<d658b69e0809111553q17bca26di7c26d3f40abfd0c1@mail.gmail.com>
	<48C9C824.9000908@kievinfo.com>
Message-ID: <d658b69e0809120038k177ba344t50e7236a75e31022@mail.gmail.com>

2008/9/12 Vitaliy Margolen <wine-devel at kievinfo.com>:
> But you need to submit changes to files that these auto-generated files are
>  created from. In this case configure.ac
>
This is actually all autogenerated by tools/make_makefiles from git.

> Why do you need libxinput? xinput is a standard dll.
>
The input library for xinput1_3.dll is called xinput.lib


From mstefani at redhat.com  Fri Sep 12 03:38:57 2008
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Fri, 12 Sep 2008 10:38:57 +0200
Subject: Drawprim.c  patchwatcher failure
In-Reply-To: <48C9C3DD.404@kievinfo.com>
References: <a71bd89a0809071725o164708cekf07f081c2544d658@mail.gmail.com>	<48C8B8B3.9040302@aol.com>	<EB9D0A81BA984F8B946B3ABFC311AE76@DMITRY>	<48C8BAA2.9050102@aol.com>
	<48C9C3DD.404@kievinfo.com>
Message-ID: <48CA2AA1.4080004@redhat.com>

Vitaliy Margolen wrote:
> Chris Ahrendt wrote:
>> Dmitry Timoshkov wrote:
>>> "Chris Ahrendt" <celticht32 at aol.com> wrote:
>>>> How do I fix it?
>>> Update to current git and regenerate the patch:
>>>
>> The thing is I just did a refresh and it said I was up to date...
>>
>> I guess wait till tomorrow morning and submit it then
>>
> 
> The proper way to do it is:
> git fetch
> git rebase origin
Or in one line
git pull --rebase
If that's your normal operation mode than configuring your branch
(assuming the "master" branch here) correctly will save typing work:
git config branch.master.remote origin
git config branch.master.merge refs/heads/master
git config branch.master.rebase true
After that "git pull" will be enough to do the right thing.

> For more information on how to use git see http://wiki.winehq.org/GitWine
Ugh! That page is in serious need of a cleanup as it didn't keep up with
the UI advances of git. E.g. "3.5. Editing commits" can be shortened to
"git commit --ammend" and "git rebase -i".
I'll look if I find some time over the weekend to go over it and fix it.

> and of course git's manual.

bye
	michael


From julliard at winehq.org  Fri Sep 12 04:08:20 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 12 Sep 2008 11:08:20 +0200
Subject: [PATCH] annotate more with buffer size
In-Reply-To: <87vdx2vk6v.fsf@totally-fudged-out-message-id> (Marcus Meissner's
	message of "Thu, 11 Sep 2008 15:20:25 +0200")
References: <87vdx2vk6v.fsf@totally-fudged-out-message-id>
Message-ID: <8763p14tq3.fsf@wine.dyndns.org>

Marcus Meissner <meissner at suse.de> writes:

> @@ -91,11 +91,11 @@ typedef HRESULT (STDMETHODCALLTYPE MAPILOGONEX)(ULONG_PTR,LPSTR,LPSTR,ULONG,LPMA
>  typedef MAPILOGONEX *LPMAPILOGONEX;
>  MAPILOGONEX MAPILogonEx;
>  
> -typedef SCODE (WINAPI MAPIALLOCATEBUFFER)(ULONG,LPVOID*);
> +typedef SCODE (__WINE_ALLOC_SIZE(1) WINAPI MAPIALLOCATEBUFFER)(ULONG,LPVOID*);
>  typedef MAPIALLOCATEBUFFER *LPMAPIALLOCATEBUFFER;
>  MAPIALLOCATEBUFFER MAPIAllocateBuffer;
>  
> -typedef SCODE (WINAPI MAPIALLOCATEMORE)(ULONG,LPVOID,LPVOID*);
> +typedef SCODE (__WINE_ALLOC_SIZE(1) WINAPI MAPIALLOCATEMORE)(ULONG,LPVOID,LPVOID*);
>  typedef MAPIALLOCATEMORE *LPMAPIALLOCATEMORE;
>  MAPIALLOCATEMORE MAPIAllocateMore;

I don't think it's useful to annotate functions that don't return a
pointer.

> @@ -1393,7 +1393,7 @@ void     WINAPI InstallHinfSectionW( HWND hwnd, HINSTANCE handle, PCWSTR cmdline
>  BOOL     WINAPI IsUserAdmin(VOID);
>  PWSTR    WINAPI MultiByteToUnicode(PCSTR lpMultiByteStr, UINT uCodePage);
>  VOID     WINAPI MyFree(PVOID lpMem);
> -PVOID    WINAPI MyMalloc(DWORD dwSize);
> +PVOID    WINAPI MyMalloc(DWORD dwSize) __WINE_ALLOC_SIZE(1);
>  PVOID    WINAPI MyRealloc(PVOID lpSrc, DWORD dwSize);
>  DWORD    WINAPI OpenAndMapForRead(PCWSTR, PDWORD, PHANDLE, PHANDLE, PVOID *);
>  LONG     WINAPI QueryRegistryValue(HKEY, PCWSTR, PBYTE *, PDWORD, PDWORD);

Any reason you are not annotating the various realloc functions too?

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Sep 12 04:10:27 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 12 Sep 2008 11:10:27 +0200
Subject: [try 2][PATCH 2/2] user32: Fixed minimal size of child windows.
In-Reply-To: <48C922DD.7010706@web.de> ("Florian =?utf-8?Q?K=C3=B6berle=22?=
	=?utf-8?Q?'s?= message of "Thu, 11 Sep 2008 15:53:33 +0200")
References: <48C7A715.30808@web.de> <48C922DD.7010706@web.de>
Message-ID: <871vzp4tmk.fsf@wine.dyndns.org>

Florian K?berle <FloriansKarten at web.de> writes:

> diff --git a/dlls/user32/winpos.c b/dlls/user32/winpos.c
> index 21e1554..79140a0 100644
> --- a/dlls/user32/winpos.c
> +++ b/dlls/user32/winpos.c
> @@ -708,14 +708,16 @@ void WINPOS_GetMinMaxInfo( HWND hwnd, POINT *maxSize, POINT *maxPos,
>  
>          MinMax.ptMaxSize.x = rc.right - rc.left;
>          MinMax.ptMaxSize.y = rc.bottom - rc.top;
> +        MinMax.ptMinTrackSize.x = 6;
> +        MinMax.ptMinTrackSize.y = 6;

You should figure out why the current computation doesn't yield the
right values. It certainly shouldn't be hardcoded to 6.

-- 
Alexandre Julliard
julliard at winehq.org


From meissner at suse.de  Fri Sep 12 04:13:11 2008
From: meissner at suse.de (Marcus Meissner)
Date: Fri, 12 Sep 2008 11:13:11 +0200
Subject: [PATCH] annotate more with buffer size
In-Reply-To: <8763p14tq3.fsf@wine.dyndns.org>
References: <87vdx2vk6v.fsf@totally-fudged-out-message-id>
	<8763p14tq3.fsf@wine.dyndns.org>
Message-ID: <20080912091310.GA20903@suse.de>

On Fri, Sep 12, 2008 at 11:08:20AM +0200, Alexandre Julliard wrote:
> Marcus Meissner <meissner at suse.de> writes:
> 
> > @@ -91,11 +91,11 @@ typedef HRESULT (STDMETHODCALLTYPE MAPILOGONEX)(ULONG_PTR,LPSTR,LPSTR,ULONG,LPMA
> >  typedef MAPILOGONEX *LPMAPILOGONEX;
> >  MAPILOGONEX MAPILogonEx;
> >  
> > -typedef SCODE (WINAPI MAPIALLOCATEBUFFER)(ULONG,LPVOID*);
> > +typedef SCODE (__WINE_ALLOC_SIZE(1) WINAPI MAPIALLOCATEBUFFER)(ULONG,LPVOID*);
> >  typedef MAPIALLOCATEBUFFER *LPMAPIALLOCATEBUFFER;
> >  MAPIALLOCATEBUFFER MAPIAllocateBuffer;
> >  
> > -typedef SCODE (WINAPI MAPIALLOCATEMORE)(ULONG,LPVOID,LPVOID*);
> > +typedef SCODE (__WINE_ALLOC_SIZE(1) WINAPI MAPIALLOCATEMORE)(ULONG,LPVOID,LPVOID*);
> >  typedef MAPIALLOCATEMORE *LPMAPIALLOCATEMORE;
> >  MAPIALLOCATEMORE MAPIAllocateMore;
> 
> I don't think it's useful to annotate functions that don't return a
> pointer.

Umm, yes. Will fix.
 
> > @@ -1393,7 +1393,7 @@ void     WINAPI InstallHinfSectionW( HWND hwnd, HINSTANCE handle, PCWSTR cmdline
> >  BOOL     WINAPI IsUserAdmin(VOID);
> >  PWSTR    WINAPI MultiByteToUnicode(PCSTR lpMultiByteStr, UINT uCodePage);
> >  VOID     WINAPI MyFree(PVOID lpMem);
> > -PVOID    WINAPI MyMalloc(DWORD dwSize);
> > +PVOID    WINAPI MyMalloc(DWORD dwSize) __WINE_ALLOC_SIZE(1);
> >  PVOID    WINAPI MyRealloc(PVOID lpSrc, DWORD dwSize);
> >  DWORD    WINAPI OpenAndMapForRead(PCWSTR, PDWORD, PHANDLE, PHANDLE, PVOID *);
> >  LONG     WINAPI QueryRegistryValue(HKEY, PCWSTR, PBYTE *, PDWORD, PDWORD);
> 
> Any reason you are not annotating the various realloc functions too?

Can be done too and I will do so for consistency.
The realloc functions are however less likely to get fixed sizes for
which the alloc_size is intended.

Ciao, Marcus


From david.adam.cnrs at gmail.com  Wed Sep 10 11:41:07 2008
From: david.adam.cnrs at gmail.com (David Adam)
Date: Wed, 10 Sep 2008 18:41:07 +0200
Subject: d3dx9_36: Fix the tests for native Windows.
In-Reply-To: <48C7F2EA.6040507@freenet.de>
References: <5f9140a20809091055u3fbfb586u41391988bf5c0e93@mail.gmail.com>
	<48C7F2EA.6040507@freenet.de>
Message-ID: <5f9140a20809100941g272eed5pc4037dec54c63823@mail.gmail.com>

Hi,

Yes, I learnt that in IRC. But there is a real problem. With a native box,
there is no d3dx9.dll. So, wine-test mustn't call it.
Currently, wine-test calls it and all the tests are skipped in a real
windows box. You can check it in the wine-webpage  that collects all the
test results.

David


2008/9/10 Tony <tony.wasserka at freenet.de>

> Hi,
> At least for all Windows versions below Vista, the d3dx9 importlib does
> exist (and d3dx9_36 does not),
> so either something is screwed up with your system or Vista is handling it
> otherwise (in that case we need
> another solution though).
>
> Best regards,
>   Tony
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080910/b523add8/attachment-0001.htm 

From karcher at physik.fu-berlin.de  Wed Sep 10 15:10:25 2008
From: karcher at physik.fu-berlin.de (Michael Karcher)
Date: Wed, 10 Sep 2008 22:10:25 +0200
Subject: Size of SUBHEAP in heap.c
In-Reply-To: <20080910165257.181750@gmx.net>
References: <20080910165257.181750@gmx.net>
Message-ID: <1221077425.12534.55.camel@hermes2.karcher.local>

Am Mittwoch, den 10.09.2008, 18:52 +0200 schrieb Martin Profittlich:
> when trying to fix an issue with Guitar Rig 3 on Wine (Bug 10129,
> "Guitar Rig 3 crashes"), I found out something odd: The crash is
> affected by the size of the SUBHEAP structure in dlls/ntdll/heap.c.
> Just by adding 8 unused bytes to SUBHEAP, GR3 does not crash anymore.
> Add another 8 bytes, GR3 crashes again, yet another 8 bytes - no crash
> and so on.
Have you tried to run with warn+heap? In that case, on each
HeapAlloc/HeapFree, heap integrity will be checked. Also freed blocks
are directly overwritten with dummy data. The behaviour of warn+heap
might be insightful.

The size-dependent behaviour might also indicate alignment issues: There
are SSE instructions that insist on 16-byte alignment. If these are used
and our size of SUBHEAP happens to make the data only 8-byte aligned,
that might cause a crash, too.

In this particular case, I think the crash log does not really indicate
an alignment problem, but a "x/i $eip" in winedbg on the crash might
help to check further. I suspect a [edx-1] address while edx contains a
NULL pointer.

Regards,
  Michael Karcher
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080910/35462962/attachment-0001.pgp 

From david.adam.cnrs at gmail.com  Thu Sep 11 09:09:05 2008
From: david.adam.cnrs at gmail.com (David Adam)
Date: Thu, 11 Sep 2008 16:09:05 +0200
Subject: d3dx9_36: Fix the tests for native Windows.
In-Reply-To: <48C8C0DD.6060201@freenet.de>
References: <5f9140a20809091055u3fbfb586u41391988bf5c0e93@mail.gmail.com>
	<48C7F2EA.6040507@freenet.de> <1221079670.5830.24.camel@p4.lan>
	<48C8C0DD.6060201@freenet.de>
Message-ID: <5f9140a20809110709x1273d0e4r28785a24efddf295@mail.gmail.com>

Hi,

any idea to fix this problem?

David

2008/9/11 Tony Wasserka <tony.wasserka at freenet.de>

>
>  On Mi, 2008-09-10 at 18:16 +0200, Tony wrote:
>>
>>
>>> Hi,
>>> At least for all Windows versions below Vista, the d3dx9 importlib does
>>> exist (and d3dx9_36 does not),
>>>
>>>
>>
>> I installed a recent dx9-runtime on my w2k test system, but a d3dx9.dll
>> is not
>> present (d3dx9_36.dll exist).
>>
>> I get always a blocking popup, when the testlist is created.
>>
>>
>>
>>
> You are speaking about the IMPORT d3dx9_36.dll.
> I was talking about the IMPORTLIB which is called d3dx9.lib,
> which is part of the DirectX SDK and used to compile d3dx9 applications,
> whereas the dll file is used to run them.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080911/dfaba9f7/attachment-0001.htm 

From david.adam.cnrs at gmail.com  Thu Sep 11 11:54:56 2008
From: david.adam.cnrs at gmail.com (David Adam)
Date: Thu, 11 Sep 2008 18:54:56 +0200
Subject: d3dx9_36: Fix the tests for native Windows.
In-Reply-To: <48C9454B.9010704@freenet.de>
References: <5f9140a20809091055u3fbfb586u41391988bf5c0e93@mail.gmail.com>
	<48C7F2EA.6040507@freenet.de> <1221079670.5830.24.camel@p4.lan>
	<48C8C0DD.6060201@freenet.de>
	<5f9140a20809110709x1273d0e4r28785a24efddf295@mail.gmail.com>
	<48C9454B.9010704@freenet.de>
Message-ID: <5f9140a20809110954k42f56341ybee505591ecd8140@mail.gmail.com>

Hello,

In IRC, Julliard said that this change is wrong too. :(

David

2008/9/11 Tony Wasserka <tony.wasserka at freenet.de>

> Your latest patch is already doing it right, IMPORTS must be changed to
> d3dx9_36 and IMPORTLIB must stay d3dx9.
>
>
>>
>> any idea to fix this problem?
>>
>> David
>>
>> 2008/9/11 Tony Wasserka <tony.wasserka at freenet.de <mailto:
>> tony.wasserka at freenet.de>>
>>
>>
>>
>>        On Mi, 2008-09-10 at 18:16 +0200, Tony wrote:
>>
>>            Hi,
>>            At least for all Windows versions below Vista, the d3dx9
>>            importlib does exist (and d3dx9_36 does not),
>>
>>
>>        I installed a recent dx9-runtime on my w2k test system, but a
>>        d3dx9.dll
>>        is not
>>        present (d3dx9_36.dll exist).
>>
>>        I get always a blocking popup, when the testlist is created.
>>
>>
>>
>>    You are speaking about the IMPORT d3dx9_36.dll.
>>    I was talking about the IMPORTLIB which is called d3dx9.lib,
>>    which is part of the DirectX SDK and used to compile d3dx9
>>    applications, whereas the dll file is used to run them.
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080911/1af61fec/attachment.htm 

From winepatches at kegel.com  Fri Sep 12 05:41:27 2008
From: winepatches at kegel.com (winepatches at kegel.com)
Date: Fri, 12 Sep 2008 06:41:27 -0400 (EDT)
Subject: d3dx8 [patch 1/2, try 2]: Implement D3DXGetFVFVertexSize
In-Reply-To: <5f9140a20809112239k3f704832t8393d95d237df650@mail.gmail.com>
References: <5f9140a20809112239k3f704832t8393d95d237df650@mail.gmail.com>
Message-ID: <58085.76.94.199.31.1221216087.squirrel@webmail8.pair.com>

> This is a patch from Luis Busquets.

were you also going to send 2/2?


From paul.vriens.wine at gmail.com  Fri Sep 12 15:33:03 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Fri, 12 Sep 2008 22:33:03 +0200
Subject: kernel32/test: Test import entries of a core windows DLLs
	(Revision 4)
In-Reply-To: <20080912190748.GA20617@teop>
References: <20080912190748.GA20617@teop>
Message-ID: <7FBC4390-158D-419F-BE41-01DD1EEC4374@gmail.com>



Sent from my iPod

On Sep 12, 2008, at 21:07, Roy Shea <royshea at gmail.com> wrote:

>
> This revision uses GetModuleHandle instead of LoadLibrary, and folds
> the introduction of the new test patch and breaking tests into their
> own bodies patch into a single patch.
>
> The prior version of this patch is available for reference at:
> http://www.winehq.org/pipermail/wine-patches/2008-September/ 
> 061357.html
> http://www.winehq.org/pipermail/wine-patches/2008-September/ 
> 061358.html
> ---
> dlls/kernel32/tests/loader.c |   81 +++++++++++++++++++++++++++++++++ 
> ++++++++-
> 1 files changed, 80 insertions(+), 1 deletions(-)
> <e74416df81e0e57b11bf7761808510ab4b7cb11c.diff>
>


From paul.vriens.wine at gmail.com  Fri Sep 12 15:35:11 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Fri, 12 Sep 2008 22:35:11 +0200
Subject: kernel32/test: Test import entries of a core windows DLLs
	(Revision 4)
In-Reply-To: <20080912190748.GA20617@teop>
References: <20080912190748.GA20617@teop>
Message-ID: <7FAF9388-E46D-4670-9451-0D6001743635@gmail.com>


>
> This revision uses GetModuleHandle instead of LoadLibrary, and folds
> the introduction of the new test patch and breaking tests into their
> own bodies patch into a single patch.
>
> The prior version of this patch is available for reference at:
> http://www.winehq.org/pipermail/wine-patches/2008-September/ 
> 061357.html
> http://www.winehq.org/pipermail/wine-patches/2008-September/ 
> 061358.html
> ---
> dlls/kernel32/tests/loader.c |   81 +++++++++++++++++++++++++++++++++ 
> ++++++++-
> 1 files changed, 80 insertions(+), 1 deletions(-)
> <e74416df81e0e57b11bf7761808510ab4b7cb11c.diff>

You are still using LoadLibrary.

Cheers,

Paul


From dmitry at codeweavers.com  Sat Sep 13 01:17:56 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sat, 13 Sep 2008 15:17:56 +0900
Subject: oleacc: implemented GetRoleText[A/W]
References: <1221256884.7132.2.camel@debian.localdomain>
Message-ID: <997AB878C94C4B6DB182D3A65BB5A00C@DMITRY>

"Nikolay Sivov" <bunglehead at gmail.com> wrote:

> +BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD fdwReason,
> +                    LPVOID lpvReserved)
> +{
> +    TRACE("%p, %d, %p\n", hinstDLL, fdwReason, lpvReserved);
> +
> +    switch (fdwReason)
> +    {
> +        case DLL_PROCESS_ATTACH:
> +            oleacc_handle = hinstDLL;
> +            break;
> +    }
> +    return TRUE;
> +}

Why don't you call DisableThreadLibraryCalls() if you don't use the thread
callouts?

> +UINT WINAPI GetRoleTextW(DWORD role, LPWSTR lpRole, UINT rolemax)
> +{
> +    HGLOBAL hmem;
> +    HRSRC hrsrc;
> +    unsigned int id;
> +    const WCHAR *p;
> +    INT ret;
> +
> +    TRACE("%u %p %u\n", role, lpRole, rolemax);
> +
> +    hrsrc = FindResourceW(oleacc_handle, MAKEINTRESOURCEW((LOWORD(role) >> 4) + 1),
> +                          (LPWSTR)RT_STRING);
> +    if (!hrsrc) return 0;
> +    hmem = LoadResource(oleacc_handle, hrsrc);
> +    if (!hmem) return 0;
> +
> +    p = LockResource(hmem);
> +    id = role & 0x000f;
> +    while (id--) p += *p + 1;
> +
> +    /* return role text length */
> +    if(!lpRole)
> +        return *p;
> +
> +    ret = LoadStringW(oleacc_handle, role, lpRole, rolemax);
> +    if(!(ret > 0))
> +        return 0;
> +
> +    return ret;
> +}

Why not just use LoadStringW directly?

> +UINT WINAPI GetRoleTextA(DWORD role, LPSTR lpRole, UINT rolemax)
> +{
> +    INT ret;
> +
> +    TRACE("%u %p %u\n", role, lpRole, rolemax);
> +
> +    /* get length (without trailing NULL) */
> +    ret = GetRoleTextW(role, NULL, rolemax);
> +
> +    if(!lpRole)
> +        return ret;

GetRoleTextW above should be called only for the !lpRole case. And better
to actually call GetRoleTextA.

> +    return LoadStringA(oleacc_handle, role, lpRole, min(rolemax, ret + 1));

Why not just use rolemax in the LoadStringA call?

Introducing the IDS_ROLE_SYSTEM_xxx identifiers is completely redundant,
use the ROLE_SYSTEM_xxx values directly instead.

-- 
Dmitry.


From bunglehead at gmail.com  Sat Sep 13 01:44:43 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sat, 13 Sep 2008 10:44:43 +0400
Subject: oleacc: implemented GetRoleText[A/W]
In-Reply-To: <997AB878C94C4B6DB182D3A65BB5A00C@DMITRY>
References: <1221256884.7132.2.camel@debian.localdomain>
	<997AB878C94C4B6DB182D3A65BB5A00C@DMITRY>
Message-ID: <48CB615B.5040401@gmail.com>

Dmitry Timoshkov wrote:
> "Nikolay Sivov" <bunglehead at gmail.com> wrote:
>
>> +BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD fdwReason,
>> +                    LPVOID lpvReserved)
>> +{
>> +    TRACE("%p, %d, %p\n", hinstDLL, fdwReason, lpvReserved);
>> +
>> +    switch (fdwReason)
>> +    {
>> +        case DLL_PROCESS_ATTACH:
>> +            oleacc_handle = hinstDLL;
>> +            break;
>> +    }
>> +    return TRUE;
>> +}
>
> Why don't you call DisableThreadLibraryCalls() if you don't use the 
> thread
> callouts?
Will add it.
>> +UINT WINAPI GetRoleTextW(DWORD role, LPWSTR lpRole, UINT rolemax)
>> +{
>> +    HGLOBAL hmem;
>> +    HRSRC hrsrc;
>> +    unsigned int id;
>> +    const WCHAR *p;
>> +    INT ret;
>> +
>> +    TRACE("%u %p %u\n", role, lpRole, rolemax);
>> +
>> +    hrsrc = FindResourceW(oleacc_handle, 
>> MAKEINTRESOURCEW((LOWORD(role) >> 4) + 1),
>> +                          (LPWSTR)RT_STRING);
>> +    if (!hrsrc) return 0;
>> +    hmem = LoadResource(oleacc_handle, hrsrc);
>> +    if (!hmem) return 0;
>> +
>> +    p = LockResource(hmem);
>> +    id = role & 0x000f;
>> +    while (id--) p += *p + 1;
>> +
>> +    /* return role text length */
>> +    if(!lpRole)
>> +        return *p;
>> +
>> +    ret = LoadStringW(oleacc_handle, role, lpRole, rolemax);
>> +    if(!(ret > 0))
>> +        return 0;
>> +
>> +    return ret;
>> +}
>
> Why not just use LoadStringW directly?
Because I don't know how to get string length with LoadStringW. It 
returns with zero when
called with NULL buffer. I could pass a pointer to single char and 
(buflen = = 0) maybe.
Btw, is it normal that LoadString[A/W] differs much handling this 
NULL-buffer cases?
I've check just now that there's no separate test for NULL buffer for 
LoadStringA.
>> +UINT WINAPI GetRoleTextA(DWORD role, LPSTR lpRole, UINT rolemax)
>> +{
>> +    INT ret;
>> +
>> +    TRACE("%u %p %u\n", role, lpRole, rolemax);
>> +
>> +    /* get length (without trailing NULL) */
>> +    ret = GetRoleTextW(role, NULL, rolemax);
>> +
>> +    if(!lpRole)
>> +        return ret;
>
> GetRoleTextW above should be called only for the !lpRole case. And better
> to actually call GetRoleTextA.
I can get rid of that after testing LoadStringA.
>> +    return LoadStringA(oleacc_handle, role, lpRole, min(rolemax, ret 
>> + 1));
>
> Why not just use rolemax in the LoadStringA call?
Agreed here.
> Introducing the IDS_ROLE_SYSTEM_xxx identifiers is completely redundant,
> use the ROLE_SYSTEM_xxx values directly instead.
>
You mean to use ROLE_SYSTEM_* directly in all .rc files?


From dmitry at codeweavers.com  Sat Sep 13 02:00:52 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sat, 13 Sep 2008 16:00:52 +0900
Subject: oleacc: implemented GetRoleText[A/W]
References: <1221256884.7132.2.camel@debian.localdomain>
	<997AB878C94C4B6DB182D3A65BB5A00C@DMITRY>
	<48CB615B.5040401@gmail.com>
Message-ID: <87120D966C0B43D9923287EB1AA09EE7@DMITRY>

"Nikolay Sivov" <bunglehead at gmail.com> wrote:

>> Why not just use LoadStringW directly?
> Because I don't know how to get string length with LoadStringW. It 
> returns with zero when
> called with NULL buffer. I could pass a pointer to single char and 
> (buflen = = 0) maybe.
> Btw, is it normal that LoadString[A/W] differs much handling this 
> NULL-buffer cases?

A test case would tell it definitely.

>> Introducing the IDS_ROLE_SYSTEM_xxx identifiers is completely redundant,
>> use the ROLE_SYSTEM_xxx values directly instead.
>>
> You mean to use ROLE_SYSTEM_* directly in all .rc files?

Yes.

-- 
Dmitry.


From dmitry at codeweavers.com  Sat Sep 13 07:01:23 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sat, 13 Sep 2008 21:01:23 +0900
Subject: [oleaut32/tests] Don't crash on Win95
References: <48CB9FD8.8010904@gmail.com>
Message-ID: <DC4B7FF62A59428689C549946EAA1F9C@DMITRY>

"Paul Vriens" <paul.vriens.wine at gmail.com> wrote:

> CP_UTF8 is not supported on Win95 (without the Unicode layer) and 
> continuing will lead to a crash (no filename that leads to typelib == NULL).

UTF-8 is not needed in that test at all, it would be better to just
replace CP_UTF8 by CP_ACP.

-- 
Dmitry.


From austinenglish at gmail.com  Sat Sep 13 19:00:56 2008
From: austinenglish at gmail.com (Austin English)
Date: Sat, 13 Sep 2008 19:00:56 -0500
Subject: RATS security analysis
Message-ID: <b6bb06270809131700s5515979exa75ccc3e09e68cfb@mail.gmail.com>

Howdy,

Since static analysis seems to have gotten more popular recently, I
ran RATS (http://www.fortify.com/security-resources/rats.jsp) on Wine.
I uploaded the results to:

http://winezeug.googlecode.com/svn/trunk/rats_output.txt

I'm working on trying Oink!, which is supposed to be pretty good, but
I can't get it to compile correctly...I'm still fiddling with it.

-Austin


From knan-wine at anduin.net  Sat Sep 13 19:22:09 2008
From: knan-wine at anduin.net (=?ISO-8859-15?Q?Erik_Inge_Bols=F8?=)
Date: Sun, 14 Sep 2008 02:22:09 +0200 (CEST)
Subject: Testcase - a windows run, please?
Message-ID: <alpine.BSF.1.00.0809140217450.1986@anduin.net>

Could someone run this testcase on native windows for me, please? :)

kernel32: fix PROFILE_Load to handle mac line endings

Fixes bug 15281. With testcase.
---
 dlls/kernel32/profile.c       |    3 +-
 dlls/kernel32/tests/profile.c |  268 +++++++++++++++++++++++++++++++++++++++++
 2 files changed, 270 insertions(+), 1 deletions(-)

diff --git a/dlls/kernel32/profile.c b/dlls/kernel32/profile.c
index 22d4cb5..850f3cc 100644
--- a/dlls/kernel32/profile.c
+++ b/dlls/kernel32/profile.c
@@ -407,6 +407,7 @@ static PROFILESECTION *PROFILE_Load(HANDLE hFile, ENCODING * pEncoding)
     {
         szLineStart = next_line;
         next_line = memchrW(szLineStart, '\n', szEnd - szLineStart);
+        if (!next_line) next_line = memchrW(szLineStart, '\r', szEnd - szLineStart);
         if (!next_line) next_line = szEnd;
         else next_line++;
         szLineEnd = next_line;
@@ -415,7 +416,7 @@ static PROFILESECTION *PROFILE_Load(HANDLE hFile, ENCODING * pEncoding)
 
         /* get rid of white space */
         while (szLineStart < szLineEnd && PROFILE_isspaceW(*szLineStart)) szLineStart++;
-        while ((szLineEnd > szLineStart) && ((szLineEnd[-1] == '\n') || PROFILE_isspaceW(szLineEnd[-1]))) szLineEnd--;
+        while ((szLineEnd > szLineStart) && ((szLineEnd[-1] == '\n') || (szLineEnd[-1] == '\r') || PROFILE_isspaceW(szLineEnd[-1]))) szLineEnd--;
 
         if (szLineStart >= szLineEnd) continue;
 
diff --git a/dlls/kernel32/tests/profile.c b/dlls/kernel32/tests/profile.c
index 8a3e83b..1cc963c 100644
--- a/dlls/kernel32/tests/profile.c
+++ b/dlls/kernel32/tests/profile.c
@@ -694,6 +694,273 @@ static void test_GetPrivateProfileString(void)
     DeleteFileA(filename);
 }
 
+/* as above, but cr-only terminated lines */
+static void test_cr(void)
+{
+    DWORD ret;
+    CHAR buf[MAX_PATH];
+    CHAR def_val[MAX_PATH];
+    CHAR path[MAX_PATH];
+    CHAR windir[MAX_PATH];
+    /* NT series crashes on r/o empty strings, so pass an r/w
+       empty string and check for modification */
+    CHAR emptystr[MAX_PATH] = "";
+    LPSTR tempfile;
+
+    static const char filename[] = ".\\winetest.ini";
+    static const char content[]=
+        "[section1]\r"
+        "name1=val1\r"
+        "name2=\"val2\"\r"
+        "name3\r"
+        "name4=a\r"
+        "[section2]\r";
+
+    create_test_file(filename, content, sizeof(content));
+
+    /* Run this test series with caching. Wine won't cache profile
+       files younger than 2.1 seconds. */
+    Sleep(2500);
+
+    /* lpAppName is NULL */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA(NULL, "name1", "default",
+                                   buf, MAX_PATH, filename);
+    ok(ret == 18, "Expected 18, got %d\n", ret);
+    ok(!memcmp(buf, "section1\0section2\0", ret + 1),
+       "Expected \"section1\\0section2\\0\", got \"%s\"\n", buf);
+
+    /* lpAppName is empty */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA(emptystr, "name1", "default",
+                                   buf, MAX_PATH, filename);
+    ok(ret == 7, "Expected 7, got %d\n", ret);
+    ok(!lstrcmpA(buf, "default"), "Expected \"default\", got \"%s\"\n", buf);
+    ok(emptystr_ok(emptystr), "AppName modified\n");
+
+    /* lpAppName is missing */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("notasection", "name1", "default",
+                                   buf, MAX_PATH, filename);
+    ok(ret == 7, "Expected 7, got %d\n", ret);
+    ok(!lstrcmpA(buf, "default"), "Expected \"default\", got \"%s\"\n", buf);
+
+    /* lpAppName is empty, lpDefault is NULL */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA(emptystr, "name1", NULL,
+                                   buf, MAX_PATH, filename);
+    ok(ret == 0, "Expected 0, got %d\n", ret);
+    ok(!lstrcmpA(buf, ""), "Expected \"\", got \"%s\"\n", buf);
+    ok(emptystr_ok(emptystr), "AppName modified\n");
+
+    /* lpAppName is empty, lpDefault is empty */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA(emptystr, "name1", "",
+                                   buf, MAX_PATH, filename);
+    ok(ret == 0, "Expected 0, got %d\n", ret);
+    ok(!lstrcmpA(buf, ""), "Expected \"\", got \"%s\"\n", buf);
+    ok(emptystr_ok(emptystr), "AppName modified\n");
+
+    /* lpAppName is empty, lpDefault has trailing blank characters */
+    lstrcpyA(buf, "kumquat");
+    /* lpDefault must be writable (trailing blanks are removed inplace in win9x) */
+    lstrcpyA(def_val, "default  ");
+    ret = GetPrivateProfileStringA(emptystr, "name1", def_val,
+                                   buf, MAX_PATH, filename);
+    ok(ret == 7, "Expected 7, got %d\n", ret);
+    ok(!lstrcmpA(buf, "default"), "Expected \"default\", got \"%s\"\n", buf);
+    ok(emptystr_ok(emptystr), "AppName modified\n");
+
+    /* lpAppName is empty, many blank characters in lpDefault */
+    lstrcpyA(buf, "kumquat");
+    /* lpDefault must be writable (trailing blanks are removed inplace in win9x) */
+    lstrcpyA(def_val, "one two  ");
+    ret = GetPrivateProfileStringA(emptystr, "name1", def_val,
+                                   buf, MAX_PATH, filename);
+    ok(ret == 7, "Expected 7, got %d\n", ret);
+    ok(!lstrcmpA(buf, "one two"), "Expected \"one two\", got \"%s\"\n", buf);
+    ok(emptystr_ok(emptystr), "AppName modified\n");
+
+    /* lpAppName is empty, blank character but not trailing in lpDefault */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA(emptystr, "name1", "one two",
+                                   buf, MAX_PATH, filename);
+    ok(ret == 7, "Expected 7, got %d\n", ret);
+    ok(!lstrcmpA(buf, "one two"), "Expected \"one two\", got \"%s\"\n", buf);
+    ok(emptystr_ok(emptystr), "AppName modified\n");
+
+    /* lpKeyName is NULL */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", NULL, "default",
+                                   buf, MAX_PATH, filename);
+    ok(ret == 18, "Expected 18, got %d\n", ret);
+    ok(!memcmp(buf, "name1\0name2\0name4\0", ret + 1),
+       "Expected \"name1\\0name2\\0name4\\0\", got \"%s\"\n", buf);
+
+    /* lpKeyName is empty */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", emptystr, "default",
+                                   buf, MAX_PATH, filename);
+    ok(ret == 7, "Expected 7, got %d\n", ret);
+    ok(!lstrcmpA(buf, "default"), "Expected \"default\", got \"%s\"\n", buf);
+    ok(emptystr_ok(emptystr), "KeyName modified\n");
+
+    /* lpKeyName is missing */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", "notakey", "default",
+                                   buf, MAX_PATH, filename);
+    ok(ret == 7, "Expected 7, got %d\n", ret);
+    ok(!lstrcmpA(buf, "default"), "Expected \"default\", got \"%s\"\n", buf);
+
+    /* lpKeyName is empty, lpDefault is NULL */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", emptystr, NULL,
+                                   buf, MAX_PATH, filename);
+    ok(ret == 0, "Expected 0, got %d\n", ret);
+    ok(!lstrcmpA(buf, ""), "Expected \"\", got \"%s\"\n", buf);
+    ok(emptystr_ok(emptystr), "KeyName modified\n");
+
+    /* lpKeyName is empty, lpDefault is empty */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", emptystr, "",
+                                   buf, MAX_PATH, filename);
+    ok(ret == 0, "Expected 0, got %d\n", ret);
+    ok(!lstrcmpA(buf, ""), "Expected \"\", got \"%s\"\n", buf);
+    ok(emptystr_ok(emptystr), "KeyName modified\n");
+
+    /* lpKeyName is empty, lpDefault has trailing blank characters */
+    lstrcpyA(buf, "kumquat");
+    /* lpDefault must be writable (trailing blanks are removed inplace in win9x) */
+    lstrcpyA(def_val, "default  ");
+    ret = GetPrivateProfileStringA("section1", emptystr, def_val,
+                                   buf, MAX_PATH, filename);
+    ok(ret == 7, "Expected 7, got %d\n", ret);
+    ok(!lstrcmpA(buf, "default"), "Expected \"default\", got \"%s\"\n", buf);
+    ok(emptystr_ok(emptystr), "KeyName modified\n");
+
+    if (0) /* crashes */
+    {
+        /* lpReturnedString is NULL */
+        ret = GetPrivateProfileStringA("section1", "name1", "default",
+                                       NULL, MAX_PATH, filename);
+    }
+
+    /* lpFileName is NULL */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", "name1", "default",
+                                   buf, MAX_PATH, NULL);
+    ok(ret == 7, "Expected 7, got %d\n", ret);
+    ok(!lstrcmpA(buf, "default"), "Expected \"default\", got \"%s\"\n", buf);
+
+    /* lpFileName is empty */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", "name1", "default",
+                                   buf, MAX_PATH, "");
+    ok(ret == 7, "Expected 7, got %d\n", ret);
+    ok(!lstrcmpA(buf, "default"), "Expected \"default\", got \"%s\"\n", buf);
+
+    /* lpFileName is nonexistent */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", "name1", "default",
+                                   buf, MAX_PATH, "nonexistent");
+    ok(ret == 7, "Expected 7, got %d\n", ret);
+    ok(!lstrcmpA(buf, "default"), "Expected \"default\", got \"%s\"\n", buf);
+
+    /* nSize is 0 */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", "name1", "default",
+                                   buf, 0, filename);
+    ok(ret == 0, "Expected 0, got %d\n", ret);
+    ok(!lstrcmpA(buf, "kumquat"), "Expected buf to be unchanged, got \"%s\"\n", buf);
+
+    /* nSize is exact size of output */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", "name1", "default",
+                                   buf, 4, filename);
+    ok(ret == 3, "Expected 3, got %d\n", ret);
+    ok(!lstrcmpA(buf, "val"), "Expected \"val\", got \"%s\"\n", buf);
+
+    /* nSize has room for NULL terminator */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", "name1", "default",
+                                   buf, 5, filename);
+    ok(ret == 4, "Expected 4, got %d\n", ret);
+    ok(!lstrcmpA(buf, "val1"), "Expected \"val1\", got \"%s\"\n", buf);
+
+    /* output is 1 character */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", "name4", "default",
+                                   buf, MAX_PATH, filename);
+    ok(ret == 1, "Expected 1, got %d\n", ret);
+    ok(!lstrcmpA(buf, "a"), "Expected \"a\", got \"%s\"\n", buf);
+
+    /* output is 1 character, no room for NULL terminator */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", "name4", "default",
+                                   buf, 1, filename);
+    ok(ret == 0, "Expected 0, got %d\n", ret);
+    ok(!lstrcmpA(buf, ""), "Expected \"\", got \"%s\"\n", buf);
+
+    /* lpAppName is NULL, not enough room for final section name */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA(NULL, "name1", "default",
+                                   buf, 16, filename);
+    ok(ret == 14, "Expected 14, got %d\n", ret);
+    ok(!memcmp(buf, "section1\0secti\0", ret + 1),
+       "Expected \"section1\\0secti\\0\", got \"%s\"\n", buf);
+
+    /* lpKeyName is NULL, not enough room for final key name */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", NULL, "default",
+                                   buf, 16, filename);
+    ok(ret == 14, "Expected 14, got %d\n", ret);
+    ok(!memcmp(buf, "name1\0name2\0na\0", ret + 1),
+       "Expected \"name1\\0name2\\0na\\0\", got \"%s\"\n", buf);
+
+    /* key value has quotation marks which are stripped */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", "name2", "default",
+                                   buf, MAX_PATH, filename);
+    ok(ret == 4, "Expected 4, got %d\n", ret);
+    ok(!lstrcmpA(buf, "val2"), "Expected \"val2\", got \"%s\"\n", buf);
+
+    /* case does not match */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", "NaMe1", "default",
+                                   buf, MAX_PATH, filename);
+    ok(ret == 4, "Expected 4, got %d\n", ret);
+    ok(!lstrcmpA(buf, "val1"), "Expected \"val1\", got \"%s\"\n", buf);
+
+    /* only filename is used */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", "NaMe1", "default",
+                                   buf, MAX_PATH, "winetest.ini");
+    ok(ret == 7, "Expected 7, got %d\n", ret);
+    ok(!lstrcmpA(buf, "default"), "Expected \"default\", got \"%s\"\n", buf);
+
+    GetWindowsDirectoryA(windir, MAX_PATH);
+    GetTempFileNameA(windir, "pre", 0, path);
+    tempfile = strrchr(path, '\\') + 1;
+    create_test_file(path, content, sizeof(content));
+
+    /* only filename is used, file exists in windows directory */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", "NaMe1", "default",
+                                   buf, MAX_PATH, tempfile);
+    ok(ret == 4, "Expected 4, got %d\n", ret);
+    ok(!lstrcmpA(buf, "val1"), "Expected \"val1\", got \"%s\"\n", buf);
+
+    /* successful case */
+    lstrcpyA(buf, "kumquat");
+    ret = GetPrivateProfileStringA("section1", "name1", "default",
+                                   buf, MAX_PATH, filename);
+    ok(ret == 4, "Expected 4, got %d\n", ret);
+    ok(!lstrcmpA(buf, "val1"), "Expected \"val1\", got \"%s\"\n", buf);
+
+    DeleteFileA(path);
+    DeleteFileA(filename);
+}
+
 START_TEST(profile)
 {
     test_profile_int();
@@ -704,4 +971,5 @@ START_TEST(profile)
     test_profile_delete_on_close();
     test_profile_refresh();
     test_GetPrivateProfileString();
+    test_cr();
 }
-- 
1.5.4.3


From xerox_xerox2000 at yahoo.co.uk  Sun Sep 14 03:18:41 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis. Lenders)
Date: Sun, 14 Sep 2008 08:18:41 +0000 (GMT)
Subject: howto fix bug 13462
Message-ID: <401182.27391.qm@web23201.mail.ird.yahoo.com>

Hi, we've been discussing in bug 13462 howto fix that bug, but in short i think we lack knowledge of how this should properly be fixed, and Erich suggested to take this to wine-devel.

I did some testing and this is a major bug, preventing the following apps from working: CDBurner XP, XML Notepad2007, Nasa WorldWind, FX_Composer(nvidia), Ninja Trader and probably a lot more .net applications.

I fixed up a patch  here http://bugs.winehq.org/attachment.cgi?id=15775, that lets the applications start fine, but i haven't got a clue if it's correct, and Erich said it probably isn't correct, so my question is: Does anyone of the developers (on ole32) have suggestions how to fix this bug properly? 
More info at http://bugs.winehq.org/show_bug.cgi?id=13462



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080914/2060b53c/attachment.htm 

From niko.lecam at gmail.com  Sun Sep 14 06:18:08 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Sun, 14 Sep 2008 13:18:08 +0200
Subject: Fwd: Testcase - a windows run, please?
In-Reply-To: <d7e62e980809140416x6ea2e150pa8d69e1e86457a99@mail.gmail.com>
References: <alpine.BSF.1.00.0809140217450.1986@anduin.net>
	<d7e62e980809140416x6ea2e150pa8d69e1e86457a99@mail.gmail.com>
Message-ID: <d7e62e980809140418t7fc31955scfffa745b1084c7f@mail.gmail.com>

(resent as I didn't cc to wine-devel)

Tested on win2k sp4 :
X:\>kernel32_crosstest.exe profile
profile: 202 tests executed (0 marked as todo, 0 failures), 0 skipped.

2008/9/14 Erik Inge Bols? <knan-wine at anduin.net>

> Could someone run this testcase on native windows for me, please? :)
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080914/2e056e55/attachment.htm 

From alex at thehandofagony.com  Sun Sep 14 07:18:29 2008
From: alex at thehandofagony.com (Alexander Nicolaysen =?iso-8859-1?q?S=F8rnes?=)
Date: Sun, 14 Sep 2008 14:18:29 +0200
Subject: Patchwatcher should ignore AppDB patches
Message-ID: <200809141418.30427.alex@thehandofagony.com>

I just sent a patch for the AppDB, and was told it didn't apply to Wine. That 
was never the intention, of course.

Perhaps it can ignore mails with [AppDB] in the subject line, or patches 
containing .php files?



Alexander N. S?rnes


From wine at mkarcher.dialup.fu-berlin.de  Sun Sep 14 08:58:57 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sun, 14 Sep 2008 15:58:57 +0200
Subject: kernel32: fix PROFILE_Load to handle mac line endings
In-Reply-To: <alpine.BSF.1.00.0809141443370.19429@anduin.net>
References: <alpine.BSF.1.00.0809141443370.19429@anduin.net>
Message-ID: <1221400737.32737.32.camel@hermes2.karcher.local>

Am Sonntag, den 14.09.2008, 14:48 +0200 schrieb Erik Inge Bols?:
> Fixes bug 15281. With testcase.
> @@ -407,6 +407,7 @@ static PROFILESECTION *PROFILE_Load(HANDLE hFile, ENCODING * pEncoding)
>      {
>          szLineStart = next_line;
>          next_line = memchrW(szLineStart, '\n', szEnd - szLineStart);
> +        if (!next_line) next_line = memchrW(szLineStart, '\r', szEnd - szLineStart);
>          if (!next_line) next_line = szEnd;
>          else next_line++;
>          szLineEnd = next_line;

This fails on files with mixed line endings. Alas, there is no mempbrk
or memcspn to help you scanning for both endings at the same time.

?> @@ -415,7 +416,7 @@ static PROFILESECTION *PROFILE_Load(HANDLE hFile, ENCODING * pEncoding)
>  
>          /* get rid of white space */
>          while (szLineStart < szLineEnd && PROFILE_isspaceW(*szLineStart)) szLineStart++;
> -        while ((szLineEnd > szLineStart) && ((szLineEnd[-1] == '\n') || PROFILE_isspaceW(szLineEnd[-1]))) szLineEnd--;
> +        while ((szLineEnd > szLineStart) && ((szLineEnd[-1] == '\n') || (szLineEnd[-1] == '\r') || PROFILE_isspaceW(szLineEnd[-1]))) szLineEnd--;
>  
>          if (szLineStart >= szLineEnd) continue;

This hunk is unneded. PROFILE_isspaceW already checks for \n and \r. The
already present check for '\n' could be removed, but that should be a
separate patch. I will send it (together with a cleanup in
PROFILE_isspaceW) after testing.
 

> @@ -694,6 +694,273 @@ static void test_GetPrivateProfileString(void)
>      DeleteFileA(filename);
>  }
>  
> +/* as above, but cr-only terminated lines */
> +static void test_cr(void)
> +{

[...]
Wouldn't it be sensible to factor out the common testing code, and just
pass the string that gets written to the file as parameter? (I didn't
check line-by-line that it matches, but the comment seems to implicate
it.) If you refactor, you could also add a test that uses mixed endings
(some \r, some \n, some \r\n).

Regards,
  Michael Karcher



From chmorgan at gmail.com  Sun Sep 14 09:08:52 2008
From: chmorgan at gmail.com (Chris Morgan)
Date: Sun, 14 Sep 2008 10:08:52 -0400
Subject: Patchwatcher should ignore AppDB patches
In-Reply-To: <200809141418.30427.alex@thehandofagony.com>
References: <200809141418.30427.alex@thehandofagony.com>
Message-ID: <f3f1b91a0809140708y5abae108tcc4e2794972f959d@mail.gmail.com>

On Sun, Sep 14, 2008 at 8:18 AM, Alexander Nicolaysen S?rnes
<alex at thehandofagony.com> wrote:
> I just sent a patch for the AppDB, and was told it didn't apply to Wine. That
> was never the intention, of course.
>
> Perhaps it can ignore mails with [AppDB] in the subject line, or patches
> containing .php files?
>
>
>
> Alexander N. S?rnes
>

Maybe there should be a separate appdb-patches mailing list. I've
found it difficult to to find appdb patches based on the [AppDB]
prefix since the appdb code uses that for other notification emails.

Chris


From alex at thehandofagony.com  Sun Sep 14 09:27:04 2008
From: alex at thehandofagony.com (Alexander Nicolaysen =?iso-8859-1?q?S=F8rnes?=)
Date: Sun, 14 Sep 2008 16:27:04 +0200
Subject: Patchwatcher should ignore AppDB patches
In-Reply-To: <f3f1b91a0809140708y5abae108tcc4e2794972f959d@mail.gmail.com>
References: <200809141418.30427.alex@thehandofagony.com>
	<f3f1b91a0809140708y5abae108tcc4e2794972f959d@mail.gmail.com>
Message-ID: <200809141627.05090.alex@thehandofagony.com>

P? S?ndag 14 september 2008 , 16:08:52 skrev Chris Morgan:
> On Sun, Sep 14, 2008 at 8:18 AM, Alexander Nicolaysen S?rnes
>
> <alex at thehandofagony.com> wrote:
> > I just sent a patch for the AppDB, and was told it didn't apply to Wine.
> > That was never the intention, of course.
> >
> > Perhaps it can ignore mails with [AppDB] in the subject line, or patches
> > containing .php files?
> >
> >
> >
> > Alexander N. S?rnes
>
> Maybe there should be a separate appdb-patches mailing list. I've
> found it difficult to to find appdb patches based on the [AppDB]
> prefix since the appdb code uses that for other notification emails.
>
> Chris



I agree, that would be a much better solution. :)


Alexander


From dmitry at codeweavers.com  Sun Sep 14 09:32:31 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 14 Sep 2008 23:32:31 +0900
Subject: [PATCH] pass correct buffersize to LCMapStringW
Message-ID: <AAAA584AB353407498B35FD932571031@DMITRY>

"Marcus Meissner" <marcus at jet.franken.de> wrote:

> diff --git a/dlls/kernel32/tests/locale.c b/dlls/kernel32/tests/locale.c
> index f792da2..a49953b 100644
> --- a/dlls/kernel32/tests/locale.c
> +++ b/dlls/kernel32/tests/locale.c
> @@ -1268,7 +1268,7 @@ static void test_LCMapStringW(void)
>     /* otherwise src == dst should fail */
>     SetLastError(0xdeadbeef);
>     ret = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY | LCMAP_UPPERCASE,
> -                       buf, 10, buf, sizeof(buf));
> +                       buf, 10, buf, sizeof(buf)/sizeof(WCHAR));
>     ok(GetLastError() == ERROR_INVALID_FLAGS /* NT */ ||
>        GetLastError() == ERROR_INVALID_PARAMETER /* Win9x */,
>        "unexpected error code %d\n", GetLastError());
> @@ -1276,40 +1276,40 @@ static void test_LCMapStringW(void)
> 
>     /* test whether '\0' is always appended */
>     ret = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY,
> -                       upper_case, -1, buf, sizeof(buf));
> +                       upper_case, -1, buf, sizeof(buf)/sizeof(WCHAR));
>     ok(ret, "LCMapStringW must succeed\n");
>     ret2 = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY,
> -                       upper_case, lstrlenW(upper_case), buf2, sizeof(buf2));
> +                       upper_case, lstrlenW(upper_case), buf2, sizeof(buf2)/sizeof(WCHAR));
>     ok(ret, "LCMapStringW must succeed\n");
>     ok(ret == ret2, "lengths of sort keys must be equal\n");
>     ok(!lstrcmpA(p_buf, p_buf2), "sort keys must be equal\n");
> 
>     /* test LCMAP_SORTKEY | NORM_IGNORECASE */
>     ret = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY | NORM_IGNORECASE,
> -                       upper_case, -1, buf, sizeof(buf));
> +                       upper_case, -1, buf, sizeof(buf)/sizeof(WCHAR));
>     ok(ret, "LCMapStringW must succeed\n");
>     ret2 = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY,
> -                       lower_case, -1, buf2, sizeof(buf2));
> +                       lower_case, -1, buf2, sizeof(buf2)/sizeof(WCHAR));
>     ok(ret2, "LCMapStringW must succeed\n");
>     ok(ret == ret2, "lengths of sort keys must be equal\n");
>     ok(!lstrcmpA(p_buf, p_buf2), "sort keys must be equal\n");
> 
>     /* test LCMAP_SORTKEY | NORM_IGNORENONSPACE */
>     ret = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY | NORM_IGNORENONSPACE,
> -                       lower_case, -1, buf, sizeof(buf));
> +                       lower_case, -1, buf, sizeof(buf)/sizeof(WCHAR));
>     ok(ret, "LCMapStringW must succeed\n");
>     ret2 = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY,
> -                       lower_case, -1, buf2, sizeof(buf2));
> +                       lower_case, -1, buf2, sizeof(buf2)/sizeof(WCHAR));
>     ok(ret2, "LCMapStringW must succeed\n");
>     ok(ret == ret2, "lengths of sort keys must be equal\n");
>     ok(!lstrcmpA(p_buf, p_buf2), "sort keys must be equal\n");
> 
>     /* test LCMAP_SORTKEY | NORM_IGNORESYMBOLS */
>     ret = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY | NORM_IGNORESYMBOLS,
> -                       lower_case, -1, buf, sizeof(buf));
> +                       lower_case, -1, buf, sizeof(buf)/sizeof(WCHAR));
>     ok(ret, "LCMapStringW must succeed\n");
>     ret2 = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY,
> -                       symbols_stripped, -1, buf2, sizeof(buf2));
> +                       symbols_stripped, -1, buf2, sizeof(buf2)/sizeof(WCHAR));
>     ok(ret2, "LCMapStringW must succeed\n");
>     ok(ret == ret2, "lengths of sort keys must be equal\n");
>     ok(!lstrcmpA(p_buf, p_buf2), "sort keys must be equal\n");

LCMAP_SORTKEY takes the target buffer size in bytes in both A and W versions.

> @@ -1332,7 +1332,7 @@ static void test_LCMapStringW(void)
> 
>     /* test srclen = 0 */
>     SetLastError(0xdeadbeef);
> -    ret = LCMapStringW(LOCALE_USER_DEFAULT, 0, upper_case, 0, buf, sizeof(buf));
> +    ret = LCMapStringW(LOCALE_USER_DEFAULT, 0, upper_case, 0, buf, sizeof(buf)/sizeof(WCHAR));
>     ok(!ret, "LCMapStringW should fail with srclen = 0\n");
>     ok(GetLastError() == ERROR_INVALID_PARAMETER,
>        "unexpected error code %d\n", GetLastError());

The size of the target buffer doesn't matter at all in this case, since
the API is supposed to fail due to source length being 0.

-- 
Dmitry.


From wine at mkarcher.dialup.fu-berlin.de  Sun Sep 14 09:52:46 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sun, 14 Sep 2008 16:52:46 +0200
Subject: [PATCH] pass correct buffersize to LCMapStringW
In-Reply-To: <AAAA584AB353407498B35FD932571031@DMITRY>
References: <AAAA584AB353407498B35FD932571031@DMITRY>
Message-ID: <1221403966.32737.43.camel@hermes2.karcher.local>

Am Sonntag, den 14.09.2008, 23:32 +0900 schrieb Dmitry Timoshkov:
> >     ok(ret, "LCMapStringW must succeed\n");
> >     ret2 = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY,
> > -                       symbols_stripped, -1, buf2, sizeof(buf2));
> > +                       symbols_stripped, -1, buf2, sizeof(buf2)/sizeof(WCHAR));
> >     ok(ret2, "LCMapStringW must succeed\n");
> >     ok(ret == ret2, "lengths of sort keys must be equal\n");
> >     ok(!lstrcmpA(p_buf, p_buf2), "sort keys must be equal\n");
> LCMAP_SORTKEY takes the target buffer size in bytes in both A and W versions.

Do you have any references for this claim? Wine doesn't implement it,
MSDN mentions only characters and there is no Wine API test to prove
your statement.

> > -    ret = LCMapStringW(LOCALE_USER_DEFAULT, 0, upper_case, 0, buf, sizeof(buf));
> > +    ret = LCMapStringW(LOCALE_USER_DEFAULT, 0, upper_case, 0, buf, sizeof(buf)/sizeof(WCHAR));
> >     ok(!ret, "LCMapStringW should fail with srclen = 0\n");
> The size of the target buffer doesn't matter at all in this case, since
> the API is supposed to fail due to source length being 0.

Even if the size doesn't matter, this line should get fixed, as the Wine
tests are a kind of of Win32 API reference by example. IMHO you
shouldn't include such misleading parameters as the size in the wrong
unit into API usage examples.

Regards,
  Michael Karcher



From knan-wine at anduin.net  Sun Sep 14 09:56:46 2008
From: knan-wine at anduin.net (=?ISO-8859-15?Q?Erik_Inge_Bols=F8?=)
Date: Sun, 14 Sep 2008 16:56:46 +0200 (CEST)
Subject: kernel32: fix PROFILE_Load to handle mac line endings
In-Reply-To: <1221400737.32737.32.camel@hermes2.karcher.local>
References: <alpine.BSF.1.00.0809141443370.19429@anduin.net>
	<1221400737.32737.32.camel@hermes2.karcher.local>
Message-ID: <alpine.BSF.1.00.0809141643080.27995@anduin.net>

On Sun, 14 Sep 2008, Michael Karcher wrote:
> This hunk is unneded. PROFILE_isspaceW already checks for \n and \r. The
> already present check for '\n' could be removed, but that should be a
> separate patch. I will send it (together with a cleanup in
> PROFILE_isspaceW) after testing.

Thanks. Indeed, tests still pass. Will remove the hunk and resend.

> [...]
> Wouldn't it be sensible to factor out the common testing code, and just
> pass the string that gets written to the file as parameter? (I didn't
> check line-by-line that it matches, but the comment seems to implicate
> it.) If you refactor, you could also add a test that uses mixed endings
> (some \r, some \n, some \r\n).

I'm just trying for a minimal fix and simple test for \r-terminated 
ini files here. If you want to clean it up further, feel free.

--
-erik	http://useofwords.blogspot.com/


From dmitry at codeweavers.com  Sun Sep 14 10:01:06 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 15 Sep 2008 00:01:06 +0900
Subject: [PATCH] pass correct buffersize to LCMapStringW
References: <AAAA584AB353407498B35FD932571031@DMITRY>
	<1221403966.32737.43.camel@hermes2.karcher.local>
Message-ID: <02E418FE9E004B9185720D9A70E3025F@DMITRY>

"Michael Karcher" <wine at mkarcher.dialup.fu-berlin.de> wrote:

>> >     ok(ret, "LCMapStringW must succeed\n");
>> >     ret2 = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY,
>> > -                       symbols_stripped, -1, buf2, sizeof(buf2));
>> > +                       symbols_stripped, -1, buf2, sizeof(buf2)/sizeof(WCHAR));
>> >     ok(ret2, "LCMapStringW must succeed\n");
>> >     ok(ret == ret2, "lengths of sort keys must be equal\n");
>> >     ok(!lstrcmpA(p_buf, p_buf2), "sort keys must be equal\n");
>> LCMAP_SORTKEY takes the target buffer size in bytes in both A and W versions.
> 
> Do you have any references for this claim? Wine doesn't implement it,
> MSDN mentions only characters and there is no Wine API test to prove
> your statement.

Wine does implement that, and MSDN clearly describes the case of
generating a sort key too.

>> > -    ret = LCMapStringW(LOCALE_USER_DEFAULT, 0, upper_case, 0, buf, sizeof(buf));
>> > +    ret = LCMapStringW(LOCALE_USER_DEFAULT, 0, upper_case, 0, buf, sizeof(buf)/sizeof(WCHAR));
>> >     ok(!ret, "LCMapStringW should fail with srclen = 0\n");
>> The size of the target buffer doesn't matter at all in this case, since
>> the API is supposed to fail due to source length being 0.
> 
> Even if the size doesn't matter, this line should get fixed, as the Wine
> tests are a kind of of Win32 API reference by example. IMHO you
> shouldn't include such misleading parameters as the size in the wrong
> unit into API usage examples.

This particular test doesn't depend on the size of the target buffer,
be it 0, -1, or whatever.

-- 
Dmitry.


From wine at mkarcher.dialup.fu-berlin.de  Sun Sep 14 10:12:19 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sun, 14 Sep 2008 17:12:19 +0200
Subject: [PATCH] pass correct buffersize to LCMapStringW
In-Reply-To: <02E418FE9E004B9185720D9A70E3025F@DMITRY>
References: <AAAA584AB353407498B35FD932571031@DMITRY>
	<1221403966.32737.43.camel@hermes2.karcher.local>
	<02E418FE9E004B9185720D9A70E3025F@DMITRY>
Message-ID: <1221405139.32737.49.camel@hermes2.karcher.local>

Am Montag, den 15.09.2008, 00:01 +0900 schrieb Dmitry Timoshkov:
> "Michael Karcher" <wine at mkarcher.dialup.fu-berlin.de> wrote:
> >> LCMAP_SORTKEY takes the target buffer size in bytes in both A and W versions. 
> > Do you have any references for this claim? Wine doesn't implement it,
> > MSDN mentions only characters and there is no Wine API test to prove
> > your statement.
> Wine does implement that, and MSDN clearly describes the case of
> generating a sort key too.
Ugh. Sorry. Now I see. Ugly API, but Microsofts fault. Sort key
generation and string mapping shouldn't have been in the same function
at first.

Regards,
  Michael Karcher



From marcus at   Sun Sep 14 11:00:59 2008
From: marcus at  (Marcus Meissner)
Date: Sun, 14 Sep 2008 18:00:59 +0200
Subject: [PATCH] pass correct buffersize to LCMapStringW
In-Reply-To: <AAAA584AB353407498B35FD932571031@DMITRY>
References: <AAAA584AB353407498B35FD932571031@DMITRY>
Message-ID: <20080914160059.GA4448@rennboot>

On Sun, Sep 14, 2008 at 11:32:31PM +0900, Dmitry Timoshkov wrote:
> "Marcus Meissner" <marcus at jet.franken.de> wrote:
>
>> diff --git a/dlls/kernel32/tests/locale.c b/dlls/kernel32/tests/locale.c
>> index f792da2..a49953b 100644
>> --- a/dlls/kernel32/tests/locale.c
>> +++ b/dlls/kernel32/tests/locale.c
>> @@ -1268,7 +1268,7 @@ static void test_LCMapStringW(void)
>>     /* otherwise src == dst should fail */
>>     SetLastError(0xdeadbeef);
>>     ret = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY | LCMAP_UPPERCASE,
>> -                       buf, 10, buf, sizeof(buf));
>> +                       buf, 10, buf, sizeof(buf)/sizeof(WCHAR));
>>     ok(GetLastError() == ERROR_INVALID_FLAGS /* NT */ ||
>>        GetLastError() == ERROR_INVALID_PARAMETER /* Win9x */,
>>        "unexpected error code %d\n", GetLastError());
>> @@ -1276,40 +1276,40 @@ static void test_LCMapStringW(void)
>>
>>     /* test whether '\0' is always appended */
>>     ret = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY,
>> -                       upper_case, -1, buf, sizeof(buf));
>> +                       upper_case, -1, buf, sizeof(buf)/sizeof(WCHAR));
>>     ok(ret, "LCMapStringW must succeed\n");
>>     ret2 = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY,
>> -                       upper_case, lstrlenW(upper_case), buf2, sizeof(buf2));
>> +                       upper_case, lstrlenW(upper_case), buf2, sizeof(buf2)/sizeof(WCHAR));
>>     ok(ret, "LCMapStringW must succeed\n");
>>     ok(ret == ret2, "lengths of sort keys must be equal\n");
>>     ok(!lstrcmpA(p_buf, p_buf2), "sort keys must be equal\n");
>>
>>     /* test LCMAP_SORTKEY | NORM_IGNORECASE */
>>     ret = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY | NORM_IGNORECASE,
>> -                       upper_case, -1, buf, sizeof(buf));
>> +                       upper_case, -1, buf, sizeof(buf)/sizeof(WCHAR));
>>     ok(ret, "LCMapStringW must succeed\n");
>>     ret2 = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY,
>> -                       lower_case, -1, buf2, sizeof(buf2));
>> +                       lower_case, -1, buf2, sizeof(buf2)/sizeof(WCHAR));
>>     ok(ret2, "LCMapStringW must succeed\n");
>>     ok(ret == ret2, "lengths of sort keys must be equal\n");
>>     ok(!lstrcmpA(p_buf, p_buf2), "sort keys must be equal\n");
>>
>>     /* test LCMAP_SORTKEY | NORM_IGNORENONSPACE */
>>     ret = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY | NORM_IGNORENONSPACE,
>> -                       lower_case, -1, buf, sizeof(buf));
>> +                       lower_case, -1, buf, sizeof(buf)/sizeof(WCHAR));
>>     ok(ret, "LCMapStringW must succeed\n");
>>     ret2 = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY,
>> -                       lower_case, -1, buf2, sizeof(buf2));
>> +                       lower_case, -1, buf2, sizeof(buf2)/sizeof(WCHAR));
>>     ok(ret2, "LCMapStringW must succeed\n");
>>     ok(ret == ret2, "lengths of sort keys must be equal\n");
>>     ok(!lstrcmpA(p_buf, p_buf2), "sort keys must be equal\n");
>>
>>     /* test LCMAP_SORTKEY | NORM_IGNORESYMBOLS */
>>     ret = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY | NORM_IGNORESYMBOLS,
>> -                       lower_case, -1, buf, sizeof(buf));
>> +                       lower_case, -1, buf, sizeof(buf)/sizeof(WCHAR));
>>     ok(ret, "LCMapStringW must succeed\n");
>>     ret2 = LCMapStringW(LOCALE_USER_DEFAULT, LCMAP_SORTKEY,
>> -                       symbols_stripped, -1, buf2, sizeof(buf2));
>> +                       symbols_stripped, -1, buf2, sizeof(buf2)/sizeof(WCHAR));
>>     ok(ret2, "LCMapStringW must succeed\n");
>>     ok(ret == ret2, "lengths of sort keys must be equal\n");
>>     ok(!lstrcmpA(p_buf, p_buf2), "sort keys must be equal\n");
>
> LCMAP_SORTKEY takes the target buffer size in bytes in both A and W versions.

Thats a bad API then :(

>> @@ -1332,7 +1332,7 @@ static void test_LCMapStringW(void)
>>
>>     /* test srclen = 0 */
>>     SetLastError(0xdeadbeef);
>> -    ret = LCMapStringW(LOCALE_USER_DEFAULT, 0, upper_case, 0, buf, sizeof(buf));
>> +    ret = LCMapStringW(LOCALE_USER_DEFAULT, 0, upper_case, 0, buf, sizeof(buf)/sizeof(WCHAR));
>>     ok(!ret, "LCMapStringW should fail with srclen = 0\n");
>>     ok(GetLastError() == ERROR_INVALID_PARAMETER,
>>        "unexpected error code %d\n", GetLastError());
>
> The size of the target buffer doesn't matter at all in this case, since
> the API is supposed to fail due to source length being 0.

Hmm.

Have to adjust my tests then.

Ciao, Marcus


From paul.vriens.wine at gmail.com  Sun Sep 14 14:36:23 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Sun, 14 Sep 2008 21:36:23 +0200
Subject: kernel32: fix PROFILE_Load to handle mac line endings (try 2)
In-Reply-To: <alpine.BSF.1.00.0809141652190.28611@anduin.net>
References: <alpine.BSF.1.00.0809141652190.28611@anduin.net>
Message-ID: <48CD67B7.4080204@gmail.com>

Erik Inge Bols? wrote:
> Fixes bug 15281. With testcase.
> diff --git a/dlls/kernel32/tests/profile.c b/dlls/kernel32/tests/profile.c
> index 8a3e83b..1cc963c 100644
> --- a/dlls/kernel32/tests/profile.c
> +++ b/dlls/kernel32/tests/profile.c
> @@ -694,6 +694,273 @@ static void test_GetPrivateProfileString(void)
>      DeleteFileA(filename);
>  }
>  
> +/* as above, but cr-only terminated lines */
> +static void test_cr(void)
> +{

As you've stated this is exactly the same code (260 or so lines) with 
only the content struct being different.

I think it's better to rewrite the current test_GetPrivateProfileString 
to take content as a parameter and call it with both types of content.

-- 
Cheers,

Paul.


From niko.lecam at gmail.com  Sun Sep 14 19:25:08 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 15 Sep 2008 02:25:08 +0200
Subject: comctl32: Fix a failing test for some platforms
Message-ID: <d7e62e980809141725lee051aew321a8393b7b310a7@mail.gmail.com>

Hi James,

This monthcal test fails on my win2k box (w2k-sp4-fr) before and after your
patch.
I did search other similar failure where WM_QUERYNEWPALETTE comes right
after the WM_CREATE message but can't find one. So I assume your patch was
to fix the failure on my box. But in my case the WM_QUERYNEWPALETTE comes
between the two WM_WINDOWPOSCHANGING message.

I was just about to send a patch to fix this just moving your new line a
little bit down in the sequence but I prefer to be sure. If there is
platforms where WM_QUERYNEWPALETTE comes just after the WM_CREATE message I
can leave it here and add a new optional one between the two
WM_WINDOWPOSCHANGING messages, it won't hurt.

regards,
Nicolas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080915/338cc662/attachment.htm 

From jhawkins at codeweavers.com  Sun Sep 14 19:37:48 2008
From: jhawkins at codeweavers.com (James Hawkins)
Date: Sun, 14 Sep 2008 19:37:48 -0500
Subject: comctl32: Fix a failing test for some platforms
In-Reply-To: <d7e62e980809141725lee051aew321a8393b7b310a7@mail.gmail.com>
References: <d7e62e980809141725lee051aew321a8393b7b310a7@mail.gmail.com>
Message-ID: <22821af30809141737w13fc57fcw82399c771244f189@mail.gmail.com>

On Sun, Sep 14, 2008 at 7:25 PM, Nicolas Le Cam <niko.lecam at gmail.com> wrote:
> Hi James,
>
> This monthcal test fails on my win2k box (w2k-sp4-fr) before and after your
> patch.
> I did search other similar failure where WM_QUERYNEWPALETTE comes right
> after the WM_CREATE message but can't find one. So I assume your patch was
> to fix the failure on my box. But in my case the WM_QUERYNEWPALETTE comes
> between the two WM_WINDOWPOSCHANGING message.
>
> I was just about to send a patch to fix this just moving your new line a
> little bit down in the sequence but I prefer to be sure. If there is
> platforms where WM_QUERYNEWPALETTE comes just after the WM_CREATE message I
> can leave it here and add a new optional one between the two
> WM_WINDOWPOSCHANGING messages, it won't hurt.
>

I don't know, that was way too many robot patches ago to remember.

-- 
James Hawkins


From niko.lecam at gmail.com  Sun Sep 14 19:42:21 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 15 Sep 2008 02:42:21 +0200
Subject: comctl32: Fix a failing test for some platforms
In-Reply-To: <22821af30809141737w13fc57fcw82399c771244f189@mail.gmail.com>
References: <d7e62e980809141725lee051aew321a8393b7b310a7@mail.gmail.com>
	<22821af30809141737w13fc57fcw82399c771244f189@mail.gmail.com>
Message-ID: <d7e62e980809141742j17b61567k5f0858e65c047e77@mail.gmail.com>

Ok I will add a new line without removing yours as it definitely won't hurt.

Nicolas Le Cam

2008/9/15 James Hawkins <jhawkins at codeweavers.com>:
>
> I don't know, that was way too many robot patches ago to remember.
>
> --
> James Hawkins
>


From jhawkins at codeweavers.com  Sun Sep 14 19:46:14 2008
From: jhawkins at codeweavers.com (James Hawkins)
Date: Sun, 14 Sep 2008 19:46:14 -0500
Subject: comctl32: Fix a failing test for some platforms
In-Reply-To: <d7e62e980809141742j17b61567k5f0858e65c047e77@mail.gmail.com>
References: <d7e62e980809141725lee051aew321a8393b7b310a7@mail.gmail.com>
	<22821af30809141737w13fc57fcw82399c771244f189@mail.gmail.com>
	<d7e62e980809141742j17b61567k5f0858e65c047e77@mail.gmail.com>
Message-ID: <22821af30809141746h31d58addkd8de9903548c54bc@mail.gmail.com>

On Sun, Sep 14, 2008 at 7:42 PM, Nicolas Le Cam <niko.lecam at gmail.com> wrote:
> Ok I will add a new line without removing yours as it definitely won't hurt.
>

No, you should probably just move it...if we then see another failing
result, we can add it back.  I probably just put it in the wrong
place.

-- 
James Hawkins


From niko.lecam at gmail.com  Sun Sep 14 19:47:14 2008
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 15 Sep 2008 02:47:14 +0200
Subject: comctl32: Fix a failing test for some platforms
In-Reply-To: <22821af30809141746h31d58addkd8de9903548c54bc@mail.gmail.com>
References: <d7e62e980809141725lee051aew321a8393b7b310a7@mail.gmail.com>
	<22821af30809141737w13fc57fcw82399c771244f189@mail.gmail.com>
	<d7e62e980809141742j17b61567k5f0858e65c047e77@mail.gmail.com>
	<22821af30809141746h31d58addkd8de9903548c54bc@mail.gmail.com>
Message-ID: <d7e62e980809141747t1f5fd73fk4de73dd43f4dd106@mail.gmail.com>

OK will do that, thanks.

2008/9/15 James Hawkins <jhawkins at codeweavers.com>:
> On Sun, Sep 14, 2008 at 7:42 PM, Nicolas Le Cam <niko.lecam at gmail.com> wrote:
>> Ok I will add a new line without removing yours as it definitely won't hurt.
>>
>
> No, you should probably just move it...if we then see another failing
> result, we can add it back.  I probably just put it in the wrong
> place.
>
> --
> James Hawkins
>


From dmitry at codeweavers.com  Sun Sep 14 20:26:52 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 15 Sep 2008 10:26:52 +0900
Subject: shlwapi: Implement SHSendMessageBroadcastW
References: <1221426690.7952.5.camel@p4.lan>
Message-ID: <79DF0094F5AC4F349DCBE41128CA8376@DMITRY>

"Detlef Riekenberg" <wine.dev at web.de> wrote:

> inetcpl crash, when setting a new Homepage.
> (need URLSubRegQueryA and ParseURLFromOutsideSourceW)
> 
> MSDN documented SHSendMessageBroadcast to be the same as
> SendMessage(HWND_BROADCAST,...)

Why not implement SHSendMessageBroadcastA at the same time?

-- 
Dmitry.


From scott at open-vote.org  Mon Sep 15 01:41:21 2008
From: scott at open-vote.org (Scott Ritchie)
Date: Sun, 14 Sep 2008 23:41:21 -0700
Subject: Patchwatcher should ignore AppDB patches
In-Reply-To: <f3f1b91a0809140708y5abae108tcc4e2794972f959d@mail.gmail.com>
References: <200809141418.30427.alex@thehandofagony.com>
	<f3f1b91a0809140708y5abae108tcc4e2794972f959d@mail.gmail.com>
Message-ID: <48CE0391.3070400@open-vote.org>

Chris Morgan wrote:
> On Sun, Sep 14, 2008 at 8:18 AM, Alexander Nicolaysen S?rnes
> <alex at thehandofagony.com> wrote:
>> I just sent a patch for the AppDB, and was told it didn't apply to Wine. That
>> was never the intention, of course.
>>
>> Perhaps it can ignore mails with [AppDB] in the subject line, or patches
>> containing .php files?
>>
>>
>>
>> Alexander N. S?rnes
>>
> 
> Maybe there should be a separate appdb-patches mailing list. I've
> found it difficult to to find appdb patches based on the [AppDB]
> prefix since the appdb code uses that for other notification emails.
> 
> Chris
> 
> 

Would it be appropriate to have a separate website-patches as well?

Thanks,
Scott Ritchie


From austinenglish at gmail.com  Mon Sep 15 01:44:16 2008
From: austinenglish at gmail.com (Austin English)
Date: Mon, 15 Sep 2008 01:44:16 -0500
Subject: Patchwatcher should ignore AppDB patches
In-Reply-To: <48CE0391.3070400@open-vote.org>
References: <200809141418.30427.alex@thehandofagony.com>
	<f3f1b91a0809140708y5abae108tcc4e2794972f959d@mail.gmail.com>
	<48CE0391.3070400@open-vote.org>
Message-ID: <b6bb06270809142344n5b522b14h3caae18a0fbd8a5b@mail.gmail.com>

On Mon, Sep 15, 2008 at 1:41 AM, Scott Ritchie <scott at open-vote.org> wrote:
> Chris Morgan wrote:
>> On Sun, Sep 14, 2008 at 8:18 AM, Alexander Nicolaysen S?rnes
>> <alex at thehandofagony.com> wrote:
>>> I just sent a patch for the AppDB, and was told it didn't apply to Wine. That
>>> was never the intention, of course.
>>>
>>> Perhaps it can ignore mails with [AppDB] in the subject line, or patches
>>> containing .php files?
>>>
>>>
>>>
>>> Alexander N. S?rnes
>>>
>>
>> Maybe there should be a separate appdb-patches mailing list. I've
>> found it difficult to to find appdb patches based on the [AppDB]
>> prefix since the appdb code uses that for other notification emails.
>>
>> Chris
>>
>>
>
> Would it be appropriate to have a separate website-patches as well?
>
> Thanks,
> Scott Ritchie
>
>
>

Better yet:

wine-patches at winehq.org - for wine.git patches

wine-else at winehq.org - for AppDB/website/tools/documentation/bugzilla

From julliard at winehq.org  Mon Sep 15 06:20:42 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 15 Sep 2008 13:20:42 +0200
Subject: oleaut32[3/3]: VT_USERDEFINED records are passed by value (with
	testcase, fixes bug #14639)
In-Reply-To: <48CC393E.3090609@zalewski.pl> (=?utf-8?Q?=22Miko=C5=82aj?=
	Zalewski"'s message of "Sun, 14 Sep 2008 00:05:50 +0200")
References: <48CC393E.3090609@zalewski.pl>
Message-ID: <87iqsxirjp.fsf@wine.dyndns.org>

Miko?aj Zalewski <mikolaj at zalewski.pl> writes:

> +const MYSTRUCT MYSTRUCT_BYVAL = {0x12345678, 0xdeadbeef98765432ULL};
> +const MYSTRUCT MYSTRUCT_BYPTR = {0x91827364, 0x8877665544332211ULL};
> +const MYSTRUCT MYSTRUCT_ARRAY[5] = {
> +    {0x1a1b1c1d, 0x1e1f101112131415ULL},
> +    {0x2a2b2c2d, 0x2e2f202122232425ULL},
> +    {0x3a3b3c3d, 0x3e3f303132333435ULL},
> +    {0x4a4b4c4d, 0x4e4f404142434445ULL},
> +    {0x5a5b5c5d, 0x5e5f505152535455ULL},
> +};

long long constants are not portable, please avoid them.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Mon Sep 15 06:21:40 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 15 Sep 2008 13:21:40 +0200
Subject: winemenubuilder: eliminate wineshelllink (try 4)
In-Reply-To: <9e89675b0809131102p40ed5fd5m22e324d53fe1123d@mail.gmail.com>
	(Damjan Jovanovic's message of "Sat, 13 Sep 2008 20:02:21 +0200")
References: <9e89675b0809131102p40ed5fd5m22e324d53fe1123d@mail.gmail.com>
Message-ID: <87bpypiri3.fsf@wine.dyndns.org>

"Damjan Jovanovic" <damjan.jov at gmail.com> writes:

> +            char dir_file_name[MAX_PATH];
> +            struct stat st;
> +            name[i] = 0;
> +            fprintf(tempfile, "  <Menu>\n");
> +            fprintf(tempfile, "    <Name>%s%s</Name>\n", count ? "" : "wine-", name);
> +            fprintf(tempfile, "    <Directory>%s%s.directory</Directory>\n", count ? "" : "wine-", name);
> +            snprintf(dir_file_name, sizeof(dir_file_name), "%s/desktop-directories/%s%s.directory",
> +                     xdg_data_dir, count ? "" : "wine-", name);

You still have a MAX_PATH buffer here for a Unix file name.

-- 
Alexandre Julliard
julliard at winehq.org


From robertshearman at gmail.com  Mon Sep 15 06:58:31 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Mon, 15 Sep 2008 12:58:31 +0100
Subject: kernel32: Implemented GetSystemTimes
In-Reply-To: <48CC6203.1050503@pcalpha.com>
References: <48CC6203.1050503@pcalpha.com>
Message-ID: <1096648c0809150458h1012431axf36b26788a5bdf04@mail.gmail.com>

2008/9/14 Martin Bailey <martin at pcalpha.com>:
> +VOID WINAPI GetSystemTimes(
> +    LPFILETIME lpIdleTime,
> +    LPFILETIME lpKernelTime,
> +    LPFILETIME lpUserTime)
> +{
> +    struct tms tms;
> +    times(&tms);
> +    /* FIXME: Calculate based on Idle process time
> +    if (lpIdleTime)
> +        TIME_ClockTimeToFileTime(tms.tms_utime+tms.tms_stime,lpIdleTime);
> +    */

You still have to set lpIdleTime to something, even if it isn't
implemented yet, as applications will expect the value to be
initialised.

-- 
Rob Shearman


From robertshearman at gmail.com  Mon Sep 15 07:00:48 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Mon, 15 Sep 2008 13:00:48 +0100
Subject: howto fix bug 13462
In-Reply-To: <401182.27391.qm@web23201.mail.ird.yahoo.com>
References: <401182.27391.qm@web23201.mail.ird.yahoo.com>
Message-ID: <1096648c0809150500p7eed06edsa99831260aa4f83@mail.gmail.com>

2008/9/14 Louis. Lenders <xerox_xerox2000 at yahoo.co.uk>:
> Hi, we've been discussing in bug 13462 howto fix that bug, but in short i
> think we lack knowledge of how this should properly be fixed, and Erich
> suggested to take this to wine-devel.
>
> I did some testing and this is a major bug, preventing the following apps
> from working: CDBurner XP, XML Notepad2007, Nasa WorldWind,
> FX_Composer(nvidia), Ninja Trader and probably a lot more .net applications.
>
> I fixed up a patch  here http://bugs.winehq.org/attachment.cgi?id=15775,
> that lets the applications start fine, but i haven't got a clue if it's
> correct, and Erich said it probably isn't correct, so my question is: Does
> anyone of the developers (on ole32) have suggestions how to fix this bug
> properly?
> More info at http://bugs.winehq.org/show_bug.cgi?id=13462

I suggest you write a test case that replicates what the application
does and either send it to wine-patches with appropriate todo_wine's
or attach it to the bug.

It might help you understand what needs to be done or it will help
someone else implement the functionality that is causing the
application to fail.

-- 
Rob Shearman


From boaz at electrozaur.com  Sun Sep 14 05:24:19 2008
From: boaz at electrozaur.com (Boaz Harrosh)
Date: Sun, 14 Sep 2008 13:24:19 +0300
Subject: Debugging Wine thoughts
In-Reply-To: <8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>
References: <a71bd89a0809091853w16c4f78dwf9120cd05f35233e@mail.gmail.com>	<48C7B666.9060601@zacbrown.org>
	<8CAE16F5B96B607-7FC-22@webmail-me18.sysops.aol.com>
Message-ID: <48CCE653.7080307@electrozaur.com>

celticht32 at aol.com wrote:
> Dan / All,
> I think what the guy was asking on improving winedbg is to have some
> sort of visual debugger much like VC/C++ , Eclipse,
> Borland C++ or the like... Where you can step through the code (seeing
> the whole thing like any visual debugger). 
> Then when looking at stacks you  click on a variable or stack and it
> either winds it back or display's it. 
> 
> Below is my thoughts on what would be a nice to have in some form of
> Debugger / Gui Debugger for Wine
> 
> So my wish list would be:
> 1) Some form of a Standard Gui Debugger
> 2) A way to select  the debug flags used with an explanation of what
> each is for... +sed is for this +relay does that...etc....  
> 3) When you do +relay you could open separate output windows for each
> thread
> 4) The ability to turn each of the +relay wine thread output on or off...
> 4) Currently Wading through a relay log is a real pain and in some cases
> it prevents the problem from occuring.
>     Time outs because of too much data being collected and then having
> to wade through and determine what to and not to turn off.
>     So a note or best practice somewhere showing the heavy hitters in a
> +relay log  and turn them off by default.  However, note
>     somewhere saying  if +relay doesnt give enough information then turn
> on just these flags and run. That way we are not managing
>     flag lists when trying to figure out whats going wrong in an
> application. IMHO +relay is too unweldly and turning each flag on
>     individually is as well, so there needs to be some sort of happy
> medium somewhere.
> 5) A window with a list of the important wine structures or resources
> that can be watched as the application runs.
> 6) Source code debugging in the GUI with step through, break points,
> etc..( not like now in winedbg but more like one of the GUI's mentioned
> before)
> 7) Loading of application from gui debugger and run it
> 8) Ability to look at a stack and backtrace in the GUI
> 9) Value Watches within the GUI.
> 10) Code Checking
>       Some sort of bounds checking...
>       Uninitialized variable checking....
>       Unreachable Code Checking
> 11) Use the GUI to help enforce the Wine Coding standard.. most modern
> GUI environments let you specify a style of coding.
> This would help the new people understand and follow the coding
> standards set up... instead of guessing like they do now.
> 12) Online help / Context help...  point to the IC in the wiki... lots
> of good stuff there... just hard to find sometimes....
> 13) Integration with bugzilla... they find a bug... they create it in
> the GUI.. dump out the screen, stack and the like... so some
> of the base information is collected instead of wasting time back and
> forth and having so many invalid bugs. Again this format
> can be enforced through coding style templates... you want to submit a
> bug here is what you do... check boxes to include things...
> like I said screen shots... logs, traces, variables, hardware config, etc...
> 14) Integration with GIT... check and see if there is a new tree out
> there.. if so... flag it and git it...
> 15) Link to whats fixed in the new GIT tree... or a list of it...
> 16) Link to Dan's patchwatcher status... (kinda a workflow sort of
> thing) to know whats good and bad...
> 17) Generation of the GIT patch and then mail it to the list through a
> button...
> 18) GIT integration
> 
> You have to remember guy's alot of the new people coming in are not old
> timers like some of us who grew up in a non-gui
> world.. Like it or not  they are used to doing things in certain ways
> and I think we could get alot more people looking at
> bugs and helping fix them if we started thinking of something along
> these lines. This of course is not a complete list...
> And I am sure this is going to start a flame war or something close to
> it.. But I think this might be a good next step for something
> like the summer of code people to do.. or whomever maintains the wine
> debugger to think seriously about.
> 
> Most of these things I think could be implemented using the current wine
> debugger with some form of pipe between it and the GUI.
> That way the 'purists' can still debug using winedebug like now and the
> new people who choose to can use the GUI?
> 
> Thoughts????????????????????????????????
> 
> 

I had grate success in the past with debugging windows programs using
the --gdb mode under Kdevelop . Quote: "WineDbg can act as a remote 
monitor for GDB" this is done with the --gdb switch.
Read documentation about how to do this. Since --gdb gives you a remote
gdb target, then a full screen debugger based on gdb like Kdevelop feels
right at home. And you can see/debug both your Windows as well as wine 
source code. Also code that you have compiled with msvc++.

The only problem is that you do not have all the windowism
goodies winedbg gives you. I have once tried to hack CodeBlocks, to spawn
winedbg instead of gdb. But they are painfully not "output" compatible.
Painfully I mean that they are very close, but different enough to break
the gdb-output parsers. The easiest way would be to fix winedbg and submit
patches but I never got to that.

You might also get lucky with mingw based gui-debuggers. But you will not
be able to debug msvc++ compiled code. Just like on windows.

> Problems I have noticed when debugging...
> If I kill (press the X button or close it from the task bar) the wine
> application, Wine does not clean up from itself... it leaves the
> wine mount daemon running. so I have to kill all the wine processes
> before I can restart wine. Otherwise any windows
> application which loads another application fails to start IE a game
> with a loader which then starts the game (I have found this
> in alot of MMO's where you have some form of login screen / loader which
> then loads in the actual game) (and no you cant
> always just call the main exe)
> 
> Question :
> Why does wine have to allocate all its memory at startup? re... the
> issue that is causing the ATI drivers to have such
> a fuss....  why not just allocate as needed? or have the ability (if its
> not there already) to specify the total amount of memory
> which is available to the wine process and limit wine to just that
> ammount of memory (kind of like the way most VM machines
> have the option of setting the maximum amount of memory which is available).
> 

Free Life
Boaz


From fgouget at free.fr  Mon Sep 15 08:07:11 2008
From: fgouget at free.fr (Francois Gouget)
Date: Mon, 15 Sep 2008 15:07:11 +0200 (CEST)
Subject: Patchwatcher should ignore AppDB patches
In-Reply-To: <f3f1b91a0809140708y5abae108tcc4e2794972f959d@mail.gmail.com>
References: <200809141418.30427.alex@thehandofagony.com>
	<f3f1b91a0809140708y5abae108tcc4e2794972f959d@mail.gmail.com>
Message-ID: <alpine.DEB.1.10.0809151502100.18185@amboise.dolphin>

On Sun, 14 Sep 2008, Chris Morgan wrote:
[...]
> Maybe there should be a separate appdb-patches mailing list.

IMHO there's it not enough traffic yet to warrant fragmenting it 
across multiple mailing lists.


> I've found it difficult to to find appdb patches based on the [AppDB] 
> prefix since the appdb code uses that for other notification emails.

As far as I know the AppDB does not send any email prefixed with 
'[AppDB]' to wine-patches. So finding AppDb patches in the wine-patches 
mail folder should be easy. Or do you mean that your email tool has 
trouble filtering on both wine-patches and [AppDB]? (I didn't try but 
I'd be surprised if procmail couldn't)

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                         Stolen from an Internet user:
              "f u cn rd ths, u cn gt a gd jb n cmptr prgrmmng !"


From dank at kegel.com  Mon Sep 15 09:02:18 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 15 Sep 2008 07:02:18 -0700
Subject: Patchwatcher should ignore AppDB patches
Message-ID: <a71bd89a0809150702k155e7a60w95e0e92cc86c79ca@mail.gmail.com>

Right, it should ignore those patches.  I'm going to
add a configurable regular expression to the
patch detector to let it do that.

(That is, when I get a chance.  I'm cranking on native
Chrome these days.)


From xerox_xerox2000 at yahoo.co.uk  Mon Sep 15 10:14:08 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis Lenders)
Date: Mon, 15 Sep 2008 15:14:08 +0000 (UTC)
Subject: howto fix bug 13462
References: <401182.27391.qm@web23201.mail.ird.yahoo.com>
	<1096648c0809150500p7eed06edsa99831260aa4f83@mail.gmail.com>
Message-ID: <loom.20080915T150641-532@post.gmane.org>

Rob Shearman <robertshearman <at> gmail.com> writes:

> 
> I suggest you write a test case that replicates what the application
> does and either send it to wine-patches with appropriate todo_wine's
> or attach it to the bug.

Well, it looks like the app is only checking if the uuid of the interface is
defined using Context_QueryInterface, and that's about it. 
It doesn't really seem to try to use anything from it, as Erich's initial hack
is already enough to get the apps running as well (this
one:http://bugs.winehq.org/attachment.cgi?id=13379)


> 
> It might help you understand what needs to be done or it will help
> someone else implement the functionality that is causing the
> application to fail.

So as far as i can tell, the functionality doesn't need to be implemented at
all, it's just enough to fake as if it would exist, by returning S_OK, when 
Context_QueryInterface is called for this specific uuid.

So what now?






From robertshearman at gmail.com  Mon Sep 15 10:49:47 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Mon, 15 Sep 2008 16:49:47 +0100
Subject: howto fix bug 13462
In-Reply-To: <loom.20080915T150641-532@post.gmane.org>
References: <401182.27391.qm@web23201.mail.ird.yahoo.com>
	<1096648c0809150500p7eed06edsa99831260aa4f83@mail.gmail.com>
	<loom.20080915T150641-532@post.gmane.org>
Message-ID: <1096648c0809150849s7df00e26x5212891add859899@mail.gmail.com>

2008/9/15 Louis Lenders <xerox_xerox2000 at yahoo.co.uk>:
> Rob Shearman <robertshearman <at> gmail.com> writes:
>> I suggest you write a test case that replicates what the application
>> does and either send it to wine-patches with appropriate todo_wine's
>> or attach it to the bug.
>
> Well, it looks like the app is only checking if the uuid of the interface is
> defined using Context_QueryInterface, and that's about it.
> It doesn't really seem to try to use anything from it, as Erich's initial hack
> is already enough to get the apps running as well (this
> one:http://bugs.winehq.org/attachment.cgi?id=13379)

That's fine. You can still add a test that does the same as what the app does.

>> It might help you understand what needs to be done or it will help
>> someone else implement the functionality that is causing the
>> application to fail.
>
> So as far as i can tell, the functionality doesn't need to be implemented at
> all, it's just enough to fake as if it would exist, by returning S_OK, when
> Context_QueryInterface is called for this specific uuid.

That's not acceptable as that change will cause applications that do
use the returned interface to either crash on a NULL pointer (if you
set *ppv to NULL and return S_OK) or stack corruption (if you return a
pointer to the wrong interface). You will be turning a known
unimplemented feature into a buggy feature which will be harder to fix
later.

> So what now?

If running the tests on Windows show that the interface in question is
implemented for the Context object then add that interface to the
object with stubbed functions.

-- 
Rob Shearman


From slindeneau at gmail.com  Mon Sep 15 11:01:08 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Tue, 16 Sep 2008 01:01:08 +0900
Subject: General Questions
Message-ID: <81fd805b0809150901u63f40878x634654d93c757b69@mail.gmail.com>

I haven't had time to work on the AcceptEx patch since the last time I
submitted it to wine-patches. I still cannot reproduce the bug's
patchwatcher indicated but I had a few questions regarding the whole
process. When I finally get the patches to pass the patchwatcher
regression test, is there anyway for me to know what is going on with
the patch. Is Juilliard looking at them? Are they rejected? How long
does the patch review process take? Is it just Julliard doing them?

In regards to the AcceptEx patch in particular:
I know that there is extra attention paid to patches that modify the
wineserver. Should I spend extra time writing a discussion as to the
reasons why I felt the modifications needed to take place within the
wineserver?
With the AcceptEx patch I kind of just plowed ahead and did what I
thought needed to be done to make the functions work. Should I spend
more time discussing what I intend to do in the patches with someone
else before submitting them? Is someone willing to do this peer review
with me? (Note: I don't have a lot of time to program).

And lastly: Am I doing anything wrong (in general. not simply in
coding)? I don't know how these internet based, user based systems
work. I've never tried working with one before. Is there anything else
someone wants me to work on?

~Scott


From juan.lang at gmail.com  Mon Sep 15 11:19:36 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 15 Sep 2008 09:19:36 -0700
Subject: General Questions
In-Reply-To: <81fd805b0809150901u63f40878x634654d93c757b69@mail.gmail.com>
References: <81fd805b0809150901u63f40878x634654d93c757b69@mail.gmail.com>
Message-ID: <3a768c550809150919lb2e4d32kd9430baa8cd763a3@mail.gmail.com>

Hi Scott,

> When I finally get the patches to pass the patchwatcher regression test,
> is there anyway for me to know what is going on with the patch.
> Is Juilliard looking at them? Are they rejected? How long does the patch
> review process take? Is it just Julliard doing them?

These are some of the most asked questions around here.
1) Yes, Alexandre looks at all patches.
2) If a patch isn't committed right away and doesn't get any comment,
it's usually in the dreaded "not obviously correct" category.  This
usually means that something about it just doesn't "feel" right, so it
doesn't get accepted right away.  It's your job to convince Alexandre
that it's correct.  Test cases in the regression test suite go a long
way for this.  If you've gotten feedback on wine-devel and haven't
addressed it, your patch often will get ignored by AJ, as there's an
existing concern that's gone unaddressed by you.
3) Depends on the patch.  The review time is short for obvious
patches, and longer (though more than a week is atypical) for less
obvious ones.
4) Yes.

If you're unsure what's happening with your patches, and you've
addressed every concern brought up on wine-devel, try asking AJ on
irc.
--Juan


From jwhite at codeweavers.com  Mon Sep 15 15:16:07 2008
From: jwhite at codeweavers.com (Jeremy White)
Date: Mon, 15 Sep 2008 15:16:07 -0500
Subject: Interesting Chromium hacks...er..patches
Message-ID: <48CEC287.6080209@codeweavers.com>

We've had a lot of fun hacking on Chromium these past few weeks.

We did have a few things that we rushed along to include in the
CrossOver Chromium builds that haven't properly baked here on
wine-devel.  I thought I'd share them in case anyone else wants to match
what we did.

First of all, we were working against dev build 21 of Chromium,
not Chrome.  Note that newer builds of Chromium now work (thanks to
a patch by Alexandre), but they're pretty unstable.  We got our dev
build from here:
  http://build.chromium.org/buildbot/archives/chromium.tgz

We find we have to have both Times and Arial (or replacements in the
registry) in order for it to run stably.

We have 3 winhttp patches we used that we're going to clean up and get
into WineHQ properly, but here they are in raw form:
  winhttp_reset_content_length.diff  fixes a glitch in winhttp on redirects.
  winhttp_flags.diff fixes a fairly obvious mistake (and turns out to be
the gating factor for gmail support)
  winhttp_cookies.diff is the beginning of a cookie manager; Hans is
still working on this one.

Also, we used the following ...er...patches:

  focus.diff (hack by Alexandre, makes single tabs work okay)
  gdi hack by Huw, makes the map hand on maps.google.com not a blob

Cheers,

Jeremy
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-gdi32-Horrible-hack-to-enable-SetDIBits-to-work-wit.patch
Type: text/x-patch
Size: 0 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080915/2889b47c/attachment.bin 

From huw at codeweavers.com  Mon Sep  8 11:34:51 2008
From: huw at codeweavers.com (Huw Davies)
Date: Mon, 8 Sep 2008 17:34:51 +0100
Subject: gdi32: Horrible hack to enable SetDIBits to work with a NULL hdc.
Message-ID: <mailman.206.1221509789.25118.wine-devel@winehq.org>

---
 dlls/gdi32/dib.c |   13 +++++++++++--
 1 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/dlls/gdi32/dib.c b/dlls/gdi32/dib.c
index 440857d..3ba2e0a 100644
--- a/dlls/gdi32/dib.c
+++ b/dlls/gdi32/dib.c
@@ -335,11 +335,19 @@ INT WINAPI SetDIBits( HDC hdc, HBITMAP hbitmap, UINT startscan,
     DC *dc;
     BITMAPOBJ *bitmap;
     INT result = 0;
+    HDC hdc_display = NULL;
 
     if (!(dc = get_dc_ptr( hdc )))
     {
-        if (coloruse == DIB_RGB_COLORS) FIXME( "shouldn't require a DC for DIB_RGB_COLORS\n" );
-        return 0;
+        if (coloruse == DIB_RGB_COLORS)
+        {
+            WCHAR display[] = {'D','I','S','P','L','A','Y',0};
+            hdc_display = CreateDCW(display, NULL, NULL, NULL);
+            if (!(dc = get_dc_ptr( hdc_display )))
+                return 0;
+        }
+        else
+            return 0;
     }
 
     update_dc( dc );
@@ -365,6 +373,7 @@ INT WINAPI SetDIBits( HDC hdc, HBITMAP hbitmap, UINT startscan,
  done:
     GDI_ReleaseObj( hbitmap );
     release_dc_ptr( dc );
+    if(hdc_display) DeleteDC(hdc_display);
     return result;
 }
 
-- 
1.5.4.4.532.ga6828


--------------070900010703090807050009
Content-Type: text/x-patch;
 name="focus.diff"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="focus.diff"

diff --git a/dlls/winex11.drv/event.c b/dlls/winex11.drv/event.c
index 32befa4..01798f1 100644
--- a/dlls/winex11.drv/event.c
+++ b/dlls/winex11.drv/event.c
@@ -664,7 +664,6 @@ static void X11DRV_FocusOut( HWND hwnd, XEvent *xev )
         wine_tsx11_unlock();
     }
     if (hwnd != GetForegroundWindow()) return;
-    SendMessageW( hwnd, WM_CANCELMODE, 0, 0 );
 
     /* don't reset the foreground window, if the window which is
        getting the focus is a Wine window */
@@ -680,6 +679,8 @@ static void X11DRV_FocusOut( HWND hwnd, XEvent *xev )
 
     if (!focus_win)
     {
+        SendMessageW( hwnd, WM_CANCELMODE, 0, 0 );
+
         /* Abey : 6-Oct-99. Check again if the focus out window is the
            Foreground window, because in most cases the messages sent
            above must have already changed the foreground window, in which

--------------070900010703090807050009
Content-Type: text/x-patch;
 name="winhttp_cookies.diff"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="winhttp_cookies.diff"

619789ecb39377331f8db651a1dddf4ce4399b8c
diff --git a/dlls/winhttp/Makefile.in b/dlls/winhttp/Makefile.in
index 5617a1d..cf188c7 100644
--- a/dlls/winhttp/Makefile.in
+++ b/dlls/winhttp/Makefile.in
@@ -8,6 +8,7 @@ IMPORTS   = wininet kernel32
 DELAYIMPORTS = crypt32
 
 C_SRCS = \
+	cookie.c \
 	handle.c \
 	main.c \
 	net.c \
diff --git a/dlls/winhttp/cookie.c b/dlls/winhttp/cookie.c
new file mode 100644
index 0000000..f0dde99
--- /dev/null
+++ b/dlls/winhttp/cookie.c
@@ -0,0 +1,280 @@
+/*
+ * Copyright 2008 Hans Leidekker for CodeWeavers
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#include "config.h"
+#include <stdarg.h>
+
+#include "wine/debug.h"
+#include "wine/list.h"
+
+#include "windef.h"
+#include "winbase.h"
+#include "winhttp.h"
+
+#include "winhttp_private.h"
+
+WINE_DEFAULT_DEBUG_CHANNEL(winhttp);
+
+static struct list domain_list = LIST_INIT(domain_list);
+
+typedef struct
+{
+    struct list entry;
+    WCHAR *name;
+    struct list cookies;
+} domain_t;
+
+typedef struct
+{
+    struct list entry;
+    WCHAR *name;
+    WCHAR *value;
+    WCHAR *path;
+} cookie_t;
+
+static domain_t *add_domain( const WCHAR *name )
+{
+    domain_t *domain;
+
+    if (!(domain = heap_alloc_zero( sizeof(domain_t) ))) return NULL;
+
+    list_init( &domain->entry );
+    list_init( &domain->cookies );
+    if (!(domain->name = heap_alloc( (strlenW( name ) + 1) * sizeof(WCHAR) )))
+    {
+        heap_free( domain );
+        return NULL;
+    }
+    strcpyW( domain->name, name );
+    list_add_tail( &domain_list, &domain->entry );
+
+    TRACE("%s\n", debugstr_w(domain->name));
+    return domain;
+}
+
+static cookie_t *find_cookie( domain_t *domain, const WCHAR *path, const WCHAR *name )
+{
+    struct list *item;
+
+    LIST_FOR_EACH(item, &domain->cookies)
+    {
+        cookie_t *cookie = LIST_ENTRY(item, cookie_t, entry);
+        if (!strcmpW( cookie->path, path ) && !strcmpiW( cookie->name, name ))
+        {
+            TRACE("found %s=%s\n", debugstr_w(cookie->name), debugstr_w(cookie->value)); 
+            return cookie;
+         }
+    }
+    return NULL;
+}
+
+static BOOL match_domain( const WCHAR *name, domain_t *domain, BOOL partial )
+{
+    TRACE("comparing %s with %s\n", debugstr_w(name), debugstr_w(domain->name));
+
+    if (partial && !strstrW( name, domain->name )) return FALSE;
+    else if (!partial && strcmpW( name, domain->name )) return FALSE;
+    return TRUE;
+}
+
+static void free_cookie( cookie_t *cookie )
+{
+    heap_free( cookie->name );
+    heap_free( cookie->value );
+    heap_free( cookie->path );
+    heap_free( cookie );
+}
+
+static void delete_cookie( cookie_t *cookie )
+{
+    list_remove( &cookie->entry );
+    free_cookie( cookie );
+}
+
+static BOOL add_cookie( cookie_t *cookie, const WCHAR *domain_name, const WCHAR *path )
+{
+    domain_t *domain = NULL;
+    cookie_t *old_cookie;
+    struct list *item;
+    WCHAR *p;
+
+    LIST_FOR_EACH(item, &domain_list)
+    {
+        domain = LIST_ENTRY(item, domain_t, entry);
+        if (match_domain( domain_name, domain, FALSE )) break;
+        domain = NULL;
+    }
+
+    if (!domain) domain = add_domain( domain_name );
+    if ((old_cookie = find_cookie( domain, path, cookie->name ))) delete_cookie( old_cookie );
+
+    if (!(cookie->path = strdupW( path ))) return FALSE;
+    if ((p = strrchrW( cookie->path, '/' )) && p != cookie->path && !p[1]) *p = 0;
+ 
+    list_add_tail( &domain->cookies, &cookie->entry );
+
+    TRACE("%s / %s <- %s = %s\n", debugstr_w(domain_name), debugstr_w(cookie->path),
+          debugstr_w(cookie->name), debugstr_w(cookie->value));
+    return TRUE;
+}
+
+static cookie_t *parse_cookie( const WCHAR *string )
+{
+    cookie_t *cookie;
+    const WCHAR *p;
+    int len;
+
+    if (!(cookie = heap_alloc_zero( sizeof(cookie) ))) return NULL;
+
+    list_init( &cookie->entry );
+
+    if (!(p = strchrW( string, '=' )))
+    {
+        WARN("no '=' in %s\n", debugstr_w(string));
+        return NULL;
+    }
+    if (p == string)
+    {
+        WARN("empty cookie name in %s\n", debugstr_w(string));
+        return NULL;
+    }
+    len = p - string;
+    if (!(cookie->name = heap_alloc( (len + 1) * sizeof(WCHAR) )))
+    {
+        heap_free( cookie );
+        return NULL;
+    }
+    memcpy( cookie->name, string, len * sizeof(WCHAR) );
+    cookie->name[len] = 0;
+
+    p++; /* skip '=' */
+    while (*p == ' ') p++;
+
+    len = strlenW( p );
+    if (!(cookie->value = heap_alloc( (len + 1) * sizeof(WCHAR) )))
+    {
+        free_cookie( cookie );
+        return NULL;
+    }
+    memcpy( cookie->value, p, len * sizeof(WCHAR) );
+    cookie->value[len] = 0;
+
+    return cookie;
+}
+
+BOOL set_cookies( const WCHAR *cookies, WCHAR *hostname, WCHAR *path )
+{
+    static const WCHAR pathW[] = {'P','a','t','h',0};
+    static const WCHAR domainW[] = {'D','o','m','a','i','n',0};
+
+    BOOL ret;
+    WCHAR *buffer, *p, *q, *r;
+    WCHAR *cookie_domain = hostname, *cookie_path = path;
+    cookie_t *cookie;
+    int len;
+
+    len = strlenW( cookies );
+    if (!(buffer = heap_alloc( (len + 1) * sizeof(WCHAR) ))) return FALSE;
+    strcpyW( buffer, cookies );
+
+    p = buffer;
+    while (*p && *p != ';') p++;
+    if (*p == ';') *p++ = 0;
+    if (!(cookie = parse_cookie( buffer )))
+    {
+        heap_free( buffer );
+        return FALSE;
+    }
+    if (!*p) goto done;
+    if ((q = strstrW( p, domainW ))) /* FIXME: do real attribute parsing */
+    {
+        while (*q && *q != '=') q++;
+        if (!*q) goto done;
+
+        r = ++q;
+        while (*r && *r != ';') r++;
+        len = r - q;
+
+        if (!(cookie_domain = heap_alloc( (len + 1) * sizeof(WCHAR) ))) goto done;
+        memcpy( cookie_domain, q, len * sizeof(WCHAR) );
+        cookie_domain[len] = 0;
+        
+    }
+    if ((q = strstrW( p, pathW )))
+    {
+        while (*q && *q != '=') q++;
+        if (!*q) goto done;
+
+        r = ++q;
+        while (*r && *r != ';') r++;
+        len = r - q;
+
+        if (!(cookie_path = heap_alloc( (len + 1) * sizeof(WCHAR) ))) goto done;
+        memcpy( cookie_path, q, len * sizeof(WCHAR) );
+        cookie_path[len] = 0;
+    }
+
+done:
+    if (!(ret = add_cookie( cookie, cookie_domain, cookie_path ))) free_cookie( cookie );
+    heap_free( buffer );
+    return ret;
+}
+
+BOOL add_cookie_headers( request_t *request )
+{
+    struct list *domain_cursor;
+
+    LIST_FOR_EACH(domain_cursor, &domain_list)
+    {
+        domain_t *domain = LIST_ENTRY(domain_cursor, domain_t, entry);
+        if (match_domain( request->connect->servername, domain, TRUE ))
+        {
+            struct list *cookie_cursor;
+            TRACE("found domain %s\n", debugstr_w(domain->name));
+
+            LIST_FOR_EACH(cookie_cursor, &domain->cookies)
+            {
+                WCHAR slash[] = {'/',0}, *path;
+                cookie_t *cookie = LIST_ENTRY(cookie_cursor, cookie_t, entry);
+    
+                path = request->path ? request->path : slash;
+
+                TRACE("comparing cookie %s path %s with %s\n",
+                      debugstr_w(cookie->name), debugstr_w(cookie->path),
+                      debugstr_w(path));
+
+                if (!strcmpW( cookie->path, path ) || strstrW( path, cookie->path ) == path)
+                {
+                    const WCHAR fmt[] = {'C','o','o','k','i','e',':',' ','%','s','=','%','s',0};
+                    int len;
+                    WCHAR *header;
+
+                    len = strlenW( cookie->name ) + strlenW( fmt ) + strlenW( cookie->value );
+                    if (!(header = heap_alloc( (len + 1) * sizeof(WCHAR) ))) return FALSE;
+
+                    sprintfW( header, fmt, cookie->name, cookie->value );
+
+                    TRACE("%s\n", debugstr_w(header));
+                    add_request_headers( request, header, len, WINHTTP_ADDREQ_FLAG_ADD );
+                    heap_free( header );
+                }
+            }
+        }
+    }
+    return TRUE;
+}
diff --git a/dlls/winhttp/request.c b/dlls/winhttp/request.c
index b62a0e3..729d2ad 100644
--- a/dlls/winhttp/request.c
+++ b/dlls/winhttp/request.c
@@ -404,7 +404,7 @@ static BOOL process_header( request_t *request, LPCWSTR field, LPCWSTR value, DW
     return TRUE;
 }
 
-static BOOL add_request_headers( request_t *request, LPCWSTR headers, DWORD len, DWORD flags )
+BOOL add_request_headers( request_t *request, LPCWSTR headers, DWORD len, DWORD flags )
 {
     BOOL ret = FALSE;
     WCHAR *buffer, *p, *q;
@@ -833,6 +833,11 @@ static BOOL send_request( request_t *request, LPCWSTR headers, DWORD headers_len
         TRACE("failed to add request headers\n");
         return FALSE;
     }
+    if (!(request->hdr.flags & WINHTTP_DISABLE_COOKIES) && !add_cookie_headers( request ))
+    {
+        WARN("failed to add cookie headers\n");
+        return FALSE;
+    }
 
     if (!(ret = open_connection( request ))) goto end;
     if (!(req = build_request_string( request ))) goto end;
@@ -1281,8 +1286,7 @@ static void drain_content( request_t *request )
     }
 }
 
-/* copy cookies from response headers to request headers */
-static void add_cookies( request_t *request )
+static void record_cookies( request_t *request )
 {
     unsigned int i;
 
@@ -1290,7 +1294,7 @@ static void add_cookies( request_t *request )
     {
         if (!strcmpiW( request->headers[i].field, attr_set_cookie ) && !request->headers[i].is_request)
         {
-            process_header( request, attr_cookie, request->headers[i].value, WINHTTP_ADDREQ_FLAG_ADD, TRUE );
+            set_cookies( request->headers[i].value, request->connect->servername, request->path );
         }
     }
 }
@@ -1313,13 +1317,14 @@ static BOOL receive_response( request_t *request, BOOL async )
         if (!query_headers( request, query, NULL, &request->content_length, &size, NULL ))
             request->content_length = ~0UL;
 
+        if (!(request->hdr.disable_flags & WINHTTP_DISABLE_COOKIES)) record_cookies( request );
+
         if (status == 301 || status == 302)
         {
             if (request->hdr.disable_flags & WINHTTP_DISABLE_REDIRECTS) break;
-            drain_content( request );
 
+            drain_content( request );
             if (!(ret = handle_redirect( request ))) break;
-            if (!(request->hdr.disable_flags & WINHTTP_DISABLE_COOKIES)) add_cookies( request );
 
             clear_response_headers( request );
             ret = send_request( request, NULL, 0, NULL, 0, 0, 0, FALSE ); /* recurse synchronously */
diff --git a/dlls/winhttp/tests/winhttp.c b/dlls/winhttp/tests/winhttp.c
index 7914805..3381370 100644
--- a/dlls/winhttp/tests/winhttp.c
+++ b/dlls/winhttp/tests/winhttp.c
@@ -668,6 +668,48 @@ static void test_request_parameter_defaults(void)
     WinHttpCloseHandle(ses);
 }
 
+static void test_cookies(void)
+{
+    static const WCHAR post[] = {'P','O','S','T',0};
+    static const WCHAR query[] = {'/','c','o','o','k','i','e','t','e','s','t','p','o','s','t','.','c','g','i',0};
+    static const WCHAR crossover[] =
+        {'c','r','o','s','s','o','v','e','r','.','c','o','d','e','w','e','a','v','e','r','s','.','c','o','m',0};
+    static const WCHAR content_type[] =
+        {'C','o','n','t','e','n','t','-','T','y','p','e',':',' ','a','p','p','l','i','c','a','t','i','o','n',
+         '/','x','-','w','w','w','-','f','o','r','m','-','u','r','l','e','n','c','o','d','e','d',0};
+    static char post_data[] = "next=1";
+
+    HANDLE ses, con, req;
+    DWORD size, status;
+    BOOL ret, enable = TRUE;
+
+    ret = WinHttpSetOption(NULL, WINHTTP_OPTION_ENABLETRACING, &enable, sizeof(enable));
+
+    ses = WinHttpOpen(test_useragent, 0, NULL, NULL, 0);
+    ok(ses != NULL, "failed to open session %u\n", GetLastError());
+
+    con = WinHttpConnect(ses, crossover, 0, 0);
+    ok(con != NULL, "failed to open a connection %u\n", GetLastError());
+
+    req = WinHttpOpenRequest(con, post, query, NULL, NULL, NULL, 0);
+    ok(req != NULL, "failed to open a request %u\n", GetLastError());
+
+    ret = WinHttpSendRequest(req, content_type, ~0UL, post_data, sizeof(post_data), sizeof(post_data), 0);
+    ok(ret, "failed to send request %u\n", GetLastError());
+
+    ret = WinHttpReceiveResponse(req, NULL);
+    ok(ret, "failed to receive response %u\n", GetLastError());
+
+    size = sizeof(status);
+    ret = WinHttpQueryHeaders(req, WINHTTP_QUERY_STATUS_CODE | WINHTTP_QUERY_FLAG_NUMBER, NULL, &status, &size, NULL);
+    ok(ret, "failed unexpectedly %u\n", GetLastError());
+    ok(status == 200, "request failed unexpectedly %u\n", status);
+
+    WinHttpCloseHandle(req);
+    WinHttpCloseHandle(con);
+    WinHttpCloseHandle(ses);
+}
+
 START_TEST (winhttp)
 {
     test_OpenRequest();
@@ -677,4 +719,5 @@ START_TEST (winhttp)
     test_WinHttpAddHeaders();
     test_secure_connection();
     test_request_parameter_defaults();
+    test_cookies();
 }
diff --git a/dlls/winhttp/winhttp_private.h b/dlls/winhttp/winhttp_private.h
index 6508b38..0164dc3 100644
--- a/dlls/winhttp/winhttp_private.h
+++ b/dlls/winhttp/winhttp_private.h
@@ -190,6 +190,10 @@ BOOL netconn_secure_connect( netconn_t * );
 BOOL netconn_send( netconn_t *, const void *, size_t, int, int * );
 const void *netconn_get_certificate( netconn_t * );
 
+BOOL set_cookies( const WCHAR *, WCHAR *, WCHAR * );
+BOOL add_cookie_headers( request_t * );
+BOOL add_request_headers( request_t *, LPCWSTR, DWORD, DWORD );
+
 static inline void *heap_alloc( SIZE_T size )
 {
     return HeapAlloc( GetProcessHeap(), 0, size );

--------------070900010703090807050009
Content-Type: text/x-patch;
 name="winhttp_flags.diff"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="winhttp_flags.diff"

diff --git a/dlls/winhttp/session.c b/dlls/winhttp/session.c
index 927c347..8625c0c 100644
--- a/dlls/winhttp/session.c
+++ b/dlls/winhttp/session.c
@@ -303,7 +303,7 @@ static BOOL request_set_option( object_header_t *hdr, DWORD option, LPVOID buffe
         DWORD disable = *(DWORD *)buffer;
 
         TRACE("0x%x\n", disable);
-        hdr->disable_flags &= disable;
+        hdr->disable_flags = disable;
         return TRUE;
     }
     case WINHTTP_OPTION_AUTOLOGON_POLICY:

--------------070900010703090807050009
Content-Type: text/x-patch;
 name="winhttp_reset_content_length.diff"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="winhttp_reset_content_length.diff"

4a8dbb8069718098d0b7f34de9badf42e40c002a
diff --git a/dlls/winhttp/request.c b/dlls/winhttp/request.c
index c149aca..b62a0e3 100644
--- a/dlls/winhttp/request.c
+++ b/dlls/winhttp/request.c
@@ -1226,6 +1226,13 @@ static BOOL receive_data_chunked( request_t *request, void *buffer, DWORD size,
     return TRUE;
 }
 
+static void finished_reading( request_t *request )
+{
+    /* FIXME: close connection here if necessary */
+    request->content_length = ~0UL;
+    request->content_read = 0;
+}
+
 static BOOL read_data( request_t *request, void *buffer, DWORD to_read, DWORD *read, BOOL async )
 {
     static const WCHAR chunked[] = {'c','h','u','n','k','e','d',0};
@@ -1253,7 +1260,11 @@ static BOOL read_data( request_t *request, void *buffer, DWORD to_read, DWORD *r
             send_callback( &request->hdr, WINHTTP_CALLBACK_STATUS_REQUEST_ERROR, &result, sizeof(result) );
         }
     }
-    if (ret && read) *read = num_bytes;
+    if (ret)
+    {
+        if (read) *read = num_bytes;
+        if (!num_bytes) finished_reading( request );
+    }
     return ret;
 }
 
@@ -1263,6 +1274,7 @@ static void drain_content( request_t *request )
     DWORD bytes_read;
     char buffer[2048];
 
+    if (!request->content_length) return;
     for (;;)
     {
         if (!read_data( request, buffer, sizeof(buffer), &bytes_read, FALSE ) || !bytes_read) return;
@@ -1523,7 +1535,7 @@ static BOOL write_data( request_t *request, LPCVOID buffer, DWORD to_write, LPDW
 
     if (async)
     {
-        if (ret) send_callback( &request->hdr, WINHTTP_CALLBACK_FLAG_WRITE_COMPLETE, &num_bytes, sizeof(DWORD) );
+        if (ret) send_callback( &request->hdr, WINHTTP_CALLBACK_STATUS_WRITE_COMPLETE, &num_bytes, sizeof(DWORD) );
         else
         {
             WINHTTP_ASYNC_RESULT result;

--------------070900010703090807050009--


From donpedro at tdcadsl.dk  Mon Sep 15 16:27:34 2008
From: donpedro at tdcadsl.dk (Peter Dons Tychsen)
Date: Mon, 15 Sep 2008 23:27:34 +0200
Subject: Rejected patches needing review.
Message-ID: <1221514054.3195.9.camel@dhcppc2>

Hello.

I have a problem loading a specific proprietary driver.
I traced the problem to two bugs in:

- services
- winedevice

The two bugs caused the loading to fail.
I created and tested two fixes to solve the problem, but
both patches were silently rejected.

Can some review them before i re-send them?
I have looked them over several time, but i do not see a problem with
them. The only "problem" is that there are no test cases for these
programs, as there is no such place for such.

Thanks,

/pedro
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-Fixed-problem-with-DependOnService-key-which-can-be.patch
Type: application/mbox
Size: 0 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080915/7d07ee98/attachment-0002.bin 

From donpedro at dhcppc2.  Tue Sep  2 18:35:53 2008
From: donpedro at dhcppc2. (Peter Dons Tychsen (none))
Date: Wed, 3 Sep 2008 01:35:53 +0200
Subject: Fixed problem with DependOnService key, which can be of type string and multistring. This fixes a problem with some service entries, which do not use the multistring type for this key as most do.
Message-ID: <mailman.207.1221513988.25118.wine-devel@winehq.org>

---
 programs/services/services.c |    4 ++--
 programs/services/services.h |    2 +-
 programs/services/utils.c    |    4 ++--
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/programs/services/services.c b/programs/services/services.c
index 36ed117..cd71a1f 100644
--- a/programs/services/services.c
+++ b/programs/services/services.c
@@ -106,9 +106,9 @@ static DWORD load_service_config(HKEY hKey, struct service_entry *entry)
         return err;
     if ((err = load_reg_string(hKey, SZ_DESCRIPTION,  0,    &entry->description)) != 0)
         return err;
-    if ((err = load_reg_multisz(hKey, SZ_DEPEND_ON_SERVICE, &entry->dependOnServices)) != 0)
+    if ((err = load_reg_multisz(hKey, SZ_DEPEND_ON_SERVICE, TRUE, &entry->dependOnServices)) != 0)
         return err;
-    if ((err = load_reg_multisz(hKey, SZ_DEPEND_ON_GROUP,   &entry->dependOnGroups)) != 0)
+    if ((err = load_reg_multisz(hKey, SZ_DEPEND_ON_GROUP, FALSE, &entry->dependOnGroups)) != 0)
         return err;
 
     if ((err = load_reg_dword(hKey, SZ_TYPE,  &entry->config.dwServiceType)) != 0)
diff --git a/programs/services/services.h b/programs/services/services.h
index fd99bf9..cd7de02 100644
--- a/programs/services/services.h
+++ b/programs/services/services.h
@@ -87,7 +87,7 @@ LPWSTR strdupW(LPCWSTR str);
 BOOL check_multisz(LPCWSTR lpMultiSz, DWORD cbSize);
 
 DWORD load_reg_string(HKEY hKey, LPCWSTR szValue, BOOL bExpand, LPWSTR *output);
-DWORD load_reg_multisz(HKEY hKey, LPCWSTR szValue, LPWSTR *output);
+DWORD load_reg_multisz(HKEY hKey, LPCWSTR szValue, BOOL bAllowSingle, LPWSTR *output);
 DWORD load_reg_dword(HKEY hKey, LPCWSTR szValue, DWORD *output);
 
 static inline LPCWSTR get_display_name(struct service_entry *service)
diff --git a/programs/services/utils.c b/programs/services/utils.c
index 89eb500..191cc5f 100644
--- a/programs/services/utils.c
+++ b/programs/services/utils.c
@@ -102,7 +102,7 @@ failed:
     return err;
 }
 
-DWORD load_reg_multisz(HKEY hKey, LPCWSTR szValue, LPWSTR *output)
+DWORD load_reg_multisz(HKEY hKey, LPCWSTR szValue, BOOL bAllowSingle, LPWSTR *output)
 {
     DWORD size, type;
     LPWSTR buf = NULL;
@@ -118,7 +118,7 @@ DWORD load_reg_multisz(HKEY hKey, LPCWSTR szValue, LPWSTR *output)
         }
         goto failed;
     }
-    if (type != REG_MULTI_SZ)
+    if (!((type == REG_MULTI_SZ) || ((type == REG_SZ) && bAllowSingle)))
     {
         err = ERROR_INVALID_DATATYPE;
         goto failed;
-- 
1.5.4.1


--=-yy8jNzXQ4HhSvtj3EVZZ
Content-Disposition: attachment; filename*0=0002-Fixed-problem-with-driver-entries-in-the-registry-wh.pat; filename*1=ch
Content-Type: application/mbox; name=0002-Fixed-problem-with-driver-entries-in-the-registry-wh.patch
Content-Transfer-Encoding: 7bit


From donpedro at dhcppc2.  Tue Sep  2 18:41:50 2008
From: donpedro at dhcppc2. (Peter Dons Tychsen (none))
Date: Wed, 3 Sep 2008 01:41:50 +0200
Subject: Fixed problem with driver entries in the registry which are missing the "ImagePath" key. On windows the default path is used in this case which is "system32/drivers". This patch implements this behavior.
Message-ID: <mailman.208.1221513988.25118.wine-devel@winehq.org>

---
 programs/winedevice/device.c |   35 +++++++++++++++++++++++++----------
 1 files changed, 25 insertions(+), 10 deletions(-)

diff --git a/programs/winedevice/device.c b/programs/winedevice/device.c
index d48017a..dcc62a2 100644
--- a/programs/winedevice/device.c
+++ b/programs/winedevice/device.c
@@ -147,6 +147,8 @@ static NTSTATUS init_driver( HMODULE module, UNICODE_STRING *keyname )
 /* load the .sys module for a device driver */
 static BOOL load_driver(void)
 {
+    static const WCHAR driversW[] = {'\\','d','r','i','v','e','r','s','\\',0};
+    static const WCHAR postfixW[] = {'.','s','y','s',0};
     static const WCHAR ntprefixW[] = {'\\','?','?','\\',0};
     static const WCHAR ImagePathW[] = {'I','m','a','g','e','P','a','t','h',0};
     static const WCHAR servicesW[] = {'\\','R','e','g','i','s','t','r','y',
@@ -154,7 +156,6 @@ static BOOL load_driver(void)
                                       '\\','S','y','s','t','e','m',
                                       '\\','C','u','r','r','e','n','t','C','o','n','t','r','o','l','S','e','t',
                                       '\\','S','e','r','v','i','c','e','s','\\',0};
-
     UNICODE_STRING keypath;
     HMODULE module;
     LPWSTR path = NULL, str;
@@ -174,17 +175,31 @@ static BOOL load_driver(void)
 
     /* read the executable path from memory */
     size = 0;
-    if (RegQueryValueExW( driver_hkey, ImagePathW, NULL, &type, NULL, &size )) return FALSE;
-
-    str = HeapAlloc( GetProcessHeap(), 0, size );
-    if (!RegQueryValueExW( driver_hkey, ImagePathW, NULL, &type, (LPBYTE)str, &size ))
+    if (!RegQueryValueExW( driver_hkey, ImagePathW, NULL, &type, NULL, &size ))
+    { 
+        str = HeapAlloc( GetProcessHeap(), 0, size );
+        if (!RegQueryValueExW( driver_hkey, ImagePathW, NULL, &type, (LPBYTE)str, &size ))
+        {
+            size = ExpandEnvironmentStringsW(str,NULL,0);
+            path = HeapAlloc(GetProcessHeap(),0,size*sizeof(WCHAR));
+            ExpandEnvironmentStringsW(str,path,size);
+        }
+        HeapFree( GetProcessHeap(), 0, str );
+        if (!path) return FALSE;
+    }
+    else
     {
-        size = ExpandEnvironmentStringsW(str,NULL,0);
-        path = HeapAlloc(GetProcessHeap(),0,size*sizeof(WCHAR));
-        ExpandEnvironmentStringsW(str,path,size);
+        /* default is to use the driver name + ".sys" */
+        WCHAR buffer[MAX_PATH];
+        GetSystemDirectoryW(buffer, MAX_PATH);
+        path = HeapAlloc(GetProcessHeap(),0,
+          (strlenW(buffer) + strlenW(driversW) + strlenW(driver_name) + strlenW(postfixW) + 1)
+          *sizeof(WCHAR));
+        lstrcpyW(path, buffer);
+        lstrcatW(path, driversW);
+        lstrcatW(path, driver_name);
+        lstrcatW(path, postfixW);
     }
-    HeapFree( GetProcessHeap(), 0, str );
-    if (!path) return FALSE;
 
     /* make sure msvcrt is loaded to resolve the ntoskrnl.exe forwards */
     LoadLibraryA( "msvcrt.dll" );
-- 
1.5.4.1


--=-yy8jNzXQ4HhSvtj3EVZZ--



From egore911 at egore911.de  Mon Sep 15 18:20:38 2008
From: egore911 at egore911.de (Christoph Brill)
Date: Tue, 16 Sep 2008 01:20:38 +0200
Subject: Implementing d3dx9_36.dll.D3DXCreateTexture
Message-ID: <1221520838.25094.7.camel@localhost>

Hi list,

I'm trying to get a DirectX model viewer[1] to run. Using wine 1.1.4 it
is possible to lauch because d3dx9_36.dll exists but a method
(CreateTexture) of it is stubbed out. I started looking for details on
this and came up with this MSDN link[2]. Looking at the code I found
that this method is already implemented in the core d3d9 library in
dlls/d3d9/texture.c. From what I understand a forward to this function
should be enough to get this method to work since the parameters seem to
match (except the last parameter in the core d3d9 (HANDLE*
pSharedHandle) does not exist in the MSDN definition).

Can someone please comment if my thoughts are right here?

Thanks,
  Christoph

[1] http://www.teamxtcgames.com/3d_object_viewer.htm
[2] http://msdn.microsoft.com/en-us/library/bb172800(VS.85).aspx



From thunderbird2k at gmx.net  Tue Sep 16 02:20:59 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Tue, 16 Sep 2008 09:20:59 +0200
Subject: Implementing d3dx9_36.dll.D3DXCreateTexture
In-Reply-To: <1221520838.25094.7.camel@localhost>
References: <1221520838.25094.7.camel@localhost>
Message-ID: <20080916072059.181740@gmx.net>

Hi,

For basic operation just forwarding to the d3d9 CreateTexture call should work fine but note the following:
"Internally, D3DXCreateTexture uses D3DXCheckTextureRequirements to adjust the calling parameters. Therefore, calls to D3DXCreateTexture will often succeed where calls to IDirect3DDevice9::CreateTexture would fail."

As a start I wouldn't add that behavior but add a comment that the function isn't complete and what is missing. I would also print a FIXME about it but only show it once in total (so use a static variable).

Roderick

> Hi list,
> 
> I'm trying to get a DirectX model viewer[1] to run. Using wine 1.1.4 it
> is possible to lauch because d3dx9_36.dll exists but a method
> (CreateTexture) of it is stubbed out. I started looking for details on
> this and came up with this MSDN link[2]. Looking at the code I found
> that this method is already implemented in the core d3d9 library in
> dlls/d3d9/texture.c. From what I understand a forward to this function
> should be enough to get this method to work since the parameters seem to
> match (except the last parameter in the core d3d9 (HANDLE*
> pSharedHandle) does not exist in the MSDN definition).
> 
> Can someone please comment if my thoughts are right here?
> 
> Thanks,
>   Christoph
> 
> [1] http://www.teamxtcgames.com/3d_object_viewer.htm
> [2] http://msdn.microsoft.com/en-us/library/bb172800(VS.85).aspx
> 
> 

-- 
GMX Kostenlose Spiele: Einfach online spielen und Spa? haben mit Pastry Passion!
http://games.entertainment.gmx.net/de/entertainment/games/free/puzzle/6169196


From andrewfenn at gmail.com  Tue Sep 16 03:13:27 2008
From: andrewfenn at gmail.com (Andrew Fenn)
Date: Tue, 16 Sep 2008 15:13:27 +0700
Subject: Fwd: Implementing d3dx9_36.dll.D3DXCreateTexture
In-Reply-To: <b594ca9d0809160112x25333053m4b3a3bf9e9155faf@mail.gmail.com>
References: <1221520838.25094.7.camel@localhost>
	<20080916072059.181740@gmx.net>
	<b594ca9d0809160112x25333053m4b3a3bf9e9155faf@mail.gmail.com>
Message-ID: <b594ca9d0809160113t6bce5092xef29935eaab330b2@mail.gmail.com>

D3DXCheckTextureRequirements has already been implemented and a patch
was submitted here:

http://www.winehq.org/pipermail/wine-patches/2008-April/053547.html

Please check it out.

On Tue, Sep 16, 2008 at 2:20 PM, Roderick Colenbrander
<thunderbird2k at gmx.net> wrote:
> Hi,
>
> For basic operation just forwarding to the d3d9 CreateTexture call should work fine but note the following:
> "Internally, D3DXCreateTexture uses D3DXCheckTextureRequirements to adjust the calling parameters. Therefore, calls to D3DXCreateTexture will often succeed where calls to IDirect3DDevice9::CreateTexture would fail."
>
> As a start I wouldn't add that behavior but add a comment that the function isn't complete and what is missing. I would also print a FIXME about it but only show it once in total (so use a static variable).
>
> Roderick
>
>> Hi list,
>>
>> I'm trying to get a DirectX model viewer[1] to run. Using wine 1.1.4 it
>> is possible to lauch because d3dx9_36.dll exists but a method
>> (CreateTexture) of it is stubbed out. I started looking for details on
>> this and came up with this MSDN link[2]. Looking at the code I found
>> that this method is already implemented in the core d3d9 library in
>> dlls/d3d9/texture.c. From what I understand a forward to this function
>> should be enough to get this method to work since the parameters seem to
>> match (except the last parameter in the core d3d9 (HANDLE*
>> pSharedHandle) does not exist in the MSDN definition).
>>
>> Can someone please comment if my thoughts are right here?
>>
>> Thanks,
>>   Christoph
>>
>> [1] http://www.teamxtcgames.com/3d_object_viewer.htm
>> [2] http://msdn.microsoft.com/en-us/library/bb172800(VS.85).aspx
>>
>>
>
> --
> GMX Kostenlose Spiele: Einfach online spielen und Spa? haben mit Pastry Passion!
> http://games.entertainment.gmx.net/de/entertainment/games/free/puzzle/6169196
>
>
>

From robertshearman at gmail.com  Tue Sep 16 04:42:36 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 16 Sep 2008 10:42:36 +0100
Subject: [PATCH] pass correct buffersize to LCMapStringW
In-Reply-To: <02E418FE9E004B9185720D9A70E3025F@DMITRY>
References: <AAAA584AB353407498B35FD932571031@DMITRY>
	<1221403966.32737.43.camel@hermes2.karcher.local>
	<02E418FE9E004B9185720D9A70E3025F@DMITRY>
Message-ID: <1096648c0809160242j2a46332fs3024148a10a85c78@mail.gmail.com>

2008/9/14 Dmitry Timoshkov <dmitry at codeweavers.com>:
> "Michael Karcher" <wine at mkarcher.dialup.fu-berlin.de> wrote:
>>> > -    ret = LCMapStringW(LOCALE_USER_DEFAULT, 0, upper_case, 0, buf, sizeof(buf));
>>> > +    ret = LCMapStringW(LOCALE_USER_DEFAULT, 0, upper_case, 0, buf, sizeof(buf)/sizeof(WCHAR));
>>> >     ok(!ret, "LCMapStringW should fail with srclen = 0\n");
>>> The size of the target buffer doesn't matter at all in this case, since
>>> the API is supposed to fail due to source length being 0.
>>
>> Even if the size doesn't matter, this line should get fixed, as the Wine
>> tests are a kind of of Win32 API reference by example. IMHO you
>> shouldn't include such misleading parameters as the size in the wrong
>> unit into API usage examples.
>
> This particular test doesn't depend on the size of the target buffer,
> be it 0, -1, or whatever.

I don't understand your objection to fixing this. If by chance
Microsoft happen to change the API to not fail when the source length
is 0 then this will suddenly become a possible buffer overrun. Why not
just pass in a correct length as the destination length or just pass
in 0?

-- 
Rob Shearman


From dmitry at codeweavers.com  Tue Sep 16 05:02:42 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 16 Sep 2008 19:02:42 +0900
Subject: [PATCH] pass correct buffersize to LCMapStringW
References: <AAAA584AB353407498B35FD932571031@DMITRY>
	<1221403966.32737.43.camel@hermes2.karcher.local>
	<02E418FE9E004B9185720D9A70E3025F@DMITRY>
	<1096648c0809160242j2a46332fs3024148a10a85c78@mail.gmail.com>
Message-ID: <3944538F7A594B5EA02CE1D0D0CB8093@DMITRY>

"Rob Shearman" <robertshearman at gmail.com> wrote:

>>>> > -    ret = LCMapStringW(LOCALE_USER_DEFAULT, 0, upper_case, 0, buf, sizeof(buf));
>>>> > +    ret = LCMapStringW(LOCALE_USER_DEFAULT, 0, upper_case, 0, buf, sizeof(buf)/sizeof(WCHAR));
>>>> >     ok(!ret, "LCMapStringW should fail with srclen = 0\n");
>>>> The size of the target buffer doesn't matter at all in this case, since
>>>> the API is supposed to fail due to source length being 0.
>>>
>>> Even if the size doesn't matter, this line should get fixed, as the Wine
>>> tests are a kind of of Win32 API reference by example. IMHO you
>>> shouldn't include such misleading parameters as the size in the wrong
>>> unit into API usage examples.
>>
>> This particular test doesn't depend on the size of the target buffer,
>> be it 0, -1, or whatever.
> 
> I don't understand your objection to fixing this. If by chance
> Microsoft happen to change the API to not fail when the source length
> is 0 then this will suddenly become a possible buffer overrun.

If the source length is 0, then there is nothing to write to the destination,
and therefore there shouldn't be a buffer overrun problem.

> Why not
> just pass in a correct length as the destination length or just pass
> in 0?

Because that wouldn't change anything IMO.

-- 
Dmitry.


From robertshearman at gmail.com  Tue Sep 16 06:00:18 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 16 Sep 2008 12:00:18 +0100
Subject: [PATCH] pass correct buffersize to LCMapStringW
In-Reply-To: <3944538F7A594B5EA02CE1D0D0CB8093@DMITRY>
References: <AAAA584AB353407498B35FD932571031@DMITRY>
	<1221403966.32737.43.camel@hermes2.karcher.local>
	<02E418FE9E004B9185720D9A70E3025F@DMITRY>
	<1096648c0809160242j2a46332fs3024148a10a85c78@mail.gmail.com>
	<3944538F7A594B5EA02CE1D0D0CB8093@DMITRY>
Message-ID: <1096648c0809160400v71001205l30ea46da61e70231@mail.gmail.com>

2008/9/16 Dmitry Timoshkov <dmitry at codeweavers.com>:
> "Rob Shearman" <robertshearman at gmail.com> wrote:
>
>>>>> > -    ret = LCMapStringW(LOCALE_USER_DEFAULT, 0, upper_case, 0, buf,
>>>>> > sizeof(buf));
>>>>> > +    ret = LCMapStringW(LOCALE_USER_DEFAULT, 0, upper_case, 0, buf,
>>>>> > sizeof(buf)/sizeof(WCHAR));
>>>>> >     ok(!ret, "LCMapStringW should fail with srclen = 0\n");
>>>>> The size of the target buffer doesn't matter at all in this case, since
>>>>> the API is supposed to fail due to source length being 0.
>>>>
>>>> Even if the size doesn't matter, this line should get fixed, as the Wine
>>>> tests are a kind of of Win32 API reference by example. IMHO you
>>>> shouldn't include such misleading parameters as the size in the wrong
>>>> unit into API usage examples.
>>>
>>> This particular test doesn't depend on the size of the target buffer,
>>> be it 0, -1, or whatever.
>>
>> Why not
>> just pass in a correct length as the destination length or just pass
>> in 0?
>
> Because that wouldn't change anything IMO.

It's a bug lurking. Someone could copy and paste that code, changing
the source length and the source string but forget to change the
destination length, because at first glance it looks correct.

Furthermore, it will flag up as a warning in static analysis tools
that detect this and result in noise where it's hard to find the real
bugs.

-- 
Rob Shearman


From julliard at winehq.org  Tue Sep 16 06:30:44 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 16 Sep 2008 13:30:44 +0200
Subject: winemenubuilder: eliminate wineshelllink (try 5)
In-Reply-To: <9e89675b0809151128j27737f44i12e5d7d3a2083a6c@mail.gmail.com>
	(Damjan Jovanovic's message of "Mon, 15 Sep 2008 20:28:40 +0200")
References: <9e89675b0809151128j27737f44i12e5d7d3a2083a6c@mail.gmail.com>
Message-ID: <87prn4gwez.fsf@wine.dyndns.org>

"Damjan Jovanovic" <damjan.jov at gmail.com> writes:

> +    do
> +    {
> +        line = HeapAlloc(GetProcessHeap(), 0, size);
> +        if (!line)
> +            return NULL;
> +        ret = fgets(line, size, file);
> +        if (ret != NULL)
> +        {
> +            if (strlen(line) < size - 1)
> +                return line;
> +            size *= 2;
> +        }
> +        HeapFree(GetProcessHeap(), 0, line);
> +    } while (ret != NULL);

This won't do what you want.

> +        char *line;
> +        while ((line = next_line(originalMenu)) != NULL)
> +        {
> +            if (strstr(line, "<Filename>"))
> +            {
> +                if (strstr(line, name))
> +                    found = TRUE;
> +                fprintf(tempfile, "%s", line);
> +            }

strstr is not appropriate for comparing file names. Also you are leaking
memory here.

-- 
Alexandre Julliard
julliard at winehq.org


From felix at compsoc.nuigalway.ie  Tue Sep 16 06:13:36 2008
From: felix at compsoc.nuigalway.ie (Darragh Bailey)
Date: Tue, 16 Sep 2008 12:13:36 +0100
Subject: Rejected patches needing review.
In-Reply-To: <1221514054.3195.9.camel@dhcppc2>
References: <1221514054.3195.9.camel@dhcppc2>
Message-ID: <20080916111335.GA6078@riviera.nuigalway.ie>

On Mon, Sep 15, 2008 at 11:27:34PM +0200, Peter Dons Tychsen wrote:
> Hello.
> 
> I have a problem loading a specific proprietary driver.
> I traced the problem to two bugs in:
> 
> - services
> - winedevice
> 
> The two bugs caused the loading to fail.
> I created and tested two fixes to solve the problem, but
> both patches were silently rejected.
> 
> Can some review them before i re-send them?
> I have looked them over several time, but i do not see a problem with
> them. The only "problem" is that there are no test cases for these
> programs, as there is no such place for such.

I was looking at adding some support for testing of the wine programs
for another bug. 

Anyway I added initial support for building tests for programs, and I
hadn't sent it in as I have yet to add the test cases.

Current structure I have pretty much copies the rules Makefile used for 
dll's with some minor changes. Would it be worth sending this in, or 
should I be looking to try and keep it to one rules file and keep that
generic enough for test changes to both dlls and exes. Not sure if it's
possible but I can try.

-- 
Darragh

"Nothing is foolproof to a sufficiently talented fool."


From juan.lang at gmail.com  Tue Sep 16 09:58:43 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 16 Sep 2008 07:58:43 -0700
Subject: Rejected patches needing review.
In-Reply-To: <1221514054.3195.9.camel@dhcppc2>
References: <1221514054.3195.9.camel@dhcppc2>
Message-ID: <3a768c550809160758l216cbc8vc42414162e25ffd3@mail.gmail.com>

Hi Peter,

diff --git a/programs/services/services.c b/programs/services/services.c
index 36ed117..cd71a1f 100644
--- a/programs/services/services.c
+++ b/programs/services/services.c
@@ -106,9 +106,9 @@ static DWORD load_service_config(HKEY hKey, struct
service_entry *entry)
         return err;
     if ((err = load_reg_string(hKey, SZ_DESCRIPTION,  0,
&entry->description)) != 0)
         return err;
-    if ((err = load_reg_multisz(hKey, SZ_DEPEND_ON_SERVICE,
&entry->dependOnServices)) != 0)
+    if ((err = load_reg_multisz(hKey, SZ_DEPEND_ON_SERVICE, TRUE,
&entry->dependOnServices)) != 0)
         return err;
-    if ((err = load_reg_multisz(hKey, SZ_DEPEND_ON_GROUP,
&entry->dependOnGroups)) != 0)
+    if ((err = load_reg_multisz(hKey, SZ_DEPEND_ON_GROUP, FALSE,
&entry->dependOnGroups)) != 0)
         return err;

     if ((err = load_reg_dword(hKey, SZ_TYPE,
&entry->config.dwServiceType)) != 0)
diff --git a/programs/services/services.h b/programs/services/services.h
index fd99bf9..cd7de02 100644
--- a/programs/services/services.h
+++ b/programs/services/services.h
@@ -87,7 +87,7 @@ LPWSTR strdupW(LPCWSTR str);
 BOOL check_multisz(LPCWSTR lpMultiSz, DWORD cbSize);

 DWORD load_reg_string(HKEY hKey, LPCWSTR szValue, BOOL bExpand,
LPWSTR *output);
-DWORD load_reg_multisz(HKEY hKey, LPCWSTR szValue, LPWSTR *output);
+DWORD load_reg_multisz(HKEY hKey, LPCWSTR szValue, BOOL bAllowSingle,
LPWSTR *output);
 DWORD load_reg_dword(HKEY hKey, LPCWSTR szValue, DWORD *output);

 static inline LPCWSTR get_display_name(struct service_entry *service)
diff --git a/programs/services/utils.c b/programs/services/utils.c
index 89eb500..191cc5f 100644
--- a/programs/services/utils.c
+++ b/programs/services/utils.c
@@ -102,7 +102,7 @@ failed:
     return err;
 }

-DWORD load_reg_multisz(HKEY hKey, LPCWSTR szValue, LPWSTR *output)
+DWORD load_reg_multisz(HKEY hKey, LPCWSTR szValue, BOOL bAllowSingle,
LPWSTR *output)
 {
     DWORD size, type;
     LPWSTR buf = NULL;
@@ -118,7 +118,7 @@ DWORD load_reg_multisz(HKEY hKey, LPCWSTR szValue,
LPWSTR *output)
         }
         goto failed;
     }
-    if (type != REG_MULTI_SZ)
+    if (!((type == REG_MULTI_SZ) || ((type == REG_SZ) && bAllowSingle)))
     {
         err = ERROR_INVALID_DATATYPE;
         goto failed;


It seems as though the bAllowSingle variable is useless, as the only
caller of it tries first with TRUE and again with FALSE.  If the
registry value is of type REG_SZ, the first call (when bAllowSingle is
TRUE) will succeed.  Similarly, if it's of type REG_MULTI_SZ, the
first call will succeed.  Thus, the second call, with bAllowSingle is
FALSE, is always unnecessary.

Furthermore, since there's only one place that calls load_reg_multisz,
and it accepts both REG_SZ and REG_MULTI_SZ, why not just change
load_reg_multisz always to accept either REG_SZ or REG_MULTI_SZ?
Complicating the interface unnecessarily isn't a good change.

I have a minor quibble with your second patch:
     LPWSTR path = NULL, str;
@@ -174,17 +175,31 @@ static BOOL load_driver(void)

     /* read the executable path from memory */
     size = 0;
-    if (RegQueryValueExW( driver_hkey, ImagePathW, NULL, &type, NULL,
&size )) return FALSE;
-
-    str = HeapAlloc( GetProcessHeap(), 0, size );
-    if (!RegQueryValueExW( driver_hkey, ImagePathW, NULL, &type,
(LPBYTE)str, &size ))
+    if (!RegQueryValueExW( driver_hkey, ImagePathW, NULL, &type, NULL, &size ))
+    {
+        str = HeapAlloc( GetProcessHeap(), 0, size );
You only use str in the then branch of this if statement, so its scope
should be changed:  it should be declared where, where it's allocated
and later freed, instead.
--Juan


From wine at mkarcher.dialup.fu-berlin.de  Tue Sep 16 12:01:21 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Tue, 16 Sep 2008 19:01:21 +0200
Subject: Rejected patches needing review.
In-Reply-To: <3a768c550809160758l216cbc8vc42414162e25ffd3@mail.gmail.com>
References: <1221514054.3195.9.camel@dhcppc2>
	<3a768c550809160758l216cbc8vc42414162e25ffd3@mail.gmail.com>
Message-ID: <1221584481.13132.53.camel@hermes2.karcher.local>

Am Dienstag, den 16.09.2008, 07:58 -0700 schrieb Juan Lang:
> Hi Peter,
> 
> diff --git a/programs/services/services.c b/programs/services/services.c
> index 36ed117..cd71a1f 100644
> --- a/programs/services/services.c
> +++ b/programs/services/services.c
> @@ -106,9 +106,9 @@ static DWORD load_service_config(HKEY hKey, struct
> service_entry *entry)
>          return err;
>      if ((err = load_reg_string(hKey, SZ_DESCRIPTION,  0, &entry->description)) != 0)
>          return err;
> -    if ((err = load_reg_multisz(hKey, SZ_DEPEND_ON_SERVICE, &entry->dependOnServices)) != 0)
> +    if ((err = load_reg_multisz(hKey, SZ_DEPEND_ON_SERVICE, TRUE, &entry->dependOnServices)) != 0)
>          return err;
> -    if ((err = load_reg_multisz(hKey, SZ_DEPEND_ON_GROUP, &entry->dependOnGroups)) != 0)
> +    if ((err = load_reg_multisz(hKey, SZ_DEPEND_ON_GROUP, FALSE, &entry->dependOnGroups)) != 0)
>          return err;

> It seems as though the bAllowSingle variable is useless, as the only
> caller of it tries first with TRUE and again with FALSE.

No, you are reading the patch wrong. It tries to read DependOnService
with TRUE, and aborts if it *fails*. If it succeeds, it loads *another*
setting (DependOnGroup) with FALSE, so definitely not a retry.

Peter, are you sure that windows will handle REG_SZ *only* in the
DependOnService case and fail if you have a REG_SZ in DependOnGroup?

Regards,
  Michael Karcher



From jwhite at codeweavers.com  Tue Sep 16 13:18:08 2008
From: jwhite at codeweavers.com (Jeremy White)
Date: Tue, 16 Sep 2008 13:18:08 -0500
Subject: Wineconf - final reminder!
Message-ID: <48CFF860.6000102@codeweavers.com>

Folks,

Just 11 days until Wineconf.  Come celebrate Wine 1.0!

  http://wiki.winehq.org/WineConf2008

I'll start up a thread for RSVPs and such on the wineconf mailing list.

Cheers,

Jeremy


From celticht32 at aol.com  Tue Sep 16 15:03:03 2008
From: celticht32 at aol.com (celticht32 at aol.com)
Date: Tue, 16 Sep 2008 16:03:03 -0400
Subject: drawprim.c and my last patchwatcher failure and question
In-Reply-To: <3944538F7A594B5EA02CE1D0D0CB8093@DMITRY>
References: <AAAA584AB353407498B35FD932571031@DMITRY>	<1221403966.32737.43.camel@hermes2.karcher.local>	<02E418FE9E004B9185720D9A70E3025F@DMITRY>	<1096648c0809160242j2a46332fs3024148a10a85c78@mail.gmail.com>
	<3944538F7A594B5EA02CE1D0D0CB8093@DMITRY>
Message-ID: <8CAE64E5C6C7911-80C-2734@webmail-db14.sysops.aol.com>

Ok I went back blew away my git tree and got the latest one out there...
I then did one patch apply using one of my patches... and started rethinking the way
I was doing? drawStridedSlow. Looking further into the code I found there was another 
function further down that did the switch but it was for another shader type not the one 
I am working on... it uses glVertexAttrib4svARB instead of glMultiTexCoord4NsvARB.
So I created a new inline function like the other (dont think it should be a inline but 
following the other convention). 

Now here is the question... 

In looking in drawprim in the function drawStridedSlow I came across this :

??????????????? int??? coordIdx = This->stateBlock->textureState[textureNo][WINED3DTSS_TEXCOORDINDEX];
??????????????? int texture_idx = This->texUnitMap[textureNo];
??????????????? float *ptrToCoords = NULL;
??????????????? float? s = 0.0, t = 0.0, r = 0.0, q = 0.0;

??????????????? if (coordIdx > 7) {
??????????????????? VTRACE(("tex: %d - Skip tex coords, as being system generated\n", textureNo));
??????????????????? continue;
??????????????? } else if (coordIdx < 0) {
??????????????????? FIXME("tex: %d - Coord index %d is less than zero, expect a crash.\n", textureNo, coordIdx);
??????????????????? continue;
??????????????? }


And as far as I can tell from that code it limits the total number texture coordinates to
8 max. I cant find anywhere in the dx9 docs where it says that it is a hard limit. I do 
see that it is based more on the video card limit than anything else... 

So the question is do we need this? If so why? so I understand...if not should I remove
as part off this patch or submit it as another?

Next Question :

Once I finish the texture patch I am working on do I do a git commit of the patch then 
a git refresh of the tree before I do the patch export to send in? or whats the process
so I dont get the messed up tree like I had before...

Thanks Guys

Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080916/2fb61a3a/attachment.htm 

From donpedro at tdcadsl.dk  Tue Sep 16 18:17:05 2008
From: donpedro at tdcadsl.dk (Peter Dons Tychsen)
Date: Wed, 17 Sep 2008 01:17:05 +0200
Subject: Rejected patches needing review.
In-Reply-To: <1221584481.13132.53.camel@hermes2.karcher.local>
References: <1221514054.3195.9.camel@dhcppc2>
	<3a768c550809160758l216cbc8vc42414162e25ffd3@mail.gmail.com>
	<1221584481.13132.53.camel@hermes2.karcher.local>
Message-ID: <1221607025.3181.15.camel@dhcppc2>

Hello Michael.

Thanks for your input (and Juan and Austin).

> Peter, are you sure that windows will handle REG_SZ *only* in the
> DependOnService case and fail if you have a REG_SZ in DependOnGroup?

No. But i did not want to change the behavior for anything else than the
scenario that i had been investigating and testing, to avoid
regressions. But i am confident that the similar behavior can be found
for DependOnGroup if you look into it. That is another patch however,
which i do not want to mix into this one.

I have re-submitted the patch,

Thanks,

/pedro



From wine at mkarcher.dialup.fu-berlin.de  Tue Sep 16 19:23:57 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Wed, 17 Sep 2008 02:23:57 +0200
Subject: Rejected patches needing review.
In-Reply-To: <1221607025.3181.15.camel@dhcppc2>
References: <1221514054.3195.9.camel@dhcppc2>
	<3a768c550809160758l216cbc8vc42414162e25ffd3@mail.gmail.com>
	<1221584481.13132.53.camel@hermes2.karcher.local>
	<1221607025.3181.15.camel@dhcppc2>
Message-ID: <1221611037.13132.98.camel@hermes2.karcher.local>

Am Mittwoch, den 17.09.2008, 01:17 +0200 schrieb Peter Dons Tychsen:
> > Peter, are you sure that windows will handle REG_SZ *only* in the
> > DependOnService case and fail if you have a REG_SZ in DependOnGroup?
> No. But i did not want to change the behavior for anything else than the
> scenario that i had been investigating and testing, to avoid
> regressions.

I can definitely understand your motivation. The problem is that this
patch seems to add unneeded complexity to wine which might cause you
problems getting it committed. Experimenting with native windows showed
strange results. If I replace the DependOnService entry in my
RemoteAccess service entry (it has a REG_MULTI_SZ hat contains just one
entry) in the registry by an REG_SZ, services.msc still shows the
dependency in the properties dialog. If I replace the DependOnGroup
(also a REG_MULTI_SZ with one entry) by a REG_SZ entry, it gets ignored
completely by services.msc in the properties dialog.

So, it might be correct to handle the two cases different, as I see
different behaviour on native. But this kind of thing should be tested
(at least manually as I did) and documented (perhaps in your commit
message) that the different loading behaviour for DependOnService and
DependOnGroup is verified. Just for reference: WinXP SP3 in KVM here.

Regards,
  Michael Karcher



From wine-devel at kievinfo.com  Wed Sep 17 09:09:13 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Wed, 17 Sep 2008 08:09:13 -0600
Subject: ntoskrnl: Implement server side of get_device
In-Reply-To: <1221606671.3181.7.camel@dhcppc2>
References: <1221606671.3181.7.camel@dhcppc2>
Message-ID: <48D10F89.2060607@kievinfo.com>

Peter Dons Tychsen wrote:
> Implement server side of get_device to complete the
> IoGetDeviceObjectPointer() function.
> 
> /pedro

My first question: what will you do with that pointer if that driver is
loaded in the separate instance of ntoskrnl? Driver that calls
IoGetDeviceObjectPointer will most likely try to dereference the pointer it
got back.

> +/* locate a device */
> +DECL_HANDLER(get_device)
> +{
> +    struct unicode_str name;
> +    get_req_unicode_str( &name );
> +
> +    /* lookup the device */
> +    struct device *device = open_object_dir(NULL, &name, 0, &device_ops);
> +    if(!device)
> +    {
> +        return;
> +    }
> +
> +    /* fill reply */
> +    reply->handle = alloc_handle(current->process, device, req->access, 0);....
> +    reply->user_ptr = device->user_ptr;
> +

You leaking reference to device here. Need release_object( device );

In your patch please include changes to server/protocol.def only and not any
other automatically generated files. Make it a separate commit in your tree
and just don't send it to wine-patches.

Vitaliy


From dank at kegel.com  Wed Sep 17 09:00:22 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 17 Sep 2008 07:00:22 -0700
Subject: wineserver assertion failure
Message-ID: <a71bd89a0809170700h6f8b7431v252ab3baabe92312@mail.gmail.com>

Hrm.  Saw this after trying the 'nytimes' crash on Google Chrome
with yesterday's wine:

wineserver: object.c:277: release_object: Assertion `obj->refcount' failed.

If it happens again, I'll report more...


From gwurster at scs.carleton.ca  Wed Sep 17 09:32:13 2008
From: gwurster at scs.carleton.ca (Glenn Wurster)
Date: Wed, 17 Sep 2008 10:32:13 -0400
Subject: Request for feedback: gdi32/tests antialiasing patch
In-Reply-To: <20080911185946.GA9020@adams.ccsl.carleton.ca>
References: <20080911185946.GA9020@adams.ccsl.carleton.ca>
Message-ID: <20080917143213.GA12971@electric.ath.cx>


Last Thursday I submitted a patch which was silently dropped.  I'd be
interested if someone could take a look at it and let me know what I'm
missing plase.  I've included the original patch e-mail for reference.
The patch was tested on XP, 98, and Wine.  I also ran it through
valgrind and it passed patchwatcher without any errors.  I've had the
conformance test sitting around for a while and believe it's best put in
the wine source tree (especially as a conformance test for the new DIB
engine).  It's a conformance test for a bug I fixed years ago in the
Wine source tree:

 * http://www.winehq.org/pipermail/wine-cvs/2005-January/013584.html
 * http://www.winehq.org/pipermail/wine-cvs/2005-January/013623.html

Thanks for any assistance anyone may be able to provide.

Glenn.

On Thu, Sep 11, 2008 at 02:59:46PM -0400, Glenn Wurster wrote:
> 
> Changelog:
>   gdi32/tests: Add font antialiasing tests
> 
> Add tests to ensure that antialiasing is not used even if requested
> when we are operating in a palette drawing mode, and that antialiasing
> is used when operating in a non-palette mode.
> 
> Changes since attempt 1:
>   * Clear the bitmap before we write the text to it.
>   * Document in this e-mail tests performed.
> 
> Tested on XP (sp2), 98, and Wine, also run through Valgrind (did this on
> the initial patch as well but forgot to mention that in the e-mail).
> 
> Glenn Wurster.
> 
> ---
>  dlls/gdi32/tests/font.c |  163 +++++++++++++++++++++++++++++++++++++++++++++++
>  1 files changed, 163 insertions(+), 0 deletions(-)

> diff --git a/dlls/gdi32/tests/font.c b/dlls/gdi32/tests/font.c
> index 7d2c036..088d4e6 100644
> --- a/dlls/gdi32/tests/font.c
> +++ b/dlls/gdi32/tests/font.c
> @@ -2430,6 +2430,168 @@ static void test_orientation(void)
>      DeleteDC(hdc);
>  }
>  
> +static void clear_bmp(HDC hdc, int width, int height, COLORREF colour)
> +{
> +    HBRUSH hbrush, hbrush_old;
> +    HPEN hpen, hpen_old;
> +
> +    hbrush = CreateSolidBrush(colour);
> +    ok(hbrush != NULL, "CreateSolidBrush failed.\n");
> +
> +    hpen = CreatePen(PS_SOLID, 0, colour);
> +    ok(hpen != NULL, "CreatePen failed.\n");
> +
> +    hpen_old = SelectObject( hdc, hpen );
> +    hbrush_old = SelectObject( hdc, hbrush );
> +    ok(hpen_old != NULL, "SelectObject failed.\n");
> +    ok(hbrush_old != NULL, "SelectObject failed.\n");
> +
> +    ok(Rectangle(hdc, 0, 0, width, height), "Rectangle failed.\n");
> +
> +    SelectObject(hdc, hbrush_old);
> +    DeleteObject(hbrush);
> +    SelectObject(hdc, hpen_old);
> +    DeleteObject(hpen);
> +}
> +
> +static COLORREF check_bmp_colors(HDC hdc, COLORREF * colours, int colorCnt, int width, int height)
> +{
> +    COLORREF pixel;
> +    int x, y, z;
> +    for(y = 0; y < height; y++)
> +    {
> +        for(x = 0; x < width; x++)
> +        {
> +            pixel = GetPixel(hdc, x, y);
> +            for(z = 0; z < colorCnt; z++)
> +            {
> +                if(pixel == colours[z])
> +                    break;
> +            }
> +            if(z >= colorCnt)
> +            {
> +                return pixel;
> +            }
> +        }
> +    }
> +    return 0;
> +}
> +
> +static void test_antialias(void)
> +{
> +    PALETTEENTRY paletteEntries[3] = {
> +        { 0x00, 0x00, 0x00, PC_NOCOLLAPSE },
> +        { 0xFF, 0xFF, 0xFF, PC_NOCOLLAPSE },
> +        { 0x44, 0x44, 0x44, PC_NOCOLLAPSE }
> +    };
> +    HDC hdc;
> +    HFONT hfont, old_hfont;
> +    HPALETTE hpal, old_hpal;
> +    LOGPALETTE * lpal;
> +    HBITMAP hbmp, old_hbmp;
> +    BITMAPINFO * bmi;
> +    COLORREF colours[3];
> +    int cntr;
> +    COLORREF pixel;
> +
> +    hdc = CreateCompatibleDC(0);
> +
> +    /* Create an antialiased font.  We don't really care what the specific font is */
> +    hfont = CreateFont(32, 0, 0, 0, FW_REGULAR, FALSE, FALSE, FALSE, ANSI_CHARSET, OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS, ANTIALIASED_QUALITY, DEFAULT_PITCH | FF_DONTCARE, NULL);
> +    old_hfont = SelectObject(hdc, hfont);
> +    ok(old_hfont != NULL, "SelectObject failed.\n");
> +
> +    /* Set up a palette */
> +    lpal = (LOGPALETTE *)HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(LOGPALETTE) + 3*sizeof(PALETTEENTRY));
> +    lpal->palNumEntries = 3;
> +    lpal->palVersion = 0x0300;
> +    lpal->palPalEntry[0] = paletteEntries[0];
> +    lpal->palPalEntry[1] = paletteEntries[1];
> +    lpal->palPalEntry[2] = paletteEntries[2];
> +    hpal = CreatePalette(lpal);
> +    HeapFree(GetProcessHeap(), 0, lpal);
> +    old_hpal = SelectPalette(hdc, hpal, FALSE);
> +    ok(old_hpal != NULL, "SelectPalette failed.\n");
> +    
> +    /* Create an 8bit bitmap to draw into */
> +    bmi = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(BITMAPINFO) + 3 * sizeof(RGBQUAD));
> +    bmi->bmiHeader.biSize = sizeof(BITMAPINFOHEADER);
> +    bmi->bmiHeader.biWidth = 20;
> +    bmi->bmiHeader.biHeight = -20;
> +    bmi->bmiHeader.biPlanes = 1;
> +    bmi->bmiHeader.biBitCount = 8;
> +    bmi->bmiHeader.biCompression = BI_RGB;
> +    bmi->bmiHeader.biClrUsed = 3;
> +    for(cntr = 0; cntr < 3; cntr++)
> +    {
> +        bmi->bmiColors[cntr].rgbRed = paletteEntries[cntr].peRed;
> +        bmi->bmiColors[cntr].rgbGreen = paletteEntries[cntr].peGreen;
> +        bmi->bmiColors[cntr].rgbBlue = paletteEntries[cntr].peBlue;
> +        bmi->bmiColors[cntr].rgbReserved = 0;
> +        colours[cntr] = RGB(paletteEntries[cntr].peRed, paletteEntries[cntr].peGreen, paletteEntries[cntr].peBlue);
> +    }
> +
> +    hbmp = CreateDIBSection(hdc, bmi, DIB_RGB_COLORS, 0, 0, 0);
> +    ok(hbmp != NULL, "error=%d\n", GetLastError());
> +    old_hbmp = SelectObject(hdc, hbmp);
> +    ok(old_hbmp != NULL, "error=%d\n", GetLastError());
> +
> +    HeapFree(GetProcessHeap(), 0, bmi);
> +
> +    /* Set up the text colours */
> +    SetTextColor(hdc, RGB(0xFF, 0xFF, 0xFF));
> +    SetBkColor(hdc, RGB(0, 0, 0));
> +    SetBkMode(hdc, OPAQUE);
> +
> +    /* Draw an 'O' offset to see if antialiasing was
> +     * used. Antialiasing should be restricted to colours in the
> +     * palette (if it is done at all). */
> +    clear_bmp(hdc, 20, 20, RGB(0, 0, 0));
> +    ok(ExtTextOut(hdc, 0, -4, 0, NULL, "O", 1, NULL), "ExtTextOut failed.\n");
> +    pixel = check_bmp_colors(hdc, colours, 3, 20, 20);
> +    ok(pixel == 0, "Found invalid pixel: %x.\n", pixel);
> +
> +    /* Cleanup the palette stuff */
> +    SelectPalette(hdc, old_hpal, FALSE);
> +    DeleteObject(hpal);
> +    SelectObject(hdc, old_hbmp);
> +    DeleteObject(hbmp);
> +
> +    /* Create an RGB bitmap to draw into */
> +    bmi = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(BITMAPINFO));
> +    bmi->bmiHeader.biSize = sizeof(BITMAPINFOHEADER);
> +    bmi->bmiHeader.biWidth = 20;
> +    bmi->bmiHeader.biHeight = -20;
> +    bmi->bmiHeader.biPlanes = 1;
> +    bmi->bmiHeader.biBitCount = 32;
> +    bmi->bmiHeader.biCompression = BI_RGB;
> +    bmi->bmiHeader.biClrUsed = 0;
> +
> +    hbmp = CreateDIBSection(hdc, bmi, DIB_RGB_COLORS, 0, 0, 0);
> +    ok(hbmp != NULL, "error=%d\n", GetLastError());
> +    old_hbmp = SelectObject(hdc, hbmp);
> +    ok(old_hbmp != NULL, "error=%d\n", GetLastError());
> +
> +    HeapFree(GetProcessHeap(), 0, bmi);
> +
> +    /* Draw an 'O' offset to see if antialiasing was used.
> +     * Antialiasing should be used when we specify an antialiasing
> +     * font and use a RGB bitmap. */
> +    clear_bmp(hdc, 20, 20, RGB(0, 0, 0));
> +    ok(ExtTextOut(hdc, 0, -4, 0, NULL, "O", 1, NULL), "ExtTextOut failed.\n");
> +    pixel = check_bmp_colors(hdc, colours, 2, 20, 20);
> +    ok(pixel != 0, "Antialiasing was not used.\n");
> +
> +    /* Free the bitmap */
> +    SelectObject(hdc, old_hbmp);
> +    DeleteObject(hbmp);
> +
> +    /* Free the rest of our memory */
> +    SelectObject(hdc, old_hfont);
> +    DeleteObject(hfont);
> +    DeleteDC(hdc);
> +}
> +
>  START_TEST(font)
>  {
>      init();
> @@ -2449,6 +2611,7 @@ START_TEST(font)
>      test_GetFontUnicodeRanges();
>      test_nonexistent_font();
>      test_orientation();
> +    test_antialias();
>  
>      /* On Windows Arial has a lot of default charset aliases such as Arial Cyr,
>       * I'd like to avoid them in this test.

> 



From jjmckenzie51 at earthlink.net  Wed Sep 17 10:57:14 2008
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Wed, 17 Sep 2008 08:57:14 -0700 (GMT-07:00)
Subject: user32: Stub for LockWorkStation (try 3)
Message-ID: <27740301.1221667035022.JavaMail.root@elwamui-rustique.atl.sa.earthlink.net>

Paul:

I'm glad you removed this 'feature' as it would not work at all with Wine on a Mac system.

James Mckenzie


-----Original Message-----
>From: Paul Chitescu <paulc at voip.null.ro>
>Sent: Sep 17, 2008 8:12 AM
>To: Wine Patches <wine-patches at winehq.org>
>Subject: user32: Stub for LockWorkStation (try 3)
>
>Changelog:
>	user32: Stub for LockWorkStation
>
>Please do not ask for an implementation based on xdg-screensaver as Alexandre 
>will not accept it. Sorry, Steven.



From robertshearman at gmail.com  Wed Sep 17 10:57:33 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 17 Sep 2008 16:57:33 +0100
Subject: wineserver assertion failure
In-Reply-To: <a71bd89a0809170700h6f8b7431v252ab3baabe92312@mail.gmail.com>
References: <a71bd89a0809170700h6f8b7431v252ab3baabe92312@mail.gmail.com>
Message-ID: <1096648c0809170857p2b7049eenea23fa28e980ef7b@mail.gmail.com>

Hi Dan,

2008/9/17 Dan Kegel <dank at kegel.com>:
> Hrm.  Saw this after trying the 'nytimes' crash on Google Chrome
> with yesterday's wine:
>
> wineserver: object.c:277: release_object: Assertion `obj->refcount' failed.
>
> If it happens again, I'll report more...

You might want to run with the following added to release_object just
before the "assert( obj->refcount );" to get enough information to be
able to debug the issue if it happens again:

if (!obj->refcount)
    obj->ops->dump( ptr, 1 );

Also, you might want to change the assert into "*(char *)0 = 0" and
enable coredumps (ulimit -c unlimited) so that a core file is
generated that you can debug further with gdb, if necessary.

-- 
Rob Shearman


From hverbeet at codeweavers.com  Wed Sep 17 11:06:34 2008
From: hverbeet at codeweavers.com (Henri Verbeet)
Date: Wed, 17 Sep 2008 18:06:34 +0200
Subject: [1/5] wined3d: Clarify a comment
In-Reply-To: <48D113B7.7020507@codeweavers.com>
References: <48D113B7.7020507@codeweavers.com>
Message-ID: <48D12B0A.7030801@codeweavers.com>

Ignore this set, I missed an issue with volumes between the 2nd and 3rd
patch.




From donpedro at tdcadsl.dk  Wed Sep 17 15:10:06 2008
From: donpedro at tdcadsl.dk (Peter Dons Tychsen)
Date: Wed, 17 Sep 2008 22:10:06 +0200
Subject: ntoskrnl: Implement server side of get_device
In-Reply-To: <48D10F89.2060607@kievinfo.com>
References: <1221606671.3181.7.camel@dhcppc2> <48D10F89.2060607@kievinfo.com>
Message-ID: <1221682206.3178.9.camel@dhcppc2>

Hi Vitaliy.

Thanks for your comments,

> My first question: what will you do with that pointer if that driver is
> loaded in the separate instance of ntoskrnl? Driver that calls
> IoGetDeviceObjectPointer will most likely try to dereference the pointer it
> got back.
You are right. Something is not right here. I will investigate it
further. Maybe i need to take a copy of the handle which is suitable for
the context.

> You leaking reference to device here. Need release_object( device );
Roger.

> In your patch please include changes to server/protocol.def only and not any
> other automatically generated files. Make it a separate commit in your tree
> and just don't send it to wine-patches.
I totally agree. I don't even think these files should be in git *at
all*. Auto-generated files do not belong in the revision control system.
In this case they should be generated by the build system. I also
noticed that there are no dependencies for these files, so they are not
re-generated when protocol.def changes. This should be fixed.

But Alexandre does it the same way i did it. That is why i did it.
Look at this:
http://source.winehq.org/git/wine.git/?a=commitdiff;h=05b4181cac1f567f786a0ce7c182adb7e7355880

/pedro



From hverbeet at gmail.com  Wed Sep 17 16:01:47 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Wed, 17 Sep 2008 23:01:47 +0200
Subject: d3dx9: Add d3dx9effect.h
In-Reply-To: <870488.76358.qm@web26102.mail.ukl.yahoo.com>
References: <870488.76358.qm@web26102.mail.ukl.yahoo.com>
Message-ID: <d658b69e0809171401k637bd4f3w2912a9579f33a5dd@mail.gmail.com>

2008/9/17 Busquets P?rez Luis C. <luiscar2001 at yahoo.es>:
> b0VIM 7.1.......
> ?e?H..M.?L..root
> ................
> ................
> ....localhost.lo
> caldomain.......
> ............/win
> e-git/0001--modi
> fied-include-d3d
> x9.h.patch......
> ................

That's probably not what you meant to attach. Also, it's bad practice
to work as root.

From wine-devel at kievinfo.com  Wed Sep 17 16:27:39 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Wed, 17 Sep 2008 15:27:39 -0600
Subject: ntoskrnl: Implement server side of get_device
In-Reply-To: <1221682206.3178.9.camel@dhcppc2>
References: <1221606671.3181.7.camel@dhcppc2>	 <48D10F89.2060607@kievinfo.com>
	<1221682206.3178.9.camel@dhcppc2>
Message-ID: <48D1764B.3040306@kievinfo.com>

Peter Dons Tychsen wrote:
> Hi Vitaliy.
> 
> Thanks for your comments,
> 
>> My first question: what will you do with that pointer if that driver is
>> loaded in the separate instance of ntoskrnl? Driver that calls
>> IoGetDeviceObjectPointer will most likely try to dereference the pointer it
>> got back.
> You are right. Something is not right here. I will investigate it
> further. Maybe i need to take a copy of the handle which is suitable for
> the context.

Well I'm not sure what good will it be? The caller asks for the pointer to
the DEVICE_OBJECT to do something with that structure. You can't just give
it some handle. It needs to be complete structure. And not just any
structure but the one for that device.

But that's where it all starts. When another driver will ask to add itself
to the chain of this device what will happen? Wine needs to modify this
object, so that means passing it through the server back? What about
actually calling this chain?

> But Alexandre does it the same way i did it. That is why i did it.
> Look at this:
> http://source.winehq.org/git/wine.git/?a=commitdiff;h=05b4181cac1f567f786a0ce7c182adb7e7355880

Alexandre is a special case :) He is the maintainer and keeps the tree in
the proper state. When you submit patches, they go through his hands. So you
need to do what's required for Alexandre to process your patch without
making his work any more difficult.

In short - just don't include automatically generated pieces in your patches.

Vitaliy


From mah at jump-ing.de  Wed Sep 17 18:18:34 2008
From: mah at jump-ing.de (Markus Hitter)
Date: Thu, 18 Sep 2008 01:18:34 +0200
Subject: Taking advantage of debug libraries
Message-ID: <820E5683-B970-4063-883A-486348A9C281@jump-ing.de>


Hello all,

now, as I get better and better on juggling with the various debugger  
options, I'm at a point where I'd like to get advantage of MS' C++  
runtime debug libraries.

Looking at MSDN, they recommend to turn a few switches in the IDE  
and ... but this won't work, as I can't re-link my binary.

Looking at what my app does, it obviously looks for mfc70.dll and is  
satisfied with getting mfc80.dll. To a Unix guy like me this looks  
weird.

All Visual C++ distributions I could have a look at come with mfc42*  
libraries, no matter how recent the IDE distro is. So I've put this  
into C:/windows/system and hoped for even more magic - but it didn't  
happen. Still segment names only in winedbg.


My question is: is it possible to take advantage of the mfc42d.dll/ 
mfc42d.map/mfc42d.pdb file trio to get debug symbols in winedbg? Or  
perhaps even in generic gdb?

If yes, where would I put these files or how would I load their  
tables into the debugger?


Thanks,
MarKus

- - - - - - - - - - - - - - - - - - -
Dipl. Ing. Markus Hitter
http://www.jump-ing.de/






From celticht32 at aol.com  Wed Sep 17 19:28:10 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Wed, 17 Sep 2008 20:28:10 -0400
Subject: drawprim.c  next iteration
In-Reply-To: <27740301.1221667035022.JavaMail.root@elwamui-rustique.atl.sa.earthlink.net>
References: <27740301.1221667035022.JavaMail.root@elwamui-rustique.atl.sa.earthlink.net>
Message-ID: <48D1A09A.8070702@aol.com>

Ok this is another iteration of the drawprim.c code I have been working 
on.. I made it match a better way I think...
I didn't do any git patches until after I comitted  my patch and it 
compiled cleanly. Then after it compiled clean I git commit -a
then did a git update to sync with the repository.. then generated the
patch attached here... please let me know if this is a little better 
before I send it to the patch list =)


Chris
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0001-drawprim.c-function-drawStridedSlow-to-add-in-correct.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080917/518a6379/attachment.txt 

From celticht32 at aol.com  Wed Sep 17 16:28:41 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Wed, 17 Sep 2008 17:28:41 -0400
Subject: [PATCH] drawprim.c  function drawStridedSlow to add in correctly the textures
Message-ID: <mailman.253.1221697713.25118.wine-devel@winehq.org>

---
 dlls/wined3d/drawprim.c |  120 ++++++++++++++++++++++++++--------------------
 1 files changed, 68 insertions(+), 52 deletions(-)

diff --git a/dlls/wined3d/drawprim.c b/dlls/wined3d/drawprim.c
index 37cbe19..46b43d7 100644
--- a/dlls/wined3d/drawprim.c
+++ b/dlls/wined3d/drawprim.c
@@ -276,6 +276,7 @@ static void drawStridedFast(IWineD3DDevice *iface,UINT numberOfVertices, GLenum
     return;
 }
 
+
 /*
  * Actually draw using the supplied information.
  * Slower GL version which extracts info about each vertex in turn
@@ -298,6 +299,8 @@ static void drawStridedSlow(IWineD3DDevice *iface, WineDirect3DVertexStridedData
 
     BYTE *texCoords[WINED3DDP_MAXTEXCOORD];
     BYTE *diffuse = NULL, *specular = NULL, *normal = NULL, *position = NULL;
+    float r = 0.0, s = 0.0, t = 0.0, u = 0.0,x = 0.0, y = 0.0, z = 0.0, w = 0.0;
+    short rs = 0, ss = 0, ts = 0, us = 0;
 
     TRACE("Using slow vertex array code\n");
 
@@ -417,13 +420,13 @@ static void drawStridedSlow(IWineD3DDevice *iface, WineDirect3DVertexStridedData
             }
 
             /* Query tex coords */
-            if (This->stateBlock->textures[textureNo] != NULL || pixelShader) {
-
+            if (This->stateBlock->textures[textureNo] || pixelShader) {
                 int    coordIdx = This->stateBlock->textureState[textureNo][WINED3DTSS_TEXCOORDINDEX];
                 int texture_idx = This->texUnitMap[textureNo];
                 float *ptrToCoords = NULL;
-                float  s = 0.0, t = 0.0, r = 0.0, q = 0.0;
-
+                short *ptrToShortCoords = NULL;
+                
+                if (texture_idx == -1) continue;
                 if (coordIdx > 7) {
                     VTRACE(("tex: %d - Skip tex coords, as being system generated\n", textureNo));
                     continue;
@@ -433,64 +436,77 @@ static void drawStridedSlow(IWineD3DDevice *iface, WineDirect3DVertexStridedData
                 }
 
                 ptrToCoords = (float *)(texCoords[coordIdx] + (SkipnStrides * sd->u.s.texCoords[coordIdx].dwStride));
-                if (texCoords[coordIdx] == NULL) {
+                ptrToShortCoords = (short *)(texCoords[coordIdx] + (SkipnStrides * sd->u.s.texCoords[coordIdx].dwStride));
+                
+                if (!texCoords[coordIdx]) {
                     TRACE("tex: %d - Skipping tex coords, as no data supplied\n", textureNo);
                     if (GL_SUPPORT(ARB_MULTITEXTURE)) {
                         GL_EXTCALL(glMultiTexCoord4fARB(GL_TEXTURE0_ARB + texture_idx, 0, 0, 0, 1));
                     } else {
                         glTexCoord4f(0, 0, 0, 1);
-                    }
+                    }                        
                     continue;
-                } else {
-                    int coordsToUse = sd->u.s.texCoords[coordIdx].dwType + 1; /* 0 == WINED3DDECLTYPE_FLOAT1 etc */
-
-                    if (texture_idx == -1) continue;
-
-                    /* The coords to supply depend completely on the fvf / vertex shader */
-                    switch (coordsToUse) {
-                    case 4: q = ptrToCoords[3]; /* drop through */
-                    case 3: r = ptrToCoords[2]; /* drop through */
-                    case 2: t = ptrToCoords[1]; /* drop through */
-                    case 1: s = ptrToCoords[0];
-                    }
-
-                    switch (coordsToUse) {   /* Supply the provided texture coords */
-                    case WINED3DTTFF_COUNT1:
-                        VTRACE(("tex:%d, s=%f\n", textureNo, s));
-                        if (GL_SUPPORT(ARB_MULTITEXTURE)) {
-                            GL_EXTCALL(glMultiTexCoord1fARB(GL_TEXTURE0_ARB + texture_idx, s));
-                        } else {
-                            glTexCoord1f(s);
-                        }
+                }
+                r =  ptrToCoords[0];
+                s =  ptrToCoords[1];
+                t =  ptrToCoords[2];
+                u =  ptrToCoords[3];  
+                rs = ptrToShortCoords[0];
+                ss = ptrToShortCoords[1];
+                ts = ptrToShortCoords[2];
+                us = ptrToShortCoords[3];
+                x = float_16_to_32(((unsigned short *) ptrToCoords) + 0);
+                y = float_16_to_32(((unsigned short *) ptrToCoords) + 1);
+                z = float_16_to_32(((unsigned short *) ptrToCoords) + 2);
+                w = float_16_to_32(((unsigned short *) ptrToCoords) + 3);
+
+                TRACE("Texture %d Texture Number %d\n",sd->u.s.texCoords[coordIdx].dwType,textureNo);
+                switch(sd->u.s.texCoords[coordIdx].dwType) {
+                    case WINED3DDECLTYPE_FLOAT1:
+                        glTexCoord1f(r);
                         break;
-                    case WINED3DTTFF_COUNT2:
-                        VTRACE(("tex:%d, s=%f, t=%f\n", textureNo, s, t));
-                        if (GL_SUPPORT(ARB_MULTITEXTURE)) {
-                            GL_EXTCALL(glMultiTexCoord2fARB(GL_TEXTURE0_ARB + texture_idx, s, t));
-                        } else {
-                            glTexCoord2f(s, t);
-                        }
+                    case WINED3DDECLTYPE_FLOAT2:
+                        glTexCoord2f(r,s);
                         break;
-                    case WINED3DTTFF_COUNT3:
-                        VTRACE(("tex:%d, s=%f, t=%f, r=%f\n", textureNo, s, t, r));
-                        if (GL_SUPPORT(ARB_MULTITEXTURE)) {
-                            GL_EXTCALL(glMultiTexCoord3fARB(GL_TEXTURE0_ARB + texture_idx, s, t, r));
-                        } else {
-                            glTexCoord3f(s, t, r);
-                        }
+                    case WINED3DDECLTYPE_FLOAT3:
+                        glTexCoord3f(r,s,t);
                         break;
-                    case WINED3DTTFF_COUNT4:
-                        VTRACE(("tex:%d, s=%f, t=%f, r=%f, q=%f\n", textureNo, s, t, r, q));
-                        if (GL_SUPPORT(ARB_MULTITEXTURE)) {
-                            GL_EXTCALL(glMultiTexCoord4fARB(GL_TEXTURE0_ARB + texture_idx, s, t, r, q));
-                        } else {
-                            glTexCoord4f(s, t, r, q);
-                        }
+                    case WINED3DDECLTYPE_FLOAT4:
+                        glTexCoord4f(r,s,t,u);
                         break;
+                    case WINED3DDECLTYPE_UBYTE4:
+                    case WINED3DDECLTYPE_UBYTE4N:
+                    case WINED3DDECLTYPE_D3DCOLOR:
+                        FIXME("unsure how to handle byte types\n");
+                        break;
+                    case WINED3DDECLTYPE_USHORT2N:
+                    case WINED3DDECLTYPE_SHORT2N:
+                    case WINED3DDECLTYPE_SHORT2:
+                         ts = 0;
+                         us = 1;
+                    case WINED3DDECLTYPE_SHORT4N:
+                    case WINED3DDECLTYPE_USHORT4N:
+                    case WINED3DDECLTYPE_SHORT4:
+                        glTexCoord4s(rs,ss,ts,us);
+                        break;
+                    case WINED3DDECLTYPE_UDEC3:
+                        FIXME("Unsure about WINED3DDECLTYPE_UDEC3\n");
+                        break;
+                    case WINED3DDECLTYPE_DEC3N:
+                        FIXME("Unsure about WINED3DDECLTYPE_DEC3N\n");
+                        break;
+                    case WINED3DDECLTYPE_FLOAT16_2:
+                        glTexCoord2f(x, y);
+                        break;
+                    case WINED3DDECLTYPE_FLOAT16_4:
+                        glTexCoord4f(x, y, z, w);
+                        break;
+                    case WINED3DDECLTYPE_UNUSED:
                     default:
-                        FIXME("Should not get here as coordsToUse is two bits only (%x)!\n", coordsToUse);
-                    }
+                        ERR("Unexpected attribute declaration: %d\n", sd->u.s.texCoords[coordIdx].dwType);
+                        break;
                 }
+
             }
         } /* End of textures */
 
@@ -540,7 +556,7 @@ static void drawStridedSlow(IWineD3DDevice *iface, WineDirect3DVertexStridedData
         }
 
         /* Normal -------------------------------- */
-        if (normal != NULL) {
+        if (normal) {
             float *ptrToCoords = (float *)(normal + (SkipnStrides * sd->u.s.normal.dwStride));
             normal_funcs[sd->u.s.normal.dwType](ptrToCoords);
         }
@@ -552,7 +568,7 @@ static void drawStridedSlow(IWineD3DDevice *iface, WineDirect3DVertexStridedData
         }
 
         /* For non indexed mode, step onto next parts */
-        if (idxData == NULL) {
+        if (!idxData) {
             ++SkipnStrides;
         }
     }
-- 
1.5.5.1


--------------070609020402000608010104--


From donpedro at tdcadsl.dk  Wed Sep 17 20:14:44 2008
From: donpedro at tdcadsl.dk (Peter Dons Tychsen)
Date: Thu, 18 Sep 2008 03:14:44 +0200
Subject: ntoskrnl: Implement server side of get_device
In-Reply-To: <48D1764B.3040306@kievinfo.com>
References: <1221606671.3181.7.camel@dhcppc2>
	<48D10F89.2060607@kievinfo.com> <1221682206.3178.9.camel@dhcppc2>
	<48D1764B.3040306@kievinfo.com>
Message-ID: <1221700484.3178.24.camel@dhcppc2>

Hi V.

> Well I'm not sure what good will it be? The caller asks for the pointer to
> the DEVICE_OBJECT to do something with that structure. You can't just give
> it some handle. It needs to be complete structure. And not just any
> structure but the one for that device.
Sorry. I did not mean the handle, but the device pointer.

I have done some more research on this function. The implementation i
made was totally off track!

IoGetDeviceObjectPointer is allot like calling NtOpenFile(), except it
does not return the handle. Instead it return a file-pointer, which is
of type FILE_OBJECT. A list of these would probably have to be kept for
each process, with some kind of map to the handle. We will also need it
when implementing ObReferenceObjectByHandle().

Apart from that i am not totally sure how to get the process-dependent
device pointer. Maybe it should be copied... needs more investigation.

> Alexandre is a special case :) He is the maintainer and keeps the tree in
> the proper state. When you submit patches, they go through his hands. So you
> need to do what's required for Alexandre to process your patch without
> making his work any more difficult.
> 
> In short - just don't include automatically generated pieces in your patches.
Roger.

I guess my patch was a bit premature... not to mention totally nuts!

/pedro



From xerox_xerox2000 at yahoo.co.uk  Thu Sep 18 02:01:47 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis Lenders)
Date: Thu, 18 Sep 2008 07:01:47 +0000 (UTC)
Subject: howto fix bug 13462
References: <401182.27391.qm@web23201.mail.ird.yahoo.com>
	<1096648c0809150500p7eed06edsa99831260aa4f83@mail.gmail.com>
	<loom.20080915T150641-532@post.gmane.org>
	<1096648c0809150849s7df00e26x5212891add859899@mail.gmail.com>
Message-ID: <loom.20080918T065615-409@post.gmane.org>

Rob Shearman <robertshearman <at> gmail.com> writes:



> 
> That's not acceptable as that change will cause applications that do
> use the returned interface to either crash on a NULL pointer (if you
> set *ppv to NULL and return S_OK) or stack corruption (if you return a
> pointer to the wrong interface). You will be turning a known
> unimplemented feature into a buggy feature which will be harder to fix
> later.
> 
> > So what now?
> 
> If running the tests on Windows show that the interface in question is
> implemented for the Context object then add that interface to the
> object with stubbed functions.

Hi Rob, thanks for the reply. I'll add your comments to the bug report.
 As for fixing the bug + the tests myself, i guess i have to learn a 
lot more about this stuff, but maybe someone (with more knowledge on this 
matter) can use your hints to get the bug fixed. Regards 






From robertshearman at gmail.com  Thu Sep 18 02:05:01 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Thu, 18 Sep 2008 08:05:01 +0100
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
Message-ID: <1096648c0809180005o3846b65i83173eadbbcbfd57@mail.gmail.com>

2008/9/18 Austin English <austinenglish at gmail.com>:
> Should help avoid bugs like bug 15266 and promote more proper, portable code.

> Tried compiling Wine with -Werror, got a few interesting results. First one:
>
> austin at austin-desktop:~/wine-git/dlls/jscript$ make
> gcc -c -I. -I. -I../../include -I../../include  -D__WINESRC__  -D_REENTRANT
> -fPIC -Wall -Werror -pipe -fno-strict-aliasing -Wdeclaration-after-statement
> -Wwrite-strings -Wpointer-arith  -g -O2  -o engine.o engine.c
> cc1: warnings being treated as errors
> engine.c: In function 'var_statement_eval':
> engine.c:500: warning: 'hres' is used uninitialized in this function

Or it could just be that they had a different compiler version to you
and so the warning didn't appear for them. This is the trouble with
using -Werror in an uncontrolled environment - a developer using one
version of the compiler could commit code that compiles cleanly for
them, but not for another developer using a different compiler version
and so stop them from being able to build Wine. That's fine if we want
to do it, but we have to consider whether it is worth the hassle for
whatever increase in quality we get from it.

-- 
Rob Shearman


From hverbeet at gmail.com  Thu Sep 18 02:25:37 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Thu, 18 Sep 2008 09:25:37 +0200
Subject: d3dx9: Add d3dx9effect.h
In-Reply-To: <5f9140a20809180013t7749ad83u6740ba0af776bcd4@mail.gmail.com>
References: <181459.39684.qm@web26108.mail.ukl.yahoo.com>
	<5f9140a20809180013t7749ad83u6740ba0af776bcd4@mail.gmail.com>
Message-ID: <d658b69e0809180025j19810737gfd4ae94ab68fe269@mail.gmail.com>

2008/9/18 David Adam <david.adam.cnrs at gmail.com>:
> Hello,
>
>
> +    // Pool
>
> C++ comment is forbidden
>

2008/9/18 Busquets P?rez Luis C. <luiscar2001 at yahoo.es>:
> +    // Selecting and setting a technique
...
> +    // Using current technique
...
> +    // Managing D3D Device
...
> +    // Logging device calls
...
> +    // Parameter blocks
...
> +    // Cloning
...
> +    // Fast path for setting variables directly in ID3DXEffect

Actually, you shouldn't copy those from the Microsoft header in the
first place.


> +DEFINE_GUID( IID_ID3DXEffect,
> +0xb589b04a, 0x293d, 0x4516, 0xaf, 0xb, 0x3d, 0x7d, 0xbc, 0xf5, 0xac, 0x54);
That's interesting though, my headers have "0xf6ceb4b3, 0x4e4c,
0x40dd, 0xb8, 0x83, 0x8d, 0x8d, 0xe5, 0xea, 0xc, 0xd5" as the GUID for
IID_ID3DXEffect.

From thunderbird2k at gmx.net  Thu Sep 18 02:27:21 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Thu, 18 Sep 2008 09:27:21 +0200
Subject: winex11.drv: Make wglShareLists() cope with previously selected
	destination context (try 3)
In-Reply-To: <562546.13342.qm@web87003.mail.ird.yahoo.com>
References: <562546.13342.qm@web87003.mail.ird.yahoo.com>
Message-ID: <20080918072721.319130@gmx.net>

Hi,

First of all note that glXDestroyContext only destroys a context after no of the other threads is using it (it is in the specs of glXDestroyContext). Second there are some more issues in wglShareLists which shouldn't get fixed in your patch but which I plan to fix at a later stage which you should take into account. Some BAD class of apps calls wglShareLists before making the source context current (so it isn't backed by a GLX context) while it has made the destination one current. In such case we need to perform a swap as right now such programs crash. MSDN clearly mentions that the hglrc2 parameter shouldn't contain any existing display lists, so this situation isn't allowed. This would mean wglShareLists(dest, source) is invalid and second that when perform a legal wglShareLists(source, dest) that dest can't have been current in any thread.

Since wglShareLists is a tricky function which might require very ugly hacks I want to keep it as clean as possible. This means that you should write a small wine test case for the behavior of wglShareLists in the situation affected by your patch.

Roderick

> The current wglShareLists() will fail if the destination context has ever
> been made current. This causes a crash in Homeworld 2, unless pbuffers are
> disabled. This patch fixes the crash by deleting and recreating the
> underlying OpenGL context, unless it is still current in some thread.
> 
> Improved patch by: Moving the deletion of the old context into the
> wine_tsx11_lock where it belongs; tracking whether a WGL context is current in
> some thread so we don't deselect it out from under the app; adding an
> explanatory comment; a more professional change entry ;)

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger


From mstefani at redhat.com  Thu Sep 18 02:58:15 2008
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Thu, 18 Sep 2008 09:58:15 +0200
Subject: PrintDlgEx [2/7]: Add basic dialog.
In-Reply-To: <163937790809172230r31849390q60ada1a8683f522c@mail.gmail.com>
References: <163937790809172230r31849390q60ada1a8683f522c@mail.gmail.com>
Message-ID: <48D20A17.6060707@redhat.com>

Hello Gal,

there is no point in adding new resources in English to the other
languages rc files. If a resource doesn't exist Win32 will automatically
fail over to use the en_US version.

Actually its even detrimental to add the new resources as:
a.) http://pf128.krakow.sdi.tpnet.pl/wine-transl/ cannot show those
resources as untranslated.
b.) The copied English resources have a tendency to bit-rot.
c.) The patch is smaller and offers the exact same functionality.

You need to only amend existing resources in the language files that
have that resource. To make it easy the Wine wrc supports the
--verify-translation switch. Just take the wrc command that make is
running in that directory and append --verify-translation to it. Do that
before and after you applied your patch. If you see additional lines
popping up that start with "DIFF" or "ERR" your patch breaks the
translations and you'll have to check what resource you need to amend.

Gal Topper wrote:
>  dlls/comdlg32/cdlg_Bg.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Cs.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Da.rc |   38 +++++++
>  dlls/comdlg32/cdlg_De.rc |   38 +++++++
>  dlls/comdlg32/cdlg_El.rc |   38 +++++++
>  dlls/comdlg32/cdlg_En.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Eo.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Es.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Fi.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Fr.rc |   38 +++++++
>  dlls/comdlg32/cdlg_It.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Ja.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Ko.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Nl.rc |   38 +++++++
>  dlls/comdlg32/cdlg_No.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Pl.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Pt.rc |   85 +++++++++++++++
>  dlls/comdlg32/cdlg_Ro.rc |   40 +++++++
>  dlls/comdlg32/cdlg_Ru.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Si.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Sk.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Sv.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Th.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Tr.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Uk.rc |   38 +++++++
>  dlls/comdlg32/cdlg_Zh.rc |   38 +++++++
>  dlls/comdlg32/printdlg.c |  269 +++++++++++++++++++++++++++++++++++++++++++++-
>  dlls/comdlg32/printdlg.h |   20 ++++-
>  28 files changed, 1323 insertions(+), 3 deletions(-)

bye
	michael


From fgouget at free.fr  Thu Sep 18 03:30:43 2008
From: fgouget at free.fr (Francois Gouget)
Date: Thu, 18 Sep 2008 10:30:43 +0200 (CEST)
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <1096648c0809180005o3846b65i83173eadbbcbfd57@mail.gmail.com>
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<1096648c0809180005o3846b65i83173eadbbcbfd57@mail.gmail.com>
Message-ID: <alpine.DEB.1.10.0809181025480.29855@amboise.dolphin>

On Thu, 18 Sep 2008, Rob Shearman wrote:
[...]
> > engine.c:500: warning: 'hres' is used uninitialized in this function
> 
> Or it could just be that they had a different compiler version to you
> and so the warning didn't appear for them. This is the trouble with
> using -Werror in an uncontrolled environment

Maybe patchwatcher could detect new warnings (e.g. using git-blame as I 
described before) and either flag the patch outright as incorrect, or 
give it an intermediate state between bad patches (those that don't 
compile or cause test regressions) and good ones (that compile and don't 
cause test regressions).

In either case it would be good to run the conformance tests on such 
patches anyway so the submitter can fix both the compilation warning and 
any test issue in one roundtrip.

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
        A polar bear is a cartesian bear after a coordinate transform.


From stefan at codeweavers.com  Thu Sep 18 09:10:37 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Thu, 18 Sep 2008 09:10:37 -0500
Subject: Drawprim.c patch
In-Reply-To: <48D2506D.1060309@aol.com>
References: <mailman.2099.1221715876.25122.wine-patches@winehq.org>
	<48D2506D.1060309@aol.com>
Message-ID: <00b901c91998$536bd8f0$fa438ad0$@com>

It is getting better, but still not correct.

Look at how the diffuse and specular colors are handled, and create a call
table texcoord_funcs to handle the different types.

> -----Original Message-----
> From: wine-patches-bounces at winehq.org [mailto:wine-patches-
> bounces at winehq.org] On Behalf Of Chris Ahrendt
> Sent: Thursday, September 18, 2008 7:58 AM
> To: wine-patches at winehq.org
> Subject: Drawprim.c patch
> 
> This is a redo of my drawprim patch
> 
> 
> Chris




From juan.lang at gmail.com  Thu Sep 18 09:44:14 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 18 Sep 2008 07:44:14 -0700
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <alpine.DEB.1.10.0809181025480.29855@amboise.dolphin>
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<1096648c0809180005o3846b65i83173eadbbcbfd57@mail.gmail.com>
	<alpine.DEB.1.10.0809181025480.29855@amboise.dolphin>
Message-ID: <3a768c550809180744x71b310bbq7b76cb622534d0b6@mail.gmail.com>

> Maybe patchwatcher could detect new warnings (e.g. using git-blame as I
> described before) and either flag the patch outright as incorrect, or
> give it an intermediate state between bad patches (those that don't
> compile or cause test regressions) and good ones (that compile and don't
> cause test regressions).

Since Rob was noncommittal about whether -Werror was a good or a bad
idea, I'll take a stance:  I think it's a bad one.  For one thing,
different optimization levels produce different warnings.  For
another, some warnings are just plain wrong.  In some cases the "fix"
to quiet the warning is uglier than the warning.

Having a code base that has hundreds of warnings is also a problem,
but we're fortunate enough not to be in that situation.

I think our current system isn't bad:  if one of us makes a mistake
and it gets past Alexandre, someone often points out the problem and
it gets fixed.  With -Werror, a mistake (or a gcc bug) becomes
everyone else's problem.  I don't think that's a step in the right
direction.
--Juan


From juan.lang at gmail.com  Thu Sep 18 09:59:36 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 18 Sep 2008 07:59:36 -0700
Subject: PrintDlgEx [4/7]: Implement hDevMode and hDevNames on output.
Message-ID: <3a768c550809180759p37a80eb5w14c58846f924130b@mail.gmail.com>

Hi Gal,

+            WORD locks;
+            if ((locks = (GlobalFlags(lppd->hDevMode) & GMEM_LOCKCOUNT))) {
+                WARN("hDevMode has %d locks on it. Unlocking it now\n", locks);
+                while(locks--) {
+                    GlobalUnlock(lppd->hDevMode);
+                    TRACE("Now got %d locks\n", locks);

This looks funny.  The loop may have a race condition if someone else
is locking/unlocking it.  The following would be simpler, and more
importantly, more likely to be correct:

    WORD locks;
    while ((locks = (GlobalFlags(lppd->hDevMode) & GMEM_LOCKCOUNT))) {
        GlobalUnlock(lppd->hDevMode);
        TRACE("Now got %d locks\n", locks);
    }

The same comment applies to unlocking hDevNames.
--Juan


From juan.lang at gmail.com  Thu Sep 18 10:01:37 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 18 Sep 2008 08:01:37 -0700
Subject: PrintDlgEx [1/7]: Add common failure checks and a trace.
Message-ID: <3a768c550809180801g6d35b393g3b77d0f9c4cf3edc@mail.gmail.com>

Hi Gal,

+ * This function is necessary in order to match the behaviour on
+ * Windows, which seems to do all these checks when PrintDlgEx
+ * is called. It is also necessary in order to replicate a bug in
+ * PrintDlgExA, where S_OK is returned for invalid DevMode or DevNames.

A test case would be a lot nicer than a comment.
--Juan


From andrewfenn at gmail.com  Thu Sep 18 11:15:18 2008
From: andrewfenn at gmail.com (Andrew Fenn)
Date: Thu, 18 Sep 2008 23:15:18 +0700
Subject: Patchwatcher problems
Message-ID: <b594ca9d0809180915j725d98bfqbed5e65c217fc4bf@mail.gmail.com>

Hi,

I just submitted a patch to wine patches (Started implementing the
xinput library for xbox 360 joystick support ) and I believe patch
watcher failed for a few reasons.

1) Although it applied my patch it didn't build it as
./tools/make_makefiles isn't called so it isn't built?

2) Patch watcher seems to fail because of another patch, perhaps the
latest known good build should be tested if the patch fails and then
compared with the first failed attempt?

Regards,
Andrew


From aric at codeweavers.com  Thu Sep 18 11:24:17 2008
From: aric at codeweavers.com (Aric Stewart)
Date: Thu, 18 Sep 2008 11:24:17 -0500
Subject: imm: Don't crash in ImmConfigureIME when dwMode
	is	IME_CONFIG_REGISTERWORD and lpData is NULL (resend)
In-Reply-To: <3a768c550809180805t3686bf36n6b5fe6122c385a1d@mail.gmail.com>
References: <3a768c550809180805t3686bf36n6b5fe6122c385a1d@mail.gmail.com>
Message-ID: <48D280B1.7040004@codeweavers.com>

Humm, according to MSDN:

"If dwMode is set to IME_CONFIG_REGISTERWORD, this parameter must 
indicate a REGISTERWORD structure."


If windows does not crash in this case, then maybe it would involve 
checking for the non-presence of the parameter and returning the correct 
error.

So it looks like your fix is not quite correct.

-aric

Juan Lang wrote:
> Hi,
> anything wrong with this one?
> --Juan
> 
> 
> ------------------------------------------------------------------------
> 
> 


From juan.lang at gmail.com  Thu Sep 18 11:28:07 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 18 Sep 2008 09:28:07 -0700
Subject: imm: Don't crash in ImmConfigureIME when dwMode is
	IME_CONFIG_REGISTERWORD and lpData is NULL (resend)
In-Reply-To: <48D280B1.7040004@codeweavers.com>
References: <3a768c550809180805t3686bf36n6b5fe6122c385a1d@mail.gmail.com>
	<48D280B1.7040004@codeweavers.com>
Message-ID: <3a768c550809180928l70e103e4r726b30cb6420dd79@mail.gmail.com>

Hi Aric,

On Thu, Sep 18, 2008 at 9:24 AM, Aric Stewart <aric at codeweavers.com> wrote:
> Humm, according to MSDN:
>
> "If dwMode is set to IME_CONFIG_REGISTERWORD, this parameter must
> indicate a REGISTERWORD structure."

I know, yet Office clearly passes NULL:  I wrote the patch to fix a crash in it.

> If windows does not crash in this case, then maybe it would involve
> checking for the non-presence of the parameter and returning the correct
> error.

Or perhaps continuing, as my patch does.  Oh well, I guess more tests
are needed.
--Juan


From lav at etersoft.ru  Thu Sep 18 12:55:02 2008
From: lav at etersoft.ru (Vitaly Lipatov)
Date: Thu, 18 Sep 2008 21:55:02 +0400
Subject: PrintDlgEx [1/7]: Add common failure checks and a trace.
In-Reply-To: <163937790809172230p7d7e7188m169efa02a6340116@mail.gmail.com>
References: <163937790809172230p7d7e7188m169efa02a6340116@mail.gmail.com>
Message-ID: <200809182155.03048.lav@etersoft.ru>

What about move printdlgex related code in standalone file printdlgex.c?
Is it possible? I see printdlg.c too large already.

? ????????? ?? 18 ???????? 2008 Gal Topper ???????(a):
> Changes since last attempt:
> 1) Added a comment to explain the rationale behind the CommonChecks
> function. 2) Resources and header are no longer in separate patches.
> Instead, they are added along with the code that requires them.
> 3) Some unused elements are no longer added in this patch-set.



-- 
Vitaly Lipatov, ALT Linux Team
Russia, Saint-Petersburg, www.etersoft.ru


From tony.wasserka at freenet.de  Thu Sep 18 13:28:33 2008
From: tony.wasserka at freenet.de (Tony Wasserka)
Date: Thu, 18 Sep 2008 20:28:33 +0200
Subject: d3dx9: Implement D3DXMatrixAffineTransformation2D with tests
In-Reply-To: <5f9140a20809180856s1279d2d5y32a8c7dfac724910@mail.gmail.com>
References: <5f9140a20809180856s1279d2d5y32a8c7dfac724910@mail.gmail.com>
Message-ID: <48D29DD1.7000409@freenet.de>

Hi,
you forgot the WINAPI in front of the function declaration and 
implementation.
Maybe you should add a set_mat(_11, _12, _13, ....) macro to make the 
exp_mat better to read and not that big in size,
However, I think it's better to dynamically calculate the expected 
matrix rather than compare it to hard-coded values (I'm not sure about 
that one though, it's just what _I_ would do). It would at least make 
the whole thing easier be adopted to new tests (of the same function 
with different values).
Best regards,
    Tony




From tony.wasserka at freenet.de  Thu Sep 18 13:33:16 2008
From: tony.wasserka at freenet.de (Tony Wasserka)
Date: Thu, 18 Sep 2008 20:33:16 +0200
Subject: d3dx9: Include d3dx9effect.h
In-Reply-To: <780521.31847.qm@web26107.mail.ukl.yahoo.com>
References: <780521.31847.qm@web26107.mail.ukl.yahoo.com>
Message-ID: <48D29EEC.1010806@freenet.de>

Hi,
one very little thing: You could include d3dx9.h (from d3dx9effect.h) 
after the #define __D3DX9EFFECT_H__, as this reduces compile time 
slightly when included twice or more. No actual reason to resend though, 
just an advice for future.
Best regards,
    Tony


From eric.pouech at orange.fr  Thu Sep 18 14:42:40 2008
From: eric.pouech at orange.fr (Eric Pouech)
Date: Thu, 18 Sep 2008 21:42:40 +0200
Subject: Taking advantage of debug libraries
In-Reply-To: <820E5683-B970-4063-883A-486348A9C281@jump-ing.de>
References: <820E5683-B970-4063-883A-486348A9C281@jump-ing.de>
Message-ID: <48D2AF30.6030300@orange.fr>

Markus Hitter a ?crit :
> Hello all,
>
> now, as I get better and better on juggling with the various debugger  
> options, I'm at a point where I'd like to get advantage of MS' C++  
> runtime debug libraries.
>
> Looking at MSDN, they recommend to turn a few switches in the IDE  
> and ... but this won't work, as I can't re-link my binary.
>
> Looking at what my app does, it obviously looks for mfc70.dll and is  
> satisfied with getting mfc80.dll. To a Unix guy like me this looks  
> weird.
>
> All Visual C++ distributions I could have a look at come with mfc42*  
> libraries, no matter how recent the IDE distro is. So I've put this  
> into C:/windows/system and hoped for even more magic - but it didn't  
> happen. Still segment names only in winedbg.
>
>
> My question is: is it possible to take advantage of the mfc42d.dll/ 
> mfc42d.map/mfc42d.pdb file trio to get debug symbols in winedbg? Or  
> perhaps even in generic gdb?
>
> If yes, where would I put these files or how would I load their  
> tables into the debugger?
>
>
> Thanks,
> MarKus
>
> - - - - - - - - - - - - - - - - - - -
> Dipl. Ing. Markus Hitter
> http://www.jump-ing.de/
>
>
>
>
>
>
>
>
>   
in short:
- in winedbg, yes but .pdb should be accessible through the 
_NT_SYMBOL_PATH environment variable
- under gdb: no, unless you use the winedbg's gdb remote stub (and the 
_NT_SYMBOL_PATH must also be correctly set)
A+

-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)




From celticht32 at aol.com  Thu Sep 18 15:02:07 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Thu, 18 Sep 2008 16:02:07 -0400
Subject: Drawprim.c patch
In-Reply-To: <00b901c91998$536bd8f0$fa438ad0$@com>
References: <mailman.2099.1221715876.25122.wine-patches@winehq.org>
	<48D2506D.1060309@aol.com> <00b901c91998$536bd8f0$fa438ad0$@com>
Message-ID: <48D2B3BF.9040707@aol.com>

Stefan D?singer wrote:
> It is getting better, but still not correct.
> 
> Look at how the diffuse and specular colors are handled, and create a call
> table texcoord_funcs to handle the different types.
> 
>> -----Original Message-----
>> From: wine-patches-bounces at winehq.org [mailto:wine-patches-
>> bounces at winehq.org] On Behalf Of Chris Ahrendt
>> Sent: Thursday, September 18, 2008 7:58 AM
>> To: wine-patches at winehq.org
>> Subject: Drawprim.c patch
>>
>> This is a redo of my drawprim patch
>>
>>
>> Chris
> 
> 
K I will take a look at the diffuse and colors code...  I was actually 
trying to make it a seperate call but could never get the damned void * 
to work right so I just inlined it into the code like you see.

texcoord_funcs??????


Chris


From dank at kegel.com  Thu Sep 18 18:27:22 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 18 Sep 2008 16:27:22 -0700
Subject: Patchwatcher problems
Message-ID: <a71bd89a0809181627te4c804dyb2f86b638cce48e5@mail.gmail.com>

Andrew Fenn wrote:
> I just submitted a patch to wine patches (Started implementing the
> xinput library for xbox 360 joystick support ) and I believe patch
> watcher failed for a few reasons.
>
>1) Although it applied my patch it didn't build it as
>./tools/make_makefiles isn't called so it isn't built?

I think make_makefiles is called:
http://code.google.com/p/winezeug/source/browse/trunk/patchwatcher/patchwatcher.sh#129
Maybe I should make the log more verbose...

> 2) Patch watcher seems to fail because of another patch, perhaps the
> latest known good build should be tested if the patch fails and then
> compared with the first failed attempt?

We don't accumulate patches.  There was no other patch active
when yours was tested.  This was probably just a rare failure
of a slightly flaky test.  When I verify that tests are flaky, I
add them to a blacklist.  You just got unlucky, I think.
Once you figure out why your patch didn't trigger your stuff
to be built, resubmit...
- Dan


From dank at kegel.com  Thu Sep 18 18:42:03 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 18 Sep 2008 16:42:03 -0700
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<1096648c0809180005o3846b65i83173eadbbcbfd57@mail.gmail.com>
	<alpine.DEB.1.10.0809181025480.29855@amboise.dolphin>
	<3a768c550809180744x71b310bbq7b76cb622534d0b6@mail.gmail.com>
	<b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
Message-ID: <a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>

Juan wrote:
> Since Rob was noncommittal about whether -Werror was a good or a bad
> idea, I'll take a stance:  I think it's a bad one. ...
> some warnings are just plain wrong.  In some cases the "fix"
> to quiet the warning is uglier than the warning.

In those cases, we can disable the warning.

> Having a code base that has hundreds of warnings is also a problem,
> but we're fortunate enough not to be in that situation.

Are you sure about that?  When I configure with -Wall -Werror,
I can't even configure properly; one gets the errors

configure: libxrandr development files not found, XRandr won't be supported.
configure: libxinerama development files not found, multi-monitor
setups won't be supported.
configure: WARNING: Old Mesa headers detected. Consider upgrading your
Mesa libraries.
OpenGL and Direct3D won't be supported.

And if one blows past those, "make depend" fails.  In fact, everything
fails pretty spectacularly.

We should probably have a look at -Wall errors in more detail and breadth
before we assume that we're ok.
- Dan


From juan.lang at gmail.com  Thu Sep 18 19:10:46 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 18 Sep 2008 17:10:46 -0700
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<1096648c0809180005o3846b65i83173eadbbcbfd57@mail.gmail.com>
	<alpine.DEB.1.10.0809181025480.29855@amboise.dolphin>
	<3a768c550809180744x71b310bbq7b76cb622534d0b6@mail.gmail.com>
	<b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
	<a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
Message-ID: <3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>

> Are you sure about that?  When I configure with -Wall -Werror,
> I can't even configure properly; one gets the errors
>
> configure: libxrandr development files not found, XRandr won't be supported.
> configure: libxinerama development files not found, multi-monitor
> setups won't be supported.
> configure: WARNING: Old Mesa headers detected. Consider upgrading your
> Mesa libraries.
> OpenGL and Direct3D won't be supported.

This is precisely part of the problem with -Werror.  You've now caused
some configure checks to fail that, presumably, were passing before.
Are they worth making warning-free?  Some of the warnings may be in
headers we don't control.  What do we do then?

> And if one blows past those, "make depend" fails.  In fact, everything
> fails pretty spectacularly.

So a broken config leads to a broken compile?  I guess I'm not seeing
the severity of that.
--Juan


From truiken at gmail.com  Thu Sep 18 19:17:33 2008
From: truiken at gmail.com (James Hawkins)
Date: Thu, 18 Sep 2008 19:17:33 -0500
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<1096648c0809180005o3846b65i83173eadbbcbfd57@mail.gmail.com>
	<alpine.DEB.1.10.0809181025480.29855@amboise.dolphin>
	<3a768c550809180744x71b310bbq7b76cb622534d0b6@mail.gmail.com>
	<b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
	<a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
	<3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
Message-ID: <22821af30809181717p779bcb4at983b4e29794a7604@mail.gmail.com>

On Thu, Sep 18, 2008 at 7:10 PM, Juan Lang <juan.lang at gmail.com> wrote:
>> Are you sure about that?  When I configure with -Wall -Werror,
>> I can't even configure properly; one gets the errors
>>
>> configure: libxrandr development files not found, XRandr won't be supported.
>> configure: libxinerama development files not found, multi-monitor
>> setups won't be supported.
>> configure: WARNING: Old Mesa headers detected. Consider upgrading your
>> Mesa libraries.
>> OpenGL and Direct3D won't be supported.
>
> This is precisely part of the problem with -Werror.  You've now caused
> some configure checks to fail that, presumably, were passing before.
> Are they worth making warning-free?  Some of the warnings may be in
> headers we don't control.  What do we do then?
>

I think the important thing for Dan's case is that he also used -Wall,
which we should never turn on by default, especially not with -Werror.
 Correct me if I've made an incorrect assumption.

-- 
James Hawkins


From juan.lang at gmail.com  Thu Sep 18 19:20:38 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 18 Sep 2008 17:20:38 -0700
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <22821af30809181717p779bcb4at983b4e29794a7604@mail.gmail.com>
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<1096648c0809180005o3846b65i83173eadbbcbfd57@mail.gmail.com>
	<alpine.DEB.1.10.0809181025480.29855@amboise.dolphin>
	<3a768c550809180744x71b310bbq7b76cb622534d0b6@mail.gmail.com>
	<b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
	<a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
	<3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
	<22821af30809181717p779bcb4at983b4e29794a7604@mail.gmail.com>
Message-ID: <3a768c550809181720o3d26081aqf8544f0b9e18fa85@mail.gmail.com>

> I think the important thing for Dan's case is that he also used -Wall,
> which we should never turn on by default, especially not with -Werror.
>  Correct me if I've made an incorrect assumption.

-Wall is turned by default:
  EXTRACFLAGS="-Wall -pipe"

--Juan


From truiken at gmail.com  Thu Sep 18 19:21:53 2008
From: truiken at gmail.com (James Hawkins)
Date: Thu, 18 Sep 2008 19:21:53 -0500
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <3a768c550809181720o3d26081aqf8544f0b9e18fa85@mail.gmail.com>
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<1096648c0809180005o3846b65i83173eadbbcbfd57@mail.gmail.com>
	<alpine.DEB.1.10.0809181025480.29855@amboise.dolphin>
	<3a768c550809180744x71b310bbq7b76cb622534d0b6@mail.gmail.com>
	<b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
	<a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
	<3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
	<22821af30809181717p779bcb4at983b4e29794a7604@mail.gmail.com>
	<3a768c550809181720o3d26081aqf8544f0b9e18fa85@mail.gmail.com>
Message-ID: <22821af30809181721k40ee5af9na860be4e4954a2b8@mail.gmail.com>

On Thu, Sep 18, 2008 at 7:20 PM, Juan Lang <juan.lang at gmail.com> wrote:
>> I think the important thing for Dan's case is that he also used -Wall,
>> which we should never turn on by default, especially not with -Werror.
>>  Correct me if I've made an incorrect assumption.
>
> -Wall is turned by default:
>  EXTRACFLAGS="-Wall -pipe"
>

K, wasn't sure.  Thanks for the info.

-- 
James Hawkins


From dank at kegel.com  Thu Sep 18 19:45:31 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 18 Sep 2008 17:45:31 -0700
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<1096648c0809180005o3846b65i83173eadbbcbfd57@mail.gmail.com>
	<alpine.DEB.1.10.0809181025480.29855@amboise.dolphin>
	<3a768c550809180744x71b310bbq7b76cb622534d0b6@mail.gmail.com>
	<b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
	<a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
	<3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
Message-ID: <a71bd89a0809181745x5cc7a3a3lfa54ed7e3c1ddb65@mail.gmail.com>

On Thu, Sep 18, 2008 at 5:10 PM, Juan Lang <juan.lang at gmail.com> wrote:
>> Are you sure about that?  When I configure with -Wall -Werror,
>> I can't even configure properly; one gets the errors
>>
>> configure: libxrandr development files not found, XRandr won't be supported.
>
> This is precisely part of the problem with -Werror.  You've now caused
> some configure checks to fail that, presumably, were passing before.
> Are they worth making warning-free?  Some of the warnings may be in
> headers we don't control.  What do we do then?

You're pretty negative on this idea, aren't you?  Let me whittle away at
it a bit before we reject it as impractical.

>> And if one blows past those, "make depend" fails.  In fact, everything
>> fails pretty spectacularly.
>
> So a broken config leads to a broken compile?

No, there seem to be multiple severe breakages not caused by the
slightly broken config.
But let me gather some more data.
- Dan


From dank at kegel.com  Thu Sep 18 19:46:58 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 18 Sep 2008 17:46:58 -0700
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <22821af30809181717p779bcb4at983b4e29794a7604@mail.gmail.com>
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<1096648c0809180005o3846b65i83173eadbbcbfd57@mail.gmail.com>
	<alpine.DEB.1.10.0809181025480.29855@amboise.dolphin>
	<3a768c550809180744x71b310bbq7b76cb622534d0b6@mail.gmail.com>
	<b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
	<a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
	<3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
	<22821af30809181717p779bcb4at983b4e29794a7604@mail.gmail.com>
Message-ID: <a71bd89a0809181746x3232277blda58d7647d0172c5@mail.gmail.com>

On Thu, Sep 18, 2008 at 5:17 PM, James Hawkins <truiken at gmail.com> wrote:
> I think the important thing for Dan's case is that he also used -Wall,
> which we should never turn on by default, especially not with -Werror.
>  Correct me if I've made an incorrect assumption.

Many serious projects always use both -Wall and -Werror, including Chrome.

It would be nice if Wine also became serious in this regard,
but it will take some work to get there.
- Dan


From juan.lang at gmail.com  Thu Sep 18 19:54:33 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 18 Sep 2008 17:54:33 -0700
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <a71bd89a0809181745x5cc7a3a3lfa54ed7e3c1ddb65@mail.gmail.com>
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<1096648c0809180005o3846b65i83173eadbbcbfd57@mail.gmail.com>
	<alpine.DEB.1.10.0809181025480.29855@amboise.dolphin>
	<3a768c550809180744x71b310bbq7b76cb622534d0b6@mail.gmail.com>
	<b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
	<a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
	<3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
	<a71bd89a0809181745x5cc7a3a3lfa54ed7e3c1ddb65@mail.gmail.com>
Message-ID: <3a768c550809181754g722f069wcf8958b83bcdee19@mail.gmail.com>

> You're pretty negative on this idea, aren't you?  Let me whittle away at
> it a bit before we reject it as impractical.

Sure, have fun.

I've used -Wall -Werror with success in the past with a medium-sized
code base, and used it as a stick to keep people from checking in
dodgy code.  So it's not that it's always impractical.  The issue I
have is that a distributed development environment makes it hard, as
does maintaining a portable code base linked against many possible
versions of libraries.  If a commit doesn't break on Alexandre's box,
and it gets committed, but it does break on some other machine, what
then?  Who fixes it?

I think that individually, we can turn it on from time to time to see
what pops up, just like running with valgrind.  But forcing everyone
to run with it seems draconian.
--Juan


From dank at kegel.com  Thu Sep 18 19:59:03 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 18 Sep 2008 17:59:03 -0700
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <3a768c550809181754g722f069wcf8958b83bcdee19@mail.gmail.com>
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<1096648c0809180005o3846b65i83173eadbbcbfd57@mail.gmail.com>
	<alpine.DEB.1.10.0809181025480.29855@amboise.dolphin>
	<3a768c550809180744x71b310bbq7b76cb622534d0b6@mail.gmail.com>
	<b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
	<a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
	<3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
	<a71bd89a0809181745x5cc7a3a3lfa54ed7e3c1ddb65@mail.gmail.com>
	<3a768c550809181754g722f069wcf8958b83bcdee19@mail.gmail.com>
Message-ID: <a71bd89a0809181759i4ec7047bv2a1ea69cd35ecd70@mail.gmail.com>

On Thu, Sep 18, 2008 at 5:54 PM, Juan Lang <juan.lang at gmail.com> wrote:
> If a commit doesn't break on Alexandre's [and patchwatcher's] box,
> and it gets committed, but it does break on some other machine, what
> then?  Who fixes it?

I suppose the answer there is "patchwatcher builds with multiple compilers"
and/or "affected users with bum compilers turn off -Werror"
and/or "we disable the errors that have high failure rates on some compilers".

> I think that individually, we can turn it on from time to time to see
> what pops up, just like running with valgrind.

You obviously don't understand my plans with patchwatcher and valgrind :-)

> But forcing everyone to run with it seems draconian.

What is "draconian" but a synonym for "dictatotorial"?  Sounds like it
would fit in just fine with Wine's maintainer's style :-)
- Dan


From juan.lang at gmail.com  Thu Sep 18 20:01:57 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 18 Sep 2008 18:01:57 -0700
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <a71bd89a0809181759i4ec7047bv2a1ea69cd35ecd70@mail.gmail.com>
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<alpine.DEB.1.10.0809181025480.29855@amboise.dolphin>
	<3a768c550809180744x71b310bbq7b76cb622534d0b6@mail.gmail.com>
	<b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
	<a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
	<3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
	<a71bd89a0809181745x5cc7a3a3lfa54ed7e3c1ddb65@mail.gmail.com>
	<3a768c550809181754g722f069wcf8958b83bcdee19@mail.gmail.com>
	<a71bd89a0809181759i4ec7047bv2a1ea69cd35ecd70@mail.gmail.com>
Message-ID: <3a768c550809181801y6987dd27sd601bae00b718d7c@mail.gmail.com>

> I suppose the answer there is "patchwatcher builds with multiple compilers"
> and/or "affected users with bum compilers turn off -Werror"
> and/or "we disable the errors that have high failure rates on some compilers".

Sure, that makes as much sense as what I suggested.  Consider me
mollified, but I withhold the right for an "I told you so" if this
leads to silly bugs and patches flying around ;-)

> You obviously don't understand my plans with patchwatcher and valgrind :-)

Okay, now you're piquing my interest :)

> What is "draconian" but a synonym for "dictatotorial"?  Sounds like it
> would fit in just fine with Wine's maintainer's style :-)

You've got me there :)
--Juan


From winehacker at gmail.com  Thu Sep 18 20:02:04 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Thu, 18 Sep 2008 21:02:04 -0400
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <a71bd89a0809181746x3232277blda58d7647d0172c5@mail.gmail.com>
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<1096648c0809180005o3846b65i83173eadbbcbfd57@mail.gmail.com>
	<alpine.DEB.1.10.0809181025480.29855@amboise.dolphin>
	<3a768c550809180744x71b310bbq7b76cb622534d0b6@mail.gmail.com>
	<b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
	<a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
	<3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
	<22821af30809181717p779bcb4at983b4e29794a7604@mail.gmail.com>
	<a71bd89a0809181746x3232277blda58d7647d0172c5@mail.gmail.com>
Message-ID: <19e31a080809181802q96109eaxca86854b82a126fa@mail.gmail.com>

On Thu, Sep 18, 2008 at 8:46 PM, Dan Kegel <dank at kegel.com> wrote:
> On Thu, Sep 18, 2008 at 5:17 PM, James Hawkins <truiken at gmail.com> wrote:
>> I think the important thing for Dan's case is that he also used -Wall,
>> which we should never turn on by default, especially not with -Werror.
>>  Correct me if I've made an incorrect assumption.
>
> Many serious projects always use both -Wall and -Werror, including Chrome.

And not so serious ones. We actually try to use -Werror everywhere in
ROS except the Wine code and a few other third party modules. I think
it would be a good idea to enable it on a selective basis in Wine,
start with programs,server,libs,etc and then slowly turn it on for
dlls.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From galt280 at gmail.com  Thu Sep 18 23:55:22 2008
From: galt280 at gmail.com (Gal Topper)
Date: Fri, 19 Sep 2008 00:55:22 -0400
Subject: PrintDlgEx [1/7]: Add common failure checks and a trace.
In-Reply-To: <3a768c550809180801g6d35b393g3b77d0f9c4cf3edc@mail.gmail.com>
References: <3a768c550809180801g6d35b393g3b77d0f9c4cf3edc@mail.gmail.com>
Message-ID: <163937790809182155k7abf2f7ei3d671a235ddd4932@mail.gmail.com>

Hi Juan,

I indeed submitted a set of tests that included these cases. Specifically:

http://www.nabble.com/PrintDlgEx-tests--7-9-%3A-Add-tests-for-PD_RETURNDEFAULT.-td19293210.html#a19293210

http://www.nabble.com/PrintDlgEx-tests--9-9-%3A-Add-a-test-for-PD_RETURNDEFAULT-that-is-specific-to-PrintDlgExW.-td19293240.html#a19293240

Cheers,
Gal

On Thu, Sep 18, 2008 at 11:01 AM, Juan Lang <juan.lang at gmail.com> wrote:
> Hi Gal,
>
> + * This function is necessary in order to match the behaviour on
> + * Windows, which seems to do all these checks when PrintDlgEx
> + * is called. It is also necessary in order to replicate a bug in
> + * PrintDlgExA, where S_OK is returned for invalid DevMode or DevNames.
>
> A test case would be a lot nicer than a comment.
> --Juan
>


From galt280 at gmail.com  Fri Sep 19 00:32:40 2008
From: galt280 at gmail.com (Gal Topper)
Date: Fri, 19 Sep 2008 01:32:40 -0400
Subject: PrintDlgEx [2/7]: Add basic dialog.
In-Reply-To: <48D20A17.6060707@redhat.com>
References: <163937790809172230r31849390q60ada1a8683f522c@mail.gmail.com>
	<48D20A17.6060707@redhat.com>
Message-ID: <163937790809182232q15ce1a61j297660abc37cf9ab@mail.gmail.com>

Thanks so much. I wish I had that info earlier so that I wouldn't have
had to edit all these resources by hand. :-)

-Gal

On Thu, Sep 18, 2008 at 3:58 AM, Michael Stefaniuc <mstefani at redhat.com> wrote:
> Hello Gal,
>
> there is no point in adding new resources in English to the other
> languages rc files. If a resource doesn't exist Win32 will automatically
> fail over to use the en_US version.
>
> Actually its even detrimental to add the new resources as:
> a.) http://pf128.krakow.sdi.tpnet.pl/wine-transl/ cannot show those
> resources as untranslated.
> b.) The copied English resources have a tendency to bit-rot.
> c.) The patch is smaller and offers the exact same functionality.
>
> You need to only amend existing resources in the language files that
> have that resource. To make it easy the Wine wrc supports the
> --verify-translation switch. Just take the wrc command that make is
> running in that directory and append --verify-translation to it. Do that
> before and after you applied your patch. If you see additional lines
> popping up that start with "DIFF" or "ERR" your patch breaks the
> translations and you'll have to check what resource you need to amend.
>
> Gal Topper wrote:
>>  dlls/comdlg32/cdlg_Bg.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Cs.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Da.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_De.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_El.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_En.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Eo.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Es.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Fi.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Fr.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_It.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Ja.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Ko.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Nl.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_No.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Pl.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Pt.rc |   85 +++++++++++++++
>>  dlls/comdlg32/cdlg_Ro.rc |   40 +++++++
>>  dlls/comdlg32/cdlg_Ru.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Si.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Sk.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Sv.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Th.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Tr.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Uk.rc |   38 +++++++
>>  dlls/comdlg32/cdlg_Zh.rc |   38 +++++++
>>  dlls/comdlg32/printdlg.c |  269 +++++++++++++++++++++++++++++++++++++++++++++-
>>  dlls/comdlg32/printdlg.h |   20 ++++-
>>  28 files changed, 1323 insertions(+), 3 deletions(-)
>
> bye
>        michael
>


From galt280 at gmail.com  Fri Sep 19 00:46:26 2008
From: galt280 at gmail.com (Gal Topper)
Date: Fri, 19 Sep 2008 01:46:26 -0400
Subject: PrintDlgEx [1/7]: Add common failure checks and a trace.
In-Reply-To: <200809182155.03048.lav@etersoft.ru>
References: <163937790809172230p7d7e7188m169efa02a6340116@mail.gmail.com>
	<200809182155.03048.lav@etersoft.ru>
Message-ID: <163937790809182246p35b433bbsd18a3a623faec72c@mail.gmail.com>

There's some code sharing between PrintDlg and PrintDlgEx, and a
potential for more, but it's definitely _possible_ to separate them
into two different files. I'm not sure it's the best thing to do
though.

On Thu, Sep 18, 2008 at 1:55 PM, Vitaly Lipatov <lav at etersoft.ru> wrote:
> What about move printdlgex related code in standalone file printdlgex.c?
> Is it possible? I see printdlg.c too large already.
>
> ? ????????? ?? 18 ???????? 2008 Gal Topper ???????(a):
>> Changes since last attempt:
>> 1) Added a comment to explain the rationale behind the CommonChecks
>> function. 2) Resources and header are no longer in separate patches.
>> Instead, they are added along with the code that requires them.
>> 3) Some unused elements are no longer added in this patch-set.
>
>
>
> --
> Vitaly Lipatov, ALT Linux Team
> Russia, Saint-Petersburg, www.etersoft.ru
>

From julliard at winehq.org  Fri Sep 19 03:17:41 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 19 Sep 2008 10:17:41 +0200
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <a71bd89a0809181759i4ec7047bv2a1ea69cd35ecd70@mail.gmail.com>
	(Dan Kegel's message of "Thu, 18 Sep 2008 17:59:03 -0700")
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<1096648c0809180005o3846b65i83173eadbbcbfd57@mail.gmail.com>
	<alpine.DEB.1.10.0809181025480.29855@amboise.dolphin>
	<3a768c550809180744x71b310bbq7b76cb622534d0b6@mail.gmail.com>
	<b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
	<a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
	<3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
	<a71bd89a0809181745x5cc7a3a3lfa54ed7e3c1ddb65@mail.gmail.com>
	<3a768c550809181754g722f069wcf8958b83bcdee19@mail.gmail.com>
	<a71bd89a0809181759i4ec7047bv2a1ea69cd35ecd70@mail.gmail.com>
Message-ID: <874p4ck0re.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> On Thu, Sep 18, 2008 at 5:54 PM, Juan Lang <juan.lang at gmail.com> wrote:
>> If a commit doesn't break on Alexandre's [and patchwatcher's] box,
>> and it gets committed, but it does break on some other machine, what
>> then?  Who fixes it?
>
> I suppose the answer there is "patchwatcher builds with multiple compilers"
> and/or "affected users with bum compilers turn off -Werror"
> and/or "we disable the errors that have high failure rates on some compilers".

No, the answer is "developers who really want their build to die on
simple warnings can turn it on". We need Wine to build properly on a
wide range of platforms and compiler versions, there's simply no way to
ensure that the compile will always be warning free.

It is very important that everybody be able to build Wine and give it a
try, even non-developers. That's why I'm so strict about portable code,
proper configure checks, and conservative makefiles. There's nothing
worse than downloading a project you want to play with and find out you
can't even compile it. A compile failure is a serious bug, and we should
do everything possible to avoid them. Making -Werror the default is the
worse thing we could do in that respect.

-- 
Alexandre Julliard
julliard at winehq.org


From jim_24601 at btinternet.com  Fri Sep 19 08:37:03 2008
From: jim_24601 at btinternet.com (Jim Cameron)
Date: Fri, 19 Sep 2008 13:37:03 +0000 (GMT)
Subject: winex11.drv: Make wglShareLists() cope with previously selected
	destination context (try 3)
In-Reply-To: <20080918072721.319130@gmx.net>
Message-ID: <659673.25478.qm@web87015.mail.ird.yahoo.com>

> First of all note that glXDestroyContext only destroys a
> context after no of the other threads is using it (it is in
> the specs of glXDestroyContext).

Surely this means we've got to be doubly careful about keeping track of contexts that are current, otherwise we'd end up with WGL contexts backed by GLX contexts that aren't current in the thread they're supposed to be current in, and get hard-to-diagnose bugs.

> Second there are some more
> issues in wglShareLists which shouldn't get fixed in
> your patch but which I plan to fix at a later stage which
> you should take into account. Some BAD class of apps calls
> wglShareLists before making the source context current (so
> it isn't backed by a GLX context) while it has made the
> destination one current. In such case we need to perform a
> swap as right now such programs crash.

OK. There's a patch floating about somewhere that swaps source and destination contexts for a couple of games that need it, I considered something along those lines but thought better of it.

> MSDN clearly mentions
> that the hglrc2 parameter shouldn't contain any existing
> display lists, so this situation isn't allowed. This
> would mean wglShareLists(dest, source) is invalid and second
> that when perform a legal wglShareLists(source, dest) that
> dest can't have been current in any thread.

I took that statement from MSDN to imply that you can't have created any display lists glGenLists() in the destination context, but not say anything about having previously made it current in some thread. Does it imply that as well? Windows clearly allows it (or at least, allows the app to get away with doing it), or Windows apps wouldn't do it.

> Since wglShareLists is a tricky function which might
> require very ugly hacks I want to keep it as clean as
> possible. This means that you should write a small wine test
> case for the behavior of wglShareLists in the situation
> affected by your patch.

Will do, thanks.

jim



From chris.kcat at gmail.com  Fri Sep 19 08:51:17 2008
From: chris.kcat at gmail.com (Chris Robinson)
Date: Fri, 19 Sep 2008 06:51:17 -0700
Subject: winex11.drv: Make wglShareLists() cope with previously selected
	destination context (try 3)
In-Reply-To: <659673.25478.qm@web87015.mail.ird.yahoo.com>
References: <659673.25478.qm@web87015.mail.ird.yahoo.com>
Message-ID: <200809190651.18014.chris.kcat@gmail.com>

Resending to the proper email address, this time..

On Friday 19 September 2008 06:37:03 am Jim Cameron wrote:
> > MSDN clearly mentions
> > that the hglrc2 parameter shouldn't contain any existing
> > display lists, so this situation isn't allowed. This
> > would mean wglShareLists(dest, source) is invalid and second
> > that when perform a legal wglShareLists(source, dest) that
> > dest can't have been current in any thread.
>
> I took that statement from MSDN to imply that you can't have created any
> display lists glGenLists() in the destination context, but not say anything
> about having previously made it current in some thread. Does it imply that
> as well? Windows clearly allows it (or at least, allows the app to get away
> with doing it), or Windows apps wouldn't do it.

The referred to "lists" aren't display lists. It's more appropritely (specific 
sets of) resources.. eg. the list of valid textures, the list of valid shader 
objects, etc, are what's shared.


From jim_24601 at btinternet.com  Fri Sep 19 08:53:57 2008
From: jim_24601 at btinternet.com (Jim Cameron)
Date: Fri, 19 Sep 2008 13:53:57 +0000 (GMT)
Subject: winex11.drv: Make wglShareLists() cope with previously selected
	destination context (try 3)
In-Reply-To: <200809190651.18014.chris.kcat@gmail.com>
Message-ID: <171035.66733.qm@web87014.mail.ird.yahoo.com>

> Resending to the proper email address, this time..

And I likewise ;) (I was just thinking, "I swear I hit Reply All"...)

> The referred to "lists" aren't display lists.
> It's more appropritely (specific 
> sets of) resources.. eg. the list of valid textures, the
> list of valid shader 
> objects, etc, are what's shared.

Ah. (Or should I say Arrrr?) I thought it might be something like that. It's not as if MSDN has ever been unclear in the past, or anything...

jim



From dank at kegel.com  Fri Sep 19 09:04:51 2008
From: dank at kegel.com (Dan Kegel)
Date: Fri, 19 Sep 2008 07:04:51 -0700
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <874p4ck0re.fsf@wine.dyndns.org>
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<3a768c550809180744x71b310bbq7b76cb622534d0b6@mail.gmail.com>
	<b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
	<a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
	<3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
	<a71bd89a0809181745x5cc7a3a3lfa54ed7e3c1ddb65@mail.gmail.com>
	<3a768c550809181754g722f069wcf8958b83bcdee19@mail.gmail.com>
	<a71bd89a0809181759i4ec7047bv2a1ea69cd35ecd70@mail.gmail.com>
	<874p4ck0re.fsf@wine.dyndns.org>
Message-ID: <a71bd89a0809190704x64759e73hf7891bfce428d087@mail.gmail.com>

On Fri, Sep 19, 2008 at 1:17 AM, Alexandre Julliard <julliard at winehq.org> wrote:
> A compile failure is a serious bug, and we should do everything
> possible to avoid them.

Agreed, to an extent.   A user who is trying to compile with a really
whacky toolchain (say, a C compiler on an Amiga, a mainframe, or a wristwatch)
should expect some errors, and we should not try to avoid those if they reflect
real problems that need to be solved before wine can run properly.

And I also feel pretty strongly that compiler warnings have
some value, and we should pay attention to them.  Right
now we're plugging our ears and going "la la la la la I can't hear you",
and that seems a bit careless.   As Wine aims for higher and
higher quality levels, eventually we will have to change our ways here.

> Making -Werror the default is the worse thing we could do in that respect.

If we do it in the right way, it could end up increasing
our code quality quite a bit without inconveniencing any users.

The right way is to slowly fix all the warnings -- like Andrew Talbot
is doing --
and slowly encourage all wine developers to crank up their warning
levels to the max.  Once we've voluntarily cleared out nearly all the
warnings, we can then have a flag day to clean out all the rest,
and switch -Werror on.  That will keep errors from creeping back in.


From julliard at winehq.org  Fri Sep 19 09:35:45 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 19 Sep 2008 16:35:45 +0200
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <a71bd89a0809190704x64759e73hf7891bfce428d087@mail.gmail.com>
	(Dan Kegel's message of "Fri, 19 Sep 2008 07:04:51 -0700")
References: <b6bb06270809171801n2b2397bfw6531b325fa787b2d@mail.gmail.com>
	<3a768c550809180744x71b310bbq7b76cb622534d0b6@mail.gmail.com>
	<b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
	<a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
	<3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
	<a71bd89a0809181745x5cc7a3a3lfa54ed7e3c1ddb65@mail.gmail.com>
	<3a768c550809181754g722f069wcf8958b83bcdee19@mail.gmail.com>
	<a71bd89a0809181759i4ec7047bv2a1ea69cd35ecd70@mail.gmail.com>
	<874p4ck0re.fsf@wine.dyndns.org>
	<a71bd89a0809190704x64759e73hf7891bfce428d087@mail.gmail.com>
Message-ID: <87zlm4i4ou.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> Agreed, to an extent.   A user who is trying to compile with a really
> whacky toolchain (say, a C compiler on an Amiga, a mainframe, or a wristwatch)
> should expect some errors, and we should not try to avoid those if they reflect
> real problems that need to be solved before wine can run properly.

You don't need a wacky toolchain. All you need is a slightly old gcc, or
a platform that not everybody has access to, like Mac OS. I periodically
build on Mac OS and check for warnings, and there are always a few that
creep in, like size_t printf formats. Do you really think Wine would be
better off if it failed to build on Mac 90% of the time?  Is printing a
size_t with %d really so dangerous that it needs to break the build?

> And I also feel pretty strongly that compiler warnings have
> some value, and we should pay attention to them.  Right
> now we're plugging our ears and going "la la la la la I can't hear you",
> and that seems a bit careless.   As Wine aims for higher and
> higher quality levels, eventually we will have to change our ways here.

That's absolutely not true. We are trying very hard to avoid warnings,
I don't commit patches that add warnings, and many people are sending
fixes when they find warnings on their platform. That doesn't mean they
should break the build.

> If we do it in the right way, it could end up increasing
> our code quality quite a bit without inconveniencing any users.

It wouldn't make any difference to code quality, since we are already
warnings-free on most standard builds.

> The right way is to slowly fix all the warnings -- like Andrew Talbot
> is doing --
> and slowly encourage all wine developers to crank up their warning
> levels to the max.  Once we've voluntarily cleared out nearly all the
> warnings, we can then have a flag day to clean out all the rest,
> and switch -Werror on.  That will keep errors from creeping back in.

Everybody is free to build their tree with -Werror, but there's no way
that it will become the default.

-- 
Alexandre Julliard
julliard at winehq.org


From juan.lang at gmail.com  Fri Sep 19 10:03:57 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Fri, 19 Sep 2008 08:03:57 -0700
Subject: PrintDlgEx [1/7]: Add common failure checks and a trace.
In-Reply-To: <163937790809182155k7abf2f7ei3d671a235ddd4932@mail.gmail.com>
References: <3a768c550809180801g6d35b393g3b77d0f9c4cf3edc@mail.gmail.com>
	<163937790809182155k7abf2f7ei3d671a235ddd4932@mail.gmail.com>
Message-ID: <3a768c550809190803u35e142e3m5923ddc4ecc6cba1@mail.gmail.com>

Hi Gal,

please bottom post here.

> I indeed submitted a set of tests that included these cases. Specifically:
>
> http://www.nabble.com/PrintDlgEx-tests--7-9-%3A-Add-tests-for-PD_RETURNDEFAULT.-td19293210.html#a19293210
>
> http://www.nabble.com/PrintDlgEx-tests--9-9-%3A-Add-a-test-for-PD_RETURNDEFAULT-that-is-specific-to-PrintDlgExW.-td19293240.html#a19293240

Yes, and they weren't committed, perhaps because they don't pass
without your implementation?  I don't know, I didn't try.

My point is, rather than including comments that say this and that
behavior was tested on Windows version xyz, you should include test
cases that demonstrate that, in one of two ways:
1. As a patch with tests that currently fails, each marked with todo_wine.
2. As a patch containing both implementation and tests.

If you choose the first option, your implementation patch should
remove the todo_wine from the (now succeeding) tests.
--Juan


From hverbeet at gmail.com  Fri Sep 19 11:45:33 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 19 Sep 2008 18:45:33 +0200
Subject: [PATCH 4/7] d3dx9: Add a D3DXCreateTexture stub.
In-Reply-To: <20080919154505.GD8405@zorkmid.localnetwork>
References: <20080919154505.GD8405@zorkmid.localnetwork>
Message-ID: <d658b69e0809190945y1c699aa8m37eff6d8f5ab5c61@mail.gmail.com>

2008/9/19 Philip Nilsson <pnilsson at nullref.se>:
> +    if (ret != D3D_OK)
> +        return ret;
> +
> +    return D3D_OK;
This doesn't really make sense.


From hverbeet at gmail.com  Fri Sep 19 12:04:04 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 19 Sep 2008 19:04:04 +0200
Subject: [PATCH 3/7] d3dx9: Implement D3DXCheckTextureRequirements.
In-Reply-To: <20080919163550.GA8839@zorkmid.localnetwork>
References: <20080919154448.GC8405@zorkmid.localnetwork>
	<20080919163550.GA8839@zorkmid.localnetwork>
Message-ID: <d658b69e0809191004s62fa5ebfk50f9f16ca830648@mail.gmail.com>

2008/9/19 Philip Nilsson <pnilsson at nullref.se>:

> +        hr = IDirect3DDevice9_GetDirect3D(device, &d3d9);
> +        if (hr != D3D_OK || !device)
> +            return D3DERR_INVALIDCALL;
> +
> +        IDirect3D9_GetAdapterDisplayMode(d3d9, D3DADAPTER_DEFAULT, &d3ddm);
> +
> +        /* TODO: Use something more advanced that looks more like what's in MSDN. */
> +        hr = IDirect3D9_CheckDeviceFormat(d3d9, D3DADAPTER_DEFAULT, D3DDEVTYPE_HAL, d3ddm.Format, usage, D3DRTYPE_TEXTURE, *format);
You shouldn't guess the adapter, device type, etc., but use whatever
the device was created with. IDirect3DDevice9_GetCreationParameters()
should help there.

> +        if (hr != D3D_OK) {
> +            if (usage & D3DUSAGE_DEPTHSTENCIL) {
> +                switch (*format) {
...
> +        }
> +        IDirect3D9_Release(d3d9);
> +    }
I'm not sure about the big switch statement there, but I do know that
just changing the format isn't enough. There's no guarantee the new
format will work, or if there is any format that will support that
specific set of usage flags at all.


From hverbeet at gmail.com  Fri Sep 19 12:10:29 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 19 Sep 2008 19:10:29 +0200
Subject: [PATCH 7/7] d3dx9/tests: Test D3DXCreateTexture.
In-Reply-To: <20080919154838.GG8405@zorkmid.localnetwork>
References: <20080919154838.GG8405@zorkmid.localnetwork>
Message-ID: <d658b69e0809191010g5b6de949obd1ad30400d442be@mail.gmail.com>

I think it would be a good idea to test the parameters (format, width,
height, miplevels) of the created texture.


From hverbeet at gmail.com  Fri Sep 19 12:07:18 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 19 Sep 2008 19:07:18 +0200
Subject: [PATCH 6/7] d3dx9/tests: Test D3DXCheckTextureRequirements.
In-Reply-To: <20080919154817.GF8405@zorkmid.localnetwork>
References: <20080919154817.GF8405@zorkmid.localnetwork>
Message-ID: <d658b69e0809191007mde25d10rdac5c9ac126c1b73@mail.gmail.com>

2008/9/19 Philip Nilsson <pnilsson at nullref.se>:
> This one could use some more work, but I think the tests will pass in
> most cases (except in strange environments without support for common
> formats).
>
The tests should pass everywhere. I think you should be testing for
consistency between CheckDeviceFormat() and
D3DXCheckTextureRequirements().


From meissner at suse.de  Fri Sep 19 13:25:56 2008
From: meissner at suse.de (Marcus Meissner)
Date: Fri, 19 Sep 2008 20:25:56 +0200
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <87zlm4i4ou.fsf@wine.dyndns.org>
References: <b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181341k25f48c27t9d5f80bc0043875d@mail.gmail.com>
	<a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
	<3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
	<a71bd89a0809181745x5cc7a3a3lfa54ed7e3c1ddb65@mail.gmail.com>
	<3a768c550809181754g722f069wcf8958b83bcdee19@mail.gmail.com>
	<a71bd89a0809181759i4ec7047bv2a1ea69cd35ecd70@mail.gmail.com>
	<874p4ck0re.fsf@wine.dyndns.org>
	<a71bd89a0809190704x64759e73hf7891bfce428d087@mail.gmail.com>
	<87zlm4i4ou.fsf@wine.dyndns.org>
Message-ID: <20080919182556.GA22521@suse.de>

On Fri, Sep 19, 2008 at 04:35:45PM +0200, Alexandre Julliard wrote:
> "Dan Kegel" <dank at kegel.com> writes:
> 
> > Agreed, to an extent.   A user who is trying to compile with a really
> > whacky toolchain (say, a C compiler on an Amiga, a mainframe, or a wristwatch)
> > should expect some errors, and we should not try to avoid those if they reflect
> > real problems that need to be solved before wine can run properly.
> 
> You don't need a wacky toolchain. All you need is a slightly old gcc, or
> a platform that not everybody has access to, like Mac OS. I periodically

Or a newer gcc, or -O3, or -D_FORTIFY_SOURCE=2 (default in SUSE and Redhat)
etc etc.

If someone wants -Werror, he can always set CFLAGS for himself ;)

Ciao, Marcus


From pnilsson at nullref.se  Fri Sep 19 13:47:30 2008
From: pnilsson at nullref.se (Philip Nilsson)
Date: Fri, 19 Sep 2008 20:47:30 +0200
Subject: [PATCH 3/7] d3dx9: Implement D3DXCheckTextureRequirements.
In-Reply-To: <d658b69e0809191004s62fa5ebfk50f9f16ca830648@mail.gmail.com>
References: <20080919154448.GC8405@zorkmid.localnetwork>
	<20080919163550.GA8839@zorkmid.localnetwork>
	<d658b69e0809191004s62fa5ebfk50f9f16ca830648@mail.gmail.com>
Message-ID: <20080919184730.GA14828@zorkmid.localnetwork>

Hi!

On Fri, Sep 19, 2008 at 07:04:04PM +0200, Henri Verbeet wrote:
> 2008/9/19 Philip Nilsson <pnilsson at nullref.se>:
> 
> > +        hr = IDirect3DDevice9_GetDirect3D(device, &d3d9);
> > +        if (hr != D3D_OK || !device)
> > +            return D3DERR_INVALIDCALL;
> > +
> > +        IDirect3D9_GetAdapterDisplayMode(d3d9, D3DADAPTER_DEFAULT, &d3ddm);
> > +
> > +        /* TODO: Use something more advanced that looks more like what's in MSDN. */
> > +        hr = IDirect3D9_CheckDeviceFormat(d3d9, D3DADAPTER_DEFAULT, D3DDEVTYPE_HAL, d3ddm.Format, usage, D3DRTYPE_TEXTURE, *format);
> You shouldn't guess the adapter, device type, etc., but use whatever
> the device was created with. IDirect3DDevice9_GetCreationParameters()
> should help there.

Thanks, I didn't know there was a way.  It doesn't matter in the test
though as I control the creation there, right?

> 
> > +        if (hr != D3D_OK) {
> > +            if (usage & D3DUSAGE_DEPTHSTENCIL) {
> > +                switch (*format) {
> ...
> > +        }
> > +        IDirect3D9_Release(d3d9);
> > +    }
> I'm not sure about the big switch statement there, but I do know that
> just changing the format isn't enough. There's no guarantee the new
> format will work, or if there is any format that will support that
> specific set of usage flags at all.

Yes, it doesn't take much for it to go wrong.  It's basically just
correct for my settings.

A huge table containing the 12 different channels I know of might come
in handy.  I'm not looking forward to filling it out though.  (I do
however have some interesting ideas for the selection, so I'll do it as
soon as I can.)

Regards.


From dank at kegel.com  Fri Sep 19 13:48:40 2008
From: dank at kegel.com (Dan Kegel)
Date: Fri, 19 Sep 2008 11:48:40 -0700
Subject: configure.ac: add -Werror to default compiler options
In-Reply-To: <20080919182556.GA22521@suse.de>
References: <b6bb06270809181320k410887ddq2937b6efd0b4014f@mail.gmail.com>
	<a71bd89a0809181642y218aa94fh676ccecaab51c260@mail.gmail.com>
	<3a768c550809181710k9ad6e02g9c0d07f0cf86b25@mail.gmail.com>
	<a71bd89a0809181745x5cc7a3a3lfa54ed7e3c1ddb65@mail.gmail.com>
	<3a768c550809181754g722f069wcf8958b83bcdee19@mail.gmail.com>
	<a71bd89a0809181759i4ec7047bv2a1ea69cd35ecd70@mail.gmail.com>
	<874p4ck0re.fsf@wine.dyndns.org>
	<a71bd89a0809190704x64759e73hf7891bfce428d087@mail.gmail.com>
	<87zlm4i4ou.fsf@wine.dyndns.org> <20080919182556.GA22521@suse.de>
Message-ID: <a71bd89a0809191148q5da9a555iee7c74c44f3717e3@mail.gmail.com>

OK, I just ran with -Wall -Werror, and got a grand total of four errors:

freetype.c:1051: warning: 'name.string_len' is used uninitialized in
this function
Looks bogus.

engine.c:2128: warning: 'str' may be used uninitialized in this function
Bogus.

context.c:80: warning: 'update_minfilter' may be used uninitialized in
this function
context.c:80: warning: 'update_magfilter' may be used uninitialized in
this function

Real!   Looks like one slipped by yesterday:
http://source.winehq.org/git/wine.git/?a=commitdiff;h=9533a5cbbf76cf4b9013ed90dd96e0f3995d44f3

That's not a bad haul.

Now, if everyone were building with -O2 -Wall -Werror, that would have been
caught sooner.   But hey, if Alexandre doesn't like the idea, I guess
it won't fly.

So my alternate suggestion is for patchwatcher to reject patches that
fail with -Werror.
(And work around the couple of bogus errors I listed above.)

That gets us the desired benefits without running into the problems
Alexandre and Marcus pointed out.

How's that sound?
- Dan


From pnilsson at nullref.se  Fri Sep 19 14:00:07 2008
From: pnilsson at nullref.se (Philip Nilsson)
Date: Fri, 19 Sep 2008 21:00:07 +0200
Subject: [PATCH 7/7] d3dx9/tests: Test D3DXCreateTexture.
In-Reply-To: <d658b69e0809191010g5b6de949obd1ad30400d442be@mail.gmail.com>
References: <20080919154838.GG8405@zorkmid.localnetwork>
	<d658b69e0809191010g5b6de949obd1ad30400d442be@mail.gmail.com>
Message-ID: <20080919190007.GB14828@zorkmid.localnetwork>

On Fri, Sep 19, 2008 at 07:10:29PM +0200, Henri Verbeet wrote:
> I think it would be a good idea to test the parameters (format, width,
> height, miplevels) of the created texture.

I used to do that, but most of the things you can check are just
duplicates of the checks in D3DCheckTextureRequirements, and I think
CreateTexture would fail if it couldn't fulfil the new requirements.

I think the only thing that's left is format checking, but that's not
very easy to check beyond general kind of format.


From pnilsson at nullref.se  Fri Sep 19 14:04:50 2008
From: pnilsson at nullref.se (Philip Nilsson)
Date: Fri, 19 Sep 2008 21:04:50 +0200
Subject: [PATCH 6/7] d3dx9/tests: Test D3DXCheckTextureRequirements.
In-Reply-To: <d658b69e0809191007mde25d10rdac5c9ac126c1b73@mail.gmail.com>
References: <20080919154817.GF8405@zorkmid.localnetwork>
	<d658b69e0809191007mde25d10rdac5c9ac126c1b73@mail.gmail.com>
Message-ID: <20080919190450.GC14828@zorkmid.localnetwork>

On Fri, Sep 19, 2008 at 07:07:18PM +0200, Henri Verbeet wrote:
> 2008/9/19 Philip Nilsson <pnilsson at nullref.se>:
> > This one could use some more work, but I think the tests will pass in
> > most cases (except in strange environments without support for common
> > formats).
> >
> The tests should pass everywhere.

I agree, I'll add some more checks to make sure the tests will only be
run if they can pass on the current setup (or find a set of parameters
that will allow the tests to run).

> I think you should be testing for
> consistency between CheckDeviceFormat() and
> D3DXCheckTextureRequirements().

What do you mean?


From wine.dev at web.de  Fri Sep 19 15:41:25 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Fri, 19 Sep 2008 22:41:25 +0200
Subject: PrintDlgEx [2/7]: Add basic dialog.
In-Reply-To: <48D20A17.6060707@redhat.com>
References: <163937790809172230r31849390q60ada1a8683f522c@mail.gmail.com>
	<48D20A17.6060707@redhat.com>
Message-ID: <1221856885.5840.14.camel@p4.lan>

On Do, 2008-09-18 at 09:58 +0200, Michael Stefaniuc wrote:

> there is no point in adding new resources in English to the other
> languages rc files. If a resource doesn't exist Win32 will automatically
> fail over to use the en_US version.

According to julliard a while ago, this is not the case.
Strings for sure will not fallback, when a group is present, but
incomplete.
(The last digit of the resource-id is the index in the group)
For dialogs, I'm not sure, how large the group is.

> Actually its even detrimental to add the new resources as:
> a.) http://pf128.krakow.sdi.tpnet.pl/wine-transl/ cannot show those
> resources as untranslated.
That's a known missing feature

> b.) The copied English resources have a tendency to bit-rot.
That's a known risk.

> c.) The patch is smaller and offers the exact same functionality.
Smaller: Yes
Same functionality: Not always


-- 
 
By by ... Detlef




From infyquest at gmail.com  Fri Sep 19 16:01:31 2008
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Fri, 19 Sep 2008 17:01:31 -0400
Subject: WebKit vs Gecko and Wine
Message-ID: <36bf289b0809191401p527e1c07ncf9d642457354fa3@mail.gmail.com>

Hi,

I have a nice idea to discuss at wineconf this year.
Is it possible to use webkit for mshtml and jscript implementations of wine?
Have been hearing a lotta good reviews about performance of webkit and
lotta other browsers adopting it.
How much work would it be to support webkit as to provide an
alternative for winegecko?
Firstly is it feasible.

Thanks,
VJ
---------------------------------------------------------------------------------------------------------------------
Zsa Zsa Gabor  - "He taught me housekeeping; when I divorce I keep the house."


From thunderbird2k at gmx.net  Fri Sep 19 16:12:19 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Fri, 19 Sep 2008 23:12:19 +0200
Subject: winex11.drv: Make wglShareLists() cope with previously selected
	destination context (try 3)
In-Reply-To: <171035.66733.qm@web87014.mail.ird.yahoo.com>
References: <171035.66733.qm@web87014.mail.ird.yahoo.com>
Message-ID: <20080919211219.243140@gmx.net>

> > Resending to the proper email address, this time..
> 
> And I likewise ;) (I was just thinking, "I swear I hit Reply All"...)
> 
> > The referred to "lists" aren't display lists.
> > It's more appropritely (specific 
> > sets of) resources.. eg. the list of valid textures, the
> > list of valid shader 
> > objects, etc, are what's shared.
> 
> Ah. (Or should I say Arrrr?) I thought it might be something like that.
> It's not as if MSDN has ever been unclear in the past, or anything...
> 
> jim

That's the reason we need such tests .. I know it is a pain but bugs are much more complicated to debug in the end.
Roderick
-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger


From mstefani at redhat.com  Fri Sep 19 16:16:09 2008
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Fri, 19 Sep 2008 23:16:09 +0200
Subject: PrintDlgEx [2/7]: Add basic dialog.
In-Reply-To: <1221856885.5840.14.camel@p4.lan>
References: <163937790809172230r31849390q60ada1a8683f522c@mail.gmail.com>	
	<48D20A17.6060707@redhat.com> <1221856885.5840.14.camel@p4.lan>
Message-ID: <48D41699.2080303@redhat.com>

Detlef Riekenberg wrote:
> On Do, 2008-09-18 at 09:58 +0200, Michael Stefaniuc wrote:
> 
>> there is no point in adding new resources in English to the other
>> languages rc files. If a resource doesn't exist Win32 will automatically
>> fail over to use the en_US version.
> 
> According to julliard a while ago, this is not the case.
> Strings for sure will not fallback, when a group is present, but
> incomplete.
> (The last digit of the resource-id is the index in the group)
> For dialogs, I'm not sure, how large the group is.
Dialogs are one resource. Stringtables are the oddballs as 16 strings 
form a resource. I was talking of adding new resources and explicitly 
not amending existing ones. And the patch was adding 2 new dialogs so 
there was no point of confusing Gal with the stringtables as those 
weren't part of the patch.

>> Actually its even detrimental to add the new resources as:
>> a.) http://pf128.krakow.sdi.tpnet.pl/wine-transl/ cannot show those
>> resources as untranslated.
> That's a known missing feature
A missing feature for which there is *no* complete solution. There are 
small resources with only 1-2 strings to translate. E.g. a lot of 
languages took over "Ok". Now how do you decide if that is untranslated 
or if the translation happens to be the exact same as the en_US version?

>> b.) The copied English resources have a tendency to bit-rot.
> That's a known risk.
For no added benefit. I have thrown away such bit-rotted resources 
instead of fixing them and Alexandre accepted those patches.

>> c.) The patch is smaller and offers the exact same functionality.
> Smaller: Yes
> Same functionality: Not always
You are right; the smaller patch has always the better functionality. 
The stringtables being the exception here but that's why I recommended 
to use wrc with --verify-translation before and after the patch. If 
additional DIFF and ERR lines show up one knows that the other language 
resources need to be updated too. Else don't bother.


bye
	michael


From truiken at gmail.com  Fri Sep 19 16:51:26 2008
From: truiken at gmail.com (James Hawkins)
Date: Fri, 19 Sep 2008 16:51:26 -0500
Subject: msvcrt: scanf fix a typo
In-Reply-To: <b6bb06270809191439w326001cchd3d4441272192651@mail.gmail.com>
References: <b6bb06270809191439w326001cchd3d4441272192651@mail.gmail.com>
Message-ID: <22821af30809191451k1bac699bq51d3f3f428ca356c@mail.gmail.com>

On Fri, Sep 19, 2008 at 4:39 PM, Austin English <austinenglish at gmail.com> wrote:
> Found using -Werror (strangely, didn't occur on ubuntu, but does on
> PC-BSD)...Must be the gcc version.
>

@@ -63,7 +63,7 @@ static void test_sscanf( void )
     ok( sscanf("1233", "%p", &ptr) == 1, "sscanf failed\n"  );
     ok( ptr == (void *)0x1233,"sscanf reads %p instead of %x\n", ptr, 0x1233 );

-    ok( sscanf("1234", "%P", &ptr) == 1, "sscanf failed\n"  );
+    ok( sscanf("1234", "%p", &ptr) == 1, "sscanf failed\n"  );
     ok( ptr == (void *)0x1234,"sscanf reads %p instead of %x\n", ptr, 0x1234 );

How do you figure that's a typo?  The test right above it is exactly
the same as what you've changed this one to.  I didn't write the test,
but I'm pretty sure the original author meant to test both cases.
This is a good reason why tests should be commented, so the author's
intent is well known.

-- 
James Hawkins


From austinenglish at gmail.com  Fri Sep 19 16:59:59 2008
From: austinenglish at gmail.com (Austin English)
Date: Fri, 19 Sep 2008 16:59:59 -0500
Subject: msvcrt: scanf fix a typo
In-Reply-To: <22821af30809191451k1bac699bq51d3f3f428ca356c@mail.gmail.com>
References: <b6bb06270809191439w326001cchd3d4441272192651@mail.gmail.com>
	<22821af30809191451k1bac699bq51d3f3f428ca356c@mail.gmail.com>
Message-ID: <b6bb06270809191459i77908f7ah6ea1bc49a3eb97d6@mail.gmail.com>

On Fri, Sep 19, 2008 at 4:51 PM, James Hawkins <truiken at gmail.com> wrote:
> On Fri, Sep 19, 2008 at 4:39 PM, Austin English <austinenglish at gmail.com> wrote:
>> Found using -Werror (strangely, didn't occur on ubuntu, but does on
>> PC-BSD)...Must be the gcc version.
>>
>
> @@ -63,7 +63,7 @@ static void test_sscanf( void )
>     ok( sscanf("1233", "%p", &ptr) == 1, "sscanf failed\n"  );
>     ok( ptr == (void *)0x1233,"sscanf reads %p instead of %x\n", ptr, 0x1233 );
>
> -    ok( sscanf("1234", "%P", &ptr) == 1, "sscanf failed\n"  );
> +    ok( sscanf("1234", "%p", &ptr) == 1, "sscanf failed\n"  );
>     ok( ptr == (void *)0x1234,"sscanf reads %p instead of %x\n", ptr, 0x1234 );
>
> How do you figure that's a typo?  The test right above it is exactly
> the same as what you've changed this one to.  I didn't write the test,
> but I'm pretty sure the original author meant to test both cases.
> This is a good reason why tests should be commented, so the author's
> intent is well known.
>
> --
> James Hawkins
>

Relevant code:
    /* check %p with no hex digits */
    ok( sscanf("1233", "%p", &ptr) == 1, "sscanf failed\n"  );
    ok( ptr == (void *)0x1233,"sscanf reads %p instead of %x\n", ptr, 0x1233 );

    ok( sscanf("1234", "%P", &ptr) == 1, "sscanf failed\n"  );
    ok( ptr == (void *)0x1234,"sscanf reads %p instead of %x\n", ptr, 0x1234 );


Comment reads %p. All the other chars are lower case, and you can see
the values are different (1233 vs 1234).

-Austin


From truiken at gmail.com  Fri Sep 19 17:04:32 2008
From: truiken at gmail.com (James Hawkins)
Date: Fri, 19 Sep 2008 17:04:32 -0500
Subject: msvcrt: scanf fix a typo
In-Reply-To: <b6bb06270809191459i77908f7ah6ea1bc49a3eb97d6@mail.gmail.com>
References: <b6bb06270809191439w326001cchd3d4441272192651@mail.gmail.com>
	<22821af30809191451k1bac699bq51d3f3f428ca356c@mail.gmail.com>
	<b6bb06270809191459i77908f7ah6ea1bc49a3eb97d6@mail.gmail.com>
Message-ID: <22821af30809191504y56f76fe2xd97109527c2a89cf@mail.gmail.com>

On Fri, Sep 19, 2008 at 4:59 PM, Austin English <austinenglish at gmail.com> wrote:
>
> Relevant code:
>    /* check %p with no hex digits */
>    ok( sscanf("1233", "%p", &ptr) == 1, "sscanf failed\n"  );
>    ok( ptr == (void *)0x1233,"sscanf reads %p instead of %x\n", ptr, 0x1233 );
>
>    ok( sscanf("1234", "%P", &ptr) == 1, "sscanf failed\n"  );
>    ok( ptr == (void *)0x1234,"sscanf reads %p instead of %x\n", ptr, 0x1234 );
>
>
> Comment reads %p. All the other chars are lower case, and you can see
> the values are different (1233 vs 1234).
>

I'm still positive the original author meant to use capital P.
There's no point in adding yet another test for a number that is
different by one digit.

-- 
James Hawkins


From juan.lang at gmail.com  Fri Sep 19 17:06:37 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Fri, 19 Sep 2008 15:06:37 -0700
Subject: msvcrt: scanf fix a typo
In-Reply-To: <b6bb06270809191459i77908f7ah6ea1bc49a3eb97d6@mail.gmail.com>
References: <b6bb06270809191439w326001cchd3d4441272192651@mail.gmail.com>
	<22821af30809191451k1bac699bq51d3f3f428ca356c@mail.gmail.com>
	<b6bb06270809191459i77908f7ah6ea1bc49a3eb97d6@mail.gmail.com>
Message-ID: <3a768c550809191506ifd953c8oe24320d3148d6f86@mail.gmail.com>

> Relevant code:
>    /* check %p with no hex digits */
>    ok( sscanf("1233", "%p", &ptr) == 1, "sscanf failed\n"  );
>    ok( ptr == (void *)0x1233,"sscanf reads %p instead of %x\n", ptr, 0x1233 );
>
>    ok( sscanf("1234", "%P", &ptr) == 1, "sscanf failed\n"  );
>    ok( ptr == (void *)0x1234,"sscanf reads %p instead of %x\n", ptr, 0x1234 );
>
>
> Comment reads %p. All the other chars are lower case, and you can see
> the values are different (1233 vs 1234).

That's not a compelling argument.  For all we know, the test was
intended to show that both %p and %P are interpreted the same way.
--Juan


From paul.vriens.wine at gmail.com  Fri Sep 19 17:14:33 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Sat, 20 Sep 2008 00:14:33 +0200
Subject: msvcrt: scanf fix a typo
In-Reply-To: <22821af30809191504y56f76fe2xd97109527c2a89cf@mail.gmail.com>
References: <b6bb06270809191439w326001cchd3d4441272192651@mail.gmail.com>	<22821af30809191451k1bac699bq51d3f3f428ca356c@mail.gmail.com>	<b6bb06270809191459i77908f7ah6ea1bc49a3eb97d6@mail.gmail.com>
	<22821af30809191504y56f76fe2xd97109527c2a89cf@mail.gmail.com>
Message-ID: <48D42449.2090109@gmail.com>

James Hawkins wrote:
> On Fri, Sep 19, 2008 at 4:59 PM, Austin English <austinenglish at gmail.com> wrote:
>> Relevant code:
>>    /* check %p with no hex digits */
>>    ok( sscanf("1233", "%p", &ptr) == 1, "sscanf failed\n"  );
>>    ok( ptr == (void *)0x1233,"sscanf reads %p instead of %x\n", ptr, 0x1233 );
>>
>>    ok( sscanf("1234", "%P", &ptr) == 1, "sscanf failed\n"  );
>>    ok( ptr == (void *)0x1234,"sscanf reads %p instead of %x\n", ptr, 0x1234 );
>>
>>
>> Comment reads %p. All the other chars are lower case, and you can see
>> the values are different (1233 vs 1234).
>>
> 
> I'm still positive the original author meant to use capital P.
> There's no point in adding yet another test for a number that is
> different by one digit.
> 
I have to agree with James here. The original author (Peter Oberndorfer) 
added the tests and an implementation of %p and %P.

Commits:

02fb99e6b360a6f321f716b57df97ca79ec1b9f3
9e3a4652dafbcf1f3f957858a54f2149e91942b7

-- 
Cheers,

Paul.


From austinenglish at gmail.com  Fri Sep 19 17:36:32 2008
From: austinenglish at gmail.com (Austin English)
Date: Fri, 19 Sep 2008 18:36:32 -0400
Subject: msvcrt: scanf fix a typo
In-Reply-To: <48D42449.2090109@gmail.com>
References: <b6bb06270809191439w326001cchd3d4441272192651@mail.gmail.com>
	<22821af30809191451k1bac699bq51d3f3f428ca356c@mail.gmail.com>
	<b6bb06270809191459i77908f7ah6ea1bc49a3eb97d6@mail.gmail.com>
	<22821af30809191504y56f76fe2xd97109527c2a89cf@mail.gmail.com>
	<48D42449.2090109@gmail.com>
Message-ID: <b6bb06270809191536g4e41489apf8bbddf6543ef242@mail.gmail.com>

On Fri, Sep 19, 2008 at 6:14 PM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> James Hawkins wrote:
>>
>> On Fri, Sep 19, 2008 at 4:59 PM, Austin English <austinenglish at gmail.com>
>> wrote:
>>>
>>> Relevant code:
>>>   /* check %p with no hex digits */
>>>   ok( sscanf("1233", "%p", &ptr) == 1, "sscanf failed\n"  );
>>>   ok( ptr == (void *)0x1233,"sscanf reads %p instead of %x\n", ptr,
>>> 0x1233 );
>>>
>>>   ok( sscanf("1234", "%P", &ptr) == 1, "sscanf failed\n"  );
>>>   ok( ptr == (void *)0x1234,"sscanf reads %p instead of %x\n", ptr,
>>> 0x1234 );
>>>
>>>
>>> Comment reads %p. All the other chars are lower case, and you can see
>>> the values are different (1233 vs 1234).
>>>
>>
>> I'm still positive the original author meant to use capital P.
>> There's no point in adding yet another test for a number that is
>> different by one digit.
>>
> I have to agree with James here. The original author (Peter Oberndorfer)
> added the tests and an implementation of %p and %P.
>
> Commits:
>
> 02fb99e6b360a6f321f716b57df97ca79ec1b9f3
> 9e3a4652dafbcf1f3f957858a54f2149e91942b7
>
> --
> Cheers,
>
> Paul.
>

Here's the gcc error:

gcc -c -I. -I. -I../../../include -I../../../include
-I../../../include/msvcrt -I./..  -D_REENTRANT -fPIC -Wall -pipe
-fno-strict-aliasing -Wdeclaration-after-statement -Wwrite-strings
-Wpointer-arith -I/usr/local/include -Werror  -o scanf.o scanf.c
scanf.c: In function `test_sscanf':
scanf.c:66: warning: unknown conversion type character `P' in format
scanf.c:66: warning: too many arguments for format
*** Error code 1

Stop in /usr/home/pcbsd/wine-git/dlls/msvcrt/tests.


From dank at kegel.com  Fri Sep 19 17:51:00 2008
From: dank at kegel.com (Dan Kegel)
Date: Fri, 19 Sep 2008 15:51:00 -0700
Subject: msvcrt: scanf fix a typo
Message-ID: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>

Here's the gcc error:
> scanf.c:66: warning: unknown conversion type character `P' in format

I'm not a programmer, but I play one on TV.  And here's what I
came up with in five minutes of typing and not enough thinking:

That particular error depends on gcc knowing intimate details of
sscanf.   Unless we teach gcc about the particular sscanf we're
implementing, it's likely to give false errors.

It could be that the line

#include <stdio.h>

at the top of that file is introducing a conflict.

See
http://gcc.gnu.org/onlinedocs/gcc-4.3.2/gcc/Function-Attributes.html#Function-Attributes
for the function attributes used to teach gcc about scanf-like format arguments.

This may be an example of the problem Juan was anticipating, where
people rush to provide fixes to problems that they don't fully
understand, just to try to get rid of gcc warnings :-(
- Dan


From austinenglish at gmail.com  Fri Sep 19 19:54:11 2008
From: austinenglish at gmail.com (Austin English)
Date: Fri, 19 Sep 2008 19:54:11 -0500
Subject: msvcrt: scanf fix a typo
In-Reply-To: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
References: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
Message-ID: <b6bb06270809191754l52b93901j51e93ae0b785f167@mail.gmail.com>

On Fri, Sep 19, 2008 at 5:51 PM, Dan Kegel <dank at kegel.com> wrote:
> Here's the gcc error:
>> scanf.c:66: warning: unknown conversion type character `P' in format
>
> I'm not a programmer, but I play one on TV.  And here's what I
> came up with in five minutes of typing and not enough thinking:
>
> That particular error depends on gcc knowing intimate details of
> sscanf.   Unless we teach gcc about the particular sscanf we're
> implementing, it's likely to give false errors.
>
> It could be that the line
>
> #include <stdio.h>
>
> at the top of that file is introducing a conflict.
>
> See
> http://gcc.gnu.org/onlinedocs/gcc-4.3.2/gcc/Function-Attributes.html#Function-Attributes
> for the function attributes used to teach gcc about scanf-like format arguments.
>
> This may be an example of the problem Juan was anticipating, where
> people rush to provide fixes to problems that they don't fully
> understand, just to try to get rid of gcc warnings :-(
> - Dan
>

Point taken. I'll just file a bug and let someone who knows what
they're doing take a look at it.

- Austin


From wine at mkarcher.dialup.fu-berlin.de  Sat Sep 20 03:50:51 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sat, 20 Sep 2008 10:50:51 +0200
Subject: msvcrt: scanf fix a typo
In-Reply-To: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
References: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
Message-ID: <1221900651.4317.4.camel@hermes2.karcher.local>

Am Freitag, den 19.09.2008, 15:51 -0700 schrieb Dan Kegel:
> Here's the gcc error:
> > scanf.c:66: warning: unknown conversion type character `P' in format
> That particular error depends on gcc knowing intimate details of
> sscanf.   Unless we teach gcc about the particular sscanf we're
> implementing, it's likely to give false errors.

> See
> http://gcc.gnu.org/onlinedocs/gcc-4.3.2/gcc/Function-Attributes.html#Function-Attributes
> for the function attributes used to teach gcc about scanf-like format arguments.

Looks like we need to compile with -fno-builtin-sscanf, because gcc
knows the implementation of glibc's sscanf, and you explicitly have to
forbid it to use this knowledge which does not apply perfectly to
Microsofts sscanf. This (of course) is only applicable to those parts of
wine that link to msvcrt and thus use msvcrt's scanf implementation.

Regards,
  Michael Karcher



From scott at open-vote.org  Sat Sep 20 04:15:34 2008
From: scott at open-vote.org (Scott Ritchie)
Date: Sat, 20 Sep 2008 02:15:34 -0700
Subject: WebKit vs Gecko and Wine
In-Reply-To: <36bf289b0809191401p527e1c07ncf9d642457354fa3@mail.gmail.com>
References: <36bf289b0809191401p527e1c07ncf9d642457354fa3@mail.gmail.com>
Message-ID: <48D4BF36.60306@open-vote.org>

Vijay Kiran Kamuju wrote:
> Hi,
> 
> I have a nice idea to discuss at wineconf this year.
> Is it possible to use webkit for mshtml and jscript implementations of wine?
> Have been hearing a lotta good reviews about performance of webkit and
> lotta other browsers adopting it.
> How much work would it be to support webkit as to provide an
> alternative for winegecko?
> Firstly is it feasible.
> 
> Thanks,
> VJ
> ---------------------------------------------------------------------------------------------------------------------
> Zsa Zsa Gabor  - "He taught me housekeeping; when I divorce I keep the house."
> 
> 

More importantly, which of them has the closest thing to an "internet
explorer compatibility mode"?  Ideally, whatever renderer we use would
be the most IE-like.

Thanks,
Scott Ritchie


From lav at etersoft.ru  Sat Sep 20 04:24:40 2008
From: lav at etersoft.ru (Vitaly Lipatov)
Date: Sat, 20 Sep 2008 13:24:40 +0400
Subject: WebKit vs Gecko and Wine
In-Reply-To: <48D4BF36.60306@open-vote.org>
References: <36bf289b0809191401p527e1c07ncf9d642457354fa3@mail.gmail.com>
	<48D4BF36.60306@open-vote.org>
Message-ID: <200809201324.40650.lav@etersoft.ru>

? ????????? ?? 20 ???????? 2008 Scott Ritchie ???????(a):
...
> More importantly, which of them has the closest thing to an "internet
> explorer compatibility mode"?  Ideally, whatever renderer we use would
> be the most IE-like.
Gecko has many incompatibles with IE and do not pretend to be more compatible 
with IE specific extensions (like IE's DOM and so on). It is serious problem 
if we need IE-compatible engine in Wine. Has WebKit some IE compatible mode?


-- 
Vitaly Lipatov, ALT Linux Team
Russia, Saint-Petersburg, www.etersoft.ru


From wine at mkarcher.dialup.fu-berlin.de  Sat Sep 20 04:53:57 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sat, 20 Sep 2008 11:53:57 +0200
Subject: msvcrt: scanf fix a typo
In-Reply-To: <1221900651.4317.4.camel@hermes2.karcher.local>
References: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
	<1221900651.4317.4.camel@hermes2.karcher.local>
Message-ID: <1221904437.4317.41.camel@hermes2.karcher.local>

Am Samstag, den 20.09.2008, 10:50 +0200 schrieb Michael Karcher:
> Looks like we need to compile with -fno-builtin-sscanf, because gcc
> knows the implementation of glibc's sscanf,

OK, I looked further into it. On Linux, we don't get the warning,
because gcc is called with the sledgehammer option "-fno-builtin" for
msvcrt related stuff (which includes *all* -fno-builtin-* options, so
also -fno-builtin-sscanf) if gcc's builtin prototype for the wchar ctype
function conflicts with "int iswlower(unsigned short);". Probably on
your system, your C library does not have these functions or your gcc is
older than 4.0, so there are no builtin prototypes for the wchar stuff.

There are some ways to fix it:
 a) Detect whether gcc recognizes scanf as builtin function, and enable
    -fno-builtin in that case too. This will trigger on gcc version 3.3
    and up.
 b) Always pass -fno-builtin to msvcrt related stuff when compiling
    with gcc, i.e. drop the wchar test.
 c) Make the -fno-builtin option more specific. i.e. if wchar stuff
    conflicts with msvcrt, enable
-fno-builtin-iswalnum -fno-builtin-iswalpha -fno-builtin-iswascii -fno-builtin-iswcntrl -fno-builtin-iswdigit -fno-builtin-iswgraph -fno-builtin-iswlower -fno-builtin-iswprint -fno-builtin_iswpunct -fno-builtin-iswspace -fno-builtin-iswupper -fno-builtin-iswxdigit -fno-builtin-towlower -fno-builtin-towupper
    and if scanf is detected, enable
-fno-builtin-fscanf -fno-builtin-scanf -fno-builtin-sscanf
    The upside is that we don't lose gcc's checking of other standard C
    functions, while the downside is that the gcc command line in
    msvcrt related modules gets awfully long. These modules are:
     dlls/msvcrtd/tests
     dlls/msvcrtd
     dlls/msvcrt/tests
     dlls/crtdll
    (Just grep Makefile.in for @BUILTINCFLAG@)
    While the specific -fno-builtin-foo optins have been introduced
    in gcc 3.1, we do not need to check whether gcc is new enough,
    as these old versions of gcc have neither wchar nor sscanf
    functions built in.

If wine-devel agrees to one approach, I am happy to submit a patch that
implements this approach. I personally prefer a crossover between
approach b and c.

Approach a is out, because on recent versions of gcc, it is essentially
approach b, but unnecessarily complicating the configure script. Also it
tends to hide problems, just as it happened here. gcc has added a sanity
check for sscanf parameters (which is a good thing, IMHO), but we never
noticed it, because it got suppressed because of configure finding wchar
builtins on the platform most Wine developers work on. With this
approach, changing the platform might change gcc's behaviour on sscanf
without anyone expecting it.

Approach b is correct in the sense that the MS C library is not the
platform C library, so gcc better does not assume anything about it, but
that also might incur performance penalties, as things like memcpy with
small constant size will never get inlined. Probably b really is what
the wine project needs in the tests of msvcrt, as the goal is to test
msvcrt and not gcc's inline code. For the tests, performance penalties
do not matter.

On the other hand, for the implementation side (msvcrtd and crtdll),
option c seems attractive to me, because it just disables the stuff we
need disabled but allows gcc to take full advantage about knowing the C
standard on functions where msvcrt is not incompatible. A problem with
option C is, that it is playing a cat-and-mouse game with the gcc
developers: As soon as they add some more checks to calling standard
library functions that are incompatible with Microsofts extensions, we
start to get warnings again.

Regards,
  Michael Karcher



From julliard at winehq.org  Sat Sep 20 05:17:10 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Sat, 20 Sep 2008 12:17:10 +0200
Subject: msvcrt: scanf fix a typo
In-Reply-To: <1221904437.4317.41.camel@hermes2.karcher.local> (Michael
	Karcher's message of "Sat, 20 Sep 2008 11:53:57 +0200")
References: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
	<1221900651.4317.4.camel@hermes2.karcher.local>
	<1221904437.4317.41.camel@hermes2.karcher.local>
Message-ID: <87ljxnazq1.fsf@wine.dyndns.org>

Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> writes:

> On the other hand, for the implementation side (msvcrtd and crtdll),
> option c seems attractive to me, because it just disables the stuff we
> need disabled but allows gcc to take full advantage about knowing the C
> standard on functions where msvcrt is not incompatible. A problem with
> option C is, that it is playing a cat-and-mouse game with the gcc
> developers: As soon as they add some more checks to calling standard
> library functions that are incompatible with Microsofts extensions, we
> start to get warnings again.

The real problem is that the -fno-builtin-xxx option is broken on some
gcc versions. We used to use it, but we had to switch to a global
-fno-builtin because of this bug.

-- 
Alexandre Julliard
julliard at winehq.org


From kumbayo84 at arcor.de  Sat Sep 20 09:26:54 2008
From: kumbayo84 at arcor.de (Peter Oberndorfer)
Date: Sat, 20 Sep 2008 16:26:54 +0200
Subject: msvcrt: scanf fix a typo
In-Reply-To: <48D42449.2090109@gmail.com>
References: <b6bb06270809191439w326001cchd3d4441272192651@mail.gmail.com>
	<22821af30809191504y56f76fe2xd97109527c2a89cf@mail.gmail.com>
	<48D42449.2090109@gmail.com>
Message-ID: <200809201626.54322.kumbayo84@arcor.de>

On Samstag 20 September 2008, Paul Vriens wrote:
> James Hawkins wrote:
> > On Fri, Sep 19, 2008 at 4:59 PM, Austin English <austinenglish at gmail.com> wrote:
> >> Relevant code:
> >>    /* check %p with no hex digits */
> >>    ok( sscanf("1233", "%p", &ptr) == 1, "sscanf failed\n"  );
> >>    ok( ptr == (void *)0x1233,"sscanf reads %p instead of %x\n", ptr, 0x1233 );
> >>
> >>    ok( sscanf("1234", "%P", &ptr) == 1, "sscanf failed\n"  );
> >>    ok( ptr == (void *)0x1234,"sscanf reads %p instead of %x\n", ptr, 0x1234 );
> >>
> >>
> >> Comment reads %p. All the other chars are lower case, and you can see
> >> the values are different (1233 vs 1234).
> >>
> > 
> > I'm still positive the original author meant to use capital P.
> > There's no point in adding yet another test for a number that is
> > different by one digit.
> > 
> I have to agree with James here. The original author (Peter Oberndorfer) 
> added the tests and an implementation of %p and %P.
> 
> Commits:
> 
> 02fb99e6b360a6f321f716b57df97ca79ec1b9f3
> 9e3a4652dafbcf1f3f957858a54f2149e91942b7
> 

It was my intention to test lower and upper case %p.
I used different number to make sure this is the result of the current scanf call
not from another call above with the same expected result.
adding ptr = (void*)0xdeadbeef; before each test would have been more explicit.

Greetings Peter


From wine at mkarcher.dialup.fu-berlin.de  Sat Sep 20 12:17:27 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sat, 20 Sep 2008 19:17:27 +0200
Subject: msvcrt: scanf fix a typo
In-Reply-To: <87ljxnazq1.fsf@wine.dyndns.org>
References: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
	<1221900651.4317.4.camel@hermes2.karcher.local>
	<1221904437.4317.41.camel@hermes2.karcher.local>
	<87ljxnazq1.fsf@wine.dyndns.org>
Message-ID: <1221931047.4317.46.camel@hermes2.karcher.local>

Am Samstag, den 20.09.2008, 12:17 +0200 schrieb Alexandre Julliard:
> The real problem is that the -fno-builtin-xxx option is broken on some
> gcc versions. We used to use it, but we had to switch to a global
> -fno-builtin because of this bug.

OK. Thanks for the pointer. I have a configure test ready that checks
whether the global -fno-builtin is really needed., and uses separate
flags otherwise. I am planning to submit it in series with a second
patch that checks for whether -fno-builtin-scanf is needed (check for
warning on "%P").

Regards,
  Michael Karcher



From hverbeet at gmail.com  Sat Sep 20 15:43:00 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sat, 20 Sep 2008 22:43:00 +0200
Subject: WineD3D: fix UpdateSurface bug [with patch]
In-Reply-To: <20080920203454.18420@gmx.net>
References: <20080920203454.18420@gmx.net>
Message-ID: <d658b69e0809201343g4650960aucf97f22fc78bca2c@mail.gmail.com>

2008/9/20 Roderick Colenbrander <thunderbird2k at gmx.net>:
> Hi,
>
> Fix a bug in UpdateSurface where we didn't take into account the offset into the memory buffer specified in the source rectangle.
>
What about the glCompressedTexImage2DARB() call a few lines up and the TRACE?


From thunderbird2k at gmx.net  Sat Sep 20 16:57:05 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Sat, 20 Sep 2008 23:57:05 +0200
Subject: WineD3D: fix UpdateSurface bug [with patch]
In-Reply-To: <d658b69e0809201343g4650960aucf97f22fc78bca2c@mail.gmail.com>
References: <20080920203454.18420@gmx.net>
	<d658b69e0809201343g4650960aucf97f22fc78bca2c@mail.gmail.com>
Message-ID: <20080920215705.310640@gmx.net>

I wasn't sure if it would work in the same as there is some todo regarding compressed formats.

Roderick

> 2008/9/20 Roderick Colenbrander <thunderbird2k at gmx.net>:
> > Hi,
> >
> > Fix a bug in UpdateSurface where we didn't take into account the offset
> into the memory buffer specified in the source rectangle.
> >
> What about the glCompressedTexImage2DARB() call a few lines up and the
> TRACE?
> 

-- 
GMX Kostenlose Spiele: Einfach online spielen und Spa? haben mit Pastry Passion!
http://games.entertainment.gmx.net/de/entertainment/games/free/puzzle/6169196


From dmitry at codeweavers.com  Sun Sep 21 00:54:53 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 21 Sep 2008 09:54:53 +0400
Subject: [PATCH] [WinHelp]: fix for 5314
In-Reply-To: <20080920194750.20804.98534.stgit@localhost>
References: <20080920194750.20804.98534.stgit@localhost>
Message-ID: <10F5A8A506D44E9E8B61C1BCC532474F@Vista>

From: "Eric Pouech" <eric.pouech at orange.fr> wrote:

> +#include <ctype.h>
...
> +                if (!ch || !isalpha(ch)) break;

Since that's apparently a Windows encoding shouldn't this be
GetStringType() instead of isalpha()?

-- 
Dmitry.


From anssi.hannula at gmail.com  Sun Sep 21 03:55:03 2008
From: anssi.hannula at gmail.com (Anssi Hannula)
Date: Sun, 21 Sep 2008 11:55:03 +0300
Subject: What to do when size of the struct differs on 32 and 64 bit?
In-Reply-To: <20080813133140.GA3489@rennboot.schule.loc>
References: <48A274B4.9000905@kievinfo.com>
	<20080813133140.GA3489@rennboot.schule.loc>
Message-ID: <48D60BE7.7040802@gmail.com>

Marcus Meissner wrote:
> On Tue, Aug 12, 2008 at 11:44:20PM -0600, Vitaliy Margolen wrote:
>> While debugging some force-feedback issues ran into an interesting problem. 
>> The size of one struct from include/linux differs between 32-bit and 64-bit. 
>> That wouldn't be a major problem except that size is the part of the ioctl() 
>> request. Which results in EINVAL.
>>
>> In more details:
>> input.h:
>> #define EVIOCSFF _IOC(_IOC_WRITE, 'E', 0x80, sizeof(struct ff_effect))
>>
>> The simple test program:
>>
>> #include <linux/input.h>
>> #include <stdio.h>
>> int main(int argc, char * argv[])
>> {
>>      printf("sizeof(struct ff_effect) = %d EVIOCSFF=%#x\n", sizeof(struct 
>> ff_effect), EVIOCSFF);
>>
>>      return 0;
>> }
>>
>>
>> $ gcc test_size.c -o test_size && ./test_size
>> sizeof(struct ff_effect) = 48 EVIOCSFF=0x40304580
>> $ gcc -m32 test_size.c -o test_size32 && ./test_size32
>> sizeof(struct ff_effect) = 44 EVIOCSFF=0x402c4580
>>
>> The question is what do we do about it? I'm sure there are might be more 
>> cases like that.
> 
> The kernel is supposed to handle this transparently.
> 
> I would report this to the kernel developers, mention "32bit compatibility"
> or so.

Just for the record, it has been fixed for 2.6.27:
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=f2278f31d6feb9036eaa79f2e8abcce850420abd

-- 
Anssi Hannula


From julliard at winehq.org  Sun Sep 21 04:25:30 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Sun, 21 Sep 2008 11:25:30 +0200
Subject: msvcrt: scanf fix a typo
In-Reply-To: <1221931047.4317.46.camel@hermes2.karcher.local> (Michael
	Karcher's message of "Sat, 20 Sep 2008 19:17:27 +0200")
References: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
	<1221900651.4317.4.camel@hermes2.karcher.local>
	<1221904437.4317.41.camel@hermes2.karcher.local>
	<87ljxnazq1.fsf@wine.dyndns.org>
	<1221931047.4317.46.camel@hermes2.karcher.local>
Message-ID: <87d4ixc0l1.fsf@wine.dyndns.org>

Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> writes:

> OK. Thanks for the pointer. I have a configure test ready that checks
> whether the global -fno-builtin is really needed., and uses separate
> flags otherwise. I am planning to submit it in series with a second
> patch that checks for whether -fno-builtin-scanf is needed (check for
> warning on "%P").

I don't think there's any reason to make it that complex. You can just
use -fno-builtin in all cases.

-- 
Alexandre Julliard
julliard at winehq.org


From wine at mkarcher.dialup.fu-berlin.de  Sun Sep 21 04:28:40 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sun, 21 Sep 2008 11:28:40 +0200
Subject: kernel32: fix PROFILE_Load to handle mac line endings (try 3)
In-Reply-To: <alpine.BSF.1.00.0809210211190.65282@anduin.net>
References: <alpine.BSF.1.00.0809210211190.65282@anduin.net>
Message-ID: <1221989320.4317.54.camel@hermes2.karcher.local>

Am Sonntag, den 21.09.2008, 02:15 +0200 schrieb Erik Inge Bols?:
> +    ok(1, "%s\n", content);
Please use trace(...) instead of ok(1,...). Also, outputting a string
with newline characters might be irritating, especially as one might
need a hex viewer to see the difference between the CR-only and CR/LF
variant. You might want to have
  trace("test_GetPrivateProfileStringA: Run %d\n");

Instead of a run number, you also might want to pass a description like
"CR only" or "CR/LF".

> -    ok(ret == 18, "Expected 18, got %d\n", ret);
> +    ok(ret == 18, "Run %d: Expected 18, got %d\n", run, ret);
Questions to everyone: I suppose if the trace above indicates the run
number, these modifications are unneded. Do you agree?

Regards,
  Michael Karcher



From eric.pouech at orange.fr  Sun Sep 21 04:51:36 2008
From: eric.pouech at orange.fr (Eric Pouech)
Date: Sun, 21 Sep 2008 11:51:36 +0200
Subject: [PATCH] [WinHelp]: fix for 5314
In-Reply-To: <10F5A8A506D44E9E8B61C1BCC532474F@Vista>
References: <20080920194750.20804.98534.stgit@localhost>
	<10F5A8A506D44E9E8B61C1BCC532474F@Vista>
Message-ID: <48D61928.3040202@orange.fr>

Dmitry Timoshkov a ?crit :
> From: "Eric Pouech" <eric.pouech at orange.fr> wrote:
>
>   
>> +#include <ctype.h>
>>     
> ...
>   
>> +                if (!ch || !isalpha(ch)) break;
>>     
>
> Since that's apparently a Windows encoding shouldn't this be
> GetStringType() instead of isalpha()?
>
>   
no, the issue (here) is about creeping control characters in the string 
(which shows a bogus file, not a mishandling of encoding)
and also, it appears that the string is 7bit ascii, so isalpha is sufficient
A+

-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)




From wine at mkarcher.dialup.fu-berlin.de  Sun Sep 21 05:52:02 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sun, 21 Sep 2008 12:52:02 +0200
Subject: msvcrt: scanf fix a typo
In-Reply-To: <87d4ixc0l1.fsf@wine.dyndns.org>
References: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
	<1221900651.4317.4.camel@hermes2.karcher.local>
	<1221904437.4317.41.camel@hermes2.karcher.local>
	<87ljxnazq1.fsf@wine.dyndns.org>
	<1221931047.4317.46.camel@hermes2.karcher.local>
	<87d4ixc0l1.fsf@wine.dyndns.org>
Message-ID: <1221994322.4317.75.camel@hermes2.karcher.local>

Am Sonntag, den 21.09.2008, 11:25 +0200 schrieb Alexandre Julliard:
> Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> writes:
> 
> > OK. Thanks for the pointer. I have a configure test ready that checks
> > whether the global -fno-builtin is really needed., and uses separate
> > flags otherwise. I am planning to submit it in series with a second
> > patch that checks for whether -fno-builtin-scanf is needed (check for
> > warning on "%P").
> I don't think there's any reason to make it that complex. You can just
> use -fno-builtin in all cases.

Sure I can, this was approach b I suggested. But that may be harmful to
performance, as it forbids gcc to use any knowledge about the standard
library (includes inlining of memcpy with small constant sizes or
built-in pureness annotations).

But the issue that started the discussion was: What to do about the
scanf warning? On a system that does not have wchar builtins in gcc,
currently all built-in functions are enabled. Even on these systems, we
should disable the built-in scanf to prevent the warning in the scanf
test. This need has long been unnoticed, as wchar ctype functions are
built-in on our main development platform.

Regards,
  Michael Karcher



From julliard at winehq.org  Sun Sep 21 06:07:14 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Sun, 21 Sep 2008 13:07:14 +0200
Subject: msvcrt: scanf fix a typo
In-Reply-To: <1221994322.4317.75.camel@hermes2.karcher.local> (Michael
	Karcher's message of "Sun, 21 Sep 2008 12:52:02 +0200")
References: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
	<1221900651.4317.4.camel@hermes2.karcher.local>
	<1221904437.4317.41.camel@hermes2.karcher.local>
	<87ljxnazq1.fsf@wine.dyndns.org>
	<1221931047.4317.46.camel@hermes2.karcher.local>
	<87d4ixc0l1.fsf@wine.dyndns.org>
	<1221994322.4317.75.camel@hermes2.karcher.local>
Message-ID: <8763opbvvh.fsf@wine.dyndns.org>

Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> writes:

> Sure I can, this was approach b I suggested. But that may be harmful to
> performance, as it forbids gcc to use any knowledge about the standard
> library (includes inlining of memcpy with small constant sizes or
> built-in pureness annotations).

If performance is an issue you most likely don't want to use msvcrt at
all, native Unix libc will always be faster. And knowing MS, they are
capable of adding an exception handler in memcpy someday...

> But the issue that started the discussion was: What to do about the
> scanf warning? On a system that does not have wchar builtins in gcc,
> currently all built-in functions are enabled. Even on these systems, we
> should disable the built-in scanf to prevent the warning in the scanf
> test. This need has long been unnoticed, as wchar ctype functions are
> built-in on our main development platform.

Just use -fno-builtin if it's supported, regardless of wchar
functions. This will fix scanf and avoid possible similar problems in
the future. Something like this should do the trick:

diff --git a/configure.ac b/configure.ac
index 27ae9ef..cda7f47 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1238,6 +1238,7 @@ then
   WINE_TRY_CFLAGS([-fshort-wchar],
                   [AC_DEFINE(CC_FLAG_SHORT_WCHAR, "-fshort-wchar",
                              [Specifies the compiler flag that forces a short wchar_t])])
+  WINE_TRY_CFLAGS([-fno-builtin],[AC_SUBST(BUILTINFLAG,"-fno-builtin")])
   WINE_TRY_CFLAGS([-fno-strict-aliasing])
   WINE_TRY_CFLAGS([-Wdeclaration-after-statement])
   WINE_TRY_CFLAGS([-Wwrite-strings])
@@ -1253,17 +1254,6 @@ then
   then
     EXTRACFLAGS="$EXTRACFLAGS -Wpointer-arith"
   fi
-
-  AC_SUBST(BUILTINFLAG,"")
-  saved_CFLAGS="$CFLAGS"
-  CFLAGS="$CFLAGS -Werror"
-  AC_CACHE_CHECK([for builtin wchar inlines], ac_cv_c_builtin_wchar_ctype,
-      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[int iswlower(unsigned short);]])],[ac_cv_c_builtin_wchar_ctype=no],[ac_cv_c_builtin_wchar_ctype=yes]))
-  CFLAGS="$saved_CFLAGS"
-  if test "$ac_cv_c_builtin_wchar_ctype" = "yes"
-  then
-    BUILTINFLAG="-fno-builtin"
-  fi
 fi
 
 dnl **** Check how to define a function in assembly code ****

-- 
Alexandre Julliard
julliard at winehq.org


From wine at mkarcher.dialup.fu-berlin.de  Sun Sep 21 06:36:41 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sun, 21 Sep 2008 13:36:41 +0200
Subject: msvcrt: scanf fix a typo
In-Reply-To: <8763opbvvh.fsf@wine.dyndns.org>
References: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
	<1221900651.4317.4.camel@hermes2.karcher.local>
	<1221904437.4317.41.camel@hermes2.karcher.local>
	<87ljxnazq1.fsf@wine.dyndns.org>
	<1221931047.4317.46.camel@hermes2.karcher.local>
	<87d4ixc0l1.fsf@wine.dyndns.org>
	<1221994322.4317.75.camel@hermes2.karcher.local>
	<8763opbvvh.fsf@wine.dyndns.org>
Message-ID: <1221997001.4317.91.camel@hermes2.karcher.local>

Am Sonntag, den 21.09.2008, 13:07 +0200 schrieb Alexandre Julliard:
> Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> writes:
> > Sure I can, this was approach b I suggested. But that may be harmful to
> > performance, as it forbids gcc to use any knowledge about the standard
> > library (includes inlining of memcpy with small constant sizes or
> > built-in pureness annotations).
> If performance is an issue you most likely don't want to use msvcrt at
> all, native Unix libc will always be faster. And knowing MS, they are
> capable of adding an exception handler in memcpy someday...

I was thinking about our dll implementations. crtdll and msvcrtd both
link to msvcrt. Looking at the implementations of these DLLs, it seems
you are right. No need to not compile them with -fno-builtin.

On the other hand, regedit, taskmgr, xcopy, wordpad and notepad are
linked to msvcrt. Should that be changed?

Regards,
  Michael Karcher



From julliard at winehq.org  Sun Sep 21 06:46:51 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Sun, 21 Sep 2008 13:46:51 +0200
Subject: msvcrt: scanf fix a typo
In-Reply-To: <1221997001.4317.91.camel@hermes2.karcher.local> (Michael
	Karcher's message of "Sun, 21 Sep 2008 13:36:41 +0200")
References: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
	<1221900651.4317.4.camel@hermes2.karcher.local>
	<1221904437.4317.41.camel@hermes2.karcher.local>
	<87ljxnazq1.fsf@wine.dyndns.org>
	<1221931047.4317.46.camel@hermes2.karcher.local>
	<87d4ixc0l1.fsf@wine.dyndns.org>
	<1221994322.4317.75.camel@hermes2.karcher.local>
	<8763opbvvh.fsf@wine.dyndns.org>
	<1221997001.4317.91.camel@hermes2.karcher.local>
Message-ID: <871vzdbu1g.fsf@wine.dyndns.org>

Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> writes:

> Am Sonntag, den 21.09.2008, 13:07 +0200 schrieb Alexandre Julliard:
>> If performance is an issue you most likely don't want to use msvcrt at
>> all, native Unix libc will always be faster. And knowing MS, they are
>> capable of adding an exception handler in memcpy someday...
>
> I was thinking about our dll implementations. crtdll and msvcrtd both
> link to msvcrt. Looking at the implementations of these DLLs, it seems
> you are right. No need to not compile them with -fno-builtin.

That's not at all what I said. Any module that uses msvcrt headers needs
to use -fno-builtin.

> On the other hand, regedit, taskmgr, xcopy, wordpad and notepad are
> linked to msvcrt. Should that be changed?

No, they are just fine the way they are, and it provides some nice
testing for our msvcrt.

-- 
Alexandre Julliard
julliard at winehq.org


From wine at mkarcher.dialup.fu-berlin.de  Sun Sep 21 07:43:29 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sun, 21 Sep 2008 14:43:29 +0200
Subject: msvcrt: scanf fix a typo
In-Reply-To: <871vzdbu1g.fsf@wine.dyndns.org>
References: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
	<1221900651.4317.4.camel@hermes2.karcher.local>
	<1221904437.4317.41.camel@hermes2.karcher.local>
	<87ljxnazq1.fsf@wine.dyndns.org>
	<1221931047.4317.46.camel@hermes2.karcher.local>
	<87d4ixc0l1.fsf@wine.dyndns.org>
	<1221994322.4317.75.camel@hermes2.karcher.local>
	<8763opbvvh.fsf@wine.dyndns.org>
	<1221997001.4317.91.camel@hermes2.karcher.local>
	<871vzdbu1g.fsf@wine.dyndns.org>
Message-ID: <1222001009.4317.124.camel@hermes2.karcher.local>

Am Sonntag, den 21.09.2008, 13:46 +0200 schrieb Alexandre Julliard:
> Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> writes:
> 
> > Am Sonntag, den 21.09.2008, 13:07 +0200 schrieb Alexandre Julliard:
> >> If performance is an issue you most likely don't want to use msvcrt at
> >> all, native Unix libc will always be faster.
> > I was thinking about our dll implementations. crtdll and msvcrtd both
> > link to msvcrt. Looking at the implementations of these DLLs, it seems
> > you are right. No need to not compile them with -fno-builtin.
> That's not at all what I said. Any module that uses msvcrt headers needs
> to use -fno-builtin.

Sorry, I didn't manage to write what I mean. The only dll modules in the
wine tree that currently use @BUILTINFLAG@ (and include msvcrt headers)
are the two I listed. And after examing the little amount of C code they
contain, I see no problem to compile them with -fno-builtin. That's what
I meant to say. So your patch of always using -fno-builtin with gcc is
the right way to go.

Regards,
  Michael Karcher



From wine at mkarcher.dialup.fu-berlin.de  Sun Sep 21 08:35:26 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sun, 21 Sep 2008 15:35:26 +0200
Subject: kernel32: fix PROFILE_Load to handle mac line endings (try 3)
In-Reply-To: <alpine.BSF.1.00.0809211505080.19733@anduin.net>
References: <alpine.BSF.1.00.0809210211190.65282@anduin.net>
	<1221989320.4317.54.camel@hermes2.karcher.local>
	<alpine.BSF.1.00.0809211505080.19733@anduin.net>
Message-ID: <1222004126.4317.144.camel@hermes2.karcher.local>

Am Sonntag, den 21.09.2008, 15:13 +0200 schrieb Erik Inge Bols?:
> > > -    ok(ret == 18, "Expected 18, got %d\n", ret);
> > > +    ok(ret == 18, "Run %d: Expected 18, got %d\n", run, ret);
> > Questions to everyone: I suppose if the trace above indicates the run
> > number, these modifications are unneded. Do you agree?
> Surely it must be better to see where the error is right away, instead of 
> having to do a +trace?
You are confusing TRACE (in Wine code) and trace (in Wine tests). A
trace (in a Wine test) gets always printed if the test is run; it is not
connected to the trace part of any of Wine's debug channels (that's
where TRACE messages go to).

> Without modifying the test messages, we'll only get 
> a line number, and no mention of which data caused the test to fail.
You just look some lines upwards to the trace output. It's right next to
the failure message.

Regards,
  Michael Karcher



From julliard at winehq.org  Sun Sep 21 11:06:22 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Sun, 21 Sep 2008 18:06:22 +0200
Subject: msvcrt: scanf fix a typo
In-Reply-To: <1222001009.4317.124.camel@hermes2.karcher.local> (Michael
	Karcher's message of "Sun, 21 Sep 2008 14:43:29 +0200")
References: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
	<1221900651.4317.4.camel@hermes2.karcher.local>
	<1221904437.4317.41.camel@hermes2.karcher.local>
	<87ljxnazq1.fsf@wine.dyndns.org>
	<1221931047.4317.46.camel@hermes2.karcher.local>
	<87d4ixc0l1.fsf@wine.dyndns.org>
	<1221994322.4317.75.camel@hermes2.karcher.local>
	<8763opbvvh.fsf@wine.dyndns.org>
	<1221997001.4317.91.camel@hermes2.karcher.local>
	<871vzdbu1g.fsf@wine.dyndns.org>
	<1222001009.4317.124.camel@hermes2.karcher.local>
Message-ID: <87wsh5a3gh.fsf@wine.dyndns.org>

Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> writes:

> Sorry, I didn't manage to write what I mean. The only dll modules in the
> wine tree that currently use @BUILTINFLAG@ (and include msvcrt headers)
> are the two I listed. And after examing the little amount of C code they
> contain, I see no problem to compile them with -fno-builtin.

Right; I agree we wouldn't want to use -fno-builtin in other dlls, but
we don't want to use msvcrt in dlls anyway, and we should never need to.

-- 
Alexandre Julliard
julliard at winehq.org


From david at l8s.co.uk  Sun Sep 21 16:03:50 2008
From: david at l8s.co.uk (David Laight)
Date: Sun, 21 Sep 2008 22:03:50 +0100
Subject: msvcrt: scanf fix a typo
In-Reply-To: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
References: <a71bd89a0809191551q355d6ff3ic0c7a5b0f6800244@mail.gmail.com>
Message-ID: <20080921210350.GB476@snowdrop.l8s.co.uk>

On Fri, Sep 19, 2008 at 03:51:00PM -0700, Dan Kegel wrote:
> Here's the gcc error:
> > scanf.c:66: warning: unknown conversion type character `P' in format
> 
> I'm not a programmer, but I play one on TV.  And here's what I
> came up with in five minutes of typing and not enough thinking:
> 
> That particular error depends on gcc knowing intimate details of
> sscanf.   Unless we teach gcc about the particular sscanf we're
> implementing, it's likely to give false errors.

For the tests, the compile time error can be avoided by using
a non-constant format string.

Quite possibly adding a global variable whose value is a
always zero to the format string is enough.

	David

-- 
David Laight: david at l8s.co.uk


From wine-devel at kievinfo.com  Sun Sep 21 17:38:15 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 21 Sep 2008 16:38:15 -0600
Subject: What broken in ubuntu Wine packages?
Message-ID: <48D6CCD7.1050804@kievinfo.com>

Almost all bugs that come from Ubuntu users don't have usable backtraces.
Instead they have this:

Process of pid=0008 has terminated
No process loaded, cannot execute 'echo Modules:'
Cannot get info on module while no process is loaded

Needless to say this doesn't help with troubleshooting the problem. Does
anyone have a clue what might be the problem?

Vitaliy.


From andrewfenn at gmail.com  Sun Sep 21 18:53:11 2008
From: andrewfenn at gmail.com (Andrew Fenn)
Date: Mon, 22 Sep 2008 00:53:11 +0100
Subject: What broken in ubuntu Wine packages?
In-Reply-To: <48D6CCD7.1050804@kievinfo.com>
References: <48D6CCD7.1050804@kievinfo.com>
Message-ID: <b594ca9d0809211653t1bbffd8bpd74fe81412a45949@mail.gmail.com>

>
> Needless to say this doesn't help with troubleshooting the problem. Does
> anyone have a clue what might be the problem?
>

I looked up the maintainer of the package.. Ubuntu MOTU Developers
<ubuntu-motu at lists.ubuntu.com>

You could try asking there?


