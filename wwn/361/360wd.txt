From hverbeet at gmail.com  Tue Sep  1 03:59:54 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Tue, 1 Sep 2009 10:59:54 +0200
Subject: [PATCH 4/4] openal32: Add thunks for EFX functions
In-Reply-To: <200908311216.23807.chris.kcat@gmail.com>
References: <200908311216.23807.chris.kcat@gmail.com>
Message-ID: <d658b69e0909010159l6a540f7atf545a5e7f02347b5@mail.gmail.com>

I suppose 32-bit reads are atomic on x86, provided the variable is
aligned correctly, but shouldn't access to CurrentCtx technically be
synchronized?


From hverbeet at gmail.com  Tue Sep  1 04:00:23 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Tue, 1 Sep 2009 11:00:23 +0200
Subject: [PATCH 1/7] dpwsockx: Stub implementation
In-Reply-To: <1251762652-7224-1-git-send-email-razielmine@gmail.com>
References: <1251762652-7224-1-git-send-email-razielmine@gmail.com>
Message-ID: <d658b69e0909010200q2d8a855cw7f9ad8a8a3e0ead6@mail.gmail.com>

2009/9/1 Ismael Barros <razielmine at gmail.com>:
> ---
> ?dlls/dpwsockx/Makefile.in ? ? | ? ?2 +-
> ?dlls/dpwsockx/dpwsockx_main.c | ?164 ++++++++++++++++++++++++++++++++++++++++-
> ?2 files changed, 163 insertions(+), 3 deletions(-)
>
This patch seems to assume the application will never pass NULL for
"data", is that safe to assume? If applications aren't allowed to pass
NULL it's ok to crash, although it might make your life simpler if it
isn't inside a TRACE/FIXME.


From hverbeet at gmail.com  Tue Sep  1 04:00:37 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Tue, 1 Sep 2009 11:00:37 +0200
Subject: [PATCH 2/7] dpwsockx: Implementation of SPInit
In-Reply-To: <1251762652-7224-2-git-send-email-razielmine@gmail.com>
References: <1251762652-7224-1-git-send-email-razielmine@gmail.com>
	<1251762652-7224-2-git-send-email-razielmine@gmail.com>
Message-ID: <d658b69e0909010200x31208614lfad6a7d2ee8c0d95@mail.gmail.com>

2009/9/1 Ismael Barros <razielmine at gmail.com>:
> +typedef struct tagDPSP_MSG_HEADER
> +{
> + ? ?DWORD ? ? ? size; ? ? ? ? ? /* size & 0x000FFFFF, token & 0xFFF00000 */
> + ? ?SOCKADDR_IN SockAddr;
> +} DPSP_MSG_HEADER, *LPDPSP_MSG_HEADER;
> +typedef const DPSP_MSG_HEADER* LPCDPSP_MSG_HEADER;
> +
It seems you're sending this over the network, so you should make sure
it's correctly packed, and take the byte order into account.


From chris.kcat at gmail.com  Tue Sep  1 04:58:03 2009
From: chris.kcat at gmail.com (Chris Robinson)
Date: Tue, 1 Sep 2009 02:58:03 -0700
Subject: [PATCH 4/4] openal32: Add thunks for EFX functions
In-Reply-To: <d658b69e0909010159l6a540f7atf545a5e7f02347b5@mail.gmail.com>
References: <200908311216.23807.chris.kcat@gmail.com>
	<d658b69e0909010159l6a540f7atf545a5e7f02347b5@mail.gmail.com>
Message-ID: <200909010258.03612.chris.kcat@gmail.com>

On Tuesday 01 September 2009 1:59:54 am Henri Verbeet wrote:
> I suppose 32-bit reads are atomic on x86, provided the variable is
> aligned correctly, but shouldn't access to CurrentCtx technically be
> synchronized?

Probably, but I'm not sure it would be beneficial. If the thread can be 
interrupted between entering one of the extended functions and the function 
pointer being called, it would be a pretty nasty race condition. OpenAL 
doesn't really say what happens when you call a function for a context that's 
not active (current Windows implementations, if they haven't changed too much, 
would likely crash, silently fail, or succeed using the wrong device).

I'm not sure the cost of an extra lock would be worth it when it could still 
randomly crash anyway.


From razielmine at gmail.com  Tue Sep  1 05:17:43 2009
From: razielmine at gmail.com (=?UTF-8?Q?Ismael_Barros=C2=B2?=)
Date: Tue, 1 Sep 2009 12:17:43 +0200
Subject: [PATCH 1/7] dpwsockx: Stub implementation
In-Reply-To: <d658b69e0909010200q2d8a855cw7f9ad8a8a3e0ead6@mail.gmail.com>
References: <1251762652-7224-1-git-send-email-razielmine@gmail.com>
	<d658b69e0909010200q2d8a855cw7f9ad8a8a3e0ead6@mail.gmail.com>
Message-ID: <82e274890909010317g26c5ea37la84c2d1079932ef2@mail.gmail.com>

dpwsockx is not used by any application, only by us in dplayx, so it's
pretty safe to assume we won't pass any invalid parameter, as all the
parameters passed by applications are already checked for validity in
dplayx.

On Tue, Sep 1, 2009 at 11:00 AM, Henri Verbeet<hverbeet at gmail.com> wrote:
> 2009/9/1 Ismael Barros <razielmine at gmail.com>:
>> ---
>> ?dlls/dpwsockx/Makefile.in ? ? | ? ?2 +-
>> ?dlls/dpwsockx/dpwsockx_main.c | ?164 ++++++++++++++++++++++++++++++++++++++++-
>> ?2 files changed, 163 insertions(+), 3 deletions(-)
>>
> This patch seems to assume the application will never pass NULL for
> "data", is that safe to assume? If applications aren't allowed to pass
> NULL it's ok to crash, although it might make your life simpler if it
> isn't inside a TRACE/FIXME.
>
>
>


From razielmine at gmail.com  Tue Sep  1 05:21:28 2009
From: razielmine at gmail.com (=?UTF-8?Q?Ismael_Barros=C2=B2?=)
Date: Tue, 1 Sep 2009 12:21:28 +0200
Subject: [PATCH 2/7] dpwsockx: Implementation of SPInit
In-Reply-To: <d658b69e0909010200x31208614lfad6a7d2ee8c0d95@mail.gmail.com>
References: <1251762652-7224-1-git-send-email-razielmine@gmail.com>
	<1251762652-7224-2-git-send-email-razielmine@gmail.com>
	<d658b69e0909010200x31208614lfad6a7d2ee8c0d95@mail.gmail.com>
Message-ID: <82e274890909010321q750aedd3ga77f8ca644f6ebbe@mail.gmail.com>

On Tue, Sep 1, 2009 at 11:00 AM, Henri Verbeet<hverbeet at gmail.com> wrote:
> 2009/9/1 Ismael Barros <razielmine at gmail.com>:
>> +typedef struct tagDPSP_MSG_HEADER
>> +{
>> + ? ?DWORD ? ? ? size; ? ? ? ? ? /* size & 0x000FFFFF, token & 0xFFF00000 */
>> + ? ?SOCKADDR_IN SockAddr;
>> +} DPSP_MSG_HEADER, *LPDPSP_MSG_HEADER;
>> +typedef const DPSP_MSG_HEADER* LPCDPSP_MSG_HEADER;
>> +
> It seems you're sending this over the network, so you should make sure
> it's correctly packed, and take the byte order into account.

I tested it with a wireshark dissector and against the original
implementation, and it seems to work nicely.


From hverbeet at gmail.com  Tue Sep  1 05:28:09 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Tue, 1 Sep 2009 12:28:09 +0200
Subject: [PATCH 2/7] dpwsockx: Implementation of SPInit
In-Reply-To: <82e274890909010321q750aedd3ga77f8ca644f6ebbe@mail.gmail.com>
References: <1251762652-7224-1-git-send-email-razielmine@gmail.com>
	<1251762652-7224-2-git-send-email-razielmine@gmail.com>
	<d658b69e0909010200x31208614lfad6a7d2ee8c0d95@mail.gmail.com>
	<82e274890909010321q750aedd3ga77f8ca644f6ebbe@mail.gmail.com>
Message-ID: <d658b69e0909010328i4da91414ycf8337de0a0153a8@mail.gmail.com>

2009/9/1 Ismael Barros? <razielmine at gmail.com>:
> On Tue, Sep 1, 2009 at 11:00 AM, Henri Verbeet<hverbeet at gmail.com> wrote:
>> 2009/9/1 Ismael Barros <razielmine at gmail.com>:
>>> +typedef struct tagDPSP_MSG_HEADER
>>> +{
>>> + ? ?DWORD ? ? ? size; ? ? ? ? ? /* size & 0x000FFFFF, token & 0xFFF00000 */
>>> + ? ?SOCKADDR_IN SockAddr;
>>> +} DPSP_MSG_HEADER, *LPDPSP_MSG_HEADER;
>>> +typedef const DPSP_MSG_HEADER* LPCDPSP_MSG_HEADER;
>>> +
>> It seems you're sending this over the network, so you should make sure
>> it's correctly packed, and take the byte order into account.
>
> I tested it with a wireshark dissector and against the original
> implementation, and it seems to work nicely.
>
Probably, but that depends on how the compiler packs the structure,
and on the host byte order.


From jacek at codeweavers.com  Tue Sep  1 06:36:02 2009
From: jacek at codeweavers.com (Jacek Caban)
Date: Tue, 01 Sep 2009 13:36:02 +0200
Subject: urlmon: Add test for IsValidURL
In-Reply-To: <4A9CF04E.7050501@mail.ru>
References: <4A9CF04E.7050501@mail.ru>
Message-ID: <4A9D0722.9040408@codeweavers.com>

Hi Vladimir,

Vladimir Pankratov wrote:
> Hello all.
>
> Added test for IsValidURL.
>
> changed files:
> dlls/urlmon/tests/misc.c

+    {
+        hr = IsValidURL(NULL, bad_urls[i], 0);
+        ok(hr != S_OK, "URL %s must be invalid\n", wine_dbgstr_w(bad_urls[i]));


It would be better to test the exact error code here.


Jacek


From celticht32 at yahoo.com  Tue Sep  1 07:14:12 2009
From: celticht32 at yahoo.com (chris ahrendt)
Date: Tue, 1 Sep 2009 05:14:12 -0700 (PDT)
Subject: cpp check run monday Aug 31
Message-ID: <178402.74458.qm@web112616.mail.gq1.yahoo.com>

I ran CPP check against the monday git tree using the latest CPP check 
off their git tree.

here is the result :


[/home/cahrendt/wine-git/dlls/ddraw/tests/d3d.c:320]: (error) Division 
by zero
[/home/cahrendt/wine-git/dlls/ddraw/tests/d3d.c:336]: (error) Division 
by zero
[/home/cahrendt/wine-git/dlls/ddraw/tests/d3d.c:340]: (error) Division 
by zero
[/home/cahrendt/wine-git/dlls/msvcrt/tests/file.c:982]: (error) 
Deallocating a deallocated pointer: stream2
[/home/cahrendt/wine-git/dlls/msvcrt/tests/file.c:966]: (error) Resource 
leak: stream3
[/home/cahrendt/wine-git/dlls/msvcrt/tests/file.c:973]: (error) Resource 
leak: stream4
[/home/cahrendt/wine-git/dlls/msvcrt/tests/heap.c:433]: (possible error) 
Memory leak: mem
[/home/cahrendt/wine-git/dlls/ntdll/directory.c:2339]: (error) Resource 
leak: old_cwd
[/home/cahrendt/wine-git/dlls/ntdll/server.c:802]: (error) Resource leak: fd
[/home/cahrendt/wine-git/dlls/ntdll/server.c:882]: (error) Resource 
leak: fd_cwd
[/home/cahrendt/wine-git/dlls/rpcrt4/tests/server.c:1189]: (possible 
error) Array index out of bounds
[/home/cahrendt/wine-git/dlls/sane.ds/ui.c:842]: (error) Division by zero
[/home/cahrendt/wine-git/dlls/sane.ds/ui.c:843]: (error) Division by zero
[/home/cahrendt/wine-git/dlls/sane.ds/ui.c:863]: (error) Division by zero
[/home/cahrendt/wine-git/dlls/windowscodecs/bmpencode.c:336]: (error) 
Division by zero
[/home/cahrendt/wine-git/dlls/windowscodecs/bmpencode.c:337]: (error) 
Division by zero
[/home/cahrendt/wine-git/dlls/wined3d/wined3d_private.h:218]: (error) 
Division by zero
[/home/cahrendt/wine-git/dlls/wined3d/wined3d_private.h:219]: (error) 
Division by zero
[/home/cahrendt/wine-git/dlls/wined3d/wined3d_private.h:240]: (error) 
Division by zero
[/home/cahrendt/wine-git/dlls/wined3d/wined3d_private.h:241]: (error) 
Division by zero
[/home/cahrendt/wine-git/dlls/wineoss.drv/mmaux.c:150]: (error) Resource 
leak: mixer
[/home/cahrendt/wine-git/dlls/wineoss.drv/mmaux.c:211]: (error) Resource 
leak: mixer
[/home/cahrendt/wine-git/dlls/wineps.drv/init.c:270]: (error) Possible 
null pointer dereference: dmW - otherwise it is redundant to check if 
dmW is null at line 272
[/home/cahrendt/wine-git/programs/oleview/pane.c:152]: (error) Possible 
null pointer dereference: hWndCreated
[/home/cahrendt/wine-git/tools/fnt2bdf.c:779]: (error) Resource leak: fd
[/home/cahrendt/wine-git/tools/fnt2fon.c:387]: (error) Memory leak: 
file_lens
[/home/cahrendt/wine-git/tools/makedep.c:953]: (error) Resource leak: file
[/home/cahrendt/wine-git/tools/sfnt2fnt.c:877]: (error) Resource leak: ofp
[/home/cahrendt/wine-git/tools/widl/write_msft.c:2536]: (error) Resource 
leak: fd
[/home/cahrendt/wine-git/tools/winedump/msmangle.c:164]: (possible 
error) Memory leak: function_name
[/home/cahrendt/wine-git/tools/winedump/pe.c:1549]: (possible error) 
Memory leak: map

chris






      


From hverbeet at gmail.com  Tue Sep  1 07:31:50 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Tue, 1 Sep 2009 14:31:50 +0200
Subject: cpp check run monday Aug 31
In-Reply-To: <178402.74458.qm@web112616.mail.gq1.yahoo.com>
References: <178402.74458.qm@web112616.mail.gq1.yahoo.com>
Message-ID: <d658b69e0909010531r3ce303bau49d53f2eb3fcbd41@mail.gmail.com>

2009/9/1 chris ahrendt <celticht32 at yahoo.com>:
> [/home/cahrendt/wine-git/dlls/ddraw/tests/d3d.c:320]: (error) Division
> by zero
> [/home/cahrendt/wine-git/dlls/ddraw/tests/d3d.c:336]: (error) Division
> by zero
> [/home/cahrendt/wine-git/dlls/ddraw/tests/d3d.c:340]: (error) Division
> by zero
...
> [/home/cahrendt/wine-git/dlls/wined3d/wined3d_private.h:218]: (error)
> Division by zero
> [/home/cahrendt/wine-git/dlls/wined3d/wined3d_private.h:219]: (error)
> Division by zero
> [/home/cahrendt/wine-git/dlls/wined3d/wined3d_private.h:240]: (error)
> Division by zero
> [/home/cahrendt/wine-git/dlls/wined3d/wined3d_private.h:241]: (error)
> Division by zero

Although that's not a particularly nice way to generate floating point
specials, they're only errors if the relevant exceptions are unmasked.
I think it should be safe to assume they aren't in the ddraw tests,
and in case of wined3d it won't generate them unless the input data
already contained them.


From dylan.ah.smith at gmail.com  Tue Sep  1 07:33:54 2009
From: dylan.ah.smith at gmail.com (Dylan Smith)
Date: Tue, 1 Sep 2009 08:33:54 -0400
Subject: [1/3] riched20: Implement handling of WM_KEYDOWN VK_RETURN in a 
	dialog mode.
In-Reply-To: <4A9CD8D3.5010701@gmail.com>
References: <4A9CD8D3.5010701@gmail.com>
Message-ID: <5c6ee3b70909010533j64092cfbp37cf0a984f75dbe@mail.gmail.com>

On Tue, Sep 1, 2009 at 4:18 AM, Sergey Khodych <khodych at gmail.com> wrote:
> @@ -2145,6 +2145,31 @@ ME_KeyDown(ME_TextEditor *editor, WORD nKey)
> ? ? ? ME_SendRequestResize(editor, FALSE);
> ? ? ? return TRUE;
> ? ? case VK_RETURN:
> + ? ? ?if (editor->bDialogMode)
> + ? ? ?{
> + ? ? ? ?DWORD dwStyle;
> +
> + ? ? ? ?if (ctrl_is_down)
> + ? ? ? ? ?return TRUE;
> +
> + ? ? ? ?dwStyle = GetWindowLongW(editor->hWnd, GWL_STYLE);
> + ? ? ? ?if (!(dwStyle & ES_WANTRETURN))
> + ? ? ? ?{
> + ? ? ? ? ?DWORD dw;
> + ? ? ? ? ?dw = SendMessageW(editor->hwndParent, DM_GETDEFID, 0, 0);
> + ? ? ? ? ?if (HIWORD(dw) == DC_HASDEFID)
> + ? ? ? ? ?{
> + ? ? ? ? ? ? ?HWND hwDefCtrl = GetDlgItem(editor->hwndParent, LOWORD(dw));
> + ? ? ? ? ? ? ?if (hwDefCtrl)
> + ? ? ? ? ? ? ?{
> + ? ? ? ? ? ? ? ? ?SendMessageW(editor->hwndParent, WM_NEXTDLGCTL, (WPARAM)hwDefCtrl, (LPARAM)TRUE);
> + ? ? ? ? ? ? ? ? ?PostMessageW(hwDefCtrl, WM_KEYDOWN, VK_RETURN, 0);
> + ? ? ? ? ? ? ?}
> + ? ? ? ? ?}
> + ? ? ? ? ?return TRUE;
> + ? ? ? ?}
> + ? ? ?}
> +
> ? ? ? if (editor->styleFlags & ES_MULTILINE)
> ? ? ? {
> ? ? ? ? ME_Cursor cursor = editor->pCursors[0];

1. editor->hWnd may be NULL for windowless richedit controls, but you
code doesn't seem to take that into consideration.
2. The style flags that you get from GetWindowLongW should probably
come from the cached values in editor->styleFlags.
3. Is there any need for storing the hwndParent in editor.? Couldn't
the value be obtained by using GetWindowLongW using GWL_HWNDPARENT
after making sure that editor->hWnd is non-NULL (i.e. windowed mode).


From madewokherd+8cd9 at gmail.com  Tue Sep  1 08:30:46 2009
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Tue, 1 Sep 2009 08:30:46 -0500
Subject: cpp check run monday Aug 31
In-Reply-To: <178402.74458.qm@web112616.mail.gq1.yahoo.com>
References: <178402.74458.qm@web112616.mail.gq1.yahoo.com>
Message-ID: <ced95fe0909010630g5af452beo2da2f7233f327447@mail.gmail.com>

> [/home/cahrendt/wine-git/dlls/windowscodecs/bmpencode.c:336]: (error)
> Division by zero
> [/home/cahrendt/wine-git/dlls/windowscodecs/bmpencode.c:337]: (error)
> Division by zero

http://source.winehq.org/git/wine.git/?a=blob;f=dlls/windowscodecs/bmpencode.c;h=11c39e898675122eb24df6a3a0ba9a911c95e3d0;hb=HEAD#l336

I'm going to need someone to explain to me how a division by a literal
0.0254 can be a "Division by zero".

-- 
Vincent Povirk


From dylan.ah.smith at gmail.com  Tue Sep  1 08:38:55 2009
From: dylan.ah.smith at gmail.com (Dylan Smith)
Date: Tue, 1 Sep 2009 09:38:55 -0400
Subject: [1/3] riched20: Implement handling of WM_KEYDOWN VK_RETURN in a 
	dialog mode.
In-Reply-To: <5c6ee3b70909010533j64092cfbp37cf0a984f75dbe@mail.gmail.com>
References: <4A9CD8D3.5010701@gmail.com>
	<5c6ee3b70909010533j64092cfbp37cf0a984f75dbe@mail.gmail.com>
Message-ID: <5c6ee3b70909010638x26015f0yffc5d17b6901bc24@mail.gmail.com>

> 3. Is there any need for storing the hwndParent in editor.? Couldn't
> the value be obtained by using GetWindowLongW using GWL_HWNDPARENT
> after making sure that editor->hWnd is non-NULL (i.e. windowed mode).
>
Scratch that point, I see that it is tested for using SetParent in the
tests after creating the richedit control.

Other things I noticed:

> +    r = SendMessage(hwRichEdit, WM_GETDLGCODE, (WPARAM)NULL, (LPARAM)NULL);
Avoid superfluous casts.  In this case it is preferred to use 0
instead of casting NULL.  If the cast isn't needed, then leave it out
(See: http://wiki.winehq.org/SuperfluousCasts).

> +struct dialog_mode_messages
> +{
> +    int wm_getdefid, wm_close, wm_nextdlgctl;
> +};
> +
> +static struct dialog_mode_messages dm_messages;
> +
> +static void zero_dm_messages(void)
> +{
> +    dm_messages.wm_close = 0;
> +    dm_messages.wm_getdefid = 0;
> +    dm_messages.wm_nextdlgctl =0;
> +}
Couldn't memset(dm_messages, 0, sizeof(dm_messages)) be used instead
of the special zero_dm_messages function.


From marty.cannon at gmail.com  Tue Sep  1 08:52:18 2009
From: marty.cannon at gmail.com (Marty Cannon)
Date: Tue, 1 Sep 2009 08:52:18 -0500
Subject: Mirror Space
Message-ID: <a64cb0d90909010652r6d79595bs81b8f36f298f9f6c@mail.gmail.com>

Hey guys,
Since the wine.budgetdedicated.com server was down all weekend, I thought
I'd offer an additional mirror location. I currently mirror several major
linux distributions, and would love to contribute to something as valuable
to the community as the wine project is. My site currently runs around
3500GB per month, so a few hundred GB worth of transfer shouldn't make much
difference.
I've never set up an apt mirror, but with some instruction and googling, I
bet I can do it. At the very least, I can mirror the package archive just
incase the main site goes down. Let me know how I can help.

-Marty Cannon
amarillolinux.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090901/60b8731c/attachment.htm>

From paul.vriens.wine at gmail.com  Tue Sep  1 14:16:57 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Tue, 01 Sep 2009 21:16:57 +0200
Subject: [PATCH 09/10] mshtml: Added function object tests.
In-Reply-To: <4A9C1AB9.9010801@codeweavers.com>
References: <4A9C1AB9.9010801@codeweavers.com>
Message-ID: <4A9D7329.9020008@gmail.com>

Jacek Caban wrote:
> ---
>  dlls/mshtml/tests/script.c |   99 
> +++++++++++++++++++++++++++++++++++++++++++-
>  1 files changed, 98 insertions(+), 1 deletions(-)
> 
> 
> 
> ------------------------------------------------------------------------
> 
> 
Hi Jacek,

Looks like this patch introduced test failures on IE6 and IE7 (only? as 
a box with IE5 succeeded and IE8 seems ok as well).

Could you have a look?

-- 
Cheers,

Paul.


From scott at open-vote.org  Tue Sep  1 14:52:34 2009
From: scott at open-vote.org (Scott Ritchie)
Date: Tue, 01 Sep 2009 12:52:34 -0700
Subject: Mirror Space
In-Reply-To: <a64cb0d90909010652r6d79595bs81b8f36f298f9f6c@mail.gmail.com>
References: <a64cb0d90909010652r6d79595bs81b8f36f298f9f6c@mail.gmail.com>
Message-ID: <4A9D7B82.8090408@open-vote.org>

Marty Cannon wrote:
> Hey guys,
> Since the wine.budgetdedicated.com <http://wine.budgetdedicated.com>
> server was down all weekend, I thought I'd offer an additional mirror
> location. I currently mirror several major linux distributions, and
> would love to contribute to something as valuable to the community as
> the wine project is. My site currently runs around 3500GB per month, so
> a few hundred GB worth of transfer shouldn't make much difference.
> I've never set up an apt mirror, but with some instruction and googling,
> I bet I can do it. At the very least, I can mirror the package archive
> just incase the main site goes down. Let me know how I can help.
> 
> -Marty Cannon
> amarillolinux.com <http://amarillolinux.com>
> 
>

It should be up for good now, so this won't be necessary.

Please note that the outage was my fault rather than budgetdedicated's
-- I had a cron script that kept chewing up memory without my realizing
it, eventually crashing apache.

I've migrated everything now and it should be taken care of.

Thanks,
Scott Ritchie


From jacek at codeweavers.com  Tue Sep  1 16:34:34 2009
From: jacek at codeweavers.com (Jacek Caban)
Date: Tue, 01 Sep 2009 23:34:34 +0200
Subject: [PATCH 09/10] mshtml: Added function object tests.
In-Reply-To: <4A9D7329.9020008@gmail.com>
References: <4A9C1AB9.9010801@codeweavers.com> <4A9D7329.9020008@gmail.com>
Message-ID: <4A9D936A.90002@codeweavers.com>

Hi Paul,

Paul Vriens wrote:
> Hi Jacek,
>
> Looks like this patch introduced test failures on IE6 and IE7 (only? 
> as a box with IE5 succeeded and IE8 seems ok as well).
>
> Could you have a look?

It strange, it works for me on IE6. IE7 is clearly broken. I've sent 
patches fixing it, thanks for notification.


Thanks,
    Jacek



From austinenglish at gmail.com  Tue Sep  1 17:50:51 2009
From: austinenglish at gmail.com (Austin English)
Date: Tue, 1 Sep 2009 17:50:51 -0500
Subject: Mirror Space
In-Reply-To: <4A9D7B82.8090408@open-vote.org>
References: <a64cb0d90909010652r6d79595bs81b8f36f298f9f6c@mail.gmail.com> 
	<4A9D7B82.8090408@open-vote.org>
Message-ID: <b6bb06270909011550t7f1c06b9jf593dc3614e7cbb9@mail.gmail.com>

On Tue, Sep 1, 2009 at 2:52 PM, Scott Ritchie<scott at open-vote.org> wrote:
> Marty Cannon wrote:
>> Hey guys,
>> Since the wine.budgetdedicated.com <http://wine.budgetdedicated.com>
>> server was down all weekend, I thought I'd offer an additional mirror
>> location. I currently mirror several major linux distributions, and
>> would love to contribute to something as valuable to the community as
>> the wine project is. My site currently runs around 3500GB per month, so
>> a few hundred GB worth of transfer shouldn't make much difference.
>> I've never set up an apt mirror, but with some instruction and googling,
>> I bet I can do it. At the very least, I can mirror the package archive
>> just incase the main site goes down. Let me know how I can help.
>>
>> -Marty Cannon
>> amarillolinux.com <http://amarillolinux.com>
>>
>>
>
> It should be up for good now, so this won't be necessary.
>
> Please note that the outage was my fault rather than budgetdedicated's
> -- I had a cron script that kept chewing up memory without my realizing
> it, eventually crashing apache.
>
> I've migrated everything now and it should be taken care of.
>
> Thanks,
> Scott Ritchie
>
>
>

Since when is a mirror a bad thing?

-- 
-Austin


From austinenglish at gmail.com  Tue Sep  1 18:07:38 2009
From: austinenglish at gmail.com (Austin English)
Date: Tue, 1 Sep 2009 18:07:38 -0500
Subject: [PATCH] [WineDbg]: fix backend prototypes for PowerPC and Alpha
In-Reply-To: <20090901202343.28389.43934.stgit@localhost>
References: <20090901202343.28389.43934.stgit@localhost>
Message-ID: <b6bb06270909011607y4ebea1e7m727f6bb27074712a@mail.gmail.com>

On Tue, Sep 1, 2009 at 3:23 PM, Eric Pouech<eric.pouech at orange.fr> wrote:
>
>
>
> A+
> ---
>
> ?programs/winedbg/be_alpha.c | ? ?8 ++++----
> ?programs/winedbg/be_ppc.c ? | ? ?8 ++++----
> ?2 files changed, 8 insertions(+), 8 deletions(-)
>
>
> diff --git a/programs/winedbg/be_alpha.c b/programs/winedbg/be_alpha.c
> index aeeb79a..8ced1d6 100644
> --- a/programs/winedbg/be_alpha.c
> +++ b/programs/winedbg/be_alpha.c
> @@ -60,25 +60,25 @@ static const struct dbg_internal_var* be_alpha_init_registers(CONTEXT* ctx)
> ? ? return be_alpha_ctx;
> ?}
>
> -static unsigned be_alpha_is_step_over_insn(void* insn)
> +static unsigned be_alpha_is_step_over_insn(const void* insn)
> ?{
> ? ? dbg_printf("not done\n");
> ? ? return FALSE;
> ?}
>
> -static unsigned be_alpha_is_function_return(void* insn)
> +static unsigned be_alpha_is_function_return(const void* insn)
> ?{
> ? ? dbg_printf("not done\n");
> ? ? return FALSE;
> ?}
>
> -static unsigned be_alpha_is_break_insn(void* insn)
> +static unsigned be_alpha_is_break_insn(const void* insn)
> ?{
> ? ? dbg_printf("not done\n");
> ? ? return FALSE;
> ?}
>
> -static unsigned be_alpha_is_func_call(void* insn, void** insn_callee)
> +static unsigned be_alpha_is_func_call(const void* insn, ADDRESS64* callee)
> ?{
> ? ? return FALSE;
> ?}
> diff --git a/programs/winedbg/be_ppc.c b/programs/winedbg/be_ppc.c
> index 2e8826e..bff1571 100644
> --- a/programs/winedbg/be_ppc.c
> +++ b/programs/winedbg/be_ppc.c
> @@ -73,25 +73,25 @@ static const struct dbg_internal_var* be_ppc_init_registers(CONTEXT* ctx)
> ? ? return be_ppc_ctx;
> ?}
>
> -static unsigned be_ppc_is_step_over_insn(void* insn)
> +static unsigned be_ppc_is_step_over_insn(const void* insn)
> ?{
> ? ? dbg_printf("not done\n");
> ? ? return FALSE;
> ?}
>
> -static unsigned be_ppc_is_function_return(void* insn)
> +static unsigned be_ppc_is_function_return(const void* insn)
> ?{
> ? ? dbg_printf("not done\n");
> ? ? return FALSE;
> ?}
>
> -static unsigned be_ppc_is_break_insn(void* insn)
> +static unsigned be_ppc_is_break_insn(const void* insn)
> ?{
> ? ? dbg_printf("not done\n");
> ? ? return FALSE;
> ?}
>
> -static unsigned be_ppc_is_func_call(void* insn, void** insn_callee)
> +static unsigned be_ppc_is_func_call(const void* insn, ADDRESS64* callee)
> ?{
> ? ? return FALSE;
> ?}
>
>
>
>
>
>

Works for PPC.

-- 
-Austin


From wine-devel at kievinfo.com  Tue Sep  1 19:55:32 2009
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Tue, 01 Sep 2009 18:55:32 -0600
Subject: Mirror Space
In-Reply-To: <4A9D7B82.8090408@open-vote.org>
References: <a64cb0d90909010652r6d79595bs81b8f36f298f9f6c@mail.gmail.com>
	<4A9D7B82.8090408@open-vote.org>
Message-ID: <4A9DC284.3080603@kievinfo.com>

Scott Ritchie wrote:
> Marty Cannon wrote:
>> Hey guys,
>> Since the wine.budgetdedicated.com <http://wine.budgetdedicated.com>
>> server was down all weekend, I thought I'd offer an additional mirror
>> location.
> 
> It should be up for good now, so this won't be necessary.
Isn't  that what you said last time? <g>

That's why it's called a mirror not the primary distribution point. More
mirrors - less load on one server, less chances we'll have lots of unhappy
users because they can't get the best software in the world <g>

My understanding there isn't anything special about apt repository
mirroring, they are just files & directories under some URI.

Vitaliy.


From scott at open-vote.org  Tue Sep  1 19:56:49 2009
From: scott at open-vote.org (Scott Ritchie)
Date: Tue, 01 Sep 2009 17:56:49 -0700
Subject: Mirror Space
In-Reply-To: <b6bb06270909011550t7f1c06b9jf593dc3614e7cbb9@mail.gmail.com>
References: <a64cb0d90909010652r6d79595bs81b8f36f298f9f6c@mail.gmail.com>
	<4A9D7B82.8090408@open-vote.org>
	<b6bb06270909011550t7f1c06b9jf593dc3614e7cbb9@mail.gmail.com>
Message-ID: <4A9DC2D1.3010707@open-vote.org>

Austin English wrote:
> On Tue, Sep 1, 2009 at 2:52 PM, Scott Ritchie<scott at open-vote.org> wrote:
>> Marty Cannon wrote:
>>> Hey guys,
>>> Since the wine.budgetdedicated.com <http://wine.budgetdedicated.com>
>>> server was down all weekend, I thought I'd offer an additional mirror
>>> location. I currently mirror several major linux distributions, and
>>> would love to contribute to something as valuable to the community as
>>> the wine project is. My site currently runs around 3500GB per month, so
>>> a few hundred GB worth of transfer shouldn't make much difference.
>>> I've never set up an apt mirror, but with some instruction and googling,
>>> I bet I can do it. At the very least, I can mirror the package archive
>>> just incase the main site goes down. Let me know how I can help.
>>>
>>> -Marty Cannon
>>> amarillolinux.com <http://amarillolinux.com>
>>>
>>>
>> It should be up for good now, so this won't be necessary.
>>
>> Please note that the outage was my fault rather than budgetdedicated's
>> -- I had a cron script that kept chewing up memory without my realizing
>> it, eventually crashing apache.
>>
>> I've migrated everything now and it should be taken care of.
>>
>> Thanks,
>> Scott Ritchie
>>
>>
>>
> 
> Since when is a mirror a bad thing?
> 

It isn't, of course, however it can't replace the role of apt server
(which would require users to manually alter their sources.list file).

So mirror the archive page, sure, but it'll still be a big problem when
it's down.

Thanks,
Scott Ritchie


From scott at open-vote.org  Tue Sep  1 20:03:20 2009
From: scott at open-vote.org (Scott Ritchie)
Date: Tue, 01 Sep 2009 18:03:20 -0700
Subject: Mirror Space
In-Reply-To: <4A9DC284.3080603@kievinfo.com>
References: <a64cb0d90909010652r6d79595bs81b8f36f298f9f6c@mail.gmail.com>	<4A9D7B82.8090408@open-vote.org>
	<4A9DC284.3080603@kievinfo.com>
Message-ID: <4A9DC458.3080503@open-vote.org>

Vitaliy Margolen wrote:
> Scott Ritchie wrote:
>> Marty Cannon wrote:
>>> Hey guys,
>>> Since the wine.budgetdedicated.com <http://wine.budgetdedicated.com>
>>> server was down all weekend, I thought I'd offer an additional mirror
>>> location.
>> It should be up for good now, so this won't be necessary.
> Isn't  that what you said last time? <g>
> 
> That's why it's called a mirror not the primary distribution point. More
> mirrors - less load on one server, less chances we'll have lots of unhappy
> users because they can't get the best software in the world <g>
> 
> My understanding there isn't anything special about apt repository
> mirroring, they are just files & directories under some URI.
> 

It is, however smartly directing traffic between the two servers is a
problem.  If some requests go to one server and some to the other, then
they have to be in sync all the time (even a few minutes for rsync to
catch up will result in lots of scary "invalid signature" errors for
users).  This means you need a smart load balancing server at the front
end that knows when each mirror behind it is up or down and redirects
traffic accordingly.

I don't think it's worth bothering to set that up, as my medium term
plan is to migrate users to a real Launchpad PPA for Ubuntu 9.10.  In
9.10, it'll actually be much easier to add PPAs (and their unique key),
so I can cut the instructions on the download page dramatically.
Launchpad has that sophisticated mirroring infrastructure already.

Thanks,
Scott Ritchie


From shacklein at gmail.com  Tue Sep  1 20:22:48 2009
From: shacklein at gmail.com (Ben Klein)
Date: Wed, 2 Sep 2009 11:22:48 +1000
Subject: Mirror Space
In-Reply-To: <4A9DC2D1.3010707@open-vote.org>
References: <a64cb0d90909010652r6d79595bs81b8f36f298f9f6c@mail.gmail.com> 
	<4A9D7B82.8090408@open-vote.org>
	<b6bb06270909011550t7f1c06b9jf593dc3614e7cbb9@mail.gmail.com> 
	<4A9DC2D1.3010707@open-vote.org>
Message-ID: <d7e40be30909011822s67f520a7ub0f6135a457fe37a@mail.gmail.com>

2009/9/2 Scott Ritchie <scott at open-vote.org>:
> Austin English wrote:
>> Since when is a mirror a bad thing?
>>
>
> It isn't, of course, however it can't replace the role of apt server
> (which would require users to manually alter their sources.list file).

Just like how they have to alter their sources.list to get to
budgetdedicated in the first place? The point is that they have a
backup solution for when the main apt server is down.

Note that Debian mirrors are apt mirrors and are occasionally out of
sync - c'est la vie - and the installer actually asks you what mirror
you want to use so it can configure sources.list.

> So mirror the archive page, sure, but it'll still be a big problem when
> it's down.

Apt mirror is the way to go.


From scott at open-vote.org  Tue Sep  1 23:14:57 2009
From: scott at open-vote.org (Scott Ritchie)
Date: Tue, 01 Sep 2009 21:14:57 -0700
Subject: Mirror Space
In-Reply-To: <d7e40be30909011822s67f520a7ub0f6135a457fe37a@mail.gmail.com>
References: <a64cb0d90909010652r6d79595bs81b8f36f298f9f6c@mail.gmail.com>
	<4A9D7B82.8090408@open-vote.org>
	<b6bb06270909011550t7f1c06b9jf593dc3614e7cbb9@mail.gmail.com>
	<4A9DC2D1.3010707@open-vote.org>
	<d7e40be30909011822s67f520a7ub0f6135a457fe37a@mail.gmail.com>
Message-ID: <4A9DF141.8050404@open-vote.org>

Ben Klein wrote:
> 2009/9/2 Scott Ritchie <scott at open-vote.org>:
>> Austin English wrote:
>>> Since when is a mirror a bad thing?
>>>
>> It isn't, of course, however it can't replace the role of apt server
>> (which would require users to manually alter their sources.list file).
> 
> Just like how they have to alter their sources.list to get to
> budgetdedicated in the first place? The point is that they have a
> backup solution for when the main apt server is down.
> 
> Note that Debian mirrors are apt mirrors and are occasionally out of
> sync - c'est la vie - and the installer actually asks you what mirror
> you want to use so it can configure sources.list.
> 

The budgetdedicated actually was mirrored for a while (using nslookup
round-robin redirection) and it created a bunch of problems.

It's more reliable to just have a mirror of the archive page and let
people install manually in the case that it's offline, since I seriously
don't expect another outage like this again.  Then the manual install
will be updated automagically on the next release when the server comes
back up.

It was only offline for the whole weekend because I was physically out
of town away from the internet and genuinely unaware of it.  I should
probably give someone my phone number so they can text me if needed.


Thanks,
Scott Ritchie


From shacklein at gmail.com  Tue Sep  1 23:18:56 2009
From: shacklein at gmail.com (Ben Klein)
Date: Wed, 2 Sep 2009 14:18:56 +1000
Subject: Mirror Space
In-Reply-To: <4A9DF141.8050404@open-vote.org>
References: <a64cb0d90909010652r6d79595bs81b8f36f298f9f6c@mail.gmail.com> 
	<4A9D7B82.8090408@open-vote.org>
	<b6bb06270909011550t7f1c06b9jf593dc3614e7cbb9@mail.gmail.com> 
	<4A9DC2D1.3010707@open-vote.org>
	<d7e40be30909011822s67f520a7ub0f6135a457fe37a@mail.gmail.com> 
	<4A9DF141.8050404@open-vote.org>
Message-ID: <d7e40be30909012118g3fcfc541lf155e072dd569af5@mail.gmail.com>

2009/9/2 Scott Ritchie <scott at open-vote.org>:
> Ben Klein wrote:
>> 2009/9/2 Scott Ritchie <scott at open-vote.org>:
>>> Austin English wrote:
>>>> Since when is a mirror a bad thing?
>>>>
>>> It isn't, of course, however it can't replace the role of apt server
>>> (which would require users to manually alter their sources.list file).
>>
>> Just like how they have to alter their sources.list to get to
>> budgetdedicated in the first place? The point is that they have a
>> backup solution for when the main apt server is down.
>>
>> Note that Debian mirrors are apt mirrors and are occasionally out of
>> sync - c'est la vie - and the installer actually asks you what mirror
>> you want to use so it can configure sources.list.
>>
>
> The budgetdedicated actually was mirrored for a while (using nslookup
> round-robin redirection) and it created a bunch of problems.

So don't do nslookup round-robin redirection. It's silly for mirrors.
The point of a mirror is you have a completely distinct server
somewhere else that provides the same data, thus creating data
security. If the main server is down, the mirror can be accessed - but
yes, it has to be explicitly accessed (by a modified sources.list in
an apt mirror).

> It's more reliable to just have a mirror of the archive page and let
> people install manually in the case that it's offline, since I seriously
> don't expect another outage like this again. ?Then the manual install
> will be updated automagically on the next release when the server comes
> back up.

You don't need to tell me about versioning in apt :P but it won't be
more reliable to mirror only the archives and not the apt server. If
you mirror the full apt repository, then you get load sharing. If you
only mirror the archives, then the mirror is only used by people who
know and can be bothered to install manually.

> It was only offline for the whole weekend because I was physically out
> of town away from the internet and genuinely unaware of it. ?I should
> probably give someone my phone number so they can text me if needed.

I don't mean to offend, but you seem a bit possessive about the apt repository.


From scott at open-vote.org  Wed Sep  2 00:25:10 2009
From: scott at open-vote.org (Scott Ritchie)
Date: Tue, 01 Sep 2009 22:25:10 -0700
Subject: Mirror Space
In-Reply-To: <d7e40be30909012118g3fcfc541lf155e072dd569af5@mail.gmail.com>
References: <a64cb0d90909010652r6d79595bs81b8f36f298f9f6c@mail.gmail.com>
	<4A9D7B82.8090408@open-vote.org>
	<b6bb06270909011550t7f1c06b9jf593dc3614e7cbb9@mail.gmail.com>
	<4A9DC2D1.3010707@open-vote.org>
	<d7e40be30909011822s67f520a7ub0f6135a457fe37a@mail.gmail.com>
	<4A9DF141.8050404@open-vote.org>
	<d7e40be30909012118g3fcfc541lf155e072dd569af5@mail.gmail.com>
Message-ID: <4A9E01B6.1020702@open-vote.org>

Ben Klein wrote:
> 2009/9/2 Scott Ritchie <scott at open-vote.org>:
>> Ben Klein wrote:
>>> 2009/9/2 Scott Ritchie <scott at open-vote.org>:
>>>> Austin English wrote:
>>>>> Since when is a mirror a bad thing?
>>>>>
>>>> It isn't, of course, however it can't replace the role of apt server
>>>> (which would require users to manually alter their sources.list file).
>>> Just like how they have to alter their sources.list to get to
>>> budgetdedicated in the first place? The point is that they have a
>>> backup solution for when the main apt server is down.
>>>
>>> Note that Debian mirrors are apt mirrors and are occasionally out of
>>> sync - c'est la vie - and the installer actually asks you what mirror
>>> you want to use so it can configure sources.list.
>>>
>> The budgetdedicated actually was mirrored for a while (using nslookup
>> round-robin redirection) and it created a bunch of problems.
> 
> So don't do nslookup round-robin redirection. It's silly for mirrors.
> The point of a mirror is you have a completely distinct server
> somewhere else that provides the same data, thus creating data
> security. If the main server is down, the mirror can be accessed - but
> yes, it has to be explicitly accessed (by a modified sources.list in
> an apt mirror).
> 

I do keep a local mirror of all the content, and as of now I actually
have two separate budgetdedicated servers hosting the data
(wine.budgetdedicated.com and wineold.budgetdedicated.com).  More
doesn't hurt, of course.

>> It's more reliable to just have a mirror of the archive page and let
>> people install manually in the case that it's offline, since I seriously
>> don't expect another outage like this again.  Then the manual install
>> will be updated automagically on the next release when the server comes
>> back up.
> 
> You don't need to tell me about versioning in apt :P but it won't be
> more reliable to mirror only the archives and not the apt server. If
> you mirror the full apt repository, then you get load sharing. If you
> only mirror the archives, then the mirror is only used by people who
> know and can be bothered to install manually.
> 

Sure, it doesn't hurt to mirror the apt archive too, but I'm not sure
how much actual load balancing is going to happen at this point since it
will require a manual change on each user.  Once Karmic comes out in 2
months, new users will be pointed to the PPA instead.  I could also
point Jaunty and earlier users there as well, albeit with longer
instructions.

>> It was only offline for the whole weekend because I was physically out
>> of town away from the internet and genuinely unaware of it.  I should
>> probably give someone my phone number so they can text me if needed.
> 
> I don't mean to offend, but you seem a bit possessive about the apt repository.

I want to phase it out and get rid of it.  Funny kind of possessiveness ;)

Thanks,
Scott Ritchie


From celticht32 at yahoo.com  Wed Sep  2 01:17:14 2009
From: celticht32 at yahoo.com (chris ahrendt)
Date: Tue, 1 Sep 2009 23:17:14 -0700 (PDT)
Subject: cpp check run monday Aug 31
In-Reply-To: <ced95fe0909010630g5af452beo2da2f7233f327447@mail.gmail.com>
References: <178402.74458.qm@web112616.mail.gq1.yahoo.com>
	<ced95fe0909010630g5af452beo2da2f7233f327447@mail.gmail.com>
Message-ID: <196879.496.qm@web112611.mail.gq1.yahoo.com>

ok will report a false positive thanks

chris



----- Original Message ----
From: Vincent Povirk <madewokherd+8cd9 at gmail.com>
To: chris ahrendt <celticht32 at yahoo.com>
Cc: wine-devel at winehq.org
Sent: Tuesday, September 1, 2009 9:30:46 AM
Subject: Re: cpp check run monday Aug 31

> [/home/cahrendt/wine-git/dlls/windowscodecs/bmpencode.c:336]: (error)
> Division by zero
> [/home/cahrendt/wine-git/dlls/windowscodecs/bmpencode.c:337]: (error)
> Division by zero

http://source.winehq.org/git/wine.git/?a=blob;f=dlls/windowscodecs/bmpencode.c;h=11c39e898675122eb24df6a3a0ba9a911c95e3d0;hb=HEAD#l336

I'm going to need someone to explain to me how a division by a literal
0.0254 can be a "Division by zero".

-- 
Vincent Povirk



      


From dgerard at gmail.com  Wed Sep  2 04:02:27 2009
From: dgerard at gmail.com (David Gerard)
Date: Wed, 2 Sep 2009 10:02:27 +0100
Subject: Mirror Space
In-Reply-To: <4A9DC458.3080503@open-vote.org>
References: <a64cb0d90909010652r6d79595bs81b8f36f298f9f6c@mail.gmail.com>
	<4A9D7B82.8090408@open-vote.org> <4A9DC284.3080603@kievinfo.com>
	<4A9DC458.3080503@open-vote.org>
Message-ID: <fbad4e140909020202x1a70d28du5068536968082a65@mail.gmail.com>

2009/9/2 Scott Ritchie <scott at open-vote.org>:

> I don't think it's worth bothering to set that up, as my medium term
> plan is to migrate users to a real Launchpad PPA for Ubuntu 9.10. ?In
> 9.10, it'll actually be much easier to add PPAs (and their unique key),
> so I can cut the instructions on the download page dramatically.
> Launchpad has that sophisticated mirroring infrastructure already.


Oh yes,that's the obvious answer :-) I assume you'll still be putting
Debian builds on wine.budgetdedicated.com? (Or can Debian feed from an
Ubuntu PPA as well?)


- d.


From shacklein at gmail.com  Wed Sep  2 04:23:07 2009
From: shacklein at gmail.com (Ben Klein)
Date: Wed, 2 Sep 2009 19:23:07 +1000
Subject: Mirror Space
In-Reply-To: <fbad4e140909020202x1a70d28du5068536968082a65@mail.gmail.com>
References: <a64cb0d90909010652r6d79595bs81b8f36f298f9f6c@mail.gmail.com> 
	<4A9D7B82.8090408@open-vote.org> <4A9DC284.3080603@kievinfo.com> 
	<4A9DC458.3080503@open-vote.org>
	<fbad4e140909020202x1a70d28du5068536968082a65@mail.gmail.com>
Message-ID: <d7e40be30909020223l416f4f0cqdf00526df84753f0@mail.gmail.com>

2009/9/2 David Gerard <dgerard at gmail.com>:
> 2009/9/2 Scott Ritchie <scott at open-vote.org>:
>
>> I don't think it's worth bothering to set that up, as my medium term
>> plan is to migrate users to a real Launchpad PPA for Ubuntu 9.10. ?In
>> 9.10, it'll actually be much easier to add PPAs (and their unique key),
>> so I can cut the instructions on the download page dramatically.
>> Launchpad has that sophisticated mirroring infrastructure already.
>
>
> Oh yes,that's the obvious answer :-) I assume you'll still be putting
> Debian builds on wine.budgetdedicated.com? (Or can Debian feed from an
> Ubuntu PPA as well?)

Scott's not doing the Debian packages any more; that's my job (with
Maurilio providing the space for the repository and archives). I'd
welcome a Debian package apt mirror, but I don't think Debian likes
PPA.


From julliard at winehq.org  Wed Sep  2 04:39:28 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 02 Sep 2009 11:39:28 +0200
Subject: [PATCH 1/3] jscript: Added to_primitive on hosting objects test.
In-Reply-To: <4A9DA9B4.9040805@codeweavers.com> (Jacek Caban's message of
	"Wed, 02 Sep 2009 01:09:40 +0200")
References: <4A9DA9B4.9040805@codeweavers.com>
Message-ID: <87eiqp1y9b.fsf@wine.dyndns.org>

Jacek Caban <jacek at codeweavers.com> writes:

> ---
>  dlls/jscript/tests/run.c |   32 ++++++++++++++++++++++++++++----
>  1 files changed, 28 insertions(+), 4 deletions(-)

It doesn't work here:

../../../tools/runtest -q -P wine -M jscript.dll -T ../../.. -p jscript_test.exe.so run.c && touch run.ok
run.c:216: Test failed: V_VT(pvarRes) = 63784
make[2]: *** [run.ok] Error 1

-- 
Alexandre Julliard
julliard at winehq.org


From stefandoesinger at gmx.at  Wed Sep  2 07:56:48 2009
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Wed, 2 Sep 2009 14:56:48 +0200
Subject: [PATCH 5/5] wined3d: Print a warning when an ARB program exceeds
	the native resource limits.
In-Reply-To: <1251876478-31214-5-git-send-email-hverbeet@codeweavers.com>
References: <1251876478-31214-5-git-send-email-hverbeet@codeweavers.com>
Message-ID: <200909021456.48477.stefandoesinger@gmx.at>

Am Wednesday 02 September 2009 09:27:58 schrieb Henri Verbeet:
> +        GL_EXTCALL(glGetProgramivARB(GL_FRAGMENT_PROGRAM_ARB,
> GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB, &native)); +       
> checkGLcall("glGetProgramivARB()");
> +        if (!native) WARN("Program exceeds native resource limits.\n");
> +    }
shouldn't that be a FIXME? The most likely reasons for this are either that we 
advertise incorrect caps, or our privately added code breaks the limits, or 
that the driver is broken. In the first two cases we can do something, and in 
the other case we might want to report the issue to the driver devs

That said, I haven't seen a GL implementation yet that successfully compiles 
and SW-emulates a program that exceeds the limits.


From hverbeet at gmail.com  Wed Sep  2 08:07:42 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Wed, 2 Sep 2009 15:07:42 +0200
Subject: [PATCH 5/5] wined3d: Print a warning when an ARB program exceeds 
	the native resource limits.
In-Reply-To: <200909021456.48477.stefandoesinger@gmx.at>
References: <1251876478-31214-5-git-send-email-hverbeet@codeweavers.com>
	<200909021456.48477.stefandoesinger@gmx.at>
Message-ID: <d658b69e0909020607h74dd4a76oeba58bfb20bcb1e3@mail.gmail.com>

2009/9/2 Stefan D?singer <stefandoesinger at gmx.at>:
> Am Wednesday 02 September 2009 09:27:58 schrieb Henri Verbeet:
>> + ? ? ? ?GL_EXTCALL(glGetProgramivARB(GL_FRAGMENT_PROGRAM_ARB,
>> GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB, &native)); +
>> checkGLcall("glGetProgramivARB()");
>> + ? ? ? ?if (!native) WARN("Program exceeds native resource limits.\n");
>> + ? ?}
> shouldn't that be a FIXME? The most likely reasons for this are either that we
> advertise incorrect caps, or our privately added code breaks the limits, or
> that the driver is broken. In the first two cases we can do something, and in
> the other case we might want to report the issue to the driver devs
>
> That said, I haven't seen a GL implementation yet that successfully compiles
> and SW-emulates a program that exceeds the limits.
>
It isn't necessarily a problem when this happens, it's more meant as a
diagnostic while debugging.


From madewokherd+8cd9 at gmail.com  Wed Sep  2 09:22:20 2009
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Wed, 2 Sep 2009 09:22:20 -0500
Subject: gdiplus/tests: Fix test on Win7
In-Reply-To: <54170.194.109.161.161.1251886614.squirrel@webmail.geldorp.nl>
References: <54170.194.109.161.161.1251886614.squirrel@webmail.geldorp.nl>
Message-ID: <ced95fe0909020722w3da9dad8ud75f6fe41d69d0e6@mail.gmail.com>

-    gdiplusStartupInput.GdiplusVersion = 2;
+    gdiplusStartupInput.GdiplusVersion = 42;

Could you please test the intermediate versions to determine what's
supported? You could use a loop to determine the highest supported
version (making sure the return is UnsupportedGdiplusVersion if it's
not Ok) followed by a test that the highest supported version is
between 1 and some constant.

In fact, knowing the supported version would be helpful in any case,
and it would be nice to have a trace() printing it.

On Wed, Sep 2, 2009 at 5:16 AM, Ge van Geldorp<ggeldorp at vmware.com> wrote:
> Changelog:
> ?gdiplus/tests: Fix test on Win7
>
> ---
> ?dlls/gdiplus/tests/pen.c | ? ?5 +++--
> ?1 files changed, 3 insertions(+), 2 deletions(-)
>
>
>
>
>
>
>



-- 
Vincent Povirk


From madewokherd+8cd9 at gmail.com  Wed Sep  2 09:32:23 2009
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Wed, 2 Sep 2009 09:32:23 -0500
Subject: gdiplus/tests: Fix test on Win7
In-Reply-To: <ced95fe0909020722w3da9dad8ud75f6fe41d69d0e6@mail.gmail.com>
References: <54170.194.109.161.161.1251886614.squirrel@webmail.geldorp.nl>
	<ced95fe0909020722w3da9dad8ud75f6fe41d69d0e6@mail.gmail.com>
Message-ID: <ced95fe0909020732p4068b65fq30bc391bb2814ef8@mail.gmail.com>

Eh never mind, I'll do it.

On Wed, Sep 2, 2009 at 9:22 AM, Vincent
Povirk<madewokherd+8cd9 at gmail.com> wrote:
> - ? ?gdiplusStartupInput.GdiplusVersion = 2;
> + ? ?gdiplusStartupInput.GdiplusVersion = 42;
>
> Could you please test the intermediate versions to determine what's
> supported? You could use a loop to determine the highest supported
> version (making sure the return is UnsupportedGdiplusVersion if it's
> not Ok) followed by a test that the highest supported version is
> between 1 and some constant.
>
> In fact, knowing the supported version would be helpful in any case,
> and it would be nice to have a trace() printing it.
>
> On Wed, Sep 2, 2009 at 5:16 AM, Ge van Geldorp<ggeldorp at vmware.com> wrote:
>> Changelog:
>> ?gdiplus/tests: Fix test on Win7
>>
>> ---
>> ?dlls/gdiplus/tests/pen.c | ? ?5 +++--
>> ?1 files changed, 3 insertions(+), 2 deletions(-)
>>
>>
>>
>>
>>
>>
>>
>
>
>
> --
> Vincent Povirk
>



-- 
Vincent Povirk


From stefandoesinger at gmx.at  Wed Sep  2 11:25:03 2009
From: stefandoesinger at gmx.at (Stefan =?utf-8?q?D=C3=B6singer?=)
Date: Wed, 2 Sep 2009 18:25:03 +0200
Subject: [PATCH 5/5] wined3d: Print a warning when an ARB program exceeds
	the native resource limits.
In-Reply-To: <d658b69e0909020607h74dd4a76oeba58bfb20bcb1e3@mail.gmail.com>
References: <1251876478-31214-5-git-send-email-hverbeet@codeweavers.com>
	<200909021456.48477.stefandoesinger@gmx.at>
	<d658b69e0909020607h74dd4a76oeba58bfb20bcb1e3@mail.gmail.com>
Message-ID: <200909021825.03917.stefandoesinger@gmx.at>

Am Wednesday 02 September 2009 15:07:42 schrieb Henri Verbeet:
> > That said, I haven't seen a GL implementation yet that successfully
> > compiles and SW-emulates a program that exceeds the limits.
>
> It isn't necessarily a problem when this happens, it's more meant as a
> diagnostic while debugging.
Well, its most likely going to bring performance down to unplayable levels, 
but using it just as diagnostics is fine with me


From khodych at gmail.com  Wed Sep  2 12:34:22 2009
From: khodych at gmail.com (Sergey Khodych)
Date: Wed, 02 Sep 2009 20:34:22 +0300
Subject: [1/3] riched20: Implement handling of WM_KEYDOWN VK_RETURN in
	a 	dialog mode.
In-Reply-To: <5c6ee3b70909010533j64092cfbp37cf0a984f75dbe@mail.gmail.com>
References: <4A9CD8D3.5010701@gmail.com>
	<5c6ee3b70909010533j64092cfbp37cf0a984f75dbe@mail.gmail.com>
Message-ID: <4A9EAC9E.7070202@gmail.com>


> 1. editor->hWnd may be NULL for windowless richedit controls, but you
> code doesn't seem to take that into consideration.
> 2. The style flags that you get from GetWindowLongW should probably
> come from the cached values in editor->styleFlags.
The main reason why GetWindowLongW is used there is that 
editor->styleFlags actually isn't window style and doesn't contain 
ES_WANTRETURN. What's the proper way to get actually window style in 
this case?


From dylan.ah.smith at gmail.com  Wed Sep  2 13:16:24 2009
From: dylan.ah.smith at gmail.com (Dylan Smith)
Date: Wed, 2 Sep 2009 14:16:24 -0400
Subject: [1/3] riched20: Implement handling of WM_KEYDOWN VK_RETURN in a 
	dialog mode.
In-Reply-To: <4A9EAC9E.7070202@gmail.com>
References: <4A9CD8D3.5010701@gmail.com>
	<5c6ee3b70909010533j64092cfbp37cf0a984f75dbe@mail.gmail.com> 
	<4A9EAC9E.7070202@gmail.com>
Message-ID: <5c6ee3b70909021116w5fe5c7cxd32d992bcdcea881@mail.gmail.com>

On Wed, Sep 2, 2009 at 1:34 PM, Sergey Khodych<khodych at gmail.com> wrote:
>
>> 1. editor->hWnd may be NULL for windowless richedit controls, but you
>> code doesn't seem to take that into consideration.
>> 2. The style flags that you get from GetWindowLongW should probably
>> come from the cached values in editor->styleFlags.
>
> The main reason why GetWindowLongW is used there is that editor->styleFlags
> actually isn't window style and doesn't contain ES_WANTRETURN. What's the
> proper way to get actually window style in this case?
>

editor->styleFlags should cache any window styles that are needed on
window creation, but it seems ES_WANTRETURN was missed because it
wasn't used and there was not ITextHost property to associate it with.
 This can be handled where the extended styles are obtained as shown
in the following diff.  I tested and made sure the ES_WANTRETURN style
does get cached by native richedit by trying to change it with
SetWindowLong, so this is necessary.

diff --git a/dlls/riched20/txthost.c b/dlls/riched20/txthost.c
index ddf3d76..d3a7330 100644
--- a/dlls/riched20/txthost.c
+++ b/dlls/riched20/txthost.c
@@ -58,6 +58,7 @@ ITextHost *ME_CreateTextHost(HWND hwnd, BOOL
bEmulateVersion10)
         texthost->bEmulateVersion10 = bEmulateVersion10;

         editor = ME_MakeEditor((ITextHost*)texthost, bEmulateVersion10);
+        editor->styleFlags |= GetWindowLongW(hwnd, GWL_STYLE) & ES_WANTRETURN;
         editor->exStyleFlags = GetWindowLongW(hwnd, GWL_EXSTYLE);
         editor->hWnd = hwnd; /* FIXME: Remove editor's dependence on hWnd */
         SetWindowLongPtrW(hwnd, 0, (LONG_PTR)editor);


From fenixk19 at mail.ru  Wed Sep  2 18:31:44 2009
From: fenixk19 at mail.ru (Fenixk19)
Date: Thu, 03 Sep 2009 03:31:44 +0400
Subject: Asynchronus serial port
Message-ID: <4A9F0060.6080805@mail.ru>

Hello! I've already post the
bug(http://bugs.winehq.org/show_bug.cgi?id=19713) on this subject, but i
need more help. So I've decided to write here.
There is a problem in wine. When I use asynchronous serial port read, 
data never comes. Event, caused by select comes. But operation status
stays pending, and i can't do anything to this serial port anymore. In
windows it never get pending, and port can be accessed just after data
arrival. Seems to be wineserver problem, but i don't know, where to look
at. What code respond for asynchronous serial port in wineserver?
Alexander.
P.S. Test program attached.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: main.cpp
Type: text/x-c++src
Size: 2744 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090903/697b5d37/attachment.cpp>

From razielmine at gmail.com  Wed Sep  2 20:15:56 2009
From: razielmine at gmail.com (=?UTF-8?Q?Ismael_Barros=C2=B2?=)
Date: Thu, 3 Sep 2009 03:15:56 +0200
Subject: Wine t-shirts?
In-Reply-To: <82e274890908041445t72c5043ar94a876880ec61db3@mail.gmail.com>
References: <a71bd89a0804230443w3240caf7v46108219330713af@mail.gmail.com>
	<f5d9424f0812161601wc8b2bk4919aa9cb2fd22d3@mail.gmail.com>
	<82e274890812161614w642857ccideaedcfe68719e4e@mail.gmail.com>
	<b594ca9d0812170341u44bc2cb8u382dc5064cae13e0@mail.gmail.com>
	<36a11a3a0812170645u3b28eb8fl41c1c30e1e67435e@mail.gmail.com>
	<82e274890812170717k5d5be440m4a4b629c27b58cb7@mail.gmail.com>
	<b594ca9d0812170749k218ac8a8lc0c3e4bab8e4e219@mail.gmail.com>
	<82e274890812171501r59cc6282o8efb1d650358618e@mail.gmail.com>
	<82e274890812231756p7dca3ec0x7b48005dd65a5145@mail.gmail.com>
	<82e274890908041445t72c5043ar94a876880ec61db3@mail.gmail.com>
Message-ID: <82e274890909021815h49db4bb4gf2b7e392db692c0@mail.gmail.com>

Hi there,

The T-shirt is finally on sale. We waited to have the Valgrind T-shirt
ready to release both at the same time, as I guess many Wine lovers
may also be Valgrind lovers.

Direct link: http://www.freewear.org/?page=show_item&id=FW0030

If we have resources we'll try to upgrade our Wine catalog soon with
other style of designs, stay tunned.

Cheers,
Ismael

On Tue, Aug 4, 2009 at 11:45 PM, Ismael Barros?<razielmine at gmail.com> wrote:
> Hi there,
>
> Sorry for the huge delay, our artist has been quite busy. We finally
> got the last design iteration:
>
> http://www.freewear.org/images/release_candidates/Wine_final.png
>
> The only difference between versions A and B is in the eyes. Let us
> know which one you like better, and any kind of comment or suggestion
> is welcomed. After the design is approved, in one week we make have
> the T-shirt available in the store.
>
> Cheers,
> Ismael
>


From mike.kaplinskiy at gmail.com  Wed Sep  2 20:55:53 2009
From: mike.kaplinskiy at gmail.com (Mike Kaplinskiy)
Date: Wed, 2 Sep 2009 21:55:53 -0400
Subject: Asynchronus serial port
In-Reply-To: <4A9F0060.6080805@mail.ru>
References: <4A9F0060.6080805@mail.ru>
Message-ID: <4d8b5aa80909021855t10aca983o4c96dcae7dbfeb2e@mail.gmail.com>

On Wed, Sep 2, 2009 at 7:31 PM, Fenixk19<fenixk19 at mail.ru> wrote:
> Hello! I've already post the
> bug(http://bugs.winehq.org/show_bug.cgi?id=19713) on this subject, but i
> need more help. So I've decided to write here.
> There is a problem in wine. When I use asynchronous serial port read,
> data never comes. Event, caused by select comes. But operation status
> stays pending, and i can't do anything to this serial port anymore. In
> windows it never get pending, and port can be accessed just after data
> arrival. Seems to be wineserver problem, but i don't know, where to look
> at. What code respond for asynchronous serial port in wineserver?
> Alexander.
> P.S. Test program attached.
>
>
>
>

Hi,

Alexandre would be the guy to talk to about wineserver-related things.
Sadly he's off on a long weekend. Does the attached patch help solve
the problem?

Mike.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: patch.diff
Type: text/x-patch
Size: 1677 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090902/0c400390/attachment.bin>

From dank at kegel.com  Wed Sep  2 23:36:03 2009
From: dank at kegel.com (Dan Kegel)
Date: Wed, 2 Sep 2009 21:36:03 -0700
Subject: New winetricks 20090902: new verbs vc2005trial, python26
Message-ID: <a71bd89a0909022136w252a8e7ew73cd223dea9c6963@mail.gmail.com>

Another week, another winetricks.

The only interesting changes are new verbs vc2005trial and python26.
These are only of interest to developers.

vc2005trial is the 180 day Team Server edition of Visual C++ 2005.
The winetricks verb for this is a bit odd - it prompts you for
your password so it can mount the volume before installation.
If you have a better idea, please let me know.
I haven't done a KDE version of the prompt; patches welcome.
I also haven't implemented -q for this; it's hard to figure out, even
with hints (see the comments).  If anyone wants to tackle it,
be my guest, I'd love to have unattended install working.

The python26 verb includes pywin32, since that was needed
by the script I was trying to run (the gyp self-test).
Most people will just use Linux python, but when you're
running a win32-specific python script, the windows python
interpreter comes in pretty handy.

Online as always at
http://kegel.com/wine/winetricks
or
http://winezeug.googlecode.com
(Bug reports to the issue tracker at the above URL, please.)

Thanks to Austin English for various patches and assistance.


From dank at kegel.com  Wed Sep  2 23:48:08 2009
From: dank at kegel.com (Dan Kegel)
Date: Wed, 2 Sep 2009 21:48:08 -0700
Subject: New winetricks 20090902: new verbs vc2005trial, python26
In-Reply-To: <a71bd89a0909022136w252a8e7ew73cd223dea9c6963@mail.gmail.com>
References: <a71bd89a0909022136w252a8e7ew73cd223dea9c6963@mail.gmail.com>
Message-ID: <a71bd89a0909022148i76747ca2s6e191542b825e3a3@mail.gmail.com>

On Wed, Sep 2, 2009 at 9:36 PM, Dan Kegel<dank at kegel.com> wrote:
> Another week, another winetricks.
>
> The only interesting changes are new verbs vc2005trial and python26.

I lied -- there's one more interesting change.
More verbs with prerequisites are now smart,
and won't waste time installing already-installed prerequisites.
(The vc2005trial verb had three prerequisites, and
it was driving me nuts while testing.)


From wine-devel at kievinfo.com  Thu Sep  3 00:13:36 2009
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Wed, 02 Sep 2009 23:13:36 -0600
Subject: New winetricks 20090902: new verbs vc2005trial, python26
In-Reply-To: <a71bd89a0909022136w252a8e7ew73cd223dea9c6963@mail.gmail.com>
References: <a71bd89a0909022136w252a8e7ew73cd223dea9c6963@mail.gmail.com>
Message-ID: <4A9F5080.60600@kievinfo.com>

Dan Kegel wrote:
> vc2005trial is the 180 day Team Server edition of Visual C++ 2005.
> The winetricks verb for this is a bit odd - it prompts you for
> your password so it can mount the volume before installation.
> If you have a better idea, please let me know.
You can use fuseiso/fusermount to mount/umount iso images.

Vitaliy.


From dank at kegel.com  Thu Sep  3 09:26:39 2009
From: dank at kegel.com (Dan Kegel)
Date: Thu, 3 Sep 2009 07:26:39 -0700
Subject: New winetricks 20090902: new verbs vc2005trial, python26
In-Reply-To: <4A9F5080.60600@kievinfo.com>
References: <a71bd89a0909022136w252a8e7ew73cd223dea9c6963@mail.gmail.com>
	<4A9F5080.60600@kievinfo.com>
Message-ID: <a71bd89a0909030726k2be3fb0ek30e23215adff864f@mail.gmail.com>

On Wed, Sep 2, 2009 at 10:13 PM, Vitaliy
Margolen<wine-devel at kievinfo.com> wrote:
> You can use fuseiso/fusermount to mount/umount iso images.

Good point, but it looks like that doesn't work out of the
box on Jaunty; the user would have to configure it first.
So I'll probably stick with the dumb/risky approach for now.


From razielmine at gmail.com  Fri Sep  4 04:26:49 2009
From: razielmine at gmail.com (=?UTF-8?Q?Ismael_Barros=C2=B2?=)
Date: Fri, 4 Sep 2009 11:26:49 +0200
Subject: [PATCH 2/7] dpwsockx: Implementation of SPInit
In-Reply-To: <d658b69e0909010328i4da91414ycf8337de0a0153a8@mail.gmail.com>
References: <1251762652-7224-1-git-send-email-razielmine@gmail.com>
	<1251762652-7224-2-git-send-email-razielmine@gmail.com>
	<d658b69e0909010200x31208614lfad6a7d2ee8c0d95@mail.gmail.com>
	<82e274890909010321q750aedd3ga77f8ca644f6ebbe@mail.gmail.com>
	<d658b69e0909010328i4da91414ycf8337de0a0153a8@mail.gmail.com>
Message-ID: <82e274890909040226x1306ee57s242720b9c8744903@mail.gmail.com>

On Tue, Sep 1, 2009 at 12:43 PM, Henri Verbeet<hverbeet at gmail.com> wrote:
> 2009/9/1 Ismael Barros? <razielmine at gmail.com>:
>> Is there any standard way to deal with this cases? Any example in the codebase?
>>
> For packing, look for "#include <pshpack1.h>" and "#include
> <poppack.h>" in some of the headers. For byte ordering look at how
> htonl etc. are defined in include/winsock.h, but you'll want the
> opposite since the data uses x86 byte ordering.
>

I've been looking into iphlpapi/ip.h (just learned bit fields
exist...); would this implementation be fine?

#include "pshpack1.h"

typedef struct tagDPSP_MSG_HEADER
{
#ifdef WORDS_BIGENDIAN
    DWORD size:20;
    DWORD token:12;
#else
    DWORD token:12;
    DWORD size:20;
#endif
    SOCKADDR_IN SockAddr;
} DPSP_MSG_HEADER, *LPDPSP_MSG_HEADER;
typedef const DPSP_MSG_HEADER* LPCDPSP_MSG_HEADER;

/* DPSP_MSG_HEADER->token */
#define DPSP_MSG_TOKEN_REMOTE    0xFAB
#define DPSP_MSG_TOKEN_FORWARDED 0xCAB
#define DPSP_MSG_TOKEN_SERVER    0xBAB

#include "poppack.h"


From hverbeet at gmail.com  Fri Sep  4 05:12:01 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 4 Sep 2009 12:12:01 +0200
Subject: [PATCH 2/7] dpwsockx: Implementation of SPInit
In-Reply-To: <82e274890909040226x1306ee57s242720b9c8744903@mail.gmail.com>
References: <1251762652-7224-1-git-send-email-razielmine@gmail.com>
	<1251762652-7224-2-git-send-email-razielmine@gmail.com>
	<d658b69e0909010200x31208614lfad6a7d2ee8c0d95@mail.gmail.com>
	<82e274890909010321q750aedd3ga77f8ca644f6ebbe@mail.gmail.com>
	<d658b69e0909010328i4da91414ycf8337de0a0153a8@mail.gmail.com>
	<82e274890909040226x1306ee57s242720b9c8744903@mail.gmail.com>
Message-ID: <d658b69e0909040312s4476ac45j1a0fc49ea9da014a@mail.gmail.com>

2009/9/4 Ismael Barros? <razielmine at gmail.com>:
> I've been looking into iphlpapi/ip.h (just learned bit fields
> exist...); would this implementation be fine?
>
> #include "pshpack1.h"
>
> typedef struct tagDPSP_MSG_HEADER
> {
> #ifdef WORDS_BIGENDIAN
> ? ?DWORD size:20;
> ? ?DWORD token:12;
> #else
> ? ?DWORD token:12;
> ? ?DWORD size:20;
> #endif
> ? ?SOCKADDR_IN SockAddr;
> } DPSP_MSG_HEADER, *LPDPSP_MSG_HEADER;

Probably not. I'm not sure iphlpapi/ip.h does things right in the
first place, it seems to confuse bitfield ordering with machine byte
ordering. As a general rule, I think it's best to avoid bitfields for
things like writing data to a file or sending data over the network,
it's just a pain. Aside from that, using the bitfields in this way
messes with the bit ordering, but doesn't change the byte order. For
the bitfields in iphlpapi/ip.h that's not an issue because they fit in
a single byte. Just store the data in a DWORD with the appropriate
masks and shifts, and byte swap that DWORD when reading/writing it.


From scriptkid at mail.ru  Tue Sep  1 12:20:17 2009
From: scriptkid at mail.ru (Vladimir Pankratov)
Date: Tue, 01 Sep 2009 22:20:17 +0500
Subject: urlmon: Add test for IsValidURL [try 2]
In-Reply-To: <4A9D277C.8030109@mail.ru>
References: <4A9D277C.8030109@mail.ru>
Message-ID: <4A9D57D1.9000102@mail.ru>

Hello all.

What do you think about this? What's wrong in this patch? Any comments?

Vladimir Pankratov wrote:
> Hello all.
> 
> Added test for IsValidURL.
> 
> Now test shows error codes and tests exact code.
> 
> Thanks Jacek.
> 
> changed files:
> dlls/urlmon/tests/misc.c
> 
> Thanks.
> 
> 
> 
> 
> ------------------------------------------------------------------------
> 
> diff -u -r a/dlls/urlmon/tests/misc.c b/dlls/urlmon/tests/misc.c
> --- a/dlls/urlmon/tests/misc.c	2009-08-21 23:34:16.000000000 +0500
> +++ b/dlls/urlmon/tests/misc.c	2009-09-01 18:53:08.000000000 +0500
> @@ -1326,6 +1326,44 @@
>      IBindCtx_Release(bctx);
>  }
>  
> +static void test_IsValidURL(void)
> +{
> +    HRESULT hr;
> +    int i;
> +    static const WCHAR good_urls[][100] = {
> +        {'f','i','l','e',':','/','/','c',':','\\','b','o','o','t','.','i','n','i',0},
> +        {'h','t','t','p',':','/','/','w','w','w','.','w','i','n','e','h','q','.','o','r','g',0},
> +        {'h','t','t','p','s',':','/','/','s','e','c','u','r','e','.','h','o','s','t','.','d','o','m',0},
> +        {'f','t','p',':','/','/','s','o','u','r','c','e','f','o','r','g','e','.','o','r','g',0},
> +        {'c',':','\\','b','o','o','t','.','i','n','i',0},
> +        {'m','k',0},
> +        {'h','t','t','p','s',0}
> +    };
> +    static const WCHAR bad_urls[][100] = {
> +        {'w','i','n','e','h','q','.','o','r','g',0},
> +        {'l','o','c','a','l','h','o','s','t',0},
> +        {'t','e','s','t',0},
> +        {'1','2','7','.','0','.','0','.','1',0},
> +        {'b','o','o','t','.','i','n','i',0}
> +    };
> +
> +    hr = IsValidURL(NULL, 0, 10);
> +
> +    ok(hr == E_INVALIDARG, "IsValidURL should fail, expected E_INVALIDARG, got %08x.\n", hr);
> +
> +    for(i = 0; i < sizeof(good_urls)/sizeof(good_urls[0]); i++)
> +    {
> +        hr = IsValidURL(NULL, good_urls[i], 0);
> +        ok(hr == S_OK, "URL %s must be valid, expected S_OK, got %08x.\n", wine_dbgstr_w(good_urls[i]), hr);
> +    }
> +
> +    for(i = 0; i < sizeof(bad_urls)/sizeof(bad_urls[0]); i++)
> +    {
> +        hr = IsValidURL(NULL, bad_urls[i], 0);
> +        ok(hr == S_FALSE, "URL %s must be invalid, expected S_FALSE, got %08x.\n", wine_dbgstr_w(bad_urls[i]), hr);
> +    }
> +}
> +
>  START_TEST(misc)
>  {
>      OleInitialize(NULL);
> @@ -1345,6 +1383,7 @@
>      test_UrlMkGetSessionOption();
>      test_user_agent();
>      test_MkParseDisplayNameEx();
> +    todo_wine test_IsValidURL();
>  
>      OleUninitialize();
>  }



From Joerg-Cyril.Hoehle at t-systems.com  Wed Sep  2 11:15:19 2009
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Wed, 2 Sep 2009 18:15:19 +0200
Subject: Is Wine printing on MacOSX?
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B0329A936@S4DE8PSAANK.mitte.t-com.de>

Hi,

although wine in MacOSX works generally good enough (see test.winehq.org about
release 1.1.28), I recently visited the print menu in notepad and wordpad to
see whether printing would work (in order to complete the FAQ).

All that happened is that the printer ejected a blank page.

Was anyone more successful than me at printing?

- My printer appears in Notepad's and Wordpad's menus, so that's a start.
- The page size and portrait/landscape selection dialogue appears.
- The OSX printer status shows something is happening.
- However the printer only ejects a blank page.
- The console shows no particular log line.

o Do my troubles arise from the fact that I compile Wine only with
  standard MacOS libraries?
  E.g. liblcms (color management) is missing from my system (but no error
  message signals that it would have been used at run-time).
o Should I have tried a "real" app instead of (fake) notepad?

Using Mac OS X 10.5.7 and wine compiled myself (see Wiki.winehq.org about how).

Regards,
	J?rg H?hle


From hintak_leung at yahoo.co.uk  Thu Sep  3 19:54:06 2009
From: hintak_leung at yahoo.co.uk (Hin-Tak Leung)
Date: Fri, 4 Sep 2009 00:54:06 +0000 (GMT)
Subject: font-shape/font-query related regression in wine 1.1.28
In-Reply-To: <200908241233.48153.plr.vincent@gmail.com>
Message-ID: <483886.15481.qm@web23106.mail.ird.yahoo.com>

--- On Mon, 24/8/09, Vincent Pelletier <plr.vincent at gmail.com> wrote:

> Le dimanche 23 ao?t 2009 21:02:33,
> Hin-Tak Leung a ?crit :
> > I don't know why a german translation would affect my
> environment
> > (LANG=en_GB.utf8) and setting LANG=C does not fix the
> problem.
> 
> I just yesterday found a similar fix for a segfaulting
> "wine iexplore" on a 
> japanese environment kde.
> The best I could reach with japanese locale was a "HTML"
> followed by squares 
> (the one when a glyph is missing) before the segfault -
> probably japanese 
> localisation of "html rendering disabled". Switching to
> LC_ALL=C cures the 
> crash.
> 
> Originaly, the crash was in WoW launcher (which uses web
> rendering for part of 
> its window).

That's sounds quite similiar to the .NET application I use wine mainly for. It requires native mshtml and shdocvw to work with MS.NET (wine's built-in mshtml/shdocvw causes native gdiplus to fail), and uses Gecko with mono; and on start-up, it also renders a web-page sub-window. My font problem starting with wine 1.1.28 is with Gecko/mono.

I'll give LC_ALL=C a try. wine 1.1.29 shows a different error, but switching to Vista-shipped tahoma*.ttf or removing them altogether (thus using platform font) also make the application continue.

What's the commit/sha1 for the fix you found (if it were posted)?


      



From Joerg-Cyril.Hoehle at t-systems.com  Fri Sep  4 07:09:21 2009
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Fri, 4 Sep 2009 14:09:21 +0200
Subject: now OSS driver emulation -- and other drivers too -- works as well as
	OSS HW mode; block size error gone?
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B0329B130@S4DE8PSAANK.mitte.t-com.de>

Hi,

if your app worked well in OSS HW driver mode but not in emulation mode,
the following patch may help you. For me, it fixed the following:
 - wrong playback speed in some apps (bug #19901);
 - spurious errors about block size:
   err:dsound:DSOUND_MixInBuffer length not a multiple of block size,
    len = 1579, block size = 2
 - an assertion failure and crash (bug #12349):
   mixer.c:489: DSOUND_MixInBuffer:
    Assertion `dsb->buf_mixpos + len <= dsb->tmp_buffer_len' failed.

As the MacOS CoreAudio driver produces sound effects much like OSS
emulation, a similar fix to wineCoreAudio.drv will certainly cure sound
on the Mac, lifting some apps' rating from garbage to gold!

diff --git a/dlls/wineoss.drv/audio.c b/dlls/wineoss.drv/audio.c
index ca79cd5..9ef0d5b 100644
--- a/dlls/wineoss.drv/audio.c
+++ b/dlls/wineoss.drv/audio.c
@@ -2071,6 +2071,13 @@ static DWORD wodOpen(WORD wDevID, LPWAVEOPENDESC lpDesc, DWORD dwFlags)
 	     wwo->waveFormat.Format.nSamplesPerSec) /
 	    wwo->waveFormat.Format.nChannels;
     }
+    if (wwo->waveFormat.Format.nBlockAlign != wwo->waveFormat.Format.nChannels *
+            wwo->waveFormat.Format.wBitsPerSample / 8) {
+        WARN("Fixing BlockAlign\n");
+        wwo->waveFormat.Format.nBlockAlign = wwo->waveFormat.Format.nChannels *
+	  wwo->waveFormat.Format.wBitsPerSample / 8;
+        lpDesc->lpFormat->nBlockAlign=wwo->waveFormat.Format.nBlockAlign; /* see DirectSoundDevice_Create */
+    }
     /* Read output space info for future reference */
     if (ioctl(wwo->ossdev.fd, SNDCTL_DSP_GETOSPACE, &info) < 0) {
 	ERR("ioctl(%s, SNDCTL_DSP_GETOSPACE) failed (%s)\n", wwo->ossdev.dev_name, strerror(errno));

The problem is that Wine depends on invariants about BlockAlign and
AvgBytesPerSec but does not enforce them when presented incorrect data.

MSDN says http://msdn.microsoft.com/en-us/library/bb669161(VS.85).aspx
"If wFormatTag is WAVE_FORMAT_PCM or WAVE_FORMAT_EXTENSIBLE, nBlockAlign
must be equal to the product of nChannels and wBitsPerSample divided by
8 (bits per byte).
If wFormatTag is WAVE_FORMAT_PCM, nAvgBytesPerSec should be equal to
the product of nSamplesPerSec and nBlockAlign."

In the source base up to now, Wine only corrects the format in the OSS
hardware mode.  That's why OSS HW works well.

It's too early to submit this as a patch as there are a few open issues:

- Does the bogus data originate from the app or is some other function
  in Wine returning this data?
A trace snippet from bug #19901 shows inconsistent data in the following call
to SetFormat following device creation:
PrimaryBufferImpl_Create (formattag=0x0001,chans=2,samplerate=44100,bytespersec=176400,blockalign=4,bitspersamp=16,cbSize=0)
DSOUND_PrimarySetFormat (formattag=0x0001,chans=1,samplerate=22050,bytespersec=88200,blockalign=4,bitspersamp=16,cbSize=0)

- Is there some central place in dsound for enforcing the invariant instead
  of identical code in the half dozen OSS/ALSA/CoreAudio/Jack etc. drivers?

- Is the modification of the WAVEOPENDESC structure allowed, as it seems
  to be a user-supplied structure, which should be handled read-only?

- Should the sound driver refuse to open when submitted such incorrect data?
Possibly not. MSDN says about SetFormat http://msdn.microsoft.com/en-us/library/bb206041(VS.85).aspx
"The method succeeds even if the hardware does not support the requested
format; DirectSound sets the buffer to the closest supported format.  To
determine whether this has happened, an application can call the GetFormat ..."
Thus, DS may set a format different from what was supplied. Presumably,
BlockAlign and AvgBytesPerSec play a minor role, as they can be derived
from the other values.

Experimentally, I had wineoss.drv/audio.c:supportedformat() refuse
inconsistent formats.  Wine nevertheless played the app's sound at bogus
speed after scanning all wineacm/mp3/xyz drivers (which it would not do
otherwise), taking an execution path I've not yet analysed.

- How does MS-Windows behave in the presence of bad data?
Additional tests are needed.

- I've not yet fixed the ALSA driver, but I expect similar improvements, at
  least in the emulation case, because the sound errors are the same in OSS
  and ALSA emulation modes.

This is exciting news about progress in Wine sound issues!
Bugzilla has errors about block size as old as 2005 still open.

Regards,
	J?rg H?hle


From dmitry at codeweavers.com  Fri Sep  4 11:58:23 2009
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sat, 5 Sep 2009 01:58:23 +0900
Subject: gdi32/tests: Add test for SelectClipRgn in metafile
References: <200908311455.43200.shpigor@etersoft.ru>
Message-ID: <6F54FEBDBE7344A4A16904C9E12F3231@DMITRY>

"Ilya Shpigor" <shpigor at etersoft.ru> wrote:

> +    hdc = CreateEnhMetaFileA(0, NULL, NULL, NULL);
> +
> +    SetRect(&rc_sclip, 100, 100, GetSystemMetrics(SM_CXSCREEN), GetSystemMetrics(SM_CYSCREEN));
> +    hrgn = CreateRectRgn(rc_sclip.left, rc_sclip.top, rc_sclip.right, rc_sclip.bottom);
> +    SelectClipRgn(hdc, hrgn);
> +    GetClipBox(hdc, &rc_res);
> +    todo_wine ok(EqualRect(&rc_res, &rc_sclip),
> +                 "expected rc_res (%d, %d) - (%d, %d), got (%d, %d) - (%d, %d)\n",
> +                 rc_sclip.left, rc_sclip.top, rc_sclip.right, rc_sclip.bottom,
> +                 rc_res.left, rc_res.top, rc_res.right, rc_res.bottom);
> +
> +    CloseEnhMetaFile(hdc);
> +    DeleteObject(hrgn);

You are leaking a metafile here.

-- 
Dmitry.


From juan.lang at gmail.com  Fri Sep  4 11:59:50 2009
From: juan.lang at gmail.com (Juan Lang)
Date: Fri, 4 Sep 2009 09:59:50 -0700
Subject: now OSS driver emulation -- and other drivers too -- works as 
	well as OSS HW mode; block size error gone?
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B0329B130@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B0329B130@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <3a768c550909040959v575a84ebi5bc747bece4bcfc0@mail.gmail.com>

Hi J?rg,

good news :)  Only one brief response, I don't know much about this area:

On Fri, Sep 4, 2009 at 5:09 AM, <Joerg-Cyril.Hoehle at t-systems.com> wrote:
> - Is there some central place in dsound for enforcing the invariant instead
> ?of identical code in the half dozen OSS/ALSA/CoreAudio/Jack etc. drivers?

No, or, not to my knowledge.
--Juan


From dylan.ah.smith at gmail.com  Fri Sep  4 12:04:14 2009
From: dylan.ah.smith at gmail.com (Dylan Smith)
Date: Fri, 4 Sep 2009 13:04:14 -0400
Subject: Is Wine printing on MacOSX?
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B0329A936@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B0329A936@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <5c6ee3b70909041004i3c6d47c8n68f06eb953291231@mail.gmail.com>

On Wed, Sep 2, 2009 at 12:15 PM, <Joerg-Cyril.Hoehle at t-systems.com> wrote:
> Hi,
>
> although wine in MacOSX works generally good enough (see test.winehq.org about
> release 1.1.28), I recently visited the print menu in notepad and wordpad to
> see whether printing would work (in order to complete the FAQ).
>
> All that happened is that the printer ejected a blank page.
>

Don't expect printing to work in wordpad for now.   The EM_FORMATRANGE
message is used in wordpad to do printing, and that isn't implemented
yet.

I think notepad should work though, since it is using ExtTextOut.


From 00cpxxx at gmail.com  Fri Sep  4 12:19:43 2009
From: 00cpxxx at gmail.com (Bruno Jesus)
Date: Fri, 4 Sep 2009 14:19:43 -0300
Subject: urlmon: Add test for IsValidURL [try 2]
In-Reply-To: <4A9D57D1.9000102@mail.ru>
References: <4A9D277C.8030109@mail.ru> <4A9D57D1.9000102@mail.ru>
Message-ID: <e930901c0909041019g711e2b15yea6f5ca03553b192@mail.gmail.com>

On Tue, Sep 1, 2009 at 14:20, Vladimir Pankratov<scriptkid at mail.ru> wrote:
> Hello all.
>
> What do you think about this? What's wrong in this patch? Any comments?
>
> Vladimir Pankratov wrote:

Hi, I think it needs some more tests as stated in RFC 1738, all valid:

telnet://user:password at host:98
http://host:777/path?querystring&another_parameter=value&%20%01
http://host.anything
http://host.anything/
http://host.anything:6425/
http://host.anything:479

The RFC itself:
http://www.ietf.org/rfc/rfc1738.txt

Best wishes,
Bruno

>> Hello all.
>>
>> Added test for IsValidURL.
>>
>> Now test shows error codes and tests exact code.
>>
>> Thanks Jacek.
>>
>> changed files:
>> dlls/urlmon/tests/misc.c
>>
>> Thanks.
>>
>>
>>
>>
>> ------------------------------------------------------------------------
>>
>> diff -u -r a/dlls/urlmon/tests/misc.c b/dlls/urlmon/tests/misc.c
>> --- a/dlls/urlmon/tests/misc.c ?2009-08-21 23:34:16.000000000 +0500
>> +++ b/dlls/urlmon/tests/misc.c ?2009-09-01 18:53:08.000000000 +0500
>> @@ -1326,6 +1326,44 @@
>> ? ? IBindCtx_Release(bctx);
>> ?}
>> ?+static void test_IsValidURL(void)
>> +{
>> + ? ?HRESULT hr;
>> + ? ?int i;
>> + ? ?static const WCHAR good_urls[][100] = {
>> +
>> ?{'f','i','l','e',':','/','/','c',':','\\','b','o','o','t','.','i','n','i',0},
>> +
>> ?{'h','t','t','p',':','/','/','w','w','w','.','w','i','n','e','h','q','.','o','r','g',0},
>> +
>> ?{'h','t','t','p','s',':','/','/','s','e','c','u','r','e','.','h','o','s','t','.','d','o','m',0},
>> +
>> ?{'f','t','p',':','/','/','s','o','u','r','c','e','f','o','r','g','e','.','o','r','g',0},
>> + ? ? ? ?{'c',':','\\','b','o','o','t','.','i','n','i',0},
>> + ? ? ? ?{'m','k',0},
>> + ? ? ? ?{'h','t','t','p','s',0}
>> + ? ?};
>> + ? ?static const WCHAR bad_urls[][100] = {
>> + ? ? ? ?{'w','i','n','e','h','q','.','o','r','g',0},
>> + ? ? ? ?{'l','o','c','a','l','h','o','s','t',0},
>> + ? ? ? ?{'t','e','s','t',0},
>> + ? ? ? ?{'1','2','7','.','0','.','0','.','1',0},
>> + ? ? ? ?{'b','o','o','t','.','i','n','i',0}
>> + ? ?};
>> +
>> + ? ?hr = IsValidURL(NULL, 0, 10);
>> +
>> + ? ?ok(hr == E_INVALIDARG, "IsValidURL should fail, expected
>> E_INVALIDARG, got %08x.\n", hr);
>> +
>> + ? ?for(i = 0; i < sizeof(good_urls)/sizeof(good_urls[0]); i++)
>> + ? ?{
>> + ? ? ? ?hr = IsValidURL(NULL, good_urls[i], 0);
>> + ? ? ? ?ok(hr == S_OK, "URL %s must be valid, expected S_OK, got
>> %08x.\n", wine_dbgstr_w(good_urls[i]), hr);
>> + ? ?}
>> +
>> + ? ?for(i = 0; i < sizeof(bad_urls)/sizeof(bad_urls[0]); i++)
>> + ? ?{
>> + ? ? ? ?hr = IsValidURL(NULL, bad_urls[i], 0);
>> + ? ? ? ?ok(hr == S_FALSE, "URL %s must be invalid, expected S_FALSE, got
>> %08x.\n", wine_dbgstr_w(bad_urls[i]), hr);
>> + ? ?}
>> +}
>> +
>> ?START_TEST(misc)
>> ?{
>> ? ? OleInitialize(NULL);
>> @@ -1345,6 +1383,7 @@
>> ? ? test_UrlMkGetSessionOption();
>> ? ? test_user_agent();
>> ? ? test_MkParseDisplayNameEx();
>> + ? ?todo_wine test_IsValidURL();
>> ? ? ? OleUninitialize();
>> ?}


From thunderbird2k at gmail.com  Fri Sep  4 12:41:01 2009
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Fri, 4 Sep 2009 19:41:01 +0200
Subject: Is Wine printing on MacOSX?
In-Reply-To: <5c6ee3b70909041004i3c6d47c8n68f06eb953291231@mail.gmail.com>
References: <47CC5ABB01651443A88DB8EC5B4D657B0329A936@S4DE8PSAANK.mitte.t-com.de>
	<5c6ee3b70909041004i3c6d47c8n68f06eb953291231@mail.gmail.com>
Message-ID: <c8485d470909041041u56b7ce15x3736869336c3165@mail.gmail.com>

On Fri, Sep 4, 2009 at 7:04 PM, Dylan Smith<dylan.ah.smith at gmail.com> wrote:
> On Wed, Sep 2, 2009 at 12:15 PM, <Joerg-Cyril.Hoehle at t-systems.com> wrote:
>> Hi,
>>
>> although wine in MacOSX works generally good enough (see test.winehq.org about
>> release 1.1.28), I recently visited the print menu in notepad and wordpad to
>> see whether printing would work (in order to complete the FAQ).
>>
>> All that happened is that the printer ejected a blank page.
>>
>
> Don't expect printing to work in wordpad for now. ? The EM_FORMATRANGE
> message is used in wordpad to do printing, and that isn't implemented
> yet.
>
> I think notepad should work though, since it is using ExtTextOut.
>
>
>

I have been able to print from Wine apps in OSX though I'm still
having some issues which I did not investigate yet. The issue is that
when I print from my app which uses non-standard fonts with some
integral / summation symbols that those symbols are lost during the
printing and that a 'square' is shown instead. I don't see this issue
on Linux.

Roderick


From celticht32 at yahoo.com  Fri Sep  4 13:20:08 2009
From: celticht32 at yahoo.com (chris ahrendt)
Date: Fri, 4 Sep 2009 11:20:08 -0700 (PDT)
Subject: CPP Run for Sept 3
Message-ID: <22237.12033.qm@web112604.mail.gq1.yahoo.com>

[../wine-git/dlls/msvcrt/tests/file.c:982]: (error) Deallocating a
deallocated pointer: stream2
[../wine-git/dlls/msvcrt/tests/file.c:966]: (error) Resource leak: stream3
[../wine-git/dlls/msvcrt/tests/file.c:973]: (error) Resource leak: stream4
[../wine-git/dlls/msvcrt/tests/heap.c:433]: (possible error) Memory
leak: mem
[../wine-git/dlls/ntdll/directory.c:2339]: (error) Resource leak: old_cwd
[../wine-git/dlls/ntdll/server.c:802]: (error) Resource leak: fd
[../wine-git/dlls/ntdll/server.c:882]: (error) Resource leak: fd_cwd
[../wine-git/dlls/rpcrt4/tests/server.c:1189]: (possible error) Array
index out of bounds
[../wine-git/dlls/wineoss.drv/mmaux.c:150]: (error) Resource leak: mixer
[../wine-git/dlls/wineoss.drv/mmaux.c:211]: (error) Resource leak: mixer
[../wine-git/dlls/wineps.drv/init.c:270]: (error) Possible null pointer
dereference: dmW - otherwise it is redundant to check if dmW is null at
line 272
[../wine-git/programs/oleview/pane.c:152]: (error) Possible null pointer
dereference: hWndCreated
[../wine-git/tools/fnt2bdf.c:779]: (error) Resource leak: fd
[../wine-git/tools/fnt2fon.c:387]: (error) Memory leak: file_lens
[../wine-git/tools/makedep.c:953]: (error) Resource leak: file
[../wine-git/tools/sfnt2fnt.c:877]: (error) Resource leak: ofp
[../wine-git/tools/widl/write_msft.c:2536]: (error) Resource leak: fd
[../wine-git/tools/winedump/msmangle.c:164]: (error) Memory leak:
function_name
[../wine-git/tools/winedump/pe.c:1549]: (possible error) Memory leak: map

Chris







      


From jjmckenzie51 at earthlink.net  Fri Sep  4 13:28:31 2009
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Fri, 4 Sep 2009 11:28:31 -0700 (GMT-07:00)
Subject: Is Wine printing on MacOSX?
Message-ID: <1920084.1252088911624.JavaMail.root@mswamui-chipeau.atl.sa.earthlink.net>

On Fri, Sep 4, Roderick Colenbrander <thunderbird2k at gmail.com>
>
>On Fri, Sep 4, 2009 at 7:04 PM, Dylan Smith<dylan.ah.smith at gmail.com> wrote:
>> On Wed, Sep 2, 2009 at 12:15 PM, <Joerg-Cyril.Hoehle at t-systems.com> wrote:
>>> Hi,
>>>
>>> although wine in MacOSX works generally good enough (see test.winehq.org about
>>> release 1.1.28), I recently visited the print menu in notepad and wordpad to
>>> see whether printing would work (in order to complete the FAQ).
>>>
>>> All that happened is that the printer ejected a blank page.
>>>
>>
>> Don't expect printing to work in wordpad for now. ? The EM_FORMATRANGE
>> message is used in wordpad to do printing, and that isn't implemented
>> yet.
>>
>> I think notepad should work though, since it is using ExtTextOut.
>>
>>
>>
>
>I have been able to print from Wine apps in OSX though I'm still
>having some issues which I did not investigate yet. The issue is that
>when I print from my app which uses non-standard fonts with some
>integral / summation symbols that those symbols are lost during the
>printing and that a 'square' is shown instead. I don't see this issue
>on Linux.
>
Interesting.  I was going to comment that the EM_FORMATRANGE problem may be the cause, but this may be due to the CUPS implementation or some other reason on the Mac.  Unfortunately, my only printer, which was an inkjet, would have cost as much to repair as it would to buy a new one.  I guess it may be time to buy another, but this time its going to be a laser, not ink.

James McKenzie



From paulc at voip.null.ro  Fri Sep  4 14:08:57 2009
From: paulc at voip.null.ro (Paul Chitescu)
Date: Fri, 4 Sep 2009 22:08:57 +0300
Subject: winebrowser: Fix broken handling of DDE type XTYP_EXECUTE
In-Reply-To: <1251854122.2426.80.camel@donpedro>
References: <1251854122.2426.80.camel@donpedro>
Message-ID: <200909042208.57608.paulc@voip.null.ro>

On Wednesday 02 September 2009 04:15:22 Peter Dons Tychsen wrote:
> XTYPE_EXECUTE DDE transaction for winebrowser is broken.
> The handler currently expects a MultiByte character input, which is
> wrong.
>
> The handler is win-unicode, and will always receive such strings.
> The encoding of the string can be seen in WDML_BuildExecuteCommand().
>
> This fixes programs which use DDE to show a web-link via winebrowser,
> e.g. the "Last Chaos" web-installer:
> http://lastchaos.aeriagames.com/download
>
> Thanks,
>
> /pedro

This has been talked about before and an even safer solution was refused:
  http://www.mail-archive.com/wine-devel at winehq.org/msg50183.html
  http://www.mail-archive.com/wine-devel at winehq.org/msg50224.html

Unfortunately there is no equivalent in Windows of what Wine does. Windows 
seems to pass around ATOMs as either ANSI (Win 9x, ME) or UCS-2 (NT3x, NT4) 
or UTF-16 (2000+) depending on version.

Wine tries to do it at runtime depending on the Windows version it emulates - 
and that is per process. ANSI programs actually succeed in starting 
winebrowser because they send MBCS to it.


From fenixk19 at mail.ru  Fri Sep  4 15:00:34 2009
From: fenixk19 at mail.ru (Fenixk19)
Date: Sat, 05 Sep 2009 00:00:34 +0400
Subject: Asynchronus serial port
In-Reply-To: <4d8b5aa80909021855t10aca983o4c96dcae7dbfeb2e@mail.gmail.com>
References: <4A9F0060.6080805@mail.ru>
	<4d8b5aa80909021855t10aca983o4c96dcae7dbfeb2e@mail.gmail.com>
Message-ID: <4AA171E2.9020302@mail.ru>

Yes, this patch solved problem. Great thanks. But there is another one.
It hangs on another call of GetOverlappedResult, where windows going on.
It hangs the same way - function always return, because
ovOverlapped.Internal is STATUS_PENDING. In attached file part of new
test problem, to show where it is. I'll send full variant on bugzilla in
minutes. http://bugs.winehq.org/show_bug.cgi?id=19713

Mike Kaplinskiy ?????:
> On Wed, Sep 2, 2009 at 7:31 PM, Fenixk19<fenixk19 at mail.ru> wrote:
>   
>> Hello! I've already post the
>> bug(http://bugs.winehq.org/show_bug.cgi?id=19713) on this subject, but i
>> need more help. So I've decided to write here.
>> There is a problem in wine. When I use asynchronous serial port read,
>> data never comes. Event, caused by select comes. But operation status
>> stays pending, and i can't do anything to this serial port anymore. In
>> windows it never get pending, and port can be accessed just after data
>> arrival. Seems to be wineserver problem, but i don't know, where to look
>> at. What code respond for asynchronous serial port in wineserver?
>> Alexander.
>> P.S. Test program attached.
>>
>>
>>
>>
>>     
>
> Hi,
>
> Alexandre would be the guy to talk to about wineserver-related things.
> Sadly he's off on a long weekend. Does the attached patch help solve
> the problem?
>
> Mike.
>   

-------------- next part --------------
A non-text attachment was scrubbed...
Name: show.cpp
Type: text/x-c++src
Size: 3625 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090905/e65dbaa5/attachment-0001.cpp>

From marcus at jet.franken.de  Fri Sep  4 15:43:45 2009
From: marcus at jet.franken.de (Marcus Meissner)
Date: Fri, 4 Sep 2009 22:43:45 +0200
Subject: CPP Run for Sept 3
In-Reply-To: <22237.12033.qm@web112604.mail.gq1.yahoo.com>
References: <22237.12033.qm@web112604.mail.gq1.yahoo.com>
Message-ID: <20090904204345.GA6738@galeere.jet.franken.de>

On Fri, Sep 04, 2009 at 11:20:08AM -0700, chris ahrendt wrote:
> [../wine-git/dlls/wineoss.drv/mmaux.c:150]: (error) Resource leak: mixer
> [../wine-git/dlls/wineoss.drv/mmaux.c:211]: (error) Resource leak: mixer

Is a bug, patch sent.

> [../wine-git/programs/oleview/pane.c:152]: (error) Possible null pointer dereference: hWndCreated

Is a bug, patch sent.

Ciao, Marcus


From stefandoesinger at gmx.at  Fri Sep  4 16:22:06 2009
From: stefandoesinger at gmx.at (Stefan =?utf-8?q?D=C3=B6singer?=)
Date: Fri, 4 Sep 2009 23:22:06 +0200
Subject: Is Wine printing on MacOSX?
In-Reply-To: <1920084.1252088911624.JavaMail.root@mswamui-chipeau.atl.sa.earthlink.net>
References: <1920084.1252088911624.JavaMail.root@mswamui-chipeau.atl.sa.earthlink.net>
Message-ID: <200909042322.06242.stefandoesinger@gmx.at>

Am Friday 04 September 2009 20:28:31 schrieb James Mckenzie:
> Interesting.  I was going to comment that the EM_FORMATRANGE problem may be
> the cause, but this may be due to the CUPS implementation or some other
> reason on the Mac.  Unfortunately, my only printer, which was an inkjet,
> would have cost as much to repair as it would to buy a new one.  I guess it
> may be time to buy another, but this time its going to be a laser, not ink.
Printing from notepad works fine for me on both Linux and OSX, fwiw


From dank at kegel.com  Fri Sep  4 23:18:37 2009
From: dank at kegel.com (Dan Kegel)
Date: Fri, 4 Sep 2009 21:18:37 -0700
Subject: winex11: fix Steam color regression
Message-ID: <a71bd89a0909042118p3a0f6032nc0b5abd384cd37d7@mail.gmail.com>

wineconsole also became invisible with that regression.
Your patch fixes it, thank goodness.


From keith.muir at blueyonder.co.uk  Sat Sep  5 12:38:05 2009
From: keith.muir at blueyonder.co.uk (Keith Muir)
Date: Sat, 05 Sep 2009 18:38:05 +0100
Subject: Game Engine
Message-ID: <4AA2A1FD.9050605@blueyonder.co.uk>

Hi,

The Total war engine continues to bounce between garbage and silver 
never rising above that level given the installed user base would it be 
worth devoting more time to fixing the problems wine has with this? as 
of 1.29 its freezing and unusable. Wine project has to prioritize but 
success drives the project when people hear they can now do this or that 
that they couldn't before everyone is inspired its a virtuous circle.

Regards,

Keith



From shacklein at gmail.com  Sat Sep  5 20:24:38 2009
From: shacklein at gmail.com (Ben Klein)
Date: Sun, 6 Sep 2009 11:24:38 +1000
Subject: Game Engine
In-Reply-To: <4AA2A1FD.9050605@blueyonder.co.uk>
References: <4AA2A1FD.9050605@blueyonder.co.uk>
Message-ID: <d7e40be30909051824o2959b09l350235f483234dd@mail.gmail.com>

2009/9/6 Keith Muir <keith.muir at blueyonder.co.uk>:
> Hi,
>
> The Total war engine continues to bounce between garbage and silver never
> rising above that level given the installed user base would it be worth
> devoting more time to fixing the problems wine has with this? as of 1.29 its
> freezing and unusable. Wine project has to prioritize but success drives the
> project when people hear they can now do this or that that they couldn't
> before everyone is inspired its a virtuous circle.

Wine tends not to focus on individual applications when developing,
however anyone is welcome to submit a patch that gets "their"
application working, as long as it's not a poorly-designed hack that
breaks other stuff or does things in the "wrong" way.

I'm also not sure what game you're referring to here; "Medieval 2:
Total War" appears to work quite well, though the other Total War
games don't seem to fair quite as well.


From scott at open-vote.org  Sun Sep  6 02:24:14 2009
From: scott at open-vote.org (Scott Ritchie)
Date: Sun, 06 Sep 2009 00:24:14 -0700
Subject: winex11: fix Steam color regression
In-Reply-To: <a71bd89a0909042118p3a0f6032nc0b5abd384cd37d7@mail.gmail.com>
References: <a71bd89a0909042118p3a0f6032nc0b5abd384cd37d7@mail.gmail.com>
Message-ID: <4AA3639E.2000206@open-vote.org>

Dan Kegel wrote:
> wineconsole also became invisible with that regression.
> Your patch fixes it, thank goodness.
> 
> 

I've rolled the patch into the Ubuntu packages (9.04 was uploaded
yesterday, 8.10 and 8.04 are in progress)


Thanks,
Scott Ritchie


From shacklein at gmail.com  Sun Sep  6 02:55:30 2009
From: shacklein at gmail.com (Ben Klein)
Date: Sun, 6 Sep 2009 17:55:30 +1000
Subject: Game Engine
In-Reply-To: <4AA32EA1.9010701@blueyonder.co.uk>
References: <4AA2A1FD.9050605@blueyonder.co.uk>
	<d7e40be30909051824o2959b09l350235f483234dd@mail.gmail.com> 
	<4AA32EA1.9010701@blueyonder.co.uk>
Message-ID: <d7e40be30909060055r27886e43o288fdcca445331a3@mail.gmail.com>

2009/9/6 Keith Muir <keith.muir at blueyonder.co.uk>:
> My understanding is that all Total War games work off the Rome Total War
> engine and you are correct the wine project under no circumstances should it
> focus on individual applications. That said if there is a game engine which
> several games use in this case fixing the problems the engine has will fix
> multiple games. So the justification is there. Also I am the maintainer for
> Medieval II and no it doest work well.
>

Patches are welcome, but it's very unlikely that the main development
team will be able to spend time/effort fixing problems for a single
game (or series of games). If coding for Wine is not your forte, there
are other things you can do to try to get bugs fixed. At the very
least, if there are no relevant reports on bugs.winehq.org, you can
report the bugs. If the games are toggling between Garbage and Silver,
then regression tests would be useful.


From kgbricola at web.de  Sun Sep  6 04:02:09 2009
From: kgbricola at web.de (=?ISO-8859-1?Q?Rico_Sch=FCller?=)
Date: Sun, 06 Sep 2009 11:02:09 +0200
Subject: Game Engine
In-Reply-To: <d7e40be30909060055r27886e43o288fdcca445331a3@mail.gmail.com>
References: <4AA2A1FD.9050605@blueyonder.co.uk>	<d7e40be30909051824o2959b09l350235f483234dd@mail.gmail.com>
	<4AA32EA1.9010701@blueyonder.co.uk>
	<d7e40be30909060055r27886e43o288fdcca445331a3@mail.gmail.com>
Message-ID: <4AA37A91.7090802@web.de>

Am 06.09.2009 09:55, schrieb Ben Klein:
> 2009/9/6 Keith Muir<keith.muir at blueyonder.co.uk>:
>    
>> My understanding is that all Total War games work off the Rome Total War
>> engine and you are correct the wine project under no circumstances should it
>> focus on individual applications. That said if there is a game engine which
>> several games use in this case fixing the problems the engine has will fix
>> multiple games. So the justification is there. Also I am the maintainer for
>> Medieval II and no it doest work well.
>>
>>      
> Patches are welcome, but it's very unlikely that the main development
> team will be able to spend time/effort fixing problems for a single
> game (or series of games). If coding for Wine is not your forte, there
> are other things you can do to try to get bugs fixed. At the very
> least, if there are no relevant reports on bugs.winehq.org, you can
> report the bugs. If the games are toggling between Garbage and Silver,
> then regression tests would be useful.
>
>
>
>    
Please check the bugs which are already opened for your game ( 
http://appdb.winehq.org/objectManager.php?sClass=version&iId=10446&sAllBugs 
and http://appdb.winehq.org/objectManager.php?sClass=version&iId=6517 ). 
Are the bugs all in the demo from 
http://appdb.winehq.org/objectManager.php?sClass=version&iId=6222 or do 
the games differ that much that they have different bugs? If the bugs 
are in the demo (please add a bug link there), the developers could test 
it easily.

You could also try to check bugs (e.g. 
http://bugs.winehq.org/show_bug.cgi?id=16836 , 
http://bugs.winehq.org/show_bug.cgi?id=12538 ) which were requested to 
add some information. I'm not sure if you only have version 1.3 and not 
1.x and if they differ in the case of bugs.

This would at least reduce the noise of already fixed/ not fixed bugs, 
so that only still valid reports are around.

Cheers
Rico




From eric.pouech at orange.fr  Sun Sep  6 09:28:40 2009
From: eric.pouech at orange.fr (Eric Pouech)
Date: Sun, 06 Sep 2009 16:28:40 +0200
Subject: msvcrt: dont overwrite the standard streams (with test, try 5)
In-Reply-To: <4AA3BFF1.3000203@dawncrow.de>
References: <4AA3BFF1.3000203@dawncrow.de>
Message-ID: <4AA3C718.4040904@orange.fr>

Andr? Hentschel a ?crit :
> Some Apps e.g. mingw-apps use lpReserved2 to pass some data to the child-process, this data starts with 4 Byte of Zeros(unsinged 0) to tell msvcrt not to read that as an inherit-block.
>   
Hi Andr?
a couple of comments to your patch
> See also Bug 18479
> ---
>  dlls/msvcrt/file.c            |    2 +-
>  dlls/msvcrt/tests/Makefile.in |    2 +-
>  dlls/msvcrt/tests/file.c      |   50 +++++++++++++++++++++++++++++++++++++++++
>  3 files changed, 52 insertions(+), 2 deletions(-)
>
> diff --git a/dlls/msvcrt/file.c b/dlls/msvcrt/file.c
> index 6671f2f..8f63e8d 100644
> --- a/dlls/msvcrt/file.c
> +++ b/dlls/msvcrt/file.c
> @@ -349,7 +349,7 @@ void msvcrt_init_io(void)
>    InitializeCriticalSection(&MSVCRT_file_cs);
>    MSVCRT_file_cs.DebugInfo->Spare[0] = (DWORD_PTR)(__FILE__ ": MSVCRT_file_cs");
>    GetStartupInfoA(&si);
> -  if (si.cbReserved2 != 0 && si.lpReserved2 != NULL)
> +  if (si.cbReserved2 != 0 && si.lpReserved2 != NULL && *(unsigned*)si.lpReserved2)
>   
IMO, we should also test that cbReserved2 is >= sizeof(unsigned) 
otherwise we'd be in trouble
>    {
>      char*       wxflag_ptr;
>      HANDLE*     handle_ptr;
> diff --git a/dlls/msvcrt/tests/Makefile.in b/dlls/msvcrt/tests/Makefile.in
> index 74199e1..8c71971 100644
> --- a/dlls/msvcrt/tests/Makefile.in
> +++ b/dlls/msvcrt/tests/Makefile.in
> @@ -4,7 +4,7 @@ SRCDIR    = @srcdir@
>  VPATH     = @srcdir@
>  TESTDLL   = msvcrt.dll
>  APPMODE   = -mno-cygwin
> -IMPORTS   = kernel32
> +IMPORTS   = kernel32 user32
>   
you should do it without user32. instead of doing this
> +    while (MsgWaitForMultipleObjects( 1, &proc.hProcess, FALSE, INFINITE, QS_ALLINPUT ) != 0)
> +    {
> +        while (PeekMessage(&msg, 0, 0, 0, PM_REMOVE)) DispatchMessageA(&msg);
> +    }
>   
you could simply wait for the child process to terminate
A+

-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)





From nerv at dawncrow.de  Sun Sep  6 09:45:37 2009
From: nerv at dawncrow.de (=?ISO-8859-15?Q?Andr=E9_Hentschel?=)
Date: Sun, 06 Sep 2009 16:45:37 +0200
Subject: msvcrt: dont overwrite the standard streams (with test, try 5)
In-Reply-To: <4AA3C718.4040904@orange.fr>
References: <4AA3BFF1.3000203@dawncrow.de> <4AA3C718.4040904@orange.fr>
Message-ID: <4AA3CB11.5060303@dawncrow.de>

Eric Pouech schrieb:
> Hi Andr?
> a couple of comments to your patch
always welcome!

> IMO, we should also test that cbReserved2 is >= sizeof(unsigned)
> otherwise we'd be in trouble
maybe you had something like that patch in mind:
http://www.winehq.org/pipermail/wine-patches/2009-August/077766.html
it checks if the size makes sense

> you should do it without user32. instead of doing this
>> +    while (MsgWaitForMultipleObjects( 1, &proc.hProcess, FALSE,
>> INFINITE, QS_ALLINPUT ) != 0)
>> +    {
>> +        while (PeekMessage(&msg, 0, 0, 0, PM_REMOVE))
>> DispatchMessageA(&msg);
>> +    }
>>   
> you could simply wait for the child process to terminate
> A+
> 
of course, your right, fixed that.

-- 

Best Regards, Andr? Hentschel


From twickline at gmail.com  Sun Sep  6 11:38:39 2009
From: twickline at gmail.com (Tom Wickline)
Date: Sun, 6 Sep 2009 12:38:39 -0400
Subject: [PATCH 0/3] Make GetAsyncKeyState really Async (now it checks 
	current window only)
In-Reply-To: <b170af450909060627m6fc1ccd7n6c25558fa0510246@mail.gmail.com>
References: <b170af450909060627m6fc1ccd7n6c25558fa0510246@mail.gmail.com>
Message-ID: <53e3a9930909060938s7cdac9a4qf49211e6da39e07b@mail.gmail.com>

You forgot the patch :)

2009/9/6 Rafa? Mi?ecki <zajec5 at gmail.com>

> Hi,
>
> This patchset fixes bug #5623 [1]. I've tested this with EasyUO app
> and other random apps run in the same wineserver.
>
> I've run tests in user32 to check for regressions, no changes. I've
> checked compilation & user32's test after applying each patch.
>
> Hope everything is alright with this patchset.
>
> [1] http://bugs.winehq.org/show_bug.cgi?id=5623
>
> --
> Rafa? Mi?ecki
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090906/feba48ed/attachment.htm>

From zajec5polish at gmail.com  Sun Sep  6 13:27:41 2009
From: zajec5polish at gmail.com (=?UTF-8?B?UmFmYcWCIE1pxYJlY2tp?=)
Date: Sun, 6 Sep 2009 20:27:41 +0200
Subject: [PATCH 0/3] Make GetAsyncKeyState really Async (now it checks 
	current window only)
In-Reply-To: <53e3a9930909060938s7cdac9a4qf49211e6da39e07b@mail.gmail.com>
References: <b170af450909060627m6fc1ccd7n6c25558fa0510246@mail.gmail.com>
	<53e3a9930909060938s7cdac9a4qf49211e6da39e07b@mail.gmail.com>
Message-ID: <14b026160909061127k6afc339fl1e3f87b7c4dc64e9@mail.gmail.com>

2009/9/6 Tom Wickline <twickline at gmail.com>:
> You forgot the patch :)

Er, it's 0/3 it was supposed to be just a description of patchset. I
think I grabbed that style from iwlwifi patches policy :)

So there are 3 patches:
0001-server-expand-protocol-to-store-global-key-state.txt
0002-winex11.drv-set-global-key-state.txt
0003-winex11.drv-use-global-key-state-in-GetAsyncKeyState.txt

First posted in 1/3
Second in 2/3
Third 3/3

This mail is just a description.

-- 
Rafa?


From hverbeet at gmail.com  Sun Sep  6 15:26:42 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sun, 6 Sep 2009 22:26:42 +0200
Subject: ddraw: Added support for WINED3DFMT_X8L8V8U8, 
	WINED3DFMT_R8G8B8A8_SNORM and WINED3DFMT_R16G16_SNORM to
	PixelFormat_WineD3DtoDD
In-Reply-To: <17334621.249751252000931469.JavaMail.servlet@perfora>
References: <17334621.249751252000931469.JavaMail.servlet@perfora>
Message-ID: <d658b69e0909061326q1d61d1f8yf5b806031928516f@mail.gmail.com>

2009/9/3 Stephan Rose <kermos at somrek.net>:
> +        case WINED3DFMT_R8G8B8A8_SNORM:
> +            DDPixelFormat->dwFlags = DDPF_BUMPDUDV;
> +            DDPixelFormat->dwFourCC = 0;
> +            DDPixelFormat->u1.dwBumpBitCount = 32;
> +            DDPixelFormat->u2.dwBumpDuBitMask           = 0xFF000000;
> +            DDPixelFormat->u3.dwBumpDvBitMask           = 0x00FF0000;
> +            DDPixelFormat->u4.dwBumpLuminanceBitMask    = 0x0000FF00;
> +            DDPixelFormat->u5.dwLuminanceAlphaBitMask   = 0x000000FF;
> +            break;
> +        case WINED3DFMT_R16G16_SNORM:
> +            DDPixelFormat->dwFlags = DDPF_BUMPDUDV;
> +            DDPixelFormat->dwFourCC = 0;
> +            DDPixelFormat->u1.dwBumpBitCount = 32;
> +            DDPixelFormat->u2.dwBumpDuBitMask           = 0xFFFF0000;
> +            DDPixelFormat->u3.dwBumpDvBitMask           = 0x0000FFFF;
> +            DDPixelFormat->u4.dwBumpLuminanceBitMask    = 0x00000000;
> +            DDPixelFormat->u5.dwLuminanceAlphaBitMask   = 0x00000000;
> +            break;
I think you have the masks backwards. You also have some trailing
spaces in there.


From hverbeet at gmail.com  Sun Sep  6 15:27:14 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sun, 6 Sep 2009 22:27:14 +0200
Subject: [5/5] WineD3D: Use GL_ATI_meminfo if available
In-Reply-To: <200909051705.07807.stefan@codeweavers.com>
References: <200909051705.07807.stefan@codeweavers.com>
Message-ID: <d658b69e0909061327g40e4d6e9l36c86e63a7887cda@mail.gmail.com>

2009/9/5 Stefan D?singer <stefan at codeweavers.com>:
> +        /* All GL_ATI_meminfo enums return 4 ints, even the (undocumented)
> +         * GL_TOTAL_PHYSICAL_MEMORY_ATI one, which returns {mem, 0, 0, 0} */
> +        GLint mem[4];
> +        /* Returns the vidmem in KB */
> +        glGetIntegerv(GL_TOTAL_PHYSICAL_MEMORY_ATI, mem);
> +        checkGLcall("glGetIntegerv(GL_TOTAL_PHYSICAL_MEMORY_ATI, mem)");
> +
> +        /* The first driver version that supports ATI_meminfo doesn't implement
> +         * GL_TOTAL_PHYSICAL_MEMORY_ATI - catch this situation as adviced by AMD
> +         */
> +        if(mem[0] < 65536)
If the implementation doesn't recognise "GL_TOTAL_PHYSICAL_MEMORY_ATI"
you're testing uninitialized memory here. I hope AMD didn't actually
advice you to code it like that.


From hverbeet at gmail.com  Sun Sep  6 15:27:01 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sun, 6 Sep 2009 22:27:01 +0200
Subject: [4/5] WineD3D: Add GL_ATI_meminfo to the extension table
In-Reply-To: <200909051704.16769.stefan@codeweavers.com>
References: <200909051704.16769.stefan@codeweavers.com>
Message-ID: <d658b69e0909061327y468d2b53y20ce1bf6a91c60cf@mail.gmail.com>

2009/9/5 Stefan D?singer <stefan at codeweavers.com>:
> So far ATI hasn't updated the extension spec, but the code works nevertheless,
> and I don't have any problem with using this functionality if available.
>
The implication is that when someone implements ATI_meminfo as
documented in the actual spec it won't work properly with Wine. I
don't think we really want to go there. I'm also not sure it's even
possible to introduce additional tokens into already published
extensions, so I expect this will need a new extension anyway.


From joel at airwebreathe.org.uk  Sun Sep  6 15:29:42 2009
From: joel at airwebreathe.org.uk (Joel Holdsworth)
Date: Sun, 06 Sep 2009 21:29:42 +0100
Subject: Finding IDB_VIEW_SMALL_COLOR
Message-ID: <1252268982.10305.86.camel@joel-desktop>

Hi All,

Does anyone know what DLL the image 32-bit version the standard image
list IDB_VIEW_SMALL_COLOR is stored in in Windows? You can see some of
it in this screenshot:
http://www.airwebreathe.org.uk/IDB_VIEW_SMALL_COLOR.png. I might expect
it to be in comctl32.dll with the other common image lists... but it's
not - only the old 4-bit version of the image.

Does anyone know where the 32-bit one is?

Thanks
Joel





From frank.richter at gmail.com  Sun Sep  6 15:41:47 2009
From: frank.richter at gmail.com (Frank Richter)
Date: Sun, 06 Sep 2009 22:41:47 +0200
Subject: Finding IDB_VIEW_SMALL_COLOR
In-Reply-To: <1252268982.10305.86.camel@joel-desktop>
References: <1252268982.10305.86.camel@joel-desktop>
Message-ID: <4AA41E8B.6000001@gmail.com>

On 06.09.2009 22:29, Joel Holdsworth wrote:
> Does anyone know where the 32-bit one is?

comctl32.dll version 6, it seems.

-f.r.


From bunglehead at gmail.com  Sun Sep  6 15:42:25 2009
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Mon, 07 Sep 2009 00:42:25 +0400
Subject: Finding IDB_VIEW_SMALL_COLOR
In-Reply-To: <1252268982.10305.86.camel@joel-desktop>
References: <1252268982.10305.86.camel@joel-desktop>
Message-ID: <4AA41EB1.2040607@gmail.com>

Joel Holdsworth wrote:
> Hi All,
>
> Does anyone know what DLL the image 32-bit version the standard image
> list IDB_VIEW_SMALL_COLOR is stored in in Windows? You can see some of
> it in this screenshot:
> http://www.airwebreathe.org.uk/IDB_VIEW_SMALL_COLOR.png. I might expect
> it to be in comctl32.dll with the other common image lists... but it's
> not - only the old 4-bit version of the image.
>
> Does anyone know where the 32-bit one is?
>
> Thanks
> Joel
>   
Could be comctl32 v6 (located in winsxs subdir).



From stefan at codeweavers.com  Sun Sep  6 19:05:15 2009
From: stefan at codeweavers.com (Stefan =?utf-8?q?D=C3=B6singer?=)
Date: Mon, 7 Sep 2009 02:05:15 +0200
Subject: [5/5] WineD3D: Use GL_ATI_meminfo if available
In-Reply-To: <d658b69e0909061327g40e4d6e9l36c86e63a7887cda@mail.gmail.com>
References: <200909051705.07807.stefan@codeweavers.com>
	<d658b69e0909061327g40e4d6e9l36c86e63a7887cda@mail.gmail.com>
Message-ID: <200909070205.16806.stefan@codeweavers.com>

Am Sunday 06 September 2009 22:27:14 schrieb Henri Verbeet:
> 2009/9/5 Stefan D?singer <stefan at codeweavers.com>:
> > +        /* All GL_ATI_meminfo enums return 4 ints, even the
> > (undocumented) +         * GL_TOTAL_PHYSICAL_MEMORY_ATI one, which
> > returns {mem, 0, 0, 0} */ +        GLint mem[4];
> > +        /* Returns the vidmem in KB */
> > +        glGetIntegerv(GL_TOTAL_PHYSICAL_MEMORY_ATI, mem);
> > +        checkGLcall("glGetIntegerv(GL_TOTAL_PHYSICAL_MEMORY_ATI, mem)");
> > +
> > +        /* The first driver version that supports ATI_meminfo doesn't
> > implement +         * GL_TOTAL_PHYSICAL_MEMORY_ATI - catch this situation
> > as adviced by AMD +         */
> > +        if(mem[0] < 65536)
>
> If the implementation doesn't recognise "GL_TOTAL_PHYSICAL_MEMORY_ATI"
> you're testing uninitialized memory here. I hope AMD didn't actually
> advice you to code it like that.
Hmm, you got a point here - the GL call won't initialize the memory on an 
invalid token(or at least, I couldn't rely on that), and I'd have to init the 
memory to zero manually before.

Your other objection sounds reasonable as well - I guess I'll /dev/null the 
patches for now and hope AMD fixes the extension


From jjmckenzie51 at earthlink.net  Sun Sep  6 23:55:20 2009
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Sun, 06 Sep 2009 21:55:20 -0700
Subject: ddraw: Added support for WINED3DFMT_X8L8V8U8,
	WINED3DFMT_R8G8B8A8_SNORM
	and WINED3DFMT_R16G16_SNORM to	PixelFormat_WineD3DtoDD
In-Reply-To: <17334621.249751252000931469.JavaMail.servlet@perfora>
References: <17334621.249751252000931469.JavaMail.servlet@perfora>
Message-ID: <4AA49238.5040602@earthlink.net>

Stephan Rose wrote:
> Sets up DDPixelFormat for WINED3DFMT_X8L8V8U8, WINED3DFMT_R8G8B8A8_SNORM and WINED3DFMT_R16G16_SNORM formats.
>
> Fixes errors in the game http://www.alawar.com/game/tikibar/ that keep it from running due missing pixel format conversions of the above bump map formats.
Stephan:

You have trailing spaces in the break; line.  Please remove them.

James McKenzie

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0001-Added-support-for-WINED3DFMT_X8L8V8U8-WINED3DFMT_R8G8.txt
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090906/3b4e2d86/attachment.txt>

From jjmckenzie51 at earthlink.net  Sun Sep  6 23:57:58 2009
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Sun, 06 Sep 2009 21:57:58 -0700
Subject: [5/5] WineD3D: Use GL_ATI_meminfo if available
In-Reply-To: <d658b69e0909061327g40e4d6e9l36c86e63a7887cda@mail.gmail.com>
References: <200909051705.07807.stefan@codeweavers.com>
	<d658b69e0909061327g40e4d6e9l36c86e63a7887cda@mail.gmail.com>
Message-ID: <4AA492D6.6070301@earthlink.net>

Henri Verbeet wrote:
> 2009/9/5 Stefan D?singer <stefan at codeweavers.com>:
>   
>> +        /* All GL_ATI_meminfo enums return 4 ints, even the (undocumented)
>> +         * GL_TOTAL_PHYSICAL_MEMORY_ATI one, which returns {mem, 0, 0, 0} */
>> +        GLint mem[4];
>> +        /* Returns the vidmem in KB */
>> +        glGetIntegerv(GL_TOTAL_PHYSICAL_MEMORY_ATI, mem);
>> +        checkGLcall("glGetIntegerv(GL_TOTAL_PHYSICAL_MEMORY_ATI, mem)");
>> +
>> +        /* The first driver version that supports ATI_meminfo doesn't implement
>> +         * GL_TOTAL_PHYSICAL_MEMORY_ATI - catch this situation as adviced by AMD
>> +         */
>> +        if(mem[0] < 65536)
>>     
> If the implementation doesn't recognise "GL_TOTAL_PHYSICAL_MEMORY_ATI"
> you're testing uninitialized memory here. I hope AMD didn't actually
> advice you to code it like that.
>
>
>   
Stefan:

There is or was a lurker here from AMD.  Maybe you could forward your
patches to them to get the extension fixed?

James McKenzie



From nlaroche at vt.edu  Mon Sep  7 01:45:43 2009
From: nlaroche at vt.edu (Nicholas LaRoche)
Date: Mon, 07 Sep 2009 02:45:43 -0400
Subject: Question regarding SIO_GET_EXTENSION_FUNCTION_POINTER
Message-ID: <4AA4AC17.8010406@vt.edu>

I ran into a bug last week regarding the lack of 
SIO_GET_EXTENSION_FUNCTION_POINTER support in WSAIoctl.

Are there any outstanding issues preventing it's implementation?

Perhaps if anyone has worked in this area, are there any things I should 
look out for when trying to implement it? At first glance it looks like 
returning an arbitrary pointer may prove tricky since wine likes to 
relocate DLLs to unpredictable addresses at runtime. (i.e. kernel32.dll 
is not predictably mapped to a single address as with Windows XP; 
turning off ASR for the current shell has no effect)

-Nick


From joel at airwebreathe.org.uk  Mon Sep  7 01:47:51 2009
From: joel at airwebreathe.org.uk (Joel Holdsworth)
Date: Mon, 07 Sep 2009 07:47:51 +0100
Subject: Finding IDB_VIEW_SMALL_COLOR
In-Reply-To: <4AA41EB1.2040607@gmail.com>
References: <1252268982.10305.86.camel@joel-desktop>
	<4AA41EB1.2040607@gmail.com>
Message-ID: <1252306071.10305.87.camel@joel-desktop>

Great thanks!

On Mon, 2009-09-07 at 00:42 +0400, Nikolay Sivov wrote:
> Joel Holdsworth wrote:
> > Hi All,
> >
> > Does anyone know what DLL the image 32-bit version the standard image
> > list IDB_VIEW_SMALL_COLOR is stored in in Windows? You can see some of
> > it in this screenshot:
> > http://www.airwebreathe.org.uk/IDB_VIEW_SMALL_COLOR.png. I might expect
> > it to be in comctl32.dll with the other common image lists... but it's
> > not - only the old 4-bit version of the image.
> >
> > Does anyone know where the 32-bit one is?
> >
> > Thanks
> > Joel
> >   
> Could be comctl32 v6 (located in winsxs subdir).
> 





From stefan at codeweavers.com  Mon Sep  7 03:59:07 2009
From: stefan at codeweavers.com (Stefan =?utf-8?q?D=C3=B6singer?=)
Date: Mon, 7 Sep 2009 10:59:07 +0200
Subject: [5/5] WineD3D: Use GL_ATI_meminfo if available
In-Reply-To: <4AA492D6.6070301@earthlink.net>
References: <200909051705.07807.stefan@codeweavers.com>
	<d658b69e0909061327g40e4d6e9l36c86e63a7887cda@mail.gmail.com>
	<4AA492D6.6070301@earthlink.net>
Message-ID: <200909071059.07289.stefan@codeweavers.com>

Am Monday 07 September 2009 06:57:58 schrieb James McKenzie:
> There is or was a lurker here from AMD.  Maybe you could forward your
> patches to them to get the extension fixed?
They already know - Henri and I talked to him earlier, he said they'll fix the 
extension somewhen. No ETA though


From Joerg-Cyril.Hoehle at t-systems.com  Mon Sep  7 06:16:39 2009
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Mon, 7 Sep 2009 13:16:39 +0200
Subject: ddraw: Added support for WINED3DFMT_X8L8V8U8,
	WINED3DFMT_R8G8B8A8_SNORM and WINED3DFMT_R16G16_SNORM to
	PixelFormat_WineD3DtoDD
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B032D6D65@S4DE8PSAANK.mitte.t-com.de>

Stephan,

All the patches proposed to bug #16559 forget one thing:

it cannot be right to patch only PixelFormat_WineD3DtoDD without patching its converse function in the same file, PixelFormat_DD2WineD3D.

There's no gain in silencing a fixme by introducing internal inconsistency in the source code.

I had my own patch which changed both but for X8L8V8U8 only, but never published it because I observed no visual difference in the one app I tested, and had no time for 3 other ones I own, nor the other formats.

I'm left wondering which of the pixelformats actually produces a visual difference as e.g. in comment #27.
BTW, I suggest you submit individual patches, one per format.

Regards,
	J?rg H?hle


From mike.kaplinskiy at gmail.com  Mon Sep  7 09:13:47 2009
From: mike.kaplinskiy at gmail.com (Mike Kaplinskiy)
Date: Mon, 7 Sep 2009 10:13:47 -0400
Subject: Question regarding SIO_GET_EXTENSION_FUNCTION_POINTER
In-Reply-To: <4AA4AC17.8010406@vt.edu>
References: <4AA4AC17.8010406@vt.edu>
Message-ID: <4d8b5aa80909070713i700ad4faj75e1d43c6e7ad887@mail.gmail.com>

On Mon, Sep 7, 2009 at 2:45 AM, Nicholas LaRoche<nlaroche at vt.edu> wrote:
> I ran into a bug last week regarding the lack of
> SIO_GET_EXTENSION_FUNCTION_POINTER support in WSAIoctl.
>
> Are there any outstanding issues preventing it's implementation?
>
> Perhaps if anyone has worked in this area, are there any things I should
> look out for when trying to implement it? At first glance it looks like
> returning an arbitrary pointer may prove tricky since wine likes to relocate
> DLLs to unpredictable addresses at runtime. (i.e. kernel32.dll is not
> predictably mapped to a single address as with Windows XP; turning off ASR
> for the current shell has no effect)
>
> -Nick
>
>
>

There is nothing particularly hard about implementing it.
SIO_GET_EXTENSION_FUNCTION_POINTER is microsoft's special "winsock
extensions"; it is a way to call functions like AcceptEx,
GetAcceptExSockaddrs, ConnectEx, DisconnectEx, and TransmitFile. Each
of these functions has its own guid which you pass to wsaioctl to get
a pointer to it (look at ws2_32 acceptex tests). It doesn't matter
what the memory maps to, it's simply that they are not implemented.

For AcceptEx & GetAcceptExSockaddrs, there is a patch in the mailing
list that implemented them, but Alexandre rejected the patch.

Mike.


From jjmckenzie51 at earthlink.net  Mon Sep  7 09:24:01 2009
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Mon, 07 Sep 2009 07:24:01 -0700
Subject: [5/5] WineD3D: Use GL_ATI_meminfo if available
In-Reply-To: <200909071059.07289.stefan@codeweavers.com>
References: <200909051705.07807.stefan@codeweavers.com>
	<d658b69e0909061327g40e4d6e9l36c86e63a7887cda@mail.gmail.com>
	<4AA492D6.6070301@earthlink.net>
	<200909071059.07289.stefan@codeweavers.com>
Message-ID: <4AA51781.10000@earthlink.net>

Stefan D?singer wrote:
> Am Monday 07 September 2009 06:57:58 schrieb James McKenzie:
>   
>> There is or was a lurker here from AMD.  Maybe you could forward your
>> patches to them to get the extension fixed?
>>     
> They already know - Henri and I talked to him earlier, he said they'll fix the 
> extension somewhen. No ETA though
>   
I guess we will have to wait on them.  Hopefully they will ask us to
test and refine the extension.

James McKenzie



From nlaroche at vt.edu  Mon Sep  7 10:08:22 2009
From: nlaroche at vt.edu (Nicholas LaRoche)
Date: Mon, 07 Sep 2009 11:08:22 -0400
Subject: Question regarding SIO_GET_EXTENSION_FUNCTION_POINTER
In-Reply-To: <4d8b5aa80909070713i700ad4faj75e1d43c6e7ad887@mail.gmail.com>
References: <4AA4AC17.8010406@vt.edu>
	<4d8b5aa80909070713i700ad4faj75e1d43c6e7ad887@mail.gmail.com>
Message-ID: <4AA521E6.5060702@vt.edu>

Mike Kaplinskiy wrote:
> On Mon, Sep 7, 2009 at 2:45 AM, Nicholas LaRoche<nlaroche at vt.edu> wrote:
>> I ran into a bug last week regarding the lack of
>> SIO_GET_EXTENSION_FUNCTION_POINTER support in WSAIoctl.
>>
>> Are there any outstanding issues preventing it's implementation?
>>
>> Perhaps if anyone has worked in this area, are there any things I should
>> look out for when trying to implement it? At first glance it looks like
>> returning an arbitrary pointer may prove tricky since wine likes to relocate
>> DLLs to unpredictable addresses at runtime. (i.e. kernel32.dll is not
>> predictably mapped to a single address as with Windows XP; turning off ASR
>> for the current shell has no effect)
>>
>> -Nick
>>
>>
>>
> 
> There is nothing particularly hard about implementing it.
> SIO_GET_EXTENSION_FUNCTION_POINTER is microsoft's special "winsock
> extensions"; it is a way to call functions like AcceptEx,
> GetAcceptExSockaddrs, ConnectEx, DisconnectEx, and TransmitFile. Each
> of these functions has its own guid which you pass to wsaioctl to get
> a pointer to it (look at ws2_32 acceptex tests). It doesn't matter
> what the memory maps to, it's simply that they are not implemented.
> 
> For AcceptEx & GetAcceptExSockaddrs, there is a patch in the mailing
> list that implemented them, but Alexandre rejected the patch.
> 
> Mike.
> 

Those patches are exactly what I was looking for. Thanks!

What revision did you test on?

-Nick



From mike.kaplinskiy at gmail.com  Mon Sep  7 10:31:10 2009
From: mike.kaplinskiy at gmail.com (Mike Kaplinskiy)
Date: Mon, 7 Sep 2009 11:31:10 -0400
Subject: Question regarding SIO_GET_EXTENSION_FUNCTION_POINTER
In-Reply-To: <4AA521E6.5060702@vt.edu>
References: <4AA4AC17.8010406@vt.edu>
	<4d8b5aa80909070713i700ad4faj75e1d43c6e7ad887@mail.gmail.com> 
	<4AA521E6.5060702@vt.edu>
Message-ID: <4d8b5aa80909070831u2d6772ddtea7b97bb63f4eb32@mail.gmail.com>

On Mon, Sep 7, 2009 at 11:08 AM, Nicholas LaRoche<nlaroche at vt.edu> wrote:
> Mike Kaplinskiy wrote:
>>
>> On Mon, Sep 7, 2009 at 2:45 AM, Nicholas LaRoche<nlaroche at vt.edu> wrote:
>>>
>>> I ran into a bug last week regarding the lack of
>>> SIO_GET_EXTENSION_FUNCTION_POINTER support in WSAIoctl.
>>>
>>> Are there any outstanding issues preventing it's implementation?
>>>
>>> Perhaps if anyone has worked in this area, are there any things I should
>>> look out for when trying to implement it? At first glance it looks like
>>> returning an arbitrary pointer may prove tricky since wine likes to
>>> relocate
>>> DLLs to unpredictable addresses at runtime. (i.e. kernel32.dll is not
>>> predictably mapped to a single address as with Windows XP; turning off
>>> ASR
>>> for the current shell has no effect)
>>>
>>> -Nick
>>>
>>>
>>>
>>
>> There is nothing particularly hard about implementing it.
>> SIO_GET_EXTENSION_FUNCTION_POINTER is microsoft's special "winsock
>> extensions"; it is a way to call functions like AcceptEx,
>> GetAcceptExSockaddrs, ConnectEx, DisconnectEx, and TransmitFile. Each
>> of these functions has its own guid which you pass to wsaioctl to get
>> a pointer to it (look at ws2_32 acceptex tests). It doesn't matter
>> what the memory maps to, it's simply that they are not implemented.
>>
>> For AcceptEx & GetAcceptExSockaddrs, there is a patch in the mailing
>> list that implemented them, but Alexandre rejected the patch.
>>
>> Mike.
>>
>
> Those patches are exactly what I was looking for. Thanks!
>
> What revision did you test on?
>
> -Nick
>
>

The last revision i had was try 6, and it should apply cleanly to master.

Mike.


From eric.pouech at orange.fr  Mon Sep  7 14:09:41 2009
From: eric.pouech at orange.fr (Eric Pouech)
Date: Mon, 07 Sep 2009 21:09:41 +0200
Subject: msvcrt: dont overwrite the standard streams (with test, try 5)
In-Reply-To: <4AA3CB11.5060303@dawncrow.de>
References: <4AA3BFF1.3000203@dawncrow.de> <4AA3C718.4040904@orange.fr>
	<4AA3CB11.5060303@dawncrow.de>
Message-ID: <4AA55A75.6040805@orange.fr>

Andr? Hentschel a ?crit :
> Eric Pouech schrieb:
>   
>> Hi Andr?
>> a couple of comments to your patch
>>     
> always welcome!
>
>   
>> IMO, we should also test that cbReserved2 is >= sizeof(unsigned)
>> otherwise we'd be in trouble
>>     
> maybe you had something like that patch in mind:
> http://www.winehq.org/pipermail/wine-patches/2009-August/077766.html
> it checks if the size makes sense
>
>
>   
no
I'm just saying that since we do something like *(unsigned*)lpReserved, 
we'd better check that cbReserved2 >= sizeof(unsigned)
I don't think that your patch is correct. If you want a coding of the 
"reserved" block, that you can extend, I think you could well have 
additional information *after* the block of handles+flags we're considering

therefore the valid tests I see would be:
cdReserved2 >= sizeof(unsigned)
numH = *(unsigned*)lpReserved2
error if sizeof(unsigned) + numH*(1+sizeof(HANDLE)) > cbReserved2

A+


-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)





From nerv at dawncrow.de  Mon Sep  7 14:45:19 2009
From: nerv at dawncrow.de (=?ISO-8859-15?Q?Andr=E9_Hentschel?=)
Date: Mon, 07 Sep 2009 21:45:19 +0200
Subject: msvcrt: dont overwrite the standard streams (with test, try 6)
In-Reply-To: <4AA55A75.6040805@orange.fr>
References: <4AA3BFF1.3000203@dawncrow.de> <4AA3C718.4040904@orange.fr>
	<4AA3CB11.5060303@dawncrow.de> <4AA55A75.6040805@orange.fr>
Message-ID: <4AA562CF.9090007@dawncrow.de>

Eric Pouech schrieb:
> Andr? Hentschel a ?crit :
>> Eric Pouech schrieb:
>>  
>>> Hi Andr?
>>> a couple of comments to your patch
>>>     
>> always welcome!
>>
>>  
>>> IMO, we should also test that cbReserved2 is >= sizeof(unsigned)
>>> otherwise we'd be in trouble
>>>     
>> maybe you had something like that patch in mind:
>> http://www.winehq.org/pipermail/wine-patches/2009-August/077766.html
>> it checks if the size makes sense
>>
>>
>>   
> no
> I'm just saying that since we do something like *(unsigned*)lpReserved,
> we'd better check that cbReserved2 >= sizeof(unsigned)
> I don't think that your patch is correct. If you want a coding of the
> "reserved" block, that you can extend, I think you could well have
> additional information *after* the block of handles+flags we're considering
> 
> therefore the valid tests I see would be:
> cdReserved2 >= sizeof(unsigned)
> numH = *(unsigned*)lpReserved2
> error if sizeof(unsigned) + numH*(1+sizeof(HANDLE)) > cbReserved2
> 
> A+
> 
> 
I already understood the problem you mentioned and sent try 6: http://www.winehq.org/pipermail/wine-patches/2009-September/078158.html
So for now this patch fixes a Problem, if we need it we also could check if the calculated size is bigger than the given one. (You were right with that, too)

-- 

Best Regards, Andr? Hentschel


From dank at kegel.com  Mon Sep  7 21:43:36 2009
From: dank at kegel.com (Dan Kegel)
Date: Mon, 7 Sep 2009 19:43:36 -0700
Subject: [RFC] Implement file attributes with xattr on mac and linux (fixes 
	bug 15679)
Message-ID: <a71bd89a0909071943y2b72b8fj226f745954a01b4a@mail.gmail.com>

Builds and runs on mac and linux,
passes tests on linux and vista.
Fixes http://bugs.winehq.org/show_bug.cgi?id=15679

It's worth discussing a bit before posting to wine-patches.
This patch uses filesystem extended attributes to
store the win32 attribute bits.  These are available
fairly widely finally - I think current Linux, Mac, and Solaris
all support some form of extended attributes.

Because the extended attribute API varies somewhat wildly
between operating systems, I went whole-hog and used
autoconf to detect the differences between the api on
linux and macosx.  Somebody else should be able to
add solaris support without much difficulty if this is approved.

The convention chosen is that the win32 file attributes
are stored as a four digit hex number in the extended
attribute named user.wine.attr.  (The 'user' prefix is suggested
by http://www.freedesktop.org/wiki/CommonExtendedAttributes .)

For backwards compatibility,
if a native file lacks extended attributes; it is reported as having
ARCHIVE attribute.
Likewise, if a file just has the ARCHIVE attribute set, there is no
native extended attribute.

Here's an example:
  touch foo.dat
  wine cmd /c attrib -a foo.dat
  xattr -l foo.dat
This outputs
  user.wine.attr: 0000

i.e. because the file has anything but the default attribute, we store
the entire win32 attribute bitmask in the extended attribute.

Another example:
  touch bar.dat
  wine cmd /c attrib +s bar.dat
  xattr -l bar.dat
This outputs
  user.wine.attr: 0024
or ARCHIVE | SYSTEM.

This convention should be thought over carefully before we go with it.
I also considered using individual xattrs for each attribute bit,
but discarded that idea as adding overhead and complexity
without any obvious payoff.

Finally, the implementation of attrib in cmd is lame -- it only handles
two arguments.  It's enough for the moment, but the real attrib
can handle multiple attribute flags, and we should support that sometime.

So, what do folks think?
- Dan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: attrib-5.patch
Type: text/x-patch
Size: 38163 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090907/d87e82c4/attachment-0001.bin>

From austinenglish at gmail.com  Tue Sep  8 03:24:56 2009
From: austinenglish at gmail.com (Austin English)
Date: Tue, 8 Sep 2009 03:24:56 -0500
Subject: wined3d: Fix vendor detection when using an Intel X4500HD
In-Reply-To: <1252385530.5103.1.camel@jaime-dell>
References: <1252385530.5103.1.camel@jaime-dell>
Message-ID: <b6bb06270909080124n7c2efc33q8048f182a1f40cfb@mail.gmail.com>

On Mon, Sep 7, 2009 at 11:52 PM, Jaime Rave<jaimerave at gmail.com> wrote:
> This patch fix the fixme:
>
> fixme:d3d_caps:wined3d_guess_vendor Received unrecognized GL_VENDOR
> "Tungsten Graphics, Inc". Returning VENDOR_WINE.
>
>
>
>

Forgot the patch.

-- 
-Austin


From julliard at winehq.org  Tue Sep  8 05:32:29 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 08 Sep 2009 12:32:29 +0200
Subject: [RFC] Implement file attributes with xattr on mac and linux
	(fixes bug 15679)
In-Reply-To: <a71bd89a0909071943y2b72b8fj226f745954a01b4a@mail.gmail.com> (Dan
	Kegel's message of "Mon, 7 Sep 2009 19:43:36 -0700")
References: <a71bd89a0909071943y2b72b8fj226f745954a01b4a@mail.gmail.com>
Message-ID: <87vdjtd8w2.fsf@wine.dyndns.org>

Dan Kegel <dank at kegel.com> writes:

> The convention chosen is that the win32 file attributes
> are stored as a four digit hex number in the extended
> attribute named user.wine.attr.  (The 'user' prefix is suggested
> by http://www.freedesktop.org/wiki/CommonExtendedAttributes .)

You should use the user.DosAttrib format defined by Samba.

-- 
Alexandre Julliard
julliard at winehq.org


From hverbeet at gmail.com  Tue Sep  8 06:44:27 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Tue, 8 Sep 2009 13:44:27 +0200
Subject: [wined3d][1/3] Allow infinity count of backbuffers in 
	IWineD3DDeviceImpl_CreateSwapChain()
In-Reply-To: <772.1165-12195-1233812481-1252407346@seznam.cz>
References: <772.1165-12195-1233812481-1252407346@seznam.cz>
Message-ID: <d658b69e0909080444y49dd952dpade7a8a2561554f@mail.gmail.com>

- Please don't use TCHAR etc. in Wine.
- You still didn't prove you need to copy the data for each backbuffer.
- You still have whitespace errors.


From paul.vriens.wine at gmail.com  Tue Sep  8 10:50:28 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Tue, 08 Sep 2009 17:50:28 +0200
Subject: [3/3]msctf/tests: test ITfThreadMgr::AssociateFocus
In-Reply-To: <4A9D0EAB.8070409@codeweavers.com>
References: <4A9D0EAB.8070409@codeweavers.com>
Message-ID: <4AA67D44.6050203@gmail.com>

On 09/01/2009 02:08 PM, Aric Stewart wrote:
> ---
> dlls/msctf/tests/inputprocessor.c | 141
> ++++++++++++++++++++++++++++++++++++-
> 1 files changed, 139 insertions(+), 2 deletions(-)
>
>
>
> ------------------------------------------------------------------------
>
>
Hi Aric,

This one introduced some test failures on Vista and higher. Could you 
have a look?

-- 
Cheers,

Paul.


From aric at codeweavers.com  Tue Sep  8 10:52:49 2009
From: aric at codeweavers.com (Aric Stewart)
Date: Tue, 08 Sep 2009 10:52:49 -0500
Subject: [3/3]msctf/tests: test ITfThreadMgr::AssociateFocus
In-Reply-To: <4AA67D44.6050203@gmail.com>
References: <4A9D0EAB.8070409@codeweavers.com> <4AA67D44.6050203@gmail.com>
Message-ID: <4AA67DD1.4030504@codeweavers.com>

Thanks. I will take a look.

-aric

Paul Vriens wrote:
> On 09/01/2009 02:08 PM, Aric Stewart wrote:
>> ---
>> dlls/msctf/tests/inputprocessor.c | 141
>> ++++++++++++++++++++++++++++++++++++-
>> 1 files changed, 139 insertions(+), 2 deletions(-)
>>
>>
>>
>> ------------------------------------------------------------------------
>>
>>
> Hi Aric,
> 
> This one introduced some test failures on Vista and higher. Could you 
> have a look?
> 


From nlaroche at vt.edu  Tue Sep  8 11:03:22 2009
From: nlaroche at vt.edu (Nicholas LaRoche)
Date: Tue, 08 Sep 2009 12:03:22 -0400
Subject: Question regarding SIO_GET_EXTENSION_FUNCTION_POINTER
In-Reply-To: <4d8b5aa80909070831u2d6772ddtea7b97bb63f4eb32@mail.gmail.com>
References: <4AA4AC17.8010406@vt.edu>
	<4d8b5aa80909070713i700ad4faj75e1d43c6e7ad887@mail.gmail.com>
	<4AA521E6.5060702@vt.edu>
	<4d8b5aa80909070831u2d6772ddtea7b97bb63f4eb32@mail.gmail.com>
Message-ID: <4AA6804A.3010201@vt.edu>

Mike Kaplinskiy wrote:
> On Mon, Sep 7, 2009 at 11:08 AM, Nicholas LaRoche<nlaroche at vt.edu> wrote:
>> Mike Kaplinskiy wrote:
>>> On Mon, Sep 7, 2009 at 2:45 AM, Nicholas LaRoche<nlaroche at vt.edu> wrote:
>>>> I ran into a bug last week regarding the lack of
>>>> SIO_GET_EXTENSION_FUNCTION_POINTER support in WSAIoctl.
>>>>
>>>> Are there any outstanding issues preventing it's implementation?
>>>>
>>>> Perhaps if anyone has worked in this area, are there any things I should
>>>> look out for when trying to implement it? At first glance it looks like
>>>> returning an arbitrary pointer may prove tricky since wine likes to
>>>> relocate
>>>> DLLs to unpredictable addresses at runtime. (i.e. kernel32.dll is not
>>>> predictably mapped to a single address as with Windows XP; turning off
>>>> ASR
>>>> for the current shell has no effect)
>>>>
>>>> -Nick
>>>>
>>>>
>>>>
>>> There is nothing particularly hard about implementing it.
>>> SIO_GET_EXTENSION_FUNCTION_POINTER is microsoft's special "winsock
>>> extensions"; it is a way to call functions like AcceptEx,
>>> GetAcceptExSockaddrs, ConnectEx, DisconnectEx, and TransmitFile. Each
>>> of these functions has its own guid which you pass to wsaioctl to get
>>> a pointer to it (look at ws2_32 acceptex tests). It doesn't matter
>>> what the memory maps to, it's simply that they are not implemented.
>>>
>>> For AcceptEx & GetAcceptExSockaddrs, there is a patch in the mailing
>>> list that implemented them, but Alexandre rejected the patch.
>>>
>>> Mike.
>>>
>> Those patches are exactly what I was looking for. Thanks!
>>
>> What revision did you test on?
>>
>> -Nick
>>
>>
> 
> The last revision i had was try 6, and it should apply cleanly to master.
> 
> Mike.
> 

I had a few issues applying your patches to the latest git revision, but 
  I did find equivalent functionality in wine-hacks. This solved my 
problem however the code in this tree doesn't support AcceptEx with TCP.

http://repo.or.cz/w/wine/hacks.git

-Nick


From mike.kaplinskiy at gmail.com  Tue Sep  8 13:00:06 2009
From: mike.kaplinskiy at gmail.com (Mike Kaplinskiy)
Date: Tue, 8 Sep 2009 14:00:06 -0400
Subject: Question regarding SIO_GET_EXTENSION_FUNCTION_POINTER
In-Reply-To: <4AA6804A.3010201@vt.edu>
References: <4AA4AC17.8010406@vt.edu>
	<4d8b5aa80909070713i700ad4faj75e1d43c6e7ad887@mail.gmail.com> 
	<4AA521E6.5060702@vt.edu>
	<4d8b5aa80909070831u2d6772ddtea7b97bb63f4eb32@mail.gmail.com> 
	<4AA6804A.3010201@vt.edu>
Message-ID: <4d8b5aa80909081100p36a3f5e9y42437105961371c9@mail.gmail.com>

On Tue, Sep 8, 2009 at 12:03 PM, Nicholas LaRoche<nlaroche at vt.edu> wrote:
>
> I had a few issues applying your patches to the latest git revision, but ?I
> did find equivalent functionality in wine-hacks. This solved my problem
> however the code in this tree doesn't support AcceptEx with TCP.
>
> http://repo.or.cz/w/wine/hacks.git
>
> -Nick
>

I'm fairly certain it works with TCP as there is nothing protocol
specific in the code. Also the wine tests for AcceptEx are TCP based
and pass with the series. Try looking at the winsock log to see if
there are any errors. I think we might want to take this off the list
though, since it's a rejected patch.

Mike.


From julliard at winehq.org  Tue Sep  8 15:25:34 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 08 Sep 2009 22:25:34 +0200
Subject: ntdll: Do not accept device control requests with invalid and/or
	incompatible handles
In-Reply-To: <1252161985.2994.2.camel@donpedro> (Peter Dons Tychsen's message
	of "Sat, 05 Sep 2009 16:46:25 +0200")
References: <1252161985.2994.2.camel@donpedro>
Message-ID: <87my5589q9.fsf@wine.dyndns.org>

Peter Dons Tychsen <donpedro at tdcadsl.dk> writes:

> +static void test_device_control(void)
> +{
> +    IO_STATUS_BLOCK io;
> +    NTSTATUS status;
> +
> +    /* Try using a bugus handle for I/O control */
> +    HANDLE handle = (HANDLE)0xdeadbeef;
> +    status = pNtDeviceIoControlFile(handle, NULL, NULL, NULL, &io, IOCTL_SERIAL_SET_BAUD_RATE, NULL, 0, NULL, 0);
> +    ok(status == STATUS_INVALID_HANDLE, "Expected %08X, got %08X\n", STATUS_INVALID_HANDLE, status);
> +
> +    /* Try using an valid (but wrong) handle for I/O control */
> +    handle = GetStdHandle(STD_INPUT_HANDLE);
> +    status = pNtDeviceIoControlFile(handle, NULL, NULL, NULL, &io, IOCTL_SERIAL_SET_BAUD_RATE, NULL, 0, NULL, 0);
> +    ok(status == STATUS_INVALID_HANDLE, "Expected %08X, got %08X\n", STATUS_INVALID_HANDLE, status);

GetStdHandle returns a console handle which is not a valid ntdll handle,
so you are not testing what you think.

-- 
Alexandre Julliard
julliard at winehq.org


From kai.blin at gmail.com  Tue Sep  8 16:56:33 2009
From: kai.blin at gmail.com (Kai Blin)
Date: Tue, 8 Sep 2009 23:56:33 +0200
Subject: [ntdll,
	cmd] Implement file attributes with xattr on mac and linux (fixes bug
	15679)
In-Reply-To: <a71bd89a0909080711x4f57cd26i12285c0008373672@mail.gmail.com>
References: <a71bd89a0909080711x4f57cd26i12285c0008373672@mail.gmail.com>
Message-ID: <200909082356.36985.kai.blin@gmail.com>

On Tuesday 08 September 2009 16:11:06 Dan Kegel wrote:

> This patch uses filesystem extended attributes in
> a way compatible with Samba 3 to store the win32 attribute bits.
> It builds and runs on mac and linux, passes tests on linux and vista,
> and should be easy-ish to port to solaris (though who knows
> what xattr solaris' native cifs server uses, hopefully it's the
> same as what samba 3 does).

As JRA already replied with more Samba3-specific things, just a word about the 
Samba4 handling. In the last months, we've been working on getting more and 
more features of Samba3 and Samba4 use the same codebase or at least behave 
the same way. There's a good chance that both implementations will converge 
to one sort of behavior, so if we get that implemented we should be fine.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090908/298b4e1d/attachment.pgp>

From fgatwork at verizon.net  Tue Sep  8 18:15:36 2009
From: fgatwork at verizon.net (Frank Gruman)
Date: Tue, 08 Sep 2009 19:15:36 -0400
Subject: http://bugs.winehq.org/show_bug.cgi?id=18337
Message-ID: <1252451736.5090.6.camel@toybox.thegrumans>

I have been using wine for various tools and utilities at work and home
for some time now.  Recently I tried to use wine to run the VMware
Infrastructure Client and ran into bug 18337
(http://bugs.winehq.org/show_bug.cgi?id=18337).

I am pasting my comments on that bug here to avoid repetition
(http://bugs.winehq.org/show_bug.cgi?id=18337#c4).


<paste>
So - I looked through the code (current git @1.1.29) and compared to the
1.0 release (because of comment 1) and did not see that
CERT_CHAIN_POLICY_SSL was ever implemented.

Looking at chain.c, line 1886-1902 I can see the switch-case statement
where this would have been handled.  The problem I ran into while trying
to keep up with the code was figuring out what the verify_* methods are
trying to do.

I'd really like to see this work and may have some spare cycles to help
out.  The problem is that I don't understand everything happening in
these methods - can I get some pointers to what is happening or what
should happen in the yet to be created verify_ssl_policy() method?
</paste>

Regards,
Frank



From fgatwork at verizon.net  Tue Sep  8 18:19:37 2009
From: fgatwork at verizon.net (Frank Gruman)
Date: Tue, 08 Sep 2009 19:19:37 -0400
Subject: Wine - crypt32 - CERT_CHAIN_POLICY_SSL not implemented
In-Reply-To: <1252451736.5090.6.camel@toybox.thegrumans>
References: <1252451736.5090.6.camel@toybox.thegrumans>
Message-ID: <1252451977.5090.8.camel@toybox.thegrumans>

On Tue, 2009-09-08 at 19:15 -0400, Frank Gruman wrote:
> I have been using wine for various tools and utilities at work and
> home
> for some time now.  Recently I tried to use wine to run the VMware
> Infrastructure Client and ran into bug 18337
> (http://bugs.winehq.org/show_bug.cgi?id=18337).
> 
> I am pasting my comments on that bug here to avoid repetition
> (http://bugs.winehq.org/show_bug.cgi?id=18337#c4).
> 
> 
> <paste>
> So - I looked through the code (current git @1.1.29) and compared to
> the
> 1.0 release (because of comment 1) and did not see that
> CERT_CHAIN_POLICY_SSL was ever implemented.
> 
> Looking at chain.c, line 1886-1902 I can see the switch-case statement
> where this would have been handled.  The problem I ran into while
> trying
> to keep up with the code was figuring out what the verify_* methods
> are
> trying to do.
> 
> I'd really like to see this work and may have some spare cycles to
> help
> out.  The problem is that I don't understand everything happening in
> these methods - can I get some pointers to what is happening or what
> should happen in the yet to be created verify_ssl_policy() method?
> </paste>
> 
> Regards,
> Frank
> 
> 

BAH!!  Apologies for pasting the wrong content into the subject line -
meant to insert a more meaningful subject.

Regards,
Frank



From juan.lang at gmail.com  Tue Sep  8 18:33:33 2009
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 8 Sep 2009 16:33:33 -0700
Subject: http://bugs.winehq.org/show_bug.cgi?id=18337
In-Reply-To: <1252451736.5090.6.camel@toybox.thegrumans>
References: <1252451736.5090.6.camel@toybox.thegrumans>
Message-ID: <3a768c550909081633r72e3b284l2dfbace77c564802@mail.gmail.com>

Hi Frank,

On Tue, Sep 8, 2009 at 4:15 PM, Frank Gruman<fgatwork at verizon.net> wrote:
> Looking at chain.c, line 1886-1902 I can see the switch-case statement
> where this would have been handled. ?The problem I ran into while trying
> to keep up with the code was figuring out what the verify_* methods are
> trying to do.
>
> I'd really like to see this work and may have some spare cycles to help
> out. ?The problem is that I don't understand everything happening in
> these methods - can I get some pointers to what is happening or what
> should happen in the yet to be created verify_ssl_policy() method?

The short answer is, if you don't care about the validity of the
certificates you're trying to connect to, you can hack this function
to return TRUE rather than FALSE.  This is an awful hack, however, and
can't be accepted into the Wine tree, but if all you care about is to
get the darn thing to work, it might be enough for you.

The longer answer is the generic Wine answer:  what should happen is
whatever Windows does.  To find out what Windows does, you need to
write tests for it.  Have a look at dlls/crypt32/tests/chain.c for a
start.  You'll want to mimic the existing tests, and try with
different SSL_EXTRA_CERT_CHAIN_POLICY_PARA values.

Since that's not very specific, here's a slightly more directed
answer:  the as-yet-unwritten verify_ssl_policy() should call
verify_base_policy() first.  If it succeeds, it should verify that the
certificate matches the intended use.  At a minimum, if the
SSL_EXTRA_CERT_CHAIN_POLICY_PARA is specified, you need to verify that
its pwszServerName matches the subject name in the certificate.  Be
careful not to introduce the embedded NULL character vulnerability
(see e.g. CVE-2009-2417.)  There are probably more checks needed,
either in verify_base_policy or in verify_ssl_policy, e.g. checking
the key usage extension.  RFC3280 is a good guide for the kinds of
checks that need to be done.

Intimidated yet?  That's why I haven't gotten around to it myself:
it's not a quick fix, and I haven't had a lot of free time.  But if
you have the time to do it right, by all means have a go!
--Juan


From juan.lang at gmail.com  Tue Sep  8 18:33:33 2009
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 8 Sep 2009 16:33:33 -0700
Subject: http://bugs.winehq.org/show_bug.cgi?id=18337
In-Reply-To: <1252451736.5090.6.camel@toybox.thegrumans>
References: <1252451736.5090.6.camel@toybox.thegrumans>
Message-ID: <3a768c550909081633r72e3b284l2dfbace77c564802@mail.gmail.com>

Hi Frank,

On Tue, Sep 8, 2009 at 4:15 PM, Frank Gruman<fgatwork at verizon.net> wrote:
> Looking at chain.c, line 1886-1902 I can see the switch-case statement
> where this would have been handled. ?The problem I ran into while trying
> to keep up with the code was figuring out what the verify_* methods are
> trying to do.
>
> I'd really like to see this work and may have some spare cycles to help
> out. ?The problem is that I don't understand everything happening in
> these methods - can I get some pointers to what is happening or what
> should happen in the yet to be created verify_ssl_policy() method?

The short answer is, if you don't care about the validity of the
certificates you're trying to connect to, you can hack this function
to return TRUE rather than FALSE.  This is an awful hack, however, and
can't be accepted into the Wine tree, but if all you care about is to
get the darn thing to work, it might be enough for you.

The longer answer is the generic Wine answer:  what should happen is
whatever Windows does.  To find out what Windows does, you need to
write tests for it.  Have a look at dlls/crypt32/tests/chain.c for a
start.  You'll want to mimic the existing tests, and try with
different SSL_EXTRA_CERT_CHAIN_POLICY_PARA values.

Since that's not very specific, here's a slightly more directed
answer:  the as-yet-unwritten verify_ssl_policy() should call
verify_base_policy() first.  If it succeeds, it should verify that the
certificate matches the intended use.  At a minimum, if the
SSL_EXTRA_CERT_CHAIN_POLICY_PARA is specified, you need to verify that
its pwszServerName matches the subject name in the certificate.  Be
careful not to introduce the embedded NULL character vulnerability
(see e.g. CVE-2009-2417.)  There are probably more checks needed,
either in verify_base_policy or in verify_ssl_policy, e.g. checking
the key usage extension.  RFC3280 is a good guide for the kinds of
checks that need to be done.

Intimidated yet?  That's why I haven't gotten around to it myself:
it's not a quick fix, and I haven't had a lot of free time.  But if
you have the time to do it right, by all means have a go!
--Juan


From kennybobs at o2.co.uk  Tue Sep  8 19:21:21 2009
From: kennybobs at o2.co.uk (Ken Sharp)
Date: Wed, 09 Sep 2009 01:21:21 +0100
Subject: Add jscript component to Bugzilla?
Message-ID: <4AA6F501.5050603@o2.co.uk>

Any chance someone could add a jscript component to Bugzilla?  It's used 
a decent amount to warrant it...


From marcus at jet.franken.de  Wed Sep  9 01:28:03 2009
From: marcus at jet.franken.de (Marcus Meissner)
Date: Wed, 9 Sep 2009 08:28:03 +0200
Subject: CPPCheck Sept 8 GIT
In-Reply-To: <504692.96517.qm@web112605.mail.gq1.yahoo.com>
References: <504692.96517.qm@web112605.mail.gq1.yahoo.com>
Message-ID: <20090909062803.GA5552@galeere.jet.franken.de>

On Tue, Sep 08, 2009 at 07:21:03PM -0700, chris ahrendt wrote:
> [/home/cahrendt/wine-git/dlls/msvcrt/tests/file.c:982]: (error) 
> Deallocating a deallocated pointer: stream2
> [/home/cahrendt/wine-git/dlls/msvcrt/tests/file.c:966]: (error) Resource 
> leak: stream3
> [/home/cahrendt/wine-git/dlls/msvcrt/tests/file.c:973]: (error) Resource 
> leak: stream4
> [/home/cahrendt/wine-git/dlls/msvcrt/tests/heap.c:433]: (possible error) 
> Memory leak: mem
> [/home/cahrendt/wine-git/dlls/ntdll/directory.c:2339]: (error) Resource 
> leak: old_cwd
> [/home/cahrendt/wine-git/dlls/ntdll/server.c:802]: (error) Resource leak: fd
> [/home/cahrendt/wine-git/dlls/ntdll/server.c:882]: (error) Resource 
> leak: fd_cwd
> [/home/cahrendt/wine-git/dlls/rpcrt4/tests/server.c:1189]: (possible 
> error) Array index out of bounds
> [/home/cahrendt/wine-git/dlls/wineoss.drv/mmaux.c:146]: (error) Resource 
> leak: mixer
> [/home/cahrendt/wine-git/dlls/wineoss.drv/mmaux.c:208]: (error) Resource 
> leak: mixer

These were committed yesterday ... Did you run before the large commit
or afterwards?

Ciao, marcus


From kai.blin at gmail.com  Wed Sep  9 03:29:13 2009
From: kai.blin at gmail.com (Kai Blin)
Date: Wed, 9 Sep 2009 10:29:13 +0200
Subject: Google Summer of Code mentor summit Oct 24th-25th
Message-ID: <200909091029.15944.kai.blin@gmail.com>

Hi folks,

Wine gets to send two delegates to the Google Summer of Code mentor summit in 
Mountain View, CA, this October. Is anybody who mentored interested in going?

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090909/0fa31f2e/attachment-0001.pgp>

From wine at stwm.de  Wed Sep  9 04:09:15 2009
From: wine at stwm.de (Wolfgang Walter)
Date: Wed, 9 Sep 2009 11:09:15 +0200
Subject: Asynchronus serial port
In-Reply-To: <4d8b5aa80909021855t10aca983o4c96dcae7dbfeb2e@mail.gmail.com>
References: <4A9F0060.6080805@mail.ru>
	<4d8b5aa80909021855t10aca983o4c96dcae7dbfeb2e@mail.gmail.com>
Message-ID: <200909091109.16125.wine@stwm.de>

Am Donnerstag, 3. September 2009 schrieb Mike Kaplinskiy:
> On Wed, Sep 2, 2009 at 7:31 PM, Fenixk19<fenixk19 at mail.ru> wrote:
> > Hello! I've already post the
> > bug(http://bugs.winehq.org/show_bug.cgi?id=19713) on this subject, but i
> > need more help. So I've decided to write here.
> > There is a problem in wine. When I use asynchronous serial port read,
> > data never comes. Event, caused by select comes. But operation status
> > stays pending, and i can't do anything to this serial port anymore. In
> > windows it never get pending, and port can be accessed just after data
> > arrival. Seems to be wineserver problem, but i don't know, where to look
> > at. What code respond for asynchronous serial port in wineserver?
> > Alexander.
> > P.S. Test program attached.
>
> Hi,
>
> Alexandre would be the guy to talk to about wineserver-related things.
> Sadly he's off on a long weekend. Does the attached patch help solve
> the problem?

Isn't setting commio->iosb->u.Status racy?

commio->iosb may be set from wait_for_event() which is called by an extra 
thread or by io_control().

Couldn't it happen that

	wait_on starts the thread
	wait_for_event sets the commio->iosb->u.Status to STATUS_SUCCESS
	wait_on returns to io_control STATUS_PENDING
	io_control overwrites commio->iosb->u.Status with STATUS_PENDING

I think io_control() should set commio->iosb->u.Status to STATUS_PENDING 
before calling wait_on(). After wait_on() io_control() should not set 
commio->iosb->u.Status if wait_on() returns STATUS_PENDING. Here the idea:

------------------
    case IOCTL_SERIAL_WAIT_ON_MASK:
         if (lpOutBuffer && nOutBufferSize == sizeof(DWORD))
         {
             piosb->u.Status = STATUS_PENDING;
             piosb->Information = sz;
             if (!(status = wait_on(hDevice, fd, hEvent, piosb, lpOutBuffer)))
                 sz = sizeof(DWORD);
             else if (status == STATUS_PENDING)
                 return status;
         }
         else
             status = STATUS_INVALID_PARAMETER;
         break;
-------------------


Regards,
-- 
Wolfgang Walter
Studentenwerk M?nchen
Anstalt des ?ffentlichen Rechts
Leiter EDV
Leopoldstra?e 15
80802 M?nchen


From hverbeet at gmail.com  Wed Sep  9 05:47:37 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Wed, 9 Sep 2009 12:47:37 +0200
Subject: [PATCH 02/10] d3d10: Implement annotation parsing.
In-Reply-To: <4AA78148.4050107@web.de>
References: <4AA78148.4050107@web.de>
Message-ID: <d658b69e0909090347j25456405r1933310e76392b91@mail.gmail.com>

2009/9/9 Rico Sch?ller <kgbricola at web.de>:
> -static void parse_fx10_annotation(const char **ptr)
> +static HRESULT parse_fx10_annotation(struct d3d10_effect_variable *a, const char **ptr, const char *data)
>  {
> -    skip_dword_unknown(ptr, 3);
> +    DWORD offset;
> +
> +    read_dword(ptr, &offset);
> +    TRACE("Annotation name at offset %#x.\n", offset);
> +
> +    a->name = copy_name(data + offset);
> +    if (!a->name)
> +    {
> +        ERR("Failed to copy name.\n");
> +        return E_OUTOFMEMORY;
> +    }
> +    TRACE("Annotation name: %s.\n", a->name);
> +
> +    read_dword(ptr, &offset);
> +    TRACE("Annotation type info at offset %#x.\n", offset);
> +
> +    a->type = get_fx10_type(a->effect, data, offset);
> +    if (!a->type)
> +    {
> +        ERR("Failed to get variable type.\n");
> +        return E_FAIL;
> +    }
> +
> +    skip_dword_unknown(ptr, 1);
> +
> +    return S_OK;
>  }
It seems to me that this is just the same code for parsing variables
(that has implications for 1/10 as well).


From julliard at winehq.org  Wed Sep  9 06:20:30 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 09 Sep 2009 13:20:30 +0200
Subject: msxml3: Add IDispatchEx support to IXMLDOMElement (resend 2)
In-Reply-To: <4AA708B4.7080906@hotmail.com> (Alistair Leslie-Hughes's message
	of "Wed, 09 Sep 2009 11:45:24 +1000")
References: <4AA708B4.7080906@hotmail.com>
Message-ID: <878wgo8iv5.fsf@wine.dyndns.org>

Alistair Leslie-Hughes <leslie_alistair at hotmail.com> writes:

> Hi,
>      Feedback if something is wrong would be great.

domdoc.c:601: warning: ISO C90 forbids mixed declarations and code

-- 
Alexandre Julliard
julliard at winehq.org


From dmitry at codeweavers.com  Wed Sep  9 06:28:16 2009
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Wed, 9 Sep 2009 20:28:16 +0900
Subject: gdi32: Handle OEM_CHARSET
References: <4AA7955A.9020200@mail.ru>
Message-ID: <BF650EA40583407FA3797BB960182E15@DMITRY>

"Vladimir Pankratov" <scriptkid at mail.ru> wrote:

> --- a/dlls/gdi32/freetype.c 2009-08-08 13:27:23.000000000 +0500
> +++ b/dlls/gdi32/freetype.c 2009-09-07 19:58:58.000000000 +0500
> @@ -3576,6 +3576,7 @@
>     if(!TranslateCharsetInfo((DWORD*)(INT_PTR)lf.lfCharSet, &csi, TCI_SRCCHARSET)) {
>         switch(lf.lfCharSet) {
>  case DEFAULT_CHARSET:
> + case OEM_CHARSET:
>      csi.fs.fsCsb[0] = 0;
>      break;
>  default:

How is this different from the default case?

-- 
Dmitry.


From kgbricola at web.de  Wed Sep  9 06:41:17 2009
From: kgbricola at web.de (=?UTF-8?B?UmljbyBTY2jDvGxsZXI=?=)
Date: Wed, 09 Sep 2009 13:41:17 +0200
Subject: [PATCH 02/10] d3d10: Implement annotation parsing.
In-Reply-To: <d658b69e0909090347j25456405r1933310e76392b91@mail.gmail.com>
References: <4AA78148.4050107@web.de>
	<d658b69e0909090347j25456405r1933310e76392b91@mail.gmail.com>
Message-ID: <4AA7945D.4080309@web.de>

Am 09.09.2009 12:47, schrieb Henri Verbeet:
> 2009/9/9 Rico Sch?ller<kgbricola at web.de>:
>    
>> -static void parse_fx10_annotation(const char **ptr)
>> +static HRESULT parse_fx10_annotation(struct d3d10_effect_variable *a, const char **ptr, const char *data)
>>   {
>> -    skip_dword_unknown(ptr, 3);
>> +    DWORD offset;
>> +
>> +    read_dword(ptr,&offset);
>> +    TRACE("Annotation name at offset %#x.\n", offset);
>> +
>> +    a->name = copy_name(data + offset);
>> +    if (!a->name)
>> +    {
>> +        ERR("Failed to copy name.\n");
>> +        return E_OUTOFMEMORY;
>> +    }
>> +    TRACE("Annotation name: %s.\n", a->name);
>> +
>> +    read_dword(ptr,&offset);
>> +    TRACE("Annotation type info at offset %#x.\n", offset);
>> +
>> +    a->type = get_fx10_type(a->effect, data, offset);
>> +    if (!a->type)
>> +    {
>> +        ERR("Failed to get variable type.\n");
>> +        return E_FAIL;
>> +    }
>> +
>> +    skip_dword_unknown(ptr, 1);
>> +
>> +    return S_OK;
>>   }
>>      
> It seems to me that this is just the same code for parsing variables
> (that has implications for 1/10 as well).
>
>
>    
I'll resend an improved version.

Cheers
Rico


From julliard at winehq.org  Wed Sep  9 07:25:56 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 09 Sep 2009 14:25:56 +0200
Subject: mfc42: Stub implementation with the message where to get it from
In-Reply-To: <4AA421AB.30608@kievinfo.com> (Vitaliy Margolen's message of
	"Sun, 06 Sep 2009 14:55:07 -0600")
References: <4AA421AB.30608@kievinfo.com>
Message-ID: <874orc8fu3.fsf@wine.dyndns.org>

Vitaliy Margolen <wine-patches at kievinfo.com> writes:

> This is more of the testing waters type of patch. If this approach is 
> fine then we can do the same for all other dlls that are shipped with
> Windows but not really a part of an O/S.

I don't think you can put up a message box on attach, that could
potentially become very annoying since it will trigger also for version
checks etc.  That sort of thing should be done at the loader level.

-- 
Alexandre Julliard
julliard at winehq.org


From paulc at voip.null.ro  Wed Sep  9 08:13:57 2009
From: paulc at voip.null.ro (Paul Chitescu)
Date: Wed, 9 Sep 2009 16:13:57 +0300
Subject: Recommending fixes (was: mfc42: Stub implementation with the message
	where to get it from)
In-Reply-To: <874orc8fu3.fsf@wine.dyndns.org>
References: <4AA421AB.30608@kievinfo.com> <874orc8fu3.fsf@wine.dyndns.org>
Message-ID: <200909091613.58022.paulc@voip.null.ro>

On Wednesday 09 September 2009 15:25:56 Alexandre Julliard wrote:
> Vitaliy Margolen <wine-patches at kievinfo.com> writes:
> > This is more of the testing waters type of patch. If this approach is
> > fine then we can do the same for all other dlls that are shipped with
> > Windows but not really a part of an O/S.
>
> I don't think you can put up a message box on attach, that could
> potentially become very annoying since it will trigger also for version
> checks etc.  That sort of thing should be done at the loader level.

What about a generic mechanism that would trigger a separate program to 
recommend - and possibly install - missing components? That program doesn't 
even need to be a win32 program.

My current idea is to somehow catch the fixme and err messages and pipe a copy 
of them to a filter that will identify "interesting" strings and build a list 
of fix candidates. Then it can start something like 
winetricks --prompt="Recommended installs to fix your problem" mfc42 vb6run

This way we may detect other problems that may have a known solution like 
missing DLLs, unimplemented OLE interfaces, assemblies with wrong version.


From thunderbird2k at gmail.com  Wed Sep  9 08:16:30 2009
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Wed, 9 Sep 2009 15:16:30 +0200
Subject: gdi32/tests: Some GdiAlphaBlend tests
In-Reply-To: <1252495853.6688.6.camel@debianhome.localdomain>
References: <1252495853.6688.6.camel@debianhome.localdomain>
Message-ID: <c8485d470909090616i1e83a5aclfdba21e82c5c69a4@mail.gmail.com>

Regarding the zero source DC, what happens visually?

On Wed, Sep 9, 2009 at 1:30 PM, Nikolay Sivov<bunglehead at gmail.com> wrote:
> Bug http://bugs.winehq.org/show_bug.cgi?id=18041 shows this commented crash.
> I'm not sure how to fix it, but I think this call can't do anything
> without source context.
>
> Another question is where to place such check - in gdi32 or winex11...any
> advices are welcome.
>
> Changelog:
> ? ?- Some GdiAlphaBlend tests
>
> >From a59cadcf03edeefff95c340230a47c9c3c60727f Mon Sep 17 00:00:00 2001
> From: Nikolay Sivov <bunglehead at gmail.com>
> Date: Wed, 9 Sep 2009 15:20:34 +0400
> Subject: Some GdiAlphaBlend tests
>
> ---
> ?dlls/gdi32/tests/bitmap.c | ? 19 +++++++++++++++++++
> ?1 files changed, 19 insertions(+), 0 deletions(-)
>
> diff --git a/dlls/gdi32/tests/bitmap.c b/dlls/gdi32/tests/bitmap.c
> index 8666da2..38acd09 100644
> --- a/dlls/gdi32/tests/bitmap.c
> +++ b/dlls/gdi32/tests/bitmap.c
> @@ -2376,6 +2376,25 @@ static void test_GdiAlphaBlend(void)
> ? ? blend.SourceConstantAlpha = 128;
> ? ? blend.AlphaFormat = 0;
>
> + ? ?/* zero dimensions */
> + ? ?SetLastError(0xdeadbeef);
> + ? ?expect_eq(pGdiAlphaBlend(hdcDst, 0, 0, 0, 0, hdcSrc, 0, 0, 20, 20, blend), TRUE, BOOL, "%d");
> + ? ?expect_eq(GetLastError(), 0xdeadbeef, int, "%d");
> + ? ?SetLastError(0xdeadbeef);
> + ? ?expect_eq(pGdiAlphaBlend(hdcDst, 0, 0, 20, 20, hdcSrc, 0, 0, 0, 0, blend), TRUE, BOOL, "%d");
> + ? ?expect_eq(GetLastError(), 0xdeadbeef, int, "%d");
> +
> + ? ?SetLastError(0xdeadbeef);
> + ? ?expect_eq(pGdiAlphaBlend(hdcDst, 0, 0, 0, 0, hdcSrc, 0, 0, 0, 0, blend), TRUE, BOOL, "%d");
> + ? ?expect_eq(GetLastError(), 0xdeadbeef, int, "%d");
> +
> +#if 0
> + ? ?/* zero source HDC - crashes on wine, works on native */
> + ? ?SetLastError(0xdeadbeef);
> + ? ?expect_eq(pGdiAlphaBlend(hdcDst, 0, 0, 20, 20, NULL, 0, 0, 20, 20, blend), FALSE, BOOL, "%d");
> + ? ?expect_eq(GetLastError(), 0xdeadbeef, int, "%d");
> +#endif
> +
> ? ? expect_eq(pGdiAlphaBlend(hdcDst, 0, 0, 20, 20, hdcSrc, 0, 0, 20, 20, blend), TRUE, BOOL, "%d");
> ? ? SetLastError(0xdeadbeef);
> ? ? expect_eq(pGdiAlphaBlend(hdcDst, 0, 0, 20, 20, hdcSrc, -1, 0, 10, 10, blend), FALSE, BOOL, "%d");
> --
> 1.5.6.5
>
>
>
>
>


From bunglehead at gmail.com  Wed Sep  9 09:19:49 2009
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Wed, 09 Sep 2009 18:19:49 +0400
Subject: gdi32/tests: Some GdiAlphaBlend tests
In-Reply-To: <c8485d470909090616i1e83a5aclfdba21e82c5c69a4@mail.gmail.com>
References: <1252495853.6688.6.camel@debianhome.localdomain>
	<c8485d470909090616i1e83a5aclfdba21e82c5c69a4@mail.gmail.com>
Message-ID: <4AA7B985.7060700@gmail.com>

Roderick Colenbrander wrote:
> Regarding the zero source DC, what happens visually?
>
> On Wed, Sep 9, 2009 at 1:30 PM, Nikolay Sivov<bunglehead at gmail.com> wrote:
>   
>> Bug http://bugs.winehq.org/show_bug.cgi?id=18041 shows this commented crash.
>> I'm not sure how to fix it, but I think this call can't do anything
>> without source context.
>>
>> Another question is where to place such check - in gdi32 or winex11...any
>> advices are welcome.
>>
>> Changelog:
>>    - Some GdiAlphaBlend tests
>>
>> >From a59cadcf03edeefff95c340230a47c9c3c60727f Mon Sep 17 00:00:00 2001
>> From: Nikolay Sivov <bunglehead at gmail.com>
>> Date: Wed, 9 Sep 2009 15:20:34 +0400
>> Subject: Some GdiAlphaBlend tests
>>
>>     
I tried with:
---
    blend.BlendOp = AC_SRC_OVER;
    blend.BlendFlags = 0;
    blend.SourceConstantAlpha = 200;
    blend.AlphaFormat = 0;
---
in a simple mfc project to bitblt between two buttons. Using NULL source 
visually does nothing. Maybe this could change in future
but currently with the only AC_SRC_OVER operation available it does 
nothing without source.


From stefandoesinger at gmx.at  Wed Sep  9 11:28:26 2009
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Wed, 9 Sep 2009 18:28:26 +0200
Subject: CPP Run for Sept 8
In-Reply-To: <679715.91093.qm@web112605.mail.gq1.yahoo.com>
References: <679715.91093.qm@web112605.mail.gq1.yahoo.com>
Message-ID: <200909091828.27175.stefandoesinger@gmx.at>

hi,
I think its better to send these reports to wine-devel instead of wine-patches


From paul.vriens.wine at gmail.com  Wed Sep  9 11:42:57 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 09 Sep 2009 18:42:57 +0200
Subject: [PATCH 2/4] mshtml: Added http loading test.
In-Reply-To: <4A9E4880.3020603@codeweavers.com>
References: <4A9E4880.3020603@codeweavers.com>
Message-ID: <4AA7DB11.1030601@gmail.com>

On 09/02/2009 12:27 PM, Jacek Caban wrote:
> ---
> dlls/mshtml/tests/htmldoc.c | 270
> +++++++++++++++++++++++++++++--------------
> 1 files changed, 182 insertions(+), 88 deletions(-)
>
>
>
> ------------------------------------------------------------------------
>
>
Hi Jacek,

Looks like this one introduced 2 test failures on some boxes, I couldn't 
find a common denominator though.

The failures happen on IE6, IE7 and IE8 on different platforms (NT4 and 
higher). There are however also IE8 boxes without failures.

The failures seem to be triggered by the "test_download(FALSE, FALSE, 
FALSE);" on line 4026.

Could you have a look?

(Some other failures happen on ME and lower but I'll investigate those).

-- 
Cheers,

Paul.


From celticht32 at yahoo.com  Wed Sep  9 11:44:31 2009
From: celticht32 at yahoo.com (chris ahrendt)
Date: Wed, 9 Sep 2009 09:44:31 -0700 (PDT)
Subject: CPPCheck for Sept 8th
Message-ID: <248991.86982.qm@web112606.mail.gq1.yahoo.com>

[/home/cahrendt/wine-git/dlls/msvcrt/tests/file.c:982]: (error) 
Deallocating a deallocated pointer: stream2
[/home/cahrendt/wine-git/dlls/msvcrt/tests/file.c:966]: (error) Resource 
leak: stream3
[/home/cahrendt/wine-git/dlls/msvcrt/tests/file.c:973]: (error) Resource 
leak: stream4
[/home/cahrendt/wine-git/dlls/msvcrt/tests/heap.c:433]: (possible error) 
Memory leak: mem
[/home/cahrendt/wine-git/dlls/ntdll/directory.c:2339]: (error) Resource 
leak: old_cwd
[/home/cahrendt/wine-git/dlls/ntdll/server.c:802]: (error) Resource leak: fd
[/home/cahrendt/wine-git/dlls/ntdll/server.c:882]: (error) Resource 
leak: fd_cwd
[/home/cahrendt/wine-git/dlls/rpcrt4/tests/server.c:1189]: (possible 
error) Array index out of bounds
[/home/cahrendt/wine-git/dlls/wineoss.drv/mmaux.c:146]: (error) Resource 
leak: mixer
[/home/cahrendt/wine-git/dlls/wineoss.drv/mmaux.c:208]: (error) Resource 
leak: mixer
[/home/cahrendt/wine-git/dlls/wineps.drv/init.c:270]: (error) Possible 
null pointer dereference: dmW - otherwise it is redundant to check if 
dmW is null at line 272
[/home/cahrendt/wine-git/tools/fnt2bdf.c:779]: (error) Resource leak: fd
[/home/cahrendt/wine-git/tools/fnt2fon.c:387]: (error) Memory leak: 
file_lens
[/home/cahrendt/wine-git/tools/makedep.c:953]: (error) Resource leak: file
[/home/cahrendt/wine-git/tools/sfnt2fnt.c:877]: (error) Resource leak: ofp
[/home/cahrendt/wine-git/tools/widl/write_msft.c:2536]: (error) Resource 
leak: fd
[/home/cahrendt/wine-git/tools/winedump/msmangle.c:164]: (error) Memory 
leak: function_name
[/home/cahrendt/wine-git/tools/winedump/pe.c:1549]: (possible error) 
Memory leak: map

This is using thursdays git tree of CPPCheck.. please let me know if 
there are FP's so I can report them.

Chris

p.s. Thanks stephan for pointing out I sent it to the wrong list =D






      


From julliard at winehq.org  Wed Sep  9 12:04:27 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 09 Sep 2009 19:04:27 +0200
Subject: CPPCheck for Sept 8th
In-Reply-To: <248991.86982.qm@web112606.mail.gq1.yahoo.com> (chris ahrendt's
	message of "Wed, 9 Sep 2009 09:44:31 -0700 (PDT)")
References: <248991.86982.qm@web112606.mail.gq1.yahoo.com>
Message-ID: <87k5086odg.fsf@wine.dyndns.org>

chris ahrendt <celticht32 at yahoo.com> writes:

> [/home/cahrendt/wine-git/dlls/ntdll/directory.c:2339]: (error) Resource leak: old_cwd

This is the only one that looks a real bug, all the rest are false
positives. Please filter them out from future reports.

-- 
Alexandre Julliard
julliard at winehq.org


From razielmine at gmail.com  Wed Sep  9 12:21:11 2009
From: razielmine at gmail.com (=?UTF-8?Q?Ismael_Barros=C2=B2?=)
Date: Wed, 9 Sep 2009 19:21:11 +0200
Subject: [PATCH 2/7] dpwsockx: Implementation of SPInit
In-Reply-To: <d658b69e0909040312s4476ac45j1a0fc49ea9da014a@mail.gmail.com>
References: <1251762652-7224-1-git-send-email-razielmine@gmail.com>
	<1251762652-7224-2-git-send-email-razielmine@gmail.com>
	<d658b69e0909010200x31208614lfad6a7d2ee8c0d95@mail.gmail.com>
	<82e274890909010321q750aedd3ga77f8ca644f6ebbe@mail.gmail.com>
	<d658b69e0909010328i4da91414ycf8337de0a0153a8@mail.gmail.com>
	<82e274890909040226x1306ee57s242720b9c8744903@mail.gmail.com>
	<d658b69e0909040312s4476ac45j1a0fc49ea9da014a@mail.gmail.com>
Message-ID: <82e274890909091021i5cc07bc4r8051cfc804f7a1bf@mail.gmail.com>

On Fri, Sep 4, 2009 at 12:12 PM, Henri Verbeet<hverbeet at gmail.com> wrote:
> 2009/9/4 Ismael Barros? <razielmine at gmail.com>:
>> I've been looking into iphlpapi/ip.h (just learned bit fields
>> exist...); would this implementation be fine?
>>
>> #include "pshpack1.h"
>>
>> typedef struct tagDPSP_MSG_HEADER
>> {
>> #ifdef WORDS_BIGENDIAN
>> ? ?DWORD size:20;
>> ? ?DWORD token:12;
>> #else
>> ? ?DWORD token:12;
>> ? ?DWORD size:20;
>> #endif
>> ? ?SOCKADDR_IN SockAddr;
>> } DPSP_MSG_HEADER, *LPDPSP_MSG_HEADER;
>
> Probably not. I'm not sure iphlpapi/ip.h does things right in the
> first place, it seems to confuse bitfield ordering with machine byte
> ordering. As a general rule, I think it's best to avoid bitfields for
> things like writing data to a file or sending data over the network,
> it's just a pain. Aside from that, using the bitfields in this way
> messes with the bit ordering, but doesn't change the byte order. For
> the bitfields in iphlpapi/ip.h that's not an issue because they fit in
> a single byte. Just store the data in a DWORD with the appropriate
> masks and shifts, and byte swap that DWORD when reading/writing it.

Here is the next try, how does it look?
It seems to behave correctly in some quick tests (byte-swapping
parameters to emulate big-endian).

Thanks a lot for the feedback, really appreciated.

-------------

#ifdef WORDS_BIGENDIAN

static inline u_short __dpws_ushort_swap(u_short s)
{
    return (s >> 8) | (s << 8);
}
static inline u_long __dpws_ulong_swap(u_long l)
{
    return ((u_long)__dpws_ushort_swap((u_short)l) << 16) |
__dpws_ushort_swap((u_short)(l >> 16));
}

#define dpws_letohl(l) __dpws_ulong_swap(l)
#define dpws_letohs(s) __dpws_ushort_swap(s)
#define dpws_htolel(l) __dpws_ulong_swap(l)
#define dpws_htoles(s) __dpws_ushort_swap(s)

#else /* WORDS_BIGENDIAN */

#define dpws_letohl(l) ((u_long)(l))
#define dpws_letohs(s) ((u_short)(s))
#define dpws_htolel(l) ((u_long)(l))
#define dpws_htoles(s) ((u_short)(s))

#endif /* WORDS_BIGENDIAN */


#include "pshpack1.h"

typedef struct tagDPSP_MSG_HEADER
{
    DWORD       mixed;
    SOCKADDR_IN SockAddr;
} DPSP_MSG_HEADER, *LPDPSP_MSG_HEADER;
typedef const DPSP_MSG_HEADER* LPCDPSP_MSG_HEADER;

#include "poppack.h"


#define DPSP_MSG_TOKEN_REMOTE    0xFAB00000
#define DPSP_MSG_TOKEN_FORWARDED 0xCAB00000
#define DPSP_MSG_TOKEN_SERVER    0xBAB00000

#define DPSP_MSG_MAKE_MIXED(s,t) dpws_htolel((s) | (t))
#define DPSP_MSG_SIZE(m)         dpws_letohl((m) & 0x000FFFFF)
#define DPSP_MSG_TOKEN(m)        ((m) & 0xFFF00000)


From celticht32 at yahoo.com  Wed Sep  9 14:30:21 2009
From: celticht32 at yahoo.com (chris ahrendt)
Date: Wed, 9 Sep 2009 12:30:21 -0700 (PDT)
Subject: CPPCheck for Sept 8th
Message-ID: <931626.51389.qm@web112603.mail.gq1.yahoo.com>

Alexandre Julliard wrote:
> chris ahrendt <celticht32 at yahoo.com> writes:
> 
>> [/home/cahrendt/wine-git/dlls/ntdll/directory.c:2339]: (error) Resource leak: old_cwd
> 
> This is the only one that looks a real bug, all the rest are false
> positives. Please filter them out from future reports.
> 

Alexandre,
I will filter them as best I can going forward...

Chris






      


From celticht32 at yahoo.com  Wed Sep  9 14:36:39 2009
From: celticht32 at yahoo.com (chris ahrendt)
Date: Wed, 9 Sep 2009 12:36:39 -0700 (PDT)
Subject: CPPCheck for Sept 8th
Message-ID: <862169.56453.qm@web112603.mail.gq1.yahoo.com>

Alexandre Julliard wrote:
> chris ahrendt <celticht32 at yahoo.com> writes:
> 
>> [/home/cahrendt/wine-git/dlls/ntdll/directory.c:2339]: (error) Resource leak: old_cwd
> 
> This is the only one that looks a real bug, all the rest are false
> positives. Please filter them out from future reports.
> 
Is there any others? So ignore the tests findings and the tools 
findings? Are These the ones that may be a bug then :


[/home/cahrendt/wine-git/dlls/ntdll/server.c:802]: (error) Resource leak: fd
[/home/cahrendt/wine-git/dlls/ntdll/server.c:882]: (error) Resource 
leak: fd_cwd
[/home/cahrendt/wine-git/dlls/wineoss.drv/mmaux.c:146]: (error) Resource 
leak: mixer
[/home/cahrendt/wine-git/dlls/wineoss.drv/mmaux.c:208]: (error) Resource 
leak: mixer
[/home/cahrendt/wine-git/dlls/wineps.drv/init.c:270]: (error) Possible 
null pointer dereference: dmW - otherwise it is redundant to check if 
dmW is null at line 272


These Ignore correct?

[/home/cahrendt/wine-git/dlls/msvcrt/tests/file.c:982]: (error) 
Deallocating a deallocated pointer: stream2
[/home/cahrendt/wine-git/dlls/msvcrt/tests/file.c:966]: (error) Resource 
leak: stream3
[/home/cahrendt/wine-git/dlls/msvcrt/tests/file.c:973]: (error) Resource 
leak: stream4
[/home/cahrendt/wine-git/dlls/msvcrt/tests/heap.c:433]: (possible error) 
Memory leak: mem
[/home/cahrendt/wine-git/dlls/rpcrt4/tests/server.c:1189]: (possible 
error) Array index out of bounds
[/home/cahrendt/wine-git/tools/fnt2bdf.c:779]: (error) Resource leak: fd
[/home/cahrendt/wine-git/tools/fnt2fon.c:387]: (error) Memory leak: 
file_lens
[/home/cahrendt/wine-git/tools/makedep.c:953]: (error) Resource leak: file
[/home/cahrendt/wine-git/tools/sfnt2fnt.c:877]: (error) Resource leak: ofp
[/home/cahrendt/wine-git/tools/widl/write_msft.c:2536]: (error) Resource 
leak: fd
[/home/cahrendt/wine-git/tools/winedump/msmangle.c:164]: (error) Memory 
leak: function_name
[/home/cahrendt/wine-git/tools/winedump/pe.c:1549]: (possible error) 
Memory leak: map

Chris






      


From niko.lecam at gmail.com  Wed Sep  9 14:38:40 2009
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Wed, 9 Sep 2009 21:38:40 +0200
Subject: CPPCheck for Sept 8th
In-Reply-To: <87k5086odg.fsf@wine.dyndns.org>
References: <248991.86982.qm@web112606.mail.gq1.yahoo.com>
	<87k5086odg.fsf@wine.dyndns.org>
Message-ID: <d7e62e980909091238l33062452m2fd6939c1fb037d@mail.gmail.com>

2009/9/9 Alexandre Julliard <julliard at winehq.org>:
> chris ahrendt <celticht32 at yahoo.com> writes:
>
>> [/home/cahrendt/wine-git/dlls/ntdll/directory.c:2339]: (error) Resource leak: old_cwd
>
> This is the only one that looks a real bug, all the rest are false
> positives. Please filter them out from future reports.
>
> --
> Alexandre Julliard
> julliard at winehq.org
>
>
>

Not necessary false positives. Errors in dlls/msvcrt/tests/file.c, for
example, are real but expected errors, as it's the purpose of the test
to see how it behaves on Windows in such situation.

-- 
Nicolas Le Cam


From celticht32 at yahoo.com  Wed Sep  9 14:45:19 2009
From: celticht32 at yahoo.com (chris ahrendt)
Date: Wed, 9 Sep 2009 12:45:19 -0700 (PDT)
Subject: CPPCheck for Sept 8th
Message-ID: <150776.37685.qm@web112609.mail.gq1.yahoo.com>

Nicolas Le Cam wrote:
> 2009/9/9 Alexandre Julliard <julliard at winehq.org>:
>> chris ahrendt <celticht32 at yahoo.com> writes:
>>
>>> [/home/cahrendt/wine-git/dlls/ntdll/directory.c:2339]: (error) Resource leak: old_cwd
>> This is the only one that looks a real bug, all the rest are false
>> positives. Please filter them out from future reports.
>>
>> --
>> Alexandre Julliard
>> julliard at winehq.org
>>
>>
>>
> 
> Not necessary false positives. Errors in dlls/msvcrt/tests/file.c, for
> example, are real but expected errors, as it's the purpose of the test
> to see how it behaves on Windows in such situation.
> 

So continue to send everything then?
Since I have been running them the size has not really been that 
large... just let me know what you want me to send and I will
send it in...

Chris






      


From hverbeet at gmail.com  Wed Sep  9 16:02:10 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Wed, 9 Sep 2009 23:02:10 +0200
Subject: [PATCH 2/7] dpwsockx: Implementation of SPInit
In-Reply-To: <82e274890909091021i5cc07bc4r8051cfc804f7a1bf@mail.gmail.com>
References: <1251762652-7224-1-git-send-email-razielmine@gmail.com>
	<1251762652-7224-2-git-send-email-razielmine@gmail.com>
	<d658b69e0909010200x31208614lfad6a7d2ee8c0d95@mail.gmail.com>
	<82e274890909010321q750aedd3ga77f8ca644f6ebbe@mail.gmail.com>
	<d658b69e0909010328i4da91414ycf8337de0a0153a8@mail.gmail.com>
	<82e274890909040226x1306ee57s242720b9c8744903@mail.gmail.com>
	<d658b69e0909040312s4476ac45j1a0fc49ea9da014a@mail.gmail.com>
	<82e274890909091021i5cc07bc4r8051cfc804f7a1bf@mail.gmail.com>
Message-ID: <d658b69e0909091402jc1806c8ofabc4b6564cf93a@mail.gmail.com>

2009/9/9 Ismael Barros? <razielmine at gmail.com>:
> -------------
>
> #ifdef WORDS_BIGENDIAN
>
> static inline u_short __dpws_ushort_swap(u_short s)
> {
> ? ?return (s >> 8) | (s << 8);
> }
> static inline u_long __dpws_ulong_swap(u_long l)
> {
> ? ?return ((u_long)__dpws_ushort_swap((u_short)l) << 16) |
> __dpws_ushort_swap((u_short)(l >> 16));
> }
>
> #define dpws_letohl(l) __dpws_ulong_swap(l)
> #define dpws_letohs(s) __dpws_ushort_swap(s)
> #define dpws_htolel(l) __dpws_ulong_swap(l)
> #define dpws_htoles(s) __dpws_ushort_swap(s)
>
> #else /* WORDS_BIGENDIAN */
>
> #define dpws_letohl(l) ((u_long)(l))
> #define dpws_letohs(s) ((u_short)(s))
> #define dpws_htolel(l) ((u_long)(l))
> #define dpws_htoles(s) ((u_short)(s))
>
> #endif /* WORDS_BIGENDIAN */
>
>
> #include "pshpack1.h"
>
> typedef struct tagDPSP_MSG_HEADER
> {
> ? ?DWORD ? ? ? mixed;
> ? ?SOCKADDR_IN SockAddr;
> } DPSP_MSG_HEADER, *LPDPSP_MSG_HEADER;
> typedef const DPSP_MSG_HEADER* LPCDPSP_MSG_HEADER;
>
> #include "poppack.h"
>
>
> #define DPSP_MSG_TOKEN_REMOTE ? ?0xFAB00000
> #define DPSP_MSG_TOKEN_FORWARDED 0xCAB00000
> #define DPSP_MSG_TOKEN_SERVER ? ?0xBAB00000
>
> #define DPSP_MSG_MAKE_MIXED(s,t) dpws_htolel((s) | (t))
> #define DPSP_MSG_SIZE(m) ? ? ? ? dpws_letohl((m) & 0x000FFFFF)
> #define DPSP_MSG_TOKEN(m) ? ? ? ?((m) & 0xFFF00000)
>

I think it should be like this:
#define DPSP_MSG_SIZE(m)         (dpws_letohl(m) & 0x000FFFFF)
#define DPSP_MSG_TOKEN(m)        (dpws_letohl(m) & 0xFFF00000)

I.e., swap before masking. Perhaps you just want to do this though:
#define DPSP_MSG_MAKE_MIXED(s,t) ((s) | (t))
#define DPSP_MSG_SIZE(m)         ((m) & 0x000fffff)
#define DPSP_MSG_TOKEN(m)        ((m) & 0xfff00000)
...
m = DPSP_MSG_MAKE_MIXED(s, t);
header.mixed = dpws_htolel(m);
...
m = dpws_letohl(header.mixed);
s = DPSP_MSG_SIZE(m);
t = DPSP_MSG_SIZE(m);


From niko.lecam at gmail.com  Wed Sep  9 16:47:02 2009
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Wed, 9 Sep 2009 23:47:02 +0200
Subject: CPPCheck for Sept 8th
In-Reply-To: <150776.37685.qm@web112609.mail.gq1.yahoo.com>
References: <150776.37685.qm@web112609.mail.gq1.yahoo.com>
Message-ID: <d7e62e980909091447m6a5d6c63t6c9cd2a28fa51388@mail.gmail.com>

2009/9/9 chris ahrendt <celticht32 at yahoo.com>:
> Nicolas Le Cam wrote:
>> 2009/9/9 Alexandre Julliard <julliard at winehq.org>:
>>> chris ahrendt <celticht32 at yahoo.com> writes:
>>>
>>>> [/home/cahrendt/wine-git/dlls/ntdll/directory.c:2339]: (error) Resource leak: old_cwd
>>> This is the only one that looks a real bug, all the rest are false
>>> positives. Please filter them out from future reports.
>>>
>>> --
>>> Alexandre Julliard
>>> julliard at winehq.org
>>>
>>>
>>>
>>
>> Not necessary false positives. Errors in dlls/msvcrt/tests/file.c, for
>> example, are real but expected errors, as it's the purpose of the test
>> to see how it behaves on Windows in such situation.
>>
>
> So continue to send everything then?
> Since I have been running them the size has not really been that
> large... just let me know what you want me to send and I will
> send it in...
>
> Chris
>

This was just a clarification so that you won't report everything as
false positives to cppcheck devs, only real ones :
[/home/cahrendt/wine-git/dlls/msvcrt/tests/heap.c:433]: (possible
error) Memory leak: mem
[/home/cahrendt/wine-git/dlls/rpcrt4/tests/server.c:1189]: (possible
error) Array index out of bounds
[/home/cahrendt/wine-git/dlls/wineps.drv/init.c:270]: (error) Possible
null pointer dereference: dmW - otherwise it is redundant to check if
dmW is null at line 272
[/home/cahrendt/wine-git/dlls/ntdll/server.c:802]: (error) Resource leak: fd
[/home/cahrendt/wine-git/dlls/ntdll/server.c:882]: (error) Resource leak: fd_cwd

IMHO, those are potential leaks :
[/home/cahrendt/wine-git/dlls/wineoss.drv/mmaux.c:146]: (error)
Resource leak: mixer
[/home/cahrendt/wine-git/dlls/wineoss.drv/mmaux.c:208]: (error)
Resource leak: mixer

Basically, filter out everything except the one Alexandre pointed out.
You can also exclude tools and tests subdirectories.

-- 
Nicolas Le Cam


From scriptkid at mail.ru  Wed Sep  9 07:10:22 2009
From: scriptkid at mail.ru (Vladimir Pankratov)
Date: Wed, 09 Sep 2009 17:10:22 +0500
Subject: gdi32: Handle OEM_CHARSET
In-Reply-To: <BF650EA40583407FA3797BB960182E15@DMITRY>
References: <4AA7955A.9020200@mail.ru>
	<BF650EA40583407FA3797BB960182E15@DMITRY>
Message-ID: <4AA79B2E.608@mail.ru>

> "Vladimir Pankratov" <scriptkid at mail.ru> wrote:
> 
>> --- a/dlls/gdi32/freetype.c 2009-08-08 13:27:23.000000000 +0500
>> +++ b/dlls/gdi32/freetype.c 2009-09-07 19:58:58.000000000 +0500
>> @@ -3576,6 +3576,7 @@
>>     if(!TranslateCharsetInfo((DWORD*)(INT_PTR)lf.lfCharSet, &csi, TCI_SRCCHARSET)) {
>>         switch(lf.lfCharSet) {
>>  case DEFAULT_CHARSET:
>> + case OEM_CHARSET:
>>      csi.fs.fsCsb[0] = 0;
>>      break;
>>  default:
> 
> How is this different from the default case? 

I don't know, but without this transription shows incorrectly.


From kermos at somrek.net  Wed Sep  9 20:41:34 2009
From: kermos at somrek.net (Stephan Rose)
Date: Wed, 09 Sep 2009 21:41:34 -0400
Subject: ddraw: Added support for WINED3DFMT_X8L8V8U8,
	WINED3DFMT_R8G8B8A8_SNORM and WINED3DFMT_R16G16_SNORM to
	PixelFormat_WineD3DtoDD
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B032D6D65@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B032D6D65@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <1252546894.3975.0.camel@stephan-desktop>

On Mon, 2009-09-07 at 13:16 +0200, Joerg-Cyril.Hoehle at t-systems.com
wrote:
> Stephan,
> 
> All the patches proposed to bug #16559 forget one thing:
> 
> it cannot be right to patch only PixelFormat_WineD3DtoDD without patching its converse function in the same file, PixelFormat_DD2WineD3D.

Good point, didn't think of that. =)

Thanks,

Stephan




From fgatwork at verizon.net  Wed Sep  9 22:01:37 2009
From: fgatwork at verizon.net (Frank Gruman)
Date: Wed, 09 Sep 2009 23:01:37 -0400
Subject: http://bugs.winehq.org/show_bug.cgi?id=18337
In-Reply-To: <3a768c550909081633r72e3b284l2dfbace77c564802@mail.gmail.com>
References: <1252451736.5090.6.camel@toybox.thegrumans>
	<3a768c550909081633r72e3b284l2dfbace77c564802@mail.gmail.com>
Message-ID: <1252551697.10710.1.camel@toybox.thegrumans>

On Tue, 2009-09-08 at 16:33 -0700, Juan Lang wrote:

> Hi Frank,
> 
> On Tue, Sep 8, 2009 at 4:15 PM, Frank Gruman<fgatwork at verizon.net> wrote:
> > Looking at chain.c, line 1886-1902 I can see the switch-case statement
> > where this would have been handled.  The problem I ran into while trying
> > to keep up with the code was figuring out what the verify_* methods are
> > trying to do.
> >
> > I'd really like to see this work and may have some spare cycles to help
> > out.  The problem is that I don't understand everything happening in
> > these methods - can I get some pointers to what is happening or what
> > should happen in the yet to be created verify_ssl_policy() method?
> 
> The short answer is, if you don't care about the validity of the
> certificates you're trying to connect to, you can hack this function
> to return TRUE rather than FALSE.  This is an awful hack, however, and
> can't be accepted into the Wine tree, but if all you care about is to
> get the darn thing to work, it might be enough for you.
> 
> The longer answer is the generic Wine answer:  what should happen is
> whatever Windows does.  To find out what Windows does, you need to
> write tests for it.  Have a look at dlls/crypt32/tests/chain.c for a
> start.  You'll want to mimic the existing tests, and try with
> different SSL_EXTRA_CERT_CHAIN_POLICY_PARA values.
> 
> Since that's not very specific, here's a slightly more directed
> answer:  the as-yet-unwritten verify_ssl_policy() should call
> verify_base_policy() first.  If it succeeds, it should verify that the
> certificate matches the intended use.  At a minimum, if the
> SSL_EXTRA_CERT_CHAIN_POLICY_PARA is specified, you need to verify that
> its pwszServerName matches the subject name in the certificate.  Be
> careful not to introduce the embedded NULL character vulnerability
> (see e.g. CVE-2009-2417.)  There are probably more checks needed,
> either in verify_base_policy or in verify_ssl_policy, e.g. checking
> the key usage extension.  RFC3280 is a good guide for the kinds of
> checks that need to be done.
> 
> Intimidated yet?  That's why I haven't gotten around to it myself:
> it's not a quick fix, and I haven't had a lot of free time.  But if
> you have the time to do it right, by all means have a go!
> --Juan


Only slightly daunted.  But I will give it a go.  It won't be over
night, but I think I can, I think I can, I think I can...

Thanks for the pointers on where to look and start.

Regards,
Frank
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090909/d51ef33c/attachment.htm>

From scott at open-vote.org  Wed Sep  9 22:45:49 2009
From: scott at open-vote.org (Scott Ritchie)
Date: Wed, 09 Sep 2009 20:45:49 -0700
Subject: Performance tag for Bugzilla?
Message-ID: <4AA8766D.4080101@open-vote.org>

We have a wiki page functioning as sort of a wannabe performance tag
here: http://wiki.winehq.org/Performance-related_bugs

Is this a reasonable tag to have?

Thanks,
Scott Ritchie


From hans at codeweavers.com  Thu Sep 10 03:36:44 2009
From: hans at codeweavers.com (Hans Leidekker)
Date: Thu, 10 Sep 2009 10:36:44 +0200
Subject: msi: Ignore CoInitialize failure in ACTION_CreateShortcuts.
In-Reply-To: <200909101010.33791.hans@codeweavers.com>
References: <200909101010.33791.hans@codeweavers.com>
Message-ID: <200909101036.44605.hans@codeweavers.com>

> Fixes http://bugs.winehq.org/show_bug.cgi?id=19636

Or it doesn't:

err:ole:CoInitializeEx Attempt to change threading model of this apartment from multi-threaded to apartment threaded
err:shell:ShellLink_QueryInterface -- Interface: E_NOINTERFACE

Because IShellLink is apartment-threaded only?

 -Hans


From paul.vriens.wine at gmail.com  Thu Sep 10 05:11:13 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 10 Sep 2009 12:11:13 +0200
Subject: mshtml: Add support for Reference BSTR when setting styles.
In-Reply-To: <4AA8CE26.1040305@hotmail.com>
References: <4AA8CE26.1040305@hotmail.com>
Message-ID: <4AA8D0C1.7080801@gmail.com>

On 09/10/2009 12:00 PM, Alistair Leslie-Hughes wrote:
> Hi,
>
>
> Changelog:
> mshtml: Add support for Reference BSTR when setting styles.
>
> Best Regards
> Alistair Leslie-Hughes
>
>
> ------------------------------------------------------------------------
>
>
Hi Alistair,

Now VT_BSTR is used in two case-statements.

-- 
Cheers,

Paul.


From paul.vriens.wine at gmail.com  Thu Sep 10 05:30:40 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 10 Sep 2009 12:30:40 +0200
Subject: mshtml: Add support for Reference BSTR when setting styles.
In-Reply-To: <4AA8D0C1.7080801@gmail.com>
References: <4AA8CE26.1040305@hotmail.com> <4AA8D0C1.7080801@gmail.com>
Message-ID: <4AA8D550.60304@gmail.com>

On 09/10/2009 12:11 PM, Paul Vriens wrote:
> On 09/10/2009 12:00 PM, Alistair Leslie-Hughes wrote:
>> Hi,
>>
>>
>> Changelog:
>> mshtml: Add support for Reference BSTR when setting styles.
>>
>> Best Regards
>> Alistair Leslie-Hughes
>>
>>
>> ------------------------------------------------------------------------
>>
>>
> Hi Alistair,
>
> Now VT_BSTR is used in two case-statements.
>
Forget that remark. Sorry for the noise.

-- 
Cheers,

Paul.


From thunderbird2k at gmail.com  Thu Sep 10 11:10:29 2009
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Thu, 10 Sep 2009 18:10:29 +0200
Subject: winex11: Make X11DRV_PALETTE_ComputeColorShifts() static.
In-Reply-To: <alpine.DEB.2.00.0909101758200.31159@amboise.dolphin>
References: <alpine.DEB.2.00.0909101758200.31159@amboise.dolphin>
Message-ID: <c8485d470909100910w2c74a3b1ofe83b3941f0a1ba0@mail.gmail.com>

In a next patch ComputeChannelShift will be called from outside
palette.c and for this reason I made it non-static.

Roderick

On Thu, Sep 10, 2009 at 5:58 PM, Francois Gouget <fgouget at free.fr> wrote:
> ---
> ?dlls/winex11.drv/palette.c | ?115 ++++++++++++++++++++++----------------------
> ?dlls/winex11.drv/x11drv.h ?| ? ?1 -
> ?2 files changed, 57 insertions(+), 59 deletions(-)
>
> diff --git a/dlls/winex11.drv/palette.c b/dlls/winex11.drv/palette.c
> index 81bb73b..cdbfb21 100644
> --- a/dlls/winex11.drv/palette.c
> +++ b/dlls/winex11.drv/palette.c
> @@ -131,6 +131,63 @@ static void palette_set_mapping( HPALETTE hpal, int *mapping )
> ? ? wine_tsx11_unlock();
> ?}
>
> +/***********************************************************************
> + * ? ? ? ? ? ? X11DRV_PALETTE_ComputeChannelShift
> + *
> + * Calculate conversion parameters for a given color mask
> + */
> +static void X11DRV_PALETTE_ComputeChannelShift(unsigned long maskbits, ChannelShift *physical, ChannelShift *to_logical)
> +{
> + ? ?int i;
> +
> + ? ?if (maskbits==0)
> + ? ?{
> + ? ? ? ?physical->shift=0;
> + ? ? ? ?physical->scale=0;
> + ? ? ? ?physical->max=0;
> + ? ? ? ?to_logical->shift=0;
> + ? ? ? ?to_logical->scale=0;
> + ? ? ? ?to_logical->max=0;
> + ? ? ? ?return;
> + ? ?}
> +
> + ? ?for(i=0;!(maskbits&1);i++)
> + ? ? ? ?maskbits >>= 1;
> +
> + ? ?physical->shift = i;
> + ? ?physical->max = maskbits;
> +
> + ? ?for(i=0;maskbits!=0;i++)
> + ? ? ? ?maskbits >>= 1;
> + ? ?physical->scale = i;
> +
> + ? ?if (physical->scale>8)
> + ? ?{
> + ? ? ? ?/* On FreeBSD, VNC's default 32bpp mode is bgrabb (ffc00000,3ff800,7ff)!
> + ? ? ? ? * So we adjust the shifts to also normalize the color fields to
> + ? ? ? ? * the Win32 standard of 8 bits per color.
> + ? ? ? ? */
> + ? ? ? ?to_logical->shift=physical->shift+(physical->scale-8);
> + ? ? ? ?to_logical->scale=8;
> + ? ? ? ?to_logical->max=0xff;
> + ? ?} else {
> + ? ? ? ?to_logical->shift=physical->shift;
> + ? ? ? ?to_logical->scale=physical->scale;
> + ? ? ? ?to_logical->max=physical->max;
> + ? ?}
> +}
> +
> +/***********************************************************************
> + * ? ? ?X11DRV_PALETTE_ComputeColorShifts
> + *
> + * Calculate conversion parameters for a given color
> + */
> +static void X11DRV_PALETTE_ComputeColorShifts(ColorShifts *shifts, unsigned long redMask, unsigned long greenMask, unsigned long blueMask)
> +{
> + ? ?X11DRV_PALETTE_ComputeChannelShift(redMask, &shifts->physicalRed, &shifts->logicalRed);
> + ? ?X11DRV_PALETTE_ComputeChannelShift(greenMask, &shifts->physicalGreen, &shifts->logicalGreen);
> + ? ?X11DRV_PALETTE_ComputeChannelShift(blueMask, &shifts->physicalBlue, &shifts->logicalBlue);
> +}
>
> ?/***********************************************************************
> ?* ? ? ? ? ? COLOR_Init
> @@ -278,64 +335,6 @@ void X11DRV_PALETTE_Cleanup(void)
> ?}
>
> ?/***********************************************************************
> - * ? ? ? ? ? ? X11DRV_PALETTE_ComputeChannelShift
> - *
> - * Calculate conversion parameters for a given color mask
> - */
> -static void X11DRV_PALETTE_ComputeChannelShift(unsigned long maskbits, ChannelShift *physical, ChannelShift *to_logical)
> -{
> - ? ?int i;
> -
> - ? ?if (maskbits==0)
> - ? ?{
> - ? ? ? ?physical->shift=0;
> - ? ? ? ?physical->scale=0;
> - ? ? ? ?physical->max=0;
> - ? ? ? ?to_logical->shift=0;
> - ? ? ? ?to_logical->scale=0;
> - ? ? ? ?to_logical->max=0;
> - ? ? ? ?return;
> - ? ?}
> -
> - ? ?for(i=0;!(maskbits&1);i++)
> - ? ? ? ?maskbits >>= 1;
> -
> - ? ?physical->shift = i;
> - ? ?physical->max = maskbits;
> -
> - ? ?for(i=0;maskbits!=0;i++)
> - ? ? ? ?maskbits >>= 1;
> - ? ?physical->scale = i;
> -
> - ? ?if (physical->scale>8)
> - ? ?{
> - ? ? ? ?/* On FreeBSD, VNC's default 32bpp mode is bgrabb (ffc00000,3ff800,7ff)!
> - ? ? ? ? * So we adjust the shifts to also normalize the color fields to
> - ? ? ? ? * the Win32 standard of 8 bits per color.
> - ? ? ? ? */
> - ? ? ? ?to_logical->shift=physical->shift+(physical->scale-8);
> - ? ? ? ?to_logical->scale=8;
> - ? ? ? ?to_logical->max=0xff;
> - ? ?} else {
> - ? ? ? ?to_logical->shift=physical->shift;
> - ? ? ? ?to_logical->scale=physical->scale;
> - ? ? ? ?to_logical->max=physical->max;
> - ? ?}
> -}
> -
> -/***********************************************************************
> - * ? ? ?X11DRV_PALETTE_ComputeColorShifts
> - *
> - * Calculate conversion parameters for a given color
> - */
> -void X11DRV_PALETTE_ComputeColorShifts(ColorShifts *shifts, unsigned long redMask, unsigned long greenMask, unsigned long blueMask)
> -{
> - ? ?X11DRV_PALETTE_ComputeChannelShift(redMask, &shifts->physicalRed, &shifts->logicalRed);
> - ? ?X11DRV_PALETTE_ComputeChannelShift(greenMask, &shifts->physicalGreen, &shifts->logicalGreen);
> - ? ?X11DRV_PALETTE_ComputeChannelShift(blueMask, &shifts->physicalBlue, &shifts->logicalBlue);
> -}
> -
> -/***********************************************************************
> ?* ? ? ? ? ? X11DRV_PALETTE_BuildPrivateMap
> ?*
> ?* Allocate colorcells and initialize mapping tables.
> diff --git a/dlls/winex11.drv/x11drv.h b/dlls/winex11.drv/x11drv.h
> index 62b0d63..844af31 100644
> --- a/dlls/winex11.drv/x11drv.h
> +++ b/dlls/winex11.drv/x11drv.h
> @@ -494,7 +494,6 @@ extern BOOL X11DRV_IsSolidColor(COLORREF color);
> ?extern COLORREF X11DRV_PALETTE_ToLogical(X11DRV_PDEVICE *physDev, int pixel);
> ?extern int X11DRV_PALETTE_ToPhysical(X11DRV_PDEVICE *physDev, COLORREF color);
> ?extern int X11DRV_PALETTE_LookupPixel(COLORREF color);
> -extern void X11DRV_PALETTE_ComputeColorShifts(ColorShifts *shifts, unsigned long redMask, unsigned long greenMask, unsigned long blueMask);
>
> ?extern unsigned int depth_to_bpp( unsigned int depth );
>
> --
> 1.6.3.3
>
>
>


From chris.kcat at gmail.com  Thu Sep 10 12:26:26 2009
From: chris.kcat at gmail.com (Chris Robinson)
Date: Thu, 10 Sep 2009 10:26:26 -0700
Subject: server: Use kernel support for thread affinity when available
In-Reply-To: <3a768c550909100943m393337b9p9d261dec29ec699d@mail.gmail.com>
References: <3a768c550909100943m393337b9p9d261dec29ec699d@mail.gmail.com>
Message-ID: <200909101026.26250.chris.kcat@gmail.com>

On Thursday 10 September 2009 9:43:02 am Juan Lang wrote:
> +/* Define to 1 if you have the `sched_getaffinity' function. */
> +#undef HAVE_SCHED_GETAFFINITY
> +
...
> +#ifdef HAVE_SCHED_GET_AFFINITY
> +#define __USE_GNU
> +#include <sched.h>
> +#endif

Looks like a typo there.


From jnewman at codeweavers.com  Thu Sep 10 13:38:45 2009
From: jnewman at codeweavers.com (Jeremy Newman)
Date: Thu, 10 Sep 2009 13:38:45 -0500
Subject: winehq: Fix some HTML markup
In-Reply-To: <4AA79E67.9060304@dawncrow.de>
References: <4AA79E67.9060304@dawncrow.de>
Message-ID: <4AA947B5.7060008@codeweavers.com>

The reason I left the XHTML markup in was eventually the goal was to 
convert the entire website to XHTML. The only issue with leaving them in 
while still in HTML4/Transitional is that the pages do not pass W3C 
validation. I am still willing to live with non-valid working HTML to 
save some work down the road.

-N

Andr? Hentschel wrote:
> ---
>  templates/de/about.template         |    2 +-
>  templates/de/contributing.template  |    8 +++---
>  templates/de/download.template      |   10 +++---
>  templates/de/help.template          |   16 ++++++------
>  templates/en/about.template         |    2 +-
>  templates/en/contributing.template  |    8 +++---
>  templates/en/documentation.template |   48 +++++++++++++++++-----------------
>  templates/en/download.template      |   10 +++---
>  templates/en/help.template          |   16 ++++++------
>  templates/fr/about.template         |    2 +-
>  templates/pl/about.template         |    2 +-
>  templates/pl/download.template      |   10 +++---
>  templates/pl/help.template          |   16 ++++++------
>  templates/pt/about.template         |    2 +-
>  templates/pt/contributing.template  |    8 +++---
>  15 files changed, 80 insertions(+), 80 deletions(-)
> 
> 
> 
> 
> 
> ------------------------------------------------------------------------
> 
> 


From jdluzen at gmail.com  Thu Sep 10 14:10:37 2009
From: jdluzen at gmail.com (Joe Dluzen)
Date: Thu, 10 Sep 2009 15:10:37 -0400
Subject: Status of LoadLibrary and .so
Message-ID: <d4165710909101210u50f2d76dia66b5b672f83b3dd@mail.gmail.com>

Hi all,

back a few years ago it didn't:
http://www.winehq.org/pipermail/wine-devel/2003-July/018498.html

Does anyone know of the status of LoadLibrary and a .so? Can it load
directly or is there a workaround that does not involve multiple
processes and some sort of IPC?

thanks,
Joe


From chris.kcat at gmail.com  Thu Sep 10 14:11:49 2009
From: chris.kcat at gmail.com (Chris Robinson)
Date: Thu, 10 Sep 2009 12:11:49 -0700
Subject: [PATCH 12/12] openal32: fixed ctx null ptr debug (Coverity)
In-Reply-To: <4aa91876.5e44f10a.2484.6e48SMTPIN_ADDED@mx.google.com>
References: <4aa91876.5e44f10a.2484.6e48SMTPIN_ADDED@mx.google.com>
Message-ID: <200909101211.49165.chris.kcat@gmail.com>

I have a different patch that will fix this, that also fixes a problem with 
error states.


From fenixk19 at mail.ru  Thu Sep 10 14:25:42 2009
From: fenixk19 at mail.ru (Alexander Varnin)
Date: Thu, 10 Sep 2009 23:25:42 +0400
Subject: Asynchronus serial port
In-Reply-To: <200909091109.16125.wine@stwm.de>
References: <4A9F0060.6080805@mail.ru>
	<4d8b5aa80909021855t10aca983o4c96dcae7dbfeb2e@mail.gmail.com>
	<200909091109.16125.wine@stwm.de>
Message-ID: <4AA952B6.1010503@mail.ru>

Thanks, I'll check it, when i have time.

Wolfgang Walter ?????:
> Am Donnerstag, 3. September 2009 schrieb Mike Kaplinskiy:
>   
>> On Wed, Sep 2, 2009 at 7:31 PM, Fenixk19<fenixk19 at mail.ru> wrote:
>>     
>>> Hello! I've already post the
>>> bug(http://bugs.winehq.org/show_bug.cgi?id=19713) on this subject, but i
>>> need more help. So I've decided to write here.
>>> There is a problem in wine. When I use asynchronous serial port read,
>>> data never comes. Event, caused by select comes. But operation status
>>> stays pending, and i can't do anything to this serial port anymore. In
>>> windows it never get pending, and port can be accessed just after data
>>> arrival. Seems to be wineserver problem, but i don't know, where to look
>>> at. What code respond for asynchronous serial port in wineserver?
>>> Alexander.
>>> P.S. Test program attached.
>>>       
>> Hi,
>>
>> Alexandre would be the guy to talk to about wineserver-related things.
>> Sadly he's off on a long weekend. Does the attached patch help solve
>> the problem?
>>     
>
> Isn't setting commio->iosb->u.Status racy?
>
> commio->iosb may be set from wait_for_event() which is called by an extra 
> thread or by io_control().
>
> Couldn't it happen that
>
> 	wait_on starts the thread
> 	wait_for_event sets the commio->iosb->u.Status to STATUS_SUCCESS
> 	wait_on returns to io_control STATUS_PENDING
> 	io_control overwrites commio->iosb->u.Status with STATUS_PENDING
>
> I think io_control() should set commio->iosb->u.Status to STATUS_PENDING 
> before calling wait_on(). After wait_on() io_control() should not set 
> commio->iosb->u.Status if wait_on() returns STATUS_PENDING. Here the idea:
>
> ------------------
>     case IOCTL_SERIAL_WAIT_ON_MASK:
>          if (lpOutBuffer && nOutBufferSize == sizeof(DWORD))
>          {
>              piosb->u.Status = STATUS_PENDING;
>              piosb->Information = sz;
>              if (!(status = wait_on(hDevice, fd, hEvent, piosb, lpOutBuffer)))
>                  sz = sizeof(DWORD);
>              else if (status == STATUS_PENDING)
>                  return status;
>          }
>          else
>              status = STATUS_INVALID_PARAMETER;
>          break;
> -------------------
>
>
> Regards,
>   



From dgerard at gmail.com  Thu Sep 10 15:03:51 2009
From: dgerard at gmail.com (David Gerard)
Date: Thu, 10 Sep 2009 21:03:51 +0100
Subject: winehq: Fix some HTML markup
In-Reply-To: <4AA947B5.7060008@codeweavers.com>
References: <4AA79E67.9060304@dawncrow.de> <4AA947B5.7060008@codeweavers.com>
Message-ID: <fbad4e140909101303h55a7183bq9558901ae7fc7813@mail.gmail.com>

2009/9/10 Jeremy Newman <jnewman at codeweavers.com>:

> The reason I left the XHTML markup in was eventually the goal was to convert
> the entire website to XHTML. The only issue with leaving them in while still
> in HTML4/Transitional is that the pages do not pass W3C validation. I am
> still willing to live with non-valid working HTML to save some work down the
> road.


XHTML is officially no longer developed - the future is HTML5, apparently.


- d.


From msclrhd at googlemail.com  Thu Sep 10 15:10:44 2009
From: msclrhd at googlemail.com (Reece Dunn)
Date: Thu, 10 Sep 2009 21:10:44 +0100
Subject: winehq: Fix some HTML markup
In-Reply-To: <fbad4e140909101303h55a7183bq9558901ae7fc7813@mail.gmail.com>
References: <4AA79E67.9060304@dawncrow.de> <4AA947B5.7060008@codeweavers.com>
	<fbad4e140909101303h55a7183bq9558901ae7fc7813@mail.gmail.com>
Message-ID: <3f4fd2640909101310q50cfd67bi6f4dbe173b6eac62@mail.gmail.com>

2009/9/10 David Gerard <dgerard at gmail.com>:
> 2009/9/10 Jeremy Newman <jnewman at codeweavers.com>:
>
>> The reason I left the XHTML markup in was eventually the goal was to convert
>> the entire website to XHTML. The only issue with leaving them in while still
>> in HTML4/Transitional is that the pages do not pass W3C validation. I am
>> still willing to live with non-valid working HTML to save some work down the
>> road.
>
> XHTML is officially no longer developed - the future is HTML5, apparently.

XHTML 1.0 is essentially HTML as XML. Work on XHTML2 has stopped.
HTML5 still supports the XML form (see
http://www.w3.org/TR/html5/the-xhtml-syntax.html#the-xhtml-syntax)
which supports XML namespaces (e.g. for MathML or SVG inline markup).

- Reece


From paulc at voip.null.ro  Thu Sep 10 15:18:15 2009
From: paulc at voip.null.ro (Paul Chitescu)
Date: Thu, 10 Sep 2009 23:18:15 +0300
Subject: Status of LoadLibrary and .so
In-Reply-To: <d4165710909101210u50f2d76dia66b5b672f83b3dd@mail.gmail.com>
References: <d4165710909101210u50f2d76dia66b5b672f83b3dd@mail.gmail.com>
Message-ID: <200909102318.15307.paulc@voip.null.ro>

On Thursday 10 September 2009 22:10:37 Joe Dluzen wrote:
> Hi all,
>
> back a few years ago it didn't:
> http://www.winehq.org/pipermail/wine-devel/2003-July/018498.html
>
> Does anyone know of the status of LoadLibrary and a .so? Can it load
> directly or is there a workaround that does not involve multiple
> processes and some sort of IPC?
>
> thanks,
> Joe

Hi!

If the problem is to use LoadLibrary() on a native (not windows native but 
posix or whatever) .so you can always write a wrapper .dll.so that links to 
the .so and internally calls its functions. The glue code acts as a 
compatibility layer for the differences and also insulates the native code 
from the win32 compatible code expectations.

Directly loading a .so just like it were a .dll.so or a .dll doesn't make much 
sense because:
- There are differences in the argument types, calling conventions, register 
usage, thread local storage, exception frames.
- Any file name, handle or similar resource would need conversion.
- There are support functions that use mutually incompatible structures (like 
native free() called on a MSVCRT malloc()ed memory block).
- The expected internal structure of a module cannot be loaded - this may not 
be a big issue but needs work in the loader code to provide a stub.

The other way around, loading a DLL from a non-winelib process is generically 
not feasable and in all but the most trivial (and tightly controlled) cases 
needs different processes and IPC. Most Windows DLLs expect a fully 
functional environment to be already set up including exceptions, 
synchronization objects, local heaps, security, handles, consoles, user 
interface, COM. That's what winelib does - it provides this environment.

Paul


From julliard at winehq.org  Thu Sep 10 15:20:59 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 10 Sep 2009 22:20:59 +0200
Subject: ntdll: Do not accept device control requests with invalid and/or
	incompa tible handles
In-Reply-To: <20090910193018.HPOO1293.fep50.mail.dk@post.tele.dk> (Peter Dons
	Tychsen's message of "Thu, 10 Sep 2009 21:30:19 +0200")
References: <1252161985.2994.2.camel@donpedro> <87my5589q9.fsf@wine.dyndns.org>
	<20090910193018.HPOO1293.fep50.mail.dk@post.tele.dk>
Message-ID: <87pr9y4klw.fsf@wine.dyndns.org>

Peter Dons Tychsen <donpedro at tdcadsl.dk> writes:

> Thanks for the comments.
> Not sure i understand them though.
>
> The whole point of the test was to test what happens when you use a wrong
> handle. The actual bug i fixed was that it was possible to for programs
> to send invalid handles to IoControl. Cygwin was infact sending handles
> to ntdll.dll which originated from GetStdHandle().
>
> So i think using this API for testing is relevant, as the point of the
> test is to verify that handles of the completely wrong class are
> rejected, and not just "bad handles".

Yes, but then you should explicitly construct and test both kinds of
handles. Using GetStdHandle will either be a wrong class or a bad handle
depending on whether stdio is to a file or to a console, so you don't
really know which case you are testing. The remapping of console handles
happens in kernel32, not in ntdll, so it doesn't really make sense to
pass the result of GetStdHandle straight to ntdll.

-- 
Alexandre Julliard
julliard at winehq.org


From jnewman at codeweavers.com  Thu Sep 10 15:26:47 2009
From: jnewman at codeweavers.com (Jeremy Newman)
Date: Thu, 10 Sep 2009 15:26:47 -0500
Subject: winehq: Fix some HTML markup
In-Reply-To: <3f4fd2640909101310q50cfd67bi6f4dbe173b6eac62@mail.gmail.com>
References: <4AA79E67.9060304@dawncrow.de>
	<4AA947B5.7060008@codeweavers.com>	<fbad4e140909101303h55a7183bq9558901ae7fc7813@mail.gmail.com>
	<3f4fd2640909101310q50cfd67bi6f4dbe173b6eac62@mail.gmail.com>
Message-ID: <4AA96107.8010509@codeweavers.com>

Reece Dunn wrote:
> 2009/9/10 David Gerard <dgerard at gmail.com>:
>> 2009/9/10 Jeremy Newman <jnewman at codeweavers.com>:
>>
>>> The reason I left the XHTML markup in was eventually the goal was to convert
>>> the entire website to XHTML. The only issue with leaving them in while still
>>> in HTML4/Transitional is that the pages do not pass W3C validation. I am
>>> still willing to live with non-valid working HTML to save some work down the
>>> road.
>> XHTML is officially no longer developed - the future is HTML5, apparently.
> 
> XHTML 1.0 is essentially HTML as XML. Work on XHTML2 has stopped.
> HTML5 still supports the XML form (see
> http://www.w3.org/TR/html5/the-xhtml-syntax.html#the-xhtml-syntax)
> which supports XML namespaces (e.g. for MathML or SVG inline markup).

I'm happy to see the more strict XHTML die. I preferred the looser flow 
of HTML4 anyway.

-N


From paul.vriens.wine at gmail.com  Thu Sep 10 15:35:49 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 10 Sep 2009 22:35:49 +0200
Subject: [ntdll] Add tests for NtQueryInformationFile
In-Reply-To: <a71bd89a0909090541w1a4ff190ya29500c4dce9eb53@mail.gmail.com>
References: <a71bd89a0909090541w1a4ff190ya29500c4dce9eb53@mail.gmail.com>
Message-ID: <4AA96325.90208@gmail.com>

On 09/09/2009 02:41 PM, Dan Kegel wrote:
> Alexandre said I should break up the big xattr patch,
> so here are just the NtQueryInformationFile tests,
> improved a bit.  Once these are in I'll submit the
> NtQueryDirectoryFile tests.
>
> Passes on both Wine and Vista.
>
>
> ------------------------------------------------------------------------
>
>
Hi Dan,

This patch introduces some issues on NT4 and higher. Attached patch 
fixes it but I'm not sure if you are already chasing these failures. 
Weird that it doesn't fail on your Vista box.

That remark "whoops, vista doesn't implement this one?\n" should 
probably be changed.

It also looks like Vista/Win7 has either 2 or 4 failures (most likely 
related to indexing being disabled, if so that could also happen on 
other platforms). Not sure if we should explicitly check for attributes 
being 2020, ignore  FILE_ATTRIBUTE_NOT_CONTENT_INDEXED or just check as 
I did.

-- 
Cheers,

Paul.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090910/6977367c/attachment-0001.asc>

From paul.vriens.wine at gmail.com  Thu Sep 10 15:37:54 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 10 Sep 2009 22:37:54 +0200
Subject: [ntdll] Add tests for NtQueryInformationFile
In-Reply-To: <4AA96325.90208@gmail.com>
References: <a71bd89a0909090541w1a4ff190ya29500c4dce9eb53@mail.gmail.com>
	<4AA96325.90208@gmail.com>
Message-ID: <4AA963A2.907@gmail.com>

On 09/10/2009 10:35 PM, Paul Vriens wrote:
> On 09/09/2009 02:41 PM, Dan Kegel wrote:
>> Alexandre said I should break up the big xattr patch,
>> so here are just the NtQueryInformationFile tests,
>> improved a bit. Once these are in I'll submit the
>> NtQueryDirectoryFile tests.
>>
>> Passes on both Wine and Vista.
>>
>>
>> ------------------------------------------------------------------------
>>
>>
> Hi Dan,
>
> This patch introduces some issues on NT4 and higher. Attached patch
> fixes it but I'm not sure if you are already chasing these failures.
> Weird that it doesn't fail on your Vista box.
>
> That remark "whoops, vista doesn't implement this one?\n" should
> probably be changed.
>
> It also looks like Vista/Win7 has either 2 or 4 failures (most likely
> related to indexing being disabled, if so that could also happen on
> other platforms). Not sure if we should explicitly check for attributes
> being 2020, ignore FILE_ATTRIBUTE_NOT_CONTENT_INDEXED or just check as I
> did.
>

Weird, just saw the results of my Vista box on test.winehq.org. It shows 
4 failures but if I run them standalone (crosscompiled) I only have 2.

-- 
Cheers,

Paul.


From dank at kegel.com  Thu Sep 10 15:49:47 2009
From: dank at kegel.com (Dan Kegel)
Date: Thu, 10 Sep 2009 13:49:47 -0700
Subject: [ntdll] Add tests for NtQueryInformationFile
In-Reply-To: <4AA96325.90208@gmail.com>
References: <a71bd89a0909090541w1a4ff190ya29500c4dce9eb53@mail.gmail.com>
	<4AA96325.90208@gmail.com>
Message-ID: <a71bd89a0909101349r3cf65f78rc5329e4f212ed44d@mail.gmail.com>

On Thu, Sep 10, 2009 at 1:35 PM, Paul Vriens<paul.vriens.wine at gmail.com> wrote:
>> Passes on both Wine and Vista.
>
> This patch introduces some issues on NT4 and higher. Attached patch fixes it
> but I'm not sure if you are already chasing these failures. Weird that it
> doesn't fail on your Vista box.

Must have been user error on my part.  I think I was sleepy when
I was preparing that patch.  I'll try to send in an updated fix tonight.
Thanks!
- Dan


From thunderbird2k at gmail.com  Thu Sep 10 16:00:26 2009
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Thu, 10 Sep 2009 23:00:26 +0200
Subject: bitblt.c - GdiAlphaBlend : Check for NULL Pointer
In-Reply-To: <1252616184.7557.16.camel@netzwerg>
References: <1252616184.7557.16.camel@netzwerg>
Message-ID: <c8485d470909101400g5b0e4395la8193f43807b49c2@mail.gmail.com>

Recently Nikolay Sivov wrote some tests for this call. His tests
didn't make it in yet but I think those should enter and then based on
those results changes should be made.

Roderick

On Thu, Sep 10, 2009 at 10:56 PM, Markus Stockhausen
<markus.stockhausen at collogia.de> wrote:
> Hi,
>
> http://bugs.winehq.org/show_bug.cgi?id=18041 reveals a bug where
> GdiAlphaBlend will crash in Teamviewer application when a NULL pointer
> is handed over. The attached check fixes that behaviour.
>
> Tanks in advance.
>
> Markus
>
>
>
>
>


From paul.vriens.wine at gmail.com  Thu Sep 10 16:02:36 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 10 Sep 2009 23:02:36 +0200
Subject: bitblt.c - GdiAlphaBlend : Check for NULL Pointer
In-Reply-To: <1252616184.7557.16.camel@netzwerg>
References: <1252616184.7557.16.camel@netzwerg>
Message-ID: <4AA9696C.8010101@gmail.com>

On 09/10/2009 10:56 PM, Markus Stockhausen wrote:
> Hi,
>
> http://bugs.winehq.org/show_bug.cgi?id=18041 reveals a bug where
> GdiAlphaBlend will crash in Teamviewer application when a NULL pointer
> is handed over. The attached check fixes that behaviour.
>
> Tanks in advance.
>
> Markus
>
>
>
> ------------------------------------------------------------------------
>
>
No comments on the validity of the patch but you should add a test for 
this to the conformance tests.

If you are bailing out when dcSrc == NULL then the other checks in that 
function for dcSrc are not necessary anymore.

-- 
Cheers,

Paul.


From bunglehead at gmail.com  Thu Sep 10 16:17:03 2009
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Fri, 11 Sep 2009 01:17:03 +0400
Subject: bitblt.c - GdiAlphaBlend : Check for NULL Pointer
In-Reply-To: <c8485d470909101400g5b0e4395la8193f43807b49c2@mail.gmail.com>
References: <1252616184.7557.16.camel@netzwerg>
	<c8485d470909101400g5b0e4395la8193f43807b49c2@mail.gmail.com>
Message-ID: <4AA96CCF.1060209@gmail.com>

Roderick Colenbrander wrote:
> Recently Nikolay Sivov wrote some tests for this call. His tests
> didn't make it in yet but I think those should enter and then based on
> those results changes should be made.
>
> Roderick
>
> On Thu, Sep 10, 2009 at 10:56 PM, Markus Stockhausen
> <markus.stockhausen at collogia.de> wrote:
>   
>> Hi,
>>
>> http://bugs.winehq.org/show_bug.cgi?id=18041 reveals a bug where
>> GdiAlphaBlend will crash in Teamviewer application when a NULL pointer
>> is handed over. The attached check fixes that behaviour.
>>
>> Tanks in advance.
>>
>> Markus
>>     
This is what Roderick is talking about:

http://www.winehq.org/pipermail/wine-patches/2009-September/078293.html

I don't think it will be committed, it should be included with a fix.

You may take this part and resubmit:
---
+ SetLastError(0xdeadbeef);
+ expect_eq(pGdiAlphaBlend(hdcDst, 0, 0, 20, 20, NULL, 0, 0, 20, 20, 
blend), FALSE, BOOL, "%d");
+ expect_eq(GetLastError(), 0xdeadbeef, int, "%d");
---




From jwhite at codeweavers.com  Thu Sep 10 16:48:24 2009
From: jwhite at codeweavers.com (Jeremy White)
Date: Thu, 10 Sep 2009 16:48:24 -0500
Subject: Wineconf drumbeat - don't sleep on the streets!
Message-ID: <4AA97428.5030201@codeweavers.com>

Hi Folks,

It's now close enough to November that you can't blow
this email off <grin>.

We've got all the info here:
  http://wiki.winehq.org/WineConf2009

Our challenge this year is that we're managing the booking,
so we need a firm head count ahead of time.

Again, if money is an issue, and you haven't already, please 
contact me privately.

So if you're thinking of coming, email Hans.  

Now.  

Please.

Failure to do so may result in your sleeping on the streets
of Enschede *grin*.

Cheers,

Jeremy


From bunglehead at gmail.com  Thu Sep 10 16:56:50 2009
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Fri, 11 Sep 2009 01:56:50 +0400
Subject: bitblt.c - GdiAlphaBlend : Check for NULL Pointer
In-Reply-To: <1252618752.9982.14.camel@netzwerg>
References: <1252616184.7557.16.camel@netzwerg>	
	<c8485d470909101400g5b0e4395la8193f43807b49c2@mail.gmail.com>	
	<4AA96CCF.1060209@gmail.com> <1252618752.9982.14.camel@netzwerg>
Message-ID: <4AA97622.4040704@gmail.com>

Markus Stockhausen wrote:
> Am Freitag, den 11.09.2009, 01:17 +0400 schrieb Nikolay Sivov:
>   
>>
>
> Phew, in 3 days from 0 to 100. Too much for me. If I get it right, there
> are two things to do.
>
> 1. I should optimize my patch and remove unnecessary dcSrc checks.
>   
Actually, yes. After your patch this check:
---
if (dcSrc) update_dc( dcSrc );
---
is useless.
> 2. A testcase is needed to prove the correct function behaviour in
> Windows and Wine. The tastcase is already available but not commited
> yet.
>   
Yes, testcase is trivial. I also did some visual tests and saw now 
difference on destination
dc calling this with source == NULL.
> For me this means:
>
> 1. Wait for testcase implementation.
> 2. Create new patch and test under Wine
> 3. Ask someone to do test under Windows
> 2. Resent patch to mailing list.
>
> Thanks for your patience.
>
> Markus
>   
Just correct your patch (as you mentioned before), include simple 
testcase and resend.
So nothing to wait for.

Basic test shows it doesn't crash on Windows and doesn't change last 
error - I already
check this on XP and it passes.



From marcus at jet.franken.de  Thu Sep 10 17:00:11 2009
From: marcus at jet.franken.de (Marcus Meissner)
Date: Fri, 11 Sep 2009 00:00:11 +0200
Subject: Wineconf drumbeat - don't sleep on the streets!
In-Reply-To: <4AA97428.5030201@codeweavers.com>
References: <4AA97428.5030201@codeweavers.com>
Message-ID: <20090910220011.GE9589@galeere.jet.franken.de>

On Thu, Sep 10, 2009 at 04:48:24PM -0500, Jeremy White wrote:
> Hi Folks,
> 
> It's now close enough to November that you can't blow
> this email off <grin>.
> 
> We've got all the info here:
>   http://wiki.winehq.org/WineConf2009
> 
> Our challenge this year is that we're managing the booking,
> so we need a firm head count ahead of time.
> 
> Again, if money is an issue, and you haven't already, please 
> contact me privately.

Just how does one switch the PayPal interface to Euro I wonder ;)

Ciao, Marcus


From hverbeet at gmail.com  Thu Sep 10 17:05:02 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 11 Sep 2009 00:05:02 +0200
Subject: [2/4] WineD3D: Make context_attach_surface_fbo srgb aware
In-Reply-To: <200909102241.06127.stefan@codeweavers.com>
References: <200909102241.06127.stefan@codeweavers.com>
Message-ID: <d658b69e0909101505o779a527ai197fefee4765d496@mail.gmail.com>

2009/9/10 Stefan D?singer <stefan at codeweavers.com>:
> @@ -402,7 +433,7 @@ static void context_apply_fbo_entry(struct wined3d_context *context, struct fbo_
>          for (i = 0; i < GL_LIMITS(buffers); ++i)
>          {
>              IWineD3DSurface *render_target = device->render_targets[i];
> -            context_attach_surface_fbo(context, GL_FRAMEBUFFER_EXT, i, render_target);
> +            context_attach_surface_fbo(context, GL_FRAMEBUFFER_EXT, i, render_target, SRGB_ANY);
>          }
>
>          /* Apply depth targets */
I don't think SRGB_ANY is correct here. context_apply_fbo_entry() very
much cares about which texture is attached to the FBO. If rendering to
sRGB textures was supported properly this would depend on the sRGB
write state, but since it isn't this should aways be SRGB_RGB.

> @@ -2041,7 +2072,7 @@ struct wined3d_context *ActivateContext(IWineD3DDeviceImpl *This, IWineD3DSurfac
>                      FIXME("Activating for CTXUSAGE_BLIT for an offscreen target with ORM_FBO. This should be avoided.\n");
>                      ENTER_GL();
>                      context_bind_fbo(context, GL_FRAMEBUFFER_EXT, &context->dst_fbo);
> -                    context_attach_surface_fbo(context, GL_FRAMEBUFFER_EXT, 0, target);
> +                    context_attach_surface_fbo(context, GL_FRAMEBUFFER_EXT, 0, target, SRGB_ANY);
>                      context_attach_depth_stencil_fbo(context, GL_FRAMEBUFFER_EXT, NULL, FALSE);
>                      LEAVE_GL();
>                  } else {
Similar to above.

> @@ -6045,7 +6045,7 @@ static void color_fill_fbo(IWineD3DDevice *iface, IWineD3DSurface *surface,
>          context = ActivateContext(This, NULL, CTXUSAGE_RESOURCELOAD);
>          ENTER_GL();
>          context_bind_fbo(context, GL_FRAMEBUFFER_EXT, &context->dst_fbo);
> -        context_attach_surface_fbo(context, GL_FRAMEBUFFER_EXT, 0, surface);
> +        context_attach_surface_fbo(context, GL_FRAMEBUFFER_EXT, 0, surface, SRGB_ANY);
>          context_attach_depth_stencil_fbo(context, GL_FRAMEBUFFER_EXT, NULL, FALSE);
>      }
Afaik color fill colors are specified in RGB space. Unless you have a
test that shows otherwise, this should be SRGB_RGB.

> @@ -6463,7 +6463,7 @@ void stretch_rect_fbo(IWineD3DDevice *iface, IWineD3DSurface *src_surface, WINED
>          TRACE("Source surface %p is offscreen\n", src_surface);
>          ENTER_GL();
>          context_bind_fbo(context, GL_READ_FRAMEBUFFER_EXT, &context->src_fbo);
> -        context_attach_surface_fbo(context, GL_READ_FRAMEBUFFER_EXT, 0, src_surface);
> +        context_attach_surface_fbo(context, GL_READ_FRAMEBUFFER_EXT, 0, src_surface, SRGB_ANY);
>          glReadBuffer(GL_COLOR_ATTACHMENT0_EXT);
>          checkGLcall("glReadBuffer()");
>          context_attach_depth_stencil_fbo(context, GL_READ_FRAMEBUFFER_EXT, NULL, FALSE);
> @@ -6503,7 +6503,7 @@ void stretch_rect_fbo(IWineD3DDevice *iface, IWineD3DSurface *src_surface, WINED
>
>          ENTER_GL();
>          context_bind_fbo(context, GL_DRAW_FRAMEBUFFER_EXT, &context->dst_fbo);
> -        context_attach_surface_fbo(context, GL_DRAW_FRAMEBUFFER_EXT, 0, dst_surface);
> +        context_attach_surface_fbo(context, GL_DRAW_FRAMEBUFFER_EXT, 0, dst_surface, SRGB_ANY);
>          glDrawBuffer(GL_COLOR_ATTACHMENT0_EXT);
>          checkGLcall("glDrawBuffer()");
>          context_attach_depth_stencil_fbo(context, GL_DRAW_FRAMEBUFFER_EXT, NULL, FALSE);
This doesn't work either. While it probably doesn't matter if the blit
is done in RGB or sRGB space, it still needs to be the same color
space for both surfaces (and one of those can be onscreen).

On a higher level, I'm not really happy with how sRGB textures
currently fit in and how that's starting to spread to everything that
has to deal with surfaces.


From hverbeet at gmail.com  Thu Sep 10 17:05:22 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 11 Sep 2009 00:05:22 +0200
Subject: [3/4] WineD3D: Perform the srgb copy with fbo_blit if possible
In-Reply-To: <200909102241.59545.stefan@codeweavers.com>
References: <200909102241.59545.stefan@codeweavers.com>
Message-ID: <d658b69e0909101505g3bde4102p35b3fbdbe96da62b@mail.gmail.com>

2009/9/10 Stefan D?singer <stefan at codeweavers.com>:
> +    if (context->current_fbo) {
> +        context_bind_fbo(context, GL_FRAMEBUFFER_EXT, &context->current_fbo->id);
> +    } else {
> +        context_bind_fbo(context, GL_FRAMEBUFFER_EXT, NULL);
> +    }
This shouldn't be needed.

> +    /* Need FBOs obviously */
> +    if(wined3d_settings.offscreen_rendering_mode != ORM_FBO) return FALSE;
> +    /* Need framebuffer blit */
> +    if(!GL_SUPPORT(EXT_FRAMEBUFFER_BLIT)) return FALSE;
> +    /* Need to be able to attach both RGB and sRGB copy */
> +    if((fmt_flags & attach_flags) != attach_flags) return FALSE;
> +    /* Need to be able to blit from and to my format */
> +    if(!surface_can_stretch_rect(This, This)) return FALSE;
> +    /* Need either RGB or sRGB copy up to date */
> +    if((This->Flags & (SFLAG_INSRGBTEX | SFLAG_INTEXTURE)) == 0) return FALSE;That's redundant,
Some of those are redundant. A format is never FBO attachable if FBOs
are disabled, surface_can_stretch_rect() will already check for
regular attachment.


From stefan at codeweavers.com  Thu Sep 10 18:16:26 2009
From: stefan at codeweavers.com (Stefan =?utf-8?q?D=C3=B6singer?=)
Date: Fri, 11 Sep 2009 01:16:26 +0200
Subject: [2/4] WineD3D: Make context_attach_surface_fbo srgb aware
In-Reply-To: <d658b69e0909101505o779a527ai197fefee4765d496@mail.gmail.com>
References: <200909102241.06127.stefan@codeweavers.com>
	<d658b69e0909101505o779a527ai197fefee4765d496@mail.gmail.com>
Message-ID: <200909110116.27032.stefan@codeweavers.com>

Am Friday 11 September 2009 00:05:02 schrieb Henri Verbeet:
> I don't think SRGB_ANY is correct here. context_apply_fbo_entry() very
> much cares about which texture is attached to the FBO. If rendering to
> sRGB textures was supported properly this would depend on the sRGB
> write state, but since it isn't this should aways be SRGB_RGB.
Rendering to the RGB or sRGB copy of the surface isn't related to the srgb 
write state. It's only related to how the surface is read. An application can 
render to a texture with srgb writes off and read the texture with srgb read 
correction on. In this case we want to render to the srgb copy, otherwise we 
have to copy it later.

Whether you render to the RGB or sRGB copy doesn't affect the resulting data 
written into the texture, only performance(in the sense that a copy is needed 
or not needed).

> This doesn't work either. While it probably doesn't matter if the blit
> is done in RGB or sRGB space, it still needs to be the same color
> space for both surfaces (and one of those can be onscreen).
All drivers I found so far can blit between sRGB and RGB textures, and it does 
what we want(doesn't change the data in the texture), so there's no problem 
if we blit from an RGB onscreen surface to an sRGB offscreen surface. If this 
didn't work the entire [3/4] patch would be moot.

> On a higher level, I'm not really happy with how sRGB textures
> currently fit in and how that's starting to spread to everything that
> has to deal with surfaces.
I am not happy with this either, but I don't see this issue going away anytime 
soon. I'm always open to alternative suggestions though.

Two alternative ideas I had and threw away:
-> Handle this in the texture, create two set of surfaces for each texture. 
Somewhat in the way the first crossover hack for this issue worked. That 
causes troubles if the app updates a surface, since we have to decide in the 
getSurfaceLevel call where all updates in the future will go. We'll also have 
to duplicate the location management in textures.

-> Handle this in d3d9, and create two wined3d textures/surfaces/volumes. 
Sounds nice at first because ddraw, d3d8 and as far as I can see d3d10 don't 
have this problem in the same way d3d9 does. But it would run into the same 
issues as the idea above, we'd have to duplicate the location management in 
d3d9, and maybe duplicate the stateblock management in d3d9(to keep track of 
D3DSAMP_SRGBTEXTURE, I am not sure if a GetSamplerState call is enough)

-> Some more generic system of having multiple GL textures per d3d 
texture/surface. I was thinking about that when we had issues with a texture 
being read on different samplers with different sampler states. However, I 
never had a good idea what this might look like, nor how this would be more 
elegant in the end.



From jwhite at codeweavers.com  Thu Sep 10 22:37:00 2009
From: jwhite at codeweavers.com (Jeremy White)
Date: Thu, 10 Sep 2009 22:37:00 -0500
Subject: Wineconf drumbeat - don't sleep on the streets!
In-Reply-To: <20090910220011.GE9589@galeere.jet.franken.de>
References: <4AA97428.5030201@codeweavers.com>
	<20090910220011.GE9589@galeere.jet.franken.de>
Message-ID: <4AA9C5DC.8000201@codeweavers.com>

> Just how does one switch the PayPal interface to Euro I wonder ;)

Actually, Paypal takes Euros just fine (we use it at CodeWeavers), but
it was rather remiss of me to not set that up *first* :-(.

I need to connect with the SFC guys to get that set, so bear with me for a few days
while I iron that out.

Cheers,

Jeremy


From nlaroche at vt.edu  Thu Sep 10 23:51:28 2009
From: nlaroche at vt.edu (Nicholas LaRoche)
Date: Fri, 11 Sep 2009 00:51:28 -0400
Subject: Status of LoadLibrary and .so
In-Reply-To: <200909102318.15307.paulc@voip.null.ro>
References: <d4165710909101210u50f2d76dia66b5b672f83b3dd@mail.gmail.com>
	<200909102318.15307.paulc@voip.null.ro>
Message-ID: <4AA9D750.6070803@vt.edu>

Paul Chitescu wrote:
> On Thursday 10 September 2009 22:10:37 Joe Dluzen wrote:
>> Hi all,
>>
>> back a few years ago it didn't:
>> http://www.winehq.org/pipermail/wine-devel/2003-July/018498.html
>>
>> Does anyone know of the status of LoadLibrary and a .so? Can it load
>> directly or is there a workaround that does not involve multiple
>> processes and some sort of IPC?
>>
>> thanks,
>> Joe
> 
> Hi!
> 
> If the problem is to use LoadLibrary() on a native (not windows native but 
> posix or whatever) .so you can always write a wrapper .dll.so that links to 
> the .so and internally calls its functions. The glue code acts as a 
> compatibility layer for the differences and also insulates the native code 
> from the win32 compatible code expectations.
> 
> Directly loading a .so just like it were a .dll.so or a .dll doesn't make much 
> sense because:
> - There are differences in the argument types, calling conventions, register 
> usage, thread local storage, exception frames.
> - Any file name, handle or similar resource would need conversion.
> - There are support functions that use mutually incompatible structures (like 
> native free() called on a MSVCRT malloc()ed memory block).
> - The expected internal structure of a module cannot be loaded - this may not 
> be a big issue but needs work in the loader code to provide a stub.
> 
> The other way around, loading a DLL from a non-winelib process is generically 
> not feasable and in all but the most trivial (and tightly controlled) cases 
> needs different processes and IPC. Most Windows DLLs expect a fully 
> functional environment to be already set up including exceptions, 
> synchronization objects, local heaps, security, handles, consoles, user 
> interface, COM. That's what winelib does - it provides this environment.
> 
> Paul
> 
> 
> 

Perhaps the step of creating a wrapper dll.so file could be automated by 
a script that checks the exports (or headers/signatures) of the target 
.so file and generates a Win32 C stub for each export. This might reduce 
the development overhead needed to support a native .so library despite 
not being able to load it directly. Instrumenting the target .so library 
within the dll.so file would be required (as the parent points out).

-Nick


From donpedro at tdcadsl.dk  Thu Sep 10 14:30:19 2009
From: donpedro at tdcadsl.dk (Peter Dons Tychsen)
Date: Thu, 10 Sep 2009 21:30:19 +0200
Subject: ntdll: Do not accept device control requests with invalid and/or
	incompa tible handles
References: <1252161985.2994.2.camel@donpedro> <87my5589q9.fsf@wine.dyndns.org>
Message-ID: <20090910193018.HPOO1293.fep50.mail.dk@post.tele.dk>

Thanks for the comments.
Not sure i understand them though.

The whole point of the test was to test what happens when you use a wrong
handle. The actual bug i fixed was that it was possible to for programs
to send invalid handles to IoControl. Cygwin was infact sending handles
to ntdll.dll which originated from GetStdHandle().

So i think using this API for testing is relevant, as the point of the
test is to verify that handles of the completely wrong class are
rejected, and not just "bad handles".

Thanks,

/pedro

----- Original meddelelse -----

> Fra: Alexandre Julliard <julliard at winehq.org>
> Til: Peter Dons Tychsen <donpedro at tdcadsl.dk>
> Cc: wine-devel at winehq.org
> Dato: Tir, 08. sep 2009 22:25
> Emne: Re: ntdll: Do not accept device control requests with invalid
> and/or incompatible handles
> 
> Peter Dons Tychsen <donpedro at tdcadsl.dk> writes:
> 
> > +static void test_device_control(void)
> > +{
> > + IO_STATUS_BLOCK io;
> > + NTSTATUS status;
> > +
> > + /* Try using a bugus handle for I/O control */
> > + HANDLE handle = (HANDLE)0xdeadbeef;
> > + status = pNtDeviceIoControlFile(handle, NULL, NULL, NULL, &io,
> IOCTL_SERIAL_SET_BAUD_RATE, NULL, 0, NULL, 0);
> > + ok(status == STATUS_INVALID_HANDLE, "Expected %08X, got %08X\n",
> STATUS_INVALID_HANDLE, status);
> > +
> > + /* Try using an valid (but wrong) handle for I/O control */
> > + handle = GetStdHandle(STD_INPUT_HANDLE);
> > + status = pNtDeviceIoControlFile(handle, NULL, NULL, NULL, &io,
> IOCTL_SERIAL_SET_BAUD_RATE, NULL, 0, NULL, 0);
> > + ok(status == STATUS_INVALID_HANDLE, "Expected %08X, got %08X\n",
> STATUS_INVALID_HANDLE, status);
> 
> GetStdHandle returns a console handle which is not a valid ntdll
> handle,
> so you are not testing what you think.
> 
> --
> Alexandre Julliard
> julliard at winehq.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090910/822004ce/attachment.htm>

From markus.stockhausen at collogia.de  Thu Sep 10 16:39:12 2009
From: markus.stockhausen at collogia.de (Markus Stockhausen)
Date: Thu, 10 Sep 2009 23:39:12 +0200
Subject: bitblt.c - GdiAlphaBlend : Check for NULL Pointer
In-Reply-To: <4AA96CCF.1060209@gmail.com>
References: <1252616184.7557.16.camel@netzwerg>
	<c8485d470909101400g5b0e4395la8193f43807b49c2@mail.gmail.com>
	<4AA96CCF.1060209@gmail.com>
Message-ID: <1252618752.9982.14.camel@netzwerg>

Am Freitag, den 11.09.2009, 01:17 +0400 schrieb Nikolay Sivov:
> Roderick Colenbrander wrote:
> > Recently Nikolay Sivov wrote some tests for this call. His tests
> > didn't make it in yet but I think those should enter and then based on
> > those results changes should be made.
> >
> > Roderick
> >
> > On Thu, Sep 10, 2009 at 10:56 PM, Markus Stockhausen
> > <markus.stockhausen at collogia.de> wrote:
> >   
> >> Hi,
> >>
> >> http://bugs.winehq.org/show_bug.cgi?id=18041 reveals a bug where
> >> GdiAlphaBlend will crash in Teamviewer application when a NULL pointer
> >> is handed over. The attached check fixes that behaviour.
> >>
> >> Tanks in advance.
> >>
> >> Markus
> >>     
> This is what Roderick is talking about:
> 
> http://www.winehq.org/pipermail/wine-patches/2009-September/078293.html
> 
> I don't think it will be committed, it should be included with a fix.
> 
> You may take this part and resubmit:
> ---
> + SetLastError(0xdeadbeef);
> + expect_eq(pGdiAlphaBlend(hdcDst, 0, 0, 20, 20, NULL, 0, 0, 20, 20, 
> blend), FALSE, BOOL, "%d");
> + expect_eq(GetLastError(), 0xdeadbeef, int, "%d");
> ---
> 
> 

Phew, in 3 days from 0 to 100. Too much for me. If I get it right, there
are two things to do.

1. I should optimize my patch and remove unnecessary dcSrc checks.
2. A testcase is needed to prove the correct function behaviour in
Windows and Wine. The tastcase is already available but not commited
yet.

For me this means:

1. Wait for testcase implementation.
2. Create new patch and test under Wine
3. Ask someone to do test under Windows
2. Resent patch to mailing list.

Thanks for your patience.

Markus




From markus.stockhausen at collogia.de  Thu Sep 10 17:47:03 2009
From: markus.stockhausen at collogia.de (Markus Stockhausen)
Date: Fri, 11 Sep 2009 00:47:03 +0200
Subject: bitblt.c - GdiAlphaBlend : Check for NULL Pointer
In-Reply-To: <4AA97622.4040704@gmail.com>
References: <1252616184.7557.16.camel@netzwerg>
	<c8485d470909101400g5b0e4395la8193f43807b49c2@mail.gmail.com>
	<4AA96CCF.1060209@gmail.com> <1252618752.9982.14.camel@netzwerg>
	<4AA97622.4040704@gmail.com>
Message-ID: <1252622823.4241.5.camel@netzwerg>

Am Freitag, den 11.09.2009, 01:56 +0400 schrieb Nikolay Sivov:
> Just correct your patch (as you mentioned before), include simple 
> testcase and resend.
> So nothing to wait for.
> 
> Basic test shows it doesn't crash on Windows and doesn't change last 
> error - I already
> check this on XP and it passes.
> 

Ok, attached you will find my second try. Testcase of Nicolay included
this time. Hopefully it will be better this time.

Best regards.


-------------- next part --------------
A non-text attachment was scrubbed...
Name: diff.patch
Type: text/x-patch
Size: 1584 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090911/74037e4e/attachment.bin>

From paul.vriens.wine at gmail.com  Fri Sep 11 02:04:34 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Fri, 11 Sep 2009 09:04:34 +0200
Subject: bitblt.c - GdiAlphaBlend : Check for NULL Pointer
In-Reply-To: <1252622823.4241.5.camel@netzwerg>
References: <1252616184.7557.16.camel@netzwerg>	<c8485d470909101400g5b0e4395la8193f43807b49c2@mail.gmail.com>	<4AA96CCF.1060209@gmail.com>
	<1252618752.9982.14.camel@netzwerg>	<4AA97622.4040704@gmail.com>
	<1252622823.4241.5.camel@netzwerg>
Message-ID: <4AA9F682.8090802@gmail.com>

On 09/11/2009 12:47 AM, Markus Stockhausen wrote:
> Am Freitag, den 11.09.2009, 01:56 +0400 schrieb Nikolay Sivov:
>> Just correct your patch (as you mentioned before), include simple
>> testcase and resend.
>> So nothing to wait for.
>>
>> Basic test shows it doesn't crash on Windows and doesn't change last
>> error - I already
>> check this on XP and it passes.
>>
>
> Ok, attached you will find my second try. Testcase of Nicolay included
> this time. Hopefully it will be better this time.
>
> Best regards.
>
>
>
>
> ------------------------------------------------------------------------
>
>
Hi Markus,

One I see is a style issue with the if statement. There shouldn't be a 
space after the opening and before the closing bracket.

Another thing (style again) is that maybe it's nicer to return FALSE 
instead of ret (as is done throughout this file).

-- 
Cheers,

Paul.


From paul.vriens.wine at gmail.com  Fri Sep 11 02:24:53 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Fri, 11 Sep 2009 09:24:53 +0200
Subject: bitblt.c - GdiAlphaBlend : Check for NULL Pointer
In-Reply-To: <1252653221.4123.2.camel@netzwerg>
References: <1252616184.7557.16.camel@netzwerg>	
	<c8485d470909101400g5b0e4395la8193f43807b49c2@mail.gmail.com>	
	<4AA96CCF.1060209@gmail.com> <1252618752.9982.14.camel@netzwerg>	
	<4AA97622.4040704@gmail.com> <1252622823.4241.5.camel@netzwerg>	
	<4AA9F682.8090802@gmail.com> <1252653221.4123.2.camel@netzwerg>
Message-ID: <4AA9FB45.3010002@gmail.com>

On 09/11/2009 09:13 AM, Markus Stockhausen wrote:
> Am Freitag, den 11.09.2009, 09:04 +0200 schrieb Paul Vriens:
>> Hi Markus,
>>
>> One I see is a style issue with the if statement. There shouldn't be a
>> space after the opening and before the closing bracket.
>>
>> Another thing (style again) is that maybe it's nicer to return FALSE
>> instead of ret (as is done throughout this file).
>>
>
> Resending the desired changes and hoping to see them finding their way
> into git ...
>
> Best regards.
>

Patches that you want to have committed should go to wine-patches.

I did found another small issue though:

line 532: "dcSrc ? dcSrc->physDev : NULL" this should be replaced as well.

-- 
Cheers,

Paul.


From Stefan.Leichter at camline.com  Fri Sep 11 03:14:19 2009
From: Stefan.Leichter at camline.com (Stefan Leichter)
Date: Fri, 11 Sep 2009 10:14:19 +0200
Subject: RFC: registry keys of serial ports
Message-ID: <200909111014.20109.Stefan.Leichter@camline.com>

Hi,

i like to know what modifikations the attached patch needs to go into git.

More things need to be done in this area. I know of:
- more registry keys [1]
- remove the registry keys when a serial port disappears (USB)
- the links in the dosdevice directory needs to be created

Patches for the items above will be created, when the current patch went into 
git

References:
1 http://www.winehq.org/pipermail/wine-patches/2009-April/071999.html
- http://www.winehq.org/pipermail/wine-devel/2009-April/074476.html

-- 
Stefan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mountmgr_sys.diff
Type: text/x-diff
Size: 5271 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090911/34799162/attachment.diff>

From dmitry at codeweavers.com  Fri Sep 11 03:31:14 2009
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Fri, 11 Sep 2009 17:31:14 +0900
Subject: registry keys of serial ports
References: <200909111014.20109.Stefan.Leichter@camline.com>
Message-ID: <733172B38BEC498E945C1B81B3A62E5C@DMITRY>

"Stefan Leichter" <Stefan.Leichter at camline.com> wrote:

> i like to know what modifikations the attached patch needs to go into git.

1. patch needs to be created with git
2. there is no need to create a new file

> @@ -175,6 +180,16 @@
>          p_libhal_device_add_property_watch( ctx, udi, &error );
>      }
>      else if (guid_ptr) add_volume( udi, device, mount_point, DEVICE_HARDDISK_VOL, guid_ptr );
> +    goto done;

Is there any reason you are doing 'goto done' above?

> +
> +serial:
> +    if (!(device = p_libhal_device_get_property_string( ctx, udi, "serial.device", &error )))
> +        goto done;
> +
> +    if ( -1 == (port = p_libhal_device_get_property_int( ctx, udi, "serial.port", &error )))
> +        goto done;

'if ( -1 == port...' doesn't match existing style, 'if (port... == -1)' does.
Same for other places.

> +
> +    add_serial_device(port, device);
>  
>  done:
>      if (type) p_libhal_free_string( type );

> +NTSTATUS add_serial_device(int port, const char *device)
> +{
> +    static const WCHAR format_data[]  = {'C','O','M','%','d',0};
> +    static const WCHAR serialcom[] = {'M','a','c','h','i','n','e','\\',
> +                                      'H','A','R','D','W','A','R','E','\\',
> +                                      'D','E','V','I','C','E','M','A','P','\\',
> +                                      'S','E','R','I','A','L','C','O','M','M',0};
> +    static const UNICODE_STRING serialcom_str
> +                        = {sizeof(serialcom)-1, sizeof(serialcom), (WCHAR*) serialcom};

You should not cast away 'const'.

> +
> +    CHAR value[50];
> +    HANDLE targetKey = NULL;
> +    NTSTATUS retval;
> +    OBJECT_ATTRIBUTES attr;
> +    UNICODE_STRING valueU = {0, 0, NULL};

Initialization is not needed above since you are doing it anyway.

> +    WCHAR data[10];
> +
> +    attr.Length = sizeof(attr);
> +    attr.RootDirectory = 0;
> +    attr.ObjectName = (UNICODE_STRING*) &serialcom_str;

You should not cast away 'const'.

-- 
Dmitry.


From Stefan.Leichter at camline.com  Fri Sep 11 05:06:38 2009
From: Stefan.Leichter at camline.com (Stefan Leichter)
Date: Fri, 11 Sep 2009 12:06:38 +0200
Subject: registry keys of serial ports
In-Reply-To: <733172B38BEC498E945C1B81B3A62E5C@DMITRY>
References: <200909111014.20109.Stefan.Leichter@camline.com>
	<733172B38BEC498E945C1B81B3A62E5C@DMITRY>
Message-ID: <200909111206.38846.Stefan.Leichter@camline.com>

Hello Dmitry,

Thank You for your review, but

Am Friday 11 September 2009 10:31:14 schrieb Dmitry Timoshkov:
> "Stefan Leichter" <Stefan.Leichter at camline.com> wrote:
> > i like to know what modifikations the attached patch needs to go into
> > git.
>
> 1. patch needs to be created with git
Next time you will tell me what editor to use ;-). This was _never_ needed 
before

> 2. there is no need to create a new file
Currently the new file is small, but it will grow in the future as i wrote. 
Also the drive stuff has its own file. 

I like to hear AJ opinion here.

>
> > @@ -175,6 +180,16 @@
> >          p_libhal_device_add_property_watch( ctx, udi, &error );
> >      }
> >      else if (guid_ptr) add_volume( udi, device, mount_point,
> > DEVICE_HARDDISK_VOL, guid_ptr ); +    goto done;
>
> Is there any reason you are doing 'goto done' above?
>
Technically you are right. But the goto will make clear the code related to 
the drive stuff is finished.

> > +
> > +serial:
> > +    if (!(device = p_libhal_device_get_property_string( ctx, udi,
> > "serial.device", &error ))) +        goto done;
> > +
> > +    if ( -1 == (port = p_libhal_device_get_property_int( ctx, udi,
> > "serial.port", &error ))) +        goto done;
>
> 'if ( -1 == port...' doesn't match existing style, 'if (port... == -1)'
> does. Same for other places.
>
> > +
> > +    add_serial_device(port, device);
> >
> >  done:
> >      if (type) p_libhal_free_string( type );
> >
> > +NTSTATUS add_serial_device(int port, const char *device)
> > +{
> > +    static const WCHAR format_data[]  = {'C','O','M','%','d',0};
> > +    static const WCHAR serialcom[] = {'M','a','c','h','i','n','e','\\',
> > +                                     
> > 'H','A','R','D','W','A','R','E','\\', +                                  
> >    'D','E','V','I','C','E','M','A','P','\\', +                           
> >           'S','E','R','I','A','L','C','O','M','M',0}; +    static const
> > UNICODE_STRING serialcom_str
> > +                        = {sizeof(serialcom)-1, sizeof(serialcom),
> > (WCHAR*) serialcom};
>
> You should not cast away 'const'.
What do you suggest to get around the compiler warning 
"warning: assignment discards qualifiers from pointer target type"
>
> > +
> > +    CHAR value[50];
> > +    HANDLE targetKey = NULL;
> > +    NTSTATUS retval;
> > +    OBJECT_ATTRIBUTES attr;
> > +    UNICODE_STRING valueU = {0, 0, NULL};
>
> Initialization is not needed above since you are doing it anyway.
Do you know what RtlFreeUnicodeString() does on uninitialized variables (on 
all supported operating systems)? I will move some code to make sure the sure 
the variable is initialize always

>
> > +    WCHAR data[10];
> > +
> > +    attr.Length = sizeof(attr);
> > +    attr.RootDirectory = 0;
> > +    attr.ObjectName = (UNICODE_STRING*) &serialcom_str;
>
> You should not cast away 'const'.
s.a.

-- 
Stefan


From christian.gmeiner at gmail.com  Fri Sep 11 05:30:01 2009
From: christian.gmeiner at gmail.com (Christian Gmeiner)
Date: Fri, 11 Sep 2009 12:30:01 +0200
Subject: RFC: registry keys of serial ports
In-Reply-To: <200909111014.20109.Stefan.Leichter@camline.com>
References: <200909111014.20109.Stefan.Leichter@camline.com>
Message-ID: <3192d3cd0909110330x2915c163vf4c3a403921fbf40@mail.gmail.com>

Hi Stefan,

I like the idea of adding more registry keys for hardware components.
I want some registry keys for usb devices
so I had a look at your patch. I don't like the mess with the added
goto serial. If in future there will be support
for usb and the whole source will be quite hard to follow. The usb
registry keys are needed e.g. for this [1].
So i like to propose my idea how it could look like.

In function new_device( LibHalContext *ctx, const char *udi ) we could
readout the info.subsystem setting of the newly added device and add a
if for info.subsystem strings like
block - block devices
tty - serial
usb_devices/usb - usb

could look like

/* HAL callback for new device */
static void new_device( LibHalContext *ctx, const char *udi )
{
    DBusError error;
    char *subsystem = NULL;

    p_dbus_error_init( &error );

    if (!(subsystem = p_libhal_device_get_property_string( ctx, udi,
"info.subsystem", &error )))
        goto done;

    if (strcmp(subsystem == "block") == 0)
        block_device( ctx, udi, &error );
    else if (strcmp(subsystem == "usb_device") == 0)
        usb_device( ctx, udi, &error );
    else if (strcmp(subsystem == "tty") == 0)
        serial_device( ctx, udi, &error );

    p_dbus_error_free( &error );
}

Now we have a ability to handle each device type with an own function, like

static void block_device( LibHalContext *ctx, const char *udi,
DBusError *error )
{
    char *device = NULL;
    char *mount_point = NULL;
    char *parent = NULL;
    char *uuid_str = NULL;
    char *type = NULL;
    GUID guid, *guid_ptr = NULL;
    enum device_type drive_type;

    if (!(device = p_libhal_device_get_property_string( ctx, udi,
"block.device", error )))
        goto done;

    if (!(mount_point = p_libhal_device_get_property_string( ctx, udi,
"volume.mount_point", error )))
        goto done;

    if (!(parent = p_libhal_device_get_property_string( ctx, udi,
"info.parent", error )))
        goto done;

    if (!(uuid_str = p_libhal_device_get_property_string( ctx, udi,
"volume.uuid", error )))
        p_dbus_error_free( &error );  /* ignore error */
    else
        guid_ptr = parse_uuid( &guid, uuid_str );

    if (!(type = p_libhal_device_get_property_string( ctx, parent,
"storage.drive_type", error )))
        p_dbus_error_free( &error );  /* ignore error */

    if (type && !strcmp( type, "cdrom" )) drive_type = DEVICE_CDROM;
    else if (type && !strcmp( type, "floppy" )) drive_type = DEVICE_FLOPPY;
    else drive_type = DEVICE_UNKNOWN;

    if (p_libhal_device_get_property_bool( ctx, parent,
"storage.removable", error ))
    {
        add_dos_device( -1, udi, device, mount_point, drive_type, guid_ptr );
        /* add property watch for mount point */
        p_libhal_device_add_property_watch( ctx, udi, error );
    }
    else if (guid_ptr) add_volume( udi, device, mount_point,
DEVICE_HARDDISK_VOL, guid_ptr );

done:
    if (type) p_libhal_free_string( type );
    if (parent) p_libhal_free_string( parent );
    if (device) p_libhal_free_string( device );
    if (uuid_str) p_libhal_free_string( uuid_str );
    if (mount_point) p_libhal_free_string( mount_point );
}

Keep in mind that i am not sure if this source samples compile - was a
quick copy & paste action.

What do you think about it?


[1] http://wiki.winehq.org/USB


-- 
Christian Gmeiner, B.Sc.

2009/9/11 Stefan Leichter <Stefan.Leichter at camline.com>:
> Hi,
>
> i like to know what modifikations the attached patch needs to go into git.
>
> More things need to be done in this area. I know of:
> - more registry keys [1]
> - remove the registry keys when a serial port disappears (USB)
> - the links in the dosdevice directory needs to be created
>
> Patches for the items above will be created, when the current patch went into
> git
>
> References:
> 1 http://www.winehq.org/pipermail/wine-patches/2009-April/071999.html
> - http://www.winehq.org/pipermail/wine-devel/2009-April/074476.html
>
> --
> Stefan
>
>
>
>


From julliard at winehq.org  Fri Sep 11 06:22:02 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 11 Sep 2009 13:22:02 +0200
Subject: [PATCH 2/3] winex11.drv: set global key state
In-Reply-To: <b170af450909060627v15724934w380fd0c0005b7f58@mail.gmail.com>
	(=?utf-8?Q?=22Rafa=C5=82_Mi=C5=82ecki=22's?= message of "Sun, 6 Sep 2009
	15:27:48 +0200")
References: <b170af450909060627v15724934w380fd0c0005b7f58@mail.gmail.com>
Message-ID: <87ab114tgl.fsf@wine.dyndns.org>

Rafa? Mi?ecki <zajec5 at gmail.com> writes:

> @@ -1250,6 +1250,21 @@ void X11DRV_send_keyboard_input( WORD wVk, WORD wScan, DWORD event_flags, DWORD
>              key_state_table[wVkStripped] = key_state_table[wVkL] | key_state_table[wVkR];
>          }
>  
> +        SERVER_START_REQ( set_global_key_state )
> +        {
> +            req->key      = wVk;
> +            req->state    = key_state_table[wVk];
> +            wine_server_call( req );
> +        }
> +        SERVER_END_REQ;
> +        SERVER_START_REQ( set_global_key_state )
> +        {
> +            req->key      = wVkStripped;
> +            req->state    = key_state_table[wVkStripped];
> +            wine_server_call( req );
> +        }
> +        SERVER_END_REQ;
> +

You don't want to add 2 extra server calls for every key, especially
since the server already receives the necessary information through the
key event.

-- 
Alexandre Julliard
julliard at winehq.org


From paul.vriens.wine at gmail.com  Fri Sep 11 08:13:54 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Fri, 11 Sep 2009 15:13:54 +0200
Subject: Fixing the user32/dde tests on Win9x/WinMe
Message-ID: <4AAA4D12.4080101@gmail.com>

Hi,

DdeInitializeW is not implemented on the mentioned platforms but it's 
not just a matter of skipping some tests when that W-function is found 
to be not implemented.

Any idea what the best way would be to fix these tests?

-- 
Cheers,

Paul.


From wine-devel at kievinfo.com  Fri Sep 11 08:32:42 2009
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Fri, 11 Sep 2009 07:32:42 -0600
Subject: Mirror Space
In-Reply-To: <4A9D7B82.8090408@open-vote.org>
References: <a64cb0d90909010652r6d79595bs81b8f36f298f9f6c@mail.gmail.com>
	<4A9D7B82.8090408@open-vote.org>
Message-ID: <4AAA517A.3050703@kievinfo.com>

Scott Ritchie wrote:
> It should be up for good now, so this won't be necessary.
It should but it isn't ... again. Were you able to setup mirror yet?

Vitaliy.



From dank at kegel.com  Fri Sep 11 09:18:51 2009
From: dank at kegel.com (Dan Kegel)
Date: Fri, 11 Sep 2009 07:18:51 -0700
Subject: [ntdll] Add tests for NtQueryInformationFile
In-Reply-To: <4AA963A2.907@gmail.com>
References: <a71bd89a0909090541w1a4ff190ya29500c4dce9eb53@mail.gmail.com>
	<4AA96325.90208@gmail.com> <4AA963A2.907@gmail.com>
Message-ID: <a71bd89a0909110718x16455170qc8603d2842ab79b7@mail.gmail.com>

On Thu, Sep 10, 2009 at 1:37 PM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>> It also looks like Vista/Win7 has either 2 or 4 failures (most likely
>> related to indexing being disabled, if so that could also happen on
>> other platforms). Not sure if we should explicitly check for attributes
>> being 2020, ignore FILE_ATTRIBUTE_NOT_CONTENT_INDEXED or just check as I
>> did.
>
> Weird, just saw the results of my Vista box on test.winehq.org. It shows 4
> failures but if I run them standalone (crosscompiled) I only have 2.

And I still have zero failures on my Vista Home box!

Go ahead and submit that patch, please... I can't reproduce
the problem, and my wrists have flared up again, making
it risky for me to type much for now.
- Dan


From paul.vriens.wine at gmail.com  Fri Sep 11 09:43:16 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Fri, 11 Sep 2009 16:43:16 +0200
Subject: [ntdll] Add tests for NtQueryInformationFile
In-Reply-To: <a71bd89a0909101349r3cf65f78rc5329e4f212ed44d@mail.gmail.com>
References: <a71bd89a0909090541w1a4ff190ya29500c4dce9eb53@mail.gmail.com>	
	<4AA96325.90208@gmail.com>
	<a71bd89a0909101349r3cf65f78rc5329e4f212ed44d@mail.gmail.com>
Message-ID: <4AAA6204.1060700@gmail.com>

On 09/10/2009 10:49 PM, Dan Kegel wrote:
> On Thu, Sep 10, 2009 at 1:35 PM, Paul Vriens<paul.vriens.wine at gmail.com>  wrote:
>>> Passes on both Wine and Vista.
>>
>> This patch introduces some issues on NT4 and higher. Attached patch fixes it
>> but I'm not sure if you are already chasing these failures. Weird that it
>> doesn't fail on your Vista box.
>
> Must have been user error on my part.  I think I was sleepy when
> I was preparing that patch.  I'll try to send in an updated fix tonight.
> Thanks!
> - Dan

Ok, just sent the patch (changed that 'whoops' text).

Still weird that you don't and I only have 2 failures (whereas 
test.winehq.org shows 4 for me).

-- 
Cheers,

Paul.


From Joerg-Cyril.Hoehle at t-systems.com  Fri Sep 11 10:51:59 2009
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Fri, 11 Sep 2009 17:51:59 +0200
Subject: now OSS driver emulation -- and other drivers too -- works as
	well as OSS HW mode; block size error gone?
In-Reply-To: <3a768c550909040959v575a84ebi5bc747bece4bcfc0@mail.gmail.com>
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B0332E9C2@S4DE8PSAANK.mitte.t-com.de>

Juan Lang wrote:
>> - Is there some central place in dsound for enforcing the 
>>invariant instead of identical code in the half dozen
>>OSS/ALSA/CoreAudio/Jack etc. drivers?
>No, or, not to my knowledge.

This is unfortunate.
Wine's dsound needs a channel back from winmm (which eventually calls
wineoss/winealsa etc. via wodOpen) to obtain the correct format data.
The OSS hardware mode does this (in wineoss.drv/audio.c) by updating
the supplied structure.  My patch does it for the OSS emulation mode.

However, testing on MS-Windows reveals that waveOutOpen() does not
modify the supplied WAVEFORMATEX structure.  Windows' wave*() seems to
completely ignore the incorrect nBlockAlign and nAvgBytesPerSample.
Apps can submit bogus data and still work.  So must Wine.

If Wine would not update the structure, there would be no channel back
to dsound.  So I'm wondering whether dsound/dsound.c can itself fix
the values.  Sadly I don't understand where the mapper and all these
adpcm/mp3/gsm drivers comes into play in dsound: Where can Wine set
  nBlockAlign == nChannels * wBitsPerSample/8 and
  nAvgBytesPerSec == nSamplesPerSec * nBlockAlign?
MSDN says in http://msdn.microsoft.com/en-us/library/bb669161(VS.85).aspx
"For non-PCM formats, this member must be computed according to the
manufacturer's specification for the format tag."
*Who* computes? The app? The mapper?

Note that msacm32.drv/wavemap.c:wodOpenHelper sets
 lpwfx->nBlockAlign and nAvgBytesPerSec
The line wodOpen:TRY: ... case MMSYSERR_NOERROR:
            wom->avgSpeedInner = wfx.nAvgBytesPerSec; goto found;
shows that nAvgBytesPerSec is considered an output variable after wodOpen().
The value need be correct, or crashes will likely follow.

In any case, I'm going to submit patches (in-place update) soon for OSS and
CoreAudio (ALSA later).  A cleaner solution is awaiting ideas.

Regards,
	J?rg H?hle
PS: While I've verified that MS-Windows' waveOutOpen does not modify the format
structure (given PCM), I've not tested what the dsound interface does.


From jacek at codeweavers.com  Fri Sep 11 11:03:09 2009
From: jacek at codeweavers.com (Jacek Caban)
Date: Fri, 11 Sep 2009 18:03:09 +0200
Subject: [PATCH 2/4] mshtml: Added http loading test.
In-Reply-To: <4AA7DB11.1030601@gmail.com>
References: <4A9E4880.3020603@codeweavers.com> <4AA7DB11.1030601@gmail.com>
Message-ID: <4AAA74BD.305@codeweavers.com>

Hi Paul,

Paul Vriens wrote:
> On 09/02/2009 12:27 PM, Jacek Caban wrote:
>> ---
>> dlls/mshtml/tests/htmldoc.c | 270
>> +++++++++++++++++++++++++++++--------------
>> 1 files changed, 182 insertions(+), 88 deletions(-)
>>
>>
>>
>> ------------------------------------------------------------------------
>>
>>
> Hi Jacek,
>
> Looks like this one introduced 2 test failures on some boxes, I 
> couldn't find a common denominator though.
>
> The failures happen on IE6, IE7 and IE8 on different platforms (NT4 
> and higher). There are however also IE8 boxes without failures.
>
> The failures seem to be triggered by the "test_download(FALSE, FALSE, 
> FALSE);" on line 4026.
>
> Could you have a look?
>
> (Some other failures happen on ME and lower but I'll investigate those).

I'm sorry for late response. I have problems with reproducing it. It 
works differently on my IE8 on XP. I sometimes get failures that I 
haven't seen on test results, but I can't reproduce these failures. I 
don't have an access to my other VMs ATM. Could you please send me 
output of running tests with attached patch?

Thanks,
    Jacek
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: test_debug.diff
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090911/af50e307/attachment.asc>

From pujos.michael at laposte.net  Fri Sep 11 14:24:32 2009
From: pujos.michael at laposte.net (Michael Pujos)
Date: Fri, 11 Sep 2009 21:24:32 +0200
Subject: fixing ReadDirectoryChangesW()
Message-ID: <4AAAA3F0.5050606@laposte.net>

A few months ago I wrote a patch that addressed the following issues 
with  ReadDirectoryChangesW():

"1. move and rename of files and directories in a monitored directory are 
not notified
2. the current implementation allow to only get one change 
(FILE_NOTIFY_INFORMATION structure) at a time.
No change is actually lost but the calling application using 
ReadDirectoryChangesW() expect to retrieve all changes since the last call.
With the current implementation it would only get the first and would 
have to call ReadDirectoryChangesW() again to get the other. With this 
patch ,
it gets all notification (as many consecutive FILE_NOTIFY_INFORMATION 
structs) since the last call to ReadDirectoryChangesW().

These move operations are implemented by this patch and conform to what 
win32 does:

- Moving a directory or    a file inside the  monitored directory. A 
FILE_NOTIFY_INFORMATION structure with action FILE_ACTION_ADDED
is returned
- Moving a directory or    a file out of the  monitored directory. A 
FILE_NOTIFY_INFORMATION structure with action FILE_ACTION_REMOVED
is returned
- Renaming a directory or a file in the monitored directory. Two 
consecutive FILE_NOTIFY_INFORMATION structures with actions
FILE_ACTION_RENAMED_OLD_NAME and FILE_ACTION_RENAMED_NEW_NAME are 
returned within the same reply. This can actually be done because issue 2
above is corrected."


This old patch can be found here: 
http://bubbleguuum.free.fr/0001-server-implement-move-rename-change-notifications-and-support-for-multiple-change-notification-in-one-reply.txt

This patch modify the server protocol in server_protocol.h from


struct read_change_reply
 {
     struct reply_header __header;
     int          action;
     /* VARARG(name,string); */
 };

to:

struct read_change_reply
 {
     struct reply_header __header;
    int          action_count;
     /* VARARG(name,string); */
 };



I'm willing to resubmit this patch with updated tests against current Wine, but before I procceed
I need to be sure it won't be rejected simply because it changes the protocol.







From markus.stockhausen at collogia.de  Fri Sep 11 02:13:41 2009
From: markus.stockhausen at collogia.de (Markus Stockhausen)
Date: Fri, 11 Sep 2009 09:13:41 +0200
Subject: bitblt.c - GdiAlphaBlend : Check for NULL Pointer
In-Reply-To: <4AA9F682.8090802@gmail.com>
References: <1252616184.7557.16.camel@netzwerg>
	<c8485d470909101400g5b0e4395la8193f43807b49c2@mail.gmail.com>
	<4AA96CCF.1060209@gmail.com> <1252618752.9982.14.camel@netzwerg>
	<4AA97622.4040704@gmail.com> <1252622823.4241.5.camel@netzwerg>
	<4AA9F682.8090802@gmail.com>
Message-ID: <1252653221.4123.2.camel@netzwerg>

Am Freitag, den 11.09.2009, 09:04 +0200 schrieb Paul Vriens:
> Hi Markus,
> 
> One I see is a style issue with the if statement. There shouldn't be a 
> space after the opening and before the closing bracket.
> 
> Another thing (style again) is that maybe it's nicer to return FALSE 
> instead of ret (as is done throughout this file).
> 

Resending the desired changes and hoping to see them finding their way
into git ...

Best regards.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: diff.patch
Type: text/x-patch
Size: 1584 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090911/4f13b100/attachment.bin>

From Stefan.Leichter at camline.com  Fri Sep 11 15:40:21 2009
From: Stefan.Leichter at camline.com (Stefan Leichter)
Date: Fri, 11 Sep 2009 22:40:21 +0200
Subject: RFC: registry keys of serial ports
In-Reply-To: <3192d3cd0909110330x2915c163vf4c3a403921fbf40@mail.gmail.com>
References: <200909111014.20109.Stefan.Leichter@camline.com>
	<3192d3cd0909110330x2915c163vf4c3a403921fbf40@mail.gmail.com>
Message-ID: <200909112240.21401.Stefan.Leichter@camline.com>

Am Friday 11 September 2009 12:30:01 schrieb Christian Gmeiner:
> Hi Stefan,
>
> I like the idea of adding more registry keys for hardware components.
> I want some registry keys for usb devices
> so I had a look at your patch. I don't like the mess with the added
> goto serial. If in future there will be support
> for usb and the whole source will be quite hard to follow. The usb
> registry keys are needed e.g. for this [1].
> So i like to propose my idea how it could look like.
>
> In function new_device( LibHalContext *ctx, const char *udi ) we could
> readout the info.subsystem setting of the newly added device and add a
> if for info.subsystem strings like
> block - block devices
> tty - serial
> usb_devices/usb - usb
>
> could look like
>
> /* HAL callback for new device */
> static void new_device( LibHalContext *ctx, const char *udi )
> {
>     DBusError error;
>     char *subsystem = NULL;
>
>     p_dbus_error_init( &error );
>
>     if (!(subsystem = p_libhal_device_get_property_string( ctx, udi,
> "info.subsystem", &error )))
>         goto done;
>
>     if (strcmp(subsystem == "block") == 0)
>         block_device( ctx, udi, &error );
>     else if (strcmp(subsystem == "usb_device") == 0)
>         usb_device( ctx, udi, &error );
>     else if (strcmp(subsystem == "tty") == 0)
>         serial_device( ctx, udi, &error );
>
>     p_dbus_error_free( &error );
> }
>

Hi Christian,

i like your idea, but a short test shows that "info.subsystem" is not 
available for drives. But "info.category" can be used.

-- 
Stefan


From markus.stockhausen at collogia.de  Fri Sep 11 15:56:33 2009
From: markus.stockhausen at collogia.de (Markus Stockhausen)
Date: Fri, 11 Sep 2009 22:56:33 +0200
Subject: Help with a native Windows test program needed (CreateFileW)
Message-ID: <1252702593.4859.8.camel@netzwerg>

Hi,

as I have no Windows machine and cannot test this: I'm in need for
someone who can build a small exe that gives further hints to my
observations in bug #9575. The following is needed:

call CreateFileW( 'testfile.txt', ..., dwShareMode = 0, ...)
call CreateFileW( 'testfile.txt', ..., dwShareMode = 0, ...)

Return the result of second call. I expect it to be a valid handle on
Windows whereas Wine will return an invalid handle.

Thanks in advance.

Markus



From bunglehead at gmail.com  Fri Sep 11 16:09:14 2009
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sat, 12 Sep 2009 01:09:14 +0400
Subject: Help with a native Windows test program needed (CreateFileW)
In-Reply-To: <1252702593.4859.8.camel@netzwerg>
References: <1252702593.4859.8.camel@netzwerg>
Message-ID: <4AAABC7A.5060900@gmail.com>

Markus Stockhausen wrote:
> Hi,
>
> as I have no Windows machine and cannot test this: I'm in need for
> someone who can build a small exe that gives further hints to my
> observations in bug #9575. The following is needed:
>
> call CreateFileW( 'testfile.txt', ..., dwShareMode = 0, ...)
> call CreateFileW( 'testfile.txt', ..., dwShareMode = 0, ...)
>
> Return the result of second call. I expect it to be a valid handle on
> Windows whereas Wine will return an invalid handle.
>
> Thanks in advance.
>
> Markus
>   
Hi, Markus.

First thanks for spending time on this. Please reply with diff to 
current git adding this test - I'll make a usual crossbuild
to run it on XP (you'll need this test anyway to try with Wine...).



From dank at kegel.com  Fri Sep 11 16:42:57 2009
From: dank at kegel.com (Dan Kegel)
Date: Fri, 11 Sep 2009 14:42:57 -0700
Subject: fixing ReadDirectoryChangesW()
Message-ID: <a71bd89a0909111442u643ed98cw951ca79935d0c9ab@mail.gmail.com>

Michael Pujos wrote:
> I'm willing to resubmit this patch with updated tests
> against current Wine, but before I procceed
> I need to be sure it won't be rejected simply because it changes the protocol.

Server changes are tricky to get in.
You have to be patient and persistent.
I think your best next move is to file a bug describing the problem
(and give the URL for the app it affects for you, if possible),
and submit just the tests first (with appropriate todo_wine
lines where wine gets it wrong currently).
All that is useful, and a good first step towards getting
the bug fixed.

Thanks!
- Dan


From christian.gmeiner at gmail.com  Fri Sep 11 16:45:21 2009
From: christian.gmeiner at gmail.com (Christian Gmeiner)
Date: Fri, 11 Sep 2009 23:45:21 +0200
Subject: RFC: registry keys of serial ports
In-Reply-To: <200909112240.21401.Stefan.Leichter@camline.com>
References: <200909111014.20109.Stefan.Leichter@camline.com>
	<3192d3cd0909110330x2915c163vf4c3a403921fbf40@mail.gmail.com>
	<200909112240.21401.Stefan.Leichter@camline.com>
Message-ID: <3192d3cd0909111445l61f4186dkfef70ef73cda1895@mail.gmail.com>

2009/9/11 Stefan Leichter <Stefan.Leichter at camline.com>:
> Am Friday 11 September 2009 12:30:01 schrieb Christian Gmeiner:
>> Hi Stefan,
>>
>> I like the idea of adding more registry keys for hardware components.
>> I want some registry keys for usb devices
>> so I had a look at your patch. I don't like the mess with the added
>> goto serial. If in future there will be support
>> for usb and the whole source will be quite hard to follow. The usb
>> registry keys are needed e.g. for this [1].
>> So i like to propose my idea how it could look like.
>>
>> In function new_device( LibHalContext *ctx, const char *udi ) we could
>> readout the info.subsystem setting of the newly added device and add a
>> if for info.subsystem strings like
>> block - block devices
>> tty - serial
>> usb_devices/usb - usb
>>
>> could look like
>>
>> /* HAL callback for new device */
>> static void new_device( LibHalContext *ctx, const char *udi )
>> {
>> ? ? DBusError error;
>> ? ? char *subsystem = NULL;
>>
>> ? ? p_dbus_error_init( &error );
>>
>> ? ? if (!(subsystem = p_libhal_device_get_property_string( ctx, udi,
>> "info.subsystem", &error )))
>> ? ? ? ? goto done;
>>
>> ? ? if (strcmp(subsystem == "block") == 0)
>> ? ? ? ? block_device( ctx, udi, &error );
>> ? ? else if (strcmp(subsystem == "usb_device") == 0)
>> ? ? ? ? usb_device( ctx, udi, &error );
>> ? ? else if (strcmp(subsystem == "tty") == 0)
>> ? ? ? ? serial_device( ctx, udi, &error );
>>
>> ? ? p_dbus_error_free( &error );
>> }
>>
>
> Hi Christian,
>
> i like your idea, but a short test shows that "info.subsystem" is not
> available for drives. But "info.category" can be used.

with drives you mean CD and DVD drives?

lshal gives me this:

udi = '/org/freedesktop/Hal/devices/pci_10de_37f_1_scsi_host_scsi_device_lun0'
  info.linux.driver = 'sr'  (string)
  info.parent =
'/org/freedesktop/Hal/devices/pci_10de_37f_1_scsi_host'  (string)
  info.product = 'SCSI Device'  (string)
  info.subsystem = 'scsi'  (string)
  info.udi = '/org/freedesktop/Hal/devices/pci_10de_37f_1_scsi_host_scsi_device_lun0'
 (string)
  linux.hotplug_type = 2  (0x2)  (int)
  linux.subsystem = 'scsi'  (string)
  linux.sysfs_path =
'/sys/devices/pci0000:00/0000:00:0d.2/host4/target4:0:0/4:0:0:0'
(string)
  scsi.bus = 0  (0x0)  (int)
  scsi.host = 4  (0x4)  (int)
  scsi.lun = 0  (0x0)  (int)
  scsi.model = 'CD/DVDW SH-S183L'  (string)
  scsi.target = 0  (0x0)  (int)
  scsi.type = 'cdrom'  (string)
  scsi.vendor = 'TSSTcorp'  (string)

udi = '/org/freedesktop/Hal/devices/storage_model_CD_DVDW_SH_S183L'
  block.device = '/dev/sr0'  (string)
  block.is_volume = false  (bool)
  block.major = 11  (0xb)  (int)
  block.minor = 0  (0x0)  (int)
  block.storage_device =
'/org/freedesktop/Hal/devices/storage_model_CD_DVDW_SH_S183L'
(string)
  info.addons = {'hald-addon-storage'} (string list)
  info.capabilities = {'storage', 'block', 'storage.cdrom'} (string list)
  info.category = 'storage'  (string)
  info.interfaces = {'org.freedesktop.Hal.Device.Storage',
'org.freedesktop.Hal.Device.Storage',
'org.freedesktop.Hal.Device.Storage.Removable'} (string list)
  info.parent =
'/org/freedesktop/Hal/devices/pci_10de_37f_1_scsi_host_scsi_device_lun0'
 (string)
  info.product = 'CD/DVDW SH-S183L'  (string)
  info.udi = '/org/freedesktop/Hal/devices/storage_model_CD_DVDW_SH_S183L'
 (string)
  info.vendor = 'TSSTcorp'  (string)
  linux.hotplug_type = 3  (0x3)  (int)
  linux.sysfs_path =
'/sys/devices/pci0000:00/0000:00:0d.2/host4/target4:0:0/4:0:0:0/block/sr0'
 (string)
  org.freedesktop.Hal.Device.Storage.method_argnames =
{'extra_options', 'extra_options'} (string list)
  org.freedesktop.Hal.Device.Storage.method_execpaths =
{'hal-storage-eject', 'hal-storage-closetray'} (string list)
  org.freedesktop.Hal.Device.Storage.method_names = {'Eject',
'CloseTray'} (string list)
  org.freedesktop.Hal.Device.Storage.method_signatures = {'as', 'as'}
(string list)
  storage.automount_enabled_hint = true  (bool)
  storage.bus = 'pci'  (string)
  storage.cdrom.bd = false  (bool)
  storage.cdrom.bdr = false  (bool)
  storage.cdrom.bdre = false  (bool)
  storage.cdrom.cdr = true  (bool)
  storage.cdrom.cdrw = true  (bool)
  storage.cdrom.dvd = true  (bool)
  storage.cdrom.dvdplusr = true  (bool)
  storage.cdrom.dvdplusrdl = true  (bool)
  storage.cdrom.dvdplusrw = true  (bool)
  storage.cdrom.dvdplusrwdl = false  (bool)
  storage.cdrom.dvdr = true  (bool)
  storage.cdrom.dvdram = true  (bool)
  storage.cdrom.dvdrdl = true  (bool)
  storage.cdrom.dvdrw = true  (bool)
  storage.cdrom.hddvd = false  (bool)
  storage.cdrom.hddvdr = false  (bool)
  storage.cdrom.hddvdrw = false  (bool)
  storage.cdrom.mo = false  (bool)
  storage.cdrom.mrw = true  (bool)
  storage.cdrom.mrw_w = true  (bool)
  storage.cdrom.read_speed = 16620  (0x40ec)  (int)
  storage.cdrom.support_media_changed = true  (bool)
  storage.cdrom.support_multisession = true  (bool)
  storage.cdrom.write_speed = 11080  (0x2b48)  (int)
  storage.cdrom.write_speeds = {'11080', '5540'} (string list)
  storage.drive_type = 'cdrom'  (string)
  storage.firmware_version = 'SB01'  (string)
  storage.hotpluggable = false  (bool)
  storage.lun = 0  (0x0)  (int)
  storage.media_check_enabled = true  (bool)
  storage.model = 'CD/DVDW SH-S183L'  (string)
  storage.no_partitions_hint = true  (bool)
  storage.originating_device = '/org/freedesktop/Hal/devices/computer'  (string)
  storage.removable = true  (bool)
  storage.removable.media_available = true  (bool)
  storage.removable.media_size = 2717777920  (0xa1fe0000)  (uint64)
  storage.removable.support_async_notification = false  (bool)
  storage.requires_eject = true  (bool)
  storage.size = 0  (0x0)  (uint64)
  storage.vendor = 'TSSTcorp'  (string)


So it would be info.subsystem = 'scsi'

-- 
Christian Gmeiner, B.Sc.


From mike.kaplinskiy at gmail.com  Fri Sep 11 18:00:57 2009
From: mike.kaplinskiy at gmail.com (Mike Kaplinskiy)
Date: Fri, 11 Sep 2009 19:00:57 -0400
Subject: fixing ReadDirectoryChangesW()
In-Reply-To: <a71bd89a0909111442u643ed98cw951ca79935d0c9ab@mail.gmail.com>
References: <a71bd89a0909111442u643ed98cw951ca79935d0c9ab@mail.gmail.com>
Message-ID: <4d8b5aa80909111600p4cdb58b4ta64022de983f2942@mail.gmail.com>

On Fri, Sep 11, 2009 at 5:42 PM, Dan Kegel <dank at kegel.com> wrote:
> Michael Pujos wrote:
>> I'm willing to resubmit this patch with updated tests
>> against current Wine, but before I procceed
>> I need to be sure it won't be rejected simply because it changes the protocol.
>
> Server changes are tricky to get in.
> You have to be patient and persistent.
> I think your best next move is to file a bug describing the problem
> (and give the URL for the app it affects for you, if possible),
> and submit just the tests first (with appropriate todo_wine
> lines where wine gets it wrong currently).
> All that is useful, and a good first step towards getting
> the bug fixed.
>
> Thanks!
> - Dan
>
>
>

I took a look at your patch - a few notes:
 - if you're changing the server protocol, change protocol.def and
then run tools/make_requests
 - you have spacing problems in your patch. make sure you match the
spacing format in the file
 - your patch does too many changes - split it up into multiple
patches with each one changing one thing so its easier to review.

Hope this helps,
Mike.


From markus.stockhausen at collogia.de  Fri Sep 11 15:39:59 2009
From: markus.stockhausen at collogia.de (Markus Stockhausen)
Date: Fri, 11 Sep 2009 22:39:59 +0200
Subject: Help with a native Windows test program needed (CreateFileW).
Message-ID: <1252701599.4859.7.camel@netzwerg>

Hi,

as I have no Windows machine and cannot test this. I'm in need for
someone who can build a small exe that gives further hints to my
observations in bug #9575.

The following is needed:

call CreateFileW( 'testfile.txt', ..., dwShareMode = 0, ...)
call CreateFileW( 'testfile.txt', ..., dwShareMode = 0, ...)

Return the result of second call. I expect it to be a valid handle on
Windows whereas Wine will return an invalid handle.

Thanks in advance.

Markus





From ggeldorp at vmware.com  Fri Sep 11 18:30:57 2009
From: ggeldorp at vmware.com (Greg Geldorp)
Date: Fri, 11 Sep 2009 16:30:57 -0700
Subject: Help with a native Windows test program needed (CreateFileW)
In-Reply-To: <mailman.26525.1252710111.3322.wine-devel@winehq.org>
References: <mailman.26525.1252710111.3322.wine-devel@winehq.org>
Message-ID: <1C77FC3365DBD149802E0F5381EBE2C90114E8E328@EXCH-MBX-4.vmware.com>

Hi Markus,

> From: Markus Stockhausen <markus.stockhausen at collogia.de>
>
> as I have no Windows machine and cannot test this: I'm in need for
> someone who can build a small exe that gives further hints to my
> observations in bug #9575. The following is needed:
>
> call CreateFileW( 'testfile.txt', ..., dwShareMode = 0, ...)
> call CreateFileW( 'testfile.txt', ..., dwShareMode = 0, ...)
>
> Return the result of second call. I expect it to be a valid handle on
> Windows whereas Wine will return an invalid handle.

This test program:

int main(int argc, char *argv[])
{
   HANDLE File1, File2;
   
   File1 = CreateFileW(L"test.dat", GENERIC_READ, 0, NULL, CREATE_ALWAYS, 0,
NULL);
   File2 = CreateFileW(L"test.dat", GENERIC_READ, 0, NULL, OPEN_EXISTING, 0,
NULL);

   printf("File1 0x%x File2 0x%x error %u\n", File1, File2, GetLastError());

	return 0;
}

returns this result on Windows 2008:

File1 0x10 File2 0xffffffff error 32

so the second CreateFile fails on Windows too, with ERROR_SHARING_VIOLATION.

Ge.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3163 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090911/ee4e1d0e/attachment.bin>

From th.trummer at gmail.com  Fri Sep 11 18:38:05 2009
From: th.trummer at gmail.com (Thomas Trummer)
Date: Sat, 12 Sep 2009 01:38:05 +0200
Subject: Help with a native Windows test program needed (CreateFileW).
In-Reply-To: <1252701599.4859.7.camel@netzwerg>
References: <1252701599.4859.7.camel@netzwerg>
Message-ID: <b5b1f1f50909111638g63b0b8eek2332a7d640a2c591@mail.gmail.com>

pw: wine

2009/9/11 Markus Stockhausen <markus.stockhausen at collogia.de>

> Hi,
>
> as I have no Windows machine and cannot test this. I'm in need for
> someone who can build a small exe that gives further hints to my
> observations in bug #9575.
>
> The following is needed:
>
> call CreateFileW( 'testfile.txt', ..., dwShareMode = 0, ...)
> call CreateFileW( 'testfile.txt', ..., dwShareMode = 0, ...)
>
> Return the result of second call. I expect it to be a valid handle on
> Windows whereas Wine will return an invalid handle.
>
> Thanks in advance.
>
> Markus
>
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090912/da474b19/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: createfile-test.zip
Type: application/zip
Size: 28553 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090912/da474b19/attachment-0001.zip>

From th.trummer at gmail.com  Fri Sep 11 18:39:51 2009
From: th.trummer at gmail.com (Thomas Trummer)
Date: Sat, 12 Sep 2009 01:39:51 +0200
Subject: Help with a native Windows test program needed (CreateFileW).
In-Reply-To: <b5b1f1f50909111638g63b0b8eek2332a7d640a2c591@mail.gmail.com>
References: <1252701599.4859.7.camel@netzwerg>
	<b5b1f1f50909111638g63b0b8eek2332a7d640a2c591@mail.gmail.com>
Message-ID: <b5b1f1f50909111639w16fb77b7h60030452dfb283e9@mail.gmail.com>

Actually, forget about the password and give the file without extension a
.exe extension...

2009/9/12 Thomas Trummer <th.trummer at gmail.com>

> pw: wine
>
> 2009/9/11 Markus Stockhausen <markus.stockhausen at collogia.de>
>
> Hi,
>>
>> as I have no Windows machine and cannot test this. I'm in need for
>> someone who can build a small exe that gives further hints to my
>> observations in bug #9575.
>>
>> The following is needed:
>>
>> call CreateFileW( 'testfile.txt', ..., dwShareMode = 0, ...)
>> call CreateFileW( 'testfile.txt', ..., dwShareMode = 0, ...)
>>
>> Return the result of second call. I expect it to be a valid handle on
>> Windows whereas Wine will return an invalid handle.
>>
>> Thanks in advance.
>>
>> Markus
>>
>>
>>
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090912/9e5ef3c6/attachment.htm>

From markus.stockhausen at collogia.de  Sat Sep 12 01:47:58 2009
From: markus.stockhausen at collogia.de (Markus Stockhausen)
Date: Sat, 12 Sep 2009 08:47:58 +0200
Subject: Help with a native Windows test program needed (CreateFileW).
In-Reply-To: <b5b1f1f50909111639w16fb77b7h60030452dfb283e9@mail.gmail.com>
References: <1252701599.4859.7.camel@netzwerg>
	<b5b1f1f50909111638g63b0b8eek2332a7d640a2c591@mail.gmail.com>
	<b5b1f1f50909111639w16fb77b7h60030452dfb283e9@mail.gmail.com>
Message-ID: <1252738078.4100.11.camel@netzwerg>

Am Samstag, den 12.09.2009, 01:39 +0200 schrieb Thomas Trummer:
> Actually, forget about the password and give the file without
> extension a .exe extension...
> 
> 2009/9/12 Thomas Trummer <th.trummer at gmail.com>
>         pw: wine
>         
>         2009/9/11 Markus Stockhausen <markus.stockhausen at collogia.de>
>         
>         
>                 Hi,
>                 
>                 as I have no Windows machine and cannot test this. I'm
>                 in need for
>                 someone who can build a small exe that gives further
>                 hints to my
>                 observations in bug #9575.
>                 
>                 The following is needed:
>                 
>                 call CreateFileW( 'testfile.txt', ..., dwShareMode =
>                 0, ...)
>                 call CreateFileW( 'testfile.txt', ..., dwShareMode =
>                 0, ...)
>                 
>                 Return the result of second call. I expect it to be a
>                 valid handle on
>                 Windows whereas Wine will return an invalid handle.
>                 
>                 Thanks in advance.
>                 
>                 Markus

Thank you for your help, here is something really weird. I found someone
to test the program in Windows 2003 and there we have completly
different results:

h0 : 0x000007E0 - Result :0
h1 : 0x000007E0 - Result : Sharing Violation

The second call fails too, but it returns the last access handle to the
file. So that means I need someone who can test the program
http://www.ibexpert.com/download/setup_trial.exe in an Windows 2008
environment. It should fail as it does in Wine.

Has anyone a good idea how to reflect/check this behaviour in a wine
test?

Best regards.








From paul.vriens.wine at gmail.com  Sat Sep 12 02:40:41 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Sat, 12 Sep 2009 09:40:41 +0200
Subject: [ntdll] Add test for NtQueryDirectoryFile
In-Reply-To: <a71bd89a0909111718m5a6a429fr47ea6f97dd8fe910@mail.gmail.com>
References: <a71bd89a0909111718m5a6a429fr47ea6f97dd8fe910@mail.gmail.com>
Message-ID: <4AAB5079.2070803@gmail.com>

On 09/12/2009 02:18 AM, Dan Kegel wrote:
> Here's the next broken-out test patch from the series that
> implements support for hidden and system attributes.
> This one just adds a test for NtQueryDirectoryFile().
> It passes for me on Wine and Vista Home Basic.
>
> [Paul, could you test it on your box to make sure it's ok there?]

Hi Dan,

No failures on my NT4+ boxes (32bit).

One thing I noticed is that you don't cleanup in some of the failure 
cases which would leave that temporary directory around.

-- 
Cheers,

Paul.


From paul.vriens.wine at gmail.com  Sat Sep 12 02:51:03 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Sat, 12 Sep 2009 09:51:03 +0200
Subject: [ntdll] Add test for NtQueryDirectoryFile
In-Reply-To: <4AAB5079.2070803@gmail.com>
References: <a71bd89a0909111718m5a6a429fr47ea6f97dd8fe910@mail.gmail.com>
	<4AAB5079.2070803@gmail.com>
Message-ID: <4AAB52E7.2090908@gmail.com>

On 09/12/2009 09:40 AM, Paul Vriens wrote:
> On 09/12/2009 02:18 AM, Dan Kegel wrote:
>> Here's the next broken-out test patch from the series that
>> implements support for hidden and system attributes.
>> This one just adds a test for NtQueryDirectoryFile().
>> It passes for me on Wine and Vista Home Basic.
>>
>> [Paul, could you test it on your box to make sure it's ok there?]
>
> Hi Dan,
>
> No failures on my NT4+ boxes (32bit).
>
> One thing I noticed is that you don't cleanup in some of the failure
> cases which would leave that temporary directory around.
>

Another thing is that you don't create the hidden file with the 
FILE_ATTRIBUTE_HIDDEN attribute.

-- 
Cheers,

Paul.


From paul.vriens.wine at gmail.com  Sat Sep 12 03:12:09 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Sat, 12 Sep 2009 10:12:09 +0200
Subject: [ntdll] Add test for NtQueryDirectoryFile
In-Reply-To: <4AAB52E7.2090908@gmail.com>
References: <a71bd89a0909111718m5a6a429fr47ea6f97dd8fe910@mail.gmail.com>
	<4AAB5079.2070803@gmail.com> <4AAB52E7.2090908@gmail.com>
Message-ID: <4AAB57D9.6050706@gmail.com>

On 09/12/2009 09:51 AM, Paul Vriens wrote:
> On 09/12/2009 09:40 AM, Paul Vriens wrote:
>> On 09/12/2009 02:18 AM, Dan Kegel wrote:
>>> Here's the next broken-out test patch from the series that
>>> implements support for hidden and system attributes.
>>> This one just adds a test for NtQueryDirectoryFile().
>>> It passes for me on Wine and Vista Home Basic.
>>>
>>> [Paul, could you test it on your box to make sure it's ok there?]
>>
>> Hi Dan,
>>
>> No failures on my NT4+ boxes (32bit).
>>
>> One thing I noticed is that you don't cleanup in some of the failure
>> cases which would leave that temporary directory around.
>>
>
> Another thing is that you don't create the hidden file with the
> FILE_ATTRIBUTE_HIDDEN attribute.
>

Changed that attribute and the tests still succeed (also verified that 
we indeed have a hidden file).

-- 
Cheers,

Paul.


From markus.stockhausen at collogia.de  Sat Sep 12 06:24:42 2009
From: markus.stockhausen at collogia.de (Markus Stockhausen)
Date: Sat, 12 Sep 2009 13:24:42 +0200
Subject: Help with a native Windows test program needed (CreateFileW).
Message-ID: <1252754682.7864.13.camel@netzwerg>

Sorry for the the wrong feedback.

As I have limited possibilites creating executables on Windows I relied
on Thomas executable for the tests. Maybe you can post a corrected
version.

It is not my intention to confuse someone. Im just trying to narrow down
my initial analysis. The last write access to the malicous memory
address before the application dump comes from CreateFileW. 

Best regards.

-------- Weitergeleitete Nachricht --------
Von: wine-bugs at winehq.org
An: mst at collogia.de
Betreff: [Bug 9575] IBExpert need windows native ole32.dll to run
Datum: Sat, 12 Sep 2009 05:18:49 -0500

http://bugs.winehq.org/show_bug.cgi?id=9575





--- Comment #15 from Alexandre Julliard <julliard at winehq.org>  2009-09-12 05:18:42 ---
There's no such behavior. The test is broken.




From markus.stockhausen at collogia.de  Sat Sep 12 08:52:38 2009
From: markus.stockhausen at collogia.de (Markus Stockhausen)
Date: Sat, 12 Sep 2009 15:52:38 +0200
Subject: bug #9575 - better this time - testcase help needed
In-Reply-To: <1252754682.7864.13.camel@netzwerg>
References: <1252754682.7864.13.camel@netzwerg>
Message-ID: <1252763558.7864.45.camel@netzwerg>

Hi,

hopefully the right explanation for the error can be found here
http://bugs.winehq.org/show_bug.cgi?id=9575 . Once again I need someone
with a Windows machine who can provide the following:

...
HRESULT = StgOpenStorage( 'testfile.txt', ... , ppstgOpen1 );
HRESULT = StgOpenStorage( 'testfile.txt', ... , ppstgOpen2 );

I expect *ppstgOpen2 not to be NULL in Windows while being NULL under
Wine.

Best regards.

Markus



From th.trummer at gmail.com  Sat Sep 12 09:09:12 2009
From: th.trummer at gmail.com (Thomas Trummer)
Date: Sat, 12 Sep 2009 16:09:12 +0200
Subject: include: Add missing definitions in af_irda.h. (try 2)
In-Reply-To: <874orq61a5.fsf@wine.dyndns.org>
References: <b5b1f1f50908290202u5898a86ds2244569f83983dd0@mail.gmail.com>
	<874orq61a5.fsf@wine.dyndns.org>
Message-ID: <b5b1f1f50909120709u79ca097fvbe705f0b8e45227@mail.gmail.com>

Thanks for looking at the patch.

1) Is there a way to ensure that it doesn't conflict with other symbols?
I've created a small test program that includes the Linux Irda headers which
works fine for Linux but I have no idea about the Mac...

2) About the AF_IRDA et al. symbols: These are already defined in the
winsock headers, so there are two options: Remove them and include the
winsock header (this would also get rid of the USE_WS macros) or leave them
in and add the WS_ prefix appropriately. I would create a new version of the
patch accordingly...

Tom

2009/8/29 Alexandre Julliard <julliard at winehq.org>

> Thomas Trummer <th.trummer at gmail.com> writes:
>
> > @@ -97,4 +100,159 @@ typedef struct _SOCKADDR_IRDA
> >  #define LmCharSetISO_8859_9 0x09
> >  #define LmCharSetUNICODE    0xff
> >
> > +#define SIO_LAZY_DISCOVERY  _IOR('t', 127, ULONG)
> > +
> > +#define WINDOWS_AF_IRDA                       26
> > +#define WINDOWS_PF_IRDA          WINDOWS_AF_IRDA
> > +
> > +#define WCE_AF_IRDA                           22
> > +#define WCE_PF_IRDA                  WCE_AF_IRDA
> > +
> > +#ifndef AF_IRDA
> > +#define AF_IRDA                  WINDOWS_AF_IRDA
> > +#endif
> > +
> > +#ifndef PF_IRDA
> > +#define PF_IRDA                          AF_IRDA
> > +#endif
> > +
> > +#define IRDA_PROTO_SOCK_STREAM                 1
>
> You need a WS prefix on all definitions that can conflict with Unix.
>
> --
> Alexandre Julliard
> julliard at winehq.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090912/64d6a4f5/attachment-0001.htm>

From markus.stockhausen at collogia.de  Sat Sep 12 09:13:03 2009
From: markus.stockhausen at collogia.de (Markus Stockhausen)
Date: Sat, 12 Sep 2009 16:13:03 +0200
Subject: bug #9575 - better this time - testcase help needed
In-Reply-To: <1252763558.7864.45.camel@netzwerg>
References: <1252754682.7864.13.camel@netzwerg>
	<1252763558.7864.45.camel@netzwerg>
Message-ID: <1252764783.7864.64.camel@netzwerg>

Am Samstag, den 12.09.2009, 15:52 +0200 schrieb Markus Stockhausen:
> Hi,
> 
> hopefully the right explanation for the error can be found here
> http://bugs.winehq.org/show_bug.cgi?id=9575 . Once again I need someone
> with a Windows machine who can provide the following:
> 
> ...
> HRESULT = StgOpenStorage( 'testfile.txt', ... , ppstgOpen1 );
> HRESULT = StgOpenStorage( 'testfile.txt', ... , ppstgOpen2 );
> 
> I expect *ppstgOpen2 not to be NULL in Windows while being NULL under
> Wine.
> 
> Best regards.
> 
> Markus

Uh, too fast when sending. Additionally the result code of HRESULT is
needed to get a clearer picture.

Best regards. 



From paul.vriens.wine at gmail.com  Sat Sep 12 09:50:29 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Sat, 12 Sep 2009 16:50:29 +0200
Subject: bug #9575 - better this time - testcase help needed
In-Reply-To: <1252764783.7864.64.camel@netzwerg>
References: <1252754682.7864.13.camel@netzwerg>	<1252763558.7864.45.camel@netzwerg>
	<1252764783.7864.64.camel@netzwerg>
Message-ID: <4AABB535.1020200@gmail.com>

On 09/12/2009 04:13 PM, Markus Stockhausen wrote:
> Am Samstag, den 12.09.2009, 15:52 +0200 schrieb Markus Stockhausen:
>> Hi,
>>
>> hopefully the right explanation for the error can be found here
>> http://bugs.winehq.org/show_bug.cgi?id=9575 . Once again I need someone
>> with a Windows machine who can provide the following:
>>
>> ...
>> HRESULT = StgOpenStorage( 'testfile.txt', ... , ppstgOpen1 );
>> HRESULT = StgOpenStorage( 'testfile.txt', ... , ppstgOpen2 );
>>
>> I expect *ppstgOpen2 not to be NULL in Windows while being NULL under
>> Wine.
>>
>> Best regards.
>>
>> Markus
>
> Uh, too fast when sending. Additionally the result code of HRESULT is
> needed to get a clearer picture.
>
> Best regards.
>
>
>
Hi Markus,

     /* create the file */
     SetLastError(0xdeadbeef);
     r = StgCreateDocfile( filename, 0x11012, 0, &stg);
     trace("r : %08x\n", r);
     trace("GLE : %d/%08x\n", GetLastError(), GetLastError());
     IStorage_Release(stg);

     SetLastError(0xdeadbeef);
     r= StgOpenStorage( filename, NULL, 0x10012, NULL, 0, &stg);
     trace("r : %08x\n", r);
     trace("GLE : %d/%08x\n", GetLastError(), GetLastError());

     SetLastError(0xdeadbeef);
     r= StgOpenStorage( filename, NULL, 0x10012, NULL, 0, &stg);
     trace("r : %08x\n", r);
     trace("GLE : %d/%08x\n", GetLastError(), GetLastError());

Output on W2K3:

storage32.c:1498: r : 00000000
storage32.c:1499: GLE : 0/00000000
storage32.c:1504: r : 00000000
storage32.c:1505: GLE : 0/00000000
storage32.c:1509: r : 80030020
storage32.c:1510: GLE : 32/00000020

Wine:

storage32.c:1498: r : 00000000
storage32.c:1499: GLE : 0/00000000
storage32.c:1504: r : 00000000
storage32.c:1505: GLE : 0/00000000
storage32.c:1509: r : 80030020
storage32.c:1510: GLE : 32/00000020

So I get STG_E_SHAREVIOLATION and a GLE of ERROR_SHARING_VIOLATION on 
both W2K3 and Wine for the second call.

The grfMode is taken from the trace of running the application.

-- 
Cheers,

Paul.


From markus.stockhausen at collogia.de  Sat Sep 12 09:56:13 2009
From: markus.stockhausen at collogia.de (Markus Stockhausen)
Date: Sat, 12 Sep 2009 16:56:13 +0200
Subject: bug #9575 - better this time - testcase help needed
In-Reply-To: <4AABB535.1020200@gmail.com>
References: <1252754682.7864.13.camel@netzwerg>
	<1252763558.7864.45.camel@netzwerg> <1252764783.7864.64.camel@netzwerg>
	<4AABB535.1020200@gmail.com>
Message-ID: <1252767373.7955.1.camel@netzwerg>

Am Samstag, den 12.09.2009, 16:50 +0200 schrieb Paul Vriens:
> On 09/12/2009 04:13 PM, Markus Stockhausen wrote:
> > Am Samstag, den 12.09.2009, 15:52 +0200 schrieb Markus Stockhausen:
> >> Hi,
> >>
> >> hopefully the right explanation for the error can be found here
> >> http://bugs.winehq.org/show_bug.cgi?id=9575 . Once again I need someone
> >> with a Windows machine who can provide the following:
> >>
> >> ...
> >> HRESULT = StgOpenStorage( 'testfile.txt', ... , ppstgOpen1 );
> >> HRESULT = StgOpenStorage( 'testfile.txt', ... , ppstgOpen2 );
> >>
> >> I expect *ppstgOpen2 not to be NULL in Windows while being NULL under
> >> Wine.
> >>
> >> Best regards.
> >>
> >> Markus
> >
> > Uh, too fast when sending. Additionally the result code of HRESULT is
> > needed to get a clearer picture.
> >
> > Best regards.
> >
> >
> >
> Hi Markus,
> 
>      /* create the file */
>      SetLastError(0xdeadbeef);
>      r = StgCreateDocfile( filename, 0x11012, 0, &stg);
>      trace("r : %08x\n", r);
>      trace("GLE : %d/%08x\n", GetLastError(), GetLastError());
>      IStorage_Release(stg);
> 
>      SetLastError(0xdeadbeef);
>      r= StgOpenStorage( filename, NULL, 0x10012, NULL, 0, &stg);
>      trace("r : %08x\n", r);
>      trace("GLE : %d/%08x\n", GetLastError(), GetLastError());
> 
>      SetLastError(0xdeadbeef);
>      r= StgOpenStorage( filename, NULL, 0x10012, NULL, 0, &stg);
>      trace("r : %08x\n", r);
>      trace("GLE : %d/%08x\n", GetLastError(), GetLastError());
> 
> Output on W2K3:
> 
> storage32.c:1498: r : 00000000
> storage32.c:1499: GLE : 0/00000000
> storage32.c:1504: r : 00000000
> storage32.c:1505: GLE : 0/00000000
> storage32.c:1509: r : 80030020
> storage32.c:1510: GLE : 32/00000020
> 
> Wine:
> 
> storage32.c:1498: r : 00000000
> storage32.c:1499: GLE : 0/00000000
> storage32.c:1504: r : 00000000
> storage32.c:1505: GLE : 0/00000000
> storage32.c:1509: r : 80030020
> storage32.c:1510: GLE : 32/00000020
> 
> So I get STG_E_SHAREVIOLATION and a GLE of ERROR_SHARING_VIOLATION on 
> both W2K3 and Wine for the second call.
> 
> The grfMode is taken from the trace of running the application.
> 

So I guess *ppstgOpen pointing to NULL in Wine can be the culprit.





From celticht32 at yahoo.com  Sat Sep 12 10:14:58 2009
From: celticht32 at yahoo.com (chris ahrendt)
Date: Sat, 12 Sep 2009 08:14:58 -0700 (PDT)
Subject: Sept 11 with tools and tests removed
Message-ID: <50078.39793.qm@web112607.mail.gq1.yahoo.com>


Here is the run for Friday Sept. 11 with the tools and the tests 
directory results removed.


[/home/cahrendt/wine-git/dlls/ntdll/server.c:802]: (error) Resource leak: fd
[/home/cahrendt/wine-git/dlls/ntdll/server.c:882]: (error) Resource 
leak: fd_cwd
[/home/cahrendt/wine-git/dlls/wineps.drv/init.c:270]: (error) Possible 
null pointer dereference: dmW - otherwise it is redundant to check if 
dmW is null at line 272


Chris






      


From niko.lecam at gmail.com  Sat Sep 12 10:19:52 2009
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Sat, 12 Sep 2009 17:19:52 +0200
Subject: Sept 11 with tools and tests removed
In-Reply-To: <50078.39793.qm@web112607.mail.gq1.yahoo.com>
References: <50078.39793.qm@web112607.mail.gq1.yahoo.com>
Message-ID: <d7e62e980909120819u462e3d6ak23c42a64888eae00@mail.gmail.com>

2009/9/12 chris ahrendt <celticht32 at yahoo.com>:
>
> Here is the run for Friday Sept. 11 with the tools and the tests
> directory results removed.
>
>
> [/home/cahrendt/wine-git/dlls/ntdll/server.c:802]: (error) Resource leak: fd
> [/home/cahrendt/wine-git/dlls/ntdll/server.c:882]: (error) Resource
> leak: fd_cwd
> [/home/cahrendt/wine-git/dlls/wineps.drv/init.c:270]: (error) Possible
> null pointer dereference: dmW - otherwise it is redundant to check if
> dmW is null at line 272
>
>
> Chris
>
>
Hi Chris,

All false positives, you can filter them.


-- 
Nicolas Le Cam


From mike.kaplinskiy at gmail.com  Sat Sep 12 10:24:55 2009
From: mike.kaplinskiy at gmail.com (Mike Kaplinskiy)
Date: Sat, 12 Sep 2009 11:24:55 -0400
Subject: Sept 11 with tools and tests removed
In-Reply-To: <d7e62e980909120819u462e3d6ak23c42a64888eae00@mail.gmail.com>
References: <50078.39793.qm@web112607.mail.gq1.yahoo.com>
	<d7e62e980909120819u462e3d6ak23c42a64888eae00@mail.gmail.com>
Message-ID: <4d8b5aa80909120824j65ab100dv682053f6588f3095@mail.gmail.com>

On Sat, Sep 12, 2009 at 11:19 AM, Nicolas Le Cam <niko.lecam at gmail.com> wrote:
> 2009/9/12 chris ahrendt <celticht32 at yahoo.com>:
>>
>> Here is the run for Friday Sept. 11 with the tools and the tests
>> directory results removed.
>>
>>
>> [/home/cahrendt/wine-git/dlls/ntdll/server.c:802]: (error) Resource leak: fd
>> [/home/cahrendt/wine-git/dlls/ntdll/server.c:882]: (error) Resource
>> leak: fd_cwd
>> [/home/cahrendt/wine-git/dlls/wineps.drv/init.c:270]: (error) Possible
>> null pointer dereference: dmW - otherwise it is redundant to check if
>> dmW is null at line 272
>>
>>
>> Chris
>>
>>
> Hi Chris,
>
> All false positives, you can filter them.
>
>
> --
> Nicolas Le Cam
>
>
>

They're not false positives. The first one may be (tell cppcheck guys
that if we're calling exit on all paths, we shouldn't bother to free
resources), but the next few aren't.

fd_cwd is leaked if server connection fails,
the bug in wineps is very real, we deref before we check for null on
the next line.

Mike.


From mike.kaplinskiy at gmail.com  Sat Sep 12 10:30:32 2009
From: mike.kaplinskiy at gmail.com (Mike Kaplinskiy)
Date: Sat, 12 Sep 2009 11:30:32 -0400
Subject: Sept 11 with tools and tests removed
In-Reply-To: <4d8b5aa80909120824j65ab100dv682053f6588f3095@mail.gmail.com>
References: <50078.39793.qm@web112607.mail.gq1.yahoo.com>
	<d7e62e980909120819u462e3d6ak23c42a64888eae00@mail.gmail.com> 
	<4d8b5aa80909120824j65ab100dv682053f6588f3095@mail.gmail.com>
Message-ID: <4d8b5aa80909120830m513d58f4g42289f7ed15b156f@mail.gmail.com>

On Sat, Sep 12, 2009 at 11:24 AM, Mike Kaplinskiy
<mike.kaplinskiy at gmail.com> wrote:
> On Sat, Sep 12, 2009 at 11:19 AM, Nicolas Le Cam <niko.lecam at gmail.com> wrote:
>> 2009/9/12 chris ahrendt <celticht32 at yahoo.com>:
>>>
>>> Here is the run for Friday Sept. 11 with the tools and the tests
>>> directory results removed.
>>>
>>>
>>> [/home/cahrendt/wine-git/dlls/ntdll/server.c:802]: (error) Resource leak: fd
>>> [/home/cahrendt/wine-git/dlls/ntdll/server.c:882]: (error) Resource
>>> leak: fd_cwd
>>> [/home/cahrendt/wine-git/dlls/wineps.drv/init.c:270]: (error) Possible
>>> null pointer dereference: dmW - otherwise it is redundant to check if
>>> dmW is null at line 272
>>>
>>>
>>> Chris
>>>
>>>
>> Hi Chris,
>>
>> All false positives, you can filter them.
>>
>>
>> --
>> Nicolas Le Cam
>>
>>
>>
>
> They're not false positives. The first one may be (tell cppcheck guys
> that if we're calling exit on all paths, we shouldn't bother to free
> resources), but the next few aren't.
>
> fd_cwd is leaked if server connection fails,
> the bug in wineps is very real, we deref before we check for null on
> the next line.
>
> Mike.
>

Sorry, sent a little too quickly, the fd_cwd case being leaked is also
the same exit false positive. You can ignore these two for next time.

Mike.


From paul.vriens.wine at gmail.com  Sat Sep 12 10:31:12 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Sat, 12 Sep 2009 17:31:12 +0200
Subject: bug #9575 - better this time - testcase help needed
In-Reply-To: <1252767373.7955.1.camel@netzwerg>
References: <1252754682.7864.13.camel@netzwerg>	
	<1252763558.7864.45.camel@netzwerg>
	<1252764783.7864.64.camel@netzwerg>	
	<4AABB535.1020200@gmail.com> <1252767373.7955.1.camel@netzwerg>
Message-ID: <4AABBEC0.80300@gmail.com>

On 09/12/2009 04:56 PM, Markus Stockhausen wrote:
> Am Samstag, den 12.09.2009, 16:50 +0200 schrieb Paul Vriens:
>> On 09/12/2009 04:13 PM, Markus Stockhausen wrote:
>>> Am Samstag, den 12.09.2009, 15:52 +0200 schrieb Markus Stockhausen:
>>>> Hi,
>>>>
>>>> hopefully the right explanation for the error can be found here
>>>> http://bugs.winehq.org/show_bug.cgi?id=9575 . Once again I need someone
>>>> with a Windows machine who can provide the following:
>>>>
>>>> ...
>>>> HRESULT = StgOpenStorage( 'testfile.txt', ... , ppstgOpen1 );
>>>> HRESULT = StgOpenStorage( 'testfile.txt', ... , ppstgOpen2 );
>>>>
>>>> I expect *ppstgOpen2 not to be NULL in Windows while being NULL under
>>>> Wine.
>>>>
>>>> Best regards.
>>>>
>>>> Markus
>>>
>>> Uh, too fast when sending. Additionally the result code of HRESULT is
>>> needed to get a clearer picture.
>>>
>>> Best regards.
>>>
>>>
>>>
>> Hi Markus,
>>
>>       /* create the file */
>>       SetLastError(0xdeadbeef);
>>       r = StgCreateDocfile( filename, 0x11012, 0,&stg);
>>       trace("r : %08x\n", r);
>>       trace("GLE : %d/%08x\n", GetLastError(), GetLastError());
>>       IStorage_Release(stg);
>>
>>       SetLastError(0xdeadbeef);
>>       r= StgOpenStorage( filename, NULL, 0x10012, NULL, 0,&stg);
>>       trace("r : %08x\n", r);
>>       trace("GLE : %d/%08x\n", GetLastError(), GetLastError());
>>
>>       SetLastError(0xdeadbeef);
>>       r= StgOpenStorage( filename, NULL, 0x10012, NULL, 0,&stg);
>>       trace("r : %08x\n", r);
>>       trace("GLE : %d/%08x\n", GetLastError(), GetLastError());
>>
>> Output on W2K3:
>>
>> storage32.c:1498: r : 00000000
>> storage32.c:1499: GLE : 0/00000000
>> storage32.c:1504: r : 00000000
>> storage32.c:1505: GLE : 0/00000000
>> storage32.c:1509: r : 80030020
>> storage32.c:1510: GLE : 32/00000020
>>
>> Wine:
>>
>> storage32.c:1498: r : 00000000
>> storage32.c:1499: GLE : 0/00000000
>> storage32.c:1504: r : 00000000
>> storage32.c:1505: GLE : 0/00000000
>> storage32.c:1509: r : 80030020
>> storage32.c:1510: GLE : 32/00000020
>>
>> So I get STG_E_SHAREVIOLATION and a GLE of ERROR_SHARING_VIOLATION on
>> both W2K3 and Wine for the second call.
>>
>> The grfMode is taken from the trace of running the application.
>>
>
> So I guess *ppstgOpen pointing to NULL in Wine can be the culprit.
>
>
>
Is also NULL on W2K3.

-- 
Cheers,

Paul.


From hverbeet at gmail.com  Sat Sep 12 16:50:47 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sat, 12 Sep 2009 23:50:47 +0200
Subject: DDraw: Add a few missing WINAPIs
In-Reply-To: <200909122341.00138.stefan@codeweavers.com>
References: <200909122325.56411.stefan@codeweavers.com>
	<200909122341.00138.stefan@codeweavers.com>
Message-ID: <d658b69e0909121450i44b3bda9j403e1f82c4886dc8@mail.gmail.com>

2009/9/12 Stefan D?singer <stefan at codeweavers.com>:
> I wonder how this worked in the past, and why the compiler didn't complain.

It's pretty simple really, these functions don't need WINAPI because
they're ddraw internal functions "cleverly" disguised as vtable
methods. IIRC it's actually harmful to add WINAPI to these on OS X due
to some obscure compiler bug.


From niko.lecam at gmail.com  Sat Sep 12 16:51:30 2009
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Sat, 12 Sep 2009 23:51:30 +0200
Subject: Sept 11 with tools and tests removed
In-Reply-To: <4d8b5aa80909120830m513d58f4g42289f7ed15b156f@mail.gmail.com>
References: <50078.39793.qm@web112607.mail.gq1.yahoo.com>
	<d7e62e980909120819u462e3d6ak23c42a64888eae00@mail.gmail.com>
	<4d8b5aa80909120824j65ab100dv682053f6588f3095@mail.gmail.com>
	<4d8b5aa80909120830m513d58f4g42289f7ed15b156f@mail.gmail.com>
Message-ID: <d7e62e980909121451v522a8b66pce82296594ed43fb@mail.gmail.com>

2009/9/12 Mike Kaplinskiy <mike.kaplinskiy at gmail.com>:
> On Sat, Sep 12, 2009 at 11:24 AM, Mike Kaplinskiy
> <mike.kaplinskiy at gmail.com> wrote:
>> On Sat, Sep 12, 2009 at 11:19 AM, Nicolas Le Cam <niko.lecam at gmail.com> wrote:
>>> 2009/9/12 chris ahrendt <celticht32 at yahoo.com>:
>>>>
>>>> Here is the run for Friday Sept. 11 with the tools and the tests
>>>> directory results removed.
>>>>
>>>>
>>>> [/home/cahrendt/wine-git/dlls/ntdll/server.c:802]: (error) Resource leak: fd
>>>> [/home/cahrendt/wine-git/dlls/ntdll/server.c:882]: (error) Resource
>>>> leak: fd_cwd
>>>> [/home/cahrendt/wine-git/dlls/wineps.drv/init.c:270]: (error) Possible
>>>> null pointer dereference: dmW - otherwise it is redundant to check if
>>>> dmW is null at line 272
>>>>
>>>>
>>>> Chris
>>>>
>>>>
>>> Hi Chris,
>>>
>>> All false positives, you can filter them.
>>>
>>>
>>> --
>>> Nicolas Le Cam
>>>
>>>
>>>
>>
>> They're not false positives. The first one may be (tell cppcheck guys
>> that if we're calling exit on all paths, we shouldn't bother to free
>> resources), but the next few aren't.
>>
>> fd_cwd is leaked if server connection fails,
>> the bug in wineps is very real, we deref before we check for null on
>> the next line.
>>
>> Mike.
>>
>
> Sorry, sent a little too quickly, the fd_cwd case being leaked is also
> the same exit false positive. You can ignore these two for next time.
>
> Mike.
>

Last one is also a false positive, it's just two pointers being
subtracted to retrieve an offset.

-- 
Nicolas Le Cam


From shacklein at gmail.com  Sat Sep 12 17:38:41 2009
From: shacklein at gmail.com (Ben Klein)
Date: Sun, 13 Sep 2009 08:38:41 +1000
Subject: Sept 11 with tools and tests removed
In-Reply-To: <d7e62e980909121451v522a8b66pce82296594ed43fb@mail.gmail.com>
References: <50078.39793.qm@web112607.mail.gq1.yahoo.com>
	<d7e62e980909120819u462e3d6ak23c42a64888eae00@mail.gmail.com> 
	<4d8b5aa80909120824j65ab100dv682053f6588f3095@mail.gmail.com> 
	<4d8b5aa80909120830m513d58f4g42289f7ed15b156f@mail.gmail.com> 
	<d7e62e980909121451v522a8b66pce82296594ed43fb@mail.gmail.com>
Message-ID: <d7e40be30909121538s5623dd8w601e41f639484f83@mail.gmail.com>

2009/9/13 Nicolas Le Cam <niko.lecam at gmail.com>:
> Last one is also a false positive, it's just two pointers being
> subtracted to retrieve an offset.

That's not the reason why it's a false positive. Without context that
line does look like a NULL-dereference (dmW is dereferenced to get the
first pointer before any NULL checking). However it's in a static
function that is called in two places, both of which already check the
pointer being dereferenced.


From hverbeet at gmail.com  Sat Sep 12 18:08:50 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sun, 13 Sep 2009 01:08:50 +0200
Subject: Sept 11 with tools and tests removed
In-Reply-To: <d7e40be30909121538s5623dd8w601e41f639484f83@mail.gmail.com>
References: <50078.39793.qm@web112607.mail.gq1.yahoo.com>
	<d7e62e980909120819u462e3d6ak23c42a64888eae00@mail.gmail.com>
	<4d8b5aa80909120824j65ab100dv682053f6588f3095@mail.gmail.com>
	<4d8b5aa80909120830m513d58f4g42289f7ed15b156f@mail.gmail.com>
	<d7e62e980909121451v522a8b66pce82296594ed43fb@mail.gmail.com>
	<d7e40be30909121538s5623dd8w601e41f639484f83@mail.gmail.com>
Message-ID: <d658b69e0909121608l7e63f4d0g848cb672b4cf2460@mail.gmail.com>

2009/9/13 Ben Klein <shacklein at gmail.com>:
> 2009/9/13 Nicolas Le Cam <niko.lecam at gmail.com>:
>> Last one is also a false positive, it's just two pointers being
>> subtracted to retrieve an offset.
>
> That's not the reason why it's a false positive. Without context that
> line does look like a NULL-dereference (dmW is dereferenced to get the
> first pointer before any NULL checking). However it's in a static
> function that is called in two places, both of which already check the
> pointer being dereferenced.
>
No, that's not how it works. The expression "dmW->dmFormName" by
itself doesn't dereference anything, it's just an address. Only once
you read or write something from/to that address does dmW being NULL
(or otherwise invalid) become a problem. Here we just subtract "dmW"
from that address to get the field offset of "dmFormName" in the
DEVMODEW structure. Note that the value of "off_formname" doesn't
depend on the value of "dmW", just on its type. The compiler will
probably recognize that and optimize it away. Arguably the code in
question should just use the FIELD_OFFSET macro though.


From jjmckenzie51 at earthlink.net  Sat Sep 12 18:18:39 2009
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Sat, 12 Sep 2009 16:18:39 -0700
Subject: include: Add missing definitions in af_irda.h. (try 2)
In-Reply-To: <b5b1f1f50909120709u79ca097fvbe705f0b8e45227@mail.gmail.com>
References: <b5b1f1f50908290202u5898a86ds2244569f83983dd0@mail.gmail.com>	<874orq61a5.fsf@wine.dyndns.org>
	<b5b1f1f50909120709u79ca097fvbe705f0b8e45227@mail.gmail.com>
Message-ID: <4AAC2C4F.8030505@earthlink.net>

Thomas Trummer wrote:
> Thanks for looking at the patch.
>
> 1) Is there a way to ensure that it doesn't conflict with other
> symbols? I've created a small test program that includes the Linux
> Irda headers which works fine for Linux but I have no idea about the
> Mac...
>
> 2) About the AF_IRDA et al. symbols: These are already defined in the
> winsock headers, so there are two options: Remove them and include the
> winsock header (this would also get rid of the USE_WS macros) or leave
> them in and add the WS_ prefix appropriately. I would create a new
> version of the patch accordingly...
>
> Tom
>
> 2009/8/29 Alexandre Julliard <julliard at winehq.org
> <mailto:julliard at winehq.org>>
>
>     Thomas Trummer <th.trummer at gmail.com
>     <mailto:th.trummer at gmail.com>> writes:
>
>     > @@ -97,4 +100,159 @@ typedef struct _SOCKADDR_IRDA
>     >  #define LmCharSetISO_8859_9 0x09
>     >  #define LmCharSetUNICODE    0xff
>     >
>     > +#define SIO_LAZY_DISCOVERY  _IOR('t', 127, ULONG)
>     > +
>     > +#define WINDOWS_AF_IRDA                       26
>     > +#define WINDOWS_PF_IRDA          WINDOWS_AF_IRDA
>     > +
>     > +#define WCE_AF_IRDA                           22
>     > +#define WCE_PF_IRDA                  WCE_AF_IRDA
>     > +
>     > +#ifndef AF_IRDA
>     > +#define AF_IRDA                  WINDOWS_AF_IRDA
>     > +#endif
>     > +
>     > +#ifndef PF_IRDA
>     > +#define PF_IRDA                          AF_IRDA
>     > +#endif
>     > +
>     > +#define IRDA_PROTO_SOCK_STREAM                 1
>
>     You need a WS prefix on all definitions that can conflict with Unix.
>
>   
As a Mac user, it might just be better to use WS_ for all Wine symbols
unless they are specific to Windows and we have to use their calling
convention to make programs work.

James McKenzie



From stefan at codeweavers.com  Sat Sep 12 18:23:41 2009
From: stefan at codeweavers.com (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 13 Sep 2009 01:23:41 +0200
Subject: DDraw: Add a few missing WINAPIs
In-Reply-To: <200909122341.00138.stefan@codeweavers.com>
References: <200909122325.56411.stefan@codeweavers.com>
	<200909122341.00138.stefan@codeweavers.com>
Message-ID: <200909130123.41339.stefan@codeweavers.com>

Am Saturday 12 September 2009 23:41:00 schrieb Stefan D?singer:
> Am Saturday 12 September 2009 23:25:56 schrieb Stefan D?singer:
>
> Oops: forgot the patch:

Er, never mind that patch - those functions aren't used directly in the 
vtable. There are the FPUSetup and FPUPreserve wrappers around them, so the 
default calling convention is ok.



From jjmckenzie51 at earthlink.net  Sat Sep 12 18:26:01 2009
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Sat, 12 Sep 2009 16:26:01 -0700
Subject: fixing ReadDirectoryChangesW()
In-Reply-To: <4d8b5aa80909111600p4cdb58b4ta64022de983f2942@mail.gmail.com>
References: <a71bd89a0909111442u643ed98cw951ca79935d0c9ab@mail.gmail.com>
	<4d8b5aa80909111600p4cdb58b4ta64022de983f2942@mail.gmail.com>
Message-ID: <4AAC2E09.60904@earthlink.net>

Mike Kaplinskiy wrote:
> On Fri, Sep 11, 2009 at 5:42 PM, Dan Kegel <dank at kegel.com> wrote:
>   
>> Michael Pujos wrote:
>>     
>>> I'm willing to resubmit this patch with updated tests
>>> against current Wine, but before I procceed
>>> I need to be sure it won't be rejected simply because it changes the protocol.
>>>       
>> Server changes are tricky to get in.
>> You have to be patient and persistent.
>> I think your best next move is to file a bug describing the problem
>> (and give the URL for the app it affects for you, if possible),
>> and submit just the tests first (with appropriate todo_wine
>> lines where wine gets it wrong currently).
>> All that is useful, and a good first step towards getting
>> the bug fixed.
>>
>> Thanks!
>> - Dan
>>
>>
>>
>>     
>
> I took a look at your patch - a few notes:
>  - if you're changing the server protocol, change protocol.def and
> then run tools/make_requests
>  - you have spacing problems in your patch. make sure you match the
> spacing format in the file
>  - your patch does too many changes - split it up into multiple
> patches with each one changing one thing so its easier to review.
>
> Hope this helps,
> Mike.
>
>
>   
Adding a comment here:

First, submit the tests with todo_wine wrappers around them to prove
that the functions exist in Windows.  Let that patch work through and
get any fixes needed to work with all versions of Windows from Windows95
through Windows 2008 server.

Next, work your code so that the tests pass functionality expected by
each of the different versions of Windows.  Some programs will NOT run
on XP but require 98SE functionality. 

Then submit one fix per dll directory.  You can link the order so that
the patches will apply properly.  Wait for any errors and fallout to
happen and for them to be approved and applied to Wine code.  This may
be a lengthy process, but is worth it.

Lastly, submit a patch to remove the todo_wine wrappers.

BTW, I'm working on a bug that has existed since 2006 and the patch has
not been accepted, yet.

James McKenzie



From stefan at codeweavers.com  Sat Sep 12 18:32:32 2009
From: stefan at codeweavers.com (Stefan =?utf-8?q?D=C3=B6singer?=)
Date: Sun, 13 Sep 2009 01:32:32 +0200
Subject: DDraw: Add a few missing WINAPIs
In-Reply-To: <d658b69e0909121450i44b3bda9j403e1f82c4886dc8@mail.gmail.com>
References: <200909122325.56411.stefan@codeweavers.com>
	<200909122341.00138.stefan@codeweavers.com>
	<d658b69e0909121450i44b3bda9j403e1f82c4886dc8@mail.gmail.com>
Message-ID: <200909130132.32791.stefan@codeweavers.com>

Am Saturday 12 September 2009 23:50:47 schrieb Henri Verbeet:
> 2009/9/12 Stefan D?singer <stefan at codeweavers.com>:
> > I wonder how this worked in the past, and why the compiler didn't
> > complain.
>
> It's pretty simple really, these functions don't need WINAPI because
> they're ddraw internal functions "cleverly" disguised as vtable
> methods. IIRC it's actually harmful to add WINAPI to these on OS X due
> to some obscure compiler bug.
Hmm, you realized this before I did.

Somehow adding WINAPI to those functions fixed the Xfire overlay, but I think 
this was purely (bad) luck because Xfire depends on the 
ddraw.dll/d3d8.dll/d3d9.dll load addresses.

Adding WINAPI at least hurts performance on OSX because it adds stack 
realignment code that adds extra opcodes and makes one register unuseable for 
the rest of the function....

Bottom line: We should rename those functions to make it more obvious that 
those aren't vtable functions.



From jjmckenzie51 at earthlink.net  Sat Sep 12 18:51:38 2009
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Sat, 12 Sep 2009 16:51:38 -0700
Subject: [ntdll] Add test for NtQueryDirectoryFile [try 2]
In-Reply-To: <a71bd89a0909121605i5c8ef0fcx7f948374ebfe8758@mail.gmail.com>
References: <a71bd89a0909121605i5c8ef0fcx7f948374ebfe8758@mail.gmail.com>
Message-ID: <4AAC340A.1050607@earthlink.net>

Dan Kegel wrote:
> Here's the next broken-out test patch from the series that
> implements support for hidden and system attributes.
> This one just adds a test for NtQueryDirectoryFile().
> It passes for me on Wine and Vista Home Basic.
>
> Changes since first try:
> 1) fixed issues Paul found (wasn't setting hidden attribute, wasn't
> cleaning up on failure)
> 2) actually test reported file attributes
>   
Dan:

It looks like your original patch was approved by AJ in commit

398a8ea1fec599cfd6442e3b8bba620431cf53b7

You might want to run a diff against the current git.

James McKenzie






From dank at kegel.com  Sat Sep 12 19:15:12 2009
From: dank at kegel.com (Dan Kegel)
Date: Sat, 12 Sep 2009 17:15:12 -0700
Subject: [ntdll] Add test for NtQueryDirectoryFile [try 2]
In-Reply-To: <4AAC340A.1050607@earthlink.net>
References: <a71bd89a0909121605i5c8ef0fcx7f948374ebfe8758@mail.gmail.com>
	<4AAC340A.1050607@earthlink.net>
Message-ID: <a71bd89a0909121715u4ee9a304p1bfb6f892e3b9ab4@mail.gmail.com>

On Sat, Sep 12, 2009 at 4:51 PM, James McKenzie
<jjmckenzie51 at earthlink.net> wrote:
> Dan Kegel wrote:
>> Here's the next broken-out test patch from the series that
>> implements support for hidden and system attributes.
>> This one just adds a test for NtQueryDirectoryFile().
>
> It looks like your original patch was approved by AJ in commit
>
> 398a8ea1fec599cfd6442e3b8bba620431cf53b7

That was for NtQueryInformationFile; this is another test.


From mike.kaplinskiy at gmail.com  Sat Sep 12 21:11:09 2009
From: mike.kaplinskiy at gmail.com (Mike Kaplinskiy)
Date: Sat, 12 Sep 2009 22:11:09 -0400
Subject: Sept 11 with tools and tests removed
In-Reply-To: <d658b69e0909121608l7e63f4d0g848cb672b4cf2460@mail.gmail.com>
References: <50078.39793.qm@web112607.mail.gq1.yahoo.com>
	<d7e62e980909120819u462e3d6ak23c42a64888eae00@mail.gmail.com> 
	<4d8b5aa80909120824j65ab100dv682053f6588f3095@mail.gmail.com> 
	<4d8b5aa80909120830m513d58f4g42289f7ed15b156f@mail.gmail.com> 
	<d7e62e980909121451v522a8b66pce82296594ed43fb@mail.gmail.com> 
	<d7e40be30909121538s5623dd8w601e41f639484f83@mail.gmail.com> 
	<d658b69e0909121608l7e63f4d0g848cb672b4cf2460@mail.gmail.com>
Message-ID: <4d8b5aa80909121911y394b814duc97a3ac3972954e2@mail.gmail.com>

On Sat, Sep 12, 2009 at 7:08 PM, Henri Verbeet <hverbeet at gmail.com> wrote:
> 2009/9/13 Ben Klein <shacklein at gmail.com>:
>> 2009/9/13 Nicolas Le Cam <niko.lecam at gmail.com>:
>>> Last one is also a false positive, it's just two pointers being
>>> subtracted to retrieve an offset.
>>
>> That's not the reason why it's a false positive. Without context that
>> line does look like a NULL-dereference (dmW is dereferenced to get the
>> first pointer before any NULL checking). However it's in a static
>> function that is called in two places, both of which already check the
>> pointer being dereferenced.
>>
> No, that's not how it works. The expression "dmW->dmFormName" by
> itself doesn't dereference anything, it's just an address. Only once
> you read or write something from/to that address does dmW being NULL
> (or otherwise invalid) become a problem. Here we just subtract "dmW"
> from that address to get the field offset of "dmFormName" in the
> DEVMODEW structure. Note that the value of "off_formname" doesn't
> depend on the value of "dmW", just on its type. The compiler will
> probably recognize that and optimize it away. Arguably the code in
> question should just use the FIELD_OFFSET macro though.
>
>
>

Actually it does dereference something, if you think of dmFormName
being an int (not a pointer), then you would be subtracting an address
from a random value. If this being an offset is indeed the intent of
this code, you need a & in front of dmW->dmFormName so the expression
would read

ptrdiff_t off_formname = (const char *)(&dmW->dmFormName) - (const char *)dmW;

But as Ben noted, the cleaner way would be to use FIELD_OFFSET, which
does exactly the above.

As for the context note, it is perfectly valid code (segfault-less,
that is) as it stands, but we should either remove the null check on
the next line or assign the value later.

Mike.


From shacklein at gmail.com  Sun Sep 13 02:40:47 2009
From: shacklein at gmail.com (Ben Klein)
Date: Sun, 13 Sep 2009 17:40:47 +1000
Subject: Sept 11 with tools and tests removed
In-Reply-To: <4d8b5aa80909121911y394b814duc97a3ac3972954e2@mail.gmail.com>
References: <50078.39793.qm@web112607.mail.gq1.yahoo.com>
	<d7e62e980909120819u462e3d6ak23c42a64888eae00@mail.gmail.com> 
	<4d8b5aa80909120824j65ab100dv682053f6588f3095@mail.gmail.com> 
	<4d8b5aa80909120830m513d58f4g42289f7ed15b156f@mail.gmail.com> 
	<d7e62e980909121451v522a8b66pce82296594ed43fb@mail.gmail.com> 
	<d7e40be30909121538s5623dd8w601e41f639484f83@mail.gmail.com> 
	<d658b69e0909121608l7e63f4d0g848cb672b4cf2460@mail.gmail.com> 
	<4d8b5aa80909121911y394b814duc97a3ac3972954e2@mail.gmail.com>
Message-ID: <d7e40be30909130040k63f14c9bx5278b362bee27dc8@mail.gmail.com>

2009/9/13 Mike Kaplinskiy <mike.kaplinskiy at gmail.com>:
> But as Ben noted, the cleaner way would be to use FIELD_OFFSET, which
> does exactly the above.

As much as I'd love to take the credit for suggesting FIELD_OFFSET, it
was Henri :)


From thunderbird2k at gmail.com  Sun Sep 13 03:33:53 2009
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Sun, 13 Sep 2009 10:33:53 +0200
Subject: wined3d: Add Intel GMA 4500MHD
In-Reply-To: <3a244bad0909122315m31e2b39dm42d34a0acc24363a@mail.gmail.com>
References: <3a244bad0909122315m31e2b39dm42d34a0acc24363a@mail.gmail.com>
Message-ID: <c8485d470909130133v5274fc7egd2bb7458808e6e9e@mail.gmail.com>

Just one minor thing make sure the right email address is configured
in your git repository, so that the correct email address is set in
the patch

Roderick

On Sun, Sep 13, 2009 at 8:15 AM, Jaime Rave <jaimerave at ubuntu-co.com> wrote:
> More information about Intel
> cards:?http://en.wikipedia.org/wiki/Intel_GMA#Table_of_GMA_graphics_cores_and_chipsets
>
>
>
>


From hverbeet at gmail.com  Sun Sep 13 03:52:32 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sun, 13 Sep 2009 10:52:32 +0200
Subject: Sept 11 with tools and tests removed
In-Reply-To: <4d8b5aa80909121911y394b814duc97a3ac3972954e2@mail.gmail.com>
References: <50078.39793.qm@web112607.mail.gq1.yahoo.com>
	<d7e62e980909120819u462e3d6ak23c42a64888eae00@mail.gmail.com>
	<4d8b5aa80909120824j65ab100dv682053f6588f3095@mail.gmail.com>
	<4d8b5aa80909120830m513d58f4g42289f7ed15b156f@mail.gmail.com>
	<d7e62e980909121451v522a8b66pce82296594ed43fb@mail.gmail.com>
	<d7e40be30909121538s5623dd8w601e41f639484f83@mail.gmail.com>
	<d658b69e0909121608l7e63f4d0g848cb672b4cf2460@mail.gmail.com>
	<4d8b5aa80909121911y394b814duc97a3ac3972954e2@mail.gmail.com>
Message-ID: <d658b69e0909130152w2c916892l7f723db7cbbe86b1@mail.gmail.com>

2009/9/13 Mike Kaplinskiy <mike.kaplinskiy at gmail.com>:
> Actually it does dereference something, if you think of dmFormName
> being an int (not a pointer), then you would be subtracting an address
> from a random value.

If it were an int, sure, but "dmFormName" is a WCHAR array.


From shacklein at gmail.com  Sun Sep 13 03:54:43 2009
From: shacklein at gmail.com (Ben Klein)
Date: Sun, 13 Sep 2009 18:54:43 +1000
Subject: Sept 11 with tools and tests removed
In-Reply-To: <d658b69e0909130152w2c916892l7f723db7cbbe86b1@mail.gmail.com>
References: <50078.39793.qm@web112607.mail.gq1.yahoo.com>
	<d7e62e980909120819u462e3d6ak23c42a64888eae00@mail.gmail.com> 
	<4d8b5aa80909120824j65ab100dv682053f6588f3095@mail.gmail.com> 
	<4d8b5aa80909120830m513d58f4g42289f7ed15b156f@mail.gmail.com> 
	<d7e62e980909121451v522a8b66pce82296594ed43fb@mail.gmail.com> 
	<d7e40be30909121538s5623dd8w601e41f639484f83@mail.gmail.com> 
	<d658b69e0909121608l7e63f4d0g848cb672b4cf2460@mail.gmail.com> 
	<4d8b5aa80909121911y394b814duc97a3ac3972954e2@mail.gmail.com> 
	<d658b69e0909130152w2c916892l7f723db7cbbe86b1@mail.gmail.com>
Message-ID: <d7e40be30909130154i1a8614ffwdca52a988ef53edc@mail.gmail.com>

2009/9/13 Henri Verbeet <hverbeet at gmail.com>:
> 2009/9/13 Mike Kaplinskiy <mike.kaplinskiy at gmail.com>:
>> Actually it does dereference something, if you think of dmFormName
>> being an int (not a pointer), then you would be subtracting an address
>> from a random value.
>
> If it were an int, sure, but "dmFormName" is a WCHAR array.
>

My point was that dmW->foo dereferences dmW to get to foo, being the
equivalent of (*dmW).foo. However at present there is no possibility
of NULL-dereferencing here as the dmW pointer is validated in the
parent functions.


From stefandoesinger at gmx.at  Sun Sep 13 04:02:49 2009
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Sun, 13 Sep 2009 11:02:49 +0200
Subject: wined3d: Add Intel GMA 4500MHD
In-Reply-To: <3a244bad0909122315m31e2b39dm42d34a0acc24363a@mail.gmail.com>
References: <3a244bad0909122315m31e2b39dm42d34a0acc24363a@mail.gmail.com>
Message-ID: <200909131102.49328.stefandoesinger@gmx.at>

Am Sunday 13 September 2009 08:15:19 schrieb Jaime Rave:
> More information about Intel cards:
> http://en.wikipedia.org/wiki/Intel_GMA#Table_of_GMA_graphics_cores_and_chip
>sets


+            || strstr(gl_renderer, "Intel?"))
I don't know if it is safe check for the ?. I think its not part of the 
standard ASCII character set, so there might be codepage issues. I don't 
think  its necessary to check for it anyway, I think "Intel" is good enough.
(In which case we might change the "Intel(R)" and "Intel Inc." checks as well)

+            if (strstr(gl_renderer, "GM45"))
+            {
+                /* GMA 4500MHD. These can take up to 2048MB */
+                *vidmem = 512;
+                return CARD_INTEL_GM45;
+            }
+        
You are adding trailing whitespace in the last line(I think Alexandre's commit 
scripts fiter that out though)


From donpedro at tdcadsl.dk  Sat Sep 12 18:25:37 2009
From: donpedro at tdcadsl.dk (Peter Dons Tychsen)
Date: Sun, 13 Sep 2009 01:25:37 +0200
Subject: ntdll: Do not accept device control requests with invalid and/or
	incompa tible handles
References: <1252161985.2994.2.camel@donpedro> <87my5589q9.fsf@wine.dyndns.org>
	<20090910193018.HPOO1293.fep50.mail.dk@post.tele.dk>
	<87pr9y4klw.fsf@wine.dyndns.org>
Message-ID: <20090912232537.WGUS8155.fep51.mail.dk@post.tele.dk>

OK. The "bad handle" is tested by the "deadbeef" handle.
Where is the best place to get a really good "wrong class" handle?

Thanks,

/pedro

----- Original meddelelse -----

> Fra: Alexandre Julliard <julliard at winehq.org>
> Til: Peter Dons Tychsen <donpedro at tdcadsl.dk>
> Cc: wine-devel at winehq.org
> Dato: Tor, 10. sep 2009 22:20
> Emne: Re: ntdll: Do not accept device control requests with invalid
> and/or incompa tible handles
> 
> Peter Dons Tychsen <donpedro at tdcadsl.dk> writes:
> 
> > Thanks for the comments.
> > Not sure i understand them though.
> >
> > The whole point of the test was to test what happens when you use a
> wrong
> > handle. The actual bug i fixed was that it was possible to for
> programs
> > to send invalid handles to IoControl. Cygwin was infact sending
> handles
> > to ntdll.dll which originated from GetStdHandle().
> >
> > So i think using this API for testing is relevant, as the point of
> the
> > test is to verify that handles of the completely wrong class are
> > rejected, and not just "bad handles".
> 
> Yes, but then you should explicitly construct and test both kinds of
> handles. Using GetStdHandle will either be a wrong class or a bad
> handle
> depending on whether stdio is to a file or to a console, so you don't
> really know which case you are testing. The remapping of console
> handles
> happens in kernel32, not in ntdll, so it doesn't really make sense to
> pass the result of GetStdHandle straight to ntdll.
> 
> --
> Alexandre Julliard
> julliard at winehq.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090913/1fecee47/attachment.htm>

From julliard at winehq.org  Sun Sep 13 05:25:45 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Sun, 13 Sep 2009 12:25:45 +0200
Subject: include: Add missing definitions in af_irda.h. (try 2)
In-Reply-To: <b5b1f1f50909120709u79ca097fvbe705f0b8e45227@mail.gmail.com>
	(Thomas Trummer's message of "Sat, 12 Sep 2009 16:09:12 +0200")
References: <b5b1f1f50908290202u5898a86ds2244569f83983dd0@mail.gmail.com>
	<874orq61a5.fsf@wine.dyndns.org>
	<b5b1f1f50909120709u79ca097fvbe705f0b8e45227@mail.gmail.com>
Message-ID: <87zl8zuonq.fsf@wine.dyndns.org>

Thomas Trummer <th.trummer at gmail.com> writes:

> Thanks for looking at the patch.
>
> 1) Is there a way to ensure that it doesn't conflict with other symbols?
> I've created a small test program that includes the Linux Irda headers which
> works fine for Linux but I have no idea about the Mac...

Grep for each symbol in the system headers. Trying a build is not
enough.

> 2) About the AF_IRDA et al. symbols: These are already defined in the
> winsock headers, so there are two options: Remove them and include the
> winsock header (this would also get rid of the USE_WS macros) or leave them
> in and add the WS_ prefix appropriately. I would create a new version of the
> patch accordingly...

You can't include winsock.h, that's not what Windows does.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Sun Sep 13 05:29:02 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Sun, 13 Sep 2009 12:29:02 +0200
Subject: Sept 11 with tools and tests removed
In-Reply-To: <4d8b5aa80909121911y394b814duc97a3ac3972954e2@mail.gmail.com>
	(Mike Kaplinskiy's message of "Sat, 12 Sep 2009 22:11:09 -0400")
References: <50078.39793.qm@web112607.mail.gq1.yahoo.com>
	<d7e62e980909120819u462e3d6ak23c42a64888eae00@mail.gmail.com>
	<4d8b5aa80909120824j65ab100dv682053f6588f3095@mail.gmail.com>
	<4d8b5aa80909120830m513d58f4g42289f7ed15b156f@mail.gmail.com>
	<d7e62e980909121451v522a8b66pce82296594ed43fb@mail.gmail.com>
	<d7e40be30909121538s5623dd8w601e41f639484f83@mail.gmail.com>
	<d658b69e0909121608l7e63f4d0g848cb672b4cf2460@mail.gmail.com>
	<4d8b5aa80909121911y394b814duc97a3ac3972954e2@mail.gmail.com>
Message-ID: <87ljkjuoi9.fsf@wine.dyndns.org>

Mike Kaplinskiy <mike.kaplinskiy at gmail.com> writes:

> As for the context note, it is perfectly valid code (segfault-less,
> that is) as it stands, but we should either remove the null check on
> the next line or assign the value later.

No, the code is fine as it is. The bug is in cppcheck.

-- 
Alexandre Julliard
julliard at winehq.org


From juan.lang at gmail.com  Sun Sep 13 11:00:29 2009
From: juan.lang at gmail.com (Juan Lang)
Date: Sun, 13 Sep 2009 09:00:29 -0700
Subject: include: Add missing definitions in af_irda.h. (try 2)
In-Reply-To: <b5b1f1f50909120709u79ca097fvbe705f0b8e45227@mail.gmail.com>
References: <b5b1f1f50908290202u5898a86ds2244569f83983dd0@mail.gmail.com>
	<874orq61a5.fsf@wine.dyndns.org>
	<b5b1f1f50909120709u79ca097fvbe705f0b8e45227@mail.gmail.com>
Message-ID: <3a768c550909130900l7edfff39id19add981baef011@mail.gmail.com>

Hi Thomas,

> I've created a small test program that includes the Linux Irda headers which
> works fine for Linux but I have no idea about the Mac...

There's no IRDA support on the Mac, hence no header conflict to worry about.
--Juan


From wine-devel at kievinfo.com  Sun Sep 13 16:29:56 2009
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 13 Sep 2009 15:29:56 -0600
Subject: [3/5] comctl32/dpa: Implement DPA_SaveStream() with tests
In-Reply-To: <1252867047.5938.8.camel@debianhome.localdomain>
References: <1252867047.5938.8.camel@debianhome.localdomain>
Message-ID: <4AAD6454.6030705@kievinfo.com>

Nikolay Sivov wrote:
> Changelog:
>     - Implement DPA_SaveStream() with tests
> 
> +    streamData.dwSize  = curr_pos.QuadPart - initial_pos.QuadPart;
> +    streamData.dwData2 = 1;
> +    streamData.dwItems = streamInfo.iPos;// + 1;
c++ comment.

> +#if 0
> +    /* crashes on XP */
> +    hRes = pDPA_SaveStream(NULL, CB_Save, pStm, NULL);
> +    expect(E_INVALIDARG, hRes);
> +
> +    hRes = pDPA_SaveStream(dpa, CB_Save, NULL, NULL);
> +    expect(E_INVALIDARG, hRes);
> +#endif
Don't use #if 0 / #endif in tests. Use if (0){} instead. This will guarantee
that code will still compile.

Vitaliy.


From wine-devel at kievinfo.com  Sun Sep 13 16:39:44 2009
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 13 Sep 2009 15:39:44 -0600
Subject: [PATCH 2/2] dpwsockx: Implementation of Open callback
In-Reply-To: <1252871928-6142-2-git-send-email-razielmine@gmail.com>
References: <1252871928-6142-1-git-send-email-razielmine@gmail.com>
	<1252871928-6142-2-git-send-email-razielmine@gmail.com>
Message-ID: <4AAD66A0.5040201@kievinfo.com>

Ismael Barros wrote:
> ---
> +static DWORD WINAPI udp_listener_thread( LPVOID lpParameter )
> +{
> +    for ( ;; )
> +    {
.....
> +    }
> +}
You do not have exit from the loop.

> +    /* Launch thread */
> +    listener->handle = CreateThread( NULL, 0, udp_listener_thread,
> +                                     listener, 0, NULL );
I haven't found the place where you closing this handle.

> +    /* Launch thread */
> +    listener->handle = CreateThread( NULL, 0,
> +                                     ( is_tcp
> +                                       ? tcp_listener_thread
> +                                       : udp_listener_thread ),
> +                                     listener, 0, NULL );
Same here.

Vitaliy.


From wine-devel at kievinfo.com  Sun Sep 13 16:42:17 2009
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 13 Sep 2009 15:42:17 -0600
Subject: ntdll: Do not accept device control requests with invalid and/or
	incompa tible handles
In-Reply-To: <20090912232537.WGUS8155.fep51.mail.dk@post.tele.dk>
References: <1252161985.2994.2.camel@donpedro>
	<87my5589q9.fsf@wine.dyndns.org>	<20090910193018.HPOO1293.fep50.mail.dk@post.tele.dk>	<87pr9y4klw.fsf@wine.dyndns.org>
	<20090912232537.WGUS8155.fep51.mail.dk@post.tele.dk>
Message-ID: <4AAD6739.5020507@kievinfo.com>

Peter Dons Tychsen wrote:
> OK. The "bad handle" is tested by the "deadbeef" handle.
> Where is the best place to get a really good "wrong class" handle?
Create it. Event handle will do for example.

Vitaliy.


From wine-devel at kievinfo.com  Sun Sep 13 16:46:02 2009
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 13 Sep 2009 15:46:02 -0600
Subject: [PATCH 2/2] dpwsockx: Implementation of Open callback
In-Reply-To: <4AAD66A0.5040201@kievinfo.com>
References: <1252871928-6142-1-git-send-email-razielmine@gmail.com>	<1252871928-6142-2-git-send-email-razielmine@gmail.com>
	<4AAD66A0.5040201@kievinfo.com>
Message-ID: <4AAD681A.8090402@kievinfo.com>

Forgot this part:
> Ismael Barros wrote:
> +static DWORD WINAPI tcp_listener_thread( LPVOID lpParameter )
> +{
> +    for ( ;; )
> +    {
> +        if ( clientSock == INVALID_SOCKET )
> +        {
> +            goto end;
> +        }
> +    }
> +
> +end:
> +}
It's more cleaner to use "break;" instead of goto to exit the loop.

Vitaliy.


From razielmine at gmail.com  Sun Sep 13 16:59:12 2009
From: razielmine at gmail.com (=?UTF-8?Q?Ismael_Barros=C2=B2?=)
Date: Sun, 13 Sep 2009 23:59:12 +0200
Subject: [PATCH 2/2] dpwsockx: Implementation of Open callback
In-Reply-To: <4AAD66A0.5040201@kievinfo.com>
References: <1252871928-6142-1-git-send-email-razielmine@gmail.com>
	<1252871928-6142-2-git-send-email-razielmine@gmail.com>
	<4AAD66A0.5040201@kievinfo.com>
Message-ID: <82e274890909131459h27ec39adu5468830477c0167b@mail.gmail.com>

On Sun, Sep 13, 2009 at 11:39 PM, Vitaliy Margolen
<wine-devel at kievinfo.com> wrote:
> You do not have exit from the loop.
>
> I haven't found the place where you closing this handle.
>
> Same here.

The code to close those threads and their listener sockets is meant to
go in DPWSCB_CloseEx(), but I still haven't worked on it. But you are
right, I should already work on the code to gracefully tear the
listeners down.


From razielmine at gmail.com  Sun Sep 13 17:07:28 2009
From: razielmine at gmail.com (=?UTF-8?Q?Ismael_Barros=C2=B2?=)
Date: Mon, 14 Sep 2009 00:07:28 +0200
Subject: [PATCH 2/2] dpwsockx: Implementation of Open callback
In-Reply-To: <4AAD681A.8090402@kievinfo.com>
References: <1252871928-6142-1-git-send-email-razielmine@gmail.com>
	<1252871928-6142-2-git-send-email-razielmine@gmail.com>
	<4AAD66A0.5040201@kievinfo.com> <4AAD681A.8090402@kievinfo.com>
Message-ID: <82e274890909131507t7745450cj8b49e7aeca5d6523@mail.gmail.com>

On Sun, Sep 13, 2009 at 11:46 PM, Vitaliy Margolen
<wine-devel at kievinfo.com> wrote:
> Forgot this part:
>> Ismael Barros wrote:
>> +static DWORD WINAPI tcp_listener_thread( LPVOID lpParameter )
>> +{
>> + ? ?for ( ;; )
>> + ? ?{
>> + ? ? ? ?if ( clientSock == INVALID_SOCKET )
>> + ? ? ? ?{
>> + ? ? ? ? ? ?goto end;
>> + ? ? ? ?}
>> + ? ?}
>> +
>> +end:
>> +}
> It's more cleaner to use "break;" instead of goto to exit the loop.

It's a way to tell between abruptly ending the thread due to an error
(so it just executes cleanup code and returns), and ending the thread
gracefully (which would be done with a break or a thread termination
boolean). In this case is equivalent because there's no code between
the end of the loop and the "end" label.

If it's better to use always a break I will change it.


From wine-devel at kievinfo.com  Sun Sep 13 17:46:37 2009
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 13 Sep 2009 16:46:37 -0600
Subject: [PATCH 2/2] dpwsockx: Implementation of Open callback
In-Reply-To: <82e274890909131507t7745450cj8b49e7aeca5d6523@mail.gmail.com>
References: <1252871928-6142-1-git-send-email-razielmine@gmail.com>	
	<1252871928-6142-2-git-send-email-razielmine@gmail.com>	
	<4AAD66A0.5040201@kievinfo.com> <4AAD681A.8090402@kievinfo.com>
	<82e274890909131507t7745450cj8b49e7aeca5d6523@mail.gmail.com>
Message-ID: <4AAD764D.1040201@kievinfo.com>

Ismael Barros? wrote:
> On Sun, Sep 13, 2009 at 11:46 PM, Vitaliy Margolen
> <wine-devel at kievinfo.com> wrote:
>> Forgot this part:
>>> Ismael Barros wrote:
>>> +static DWORD WINAPI tcp_listener_thread( LPVOID lpParameter )
>>> +{
>>> +    for ( ;; )
>>> +    {
>>> +        if ( clientSock == INVALID_SOCKET )
>>> +        {
>>> +            goto end;
>>> +        }
>>> +    }
>>> +
>>> +end:
>>> +}
>> It's more cleaner to use "break;" instead of goto to exit the loop.
> 
> It's a way to tell between abruptly ending the thread due to an error,
> and ending the thread gracefully.
That makes no sense to me. You have no other point of exit from the loop.
Using goto for no good reason is always a bad thing.

Vitaliy.


From wine-devel at kievinfo.com  Sun Sep 13 17:49:02 2009
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 13 Sep 2009 16:49:02 -0600
Subject: [PATCH 2/2] dpwsockx: Implementation of Open callback
In-Reply-To: <82e274890909131459h27ec39adu5468830477c0167b@mail.gmail.com>
References: <1252871928-6142-1-git-send-email-razielmine@gmail.com>	
	<1252871928-6142-2-git-send-email-razielmine@gmail.com>	
	<4AAD66A0.5040201@kievinfo.com>
	<82e274890909131459h27ec39adu5468830477c0167b@mail.gmail.com>
Message-ID: <4AAD76DE.7040109@kievinfo.com>

Ismael Barros? wrote:
> On Sun, Sep 13, 2009 at 11:39 PM, Vitaliy Margolen
> <wine-devel at kievinfo.com> wrote:
>> You do not have exit from the loop.
>>
>> I haven't found the place where you closing this handle.
>>
>> Same here.
> 
> The code to close those threads and their listener sockets is meant to
> go in DPWSCB_CloseEx(),
Then it should be in the same patch. I guess it might have been ok if you've
sent it as the 3rd patch in the series but you didn't.

Vitaliy.


From jjmckenzie51 at earthlink.net  Sun Sep 13 20:53:21 2009
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Sun, 13 Sep 2009 18:53:21 -0700
Subject: [PATCH 2/2] dpwsockx: Implementation of Open callback
In-Reply-To: <4AAD681A.8090402@kievinfo.com>
References: <1252871928-6142-1-git-send-email-razielmine@gmail.com>	<1252871928-6142-2-git-send-email-razielmine@gmail.com>	<4AAD66A0.5040201@kievinfo.com>
	<4AAD681A.8090402@kievinfo.com>
Message-ID: <4AADA211.4010306@earthlink.net>

Vitaliy Margolen wrote:
> Forgot this part:
>   
>> Ismael Barros wrote:
>> +static DWORD WINAPI tcp_listener_thread( LPVOID lpParameter )
>> +{
>> +    for ( ;; )
>> +    {
>> +        if ( clientSock == INVALID_SOCKET )
>> +        {
>> +            goto end;
>> +        }
>> +    }
>> +
>> +end:
>> +}
>>     
> It's more cleaner to use "break;" instead of goto to exit the loop.
>   
That is some ugly code there. 

Ismael:  Please use a break; to get out of the loop.  It is cleaner and
good code practice.

James McKenzie



From bunglehead at gmail.com  Mon Sep 14 02:04:07 2009
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Mon, 14 Sep 2009 11:04:07 +0400
Subject: [3/5] comctl32/dpa: Implement DPA_SaveStream() with tests
In-Reply-To: <4AAD6454.6030705@kievinfo.com>
References: <1252867047.5938.8.camel@debianhome.localdomain>
	<4AAD6454.6030705@kievinfo.com>
Message-ID: <4AADEAE7.2020902@gmail.com>

Vitaliy Margolen wrote:
> Nikolay Sivov wrote:
>   
>> Changelog:
>>     - Implement DPA_SaveStream() with tests
>>
>> +    streamData.dwSize  = curr_pos.QuadPart - initial_pos.QuadPart;
>> +    streamData.dwData2 = 1;
>> +    streamData.dwItems = streamInfo.iPos;// + 1;
>>     
> c++ comment.
>
>   
>> +#if 0
>> +    /* crashes on XP */
>> +    hRes = pDPA_SaveStream(NULL, CB_Save, pStm, NULL);
>> +    expect(E_INVALIDARG, hRes);
>> +
>> +    hRes = pDPA_SaveStream(dpa, CB_Save, NULL, NULL);
>> +    expect(E_INVALIDARG, hRes);
>> +#endif
>>     
> Don't use #if 0 / #endif in tests. Use if (0){} instead. This will guarantee
> that code will still compile.
>
> Vitaliy.
>   
Thanks.



From Joerg-Cyril.Hoehle at t-systems.com  Mon Sep 14 06:38:03 2009
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Mon, 14 Sep 2009 13:38:03 +0200
Subject: Is Wine printing on MacOSX?
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B0332ED04@S4DE8PSAANK.mitte.t-com.de>

Hi,

Stefan D?singer wrote:
>>All that happened [with notepad] is that the printer ejected a blank page.
>Printing from notepad works fine for me on both Linux and OSX, fwiw

Saving to file instead of printing, notepad generated a .ps file.

Reading this into Apple's preview shows the text.
Converting to pdf, then viewing also shows the text.

Printing this prints a blank page!

So either Apple does not like the PS generated by Wine, or only the printer,
or that's a problem with fonts or whatever else.
I'm using a PPC driver for an old Lexmark Z33 printer that prints documents
from TextEdit and Safari perfectly.
I still need to test a wine application other than notepad.

BTW, the page footer says "Page &p": &p is not substituted by notepad.
Is this a known bug in notepad or Wine's printer driver?

Regards,
	J?rg H?hle.


From Joerg-Cyril.Hoehle at t-systems.com  Mon Sep 14 06:49:49 2009
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Mon, 14 Sep 2009 13:49:49 +0200
Subject: now OSS driver emulation -- and other drivers too -- works as
	well as OSS HW mode; block size error gone?
In-Reply-To: <3a768c550909040959v575a84ebi5bc747bece4bcfc0@mail.gmail.com>
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B0332ED1E@S4DE8PSAANK.mitte.t-com.de>

Hi,

so I have submitted patches for OSS and coreaudio. ALSA will follow.

I also wrote a testcase, but am unsure about one issue.

The following makes sense (winmm/tests/wave.c):
todo_wine ok(origformat.nBlockAlign = format.nBlockAlign, "nBlockAlign fixed");

The problem is: whether or not I use todo_wine, the test will succeed
with some audio drivers and fails with others. How to deal with that?
Limit the test to wine_interactive testruns?

Should I submit this test now, knowing that it'll "fail" (to be more precise:
"succeed unexpectedly") with what people -- presumably -- use most on Linux: ALSA?

Thanks for your help,
	J?rg H?hle


From juan.lang at gmail.com  Mon Sep 14 10:35:52 2009
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 14 Sep 2009 08:35:52 -0700
Subject: [ntdll] Move file attribute logic to new function 
	DIR_get_attributes()
Message-ID: <3a768c550909140835q5c50c666rc5290e30148e84d@mail.gmail.com>

Hi Dan,

> This is a bit different from the code I posted earlier;
> following Samba's example, it combines the
> fd and filename cases into a single function,

Since you don't actually use the fd in your patch, I think it's
preferred style not to include it for now.

Also,
+void DIR_set_attributes(int fd, DWORD attributes)
+{
+    /* Unimplemented.  Wine does not yet store win32 file attributes. */
(snip)
+
+                    /* Try to save attributes.  We don't care too
much if it doesn't work. */
+                    DIR_set_attributes(fd, info->FileAttributes);

Adding a no-op part of the patch is a bit ugly.  Removing it allows
you to focus on one thing in this patch, rewriting querying the file
attributes.  You re-add setting them later.

(Thanks for working on this, by the way.)
--Juan


From donpedro at tdcadsl.dk  Mon Sep 14 10:55:48 2009
From: donpedro at tdcadsl.dk (Peter Dons Tychsen)
Date: Mon, 14 Sep 2009 17:55:48 +0200
Subject: ntdll: Do not accept device control requests with invalid and/or
	incompa tible handles
References: <1252161985.2994.2.camel@donpedro>
	<87my5589q9.fsf@wine.dyndns.org>	<20090910193018.HPOO1293.fep50.mail.dk@post.tele.dk>	<87pr9y4klw.fsf@wine.dyndns.org>
	<20090912232537.WGUS8155.fep51.mail.dk@post.tele.dk>
	<4AAD6739.5020507@kievinfo.com>
Message-ID: <20090914155547.QDKZ24582.fep52.mail.dk@post.tele.dk>

Thanks V.

However, it would seem that AJ already has commited another fix in ntdlls
serial module (which fixes the same bug), so i guess my fix and tests are
not valid any more.

Thanks,

/pedro

----- Original meddelelse -----

> Fra: Vitaliy Margolen <wine-devel at kievinfo.com>
> Til: Peter Dons Tychsen <donpedro at tdcadsl.dk>
> Cc: wine-devel at winehq.org
> Dato: S?n, 13. sep 2009 23:42
> Emne: Re: ntdll: Do not accept device control requests with invalid
> and/or incompa tible handles
> 
> Peter Dons Tychsen wrote:
> > OK. The "bad handle" is tested by the "deadbeef" handle.
> > Where is the best place to get a really good "wrong class" handle?
> Create it. Event handle will do for example.
> 
> Vitaliy.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090914/d18f8d88/attachment.htm>

From saulius2 at ar.fi.lt  Mon Sep 14 12:08:27 2009
From: saulius2 at ar.fi.lt (Saulius Krasuckas)
Date: Mon, 14 Sep 2009 20:08:27 +0300 (EEST)
Subject: Wine at Ohloh
Message-ID: <alpine.DEB.1.10.0909142006180.30905@localhost.localdomain>

FYI, http://www.ohloh.net/p/wine/analyses/latest

I wonder how do they find 27k lines of C++ code in Wine tree...


From Joerg-Cyril.Hoehle at t-systems.com  Mon Sep 14 12:13:40 2009
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Mon, 14 Sep 2009 19:13:40 +0200
Subject: How I create wine app launcher icons on the Mac
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B0332EF1B@S4DE8PSAANK.mitte.t-com.de>

Hi,

On Linux, I have been using .desktop files that freedesktop defines to keep a directory full of icons. They all launch Wine applications.  Often enough, these desktop files are initially create by Wine in ~/.local/share/applications/wine/..., along with the icon files in ~/.local/share/icons/.

Here's how I now have app launcher icons on the Mac:

sips -i ~/.local/share/icons/foo.png --out foo.png
# sips -i converts and *additionaly* adds icon resource to file
# Alas, sips does not understand .xpm
cat sample.command > foo.png
# > overwrites contents but keeps resource fork
mv foo.png ~/Desktop/foo.command
# .command is the finder's suffix for executable shell scripts
chmod a+x foo.command

sample.command contains:
#!/bin/sh
cd /User/me/xyz && WINEDEBUG=-gsm WINEPREFIX=$HOME/.wine exec wine xyz.exe

Afterwards you edit foo.command and change the directory, environment variables and executable names to meet your needs.  Be careful to use an editor that keeps the resource fork.

"Opening" this icon will launch a Terminal where all logs will go. Optionally you may use Cmd-I(nformation) to disable the display of the .command suffix in the finder (unless forced globally). Wine's X11 window opens above the Terminal window.

I wonder whether this functionality could be somehow integrated into the git (winemenubuilder?), or whether developers believe this should be left to "surrounding" projects like Darwine.

What do you think?
	J?rg H?hle
PS: You can wrap up the whole thing into a single shell script using the
cat <<EOF syntax.


From austinenglish at gmail.com  Mon Sep 14 12:17:22 2009
From: austinenglish at gmail.com (Austin English)
Date: Mon, 14 Sep 2009 12:17:22 -0500
Subject: Wine at Ohloh
In-Reply-To: <alpine.DEB.1.10.0909142006180.30905@localhost.localdomain>
References: <alpine.DEB.1.10.0909142006180.30905@localhost.localdomain>
Message-ID: <b6bb06270909141017x450c1cdcpce9beeba3076eaa5@mail.gmail.com>

On Mon, Sep 14, 2009 at 12:08 PM, Saulius Krasuckas <saulius2 at ar.fi.lt> wrote:
> FYI, http://www.ohloh.net/p/wine/analyses/latest
>
> I wonder how do they find 27k lines of C++ code in Wine tree...

According to that, there are also 2 files that are GPL 3, and 2 others
that are GPL 2.0, I think their stats are a bit off.

-- 
-Austin


From paul.vriens.wine at gmail.com  Mon Sep 14 12:28:13 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Mon, 14 Sep 2009 19:28:13 +0200
Subject: Wine at Ohloh
In-Reply-To: <b6bb06270909141017x450c1cdcpce9beeba3076eaa5@mail.gmail.com>
References: <alpine.DEB.1.10.0909142006180.30905@localhost.localdomain>
	<b6bb06270909141017x450c1cdcpce9beeba3076eaa5@mail.gmail.com>
Message-ID: <4AAE7D2D.6020700@gmail.com>

On 09/14/2009 07:17 PM, Austin English wrote:
> On Mon, Sep 14, 2009 at 12:08 PM, Saulius Krasuckas<saulius2 at ar.fi.lt>  wrote:
>> FYI, http://www.ohloh.net/p/wine/analyses/latest
>>
>> I wonder how do they find 27k lines of C++ code in Wine tree...
>
> According to that, there are also 2 files that are GPL 3, and 2 others
> that are GPL 2.0, I think their stats are a bit off.
>
We do have two files that mention GPL 2.0 in the strings (LGPL 2.1 in 
the header though):

programs/clock/Sv.rc
programs/progman/Sv.rc

-- 
Cheers,

Paul.


From hverbeet at gmail.com  Mon Sep 14 12:43:55 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 14 Sep 2009 19:43:55 +0200
Subject: Wine at Ohloh
In-Reply-To: <4AAE7D2D.6020700@gmail.com>
References: <alpine.DEB.1.10.0909142006180.30905@localhost.localdomain>
	<b6bb06270909141017x450c1cdcpce9beeba3076eaa5@mail.gmail.com>
	<4AAE7D2D.6020700@gmail.com>
Message-ID: <d658b69e0909141043w759c746et9bfde26281159968@mail.gmail.com>

As for C++, we do have some of that in the headers, and 27k isn't that much.


From stefandoesinger at gmx.at  Mon Sep 14 13:22:35 2009
From: stefandoesinger at gmx.at (Stefan =?iso-8859-1?q?D=F6singer?=)
Date: Mon, 14 Sep 2009 20:22:35 +0200
Subject: ddraw: complete recognition of pixelformat 19: X8L8V8U8
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B0332EEDF@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B0332EEDF@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <200909142022.35396.stefandoesinger@gmx.at>

Am Monday 14 September 2009 17:28:13 schrieb Joerg-Cyril.Hoehle at t-systems.com:
> Hi,
>
> the argument for including this code is based on symmetry: Every place in
> the Wine source tree (incl. ddraw, d3d9, wined3d) that handles L6V5U5 also
> handles X8L8V8U8 -- except for these two places.  So I closed the gap.
>
> This fixes
> err:ddraw:PixelFormat_WineD3DtoDD Can't translate this Pixelformat 19
> Please see bug #16559 for further discussion.
>
> Being based on the symmetry argument means this patch is completely
> independent on possible missing conversions between D3DFMT and WINED3DFMT
> codes somewhere in Wine. I would not eliminate that possibility.  The above
> error message that used to mention Pixelformats 62/63/64 nowadays mentions
> 19/64/69/70.
>
> Regards,
>  J?rg H?hle

The patch seems ok to me



From ken at codeweavers.com  Mon Sep 14 13:56:31 2009
From: ken at codeweavers.com (Ken Thomases)
Date: Mon, 14 Sep 2009 13:56:31 -0500
Subject: [PATCH 1/1] winecoreaudio: make supported format test more
	restrictive
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B0332ECE1@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B0332ECE1@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <845274A4-99D1-4C19-B1B1-09F428911D1A@codeweavers.com>

On Sep 14, 2009, at 6:21 AM, <Joerg-Cyril.Hoehle at t-systems.com> <Joerg-Cyril.Hoehle at t-systems.com 
 > wrote:

> supportedformat() has been in OSS' audio.c since 2004, so the  
> coreaudio driver was forked even before that time?!?

Well, the CoreAudio driver was based on the ALSA driver.  So, if ALSA  
was copied from the OSS driver before that change was made, then  
effectively, yes, the CoreAudio driver was forked before that time.

-Ken



From bunglehead at gmail.com  Mon Sep 14 14:33:19 2009
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Mon, 14 Sep 2009 23:33:19 +0400
Subject: [1/2] comctl32: Implement highlighting (marquee) selection support
	in listview
In-Reply-To: <4AAE934E.3010808@codeweavers.com>
References: <4AAE934E.3010808@codeweavers.com>
Message-ID: <4AAE9A7F.9050601@gmail.com>

Owen Rudge wrote:
> These patches add support for selecting multiple items in a 
> multi-selection listview using the mouse (by dragging and highlighting).
>
> ---
>  dlls/comctl32/listview.c |  172 
> ++++++++++++++++++++++++++++++++++++++++++----
>  1 files changed, 157 insertions(+), 15 deletions(-)
Hi, Owen.

Some comments.

---

@@ -201,6 +201,7 @@ typedef struct tagITEM_INFO
   LPARAM lParam;
   INT iIndent;
   ITEM_ID *id;
+  UINT orig_state; /* state before highlighting operation begins */
 } ITEM_INFO;

---
Why do you need this restoring code?

If you're starting selection box with some items selected they should be 
deselected if not Shift pressed and
leaved untouched if Shift used. I don't see a reason to restore it - 
when you want to toggle selected state
moving rectangle with Ctrl pressed you could just:

LISTVIEW_GetItemState() and place inverted state with following 
LISTVIEW_SetItemState().

Also such large cycles shouldn't be used if you could manage not to use 
them.
Currently we're not doing right sometimes with ownerdata lists which 
leads to huge response times
(see http://bugs.winehq.org/show_bug.cgi?id=14303).

Anyway this part:
---
+ /* Take a snapshot of all the item states */

+                        for (i = 0; i < infoPtr->nItemCount; i++)
+                        {
+                            hdpaSubItems = DPA_GetPtr(infoPtr->hdpaItems, i);
+                            lpItem = DPA_GetPtr(hdpaSubItems, 0);
+
+                            if (lpItem)
+                                lpItem->orig_state = lpItem->state;
+                        }
---

is wrong. You can't do it that way cause selected state could also be cached at
parent side with corresponding callback bit set (look at LISTVIEW_GetItemT()).

P.S. No need to split in two patches here, fist is useless if we can't see rectangle.



From owen at owenrudge.net  Mon Sep 14 14:57:16 2009
From: owen at owenrudge.net (Owen Rudge)
Date: Mon, 14 Sep 2009 20:57:16 +0100
Subject: [1/2] comctl32: Implement highlighting (marquee) selection support
	in listview
In-Reply-To: <4AAE9A7F.9050601@gmail.com>
References: <4AAE934E.3010808@codeweavers.com> <4AAE9A7F.9050601@gmail.com>
Message-ID: <4AAEA01C.4000003@owenrudge.net>

Hi Nikolay,

> Why do you need this restoring code?

I tried to replicate the way that Windows did the selections. Testing 
various manners of selection with Windows Explorer, that code was needed 
for a relatively specific scenario:

If you're starting a selection box with some items already selected and 
Shift is pressed, then the items should, as you say, remain selected. If 
you then highlight some different items, but then un-highlight them 
before releasing the mouse button, the original items should remain 
selected. However, if in that time you highlight some of the already 
highlighted items, and then unhighlight them, they should not remain 
highlighted.

Due to the fact that, with this code, I'm deselecting all the items (if 
neither shift nor ctrl are pressed) whenever the bounding box is 
altered, we obviously need to keep a record of how the items were 
highlighted before the selection was started.

The alternative would be, I believe, to maintain a list of all the items 
that have become highlighted or de-highlighted during the selection 
process, so that they can be restored if need. This would probably be 
more efficient, at least with large numbers of items, but it would be 
more complex to implement. If need be, of course, I can try to 
reimplement the code in this manner.

> If you're starting selection box with some items selected they should be 
> deselected if not Shift pressed and
> leaved untouched if Shift used. I don't see a reason to restore it - 
> when you want to toggle selected state
> moving rectangle with Ctrl pressed you could just:
> 
> LISTVIEW_GetItemState() and place inverted state with following 
> LISTVIEW_SetItemState().

The issue with doing it this way is it would result in massive 
flickering every time you moved the mouse, unless I perhaps 
misunderstood you. Otherwise I guess there would have to be some way of 
tracking that the pointer is still within the hit area of a certain 
item, and has not moved out from that area, and hence the state should 
not be inverted again.

> Also such large cycles shouldn't be used if you could manage not to use 
> them.

See above - but that was indeed a concern of mine. I tested with some 
reasonably large collections of items (in the hundreds), and it did not 
seem noticeably slow, but I admit to not trying with thousands if items.

> Anyway this part:
 > ...
> is wrong. You can't do it that way cause selected state could also be 
> cached at
> parent side with corresponding callback bit set (look at 
> LISTVIEW_GetItemT()).

I'll look into that, thanks.

> P.S. No need to split in two patches here, fist is useless if we can't 
> see rectangle.

I can of course combine the two patches. However, the first isn't 
actually useless on its own - even if the rectangle can't be seen, it is 
obvious where the selection box is due to the highlighting of the icons. :)

Thanks for your comments!

-- 
Owen Rudge
http://www.owenrudge.net/


From bunglehead at gmail.com  Mon Sep 14 15:53:52 2009
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Tue, 15 Sep 2009 00:53:52 +0400
Subject: [1/2] comctl32: Implement highlighting (marquee) selection support
	in listview
In-Reply-To: <4AAEA01C.4000003@owenrudge.net>
References: <4AAE934E.3010808@codeweavers.com> <4AAE9A7F.9050601@gmail.com>
	<4AAEA01C.4000003@owenrudge.net>
Message-ID: <4AAEAD60.2090001@gmail.com>

Owen Rudge wrote:
> Hi Nikolay,
>
>> Why do you need this restoring code?
>
> I tried to replicate the way that Windows did the selections. Testing 
> various manners of selection with Windows Explorer, that code was 
> needed for a relatively specific scenario:
>
> If you're starting a selection box with some items already selected 
> and Shift is pressed, then the items should, as you say, remain 
> selected. If you then highlight some different items, but then 
> un-highlight them before releasing the mouse button, the original 
> items should remain selected. However, if in that time you highlight 
> some of the already highlighted items, and then unhighlight them, they 
> should not remain highlighted.
Exactly. So why should we deselect everything starting this selecting 
rectangle (when some threshold distance from initial click position 
reached)?
Why not just let initially selected items as they are and simply alter 
their state when selection touches them?
>
> Due to the fact that, with this code, I'm deselecting all the items 
> (if neither shift nor ctrl are pressed) whenever the bounding box is 
> altered,
This is a problem. I don't think native does it this way - deselecting 
all already selected items seems quite strange. And this will flicker as 
a side effect I suppose. This could be easily seen cause native doesn't 
send any notification while moving selection rectangle without item change.
You could of course silence notifications in this case as a workaround 
too :), but this approach will turn code in crap in future.

Could we try it this way (just a proposal):

selecting rectangle has only two working sides with and angle at current 
cursor position. Each resize leads to two smaller rectangles resize - 
formed these two sides and previous selection rectangle (that you 
introduced in second patch). Remaining rectangle stays as it was.
What if test for items to change using these two rectangles? Two 
iterator_frameditems() calls will return items to change, next goes rule 
to toggle or select/deselect item depending on keys state.
> we obviously need to keep a record of how the items were highlighted 
> before the selection was started.
>
> The alternative would be, I believe, to maintain a list of all the 
> items that have become highlighted or de-highlighted during the 
> selection process, so that they can be restored if need. This would 
> probably be more efficient, at least with large numbers of items, but 
> it would be more complex to implement. If need be, of course, I can 
> try to reimplement the code in this manner.
You're speaking about selection ranges here which aren't lists, but an 
efficient in some sense storage for selections.
>
>> If you're starting selection box with some items selected they should 
>> be deselected if not Shift pressed and
>> leaved untouched if Shift used. I don't see a reason to restore it - 
>> when you want to toggle selected state
>> moving rectangle with Ctrl pressed you could just:
>>
>> LISTVIEW_GetItemState() and place inverted state with following 
>> LISTVIEW_SetItemState().
>
> The issue with doing it this way is it would result in massive 
> flickering every time you moved the mouse, unless I perhaps 
> misunderstood you.
Why will it flicker? If state didn't change LISTVIEW_SetItemState is 
smart enough to do not any invalidation.
> Otherwise I guess there would have to be some way of tracking that the 
> pointer is still within the hit area of a certain item, and has not 
> moved out from that area, and hence the state should not be inverted 
> again.
Same selection rule applies here, as for all other items called 
iterator_frameditems() - don't know if it's nice to use in this case though,
cause some intersection allowed here while moving selection rectangle 
with mouse. You could tweak this by the way passing a bit altered 
rectangle to this helper (not equally selection rectangle).
>
>
>> Also such large cycles shouldn't be used if you could manage not to 
>> use them.
>
> See above - but that was indeed a concern of mine. I tested with some 
> reasonably large collections of items (in the hundreds), and it did 
> not seem noticeably slow, but I admit to not trying with thousands if 
> items.
It's something like a known const memory amount that should suffice 
everyone needs in future ). If we could avoid this we certainly should.
>> Anyway this part:
> > ...
>> is wrong. You can't do it that way cause selected state could also be 
>> cached at
>> parent side with corresponding callback bit set (look at 
>> LISTVIEW_GetItemT()).
>
> I'll look into that, thanks.



From winehacker at gmail.com  Mon Sep 14 16:33:38 2009
From: winehacker at gmail.com (Steven Edwards)
Date: Mon, 14 Sep 2009 17:33:38 -0400
Subject: How I create wine app launcher icons on the Mac
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B0332EF1B@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B0332EF1B@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <19e31a080909141433h2e797163r61ae8700dbf53a5d@mail.gmail.com>

Hi,

On Mon, Sep 14, 2009 at 1:13 PM,  <Joerg-Cyril.Hoehle at t-systems.com> wrote:
> On Linux, I have been using .desktop files that freedesktop defines to keep a directory full of icons. They all launch Wine applications. ?Often enough, these desktop files are initially create by Wine in ~/.local/share/applications/wine/..., along with the icon files in ~/.local/share/icons/.

I wrote a patch to create .app bundled is winemenubuilder that was
rejected because it needs to be converted to use Carbon api's for
creation and editing of the *.plist files. I think its a better
approach/framework because it allows you to have, resource data,
multiple icons, and perhaps the ability to add drag/drop to the
helper.

I am not sure I am following this.

> Here's how I now have app launcher icons on the Mac:
>
> sips -i ~/.local/share/icons/foo.png --out foo.png
> # sips -i converts and *additionaly* adds icon resource to file
> # Alas, sips does not understand .xpm
> cat sample.command > foo.png

Do you mean >> ? wouldn't the > just overwrite the foo.png?

> # > overwrites contents but keeps resource fork
> mv foo.png ~/Desktop/foo.command

I guess the resource fork is contained in a xattr right?

> # .command is the finder's suffix for executable shell scripts
> chmod a+x foo.command

Right but what happened to the png image?

> sample.command contains:
> #!/bin/sh
> cd /User/me/xyz && WINEDEBUG=-gsm WINEPREFIX=$HOME/.wine exec wine xyz.exe
>
> Afterwards you edit foo.command and change the directory, environment variables and executable names to meet your needs. ?Be careful to use an editor that keeps the resource fork.
>
> "Opening" this icon will launch a Terminal where all logs will go. Optionally you may use Cmd-I(nformation) to disable the display of the .command suffix in the finder (unless forced globally). Wine's X11 window opens above the Terminal window.

Using the sample.command or whatever is there a way to always hide the terminal?

> I wonder whether this functionality could be somehow integrated into the git (winemenubuilder?), or whether developers believe this should be left to "surrounding" projects like Darwine.

See this patch

http://www.winehq.org/pipermail/wine-patches/2009-July/076251.html

> What do you think?

I think somebody that is more familiar with Carbon should adopt my patch =)

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From winehacker at gmail.com  Mon Sep 14 16:36:33 2009
From: winehacker at gmail.com (Steven Edwards)
Date: Mon, 14 Sep 2009 17:36:33 -0400
Subject: How I create wine app launcher icons on the Mac
In-Reply-To: <19e31a080909141433h2e797163r61ae8700dbf53a5d@mail.gmail.com>
References: <47CC5ABB01651443A88DB8EC5B4D657B0332EF1B@S4DE8PSAANK.mitte.t-com.de>
	<19e31a080909141433h2e797163r61ae8700dbf53a5d@mail.gmail.com>
Message-ID: <19e31a080909141436xce6445ey77232f9315994a68@mail.gmail.com>

On Mon, Sep 14, 2009 at 5:33 PM, Steven Edwards <winehacker at gmail.com> wrote:
> Do you mean >> ? wouldn't the > just overwrite the foo.png?

Sorry for the noise, I hit send too soon. I mean don't you mean >>
rather than just > which would just overwrite the icon you just
converted.

<snip>

>> "Opening" this icon will launch a Terminal where all logs will go. Optionally you may use Cmd-I(nformation) to disable the display of the .command suffix in the finder (unless forced globally). Wine's X11 window opens above the Terminal window.
>
> Using the sample.command or whatever is there a way to always hide the terminal?

What I mean here, is there a switch or resource fork or xattr you can
set that implies Cmd-I for this given *.command? I mean, I am sure we
don't want to try to enforce that for all other *.command scripts,
just ones we create.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From winehacker at gmail.com  Tue Sep 15 02:07:37 2009
From: winehacker at gmail.com (Steven Edwards)
Date: Tue, 15 Sep 2009 03:07:37 -0400
Subject: How I create wine app launcher icons on the Mac
In-Reply-To: <19e31a080909141433h2e797163r61ae8700dbf53a5d@mail.gmail.com>
References: <47CC5ABB01651443A88DB8EC5B4D657B0332EF1B@S4DE8PSAANK.mitte.t-com.de>
	<19e31a080909141433h2e797163r61ae8700dbf53a5d@mail.gmail.com>
Message-ID: <19e31a080909150007w56caa5e9ya5236647bd2bab63@mail.gmail.com>

On Mon, Sep 14, 2009 at 5:33 PM, Steven Edwards <winehacker at gmail.com> wrote:
> Right but what happened to the png image?

OK so I looked at it a bit more in depth and understand what your
going for now. So you are embedding the png as a resource fork of the
png image but then using the png as a script. You kind of lost me
before but it makes sense now. It's creative but not the correct way
to do what we want.

All that really needs to be done to fix the patch I have is to convert
the raw C io-ops to use the Carbon functions for writing out the plist
and add a helper to function do the conversion from png to icns. I
suspect we might be able to go from png to tiff to icns using OS X
builtin tools and spawn* to do the magic. At the worst case we need to
write a helper function to convert the format.

Thanks
-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From ggeldorp at vmware.com  Tue Sep 15 04:09:52 2009
From: ggeldorp at vmware.com (Greg Geldorp)
Date: Tue, 15 Sep 2009 02:09:52 -0700
Subject: CertGetPublicKeyLength() test failures on Win7
Message-ID: <1C77FC3365DBD149802E0F5381EBE2C90114F1303F@EXCH-MBX-4.vmware.com>

Hi Juan,

I see 3 test failures related to CertGetPublicKeyLength() on Win7, crypt32/tests/cert.c lines 3146/3160/3165. All 3 failures are the same, CertGetPublicKeyLength() returns 0 with last error 0x80090004 (NTE_BAD_LEN). After looking at it for a while, I'm inclined to change the condition to ok(ret == 56 || (ok == 0 && GetLastError() == NTE_BAD_LEN), ...). Do you agree that's the correct fix or do I need to dig deeper?

Thanks, Ge.


From dank at kegel.com  Tue Sep 15 05:42:35 2009
From: dank at kegel.com (Dan Kegel)
Date: Tue, 15 Sep 2009 03:42:35 -0700
Subject: [3/4] msi: GetDriveType and GetVolumeInformation require a path 
	terminated by a slash.
Message-ID: <a71bd89a0909150342s70db99ceg326ab0596129bbde@mail.gmail.com>

Don't changes like this need corresponding conformance tests?
Likewise with "[4/4] msi: Don't append the cabinet file name in
find_published_source."


From hans at codeweavers.com  Tue Sep 15 06:35:33 2009
From: hans at codeweavers.com (Hans Leidekker)
Date: Tue, 15 Sep 2009 13:35:33 +0200
Subject: [3/4] msi: GetDriveType and GetVolumeInformation require a path
	terminated by a slash.
In-Reply-To: <a71bd89a0909150342s70db99ceg326ab0596129bbde@mail.gmail.com>
References: <a71bd89a0909150342s70db99ceg326ab0596129bbde@mail.gmail.com>
Message-ID: <200909151335.33151.hans@codeweavers.com>

On Tuesday 15 September 2009 12:42:35 pm Dan Kegel wrote:

> Don't changes like this need corresponding conformance tests?
> Likewise with "[4/4] msi: Don't append the cabinet file name in
> find_published_source."

They seemed pretty obvious fixes to me and they fix existing installers.
A test case isn't trivial either, it would require an installer, a cabinet
stream and a patch file.

 -Hans


From juan.lang at gmail.com  Tue Sep 15 11:10:45 2009
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 15 Sep 2009 09:10:45 -0700
Subject: CertGetPublicKeyLength() test failures on Win7
In-Reply-To: <1C77FC3365DBD149802E0F5381EBE2C90114F1303F@EXCH-MBX-4.vmware.com>
References: <1C77FC3365DBD149802E0F5381EBE2C90114F1303F@EXCH-MBX-4.vmware.com>
Message-ID: <3a768c550909150910k47753cf8h420fb7dcacaab17f@mail.gmail.com>

Hi Ge,

> I see 3 test failures related to CertGetPublicKeyLength() on Win7, crypt32/tests/cert.c lines 3146/3160/3165. All 3 failures are the same, CertGetPublicKeyLength() returns 0 with last error 0x80090004 (NTE_BAD_LEN). After looking at it for a while, I'm inclined to change the condition to ok(ret == 56 || (ok == 0 && GetLastError() == NTE_BAD_LEN), ...). Do you agree that's the correct fix or do I need to dig deeper?

Hm, that's interesting.  I'm certainly curious why that is.  I'd check
whether Win7 can decode the public key.  From our implementation of
CertGetPublicKeyLength():

        BOOL ret = CryptDecodeObjectEx(dwCertEncodingType,
         RSA_CSP_PUBLICKEYBLOB, pPublicKey->PublicKey.pbData,
         pPublicKey->PublicKey.cbData, CRYPT_DECODE_ALLOC_FLAG, NULL, &buf,
         &size);

I expect this is also failing on Win7?
--Juan


From razielmine at gmail.com  Tue Sep 15 11:31:13 2009
From: razielmine at gmail.com (=?UTF-8?Q?Ismael_Barros=C2=B2?=)
Date: Tue, 15 Sep 2009 18:31:13 +0200
Subject: [PATCH 2/2] dpwsockx: Implementation of Open callback
In-Reply-To: <4AAD764D.1040201@kievinfo.com>
References: <1252871928-6142-1-git-send-email-razielmine@gmail.com>
	<1252871928-6142-2-git-send-email-razielmine@gmail.com>
	<4AAD66A0.5040201@kievinfo.com> <4AAD681A.8090402@kievinfo.com>
	<82e274890909131507t7745450cj8b49e7aeca5d6523@mail.gmail.com>
	<4AAD764D.1040201@kievinfo.com>
Message-ID: <82e274890909150931h750efeefwbdf8a1333bdb0073@mail.gmail.com>

On Mon, Sep 14, 2009 at 12:46 AM, Vitaliy Margolen
<wine-devel at kievinfo.com> wrote:
>> It's a way to tell between abruptly ending the thread due to an error,
>> and ending the thread gracefully.
> That makes no sense to me. You have no other point of exit from the loop.
> Using goto for no good reason is always a bad thing.
>
> Vitaliy.
>

Actually I'm considering dropping that code and using nonblocking
sockets with WSARecv/From() and a callback, which would make the code
much simpler, as I wouldn't have to manage my own threads.

However the blocking approach (recv/from()) seems to be more popular
in the codebase; is there any drawback I'm not aware of, or using
nonblocking sockets is okay?


From austinenglish at gmail.com  Tue Sep 15 12:13:13 2009
From: austinenglish at gmail.com (Austin English)
Date: Tue, 15 Sep 2009 12:13:13 -0500
Subject: Wine at Ohloh
In-Reply-To: <4AAE7D2D.6020700@gmail.com>
References: <alpine.DEB.1.10.0909142006180.30905@localhost.localdomain> 
	<b6bb06270909141017x450c1cdcpce9beeba3076eaa5@mail.gmail.com> 
	<4AAE7D2D.6020700@gmail.com>
Message-ID: <b6bb06270909151013j36129223s56e6e18eaedd18e7@mail.gmail.com>

On Mon, Sep 14, 2009 at 12:28 PM, Paul Vriens
<paul.vriens.wine at gmail.com> wrote:
> On 09/14/2009 07:17 PM, Austin English wrote:
>>
>> On Mon, Sep 14, 2009 at 12:08 PM, Saulius Krasuckas<saulius2 at ar.fi.lt>
>> ?wrote:
>>>
>>> FYI, http://www.ohloh.net/p/wine/analyses/latest
>>>
>>> I wonder how do they find 27k lines of C++ code in Wine tree...
>>
>> According to that, there are also 2 files that are GPL 3, and 2 others
>> that are GPL 2.0, I think their stats are a bit off.
>>
> We do have two files that mention GPL 2.0 in the strings (LGPL 2.1 in the
> header though):
>
> programs/clock/Sv.rc
> programs/progman/Sv.rc

Thanks for pointing that out. I've sent patches for these two.

-- 
-Austin


From ggeldorp at vmware.com  Tue Sep 15 13:02:48 2009
From: ggeldorp at vmware.com (Greg Geldorp)
Date: Tue, 15 Sep 2009 11:02:48 -0700
Subject: CertGetPublicKeyLength() test failures on Win7
In-Reply-To: <3a768c550909150910k47753cf8h420fb7dcacaab17f@mail.gmail.com>
References: <1C77FC3365DBD149802E0F5381EBE2C90114F1303F@EXCH-MBX-4.vmware.com>
	<3a768c550909150910k47753cf8h420fb7dcacaab17f@mail.gmail.com>
Message-ID: <1C77FC3365DBD149802E0F5381EBE2C90114F13233@EXCH-MBX-4.vmware.com>

> From: Juan Lang
> > I see 3 test failures related to CertGetPublicKeyLength() on Win7,
> > crypt32/tests/cert.c lines 3146/3160/3165. All 3 failures are the
> > same, CertGetPublicKeyLength() returns 0 with last error 0x80090004
> >  (NTE_BAD_LEN). After looking at it for a while, I'm inclined to
> > change the condition to ok(ret == 56 || (ok == 0 && GetLastError()
> >  == NTE_BAD_LEN), ...). Do you agree that's the correct fix or do
> > I need to dig deeper?
>
> Hm, that's interesting.  I'm certainly curious why that is.  I'd check
> whether Win7 can decode the public key.  From our implementation of
> CertGetPublicKeyLength():
>
>         BOOL ret = CryptDecodeObjectEx(dwCertEncodingType,
>          RSA_CSP_PUBLICKEYBLOB, pPublicKey->PublicKey.pbData,
>          pPublicKey->PublicKey.cbData, CRYPT_DECODE_ALLOC_FLAG, NULL, &buf,
>          &size);
>
> I expect this is also failing on Win7?

No, it's not. Return value is TRUE, buf is allocated and contains a
PUBKEYSTRUC followed by a RSAPUBKEY with len 56 while size contains 0x1b.
So Win7 is capable of decoding the key.

Ge.


From juan.lang at gmail.com  Tue Sep 15 13:27:22 2009
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 15 Sep 2009 11:27:22 -0700
Subject: CertGetPublicKeyLength() test failures on Win7
In-Reply-To: <1C77FC3365DBD149802E0F5381EBE2C90114F13233@EXCH-MBX-4.vmware.com>
References: <1C77FC3365DBD149802E0F5381EBE2C90114F1303F@EXCH-MBX-4.vmware.com>
	<3a768c550909150910k47753cf8h420fb7dcacaab17f@mail.gmail.com>
	<1C77FC3365DBD149802E0F5381EBE2C90114F13233@EXCH-MBX-4.vmware.com>
Message-ID: <3a768c550909151127g70045cf9wbc268e8bd304c9f1@mail.gmail.com>

> No, it's not. Return value is TRUE, buf is allocated and contains a
> PUBKEYSTRUC followed by a RSAPUBKEY with len 56 while size contains 0x1b.
> So Win7 is capable of decoding the key.

Thanks for checking that.  That appears to be a bug to me, then,
although it could be that it's failing for some other reason I haven't
guessed yet.  I think broken() would be appropriate in this case,
since Win7 is the odd man out.

Thanks,
--Juan


From ggeldorp at vmware.com  Tue Sep 15 13:29:36 2009
From: ggeldorp at vmware.com (Greg Geldorp)
Date: Tue, 15 Sep 2009 11:29:36 -0700
Subject: CertGetPublicKeyLength() test failures on Win7
In-Reply-To: <3a768c550909151127g70045cf9wbc268e8bd304c9f1@mail.gmail.com>
References: <1C77FC3365DBD149802E0F5381EBE2C90114F1303F@EXCH-MBX-4.vmware.com>
	<3a768c550909150910k47753cf8h420fb7dcacaab17f@mail.gmail.com>
	<1C77FC3365DBD149802E0F5381EBE2C90114F13233@EXCH-MBX-4.vmware.com>
	<3a768c550909151127g70045cf9wbc268e8bd304c9f1@mail.gmail.com>
Message-ID: <1C77FC3365DBD149802E0F5381EBE2C90114F13270@EXCH-MBX-4.vmware.com>

> From: Juan Lang [mailto:juan.lang at gmail.com]
>
> > No, it's not. Return value is TRUE, buf is allocated and contains a
> > PUBKEYSTRUC followed by a RSAPUBKEY with len 56 while size contains 0x1b.
> > So Win7 is capable of decoding the key.
>
> Thanks for checking that.  That appears to be a bug to me, then,
> although it could be that it's failing for some other reason I haven't
> guessed yet.  I think broken() would be appropriate in this case,
> since Win7 is the odd man out.

Thanks, I'll submit a patch.

Ge.



From paul.vriens.wine at gmail.com  Wed Sep 16 04:14:40 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 16 Sep 2009 11:14:40 +0200
Subject: Down to an average of 1% failures on my Windows boxes
Message-ID: <4AB0AC80.7050306@gmail.com>

Hi,

Just wanting to let you know that I'm down to 1% average failures on my 
Windows boxes (W95/W98/NT4/W2K/XP/W2K3/Vista).

Short list:

Sep-2009 : 1%
Jun-2009 : 2%
May-2009 : 3%
Mar-2009 : 4%
Feb-2009 : 5%

So I doubt we get to zero before WineConf ;)

-- 
Cheers,

Paul.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: winetest.png
Type: image/png
Size: 8271 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090916/59ae49a7/attachment.png>

From Joerg-Cyril.Hoehle at t-systems.com  Wed Sep 16 04:24:16 2009
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Wed, 16 Sep 2009 11:24:16 +0200
Subject: [3/4] msi: GetDriveType and GetVolumeInformation require a path
	terminated by a slash.
In-Reply-To: <3a768c550909040959v575a84ebi5bc747bece4bcfc0@mail.gmail.com>
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B03377DE0@S4DE8PSAANK.mitte.t-com.de>

Dan Kegel asked:
>Don't changes like this need corresponding conformance tests?
There is one already for GetVolumeInformation in kernel32, see the commits made by Guy Albertelli in April this year.

Please see my mail from June where I located all uses of GetVolumeInformation and asked for review.
http://www.winehq.org/pipermail/wine-devel/2009-June/076733.html

In hindsight, my use of "pass" was misleading. It means "reviewers, please find out and check the callers of the code to see whether their supply the now required trailing slash."
As you can see from the list of commits, grepping for GetVolumeInformation, the change from April affected several places, some of which I found and fixed in June, another one Hans Leidekker now.
File msi/media.c which Hans changed now was listed in this mail.  This is unfortunate.

Looking at the mail above, this still leaves 5 places to check ("review" and "pass") in shell32, user32 and winedos.

Regards,
	J?rg H?hle


From antoniosacchi85 at gmail.com  Wed Sep 16 04:47:38 2009
From: antoniosacchi85 at gmail.com (sacchi antonio)
Date: Wed, 16 Sep 2009 11:47:38 +0200
Subject: [bugzilla] donate to sponsoring bug
Message-ID: <7845d8c60909160247n4f4951c3uad05cf94c63490f2@mail.gmail.com>

hello all.
I'm new here but I'd like to suggest something,
what do you think about this?
http://img29.imageshack.us/img29/2940/wined.png

Maybe it will be good for old/hard bugs?

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090916/69559891/attachment-0001.htm>

From Nicklas.Borjesson at ws.se  Wed Sep 16 05:38:50 2009
From: Nicklas.Borjesson at ws.se (=?iso-8859-1?Q?Nicklas_B=F6rjesson?=)
Date: Wed, 16 Sep 2009 12:38:50 +0200
Subject: [bugzilla] donate to sponsoring bug
References: <7845d8c60909160247n4f4951c3uad05cf94c63490f2@mail.gmail.com>
Message-ID: <B73E4E48704A3A43B786A9078FF1BC6D019F49D5@wsmail01.ws.se>

I suppose that this only will appear on some bugs and disregarding that people might put off fixing bugs waiting for it to become a "pay-bug".
Who's going to get the money? It seems quite common that people share credit on fixing bugs, should we burden Alexandre with the task of deciding that?
Wouldn't this rather be on "projects", than bugs? The bug mentioned feels more like a "project". 

//Nicklas

-----Original Message-----
From: wine-devel-bounces at winehq.org on behalf of sacchi antonio
Sent: Wed 2009-09-16 11:47
To: wine-devel at winehq.org
Subject: [bugzilla] donate to sponsoring bug
 
hello all.
I'm new here but I'd like to suggest something,
what do you think about this?
http://img29.imageshack.us/img29/2940/wined.png

Maybe it will be good for old/hard bugs?

Thanks



From twickline at gmail.com  Wed Sep 16 05:50:05 2009
From: twickline at gmail.com (Tom Wickline)
Date: Wed, 16 Sep 2009 06:50:05 -0400
Subject: [bugzilla] donate to sponsoring bug
In-Reply-To: <B73E4E48704A3A43B786A9078FF1BC6D019F49D5@wsmail01.ws.se>
References: <7845d8c60909160247n4f4951c3uad05cf94c63490f2@mail.gmail.com>
	<B73E4E48704A3A43B786A9078FF1BC6D019F49D5@wsmail01.ws.se>
Message-ID: <53e3a9930909160350g11aed2f2wef0cd81f3eab3038@mail.gmail.com>

Hello,

You could have the money go into the general WPF or WCF "Wine Conference
Fund"
But the problem is if say I donate $50.00 who's to say the bug I donate to
will be resolved
any time soon? Paypal only allows refunds up to 60 days, so how would you go
about a refund
if the bug wasn't fixed in say a year or more?

I think it would be hard to keep everyone happy, because as soon as people
donate to a bug
their going to expect something in return. And a refund most likely if the
bug isn't fixed.

Tom

2009/9/16 Nicklas B?rjesson <Nicklas.Borjesson at ws.se>

> I suppose that this only will appear on some bugs and disregarding that
> people might put off fixing bugs waiting for it to become a "pay-bug".
> Who's going to get the money? It seems quite common that people share
> credit on fixing bugs, should we burden Alexandre with the task of deciding
> that?
> Wouldn't this rather be on "projects", than bugs? The bug mentioned feels
> more like a "project".
>
> //Nicklas
>
> -----Original Message-----
> From: wine-devel-bounces at winehq.org on behalf of sacchi antonio
> Sent: Wed 2009-09-16 11:47
> To: wine-devel at winehq.org
> Subject: [bugzilla] donate to sponsoring bug
>
> hello all.
> I'm new here but I'd like to suggest something,
> what do you think about this?
> http://img29.imageshack.us/img29/2940/wined.png
>
> Maybe it will be good for old/hard bugs?
>
> Thanks
>
>
>
>


-- 
http://www.wine-reviews.net/
http://bordeauxgroup.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090916/7d96786d/attachment.htm>

From markus.stockhausen at collogia.de  Wed Sep 16 07:52:20 2009
From: markus.stockhausen at collogia.de (Markus Stockhausen)
Date: Wed, 16 Sep 2009 14:52:20 +0200
Subject: Testcase for IStorage_CreateStorage
Message-ID: <1253105540.4354.20.camel@netzwerg>

Hi,

as I'm still working on a resolution to bug #9575 I have digged into
several directions. My current opinion is that IStorage_CreateStorage
for some unkown reason increments the reference pointer of the
associated IStorage object. In native Windows this is not the case.

My 37th try in writing a Wine testcase resulted in the following code
that hopefully shows the difference between the two environments. I put
it somewhere in the storage32 tests to get it running. No warranty for
side effects.


  static const WCHAR yyy[] = { 'x','.','t','x','t',0 };
  r = StgOpenStorage( yyy, NULL, 
                      STGM_TRANSACTED | STGM_SHARE_EXCLUSIVE |
                      STGM_READWRITE , NULL, 0, &stg);
  ok(r==S_OK, "StgCreateStorage failed\n");
  if(stg)
  {
    static const WCHAR xxx[] =  
      { 'D','a','t','a','S','p','a','c','e','I','n','f','o',0 };
    IStorage_CreateStorage(stg,xxx,STGM_READWRITE |
                           STGM_SHARE_EXCLUSIVE,0,0,&stg2);
    if (stg2) {
      r = IStorage_AddRef(stg);
      ok(r == 2, "WINE ERROR: refcount should be 2\n");
      IStorage_Release(stg2);
      while ( r ) r=IStorage_Release(stg);
    } else {
      ok( 1 == 2, "IStorage::CreateStorage failed\n");
      IStorage_Release(stg);
    }   
  }

If I got everything in the right place this test should fail on Wine
wheres it will be ok in Windows. Before doing further research I hope
someone of the experts can check if the test really reveals the source
of the above mentioned bug.

Thanks in advance.



From keith_kw_muir at blueyonder.co.uk  Wed Sep 16 07:55:21 2009
From: keith_kw_muir at blueyonder.co.uk (Keith Muir)
Date: Wed, 16 Sep 2009 13:55:21 +0100
Subject: Status of Quartz
Message-ID: <4AB0E039.5060508@blueyonder.co.uk>

what's the status of wine quartz.dll at present? reason I'm asking is 
because I'm trying to get a Computer based training(CBT) app Testout 
Navigator to run which uses Windows Media Player 9 to show videos. Using 
WINDEBUG with warn+dll seems to show most of the trouble is due to 
quartz.dll interaction with ntdll.dll

Regards,

Keith



From jacek at codeweavers.com  Wed Sep 16 14:24:52 2009
From: jacek at codeweavers.com (Jacek Caban)
Date: Wed, 16 Sep 2009 21:24:52 +0200
Subject: oleaut32: Fail the typelib test when LoadTypeLib fails.
In-Reply-To: <33F6268AA99B6C448F07F03B2B6497D32EC926@taz.CodeWeavers.local>
References: <33F6268AA99B6C448F07F03B2B6497D32EC926@taz.CodeWeavers.local>
Message-ID: <4AB13B84.3080508@codeweavers.com>

Hi Vincent,

Vincent Povirk wrote:
>
> As far as I know, this failure only occurs when I do something stupid 
> like set use_midl_tlb to 1 and don't provide a working 
> midl_tmarshal.tlb, but I need the test to remind me that I'm an idiot 
> when I do that. Silently skipping tests is unacceptable.
>


While you are at this, it would be better to test the exact hr value, so 
the test should be:
ok(hr == S_OK, ...).


Jacek


From mstefani at redhat.com  Wed Sep 16 17:43:00 2009
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Thu, 17 Sep 2009 00:43:00 +0200
Subject: dstlen < 0 for MultiByteToWideChar / WideChatToMultiByte
Message-ID: <4AB169F4.6050909@redhat.com>

Hello Detlef,

although Smatch could have handled the task too of finding places where 
Wine passes -1 as destlen to MultiByteToWideChar / WideChatToMultiByte 
this can be done with the C compiler too. Please see the attached patch.

This solution doesn't finds more occurrences that you have found and 
patched already. But this is really only the stuff that the compiler can 
figure out at compile time. It has no chance at all to catch stuff like

void foo(int bar)
{
     int dstlen = -1;

     if (bar)
         dstlen = 10;

     MultiByteToWideChar(a, b, c, d, e, dstlen)
}

Those can't be found by a grep either and I think that's why Alexandre 
is reluctant to apply your patches.

bye
	michael
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dstlen.diff
Type: text/x-patch
Size: 1852 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090917/8bb0ec25/attachment.bin>

From wine-devel at kievinfo.com  Wed Sep 16 21:01:52 2009
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Wed, 16 Sep 2009 20:01:52 -0600
Subject: Disabling URL attachments.
Message-ID: <4AB19890.4070409@kievinfo.com>

Can Bugzilla admin please disable URL attachments?

Number of users don't get the concept of what attachment is, and keep
attaching urls to things like pastebin, or some file share servers. Instead
of attaching actual files.

Vitaliy.


From dank at kegel.com  Wed Sep 16 21:32:45 2009
From: dank at kegel.com (Dan Kegel)
Date: Wed, 16 Sep 2009 19:32:45 -0700
Subject: Disabling URL attachments.
Message-ID: <a71bd89a0909161932n587c770vc478f7926c34bf1d@mail.gmail.com>

Done.


From dmitry at codeweavers.com  Wed Sep 16 21:41:17 2009
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 17 Sep 2009 11:41:17 +0900
Subject: dstlen < 0 for MultiByteToWideChar / WideChatToMultiByte
References: <4AB169F4.6050909@redhat.com>
Message-ID: <DA88BA9F1D0A4B12BDBF07B454324917@DMITRY>

"Michael Stefaniuc" <mstefani at redhat.com> wrote:

> +/*
> + * Produce a compile error if we pass a dstlen < 0 to this functions.
> + * BUILD_BUG_ON() shamelessly ripped from the Linux Kernel.
> + */
> +#define BUILD_BUG_ON(condition) ((void)sizeof(char[1 - 2*!!(condition)]))

C_ASSERT does a similar thing.

-- 
Dmitry.


From wine-devel at kievinfo.com  Wed Sep 16 22:05:04 2009
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Wed, 16 Sep 2009 21:05:04 -0600
Subject: Disabling URL attachments.
In-Reply-To: <a71bd89a0909161932n587c770vc478f7926c34bf1d@mail.gmail.com>
References: <a71bd89a0909161932n587c770vc478f7926c34bf1d@mail.gmail.com>
Message-ID: <4AB1A760.1010905@kievinfo.com>

Dan Kegel wrote:
> Done.
> 
Awesome, thanks.

Vitaliy.


From paul.vriens.wine at gmail.com  Thu Sep 17 01:13:48 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 17 Sep 2009 08:13:48 +0200
Subject: winetest: Add the ability to retrieve the dll path for com dlls
	from the registry.
In-Reply-To: <4aae41d4.4c44f10a.5c8e.ffffa23dSMTPIN_ADDED@mx.google.com>
References: <4aae41d4.4c44f10a.5c8e.ffffa23dSMTPIN_ADDED@mx.google.com>
Message-ID: <4AB1D39C.60306@gmail.com>

On 09/14/2009 03:10 PM, Huw Davies wrote:
> ---
>   programs/winetest/main.c |   87 ++++++++++++++++++++++++++++++++++++++-------
>   1 files changed, 73 insertions(+), 14 deletions(-)
>
>
> ------------------------------------------------------------------------
>
>
Hi Huw,

Winetest doesn't do a complete run anymore (tested only on W2K3 and 
Vista) for now. It ends with a 998 error during enumeration of the test 
(oleaut32 being the last visible one).

I'm crossbuilding a winetest as we speak but just thought I'd mention it.

-- 
Cheers,

Paul.


From dmitry at codeweavers.com  Thu Sep 17 02:05:26 2009
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 17 Sep 2009 16:05:26 +0900
Subject: user32: Skip STM_SETIMAGE message if the static control style
	doesnot match
References: <200909161318.20057.shpigor@etersoft.ru>
Message-ID: <4B1174F8A29245BEA90A573E64D2D01B@DMITRY>

"Ilya Shpigor" <shpigor at etersoft.ru> wrote:

> This style checking is needed to the STM_SETIMAGE message processing according 
> to MSDN:
> 
> http://msdn.microsoft.com/en-us/library/bb760782%28VS.85%29.aspx

This change requires a test case.

-- 
Dmitry.


From paul.vriens.wine at gmail.com  Thu Sep 17 02:41:43 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 17 Sep 2009 09:41:43 +0200
Subject: winetest: Add the ability to retrieve the dll path for com dlls
	from the registry.
In-Reply-To: <4AB1D39C.60306@gmail.com>
References: <4aae41d4.4c44f10a.5c8e.ffffa23dSMTPIN_ADDED@mx.google.com>
	<4AB1D39C.60306@gmail.com>
Message-ID: <4AB1E837.40205@gmail.com>

On 09/17/2009 08:13 AM, Paul Vriens wrote:
> On 09/14/2009 03:10 PM, Huw Davies wrote:
>> ---
>> programs/winetest/main.c | 87
>> ++++++++++++++++++++++++++++++++++++++-------
>> 1 files changed, 73 insertions(+), 14 deletions(-)
>>
>>
>> ------------------------------------------------------------------------
>>
>>
> Hi Huw,
>
> Winetest doesn't do a complete run anymore (tested only on W2K3 and
> Vista) for now. It ends with a 998 error during enumeration of the test
> (oleaut32 being the last visible one).
>
> I'm crossbuilding a winetest as we speak but just thought I'd mention it.
>

The attached patch fixes the issue.

We are using LOAD_LIBRARY_AS_DATAFILE as we don't really want to load 
the dll but we need some info from it. The problem is that 
GetModuleFileName can't cope with LOAD_LIBRARY_AS_DATAFILE loaded dlls.

So will using LoadLibrary introduce issues for this dll (and maybe 
future com dlls)?

The get_dll_path logic was introduced for .NET as we ourselves don't 
always know which dll/version is actually loaded. GetModuleFileName 
proved to be the most logic approach.

As these com dlls are hardcoded in the registry I assume we don't even 
need to call GetModuleFileName and just stick with that value from the 
registry?

-- 
Cheers,

Paul.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090917/b0ef15ed/attachment.txt>

From huw at codeweavers.com  Thu Sep 17 04:39:39 2009
From: huw at codeweavers.com (Huw Davies)
Date: Thu, 17 Sep 2009 10:39:39 +0100
Subject: winetest: Add the ability to retrieve the dll path for com dlls
	from the registry.
In-Reply-To: <4AB1E837.40205@gmail.com>
References: <4aae41d4.4c44f10a.5c8e.ffffa23dSMTPIN_ADDED@mx.google.com>
	<4AB1D39C.60306@gmail.com> <4AB1E837.40205@gmail.com>
Message-ID: <4AB203DB.8030403@codeweavers.com>

Paul Vriens wrote:
> The attached patch fixes the issue.
> 
> We are using LOAD_LIBRARY_AS_DATAFILE as we don't really want to load 
> the dll but we need some info from it. The problem is that 
> GetModuleFileName can't cope with LOAD_LIBRARY_AS_DATAFILE loaded dlls.
> 
> So will using LoadLibrary introduce issues for this dll (and maybe 
> future com dlls)?
> 
> The get_dll_path logic was introduced for .NET as we ourselves don't 
> always know which dll/version is actually loaded. GetModuleFileName 
> proved to be the most logic approach.
> 
> As these com dlls are hardcoded in the registry I assume we don't even 
> need to call GetModuleFileName and just stick with that value from the 
> registry?

Hi Paul,

Thanks for tracking this down.  There shouldn't be any issues with using 
LoadLibrary, so we can either use your patch or just rely on the info 
from the registry, I don't think it really matters.  Shall I leave you 
to send in a patch?

Thanks again,
Huw.




From paul.vriens.wine at gmail.com  Thu Sep 17 04:43:48 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 17 Sep 2009 11:43:48 +0200
Subject: winetest: Add the ability to retrieve the dll path for com dlls
	from the registry.
In-Reply-To: <4AB203DB.8030403@codeweavers.com>
References: <4aae41d4.4c44f10a.5c8e.ffffa23dSMTPIN_ADDED@mx.google.com>
	<4AB1D39C.60306@gmail.com> <4AB1E837.40205@gmail.com>
	<4AB203DB.8030403@codeweavers.com>
Message-ID: <4AB204D4.40306@gmail.com>

On 09/17/2009 11:39 AM, Huw Davies wrote:
> Paul Vriens wrote:
>> The attached patch fixes the issue.
>>
>> We are using LOAD_LIBRARY_AS_DATAFILE as we don't really want to load
>> the dll but we need some info from it. The problem is that
>> GetModuleFileName can't cope with LOAD_LIBRARY_AS_DATAFILE loaded dlls.
>>
>> So will using LoadLibrary introduce issues for this dll (and maybe
>> future com dlls)?
>>
>> The get_dll_path logic was introduced for .NET as we ourselves don't
>> always know which dll/version is actually loaded. GetModuleFileName
>> proved to be the most logic approach.
>>
>> As these com dlls are hardcoded in the registry I assume we don't even
>> need to call GetModuleFileName and just stick with that value from the
>> registry?
>
> Hi Paul,
>
> Thanks for tracking this down. There shouldn't be any issues with using
> LoadLibrary, so we can either use your patch or just rely on the info
> from the registry, I don't think it really matters. Shall I leave you to
> send in a patch?
>
> Thanks again,
> Huw.
>
>

I'll sent a patch with the LoadLibrary.

-- 
Cheers,

Paul.


From hverbeet at gmail.com  Thu Sep 17 06:34:02 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Thu, 17 Sep 2009 13:34:02 +0200
Subject: Add dxdiag help message box
In-Reply-To: <397e83ce0909161754o4bafb572scb262fbe77094d48@mail.gmail.com>
References: <397e83ce0909161754o4bafb572scb262fbe77094d48@mail.gmail.com>
Message-ID: <d658b69e0909170434q4e08ff96oe1ccc5098c36e5b1@mail.gmail.com>

2009/9/17 Brian Nguyen <mtxcoll at gmail.com>:
> +/* Thread-safe function for converting to wide char strings at runtime */
> +LPWSTR PrintWide(LPWSTR buf, size_t len, const char *s)
> +{
> +    size_t i;
> +    for (i = 0; i < len && *s != '\0'; i++, s++) {
> +        buf[i] = *s;
> +    }
> +    return buf;
> +}
That doesn't do what you want, you should use MultiByteToWideChar() to
convert to WCHAR. However, I don't think you want to hardcode the
strings in the first place, you should load them from the resources so
they can be translated. Also, functions like that which are only used
in the current file should be static.


From Joerg-Cyril.Hoehle at t-systems.com  Thu Sep 17 10:43:12 2009
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Thu, 17 Sep 2009 17:43:12 +0200
Subject: please test inconsistent WAVEFORMAT on MS-Windows (compiler needed)
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B03378563@S4DE8PSAANK.mitte.t-com.de>

Hi,

One MS-Windows machine passes all the attached tests, proving that MS-Windows ignores nBlockAlign and nAvgBytesPerSec. It would be helpful to get confirmation from more machines.
Please build with the attached patch, execute it in interactive mode
set WINETEST_INTERACTIVE=1
winetest.exe wave
and listen to the sound and especially the pauses.

OTOH, Wine fails at least one test:
- One waveOutGetPosition test in WAVE_MAPPER fails.
- My recently accepted patches (for OSS and CoreAudio) do something
  forbidden, that the test was written to reveal: they fix broken values
  in the WAVEFORMAT description, because both winmm and dsound depend on
  their correctness.  But Wine should not touch user-supplied data.  That
  is a todo_wine until dsound learns how to live with broken input.  I'll
  add todo_wine before submitting these tests as a patch.

Try this out with <= 1.1.29 (test with WINETEST_INTERACTIVE=1 make test)
and you'll hear how Wine's winmm incorrectly computes the duration of the
sound when given inconsistent format descriptions, causing silence where
none should be, because MS-Windows does not care about BlockAlign and
AvgBytesPerSec. With the upcoming 1.1.30, this will be corrected for OSS
and CoreAudio, but not yet with the WAVE_MAPPER (ALSA is still broken).

Regards,
	J?rg H?hle
-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmm-tests.patch
Type: application/octet-stream
Size: 4938 bytes
Desc: winmm-tests.patch
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090917/04f582fb/attachment.obj>

From bunglehead at gmail.com  Thu Sep 17 13:40:13 2009
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Thu, 17 Sep 2009 22:40:13 +0400
Subject: [1/5] mapi32: Scan registry for MAPI providers and load them
In-Reply-To: <4AB27BF0.7010904@codeweavers.com>
References: <4AB27BF0.7010904@codeweavers.com>
Message-ID: <4AB2828D.4090005@gmail.com>

Owen Rudge wrote:
> ---
>  dlls/mapi32/Makefile.in   |    2 +-
>  dlls/mapi32/mapi32_main.c |    5 +-
>  dlls/mapi32/util.c        |  148 
> +++++++++++++++++++++++++++++++++++++++++++++
>  dlls/mapi32/util.h        |   28 +++++++++
>  4 files changed, 181 insertions(+), 2 deletions(-)
>  create mode 100644 dlls/mapi32/util.h
Hi. Few comments.

> +
> +static HMODULE mapi_provider = NULL;
> +static HMODULE mapi_ex_provider = NULL;
> +

This is redundant, static will be initialized to zero anyway.

> +static void load_mapi_provider(HKEY hkeyMail, LPCWSTR valueName, HMODULE *mapi_provider)
> +{
> +    static const WCHAR mapi32_dll[] = {'m','a','p','i','3','2','.','d','l','l',0 };
> +
> +    DWORD dwType, dwLen = 0;
> +    LPWSTR dllPath;
> +
> +    if (!mapi_provider)
> +        return;
> +
I don't think this check is necessary, it's your internal helper.

> +cleanUp: ;
Semicolumn isn't needed here.






From saulius2 at ar.fi.lt  Thu Sep 17 13:46:54 2009
From: saulius2 at ar.fi.lt (Saulius Krasuckas)
Date: Thu, 17 Sep 2009 21:46:54 +0300 (EEST)
Subject: glean and Piglit -- OpenGL driver testing
Message-ID: <alpine.DEB.1.10.0909172124180.5056@localhost.localdomain>

Today I saw two similar projects related to OpenGL:

[1]:

> glean is a suite of tools for evaluating the quality of an OpenGL 
> implementation and diagnosing any problems that are discovered. glean 
> also has the ability to compare two OpenGL implementations and highlight 
> the differences between them.

It seems be having win32 port also.

[2]:

> Piglit is a collection of automated tests for OpenGL implementations.
> 
> The goal of Piglit is to help improve the quality of open source OpenGL 
> drivers by providing developers with a simple means to perform 
> regression tests.
> 
> Current status is that the framework is working (though rough at the 
> edges). It contains the Glean tests, some tests adapted from Mesa as 
> well as some specific regression tests for certain bugs. HTML summaries 
> can be generated (see below), including the ability to compare different 
> test runs.

Could these be of any use for our graphic guys -- Stefan and co.?


Then there is PerceptualDiff utility I found some time ago [3].  Guessed, 
could it also usefull for finding visual regressions of Wine?  Probably 
not, as it seems to be used for testing video codecs (but I may be wrong):

> PerceptualDiff is an image comparison utility that makes use of a 
> computational model of the human visual system to compare two images.
> 
> So why would I use a program to tell me if two images are similar if I 
> can tell the difference myself by eyeballing it?
> 
> Well the utility of this program really shines in the context of QA of 
> rendering algorithms.
> 
> During regression testing of a renderer, hundreds of images are 
> generated from an older version of the renderer and are compared with a 
> newer version of the renderer. This program drastically reduces the 
> number of false positives (failures that are not actually failures) 
> caused by differences in random number generation, OS or machine 
> architecture differences. Also, you do not want a human looking at 
> hundreds of images when you can get the computer to do it for you 
> nightly on a cron job.



[1] http://glean.sourceforge.net/whatis.html
[2] http://people.freedesktop.org/~nh/piglit/
[3] http://pdiff.sourceforge.net/


From hverbeet at gmail.com  Thu Sep 17 15:16:11 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Thu, 17 Sep 2009 22:16:11 +0200
Subject: glean and Piglit -- OpenGL driver testing
In-Reply-To: <alpine.DEB.1.10.0909172124180.5056@localhost.localdomain>
References: <alpine.DEB.1.10.0909172124180.5056@localhost.localdomain>
Message-ID: <d658b69e0909171316j261ca469ld05f46d84f549a76@mail.gmail.com>

2009/9/17 Saulius Krasuckas <saulius2 at ar.fi.lt>:
> Today I saw two similar projects related to OpenGL:
>
> [1]:
>
>> glean is a suite of tools for evaluating the quality of an OpenGL
>> implementation and diagnosing any problems that are discovered. glean
>> also has the ability to compare two OpenGL implementations and highlight
>> the differences between them.
>
> It seems be having win32 port also.
>
> [2]:
>
>> Piglit is a collection of automated tests for OpenGL implementations.
>>
>> The goal of Piglit is to help improve the quality of open source OpenGL
>> drivers by providing developers with a simple means to perform
>> regression tests.
>>
>> Current status is that the framework is working (though rough at the
>> edges). It contains the Glean tests, some tests adapted from Mesa as
>> well as some specific regression tests for certain bugs. HTML summaries
>> can be generated (see below), including the ability to compare different
>> test runs.
>
> Could these be of any use for our graphic guys -- Stefan and co.?
>
Well, they're mostly useful when you're maintaining an OpenGL driver.
Mesa already uses these.

> Then there is PerceptualDiff utility I found some time ago [3]. ?Guessed,
> could it also usefull for finding visual regressions of Wine? ?Probably
> not, as it seems to be used for testing video codecs (but I may be wrong):
>
Possibly, but it would have to be in the context of a larger framework
like e.g. CxTest or Appinstall.


From saulius2 at ar.fi.lt  Thu Sep 17 16:35:08 2009
From: saulius2 at ar.fi.lt (Saulius Krasuckas)
Date: Fri, 18 Sep 2009 00:35:08 +0300 (EEST)
Subject: glean and Piglit -- OpenGL driver testing
In-Reply-To: <d658b69e0909171316j261ca469ld05f46d84f549a76@mail.gmail.com>
References: <alpine.DEB.1.10.0909172124180.5056@localhost.localdomain>
	<d658b69e0909171316j261ca469ld05f46d84f549a76@mail.gmail.com>
Message-ID: <alpine.DEB.1.10.0909172355120.6026@localhost.localdomain>

* On Thu, 17 Sep 2009, Henri Verbeet wrote:
> * 2009/9/17 Saulius Krasuckas <saulius2 at ar.fi.lt>:
> >
> > Could these be of any use for our graphic guys -- Stefan and co.?
> 
> Well, they're mostly useful when you're maintaining an OpenGL driver. 
> Mesa already uses these.

And what about seeing if our tests (vs Win drivers) aren't really broken?

For example one test-check fails with these OpenGL 1.[34].x and 2.[12].x 
drivers for the adapters:

2.1.8870  ATI Radeon HD 4200
2.0.0     Intel 965/963 Graphics Media Accelerator
1.4.1     GeForce4 MX 440/AGP/SSE 
1.4.0     Intel 915GM
1.3.0     Intel Brookdale-G
1.3.4145  MOBILITY RADEON 7500 DDR x86/SSE2

opengl.c:328: Test failed: Sharing of display lists failed for a context which already shared lists before

But it doesn't fail on these:

3.1.0     GeForce 8600 GTS/PCI/SSE2
3.0.0     GeForce 9600M GT/PCI/SSE2
2.1.2     GeForce FX 5200/AGP/SSE2
2.1.2     GeForce 7300 LE/PCI/SSE2/3DNOW!
2.1.1     GeForce 8600M GS/PCI/SSE2
2.1.1     GeForce 8400M GS/PCI/SSE2
2.0 Chrom Chromium 1.9
1.5 Chrom Chromium 1.9
1.1.0     GDI Generic (old w9x ar virtual boxes)

Aren't you guys having hard time deciding whether this statement:

 322     /* Test 3: Share display lists with a context which already shares display lists with another context.
 323      * According to MSDN the second parameter cannot share any display lists but some buggy drivers might allow it */

is OK ?  (No offence)
I thought driver test suite would give a more thorough answer..

> > Then there is PerceptualDiff utility I found some time ago [3]. 
> > ?Guessed, could it also usefull for finding visual regressions of 
> > Wine? ?Probably not, as it seems to be used for testing video codecs 
> > (but I may be wrong):
> 
> Possibly, but it would have to be in the context of a larger framework 
> like e.g. CxTest or Appinstall.

And what about D3D rendering discrepancies?

From austinenglish at gmail.com  Thu Sep 17 17:08:38 2009
From: austinenglish at gmail.com (Austin English)
Date: Thu, 17 Sep 2009 17:08:38 -0500
Subject: Add dxdiag help message box
In-Reply-To: <d658b69e0909170434q4e08ff96oe1ccc5098c36e5b1@mail.gmail.com>
References: <397e83ce0909161754o4bafb572scb262fbe77094d48@mail.gmail.com> 
	<d658b69e0909170434q4e08ff96oe1ccc5098c36e5b1@mail.gmail.com>
Message-ID: <b6bb06270909171508m1e433c73h68c3f038ccfc373d@mail.gmail.com>

On Thu, Sep 17, 2009 at 6:34 AM, Henri Verbeet <hverbeet at gmail.com> wrote:
> 2009/9/17 Brian Nguyen <mtxcoll at gmail.com>:
>> +/* Thread-safe function for converting to wide char strings at runtime */
>> +LPWSTR PrintWide(LPWSTR buf, size_t len, const char *s)
>> +{
>> + ? ?size_t i;
>> + ? ?for (i = 0; i < len && *s != '\0'; i++, s++) {
>> + ? ? ? ?buf[i] = *s;
>> + ? ?}
>> + ? ?return buf;
>> +}
> That doesn't do what you want, you should use MultiByteToWideChar() to
> convert to WCHAR. However, I don't think you want to hardcode the
> strings in the first place, you should load them from the resources so
> they can be translated. Also, functions like that which are only used
> in the current file should be static.

Thanks for taking this on!

-- 
-Austin


From austinenglish at gmail.com  Thu Sep 17 17:17:57 2009
From: austinenglish at gmail.com (Austin English)
Date: Thu, 17 Sep 2009 17:17:57 -0500
Subject: glean and Piglit -- OpenGL driver testing
In-Reply-To: <d658b69e0909171316j261ca469ld05f46d84f549a76@mail.gmail.com>
References: <alpine.DEB.1.10.0909172124180.5056@localhost.localdomain> 
	<d658b69e0909171316j261ca469ld05f46d84f549a76@mail.gmail.com>
Message-ID: <b6bb06270909171517v79767b9aqe55789165b605c55@mail.gmail.com>

On Thu, Sep 17, 2009 at 3:16 PM, Henri Verbeet <hverbeet at gmail.com> wrote:
> 2009/9/17 Saulius Krasuckas <saulius2 at ar.fi.lt>:
>
>> Then there is PerceptualDiff utility I found some time ago [3]. ?Guessed,
>> could it also usefull for finding visual regressions of Wine? ?Probably
>> not, as it seems to be used for testing video codecs (but I may be wrong):
>>
> Possibly, but it would have to be in the context of a larger framework
> like e.g. CxTest or Appinstall.

Would it actually be useful? I can take a look, but not if it's going
to be a lot of effort for little gain...don't the d3d conformance
tests already (mostly) handle this?

-- 
-Austin


From celticht32 at yahoo.com  Thu Sep 17 18:32:03 2009
From: celticht32 at yahoo.com (chris ahrendt)
Date: Thu, 17 Sep 2009 16:32:03 -0700 (PDT)
Subject: apply context draw buffer
Message-ID: <3929.86388.qm@web112607.mail.gq1.yahoo.com>

Something broke between yesterday's git tree and todays...
went to run some applications and everything is slow as molasas...

seems to be getting in a infinite loop in the apply context draw buffer






      


From celticht32 at yahoo.com  Thu Sep 17 19:34:18 2009
From: celticht32 at yahoo.com (chris ahrendt)
Date: Thu, 17 Sep 2009 17:34:18 -0700 (PDT)
Subject: Regression
Message-ID: <763876.24611.qm@web112612.mail.gq1.yahoo.com>

b5b58e423d32666581f69046c74bb19902c35c2b is first bad commit
commit b5b58e423d32666581f69046c74bb19902c35c2b
Author: Henri Verbeet <hverbeet at codeweavers.com>
Date:   Thu Sep 17 12:35:24 2009 +0200

     d3d8: Add a separate function for cube texture initialization.

:040000 040000 8cd1752ed711799ebfb77127de399d527add5415 
963c6467c8b4367b8a7bd1c1e4eece07937c13d6 M	dlls
[cahrendt at stinky wine-git]$


Chris







      


From shacklein at gmail.com  Thu Sep 17 21:06:36 2009
From: shacklein at gmail.com (Ben Klein)
Date: Fri, 18 Sep 2009 12:06:36 +1000
Subject: Regression
In-Reply-To: <763876.24611.qm@web112612.mail.gq1.yahoo.com>
References: <763876.24611.qm@web112612.mail.gq1.yahoo.com>
Message-ID: <d7e40be30909171906h2d8294a1t6e15bb63a48515a4@mail.gmail.com>

2009/9/18 chris ahrendt <celticht32 at yahoo.com>:
> b5b58e423d32666581f69046c74bb19902c35c2b is first bad commit
> commit b5b58e423d32666581f69046c74bb19902c35c2b
> Author: Henri Verbeet <hverbeet at codeweavers.com>
> Date: ? Thu Sep 17 12:35:24 2009 +0200
>
> ? ? d3d8: Add a separate function for cube texture initialization.
>
> :040000 040000 8cd1752ed711799ebfb77127de399d527add5415
> 963c6467c8b4367b8a7bd1c1e4eece07937c13d6 M ? ? ?dlls
> [cahrendt at stinky wine-git]$

wine-devel is not bugzilla. Report a bug and GIVE SOME DETAIL.


From mtxcoll at gmail.com  Fri Sep 18 03:18:23 2009
From: mtxcoll at gmail.com (Brian Nguyen)
Date: Fri, 18 Sep 2009 01:18:23 -0700
Subject: Add dxdiag help message box
Message-ID: <397e83ce0909180118m2a8e15f7j9cb87c6439543a88@mail.gmail.com>

Hm, okay. I just wanted to test the waters here; I'll rework this to use a
function that loads
a string from a resource file. Does the help message itself look okay? I
just used the message
provided by the native dxdiag app, but I could rework it if there are issues
with copyright or
wine conventions.

On Thu, Sep 17, 2009 at 6:34 AM, Henri Verbeet
<hverbeet at ...<http://www.nabble.com/user/SendEmail.jtp?type=post&post=25500104&i=0>>
wrote:
> 2009/9/17 Brian Nguyen <*mtxcoll*@...<http://www.nabble.com/user/SendEmail.jtp?type=post&post=25500104&i=1>>:

>> +/* Thread-safe function for converting to wide char strings at runtime
*/
>> +LPWSTR PrintWide(LPWSTR buf, size_t len, const char *s)
>> +{
>> +    size_t i;
>> +    for (i = 0; i < len && *s != '\0'; i++, s++) {
>> +        buf[i] = *s;
>> +    }
>> +    return buf;
>> +}
> That doesn't do what you want, you should use MultiByteToWideChar() to
> convert to WCHAR. However, I don't think you want to hardcode the
> strings in the first place, you should load them from the resources so
> they can be translated. Also, functions like that which are only used
> in the current file should be static.

Thanks for taking this on!

-- 
-Austin

-- 
Brian Nguyen
mtxcoll at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20090918/e065fe53/attachment-0001.htm>

