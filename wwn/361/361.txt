From chris.kcat at gmail.com  Thu Apr  1 00:46:11 2010
From: chris.kcat at gmail.com (Chris Robinson)
Date: Wed, 31 Mar 2010 22:46:11 -0700
Subject: [PATCH 4/5] mmdevapi: Add dependency on openal
In-Reply-To: <4BB3B809.9030000@gmail.com>
References: <4BB3B809.9030000@gmail.com>
Message-ID: <201003312246.11532.chris.kcat@gmail.com>

On Wednesday 31 March 2010 2:00:57 pm Maarten Lankhorst wrote:
> +        local_contexts = palcIsExtensionPresent(NULL, 
"ALC_EXTX_thread_local_context");

Missed a spot? Don't forget to use the correct function names for the 
completed extension, too.


From m.b.lankhorst at gmail.com  Thu Apr  1 01:45:45 2010
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Thu, 1 Apr 2010 08:45:45 +0200
Subject: [PATCH 4/5] mmdevapi: Add dependency on openal
In-Reply-To: <201003312246.11532.chris.kcat@gmail.com>
References: <4BB3B809.9030000@gmail.com>
	<201003312246.11532.chris.kcat@gmail.com>
Message-ID: <i2lb130c85e1003312345nb2cf8cd1n4c9a8d9faeac1b1b@mail.gmail.com>

Hi Chris,

2010/4/1 Chris Robinson <chris.kcat at gmail.com>:
> On Wednesday 31 March 2010 2:00:57 pm Maarten Lankhorst wrote:
>> + ? ? ? ?local_contexts = palcIsExtensionPresent(NULL,
> "ALC_EXTX_thread_local_context");
>
> Missed a spot? Don't forget to use the correct function names for the
> completed extension, too.
Woeps, no wonder it wasn't complaining. I'll resubmit.

Cheers,
Maarten


From marcus at jet.franken.de  Thu Apr  1 02:08:48 2010
From: marcus at jet.franken.de (Marcus Meissner)
Date: Thu, 1 Apr 2010 09:08:48 +0200
Subject: GSoC - keyboard input
In-Reply-To: <ef188b7440f6fc816b6d703e51aee1dc@www3-mail.volny.cz>
References: <ef188b7440f6fc816b6d703e51aee1dc@www3-mail.volny.cz>
Message-ID: <20100401070848.GA3865@galeere.jet.franken.de>

On Wed, Mar 31, 2010 at 01:28:23PM +0200, wylda at volny.cz wrote:
> Hi guys,
> 
> if it is not too late, i would have a proposal for GSoC. I'm waiting
> quite long for "BuildActionMap, SetActionMap, EnumDevicesBySemantics
> & co", i.e. to make games like need for speed happy/playable (bug 8754).
> 
> Thanks for reading,

This would be welcome, I have had "DirectInput - Implement missing
DirectInput8 features" in the ideas list for two years now ;)

http://wiki.winehq.org/SummerOfCode#head-d015ad97692f9f4d3431c3d739cc5dccf009eed4

Ciao, Marcus


From hans at meelstraat.net  Thu Apr  1 02:43:59 2010
From: hans at meelstraat.net (Hans Leidekker)
Date: Thu, 1 Apr 2010 09:43:59 +0200
Subject: Another proposal for your critique: improving .NET 3.5
In-Reply-To: <p2ze175d4761003312115s3d72217an9261713a64427ee6@mail.gmail.com>
References: <p2ze175d4761003312115s3d72217an9261713a64427ee6@mail.gmail.com>
Message-ID: <201004010943.59945.hans@meelstraat.net>

On Thursday 01 April 2010 06:15:41 John Koelndorfer wrote:

> DESCRIPTION
> In Wine daily (as of 3/31/2010) .NET fails to install. The Wine debugging
> output is riddled with stubs and fixmes. My initial work would be to examine
> which functions are needed by the installer and prioritize work on them.
> Priority would be given to blockers, obviously. Much of the work to be done
> seems to be in advapi and msi; I would work with more experienced developers
> in those areas to push patches through. I would expect this to take perhaps
> six weeks of time, though it is hard to say since it depends largely on what
> functions need to be implemented and how difficult implementation would be.

This is not something within GSOC scope in my opinion, I expect you will
need 6 weeks alone to get up to speed with the concepts of msi and patching.

In general I think it's better to identify a small set of APIs to implement
or improve instead of aiming for a broad goal like "improving .net 3.5",
which is hard to quantify and more likely to fail.

 -Hans


From morten.roenne at tdcadsl.dk  Thu Apr  1 03:17:45 2010
From: morten.roenne at tdcadsl.dk (=?ISO-8859-1?Q?Morten_R=F8nne?=)
Date: Thu, 01 Apr 2010 10:17:45 +0200
Subject: Working on "DOS" VGA.
Message-ID: <4BB456A9.7000202@tdcadsl.dk>

Hi Wine-devel

My name is Morten and I would like for some of my old DOS/WIN95 games to 
work with wine. :)

I know that I most likely could solve this by using DOSbox and/or DOSemu.
But I don't consider either of them user friendly in it's raw form.
And I hope in the future it could be more of a Go to this menu item, 
click a few choices and then play game thing.

So I have been looking into what one of them is needing (XCOM Apocalypse).

The first thing that needs work is the VGA screen driver. The game needs 
one of the unsupported video modes.
After looking further into it, I can see that the current screen driver, 
needs to be more of an emulator than just a copy of the framebuffer/RAM 
window  to/from the DirectDraw surface.

But since I need to do a lot rewrite of the code, to get a emulator into 
things,  I would of course like to test all the stuff that I don't touch 
(in term of videomodes). But there isn't a test catalog in 
dlls/krnl386.exe16. That could of course be due to the fact that it is 
pretty hard to write test for that old platform and get proper test on a 
live version.
Or am I missing something here?

Looking over the list of videomodes, I can see that a lot of them says 
supported.
Is that really true or do they simply not break?
Again is there anyway to test that those modes are truely supported in 
my code change (and in the current code)?

Another problem that I am facing at a later stage is that most of the 
games needs to be installed in win95 mode.
But I think that most people will run with something like XP, Vista or 
Win7 as default mode.
That will break most of the old installers as DOS version becomes 5.0 or 
something "silly" like that.
So I am thinking about having to create a wrapper program where you can 
install your old programs through so the mode gets set correctly during 
install. And perhaps also creates some proper shortcuts in the menu.
And perhaps even into the new game database that new windows version have.
And thoughts/ideas on this?

Another way to handle this would be to do something like a MD5 on the 
install.exe (hoping that they differ) and then look up in the AppDB, to 
see which mode to use as installer mode (and run mode). Yes, that would 
most likely require changes to AppDB. But I can see a use for this even 
for the above wrapper program (Autodetect using AppDB).

Once I get a new VGA "driver" running, I will most likely start looking 
into INT10h and others that try to interface to the VGA "driver".

Best Regards
Morten R?nne








From wylda at volny.cz  Thu Apr  1 02:45:53 2010
From: wylda at volny.cz (wylda at volny.cz)
Date: Thu, 01 Apr 2010 09:45:53 +0200 (CEST)
Subject: =?iso-8859-2?Q?Re:_GSoC_-_keyboard_input?=
In-Reply-To: <20100401070848.GA3865@galeere.jet.franken.de>
References: <ef188b7440f6fc816b6d703e51aee1dc@www3-mail.volny.cz>
	<20100401070848.GA3865@galeere.jet.franken.de>
Message-ID: <add1cfb9fa2687a5ad3829d88ff9ab0f@www3-mail.volny.cz>



----- P?VODN? ZPR?VA -----
Od: "Marcus Meissner" <marcus at jet.franken.de>
Komu: wylda at volny.cz
P?edm?t: Re: GSoC - keyboard input
Datum: 1.4.2010 - 9:08:48

> On Wed, Mar 31, 2010 at 01:28:23PM +0200, wylda at volny.cz
> wrote:
> > Hi guys,
> > 
> > if it is not too late, i would have a proposal for
> > GSoC. I'm waiting
> > > quite long for "BuildActionMap, SetActionMap, EnumDevicesBySemantics
> > > > > > & co", i.e. to make games like need for speed happy/playable
> > (bug 8754).
> > > 
> > Thanks for reading,
> 
> This would be welcome, I have had "DirectInput - Implement
> missing
> DirectInput8 features" in the ideas list for two years
> now ;)
> 
> http://wiki.winehq.org/SummerOfCode#head-d015ad97692f9f4d3431c3d739cc5dccf009eed4
> > 
> Ciao, Marcus

Hi Vitaliy & Marcus,
this is unfortunately misunderstanding. I'm bit old for being a student
although i remember for university studies with love...

So i could not even qualify for GSoC and also my coding skills are pretty
bad (probably none, in front of yours). The initial email was meant
as proposal, if there would be volunteer who do not know what to do
or his ideas were too high for GSoC, so some of the mentor could him
offer this "DirectInput job".

Sorry for noise - i was not aware, that there is a page http://wiki.winehq.org/SummerOfCode
which has all the needed "jobs".

W.



From thunderbird2k at gmail.com  Thu Apr  1 04:24:03 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Thu, 1 Apr 2010 11:24:03 +0200
Subject: Working on "DOS" VGA.
In-Reply-To: <4BB456A9.7000202@tdcadsl.dk>
References: <4BB456A9.7000202@tdcadsl.dk>
Message-ID: <p2wc8485d471004010224p68b253ebqcedb54d6834f693c@mail.gmail.com>

On Thu, Apr 1, 2010 at 10:17 AM, Morten R?nne <morten.roenne at tdcadsl.dk> wrote:
> Hi Wine-devel
>
> My name is Morten and I would like for some of my old DOS/WIN95 games to
> work with wine. :)
>
> I know that I most likely could solve this by using DOSbox and/or DOSemu.
> But I don't consider either of them user friendly in it's raw form.
> And I hope in the future it could be more of a Go to this menu item, click a
> few choices and then play game thing.
>
> So I have been looking into what one of them is needing (XCOM Apocalypse).
>
> The first thing that needs work is the VGA screen driver. The game needs one
> of the unsupported video modes.
> After looking further into it, I can see that the current screen driver,
> needs to be more of an emulator than just a copy of the framebuffer/RAM
> window ?to/from the DirectDraw surface.
>
> But since I need to do a lot rewrite of the code, to get a emulator into
> things, ?I would of course like to test all the stuff that I don't touch (in
> term of videomodes). But there isn't a test catalog in dlls/krnl386.exe16.
> That could of course be due to the fact that it is pretty hard to write test
> for that old platform and get proper test on a live version.
> Or am I missing something here?
>
> Looking over the list of videomodes, I can see that a lot of them says
> supported.
> Is that really true or do they simply not break?
> Again is there anyway to test that those modes are truely supported in my
> code change (and in the current code)?
>
> Another problem that I am facing at a later stage is that most of the games
> needs to be installed in win95 mode.
> But I think that most people will run with something like XP, Vista or Win7
> as default mode.
> That will break most of the old installers as DOS version becomes 5.0 or
> something "silly" like that.
> So I am thinking about having to create a wrapper program where you can
> install your old programs through so the mode gets set correctly during
> install. And perhaps also creates some proper shortcuts in the menu.
> And perhaps even into the new game database that new windows version have.
> And thoughts/ideas on this?
>
> Another way to handle this would be to do something like a MD5 on the
> install.exe (hoping that they differ) and then look up in the AppDB, to see
> which mode to use as installer mode (and run mode). Yes, that would most
> likely require changes to AppDB. But I can see a use for this even for the
> above wrapper program (Autodetect using AppDB).
>
> Once I get a new VGA "driver" running, I will most likely start looking into
> INT10h and others that try to interface to the VGA "driver".
>
> Best Regards
> Morten R?nne
>

Hi Morten,

First of all welcome to Wine. Myself I'm a bit worried about whether
we should improve our DOS support even further. The problem is that
more and more people are moving over to 64-bit Linux. While you can
run 32-bit programs on a 64-bit system, there is no protected mode
support (vm86; there is emulation in some cases using a kernel
module). I don't know all the details about what works and not but I
fear the 64-bit move makes DOS support in Wine not that useful these
days but I might be wrong.

Roderick


From hverbeet at gmail.com  Thu Apr  1 06:45:29 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Thu, 1 Apr 2010 13:45:29 +0200
Subject: [PATCH 4/4] Add a blit method to arbfp_blit.
In-Reply-To: <1270119032-7311-4-git-send-email-thunderbird2k@gmail.com>
References: <1270119032-7311-1-git-send-email-thunderbird2k@gmail.com>
	<1270119032-7311-2-git-send-email-thunderbird2k@gmail.com>
	<1270119032-7311-3-git-send-email-thunderbird2k@gmail.com>
	<1270119032-7311-4-git-send-email-thunderbird2k@gmail.com>
Message-ID: <v2wd658b69e1004010445o1d732b69u35105982ca57c7eb@mail.gmail.com>

On 1 April 2010 12:50, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
> - ? ?if (is_identity_fixup(src_format_desc->color_fixup))
> - ? ?{
> - ? ? ? ?TRACE("[OK]\n");
> - ? ? ? ?return TRUE;
> - ? ?}
> -
When did we stop supporting those?

> + ? ?arbfp_blit.set_shader((IWineD3DDevice *)device, src_surface->resource.format_desc,
> + ? ? ? ? ? ? ? ? ? ? ? ? ?src_surface->texture_target, src_surface->pow2Width, src_surface->pow2Height);
You might as well call arbfp_blit_set() directly.


From hverbeet at gmail.com  Thu Apr  1 06:46:24 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Thu, 1 Apr 2010 13:46:24 +0200
Subject: [PATCH 3/4] Rename blit_shader color_fixup_supported to 
	blit_supported.
In-Reply-To: <1270119032-7311-3-git-send-email-thunderbird2k@gmail.com>
References: <1270119032-7311-1-git-send-email-thunderbird2k@gmail.com>
	<1270119032-7311-2-git-send-email-thunderbird2k@gmail.com>
	<1270119032-7311-3-git-send-email-thunderbird2k@gmail.com>
Message-ID: <p2gd658b69e1004010446ka3739684y3cd4adb328d03543@mail.gmail.com>

On 1 April 2010 12:50, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
> ---
> ?dlls/wined3d/arb_program_shader.c | ? 20 +++++++++++-----
> ?dlls/wined3d/directx.c ? ? ? ? ? ?| ? ?2 +-
> ?dlls/wined3d/surface.c ? ? ? ? ? ?| ? 46 +++++++++++++++++++++++++-----------
> ?dlls/wined3d/wined3d_private.h ? ?| ? ?9 ++++++-
> ?4 files changed, 55 insertions(+), 22 deletions(-)
>
This does quite a bit more than just renaming things. More
importantly, these implementations will now claim that blits with
destination fixups are supported, while they aren't.

You should pass an appropriate pool (i.e., WINED3DPOOL_DEFAULT) in
CheckSurfaceCapability(), and I don't think passing NULL for the
destination format makes a lot of sense for blits.


From hverbeet at gmail.com  Thu Apr  1 07:19:31 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Thu, 1 Apr 2010 14:19:31 +0200
Subject: WineD3D BltOverride overhaul
In-Reply-To: <q2wc8485d471003310607yeac755ard141ca65fb61137e@mail.gmail.com>
References: <c8485d471003231041k76f69588s4681113b87af99c7@mail.gmail.com>
	<c8485d471003240355waf68eddv509caeffcb862846@mail.gmail.com>
	<d658b69e1003240400i8c21e72t44be41f19a807c4d@mail.gmail.com>
	<201003241235.55843.stefan@codeweavers.com>
	<c8485d471003240453m3ab86987lcea2cf907a4d828a@mail.gmail.com>
	<d658b69e1003240519n41a93b0bwbece3ca739ee952@mail.gmail.com>
	<c8485d471003241203l588f8543iedefc0507a2c2d74@mail.gmail.com>
	<d658b69e1003241309p4615f5b3i48beb9cc57a3dfce@mail.gmail.com>
	<q2wc8485d471003310607yeac755ard141ca65fb61137e@mail.gmail.com>
Message-ID: <p2wd658b69e1004010519l610fb4c2ve8a1e9a4abef2d3a@mail.gmail.com>

On 31 March 2010 15:07, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
> I have worked on some more parts of the blit_shader code. Before I
> clean it up and submit it, I'm posting it here to see if the direction
> is ok.
I already commented on some issues with 0007 and 0008 since you
already submitted those. As for the general direction, I think you're
still trying to take fairly large steps. E.g., it's much easier to
first introduce things like arbfp_blit_supported() and
arbfp_blit_surface() as a separate functions, work them out properly
for each implementation, and only then add them to the blitter
interface. (I think I mentioned that before.) That's much nicer to
review too, since I wouldn't be reviewing 3 or 4 different things at
the same time.

> 0008 - Adds a blit method to arbfp_blit and limits the arbfp shader to
> complex blits (yuv/p8); for now this disables hw accelerated 8-bit
> color keying but that can easily be readded once the transition is
> over by modifying the p8 shader. I think this patch is ready. (I'm not
> that happy with the name arbfp_blit_surface but I had to use something
> else because arbfp_blit won't work and arbfp_blit_blit is a bit silly
> I think)
>
I didn't look too close at this one due to the reasons mentioned
above, but my general feeling is that it may need some more work.
(Beyond what I already mentioned in the reply to that patch.)

> 0009 - This moves the remaining 'offscreen -> render target' code to
> ffp_blit. I have thought long about whether to move the color key flag
> voodoo over as well. You can reason that it is up to the blit_shader
> how and if it implements color keying. If you move the code over, you
> would need some of the DDBLTFX information in the blit_shader (either
> through a parameter or some surface variable). I'm not sure if we want
> to go that way. I think it is better to leave the voodoo in one place.
You could also try something like introducing a function to the
blitter interface to set color key information. I don't think this is
the most important thing to worry about at this point though, so it's
ok to leave it where it is for the moment. Note that that does imply
that you can't have BLIT_OP_COLOR_KEYED_BLIT either yet.

> 0010 - Adds an initial fbo_blit implementation which supports
> blitting. I think this patch is ready but I'm only not sure where we
> want to have the fbo_blit code. Right now stretch_rect_fbo is in
> device.c (and the same for fbo color fill but Henri said that we
> shouldn't use it). I would say that the code should be in surface.c
> unless it is fine to use stretch_rect_fbo (some types have to be
> unified to be able to get rid of casts) as a helper function.
>
I think surface.c is ok. The reason it's in device.c is mostly historic.


From thunderbird2k at gmail.com  Thu Apr  1 07:27:44 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Thu, 1 Apr 2010 14:27:44 +0200
Subject: [PATCH 4/4] Add a blit method to arbfp_blit.
In-Reply-To: <v2wd658b69e1004010445o1d732b69u35105982ca57c7eb@mail.gmail.com>
References: <1270119032-7311-1-git-send-email-thunderbird2k@gmail.com>
	<1270119032-7311-2-git-send-email-thunderbird2k@gmail.com>
	<1270119032-7311-3-git-send-email-thunderbird2k@gmail.com>
	<1270119032-7311-4-git-send-email-thunderbird2k@gmail.com>
	<v2wd658b69e1004010445o1d732b69u35105982ca57c7eb@mail.gmail.com>
Message-ID: <s2uc8485d471004010527qe990ebaarcd4642da3a854dd8@mail.gmail.com>

On Thu, Apr 1, 2010 at 1:45 PM, Henri Verbeet <hverbeet at gmail.com> wrote:
> On 1 April 2010 12:50, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
>> - ? ?if (is_identity_fixup(src_format_desc->color_fixup))
>> - ? ?{
>> - ? ? ? ?TRACE("[OK]\n");
>> - ? ? ? ?return TRUE;
>> - ? ?}
>> -
> When did we stop supporting those?

My feeling was that we only want to use arbfp_blit for complex fixups
and identity fixups are better suited for fbo_blit/ffp_blit.

Roderick


From hverbeet at gmail.com  Thu Apr  1 07:36:48 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Thu, 1 Apr 2010 14:36:48 +0200
Subject: [PATCH 4/4] Add a blit method to arbfp_blit.
In-Reply-To: <s2uc8485d471004010527qe990ebaarcd4642da3a854dd8@mail.gmail.com>
References: <1270119032-7311-1-git-send-email-thunderbird2k@gmail.com>
	<1270119032-7311-2-git-send-email-thunderbird2k@gmail.com>
	<1270119032-7311-3-git-send-email-thunderbird2k@gmail.com>
	<1270119032-7311-4-git-send-email-thunderbird2k@gmail.com>
	<v2wd658b69e1004010445o1d732b69u35105982ca57c7eb@mail.gmail.com>
	<s2uc8485d471004010527qe990ebaarcd4642da3a854dd8@mail.gmail.com>
Message-ID: <i2vd658b69e1004010536u6068953dwe997c11f7ee4bd39@mail.gmail.com>

On 1 April 2010 14:27, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
> My feeling was that we only want to use arbfp_blit for complex fixups
> and identity fixups are better suited for fbo_blit/ffp_blit.
>
fbo_blit doesn't exist yet here, and may be unavailable depending on
available extensions or ORM used. You pretty much never want to use
ffp_blit if you can help it, due to the huge amount of state
invalidation that does.

Of course arbfp_blit is somewhat broken in the sense that it doesn't
actually create a shader for non-complex fixups and silently lets
ffp_blit handle the blit, but that's something that should be fixed,
not disabled.


From stefandoesinger at gmx.at  Thu Apr  1 09:47:06 2010
From: stefandoesinger at gmx.at (=?iso-8859-1?Q?Stefan_D=F6singer?=)
Date: Thu, 1 Apr 2010 16:47:06 +0200
Subject: Working on "DOS" VGA.
In-Reply-To: <p2wc8485d471004010224p68b253ebqcedb54d6834f693c@mail.gmail.com>
References: <4BB456A9.7000202@tdcadsl.dk>
	<p2wc8485d471004010224p68b253ebqcedb54d6834f693c@mail.gmail.com>
Message-ID: <901B5DC6-95A3-4C29-B0C7-0925B784D495@gmx.at>


Am 01.04.2010 um 11:24 schrieb Roderick Colenbrander:
> First of all welcome to Wine. Myself I'm a bit worried about whether
> we should improve our DOS support even further. The problem is that
> more and more people are moving over to 64-bit Linux. While you can
> run 32-bit programs on a 64-bit system, there is no protected mode
> support (vm86; there is emulation in some cases using a kernel
> module).
There's protected mode 32 bit, protected mode 16 bit, but no vm86 16 bit. So no real mode apps in Wine. We'd need to integrate a CPU emulator or JIT compiler into Wine to get this working.

There are a surprising big number of Win95 area apps that have an installer that starts off in vm86 mode...



From mstefani at redhat.com  Thu Apr  1 10:08:59 2010
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Thu, 01 Apr 2010 17:08:59 +0200
Subject: Working on "DOS" VGA.
In-Reply-To: <901B5DC6-95A3-4C29-B0C7-0925B784D495@gmx.at>
References: <4BB456A9.7000202@tdcadsl.dk>	<p2wc8485d471004010224p68b253ebqcedb54d6834f693c@mail.gmail.com>
	<901B5DC6-95A3-4C29-B0C7-0925B784D495@gmx.at>
Message-ID: <4BB4B70B.2070906@redhat.com>

Stefan D?singer wrote:
> Am 01.04.2010 um 11:24 schrieb Roderick Colenbrander:
>> First of all welcome to Wine. Myself I'm a bit worried about whether
>> we should improve our DOS support even further. The problem is that
>> more and more people are moving over to 64-bit Linux. While you can
>> run 32-bit programs on a 64-bit system, there is no protected mode
>> support (vm86; there is emulation in some cases using a kernel
>> module).
> There's protected mode 32 bit, protected mode 16 bit, but no vm86 16 bit. So no real mode apps in Wine. We'd need to integrate a CPU emulator or JIT compiler into Wine to get this working.
Security people would love that! That way Wine won't ever need to be
able to mmap address 0x00000000.

> There are a surprising big number of Win95 area apps that have an installer that starts off in vm86 mode...

bye
	michael


From mikolg at yandex.ru  Thu Apr  1 11:02:30 2010
From: mikolg at yandex.ru (Mikhail Maroukhine)
Date: Thu, 01 Apr 2010 23:02:30 +0700
Subject: winedump: code cleanup
In-Reply-To: <87oci56cui.fsf@wine.dyndns.org>
References: <op.vab0pvxk1j4v3x@home> <87oci56cui.fsf@wine.dyndns.org>
Message-ID: <op.vahqudh71j4v3x@home>

On Tue, 30 Mar 2010 22:36:21 +0700, Alexandre Julliard  
<julliard at winehq.org> wrote:

> "Mikhail Maroukhine" <mikolg at yandex.ru> writes:
>
>>  - winedump/search.c::get_type - cleanup variable usage
>
> That's not much better. It would be cleaner to stop abusing the passed
> argument as a local variable.
>

Hello,

Could you clear a little what do you mean under "stop abusing"?
I've removed incorrect usage of constness in declaration for the variable  
that is changed for sure.
I've send "try 2" patch with additional correction and extended log  
message.

Please check it.

Thanks,
Mikhail


From madewokherd+8cd9 at gmail.com  Thu Apr  1 11:14:17 2010
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Thu, 1 Apr 2010 10:14:17 -0600
Subject: Mono integration
Message-ID: <s2gced95fe1004010914kd39d73f2ia4c6c1103b7a117c@mail.gmail.com>

I wrote a wiki page yesterday about the current state of Mono
integration in Wine and what I think needs to be done about it. That
is at: http://wiki.winehq.org/Mono

Basically, if you install Mono in Wine, Wine will use it to run .NET
programs. However, the combination doesn't work for any of the
programs I've tried. There are a number of things wrong (listed on the
wiki page), but none of them appear to affect a lot of programs.

My theory is that it just happens to not work very well because of
random bugs. I think it's important that we improve this, so that we
have an alternative to MS .NET. I am amazed that the licensing allows
us to use MS .NET now (if indeed it really does), and I don't know how
long that will continue.

So here is what I'd like to ask from the community:

* Try some .NET programs with Mono (use the mono26 verb in
winetricks), and file Wine bugs when they don't work. Even if the bug
is in Mono, we should investigate it and give them a nice report,
since we are using Mono in a strange way. Use the dotnet keyword.

* If an installer for something other than .NET tries to install .NET,
file a bug for that with the dotnet keyword.

* Someone other than me, please try to make a Windows build of Mono
and run the Mono test suite under Wine. I want to make sure that the
instructions make sense and that someone other than me can do this.


From austinenglish at gmail.com  Thu Apr  1 11:20:19 2010
From: austinenglish at gmail.com (Austin English)
Date: Thu, 1 Apr 2010 11:20:19 -0500
Subject: Mono integration
In-Reply-To: <s2gced95fe1004010914kd39d73f2ia4c6c1103b7a117c@mail.gmail.com>
References: <s2gced95fe1004010914kd39d73f2ia4c6c1103b7a117c@mail.gmail.com>
Message-ID: <v2zb6bb06271004010920y4c32e222v97c7ea437b93bd70@mail.gmail.com>

On Thu, Apr 1, 2010 at 11:14 AM, Vincent Povirk
<madewokherd+8cd9 at gmail.com> wrote:
> I wrote a wiki page yesterday about the current state of Mono
> integration in Wine and what I think needs to be done about it. That
> is at: http://wiki.winehq.org/Mono
>
> Basically, if you install Mono in Wine, Wine will use it to run .NET
> programs. However, the combination doesn't work for any of the
> programs I've tried. There are a number of things wrong (listed on the
> wiki page), but none of them appear to affect a lot of programs.
>
> My theory is that it just happens to not work very well because of
> random bugs. I think it's important that we improve this, so that we
> have an alternative to MS .NET. I am amazed that the licensing allows
> us to use MS .NET now (if indeed it really does), and I don't know how
> long that will continue.
>
> So here is what I'd like to ask from the community:
>
> * Try some .NET programs with Mono (use the mono26 verb in
> winetricks), and file Wine bugs when they don't work. Even if the bug
> is in Mono, we should investigate it and give them a nice report,
> since we are using Mono in a strange way. Use the dotnet keyword.
>
> * If an installer for something other than .NET tries to install .NET,
> file a bug for that with the dotnet keyword.

For any .Net version (1.1, 2.0, 3.5)? Does that also count for service
packs? I take it your recent work on mscoree should fake a dotnet
installation?

> * Someone other than me, please try to make a Windows build of Mono
> and run the Mono test suite under Wine. I want to make sure that the
> instructions make sense and that someone other than me can do this.

I'll try to do that this in the next few days/weekend.

-- 
-Austin


From xixsimplicityxix at gmail.com  Thu Apr  1 11:24:59 2010
From: xixsimplicityxix at gmail.com (John Klehm)
Date: Thu, 1 Apr 2010 11:24:59 -0500
Subject: [PATCH 2/2] Revert prev. Hack, as Bug 10000 is still present.
In-Reply-To: <1270138602-2126-1-git-send-email-wine.dev@web.de>
References: <1270138602-2126-1-git-send-email-wine.dev@web.de>
Message-ID: <u2x78a7dad01004010924h2345e6b0nc2e257bf5021d79f@mail.gmail.com>

On Thu, Apr 1, 2010 at 11:16 AM, Detlef Riekenberg <wine.dev at web.de> wrote:
> With greeting from the current day.
>

hehe nice


From madewokherd+8cd9 at gmail.com  Thu Apr  1 11:27:15 2010
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Thu, 1 Apr 2010 10:27:15 -0600
Subject: Mono integration
In-Reply-To: <v2zb6bb06271004010920y4c32e222v97c7ea437b93bd70@mail.gmail.com>
References: <s2gced95fe1004010914kd39d73f2ia4c6c1103b7a117c@mail.gmail.com>
	<v2zb6bb06271004010920y4c32e222v97c7ea437b93bd70@mail.gmail.com>
Message-ID: <m2rced95fe1004010927wfa55c801w6934b571ffe43d07@mail.gmail.com>

>> * If an installer for something other than .NET tries to install .NET,
>> file a bug for that with the dotnet keyword.
>
> For any .Net version (1.1, 2.0, 3.5)? Does that also count for service
> packs? I take it your recent work on mscoree should fake a dotnet
> installation?

Any .NET version. Mono 2.6 supports all of those (see
http://www.mono-project.com/Compatibility).

My work on mscoree so far has done basically nothing. There is a
Dotnet section in wine.inf that installs some registry keys that
satisfy some installers.

>> * Someone other than me, please try to make a Windows build of Mono
>> and run the Mono test suite under Wine. I want to make sure that the
>> instructions make sense and that someone other than me can do this.
>
> I'll try to do that this in the next few days/weekend.

Thanks.


From jkoelndorfer at gmail.com  Thu Apr  1 11:31:02 2010
From: jkoelndorfer at gmail.com (John Koelndorfer)
Date: Thu, 1 Apr 2010 10:31:02 -0600
Subject: Another proposal for your critique: improving .NET 3.5
In-Reply-To: <201004010943.59945.hans@meelstraat.net>
References: <p2ze175d4761003312115s3d72217an9261713a64427ee6@mail.gmail.com>
	<201004010943.59945.hans@meelstraat.net>
Message-ID: <g2ne175d4761004010931z7719839sf660bae9077a0c9f@mail.gmail.com>

> This is not something within GSOC scope in my opinion, I expect you will
> need 6 weeks alone to get up to speed with the concepts of msi and patching.
>
> In general I think it's better to identify a small set of APIs to implement
> or improve instead of aiming for a broad goal like "improving .net 3.5",
> which is hard to quantify and more likely to fail.
>
> ?-Hans

Thanks for the input, Hans. Looking back at previous GSOC proposals,
many of them were "Improve x" (see
http://wiki.winehq.org/SummerOfCode/PreviousProjects).

As far as the issue of quantification, I think it's pretty easy to say
"if .NET 3.5 installs, that's a success. If applications that require
.NET 3.5 run (or aren't blocked by anything .NET), that's a success."
Hell, even if I don't get .NET to install -- so long as I've made
progress on it and it makes it that much easier for another developer,
I'd call that a success.

The issue of difficulty is something I've thought about. As I've
mentioned, I don't have any Wine-specific experience so I am not well
able to gauge how reasonable a given project is.

I'm hearing very mixed opinions on some of them so I think at this
point my best bet is to submit several proposals for projects I'm
interested in and then do my best to see whichever is accepted through
(if it is even accepted). I remember reading somewhere that as long as
I work hard, not completely meeting my goals would not be an issue.
Given that, I'd rather set the bar high as I think that would be
better motivation.

Again, thanks to everyone for their input. I will submit the proposals
I have written and will probably write/submit a few more.


From ngompa13 at gmail.com  Thu Apr  1 11:54:13 2010
From: ngompa13 at gmail.com (=?ISO-2022-JP?B?U2lyIEdhbGxhbnRtb24gKBskQiVLITwlayEmJTQlcyVRGyhCKQ==?=)
Date: Thu, 1 Apr 2010 11:54:13 -0500
Subject: Mono integration
In-Reply-To: <m2rced95fe1004010927wfa55c801w6934b571ffe43d07@mail.gmail.com>
References: <s2gced95fe1004010914kd39d73f2ia4c6c1103b7a117c@mail.gmail.com>
	<v2zb6bb06271004010920y4c32e222v97c7ea437b93bd70@mail.gmail.com>
	<m2rced95fe1004010927wfa55c801w6934b571ffe43d07@mail.gmail.com>
Message-ID: <j2j8278b1b1004010954k59b8a02cz849b70d6a17f6143@mail.gmail.com>

On Thu, Apr 1, 2010 at 11:27 AM, Vincent Povirk
<madewokherd+8cd9 at gmail.com<madewokherd%2B8cd9 at gmail.com>
> wrote:

> >> * If an installer for something other than .NET tries to install .NET,
> >> file a bug for that with the dotnet keyword.
> >
> > For any .Net version (1.1, 2.0, 3.5)? Does that also count for service
> > packs? I take it your recent work on mscoree should fake a dotnet
> > installation?
>
> Any .NET version. Mono 2.6 supports all of those (see
> http://www.mono-project.com/Compatibility).
>
> My work on mscoree so far has done basically nothing. There is a
> Dotnet section in wine.inf that installs some registry keys that
> satisfy some installers.
>
> >> * Someone other than me, please try to make a Windows build of Mono
> >> and run the Mono test suite under Wine. I want to make sure that the
> >> instructions make sense and that someone other than me can do this.
> >
> > I'll try to do that this in the next few days/weekend.
>
> Thanks.
>
>
>
The compatibility information basically indicates that Mono can substitute
for .NET below version 3.0. 3.0 and higher still needs Microsoft's
implementation.

How would you handle hybridizing Mono with Microsoft's framework?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100401/9d27b54b/attachment.htm>

From thunderbird2k at gmail.com  Thu Apr  1 11:55:37 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Thu, 1 Apr 2010 18:55:37 +0200
Subject: Another proposal for your critique: improving .NET 3.5
In-Reply-To: <g2ne175d4761004010931z7719839sf660bae9077a0c9f@mail.gmail.com>
References: <p2ze175d4761003312115s3d72217an9261713a64427ee6@mail.gmail.com>
	<201004010943.59945.hans@meelstraat.net>
	<g2ne175d4761004010931z7719839sf660bae9077a0c9f@mail.gmail.com>
Message-ID: <q2xc8485d471004010955jeb2d7bb4kf7568862e6ef61b5@mail.gmail.com>

On Thu, Apr 1, 2010 at 6:31 PM, John Koelndorfer <jkoelndorfer at gmail.com> wrote:
>> This is not something within GSOC scope in my opinion, I expect you will
>> need 6 weeks alone to get up to speed with the concepts of msi and patching.
>>
>> In general I think it's better to identify a small set of APIs to implement
>> or improve instead of aiming for a broad goal like "improving .net 3.5",
>> which is hard to quantify and more likely to fail.
>>
>> ?-Hans
>
> Thanks for the input, Hans. Looking back at previous GSOC proposals,
> many of them were "Improve x" (see
> http://wiki.winehq.org/SummerOfCode/PreviousProjects).
>
> As far as the issue of quantification, I think it's pretty easy to say
> "if .NET 3.5 installs, that's a success. If applications that require
> .NET 3.5 run (or aren't blocked by anything .NET), that's a success."
> Hell, even if I don't get .NET to install -- so long as I've made
> progress on it and it makes it that much easier for another developer,
> I'd call that a success.
>
> The issue of difficulty is something I've thought about. As I've
> mentioned, I don't have any Wine-specific experience so I am not well
> able to gauge how reasonable a given project is.
>
> I'm hearing very mixed opinions on some of them so I think at this
> point my best bet is to submit several proposals for projects I'm
> interested in and then do my best to see whichever is accepted through
> (if it is even accepted). I remember reading somewhere that as long as
> I work hard, not completely meeting my goals would not be an issue.
> Given that, I'd rather set the bar high as I think that would be
> better motivation.
>
> Again, thanks to everyone for their input. I will submit the proposals
> I have written and will probably write/submit a few more.
>
>

If you want to do something in the .NET area perhaps some work can be
done on Mono integration (see the mono topic Vincent started) and the
wiki (http://wiki.winehq.org/Mono).

Roderick


From madewokherd+8cd9 at gmail.com  Thu Apr  1 11:55:45 2010
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Thu, 1 Apr 2010 10:55:45 -0600
Subject: Mono integration
In-Reply-To: <j2j8278b1b1004010954k59b8a02cz849b70d6a17f6143@mail.gmail.com>
References: <s2gced95fe1004010914kd39d73f2ia4c6c1103b7a117c@mail.gmail.com>
	<v2zb6bb06271004010920y4c32e222v97c7ea437b93bd70@mail.gmail.com>
	<m2rced95fe1004010927wfa55c801w6934b571ffe43d07@mail.gmail.com>
	<j2j8278b1b1004010954k59b8a02cz849b70d6a17f6143@mail.gmail.com>
Message-ID: <o2iced95fe1004010955t64d515aaz6a2bf8eb6cc6ff96@mail.gmail.com>

> The compatibility information basically indicates that Mono can substitute
> for .NET below version 3.0. 3.0 and higher still needs Microsoft's
> implementation.
> How would you handle hybridizing Mono with Microsoft's framework?

You would need different wine prefixes if you want to use both at once.

What is the problem with 3.0, and can't it be fixed?


From xerox_xerox2000 at yahoo.co.uk  Thu Apr  1 12:03:33 2010
From: xerox_xerox2000 at yahoo.co.uk (Louis Lenders)
Date: Thu, 1 Apr 2010 17:03:33 +0000 (UTC)
Subject: Mono integration
References: <s2gced95fe1004010914kd39d73f2ia4c6c1103b7a117c@mail.gmail.com>
	<v2zb6bb06271004010920y4c32e222v97c7ea437b93bd70@mail.gmail.com>
	<m2rced95fe1004010927wfa55c801w6934b571ffe43d07@mail.gmail.com>
	<j2j8278b1b1004010954k59b8a02cz849b70d6a17f6143@mail.gmail.com>
	<o2iced95fe1004010955t64d515aaz6a2bf8eb6cc6ff96@mail.gmail.com>
Message-ID: <loom.20100401T190215-118@post.gmane.org>

> 
> > The compatibility information basically indicates that Mono can substitute
> > for .NET below version 3.0. 3.0 and higher still needs Microsoft's
> > implementation.
> > How would you handle hybridizing Mono with Microsoft's framework?
> 
> You would need different wine prefixes if you want to use both at once.
> 
> What is the problem with 3.0, and can't it be fixed?
> 
> 

AFAIK mono doesn't implement WPF,  so any .NET app that uses it is likely to
fail in mono. Correct me if i'm wrong

Vincent Povirk <madewokherd+8cd9 <at> gmail.com> writes:




From madewokherd+8cd9 at gmail.com  Thu Apr  1 12:18:20 2010
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Thu, 1 Apr 2010 11:18:20 -0600
Subject: Mono integration
In-Reply-To: <loom.20100401T190215-118@post.gmane.org>
References: <s2gced95fe1004010914kd39d73f2ia4c6c1103b7a117c@mail.gmail.com>
	<v2zb6bb06271004010920y4c32e222v97c7ea437b93bd70@mail.gmail.com>
	<m2rced95fe1004010927wfa55c801w6934b571ffe43d07@mail.gmail.com>
	<j2j8278b1b1004010954k59b8a02cz849b70d6a17f6143@mail.gmail.com>
	<o2iced95fe1004010955t64d515aaz6a2bf8eb6cc6ff96@mail.gmail.com>
	<loom.20100401T190215-118@post.gmane.org>
Message-ID: <s2hced95fe1004011018oc057280fs4ca99b1b3d4414c1@mail.gmail.com>

> AFAIK mono doesn't implement WPF, ?so any .NET app that uses it is likely to
> fail in mono. Correct me if i'm wrong

This is true, and according to
http://www.mono-project.com/Compatibility they have no plans to
implement it. But someone could, and even if the mono project doesn't
want it, it would be useful for Wine.


From julliard at winehq.org  Thu Apr  1 12:29:16 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 01 Apr 2010 19:29:16 +0200
Subject: winedump: code cleanup
In-Reply-To: <op.vahqudh71j4v3x@home> (Mikhail Maroukhine's message of "Thu,
	01 Apr 2010 23:02:30 +0700")
References: <op.vab0pvxk1j4v3x@home> <87oci56cui.fsf@wine.dyndns.org>
	<op.vahqudh71j4v3x@home>
Message-ID: <877horozdf.fsf@wine.dyndns.org>

"Mikhail Maroukhine" <mikolg at yandex.ru> writes:

> Hello,
>
> Could you clear a little what do you mean under "stop abusing"?
> I've removed incorrect usage of constness in declaration for the
> variable that is changed for sure.
> I've send "try 2" patch with additional correction and extended log
> message.

I mean your new origProtoRef variable (which BTW uses a completely
different naming convention from the rest of the function) to work
around the fact that the argument is modified. Much better to use a
properly named local variable to store results and not modify the
argument.

-- 
Alexandre Julliard
julliard at winehq.org


From thunderbird2k at gmail.com  Thu Apr  1 12:53:53 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Thu, 1 Apr 2010 19:53:53 +0200
Subject: Another proposal for your critique: improving .NET 3.5
In-Reply-To: <o2yced95fe1004011024wbf62df27l55088f437c4c6345@mail.gmail.com>
References: <p2ze175d4761003312115s3d72217an9261713a64427ee6@mail.gmail.com>
	<201004010943.59945.hans@meelstraat.net>
	<g2ne175d4761004010931z7719839sf660bae9077a0c9f@mail.gmail.com>
	<q2xc8485d471004010955jeb2d7bb4kf7568862e6ef61b5@mail.gmail.com>
	<o2yced95fe1004011024wbf62df27l55088f437c4c6345@mail.gmail.com>
Message-ID: <w2wc8485d471004011053rda684eechbf6c8b271b6f2d79@mail.gmail.com>

On Thu, Apr 1, 2010 at 7:24 PM, Vincent Povirk
<madewokherd+8cd9 at gmail.com> wrote:
>> If you want to do something in the .NET area perhaps some work can be
>> done on Mono integration (see the mono topic Vincent started) and the
>> wiki (http://wiki.winehq.org/Mono).
>
> While this has the advantage of being an area where no one has done
> any serious work yet (and therefore, there is likely low-hanging
> fruit), I don't know how you could focus this so that the scope is
> clear and it is easily quantified.
>
> I also don't have a sense yet of what working on Mono in Wine is like.
> I'm still a Mono noob, as I've done no real development there.
>
> I think that something useful could come out of such a project, but I
> cannot predict what.
>

Perhaps there are some apps which mix .NET and win32 (I mean mixing in
a nice way and not overriding wndproc and evil stuff). Years ago
Paint.NET was ported over to Mono. I don't remember what they did but
I guess they mainly removed some win32isms. The code to paint.net used
to be available (I think the 3.0 source still is). You could check if
it is a well behaving .NET app which uses win32. Getting Paint.NET
working on mono+wine could be a good test case. Note since both of you
are in MSP that might have advantages as well.

Roderick


From saulius2 at ar.fi.lt  Thu Apr  1 13:20:29 2010
From: saulius2 at ar.fi.lt (Saulius Krasuckas)
Date: Thu, 1 Apr 2010 21:20:29 +0300 (EEST)
Subject: Working on "DOS" VGA.
In-Reply-To: <901B5DC6-95A3-4C29-B0C7-0925B784D495@gmx.at>
References: <4BB456A9.7000202@tdcadsl.dk>
	<p2wc8485d471004010224p68b253ebqcedb54d6834f693c@mail.gmail.com>
	<901B5DC6-95A3-4C29-B0C7-0925B784D495@gmx.at>
Message-ID: <alpine.DEB.1.10.1004012033270.3761@localhost.localdomain>

* On Thu, 1 Apr 2010, Stefan D?singer wrote:
> Am 01.04.2010 um 11:24 schrieb Roderick Colenbrander:
>
> > Myself I'm a bit worried about whether we should improve our DOS
> > support even further. The problem is that more and more people are
> > moving over to 64-bit Linux. While you can run 32-bit programs on a
> > 64-bit system, there is no protected mode support (vm86; there is
> > emulation in some cases using a kernel module).
>
> There's protected mode 32 bit, protected mode 16 bit, but no vm86 16
> bit. So no real mode apps in Wine. We'd need to integrate a CPU emulator
> or JIT compiler into Wine to get this working.

DOSBox does something like this already.  I lack ideas about to what 
extent DOSBox could be integrated, but at least its CPU emulator could do.  
Or maybe DOSBox could even be bridged/integrated and do all the DOS stuff 
here?

Then IIRC there were discussions in the past about integrating Qemu into 
Wine.  Some folks at Darwine have achieved this to some degree: [1]

That probably won't fly directly [2] but some aspects of the design of an 
emulator integration can be investigated already, IMHO.


S.

[1] http://darwine.sourceforge.net/docs/dev-doc.xml
[2] http://wiki.winehq.org/FAQ#head-5804ec2bb090feaf81f572993444efd8ec2a8569

From eric.pouech at orange.fr  Thu Apr  1 14:36:31 2010
From: eric.pouech at orange.fr (Eric Pouech)
Date: Thu, 01 Apr 2010 21:36:31 +0200
Subject: [PATCH 1/5] winmm: Improve MCI's Sysinfo command.
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B7402FF@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B7402F4@S4DE8PSAANK.mitte.t-com.de>
	<47CC5ABB01651443A88DB8EC5B4D657B7402FF@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <4BB4F5BF.6090405@orange.fr>

Joerg-Cyril.Hoehle at t-systems.com a ?crit :
> Hi,
>
> Eric Pouech wrote:
>   
>> did you test the 16 => 32 bit conversion for the MCI_ALL_DEVICE ?
>>     
>
> Which ones do you have in mind? There are tests involving MCI_ALL_DEVICE_ID
> that pass on both win9x and later (also in patch #5).  I wrote a few
> more MCI tests privately.  Generally, I added (UINT16) casts in Wine
> when I saw test failures on Win9x platforms, then kept doing so (i.e.
> I'm not sure I've tested SYSINFO with a 0000FFFF deviceID on Win9x in
> particular or whether I simply use that pattern everywhere now after
> having been burnt once).  There are a few patches already in
> git that fix a few MCI_ALL_DEVICE_ID here and there, but as you wrote
> yourself in the TODO header long ago, support for it is incomplete.
> Making "close all", "play all" etc. work is on my private TODO list, but
> I never started working on this particular item.
>
>   
>> actually, I'd say it belongs to the 16=>32 mci message mapper, not in 
>> generic 32bit code
>>     
> Do you mean dlls/mmsystem.dll16? I never looked at it but I
>  don't think that's the correct place, see below.
> Do you mean the A/W (un)mapping? That's distinct, because it deals
>  with string conversions only, as the name suggests, and it does
>  not mogrify dwParam1.
>
> Current test results suggest that MCI_ALL_DEVICE_ID is not only a 16/32
> issue -- at least when I equate 16 with MS-Windows 3.x -- Have a look
> at the mciGetDeviceID("all") test case, which returns a 16bit FFFF on Win9x,
> not FFFFFFFF.  Therefore I believe Wine must be prepared for receiving
> 0000FFFF as ALL_ID from old Win9X apps or drivers -- possibly regardless
> of them using the A or W function entry points.
>   
that's the point I wanted to be clarified
did you check what mciGetDeviceID("all") returns on Vista or XP ?
if it's 0xFFFF in all cases, the real answer is then that device ID are 
internally UINT16 and we shouldn't care at all about 32 bit extension
it it's 0xFFFFFFFF in latest windows, then likely the device ID has been 
extended internally, and we should cope with both 0xFFFF and 0xFFFFFFFF 
values in winmm

-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)





From eric.pouech at orange.fr  Thu Apr  1 14:37:48 2010
From: eric.pouech at orange.fr (Eric Pouech)
Date: Thu, 01 Apr 2010 21:37:48 +0200
Subject: [PATCH 1/5] winmm: Improve MCI's Sysinfo command.
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B740304@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B7402F4@S4DE8PSAANK.mitte.t-com.de>	<47CC5ABB01651443A88DB8EC5B4D657B7402FF@S4DE8PSAANK.mitte.t-com.de>
	<47CC5ABB01651443A88DB8EC5B4D657B740304@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <4BB4F60C.1000901@orange.fr>

Joerg-Cyril.Hoehle at t-systems.com a ?crit :
> Hi,
>
> Eric Pouech wrote:
>   
>> did you test the 16 => 32 bit conversion for the MCI_ALL_DEVICE ?
>>     
>
> It's good you asked.  Upon closer inspection, MCI_Sysinfo appears to
> behave differently.  I'd say it's even a bug in MS that setting
> SYSINFO_PARMS.wDeviceType = MCI_ALL_DEVICE_ID is not recognized! Only
> sendCommand(MCI_ALL_DEVICE_ID, MCI_SYSINFO ...) appears usable to
> obtain the functionality of "sysinfo all ..." :-(
>
> I'll supersede the patch ASAP.
> Grr, that's not going to simplify the parser.
>
> Regards,
>  J?gr H?hle
>
>
>
>
>   
but does

SYSINFO_PARMS.wDeviceType = (WORD)(DWORD)MCI_ALL_DEVICE_ID;
work better ?
if yes, I'd be convinced for a bug in native winmm, missing a (WORD) cast somewhere...
A+


-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)





From eric.pouech at orange.fr  Thu Apr  1 14:46:19 2010
From: eric.pouech at orange.fr (Eric Pouech)
Date: Thu, 01 Apr 2010 21:46:19 +0200
Subject: winmm: For MCI parsing, use 64bit compatible structures.
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B740303@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B7402FD@S4DE8PSAANK.mitte.t-com.de>	<47CC5ABB01651443A88DB8EC5B4D657B740300@S4DE8PSAANK.mitte.t-com.de>	<47CC5ABB01651443A88DB8EC5B4D657B740301@S4DE8PSAANK.mitte.t-com.de>
	<47CC5ABB01651443A88DB8EC5B4D657B740303@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <4BB4F80B.4070304@orange.fr>

Joerg-Cyril.Hoehle at t-systems.com a ?crit :
> Hi,
>
> Eric Pouech wrote:
>   
>> this patch is ugly as hell...
>>     
> Please qualify.  To me,
> -	    data[3] = (DWORD_PTR)dev;
> +	    parms.open.lpstrElementName = dev;
> looks more robust than before:
>  - no magic offsets,
>  - no casts that may silence warnings.
>   
actually there are not magic offsets, but can be computed from the 
previous values written. the current parser can be better rewritten in a 
way were fields are written to in sequential order (currently, for 
example, return values are written at the end, which is not satisfactory)
but I agree current that current parser can be improved

>> and it still believe we can do the MCI 
>> parser without knowing about MCI structures internals
>>     
> What do you mean?
> Quite to the contrary, the parser depends on knowing the internals
> of some commands (like MCI_OPEN) as well as the convention about the
> return value as 2nd (+3rd) slot after the callback.
>   
MCI_OPEN is kinda specific
the others are not.
it just uses that first parameter is callback, second is the returned 
type (which is described in the MCI table), then parameters, which are 
also described in the table. no nothing magic here
> The parser bridges the gap between the resource definition files
> winmm_res.rc that are now in git and are known to work well with
> 32bit and the mixed DWORD/DWORD_PTR MCI_..._PARMS definitions whose
> correctness has been (partially) validated by tests.
>   
to me what works are test (and packing) of MCI structures on 64 windows 
(but with native DLLs, hence using native MCI tables)
what doesn't work is MCI parser (with builtin winmm) and same MCI structures
but we never validated builtin MCI tables on windows...
> What we don't know is whether Win64 introduced a different winmm_res.rc.
> I'd sure would be pleased if somebody could describe whether there
> have been changes to the resources to accommodate 64bit pointers in MS-Windows.
>   
we just need a copy of 64bit winmm.dll. If someone could mail it to me 
privately, it would be rather easy to check.
A+

-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)





From madewokherd+8cd9 at gmail.com  Thu Apr  1 12:24:13 2010
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Thu, 1 Apr 2010 11:24:13 -0600
Subject: Another proposal for your critique: improving .NET 3.5
In-Reply-To: <q2xc8485d471004010955jeb2d7bb4kf7568862e6ef61b5@mail.gmail.com>
References: <p2ze175d4761003312115s3d72217an9261713a64427ee6@mail.gmail.com>
	<201004010943.59945.hans@meelstraat.net>
	<g2ne175d4761004010931z7719839sf660bae9077a0c9f@mail.gmail.com>
	<q2xc8485d471004010955jeb2d7bb4kf7568862e6ef61b5@mail.gmail.com>
Message-ID: <o2yced95fe1004011024wbf62df27l55088f437c4c6345@mail.gmail.com>

> If you want to do something in the .NET area perhaps some work can be
> done on Mono integration (see the mono topic Vincent started) and the
> wiki (http://wiki.winehq.org/Mono).

While this has the advantage of being an area where no one has done
any serious work yet (and therefore, there is likely low-hanging
fruit), I don't know how you could focus this so that the scope is
clear and it is easily quantified.

I also don't have a sense yet of what working on Mono in Wine is like.
I'm still a Mono noob, as I've done no real development there.

I think that something useful could come out of such a project, but I
cannot predict what.
-------------- next part --------------
ok=:; make run-test-recursive || ok=false; make run-test-local || ok=false; $ok
make[1]: Entering directory `/home/meh/work/mcs/class'
make[2]: Entering directory `/home/meh/work/mcs/class/corlib'
ok=:; make run-test-recursive || ok=false; make run-test-local || ok=false; $ok
make[3]: Entering directory `/home/meh/work/mcs/class/corlib'
make[3]: Leaving directory `/home/meh/work/mcs/class/corlib'
make[3]: Entering directory `/home/meh/work/mcs/class/corlib'
ok=:; \
	PATH="/home/meh/bin/_tmpinst/bin:/home/meh/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games" MONO_REGISTRY_PATH="/home/meh/.mono/registry" MONO_PATH="./../../class/lib/net_2_0::$MONO_PATH" /home/meh/bin/wine-mono-wrapper --debug  ./../../class/lib/net_2_0/nunit-console.exe  corlib_test_net_2_0.dll -noshadow   -exclude=NotWorking,ValueAdd,CAS,InetAccess -output=TestResult-net_2_0.log -xml=TestResult-net_2_0.xml  || ok=false; \
	(echo ''; cat TestResult-net_2_0.log) | sed '1,/^Tests run: /d'; xsltproc ./../../build/nunit-summary.xsl TestResult-net_2_0.xml >> TestResult-net_2_0.log ; $ok
NUnit version 2.4.8
Copyright (C) 2002-2007 Charlie Poole.
Copyright (C) 2002-2004 James W. Newkirk, Michael C. Two, Alexei A. Vorontsov.
Copyright (C) 2000-2002 Philip Craig.
All Rights Reserved.

Runtime Environment - 
   OS Version: Microsoft Windows NT 5.1.2600.0
  CLR Version: 2.0.50727.1433 ( 2.6.3 (/branches/mono-2-6/mono r154484) )

Excluded categories: NotWorking,ValueAdd,CAS,InetAccess

** (./../../class/lib/net_2_0/nunit-console.exe:35): WARNING **: Unsupported on Win32 (anyway requires W2K3 minimum)

** (./../../class/lib/net_2_0/nunit-console.exe:35): WARNING **: Unsupported on Win32 (anyway requires W2K3 minimum)

** (./../../class/lib/net_2_0/nunit-console.exe:35): WARNING **: Unsupported on Win32 (anyway requires W2K3 minimum)

Tests run: 8610, Failures: 42, Not run: 50, Time: 97.304 seconds

Test Case Failures:
1) MonoTests.Microsoft.Win32.RegistryKeyTest.bugnew1 : #13
at MonoTests.Microsoft.Win32.RegistryKeyTest.bugnew1 () [0x00194] in /home/meh/work/mcs/class/corlib/Test/Microsoft.Win32/RegistryKeyTest.cs:3047
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

2) MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteValue : System.SystemException : A system exception has occurred.
at Microsoft.Win32.Win32RegistryApi.GenerateException (Int32 errorCode) [0x0004c] in /home/meh/work/mcs/class/corlib/Microsoft.Win32/Win32RegistryApi.cs:537
at Microsoft.Win32.Win32RegistryApi.DeleteValue (Microsoft.Win32.RegistryKey rkey, System.String value, Boolean shouldThrowWhenKeyMissing) [0x00040] in /home/meh/work/mcs/class/corlib/Microsoft.Win32/Win32RegistryApi.cs:461
at Microsoft.Win32.RegistryKey.DeleteValue (System.String name, Boolean throwOnMissingValue) [0x0002d] in /home/meh/work/mcs/class/corlib/Microsoft.Win32/RegistryKey.cs:403
at (wrapper remoting-invoke-with-check) Microsoft.Win32.RegistryKey:DeleteValue (string,bool)
at MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteValue () [0x0019d] in /home/meh/work/mcs/class/corlib/Test/Microsoft.Win32/RegistryKeyTest.cs:1186
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

3) MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteValue_Key_Removed : System.ArgumentException : value name1
at Microsoft.Win32.Win32RegistryApi.DeleteValue (Microsoft.Win32.RegistryKey rkey, System.String value, Boolean shouldThrowWhenKeyMissing) [0x00047] in /home/meh/work/mcs/class/corlib/Microsoft.Win32/Win32RegistryApi.cs:462
at Microsoft.Win32.RegistryKey.DeleteValue (System.String name, Boolean throwOnMissingValue) [0x0002d] in /home/meh/work/mcs/class/corlib/Microsoft.Win32/RegistryKey.cs:403
at Microsoft.Win32.RegistryKey.DeleteValue (System.String name) [0x00000] in /home/meh/work/mcs/class/corlib/Microsoft.Win32/RegistryKey.cs:386
at (wrapper remoting-invoke-with-check) Microsoft.Win32.RegistryKey:DeleteValue (string)
at MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteValue_Key_Removed () [0x00080] in /home/meh/work/mcs/class/corlib/Test/Microsoft.Win32/RegistryKeyTest.cs:1314
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

4) MonoTests.Microsoft.Win32.RegistryKeyTest.GetValue : System.SystemException : A system exception has occurred.
at Microsoft.Win32.Win32RegistryApi.GetValue (Microsoft.Win32.RegistryKey rkey, System.String name, System.Object defaultValue, RegistryValueOptions options) [0x0012c] in /home/meh/work/mcs/class/corlib/Microsoft.Win32/Win32RegistryApi.cs:189
at Microsoft.Win32.RegistryKey.GetValue (System.String name, System.Object defaultValue) [0x00006] in /home/meh/work/mcs/class/corlib/Microsoft.Win32/RegistryKey.cs:268
at Microsoft.Win32.RegistryKey.GetValue (System.String name) [0x00000] in /home/meh/work/mcs/class/corlib/Microsoft.Win32/RegistryKey.cs:257
at (wrapper remoting-invoke-with-check) Microsoft.Win32.RegistryKey:GetValue (string)
at MonoTests.Microsoft.Win32.RegistryKeyTest.GetValue () [0x00101] in /home/meh/work/mcs/class/corlib/Test/Microsoft.Win32/RegistryKeyTest.cs:1544
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

5) MonoTests.Microsoft.Win32.RegistryKeyTest.GetValueNames_Key_Removed : #C1
at MonoTests.Microsoft.Win32.RegistryKeyTest.GetValueNames_Key_Removed () [0x000ae] in /home/meh/work/mcs/class/corlib/Test/Microsoft.Win32/RegistryKeyTest.cs:1869
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

6) MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_Key_Removed : #2
at MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_Key_Removed () [0x00050] in /home/meh/work/mcs/class/corlib/Test/Microsoft.Win32/RegistryKeyTest.cs:2519
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

7) MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue2_Key_Removed : #2
at MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue2_Key_Removed () [0x00051] in /home/meh/work/mcs/class/corlib/Test/Microsoft.Win32/RegistryKeyTest.cs:2603
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

8) MonoTests.Microsoft.Win32.RegistryKeyTest.SubKeyCount_Key_Removed : #C1: 0
at MonoTests.Microsoft.Win32.RegistryKeyTest.SubKeyCount_Key_Removed () [0x000d8] in /home/meh/work/mcs/class/corlib/Test/Microsoft.Win32/RegistryKeyTest.cs:2840
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

9) MonoTests.Microsoft.Win32.RegistryKeyTest.ValueCount_Key_Removed : #C1: 0
at MonoTests.Microsoft.Win32.RegistryKeyTest.ValueCount_Key_Removed () [0x00100] in /home/meh/work/mcs/class/corlib/Test/Microsoft.Win32/RegistryKeyTest.cs:2931
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

10) MonoTests.System.AppDomainSetupTest.ApplicationBase1 :   String lengths are both 20. Strings differ at index 4.
  Expected: "//C:/users/meh/Temp/"
  But was:  "//C:\\users\\meh\\Temp\\"
  ---------------^

at MonoTests.System.AppDomainSetupTest.ApplicationBase1 () [0x00045] in /home/meh/work/mcs/class/corlib/Test/System/AppDomainSetupTest.cs:94
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

11) MonoTests.System.AppDomainSetupTest.ApplicationBase5 :   Expected string length 8 but was 10. Strings differ at index 1.
  Expected: "/lala:la"
  But was:  "//\\lala:la"
  ------------^

at MonoTests.System.AppDomainSetupTest.ApplicationBase5 () [0x00011] in /home/meh/work/mcs/class/corlib/Test/System/AppDomainSetupTest.cs:164
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

12) MonoTests.System.AppDomainSetupTest.ApplicationBase6 : Unexpected exception: NUnit.Framework.AssertionException: setup.ApplicationBase returned :Z:\home\meh\work\mcs\class\corlib\la?lala
  at NUnit.Framework.Assert.Fail (System.String message, System.Object[] args) [0x0002a] in /home/meh/work/mcs/nunit24/NUnitFramework/framework/Assert.cs:2083 
  at NUnit.Framework.Assert.Fail (System.String message) [0x00000] in /home/meh/work/mcs/nunit24/NUnitFramework/framework/Assert.cs:2093 
  at MonoTests.System.AppDomainSetupTest.ApplicationBase6 () [0x0001c] in /home/meh/work/mcs/class/corlib/Test/System/AppDomainSetupTest.cs:194 
at MonoTests.System.AppDomainSetupTest.ApplicationBase6 () [0x0003d] in /home/meh/work/mcs/class/corlib/Test/System/AppDomainSetupTest.cs:199
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

13) MonoTests.System.DateTimeTest.TestParseExact :   #M
  Expected: 643393064967552000
  But was:  643392560967552000

at MonoTests.System.DateTimeTest.TestParseExact () [0x00b3b] in /home/meh/work/mcs/class/corlib/Test/System/DateTimeTest.cs:814
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

14) MonoTests.System.IO.DirectoryInfoTest.FullName :   #D1
  String lengths are both 3. Strings differ at index 0.
  Expected: "C:\\"
  But was:  "c:\\"
  -----------^

at MonoTests.System.IO.DirectoryInfoTest.FullName () [0x00180] in /home/meh/work/mcs/class/corlib/Test/System.IO/DirectoryInfoTest.cs:420
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

15) MonoTests.System.IO.DirectoryInfoTest.Name :   #4
  String lengths are both 3. Strings differ at index 0.
  Expected: "C:\\"
  But was:  "c:\\"
  -----------^

at MonoTests.System.IO.DirectoryInfoTest.Name () [0x00114] in /home/meh/work/mcs/class/corlib/Test/System.IO/DirectoryInfoTest.cs:170
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

16) MonoTests.System.IO.DirectoryTest.CreationTime :   #A1
  Expected: 2003
  But was:  2010

at MonoTests.System.IO.DirectoryTest.CreationTime () [0x00059] in /home/meh/work/mcs/class/corlib/Test/System.IO/DirectoryTest.cs:966
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

17) MonoTests.System.IO.DirectoryTest.DeleteDirectoryOnExistingFileName :   #3
  Expected: False
  But was:  True

at MonoTests.System.IO.DirectoryTest.DeleteDirectoryOnExistingFileName () [0x00066] in /home/meh/work/mcs/class/corlib/Test/System.IO/DirectoryTest.cs:299
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

18) MonoTests.System.IO.DirectoryTest.GetFiles_Pattern :   #N2
  Expected: 1
  But was:  2

at MonoTests.System.IO.DirectoryTest.GetFiles_Pattern () [0x0030a] in /home/meh/work/mcs/class/corlib/Test/System.IO/DirectoryTest.cs:1668
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

19) MonoTests.System.IO.FileInfoTest.MoveTo_DestFileName_AlreadyExists : System.UnauthorizedAccessException : Access to the path is denied.
at System.IO.File.Move (System.String sourceFileName, System.String destFileName) [0x00141] in /home/meh/work/mcs/class/corlib/System.IO/File.cs:343
at System.IO.FileInfo.MoveTo (System.String destFileName) [0x0004a] in /home/meh/work/mcs/class/corlib/System.IO/FileInfo.cs:238
at (wrapper remoting-invoke-with-check) System.IO.FileInfo:MoveTo (string)
at MonoTests.System.IO.FileInfoTest.MoveTo_DestFileName_AlreadyExists () [0x0002d] in /home/meh/work/mcs/class/corlib/Test/System.IO/FileInfoTest.cs:665
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

20) MonoTests.System.IO.FileStreamTest.FileShare_Delete : System.IO.IOException : Sharing violation on path C:\users\meh\Temp\MonoTests.System.IO.Tests\temp
at System.IO.File.Delete (System.String path) [0x000ba] in /home/meh/work/mcs/class/corlib/System.IO/File.cs:181
at MonoTests.System.IO.FileStreamTest.FileShare_Delete () [0x0002d] in /home/meh/work/mcs/class/corlib/Test/System.IO/FileStreamTest.cs:832
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

21) MonoTests.System.IO.FileSystemInfoTest.CreationTimeDirectory :   #A1
  Expected: 1999
  But was:  2010

at MonoTests.System.IO.FileSystemInfoTest.CreationTimeDirectory () [0x0005f] in /home/meh/work/mcs/class/corlib/Test/System.IO/FileSystemInfoTest.cs:142
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

22) MonoTests.System.IO.FileSystemInfoTest.CreationTimeFile :   #A1
  Expected: 1999
  But was:  2010

at MonoTests.System.IO.FileSystemInfoTest.CreationTimeFile () [0x0006a] in /home/meh/work/mcs/class/corlib/Test/System.IO/FileSystemInfoTest.cs:90
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

23) MonoTests.System.IO.FileTest.CreationTime :   #A1
  Expected: 2002
  But was:  2010

at MonoTests.System.IO.FileTest.CreationTime () [0x00036] in /home/meh/work/mcs/class/corlib/Test/System.IO/FileTest.cs:1094
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

24) MonoTests.System.IO.FileTest.GetAttributes_Archive :   #2
  Expected: False
  But was:  True

at MonoTests.System.IO.FileTest.GetAttributes_Archive () [0x0005d] in /home/meh/work/mcs/class/corlib/Test/System.IO/FileTest.cs:509
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

25) MonoTests.System.IO.FileTest.GetAttributes_System :   #2
  Expected: True
  But was:  False

at MonoTests.System.IO.FileTest.GetAttributes_System () [0x0005b] in /home/meh/work/mcs/class/corlib/Test/System.IO/FileTest.cs:606
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

26) MonoTests.System.IO.FileTest.Move_DestFileName_AlreadyExists : System.UnauthorizedAccessException : Access to the path is denied.
at System.IO.File.Move (System.String sourceFileName, System.String destFileName) [0x00141] in /home/meh/work/mcs/class/corlib/System.IO/File.cs:343
at MonoTests.System.IO.FileTest.Move_DestFileName_AlreadyExists () [0x00025] in /home/meh/work/mcs/class/corlib/Test/System.IO/FileTest.cs:793
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

27) MonoTests.System.IO.PathTest.GetDirectoryName :   #C2
  String lengths are both 7. Strings differ at index 3.
  Expected: "foo\\bar"
  But was:  "foo/bar"
  --------------^

at MonoTests.System.IO.PathTest.GetDirectoryName () [0x00135] in /home/meh/work/mcs/class/corlib/Test/System.IO/PathTest.cs:285
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

28) MonoTests.System.IO.PathTest.GetFullPath_Windows :   GetFullPathWindows #19
  Expected string length 8 but was 16. Strings differ at index 8.
  Expected: "C:\\root\\"
  But was:  "C:\\root\\      .\\"
  ---------------------^

at MonoTests.System.IO.PathTest.GetFullPath_Windows () [0x002b0] in /home/meh/work/mcs/class/corlib/Test/System.IO/PathTest.cs:574
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

29) MonoTests.System.IO.PathTest.GetFullPath2 :   GetFullPath w#01
  Expected string length 3 but was 33. Strings differ at index 3.
  Expected: "Z:\\"
  But was:  "Z:\\home\\meh\\work\\mcs\\class\\corlib"
  ---------------^

at MonoTests.System.IO.PathTest.GetFullPath2 () [0x0000b] in /home/meh/work/mcs/class/corlib/Test/System.IO/PathTest.cs:689
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

30) MonoTests.System.Reflection.AssemblyTest.bug79872 : System.IO.IOException : Sharing violation on path C:\users\meh\Temp\bug79872-98155\bug79872.dll
at System.IO.File.Delete (System.String path) [0x000ba] in /home/meh/work/mcs/class/corlib/System.IO/File.cs:181
at System.IO.Directory.RecursiveDelete (System.String path) [0x00057] in /home/meh/work/mcs/class/corlib/System.IO/Directory.cs:193
at System.IO.Directory.Delete (System.String path, Boolean recursive) [0x0000c] in /home/meh/work/mcs/class/corlib/System.IO/Directory.cs:203
at MonoTests.System.Reflection.AssemblyTest.bug79872 () [0x00136] in /home/meh/work/mcs/class/corlib/Test/System.Reflection/AssemblyTest.cs:1087
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

31) MonoTests.System.Reflection.AssemblyTest.Load_PartialVersion : System.IO.IOException : Sharing violation on path C:\users\meh\Temp\MonoTests.System.Reflection.AssemblyTest\2\test_assembly.dll
at System.IO.File.Delete (System.String path) [0x000ba] in /home/meh/work/mcs/class/corlib/System.IO/File.cs:181
at System.IO.Directory.RecursiveDelete (System.String path) [0x00057] in /home/meh/work/mcs/class/corlib/System.IO/Directory.cs:193
at System.IO.Directory.RecursiveDelete (System.String path) [0x0002d] in /home/meh/work/mcs/class/corlib/System.IO/Directory.cs:188
at System.IO.Directory.Delete (System.String path, Boolean recursive) [0x0000c] in /home/meh/work/mcs/class/corlib/System.IO/Directory.cs:203
at MonoTests.System.Reflection.AssemblyTest.Load_PartialVersion () [0x0014b] in /home/meh/work/mcs/class/corlib/Test/System.Reflection/AssemblyTest.cs:865
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

32) MonoTests.System.Reflection.AssemblyTest.LoadFrom_Empty_Assembly : System.IO.FileNotFoundException : Could not load file or assembly 'C:\users\meh\Temp\tmpcde97c1.tmp' or one of its dependencies. The system cannot find the file specified.
at (wrapper managed-to-native) System.Reflection.Assembly:LoadFrom (string,bool)
at System.Reflection.Assembly.LoadFrom (System.String assemblyFile) [0x00000] in /home/meh/work/mcs/class/corlib/System.Reflection/Assembly.cs:505
at MonoTests.System.Reflection.AssemblyTest.LoadFrom_Empty_Assembly () [0x00006] in /home/meh/work/mcs/class/corlib/Test/System.Reflection/AssemblyTest.cs:376
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

33) MonoTests.System.Reflection.Emit.ModuleBuilderTest.DefineType_Name_Null :   #5
  Expected string length 8 but was 3. Strings differ at index 0.
  Expected: "fullname"
  But was:  "key"
  -----------^

at MonoTests.System.Reflection.Emit.ModuleBuilderTest.DefineType_Name_Null () [0x0006b] in /home/meh/work/mcs/class/corlib/Test/System.Reflection.Emit/ModuleBuilderTest.cs:146
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

34) MonoTests.System.Security.Policy.ZoneTest.CreateFromUrl_Internet : System.FormatException : URI scheme was not recognized, nor input string is not recognized as an absolute file path.
at Mono.Security.Uri.Parse (System.String uriString) [0x0006d] in /home/meh/work/mcs/class/corlib/Mono.Security/Uri.cs:956
at Mono.Security.Uri.Parse () [0x00000] in /home/meh/work/mcs/class/corlib/Mono.Security/Uri.cs:826
at Mono.Security.Uri..ctor (System.String uriString, Boolean dontEscape) [0x00064] in /home/meh/work/mcs/class/corlib/Mono.Security/Uri.cs:125
at Mono.Security.Uri..ctor (System.String uriString) [0x00000] in <filename unknown>:0
at System.Security.Policy.Zone.CreateFromUrl (System.String url) [0x00025] in /home/meh/work/mcs/class/corlib/System.Security.Policy/Zone.cs:88
at MonoTests.System.Security.Policy.ZoneTest.CreateFromUrl_Internet () [0x00012] in /home/meh/work/mcs/class/corlib/Test/System.Security.Policy/ZoneTest.cs:236
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

35) MonoTests.System.Security.Policy.ZoneTest.CreateFromUrl_MyComputer : System.FormatException : Invalid URI: invalid port number
at Mono.Security.Uri.Parse (System.String uriString) [0x00396] in /home/meh/work/mcs/class/corlib/Mono.Security/Uri.cs:1049
at Mono.Security.Uri.Parse () [0x00000] in /home/meh/work/mcs/class/corlib/Mono.Security/Uri.cs:826
at Mono.Security.Uri..ctor (System.String uriString, Boolean dontEscape) [0x00064] in /home/meh/work/mcs/class/corlib/Mono.Security/Uri.cs:125
at Mono.Security.Uri..ctor (System.String uriString) [0x00000] in <filename unknown>:0
at System.Security.Policy.Zone.CreateFromUrl (System.String url) [0x00025] in /home/meh/work/mcs/class/corlib/System.Security.Policy/Zone.cs:88
at MonoTests.System.Security.Policy.ZoneTest.CreateFromUrl_MyComputer () [0x00040] in /home/meh/work/mcs/class/corlib/Test/System.Security.Policy/ZoneTest.cs:199
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

36) MonoTests.System.Threading.ThreadTest.TestApartmentState : This test fails on mono on win32. Our runtime should be fixed.
at MonoTests.System.Threading.ThreadTest.TestApartmentState () [0x00014] in /home/meh/work/mcs/class/corlib/Test/System.Threading/ThreadTest.cs:364
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

37) MonoTests.System.Threading.ThreadTest.TestIsBackground1 : This test fails on mono on Win32. Our runtime should be fixed.
at MonoTests.System.Threading.ThreadTest.TestIsBackground1 () [0x00014] in /home/meh/work/mcs/class/corlib/Test/System.Threading/ThreadTest.cs:455
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

38) MonoTests.System.Threading.ThreadTest.TestName : This test fails on mono on Win32. Our runtime should be fixed.
at MonoTests.System.Threading.ThreadTest.TestName () [0x00014] in /home/meh/work/mcs/class/corlib/Test/System.Threading/ThreadTest.cs:488
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

39) MonoTests.System.Threading.ThreadTest.TestPriority1 : This test fails on mono on Win32. Our runtime should be fixed.
at MonoTests.System.Threading.ThreadTest.TestPriority1 () [0x00014] in /home/meh/work/mcs/class/corlib/Test/System.Threading/ThreadTest.cs:383
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

40) MonoTests.System.Threading.ThreadTest.TestStart : This test fails on Win32. The test should be fixed.
at MonoTests.System.Threading.ThreadTest.TestStart () [0x00014] in /home/meh/work/mcs/class/corlib/Test/System.Threading/ThreadTest.cs:329
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

41) MonoTests.System.Threading.ThreadTest.TestSuspendAbort : This test fails on Win32. The test should be fixed.
at MonoTests.System.Threading.ThreadTest.TestSuspendAbort () [0x00014] in /home/meh/work/mcs/class/corlib/Test/System.Threading/ThreadTest.cs:746
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

42) MonoTests.System.Threading.ThreadTest.TestThreadState : This test fails on mono on Win32. Our runtime should be fixed.
at MonoTests.System.Threading.ThreadTest.TestThreadState () [0x00014] in /home/meh/work/mcs/class/corlib/Test/System.Threading/ThreadTest.cs:633
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d0] in /home/meh/work/mcs/class/corlib/System.Reflection/MonoMethod.cs:213

Tests not run:
1) MonoTests.System.CharCategoryTest.IsLetter : The dump file is huge, so avoided this test way.
2) MonoTests.System.CharCategoryTest.IsLetterOrDigit : The dump file is huge, so avoided this test way.
3) MonoTests.System.DateTimeTest.TestParse2 : need to fix tests that run on different timezones
4) MonoTests.System.Diagnostics.DebugTest+DebugTest1.TestAssert : Fixture class is not public
5) MonoTests.System.Diagnostics.DebugTest+DebugTest1.TestFail : Fixture class is not public
6) MonoTests.System.Diagnostics.DebugTest+DebugTest1.TestWrite : Fixture class is not public
7) MonoTests.System.Diagnostics.DebugTest+DebugTest1.TestWriteIf : Fixture class is not public
8) MonoTests.System.Diagnostics.DebugTest+DebugTest1.TestWriteLine : Fixture class is not public
9) MonoTests.System.Diagnostics.DebugTest+DebugTest1.TestWriteLineIf : Fixture class is not public
10) MonoTests.System.Diagnostics.StackTraceTest.StackTrace_Thread_NotSuspended : Not supported in Mono
11) MonoTests.System.Diagnostics.StackTraceTest.StackTrace_Thread_Null : Not supported in Mono
12) MonoTests.System.Diagnostics.StackTraceTest.StackTrace_Thread_Suspended : Not supported in Mono
13) MonoTests.System.IO.DirectoryTest.MoveException4 : On IA64, causes nunit to abort due to bug #76388
14) MonoTests.System.Reflection.Emit.FieldBuilderTest.TestGetCustomAttributesComplete : mono supports this
15) MonoTests.System.Reflection.Emit.FieldBuilderTest.TestGetCustomAttributesOfTypeComplete : mono supports this
16) MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetEventFlagsIncomplete : mcs depends on this
17) MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetEventIncomplete : mcs depends on this
18) MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetEventsFlagsIncomplete : mcs depends on this
19) MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetEventsIncomplete : mcs depends on this
20) MonoTests.System.Reflection.ModuleTest.ResolveString : it breaks nunit-console.exe execution under .NET 2.0
21) MonoTests.System.Resources.ResourceReaderTest.ConstructorString_Bad : Not covered in the docs, not sure what the correct behavior should be for this
22) MonoTests.System.Runtime.InteropServices.GCHandleTest.AllocMinusOne : throw non-catchable ExecutionEngineException
23) MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.KeyGeneration : Much too long (with MS as Mono doesn't generates the keypair unless it need it)
24) MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.KeyGeneration : Much too long (with MS as Mono doesn't generates the keypair unless it need it)
25) MonoTests.System.Security.Permissions.FileIOPermissionTest.ShortToLong : should compatibility go that far ?
26) MonoTests.System.Security.Permissions.PublisherIdentityPermissionAttributeTest.SignedFile : CreateFromSignedFile isn't finished yet
27) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.ApplicationDirectory_GetRequiredSize : not sure if we gonna need this and, if we do, if we must be compatible with it
28) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_GetRequiredSize : not sure if we gonna need this and, if we do, if we must be compatible with it
29) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_InitFromBuffer : not sure if we gonna need this and, if we do, if we must be compatible with it
30) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_InitFromBuffer_BadData : not sure if we gonna need this and, if we do, if we must be compatible with it
31) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_InitFromBuffer_Null : not sure if we gonna need this and, if we do, if we must be compatible with it
32) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_InitFromBuffer_OutOfRange : not sure if we gonna need this and, if we do, if we must be compatible with it
33) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_OutputToBuffer : not sure if we gonna need this and, if we do, if we must be compatible with it
34) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_OutputToBuffer_Null : not sure if we gonna need this and, if we do, if we must be compatible with it
35) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_OutputToBuffer_OutOfRange : not sure if we gonna need this and, if we do, if we must be compatible with it
36) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.Hash_GetRequiredSize : not sure if we gonna need this and, if we do, if we must be compatible with it
37) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.PermissionRequestEvidence_GetRequiredSize : not sure if we gonna need this and, if we do, if we must be compatible with it
38) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.Publisher_GetRequiredSize : not sure if we gonna need this and, if we do, if we must be compatible with it
39) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.Site_GetRequiredSize : not sure if we gonna need this and, if we do, if we must be compatible with it
40) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.StrongName_GetRequiredSize : not sure if we gonna need this and, if we do, if we must be compatible with it
41) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.Url_GetRequiredSize : not sure if we gonna need this and, if we do, if we must be compatible with it
42) MonoTests.System.Security.Policy.IBuiltInEvidenceTest.Zone_GetRequiredSize : not sure if we gonna need this and, if we do, if we must be compatible with it
43) MonoTests.System.StringTest.Constructor8_Value_Invalid2 : Runtime throws NullReferenceException instead of AccessViolationException
44) MonoTests.System.Threading.ThreadTest.CurrentPrincipal_PrincipalPolicy_NoPrincipal : see comment below.
45) MonoTests.System.Threading.ThreadTest.CurrentPrincipal_PrincipalPolicy_UnauthenticatedPrincipal : see comment below.
46) MonoTests.System.TimeSpanTest.MaxHours_TooLong : too long
47) MonoTests.System.TimeSpanTest.MaxMinutes_TooLong : too long
48) MonoTests.System.TimeSpanTest.MinHours_TooLong : too long
49) MonoTests.System.TimeSpanTest.MinMinutes_TooLong : too long
50) MonoTests.System.TimeZoneTest.TestCtors : Your time zone (Central Standard Time) isn't defined in the test case

Traceback (most recent call last):
  File "/home/meh/bin/wine-mono-wrapper", line 29, in <module>
    sys.exit(popen.wait())
  File "/usr/lib/python2.6/subprocess.py", line 1157, in wait
    pid, sts = os.waitpid(self.pid, 0)
KeyboardInterrupt
make[3]: *** [run-test-lib] Interrupt
make[2]: *** [do-run-test] Interrupt
make[1]: *** [run-test-recursive] Interrupt
make: *** [do-run-test] Interrupt

From celticht32 at yahoo.com  Thu Apr  1 19:08:33 2010
From: celticht32 at yahoo.com (chris ahrendt)
Date: Thu, 1 Apr 2010 17:08:33 -0700 (PDT)
Subject: Working on "DOS" VGA.
Message-ID: <561569.57344.qm@web112615.mail.gq1.yahoo.com>

Just my 2 phennings worth on this...
Why reinvent the wheel... I would say instead of doing the emulator inside wine... or a JIT... why not have
wine intersept the call to start the vm86 mode.. and forks off and starts DOSEMU or whatever DOS box system is
configured.. That way wine doesnt have to worry about it...

chris






      


From jjmckenzie51 at earthlink.net  Thu Apr  1 20:49:01 2010
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Thu, 01 Apr 2010 18:49:01 -0700
Subject: [PATCH 2/2] Revert prev. Hack, as Bug 10000 is still present.
In-Reply-To: <u2x78a7dad01004010924h2345e6b0nc2e257bf5021d79f@mail.gmail.com>
References: <1270138602-2126-1-git-send-email-wine.dev@web.de>
	<u2x78a7dad01004010924h2345e6b0nc2e257bf5021d79f@mail.gmail.com>
Message-ID: <4BB54D0D.7080805@earthlink.net>

John Klehm wrote:
> On Thu, Apr 1, 2010 at 11:16 AM, Detlef Riekenberg <wine.dev at web.de> wrote:
>   
>> With greeting from the current day.
>>
>>     
>
> hehe nice
>
>   
Like the part about world domination.  However, that will have to wait
for Linux/MacOSX to be the OS of choice.  :)

James McKenzie



From dank at kegel.com  Thu Apr  1 22:49:53 2010
From: dank at kegel.com (Dan Kegel)
Date: Thu, 1 Apr 2010 20:49:53 -0700
Subject: [PATCH 0/4] Unwinding the stack with Dwarf (CFA) information on 
	i386
Message-ID: <v2ha71bd89a1004012049je218c838sd9d6a546589ddbc0@mail.gmail.com>

Eric wrote:
> With this patch set, one can get rid of most of the non visible parameters values
> while using a backtrace in winedbg.

That's great news, thanks, hope it goes in soon!


From damjan.jov at gmail.com  Fri Apr  2 01:38:13 2010
From: damjan.jov at gmail.com (Damjan Jovanovic)
Date: Fri, 2 Apr 2010 08:38:13 +0200
Subject: Working on "DOS" VGA.
In-Reply-To: <alpine.DEB.1.10.1004012033270.3761@localhost.localdomain>
References: <4BB456A9.7000202@tdcadsl.dk>
	<p2wc8485d471004010224p68b253ebqcedb54d6834f693c@mail.gmail.com>
	<901B5DC6-95A3-4C29-B0C7-0925B784D495@gmx.at>
	<alpine.DEB.1.10.1004012033270.3761@localhost.localdomain>
Message-ID: <v2l9e89675b1004012338tc3c9f8efxbba9940fa5691717@mail.gmail.com>

On Thu, Apr 1, 2010 at 8:20 PM, Saulius Krasuckas <saulius2 at ar.fi.lt> wrote:
> * On Thu, 1 Apr 2010, Stefan D?singer wrote:
>> Am 01.04.2010 um 11:24 schrieb Roderick Colenbrander:
>>
>> > Myself I'm a bit worried about whether we should improve our DOS
>> > support even further. The problem is that more and more people are
>> > moving over to 64-bit Linux. While you can run 32-bit programs on a
>> > 64-bit system, there is no protected mode support (vm86; there is
>> > emulation in some cases using a kernel module).
>>
>> There's protected mode 32 bit, protected mode 16 bit, but no vm86 16
>> bit. So no real mode apps in Wine. We'd need to integrate a CPU emulator
>> or JIT compiler into Wine to get this working.
>
> DOSBox does something like this already. ?I lack ideas about to what
> extent DOSBox could be integrated, but at least its CPU emulator could do.
> Or maybe DOSBox could even be bridged/integrated and do all the DOS stuff
> here?
>
> Then IIRC there were discussions in the past about integrating Qemu into
> Wine. ?Some folks at Darwine have achieved this to some degree: [1]
>
> That probably won't fly directly [2] but some aspects of the design of an
> emulator integration can be investigated already, IMHO.
>
>
> S.
>
> [1] http://darwine.sourceforge.net/docs/dev-doc.xml
> [2] http://wiki.winehq.org/FAQ#head-5804ec2bb090feaf81f572993444efd8ec2a8569
>
>
>

AFAIK we can't integrate with DOSBox, Dosemu or FreeDOS for the same
reason we can't integrate with Samba: their GPL licence.

QEMU's CPU core library however is LGPL (http://wiki.qemu.org/License)
just like Wine - but in my experience QEMU is very slow when it does
full emulation.

Damjan


From hverbeet at gmail.com  Fri Apr  2 04:57:44 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 2 Apr 2010 11:57:44 +0200
Subject: [PATCH 3/5] Move palette uploading code over to arbfp 
	blit_shader.
In-Reply-To: <1270159133-14842-4-git-send-email-thunderbird2k@gmail.com>
References: <1270159133-14842-1-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-2-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-3-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-4-git-send-email-thunderbird2k@gmail.com>
Message-ID: <o2vd658b69e1004020257v43f47dc0k8e4924911f35e9e9@mail.gmail.com>

On 1 April 2010 23:58, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
>
> +static void upload_palette(IWineD3DSurfaceImpl *surface)
> +{
> + ? ?BYTE table[256][4];
> + ? ?IWineD3DDeviceImpl *device = surface->resource.device;
> + ? ?BOOL colorkey = (surface->CKeyFlags & WINEDDSD_CKSRCBLT) ? TRUE : FALSE;
> +
> + ? ?d3dfmt_p8_init_palette(surface, table, colorkey);
If that's really what you want, you need to add this function to
wined3d_private.h. Right now it will generate a warning. Perhaps it
should just be in surface.c though? This function depends on having an
active context. Where is "palette_texture" deleted?


From hverbeet at gmail.com  Fri Apr  2 05:15:36 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 2 Apr 2010 12:15:36 +0200
Subject: [PATCH 5/5] Rename color_fixup_supported to blit_supported 
	support and add additional checks.
In-Reply-To: <1270159133-14842-6-git-send-email-thunderbird2k@gmail.com>
References: <1270159133-14842-1-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-2-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-3-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-4-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-5-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-6-git-send-email-thunderbird2k@gmail.com>
Message-ID: <w2vd658b69e1004020315g50b01169x81124e41faf23b39@mail.gmail.com>

On 1 April 2010 23:58, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
> + ? ?/* In general we don't support any destination fixups except for P8. P8 fixup
> + ? ? * can occur in three cases:
> + ? ? * 1) Blit from p8 source to p8 destination, this is a source fixup and the
> + ? ? * ? ?destination fixup can be ignored.
> + ? ? * 2) LockRect on surface, LoadLocation takes care of the 'destination fixup'.
> + ? ? * 3) RealizePalette refreshes the palette of a surface. The surface is then
> + ? ? * ? ?both the source (the sysmem / texture copy) and the destination (drawable).
> + ? ? *
But you don't know all that. All you know is that you've got two
surfaces with certain properties. You could argue that since the
source and destination fixups are the same they cancel out, so that
you can do that blit as long as you either don't stretch or the fixup
is linear. However, in that case you also need to make sure the
blitter actually behaves like that.


From hverbeet at gmail.com  Fri Apr  2 05:29:38 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 2 Apr 2010 12:29:38 +0200
Subject: [PATCH 3/5] Move palette uploading code over to arbfp 
	blit_shader. [try 2]
In-Reply-To: <k2sc8485d471004020319s79c285a6g38809042aff17504@mail.gmail.com>
References: <k2sc8485d471004020319s79c285a6g38809042aff17504@mail.gmail.com>
Message-ID: <o2rd658b69e1004020329q89b80a99kd4fae2d7d90bd8c8@mail.gmail.com>

On 2 April 2010 12:19, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
> +void d3dfmt_p8_init_palette(IWineD3DSurfaceImpl *This, BYTE table[256][4], BOOL colorkey);

That function is internal to wined3d.


From saulius2 at ar.fi.lt  Fri Apr  2 06:42:00 2010
From: saulius2 at ar.fi.lt (Saulius Krasuckas)
Date: Fri, 2 Apr 2010 14:42:00 +0300 (EEST)
Subject: Working on "DOS" VGA.
In-Reply-To: <v2l9e89675b1004012338tc3c9f8efxbba9940fa5691717@mail.gmail.com>
References: <4BB456A9.7000202@tdcadsl.dk>
	<p2wc8485d471004010224p68b253ebqcedb54d6834f693c@mail.gmail.com>
	<901B5DC6-95A3-4C29-B0C7-0925B784D495@gmx.at>
	<alpine.DEB.1.10.1004012033270.3761@localhost.localdomain>
	<v2l9e89675b1004012338tc3c9f8efxbba9940fa5691717@mail.gmail.com>
Message-ID: <alpine.DEB.1.10.1004021409540.27695@localhost.localdomain>

* On Fri, 2 Apr 2010, Damjan Jovanovic wrote:
> On Thu, Apr 1, 2010 at 8:20 PM, Saulius Krasuckas <saulius2 at ar.fi.lt> wrote:
> > * On Thu, 1 Apr 2010, Stefan D?singer wrote:
> >>
> >> There's protected mode 32 bit, protected mode 16 bit, but no vm86 16 
> >> bit. So no real mode apps in Wine. We'd need to integrate a CPU 
> >> emulator or JIT compiler into Wine to get this working.
> >
> > DOSBox does something like this already. ?I lack ideas about to what 
> > extent DOSBox could be integrated, but at least its CPU emulator could 
> > do. Or maybe DOSBox could even be bridged/integrated and do all the 
> > DOS stuff here?
> >
> > Then IIRC there were discussions in the past about integrating Qemu into
> > Wine. ?Some folks at Darwine have achieved this to some degree: [1]
> 
> AFAIK we can't integrate with DOSBox, Dosemu or FreeDOS for the same 
> reason we can't integrate with Samba: their GPL licence.

I am profane at licensing, but does GPL restrict even usage of binary 
(linking, execution), or only a compilation of source code?

> in my experience QEMU is very slow when it does full emulation.

Should not be slower that eg. BOCHS.


S.

From thunderbird2k at gmail.com  Fri Apr  2 06:49:30 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Fri, 2 Apr 2010 13:49:30 +0200
Subject: [PATCH 5/5] Rename color_fixup_supported to blit_supported 
	support and add additional checks.
In-Reply-To: <w2vd658b69e1004020315g50b01169x81124e41faf23b39@mail.gmail.com>
References: <1270159133-14842-1-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-2-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-3-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-4-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-5-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-6-git-send-email-thunderbird2k@gmail.com>
	<w2vd658b69e1004020315g50b01169x81124e41faf23b39@mail.gmail.com>
Message-ID: <h2pc8485d471004020449lff85841qbf10b1b724b151d2@mail.gmail.com>

On Fri, Apr 2, 2010 at 12:15 PM, Henri Verbeet <hverbeet at gmail.com> wrote:
> On 1 April 2010 23:58, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
>> + ? ?/* In general we don't support any destination fixups except for P8. P8 fixup
>> + ? ? * can occur in three cases:
>> + ? ? * 1) Blit from p8 source to p8 destination, this is a source fixup and the
>> + ? ? * ? ?destination fixup can be ignored.
>> + ? ? * 2) LockRect on surface, LoadLocation takes care of the 'destination fixup'.
>> + ? ? * 3) RealizePalette refreshes the palette of a surface. The surface is then
>> + ? ? * ? ?both the source (the sysmem / texture copy) and the destination (drawable).
>> + ? ? *
> But you don't know all that. All you know is that you've got two
> surfaces with certain properties. You could argue that since the
> source and destination fixups are the same they cancel out, so that
> you can do that blit as long as you either don't stretch or the fixup
> is linear.
>

I must say that I'm not happy with the piece of code myself. The
problem is that the P8 code has more or less behaved like this the
past couple of years and yes that was bad and I don't think all
ugliness can be fixed one step.

The check in blt_supported is not so great and I'm not sure if it can
be improved well. If blit_supported had access to the source and
destination surface, it could just check if they are the same which
would handle the needs of corner cases like RealizePalette and
LoadLocation. RealizePalette doesn't really care about whether a blit
is supported at all, it just wants to know if p8 conversion is done by
the gpu, so it can call LoadLocation texture->drawable else
LoadLocation is called to perform a sysmem->(surface_conversion
texture->) drawable upload. The callers (LoadLocation) do care, since
they have to perform conversion or not (it is fun how the conversion
is entangled with the blit_shader). The main reason for not passing
surfaces to blit_supported was because of CheckSurfaceCapability and
CheckDeviceFormat which don't have access to them and need a sort
'color_fixup_supported'. Perhaps we should have two calls one which
works on pools/flags and one which works on surfaces (and which just
extracts the info and passes it to the other one)?

Another slightly related issue is d3dfmt_get_conv. Right now it loads
format info from the formats_table. The formats table contains opengl
extension checks and based on this sets the formats for the arbfp p8
shader or the ffp paletted_texture code. Perhaps we should ask the
blit_shader (once you know that it supports a certain blit) about the
format.  and so now and then afor  P8_UINT. The blit_shader can fall
back to d3dfmt_get_conv (or the formats table) when it doesn't perform
an override. The same could be done for color keying but the main
issue is that you don't know for what purpose you arrived in
LoadLocation, so asking the blit_shader won't make sense all cases.

> However, in that case you also need to make sure the
> blitter actually behaves like that.

Even before the ongoing rewrites this is basically how the P8 code
behaved. At some point the yuv fixups were added and then FIXMEs about
destination fixups appeared because the p8 code didn't receive a
rewrite yet. The blit_supported code works fine for p8 source -> p8
render_target while the p8 framebuffer -> texture path is quite broken
(I'm quite sure the fb_copy_ ones don't work; not sure about FBO;
read_from_framebuffer works though). But I think the framebuffer ->
texture code should be killed since I don't think we should advertise
P8 textures at all. This would only leave p8 source -> p8
render_target destination fixups and LoadLocation.

This was a long mail (hope you can make sense of it). To summarize the
P8 check in blit_supported is so ugly (and it might not work in all
cases) for a part due to CheckSurfaceCapability and CheckDeviceFormat.
I think that if I would kill the P8 texture support it might take away
your concerns. While I would like to keep the problem as simple as
possible I fear that some parts of d3dfmt_get_conv already need a
rewrite at this point since it is starting to make life difficult. The
main concern is how to perform surface conversion when needed and the
color keying (though for that a special location flag could work as
you suggested before).

Roderick


From johan.gill at gmail.com  Fri Apr  2 07:00:42 2010
From: johan.gill at gmail.com (Johan Gill)
Date: Fri, 2 Apr 2010 14:00:42 +0200
Subject: Working on "DOS" VGA.
In-Reply-To: <alpine.DEB.1.10.1004021409540.27695@localhost.localdomain>
References: <4BB456A9.7000202@tdcadsl.dk>
	<p2wc8485d471004010224p68b253ebqcedb54d6834f693c@mail.gmail.com>
	<901B5DC6-95A3-4C29-B0C7-0925B784D495@gmx.at>
	<alpine.DEB.1.10.1004012033270.3761@localhost.localdomain>
	<v2l9e89675b1004012338tc3c9f8efxbba9940fa5691717@mail.gmail.com>
	<alpine.DEB.1.10.1004021409540.27695@localhost.localdomain>
Message-ID: <w2h103c33d11004020500p86b6cf8cr63e3b988c0ef555f@mail.gmail.com>

On Fri, Apr 2, 2010 at 1:42 PM, Saulius Krasuckas <saulius2 at ar.fi.lt> wrote:
> * On Fri, 2 Apr 2010, Damjan Jovanovic wrote:
>> On Thu, Apr 1, 2010 at 8:20 PM, Saulius Krasuckas <saulius2 at ar.fi.lt> wrote:
>> > * On Thu, 1 Apr 2010, Stefan D?singer wrote:
>> >>
>> >> There's protected mode 32 bit, protected mode 16 bit, but no vm86 16
>> >> bit. So no real mode apps in Wine. We'd need to integrate a CPU
>> >> emulator or JIT compiler into Wine to get this working.
>> >
>> > DOSBox does something like this already. ?I lack ideas about to what
>> > extent DOSBox could be integrated, but at least its CPU emulator could
>> > do. Or maybe DOSBox could even be bridged/integrated and do all the
>> > DOS stuff here?
>> >
>> > Then IIRC there were discussions in the past about integrating Qemu into
>> > Wine. ?Some folks at Darwine have achieved this to some degree: [1]
>>
>> AFAIK we can't integrate with DOSBox, Dosemu or FreeDOS for the same
>> reason we can't integrate with Samba: their GPL licence.
>
> I am profane at licensing, but does GPL restrict even usage of binary
> (linking, execution), or only a compilation of source code?
>

I'm not a lawyer, but my understanding of the license is that you
cannot in general link to GPL code without making the whole binary
fall under GPL. The LGPL allows a program to link to it without
affecting the license of the program, though.

You can however have your non-GPL code execute a separate GPL binary
without affecting the legal state of your own code. The important part
is that the programs are kept separate.

/Johan Gill


From hverbeet at gmail.com  Fri Apr  2 08:24:18 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 2 Apr 2010 15:24:18 +0200
Subject: [PATCH 5/5] Rename color_fixup_supported to blit_supported 
	support and add additional checks.
In-Reply-To: <h2pc8485d471004020449lff85841qbf10b1b724b151d2@mail.gmail.com>
References: <1270159133-14842-1-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-2-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-3-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-4-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-5-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-6-git-send-email-thunderbird2k@gmail.com>
	<w2vd658b69e1004020315g50b01169x81124e41faf23b39@mail.gmail.com>
	<h2pc8485d471004020449lff85841qbf10b1b724b151d2@mail.gmail.com>
Message-ID: <i2od658b69e1004020624u4f7b2f33h536444494db00010@mail.gmail.com>

On 2 April 2010 13:49, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
> This was a long mail (hope you can make sense of it). To summarize the
> P8 check in blit_supported is so ugly (and it might not work in all
> cases) for a part due to CheckSurfaceCapability and CheckDeviceFormat.
> I think that if I would kill the P8 texture support it might take away
> your concerns. While I would like to keep the problem as simple as
> possible I fear that some parts of d3dfmt_get_conv already need a
> rewrite at this point since it is starting to make life difficult. The
> main concern is how to perform surface conversion when needed and the
> color keying (though for that a special location flag could work as
> you suggested before).
>
Can't you handle P8 -> P8 blits as regular ARGB -> ARGB blits as long
as you don't stretch? I.e., compared to this patch the main difference
would be that you don't set the P8 -> ARGB shader at all in that case.
This would be generic for all complex fixups as long as we don't
stretch, and for simple / linear fixups even with stretching.

Only slightly related, I think it's reasonable to require non-NULL
source / destination rectangles for internal interfaces. I.e., handle
NULL rectangles in the public wined3d entry points, but just require
them to be non-NULL everywhere else.


From twickline at gmail.com  Fri Apr  2 08:30:15 2010
From: twickline at gmail.com (Tom Wickline)
Date: Fri, 2 Apr 2010 21:30:15 +0800
Subject: MicroOLAP Database Designer for PostgreSQL
Message-ID: <q2h53e3a9931004020630y4c9b0050w8d2015d2011d0740@mail.gmail.com>

This might be considered spam but I thought I would share it.

MicroOLAP Database Designer for PostgreSQL with enhanced WineHQ support
released.

MicroOLAP Database Designer for PostgreSQL is an easy CASE tool with
intuitive graphical interface allowing you to build a clear and effective
database structure visually, see the complete picture (diagram) representing
all the tables, references between them, views, stored procedures and other
objects. Then you can easily generate a physical database on a server,
modify it according to any changes you made to the diagram using fast ALTER
statements.

http://www.wine-reviews.net/wine-reviews/news/microolap-database-designer-for-postgresql-with-enhanced-winehq-support-released.html

Cheers,
Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100402/bc2f763b/attachment.htm>

From ale.goujon at gmail.com  Fri Apr  2 10:44:41 2010
From: ale.goujon at gmail.com (GOUJON Alexandre)
Date: Fri, 02 Apr 2010 17:44:41 +0200
Subject: A possible way to fix cygwin issue
Message-ID: <4BB610E9.2020300@gmail.com>

Hi,

I'm just wondering if this approach may solve the issue.
I'm maybe totally wrong but there's no harm in trying...
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mingw_unicode_hack.c
Type: text/x-csrc
Size: 1610 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100402/d4e28402/attachment.c>

From julliard at winehq.org  Fri Apr  2 12:36:16 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 02 Apr 2010 19:36:16 +0200
Subject: A possible way to fix cygwin issue
In-Reply-To: <4BB610E9.2020300@gmail.com> (GOUJON Alexandre's message of "Fri, 
	02 Apr 2010 17:44:41 +0200")
References: <4BB610E9.2020300@gmail.com>
Message-ID: <87oci1oiy7.fsf@wine.dyndns.org>

GOUJON Alexandre <ale.goujon at gmail.com> writes:

> Hi,
>
> I'm just wondering if this approach may solve the issue.
> I'm maybe totally wrong but there's no harm in trying...

You don't want a W->A->W conversion for the command line, that's why
these programs are Unicode in the first place.

-- 
Alexandre Julliard
julliard at winehq.org


From stefandoesinger at gmx.at  Fri Apr  2 13:53:44 2010
From: stefandoesinger at gmx.at (=?iso-8859-1?Q?Stefan_D=F6singer?=)
Date: Fri, 2 Apr 2010 20:53:44 +0200
Subject: Working on "DOS" VGA.
In-Reply-To: <561569.57344.qm@web112615.mail.gq1.yahoo.com>
References: <561569.57344.qm@web112615.mail.gq1.yahoo.com>
Message-ID: <12E07332-A02B-414D-83DD-68F99AB0E31F@gmx.at>


Am 02.04.2010 um 02:08 schrieb chris ahrendt:

> Just my 2 phennings worth on this...
> Why reinvent the wheel... I would say instead of doing the emulator inside wine... or a JIT... why not have
> wine intersept the call to start the vm86 mode.. and forks off and starts DOSEMU or whatever DOS box system is
> configured.. That way wine doesnt have to worry about it...
Because you can mix modes in one executable. Take for example the average modern dos game: They start as real mode apps, then switch to a 32 bit protected mode dos extender(e.g. dos4gw.exe). I wouldn't be surprised if the app can transform itself into a Win16 app that tries to pop up a window. Wouldn't work well in Linux dosemu.

What may work better however is using a Win32 dosemu binary to load the app. Then we just have to make sure that windows dosemu can deal with such mixed apps.



From mikolg at yandex.ru  Fri Apr  2 10:49:34 2010
From: mikolg at yandex.ru (Mikhail Maroukhine)
Date: Fri, 02 Apr 2010 22:49:34 +0700
Subject: winedump: code cleanup
In-Reply-To: <877horozdf.fsf@wine.dyndns.org>
References: <op.vab0pvxk1j4v3x@home> <87oci56cui.fsf@wine.dyndns.org>
	<op.vahqudh71j4v3x@home> <877horozdf.fsf@wine.dyndns.org>
Message-ID: <op.vajjs1rz1j4v3x@home>

oops.
Absolutely agree.
Thanks for the comment. Will fix it.

Thanks,
Mikhail

On Fri, 02 Apr 2010 00:29:16 +0700, Alexandre Julliard  
<julliard at winehq.org> wrote:

> "Mikhail Maroukhine" <mikolg at yandex.ru> writes:
>
>> Hello,
>>
>> Could you clear a little what do you mean under "stop abusing"?
>> I've removed incorrect usage of constness in declaration for the
>> variable that is changed for sure.
>> I've send "try 2" patch with additional correction and extended log
>> message.
>
> I mean your new origProtoRef variable (which BTW uses a completely
> different naming convention from the rest of the function) to work
> around the fact that the argument is modified. Much better to use a
> properly named local variable to store results and not modify the
> argument.
>


-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/


From thunderbird2k at gmail.com  Fri Apr  2 15:49:05 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Fri, 2 Apr 2010 22:49:05 +0200
Subject: [PATCH 5/5] Rename color_fixup_supported to blit_supported 
	support and add additional checks.
In-Reply-To: <i2od658b69e1004020624u4f7b2f33h536444494db00010@mail.gmail.com>
References: <1270159133-14842-1-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-2-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-3-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-4-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-5-git-send-email-thunderbird2k@gmail.com>
	<1270159133-14842-6-git-send-email-thunderbird2k@gmail.com>
	<w2vd658b69e1004020315g50b01169x81124e41faf23b39@mail.gmail.com>
	<h2pc8485d471004020449lff85841qbf10b1b724b151d2@mail.gmail.com>
	<i2od658b69e1004020624u4f7b2f33h536444494db00010@mail.gmail.com>
Message-ID: <s2jc8485d471004021349mb3090df3ke0e9b053e1a17494@mail.gmail.com>

On Fri, Apr 2, 2010 at 3:24 PM, Henri Verbeet <hverbeet at gmail.com> wrote:
> On 2 April 2010 13:49, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
>> This was a long mail (hope you can make sense of it). To summarize the
>> P8 check in blit_supported is so ugly (and it might not work in all
>> cases) for a part due to CheckSurfaceCapability and CheckDeviceFormat.
>> I think that if I would kill the P8 texture support it might take away
>> your concerns. While I would like to keep the problem as simple as
>> possible I fear that some parts of d3dfmt_get_conv already need a
>> rewrite at this point since it is starting to make life difficult. The
>> main concern is how to perform surface conversion when needed and the
>> color keying (though for that a special location flag could work as
>> you suggested before).
>>
> Can't you handle P8 -> P8 blits as regular ARGB -> ARGB blits as long
> as you don't stretch? I.e., compared to this patch the main difference
> would be that you don't set the P8 -> ARGB shader at all in that case.
> This would be generic for all complex fixups as long as we don't
> stretch, and for simple / linear fixups even with stretching.
>
> Only slightly related, I think it's reasonable to require non-NULL
> source / destination rectangles for internal interfaces. I.e., handle
> NULL rectangles in the public wined3d entry points, but just require
> them to be non-NULL everywhere else.
>

P8 -> P8 blits could be handled as ARGB->ARGB blits. Another
alternative would be to disable opengl p8->p8 blits and perform the
blit in software. It would then follow the same route as LockRect
through LoadLocation. I would say that a software blit is more
efficient than a software P8->ARGB conversion but if the app doesn't
reload the source contents frequently, it would be more efficient if
it stays on the GL side. This is more a ddraw-gl redesign point. In
games like Jedi Knight, C&C and others this would save a lot of
framebuffer read backs if GL is used.

Regarding the non-NULL rects it is what I'm trying to move to.
BltOverride doesn't really rely on it anymore (the surface_get_rect
lines can be moved back to its callers).

Roderick

Roderick


From madewokherd+8cd9 at gmail.com  Fri Apr  2 16:16:53 2010
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Fri, 2 Apr 2010 15:16:53 -0600
Subject: rfc: mscoree: Use the mono embedding api instead of invoking 
	mono.exe.
Message-ID: <q2lced95fe1004021416z2a134ba2ia2ec725a2e30e151@mail.gmail.com>

This is a patch that has mscoree.dll load mono.dll in-process rather
than starting mono.exe. This is needed so that (among other things),
the running process gets the correct values from GetCommandLine and
GetModuleFileName(0).

The code quality is probably not very good, so I'm sending it to
wine-devel for feedback first.
-------------- next part --------------
From 483da15818d222dc78f5074a7dbfe99882de8228 Mon Sep 17 00:00:00 2001
From: Vincent Povirk <vincent at codeweavers.com>
Date: Fri, 2 Apr 2010 15:33:12 -0500
Subject: [PATCH] mscoree: Use the mono embedding api instead of invoking mono.exe.

---
 dlls/mscoree/Makefile.in       |    2 +-
 dlls/mscoree/mscoree_main.c    |  211 +++++++++++++++++++++++++++++++---------
 dlls/mscoree/mscoree_private.h |   13 +++
 3 files changed, 180 insertions(+), 46 deletions(-)

diff --git a/dlls/mscoree/Makefile.in b/dlls/mscoree/Makefile.in
index 57e9819..c52589e 100644
--- a/dlls/mscoree/Makefile.in
+++ b/dlls/mscoree/Makefile.in
@@ -3,7 +3,7 @@ TOPOBJDIR = ../..
 SRCDIR    = @srcdir@
 VPATH     = @srcdir@
 MODULE    = mscoree.dll
-IMPORTS   = uuid advapi32 kernel32
+IMPORTS   = uuid advapi32 kernel32 shell32
 
 C_SRCS = \
 	corruntimehost.c \
diff --git a/dlls/mscoree/mscoree_main.c b/dlls/mscoree/mscoree_main.c
index 5b20c85..76fbbe0 100644
--- a/dlls/mscoree/mscoree_main.c
+++ b/dlls/mscoree/mscoree_main.c
@@ -21,11 +21,14 @@
 
 #include <stdarg.h>
 
+#include "wine/unicode.h"
 #include "windef.h"
 #include "winbase.h"
 #include "winuser.h"
+#include "winnls.h"
 #include "winreg.h"
 #include "ole2.h"
+#include "shellapi.h"
 
 #include "initguid.h"
 #include "cor.h"
@@ -36,9 +39,8 @@
 
 WINE_DEFAULT_DEBUG_CHANNEL( mscoree );
 
-static LPWSTR get_mono_exe(void)
+static LPWSTR get_mono_path(DWORD major_version, DWORD minor_version, LPCWSTR subpath)
 {
-    static const WCHAR mono_exe[] = {'b','i','n','\\','m','o','n','o','.','e','x','e',' ',0};
     static const WCHAR mono_key[] = {'S','o','f','t','w','a','r','e','\\','N','o','v','e','l','l','\\','M','o','n','o',0};
     static const WCHAR defaul_clr[] = {'D','e','f','a','u','l','t','C','L','R',0};
     static const WCHAR install_root[] = {'S','d','k','I','n','s','t','a','l','l','R','o','o','t',0};
@@ -74,16 +76,135 @@ static LPWSTR get_mono_exe(void)
     }
     RegCloseKey(key);
 
-    size = len + sizeof(slash) + sizeof(mono_exe);
+    size = len + sizeof(slash) + (lstrlenW(subpath) + 1) * sizeof(WCHAR);
     if (!(ret = HeapAlloc(GetProcessHeap(), 0, size))) return NULL;
 
     lstrcpyW(ret, root);
     lstrcatW(ret, slash);
-    lstrcatW(ret, mono_exe);
+    lstrcatW(ret, subpath);
 
     return ret;
 }
 
+static LPWSTR get_mono_exe(void)
+{
+    static const WCHAR mono_exe[] = {'b','i','n','\\','m','o','n','o','.','e','x','e',' ',0};
+
+    return get_mono_path(0, 0, mono_exe);
+}
+
+static CRITICAL_SECTION mono_lib_cs;
+static CRITICAL_SECTION_DEBUG mono_lib_cs_debug =
+{
+    0, 0, &mono_lib_cs,
+    { &mono_lib_cs_debug.ProcessLocksList, 
+      &mono_lib_cs_debug.ProcessLocksList },
+      0, 0, { (DWORD_PTR)(__FILE__ ": mono_lib_cs") }
+};
+static CRITICAL_SECTION mono_lib_cs = { &mono_lib_cs_debug, -1, 0, 0, 0, 0 };
+
+HMODULE mono_handle;
+
+void (*mono_config_parse)(const char *filename);
+MonoAssembly* (*mono_domain_assembly_open) (MonoDomain *domain, const char *name);
+void (*mono_jit_cleanup)(MonoDomain *domain);
+int (*mono_jit_exec)(MonoDomain *domain, MonoAssembly *assembly, int argc, char *argv[]);
+MonoDomain* (*mono_jit_init)(const char *file);
+int (*mono_jit_set_trace_options)(const char* options);
+void (*mono_set_dirs)(const char *assembly_dir, const char *config_dir);
+
+static void set_environment(LPCWSTR bin_path)
+{
+    WCHAR path_env[MAX_PATH];
+    int len;
+
+    static const WCHAR pathW[] = {'P','A','T','H',0};
+
+    /* We have to modify PATH as Mono loads other DLLs from this directory. */
+    GetEnvironmentVariableW(pathW, path_env, sizeof(path_env)/sizeof(WCHAR));
+    len = strlenW(path_env);
+    path_env[len++] = ';';
+    strcpyW(path_env+len, bin_path);
+    SetEnvironmentVariableW(pathW, path_env);
+}
+
+static HMODULE load_mono(void)
+{
+    static const WCHAR mono_dll[] = {'b','i','n','\\','m','o','n','o','.','d','l','l',0};
+    static const WCHAR libmono_dll[] = {'b','i','n','\\','l','i','b','m','o','n','o','.','d','l','l',0};
+    static const WCHAR bin[] = {'b','i','n',0};
+    static const WCHAR lib[] = {'l','i','b',0};
+    static const WCHAR etc[] = {'e','t','c',0};
+    HMODULE result;
+    LPWSTR mono_dll_path=NULL, mono_bin_path=NULL, mono_lib_path=NULL, mono_etc_path=NULL;
+    char mono_lib_path_a[MAX_PATH], mono_etc_path_a[MAX_PATH];
+
+    EnterCriticalSection(&mono_lib_cs);
+
+    if (!mono_handle)
+    {
+        mono_dll_path = get_mono_path(0, 0, mono_dll);
+        if (!mono_dll_path) goto end;
+
+        mono_bin_path = get_mono_path(0, 0, bin);
+        set_environment(mono_bin_path);
+
+        mono_lib_path = get_mono_path(0, 0, lib);
+        mono_etc_path = get_mono_path(0, 0, etc);
+
+        WideCharToMultiByte(CP_UTF8, 0, mono_lib_path, -1, mono_lib_path_a, MAX_PATH, NULL, NULL);
+        WideCharToMultiByte(CP_UTF8, 0, mono_etc_path, -1, mono_etc_path_a, MAX_PATH, NULL, NULL);
+
+        mono_handle = LoadLibraryW(mono_dll_path);
+
+        if (!mono_handle)
+        {
+            HeapFree(GetProcessHeap(), 0, mono_dll_path);
+            mono_dll_path = get_mono_path(0, 0, libmono_dll);
+            mono_handle = LoadLibraryW(mono_dll_path);
+        }
+
+        if (!mono_handle) goto end;
+
+#define LOAD_MONO_FUNCTION(x) do { \
+    x = (void*)GetProcAddress(mono_handle, #x); \
+    if (!x) { \
+        mono_handle = NULL; \
+        goto end; \
+    } \
+} while (0);
+
+        LOAD_MONO_FUNCTION(mono_config_parse);
+        LOAD_MONO_FUNCTION(mono_domain_assembly_open);
+        LOAD_MONO_FUNCTION(mono_jit_cleanup);
+        LOAD_MONO_FUNCTION(mono_jit_exec);
+        LOAD_MONO_FUNCTION(mono_jit_init);
+        LOAD_MONO_FUNCTION(mono_jit_set_trace_options);
+        LOAD_MONO_FUNCTION(mono_set_dirs);
+
+#undef LOAD_MONO_FUNCTION
+
+        mono_set_dirs(mono_lib_path_a, mono_etc_path_a);
+
+        mono_config_parse(NULL);
+    }
+
+end:
+    HeapFree(GetProcessHeap(), 0, mono_dll_path);
+    HeapFree(GetProcessHeap(), 0, mono_bin_path);
+    HeapFree(GetProcessHeap(), 0, mono_lib_path);
+    HeapFree(GetProcessHeap(), 0, mono_etc_path);
+
+    result = mono_handle;
+
+    LeaveCriticalSection(&mono_lib_cs);
+
+    if (!result)
+        MESSAGE("wine: Install the Windows version of Mono to run .NET executables\n");
+
+    return result;
+}
+
 HRESULT WINAPI CorBindToRuntimeHost(LPCWSTR pwszVersion, LPCWSTR pwszBuildFlavor,
                                     LPCWSTR pwszHostConfigFile, VOID *pReserved,
                                     DWORD startupFlags, REFCLSID rclsid,
@@ -138,68 +259,68 @@ BOOL WINAPI _CorDllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)
     return TRUE;
 }
 
-__int32 WINAPI _CorExeMain(void)
+static void get_utf8_args(int *argc, char ***argv)
 {
-    STARTUPINFOW si;
-    PROCESS_INFORMATION pi;
-    WCHAR *mono_exe, *cmd_line;
-    DWORD size, exit_code;
-    static const WCHAR WINE_MONO_TRACE[]={'W','I','N','E','_','M','O','N','O','_','T','R','A','C','E',0};
-    static const WCHAR trace_switch_start[]={'"','-','-','t','r','a','c','e','=',0};
-    static const WCHAR trace_switch_end[]={'"',' ',0};
-    int trace_size;
-    WCHAR trace_setting[256];
+    WCHAR **argvw;
+    int size=0, i;
+    char *current_arg;
 
-    if (!(mono_exe = get_mono_exe()))
+    argvw = CommandLineToArgvW(GetCommandLineW(), argc);
+
+    for (i=0; i<*argc; i++)
     {
-        MESSAGE("install the Windows version of Mono to run .NET executables\n");
-        return -1;
+        size += sizeof(char*);
+        size += WideCharToMultiByte(CP_UTF8, 0, argvw[i], -1, NULL, 0, NULL, NULL);
     }
+    size += sizeof(char*);
 
-    trace_size = GetEnvironmentVariableW(WINE_MONO_TRACE, trace_setting, sizeof(trace_setting)/sizeof(WCHAR));
+    *argv = HeapAlloc(GetProcessHeap(), 0, size);
+    current_arg = (char*)(*argv + *argc + 1);
 
-    size = (lstrlenW(mono_exe) + lstrlenW(GetCommandLineW()) + 1) * sizeof(WCHAR);
+    for (i=0; i<*argc; i++)
+    {
+        (*argv)[i] = current_arg;
+        current_arg += WideCharToMultiByte(CP_UTF8, 0, argvw[i], -1, current_arg, size, NULL, NULL);
+    }
 
-    if (trace_size)
-        size += (trace_size + lstrlenW(trace_switch_start) + lstrlenW(trace_switch_end)) * sizeof(WCHAR);
+    (*argv)[*argc] = NULL;
+
+    HeapFree(GetProcessHeap(), 0, argvw);
+}
 
-    if (!(cmd_line = HeapAlloc(GetProcessHeap(), 0, size)))
+__int32 WINAPI _CorExeMain(void)
+{
+    int exit_code;
+    int trace_size;
+    char trace_setting[256];
+    int argc;
+    char **argv;
+    MonoDomain *domain;
+    MonoAssembly *assembly;
+
+    if (!load_mono())
     {
-        HeapFree(GetProcessHeap(), 0, mono_exe);
         return -1;
     }
 
-    lstrcpyW(cmd_line, mono_exe);
-    HeapFree(GetProcessHeap(), 0, mono_exe);
+    get_utf8_args(&argc, &argv);
+
+    trace_size = GetEnvironmentVariableA("WINE_MONO_TRACE", trace_setting, sizeof(trace_setting)/sizeof(WCHAR));
 
     if (trace_size)
     {
-        lstrcatW(cmd_line, trace_switch_start);
-        lstrcatW(cmd_line, trace_setting);
-        lstrcatW(cmd_line, trace_switch_end);
+        mono_jit_set_trace_options(trace_setting);
     }
 
-    lstrcatW(cmd_line, GetCommandLineW());
-
-    TRACE("new command line: %s\n", debugstr_w(cmd_line));
+    domain = mono_jit_init(argv[0]);
 
-    memset(&si, 0, sizeof(si));
-    si.cb = sizeof(si);
-    if (!CreateProcessW(NULL, cmd_line, NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi))
-    {
-        HeapFree(GetProcessHeap(), 0, cmd_line);
-        return -1;
-    }
-    HeapFree(GetProcessHeap(), 0, cmd_line);
+    assembly = mono_domain_assembly_open(domain, argv[0]);
 
-    /* wait for the process to exit */
-    WaitForSingleObject(pi.hProcess, INFINITE);
-    GetExitCodeProcess(pi.hProcess, &exit_code);
+    exit_code = mono_jit_exec(domain, assembly, argc, argv);
 
-    CloseHandle(pi.hThread);
-    CloseHandle(pi.hProcess);
+    mono_jit_cleanup(domain);
 
-    return (int)exit_code;
+    return exit_code;
 }
 
 __int32 WINAPI _CorExeMain2(PBYTE ptrMemory, DWORD cntMemory, LPWSTR imageName, LPWSTR loaderName, LPWSTR cmdLine)
diff --git a/dlls/mscoree/mscoree_private.h b/dlls/mscoree/mscoree_private.h
index f329455..f14da1d 100644
--- a/dlls/mscoree/mscoree_private.h
+++ b/dlls/mscoree/mscoree_private.h
@@ -22,5 +22,18 @@
 
 extern IUnknown* create_corruntimehost(void);
 
+/* Mono 2.6 embedding */
+typedef struct _MonoDomain MonoDomain;
+typedef struct _MonoAssembly MonoAssembly;
+
+extern HMODULE mono_handle;
+
+extern void (*mono_config_parse)(const char *filename);
+extern MonoAssembly* (*mono_domain_assembly_open) (MonoDomain *domain, const char *name);
+extern void (*mono_jit_cleanup)(MonoDomain *domain);
+extern int (*mono_jit_exec)(MonoDomain *domain, MonoAssembly *assembly, int argc, char *argv[]);
+extern MonoDomain* (*mono_jit_init)(const char *file);
+extern int (*mono_jit_set_trace_options)(const char* options);
+extern void (*mono_set_dirs)(const char *assembly_dir, const char *config_dir);
 
 #endif   /* __MSCOREE_PRIVATE__ */
-- 
1.6.3.3

From scott at open-vote.org  Fri Apr  2 18:50:06 2010
From: scott at open-vote.org (Scott Ritchie)
Date: Fri, 02 Apr 2010 16:50:06 -0700
Subject: Mono integration
In-Reply-To: <s2hced95fe1004011018oc057280fs4ca99b1b3d4414c1@mail.gmail.com>
References: <s2gced95fe1004010914kd39d73f2ia4c6c1103b7a117c@mail.gmail.com>	<v2zb6bb06271004010920y4c32e222v97c7ea437b93bd70@mail.gmail.com>	<m2rced95fe1004010927wfa55c801w6934b571ffe43d07@mail.gmail.com>	<j2j8278b1b1004010954k59b8a02cz849b70d6a17f6143@mail.gmail.com>	<o2iced95fe1004010955t64d515aaz6a2bf8eb6cc6ff96@mail.gmail.com>	<loom.20100401T190215-118@post.gmane.org>
	<s2hced95fe1004011018oc057280fs4ca99b1b3d4414c1@mail.gmail.com>
Message-ID: <4BB682AE.3010206@open-vote.org>

On 04/01/2010 10:18 AM, Vincent Povirk wrote:
>> AFAIK mono doesn't implement WPF,  so any .NET app that uses it is likely to
>> fail in mono. Correct me if i'm wrong
>
> This is true, and according to
> http://www.mono-project.com/Compatibility they have no plans to
> implement it. But someone could, and even if the mono project doesn't
> want it, it would be useful for Wine.
>
>

For what it's worth when I've approached Novel people they've been quite 
open to the idea of greater cooperation with the Wine project.  I think 
we can benefit greatly if we made it very clear what Wine wants from 
Mono, and especially what paid Novell people won't be doing (and thus 
needs to be done by the community).

Thank you for starting that wiki page, it's a great step in that direction.

Thanks,
Scott  Ritchie


From jacek at codeweavers.com  Fri Apr  2 18:56:03 2010
From: jacek at codeweavers.com (Jacek Caban)
Date: Sat, 03 Apr 2010 01:56:03 +0200
Subject: rfc: mscoree: Use the mono embedding api instead of invoking
	mono.exe.
In-Reply-To: <q2lced95fe1004021416z2a134ba2ia2ec725a2e30e151@mail.gmail.com>
References: <q2lced95fe1004021416z2a134ba2ia2ec725a2e30e151@mail.gmail.com>
Message-ID: <4BB68413.3010208@codeweavers.com>

Hi Vincent,

On 4/2/10 11:16 PM, Vincent Povirk wrote:
> This is a patch that has mscoree.dll load mono.dll in-process rather
> than starting mono.exe. This is needed so that (among other things),
> the running process gets the correct values from GetCommandLine and
> GetModuleFileName(0).
>
> The code quality is probably not very good, so I'm sending it to
> wine-devel for feedback first.
>    

I don't know almost anything about embedding mono, but I've reviewed 
your patch. It mostly looks good for me, so my comments are more 
suggestions than real problems.

+static LPWSTR get_mono_path(DWORD major_version, DWORD minor_version, LPCWSTR subpath)

AFAICS you don't use *_version arguments, so they should be removed.

+    size = len + sizeof(slash) + (lstrlenW(subpath) + 1) * sizeof(WCHAR);
      if (!(ret = HeapAlloc(GetProcessHeap(), 0, size))) return NULL;

      lstrcpyW(ret, root);
      lstrcatW(ret, slash);
-    lstrcatW(ret, mono_exe);
+    lstrcatW(ret, subpath);

It's not really important as it only causes the buffer to be one char too big, but you count nullbyte both in sizeof(slash) and strlen+1. (It's already existing code and a matter of style, but strcat for one char doesn't look nice).

+static LPWSTR get_mono_exe(void)
+{
+    static const WCHAR mono_exe[] = {'b','i','n','\\','m','o','n','o','.','e','x','e',' ',0};
+
+    return get_mono_path(0, 0, mono_exe);
+}

You don't use this function, so it should be removed.

+        mono_dll_path = get_mono_path(0, 0, mono_dll);
+        if (!mono_dll_path) goto end;
+
+        mono_bin_path = get_mono_path(0, 0, bin);
+        set_environment(mono_bin_path);
+
+        mono_lib_path = get_mono_path(0, 0, lib);
+        mono_etc_path = get_mono_path(0, 0, etc);

Each get_mono_path performs a few registry operations. It feels right to fetch the path once and simply concatenate subdirs later.

+        current_arg += WideCharToMultiByte(CP_UTF8, 0, argvw[i], -1, current_arg, size, NULL, NULL);

size is not the right size here, but it's not really important as there won't be an overflow anyway.

+    trace_size = GetEnvironmentVariableA("WINE_MONO_TRACE", trace_setting, sizeof(trace_setting)/sizeof(WCHAR));

      if (trace_size)
      {
-        lstrcatW(cmd_line, trace_switch_start);
-        lstrcatW(cmd_line, trace_setting);
-        lstrcatW(cmd_line, trace_switch_end);
+        mono_jit_set_trace_options(trace_setting);

This should probably go to separated patch.

Error handling in _CorExeMain could be improved.

+/* Mono 2.6 embedding */
+typedef struct _MonoDomain MonoDomain;
+typedef struct _MonoAssembly MonoAssembly;
+
+extern HMODULE mono_handle;
+
+extern void (*mono_config_parse)(const char *filename);
+extern MonoAssembly* (*mono_domain_assembly_open) (MonoDomain *domain, const char *name);
+extern void (*mono_jit_cleanup)(MonoDomain *domain);
+extern int (*mono_jit_exec)(MonoDomain *domain, MonoAssembly *assembly, int argc, char *argv[]);
+extern MonoDomain* (*mono_jit_init)(const char *file);
+extern int (*mono_jit_set_trace_options)(const char*  options);
+extern void (*mono_set_dirs)(const char *assembly_dir, const char *config_dir);

Most of these (all?) are not needed outside mscoree_main.c so they should be static.


Jacek



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100403/cfce778f/attachment.htm>

From jacek at codeweavers.com  Fri Apr  2 19:12:22 2010
From: jacek at codeweavers.com (Jacek Caban)
Date: Sat, 03 Apr 2010 02:12:22 +0200
Subject: [PATCH 4/4] mshtml: Always load FTP, HTTP, and HTTPS URLs through
	Wine
In-Reply-To: <4BB67053.3040804@codeweavers.com>
References: <4BB67053.3040804@codeweavers.com>
Message-ID: <4BB687E6.8070700@codeweavers.com>

Hi Andrew,

On 4/3/10 12:31 AM, Andrew Eikum wrote:
> ---
>  dlls/mshtml/nsio.c |   10 +++-------
>  1 files changed, 3 insertions(+), 7 deletions(-)

-    if(!strncmp(spec, "wine:", 5)) {
-        spec += 5;

You can't remove this part. We don't want to pass "wine:" prefix to 
set_wine_url.

+    }else if(strncmp(spec, "ftp:", 4)
+            || strncmp(spec, "http:", 5)
+            || strncmp(spec, "https:", 6)) {

After removing is_wine_url, the else part should be always executed.


Jacek



From ngompa13 at gmail.com  Fri Apr  2 20:55:49 2010
From: ngompa13 at gmail.com (=?ISO-2022-JP?B?U2lyIEdhbGxhbnRtb24gKBskQiVLITwlayEmJTQlcyVRGyhCKQ==?=)
Date: Fri, 2 Apr 2010 20:55:49 -0500
Subject: Mono integration
In-Reply-To: <4BB682AE.3010206@open-vote.org>
References: <s2gced95fe1004010914kd39d73f2ia4c6c1103b7a117c@mail.gmail.com>
	<v2zb6bb06271004010920y4c32e222v97c7ea437b93bd70@mail.gmail.com>
	<m2rced95fe1004010927wfa55c801w6934b571ffe43d07@mail.gmail.com>
	<j2j8278b1b1004010954k59b8a02cz849b70d6a17f6143@mail.gmail.com>
	<o2iced95fe1004010955t64d515aaz6a2bf8eb6cc6ff96@mail.gmail.com>
	<loom.20100401T190215-118@post.gmane.org>
	<s2hced95fe1004011018oc057280fs4ca99b1b3d4414c1@mail.gmail.com>
	<4BB682AE.3010206@open-vote.org>
Message-ID: <k2l8278b1b1004021855q7fa8f76taf5e62dab3696fa8@mail.gmail.com>

On Fri, Apr 2, 2010 at 6:50 PM, Scott Ritchie <scott at open-vote.org> wrote:

> On 04/01/2010 10:18 AM, Vincent Povirk wrote:
>
>> AFAIK mono doesn't implement WPF,  so any .NET app that uses it is likely
>>> to
>>> fail in mono. Correct me if i'm wrong
>>>
>>
>> This is true, and according to
>> http://www.mono-project.com/Compatibility they have no plans to
>> implement it. But someone could, and even if the mono project doesn't
>> want it, it would be useful for Wine.
>>
>>
>>
> For what it's worth when I've approached Novel people they've been quite
> open to the idea of greater cooperation with the Wine project.  I think we
> can benefit greatly if we made it very clear what Wine wants from Mono, and
> especially what paid Novell people won't be doing (and thus needs to be done
> by the community).
>
> Thank you for starting that wiki page, it's a great step in that direction.
>
> Thanks,
> Scott  Ritchie
>
>
>
According to the Mono page here (
http://www.mono-project.com/Mono_Project_Roadmap#Unsupported_technologies ),
the Mono project isn't adverse to having work done to implement WPF, WCF,
and WF, but they currently don't have an inclination to do so.

The question is, are there people in the Wine community skilled in .NET to
bring these technologies to Wine through Mono?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100402/e4fa8a60/attachment.htm>

From n1th33sh at gmail.com  Sat Apr  3 01:08:59 2010
From: n1th33sh at gmail.com (nitheesh kl)
Date: Sat, 3 Apr 2010 11:38:59 +0530
Subject: regarding the participation in gsoc 2010
Message-ID: <j2zcca4675d1004022308x1959003er94794e485251b98c@mail.gmail.com>

hello sir,
    i am nitheesh.k.l. i am a second year engineering student of computer
science studying in PES institute of technology,Bangalore,India. in this
summer i'm willing to participate in the google summer of code and i was
really interested in your idea to solve the vga display modes problem in
wine.
    i work on both windows and linux and previously used to work in dos. i
do most of my work in linux and i use wine to run some of my dos and windows
programs. but for a long time now i'm not able to run some of my dos
programs properly in wine. i've tried my ways but was not successful.since
people in wine have come forward to solve this i feel that i can work with
you guys to solve the problem.

my experience:
    as  mentioned before i used to work on dos and done some work in it.

1)    i written some small system diagnostics tools. the first is the ports
diagnostics tool.it helps the user to check whether his ports are working
fine or not.
    it includes both serial and parallel port and checks for all the baud
rated. it provides both software loop back and hardware tests for user
satisfaction, and         it also comes with an simple and attractive gui.
    i've also implemented a small tool just like norton utilities(NU in
dos)which is about 75% complete(could not complete as my exams started)
2)    i've also worked on building an editor in dos and as my part in it
i've created the gui for the editor.
    i've also designed a gui for an antivirus in dos
3)    last summer i developed some small games for some of the problems in
computer science of which the towers of hanoi is the major one.
    it has a gui which displays the disks of various sizes and the pegs to
move them around.it initially ask for the number of disk and once the
specified number of disks are created the user can then move them around
using the arrow keys to complete the solution. my major intention in
developing this is that the     younger students can use this to understand
the problem and its solution in a fun and enjoyable way.
4)    As a hobby ive also developed a software to burn the hex file to a
microcontroller. it has a very user friendly user interface(similar to turbo
c++) through which the user can select the required file and then dump it to
the device.it provides support for two major microcontroller used in our
college. the software displays the complete hex file,its ascii equivalent
and the actual hex code that runs on the device.


i feel that since i've worked on both platforms and personally experienced
the problem, i can and am interested in fixing the bugs. so with this
experience am i eligible to work with you in this years gsoc. if so then
i'll send my application immediately.i kindly request you to reply sir.

thank you.
Nitheesh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100403/24809fc9/attachment.htm>

From jacek at codeweavers.com  Sat Apr  3 03:47:56 2010
From: jacek at codeweavers.com (Jacek Caban)
Date: Sat, 03 Apr 2010 10:47:56 +0200
Subject: Polish translation for release 1.1.42
In-Reply-To: <1270278262-6877-1-git-send-email-lukasz.wojnilowicz@gmail.com>
References: <1270278262-6877-1-git-send-email-lukasz.wojnilowicz@gmail.com>
Message-ID: <4BB700BC.1060608@codeweavers.com>

Hi ?ukasz,

On 4/3/10 9:04 AM, ?ukasz Wojni?owicz wrote:
> ---
>   news/pl/2010040201.xml |   18 ++++++++++++++++++
>   1 files changed, 18 insertions(+), 0 deletions(-)
>   create mode 100644 news/pl/2010040201.xml
>
>    
+<li>Wsparcie dla wsp????dzielonych 32/64-bitowych instalator??w.</li>

That's not what English version says.


Jacek



From dank at kegel.com  Sat Apr  3 09:06:36 2010
From: dank at kegel.com (Dan Kegel)
Date: Sat, 3 Apr 2010 07:06:36 -0700
Subject: regarding the participation in gsoc 2010
Message-ID: <p2ha71bd89a1004030706zb6c2506dz3a8ed44d350a4a63@mail.gmail.com>

Hi Nitheesh,
it does sound like DOS is near and dear to your heart.

What's the first small problem you would solve?  Sending
a good patch for that would be an eloquent way of framing
your proposal.
- Dan


From julliard at winehq.org  Sat Apr  3 10:34:56 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Sat, 03 Apr 2010 17:34:56 +0200
Subject: Working on "DOS" VGA.
In-Reply-To: <12E07332-A02B-414D-83DD-68F99AB0E31F@gmx.at> ("Stefan
	=?utf-8?Q?D=C3=B6singer=22's?= message of "Fri,
	2 Apr 2010 20:53:44 +0200")
References: <561569.57344.qm@web112615.mail.gq1.yahoo.com>
	<12E07332-A02B-414D-83DD-68F99AB0E31F@gmx.at>
Message-ID: <87hbnso8gv.fsf@wine.dyndns.org>

Stefan D?singer <stefandoesinger at gmx.at> writes:

> Am 02.04.2010 um 02:08 schrieb chris ahrendt:
>
>> Just my 2 phennings worth on this...
>> Why reinvent the wheel... I would say instead of doing the emulator inside wine... or a JIT... why not have
>> wine intersept the call to start the vm86 mode.. and forks off and starts DOSEMU or whatever DOS box system is
>> configured.. That way wine doesnt have to worry about it...
> Because you can mix modes in one executable. Take for example the
> average modern dos game: They start as real mode apps, then switch to
> a 32 bit protected mode dos extender(e.g. dos4gw.exe). I wouldn't be
> surprised if the app can transform itself into a Win16 app that tries
> to pop up a window. Wouldn't work well in Linux dosemu.

DOS apps can't do that. Pretty much the only thing you really have to
share is the filesystem, and it should be easy to configure DosBox to
mount ~/.wine/drive_c, and to invoke Wine when a DOS app starts a
Windows binary.

There's no reason to replicate DosBox inside Wine. On the contrary, a
nice project would be to improve integration with an external DOS
emulator and then rip out the half-broken vm86 support from Wine.

-- 
Alexandre Julliard
julliard at winehq.org


From computers57 at hotmail.com  Sat Apr  3 14:29:10 2010
From: computers57 at hotmail.com (C.W. Betts)
Date: Sat, 3 Apr 2010 13:29:10 -0600
Subject: win16 patches
In-Reply-To: <y2g3a768c551003311758l2be71253u7190043411847d4a@mail.gmail.com>
References: <y2g3a768c551003311758l2be71253u7190043411847d4a@mail.gmail.com>
Message-ID: <BLU0-SMTP152C594D9A5105A2CCEF39B91B0@phx.gbl>

As far as attribution goes, it was originally done by Jennifer Lai. My patch is more or less bringing these patches up to the current code.

I am curious why these patches weren't applied in the first place.
On Mar 31, 2010, at 6:58 PM, Juan Lang wrote:

> Hi C.W., this isn't going to fly.  For one thing,
> 
> diff --git a/dlls/kernel32/comm.c b/dlls/kernel32/comm.c
> index f4edfd3..a85f158 100644
> --- a/dlls/kernel32/comm.c
> 
> There's no attribution in this patch.  It can't get committed without
> valid attribution.
> 
> For another thing, one patch per email, please.
"One patch per email"? Please elaborate. Do you mean per Wine component?
> 
> For another,
> 
> -    if(!vga_text_console)
> +//    if(!vga_text_console)
> 
> C++ comments aren't allowed, and removing a line by commenting it out
> is frowned upon.  If it's really not needed, just remove it.  But  you
> need to justify why it's no longer needed.
> 
> More errors remain, but I'll stop at these.  This set is well below
> acceptable yet, I'm afraid.
> --Juan
> 



From dank at kegel.com  Sat Apr  3 15:11:04 2010
From: dank at kegel.com (Dan Kegel)
Date: Sat, 3 Apr 2010 13:11:04 -0700
Subject: win16 patches
Message-ID: <n2ya71bd89a1004031311u9e117ea2n1b0a37950b9d4e03@mail.gmail.com>

C.W. Betts asked:
> I am curious why these patches weren't applied in the first place.

Because of problems like the ones Juan referred to.

> > For another thing, one patch per email, please.
> "One patch per email"? Please elaborate. Do you mean per Wine component?

He means each post to wine-patches should fix just one bug.
http://bugs.winehq.org/show_bug.cgi?id=9850 is a bad
bug report, really; it needs to be broken up into individual
bugs, and then a clean patch sent for each.
- Dan


From celticht32 at yahoo.com  Sat Apr  3 18:30:17 2010
From: celticht32 at yahoo.com (Chris Ahrendt)
Date: Sat, 3 Apr 2010 16:30:17 -0700 (PDT)
Subject: Working on "DOS" VGA.
Message-ID: <622144.97364.qm@web112602.mail.gq1.yahoo.com>

On 4/3/2010 11:34 AM, Alexandre Julliard wrote:
> Stefan D?singer<stefandoesinger at gmx.at>  writes:
>
>    
>> Am 02.04.2010 um 02:08 schrieb chris ahrendt:
>>
>>      
>>> Just my 2 phennings worth on this...
>>> Why reinvent the wheel... I would say instead of doing the emulator inside wine... or a JIT... why not have
>>> wine intersept the call to start the vm86 mode.. and forks off and starts DOSEMU or whatever DOS box system is
>>> configured.. That way wine doesnt have to worry about it...
>>>        
>> Because you can mix modes in one executable. Take for example the
>> average modern dos game: They start as real mode apps, then switch to
>> a 32 bit protected mode dos extender(e.g. dos4gw.exe). I wouldn't be
>> surprised if the app can transform itself into a Win16 app that tries
>> to pop up a window. Wouldn't work well in Linux dosemu.
>>      
> DOS apps can't do that. Pretty much the only thing you really have to
> share is the filesystem, and it should be easy to configure DosBox to
> mount ~/.wine/drive_c, and to invoke Wine when a DOS app starts a
> Windows binary.
>
> There's no reason to replicate DosBox inside Wine. On the contrary, a
> nice project would be to improve integration with an external DOS
> emulator and then rip out the half-broken vm86 support from Wine.
>
>    
That is what I would think should be done...

chris






      


From damjan.jov at gmail.com  Sun Apr  4 03:53:46 2010
From: damjan.jov at gmail.com (Damjan Jovanovic)
Date: Sun, 4 Apr 2010 10:53:46 +0200
Subject: Working on "DOS" VGA.
In-Reply-To: <87hbnso8gv.fsf@wine.dyndns.org>
References: <561569.57344.qm@web112615.mail.gq1.yahoo.com>
	<12E07332-A02B-414D-83DD-68F99AB0E31F@gmx.at>
	<87hbnso8gv.fsf@wine.dyndns.org>
Message-ID: <r2t9e89675b1004040153s55983071z7e9a33eae44795aa@mail.gmail.com>

On Sat, Apr 3, 2010 at 5:34 PM, Alexandre Julliard <julliard at winehq.org> wrote:
> Stefan D?singer <stefandoesinger at gmx.at> writes:
>
>> Am 02.04.2010 um 02:08 schrieb chris ahrendt:
>>
>>> Just my 2 phennings worth on this...
>>> Why reinvent the wheel... I would say instead of doing the emulator inside wine... or a JIT... why not have
>>> wine intersept the call to start the vm86 mode.. and forks off and starts DOSEMU or whatever DOS box system is
>>> configured.. That way wine doesnt have to worry about it...
>> Because you can mix modes in one executable. Take for example the
>> average modern dos game: They start as real mode apps, then switch to
>> a 32 bit protected mode dos extender(e.g. dos4gw.exe). I wouldn't be
>> surprised if the app can transform itself into a Win16 app that tries
>> to pop up a window. Wouldn't work well in Linux dosemu.
>
> DOS apps can't do that. Pretty much the only thing you really have to
> share is the filesystem, and it should be easy to configure DosBox to
> mount ~/.wine/drive_c, and to invoke Wine when a DOS app starts a
> Windows binary.
>
> There's no reason to replicate DosBox inside Wine. On the contrary, a
> nice project would be to improve integration with an external DOS
> emulator and then rip out the half-broken vm86 support from Wine.
>
> --
> Alexandre Julliard
> julliard at winehq.org
>
>
>

But Win16 applications can access DOS int 0x21 functions (below,
tested successfully on Wine and Vista), and at least some hardware
(http://www.faqs.org/faqs/windows/programming/vxd/ describes how a
Win16 application can access the VGA framebuffer). Doesn't that mean
we need the vm86 support in Wine?

Damjan

#include <windows.h>

int PASCAL WinMain( HINSTANCE this_inst, HINSTANCE prev_inst,
                    LPSTR cmdline, int cmdshow )
    int val;
    char buffer[512];
    __asm mov ax,0x6200
    __asm mov bx,0
    __asm int 0x21
    __asm mov val,bx
    sprintf(buffer, "Hi from Win16 with PSP = %d", val);
    MessageBox(NULL, buffer, "Hello world", MB_OK);
    __asm mov ax,0x4c00
    __asm int 0x21
    /*return 0;*/
}


From marcus at jet.franken.de  Sun Apr  4 05:41:00 2010
From: marcus at jet.franken.de (Marcus Meissner)
Date: Sun, 4 Apr 2010 12:41:00 +0200
Subject: Working on "DOS" VGA.
In-Reply-To: <r2t9e89675b1004040153s55983071z7e9a33eae44795aa@mail.gmail.com>
References: <561569.57344.qm@web112615.mail.gq1.yahoo.com>
	<12E07332-A02B-414D-83DD-68F99AB0E31F@gmx.at>
	<87hbnso8gv.fsf@wine.dyndns.org>
	<r2t9e89675b1004040153s55983071z7e9a33eae44795aa@mail.gmail.com>
Message-ID: <20100404104100.GA24922@jet.franken.de>

On Sun, Apr 04, 2010 at 10:53:46AM +0200, Damjan Jovanovic wrote:
> But Win16 applications can access DOS int 0x21 functions (below,
> tested successfully on Wine and Vista), and at least some hardware
> (http://www.faqs.org/faqs/windows/programming/vxd/ describes how a
> Win16 application can access the VGA framebuffer). Doesn't that mean
> we need the vm86 support in Wine?

Yes, but those INT21 calls are in Win16 protected mode, not DOS real mode.

And VXD ... I doubt anything uses it.

Ciao, Marcus


From chris.kcat at gmail.com  Sun Apr  4 06:03:47 2010
From: chris.kcat at gmail.com (Chris Robinson)
Date: Sun, 4 Apr 2010 04:03:47 -0700
Subject: Working on "DOS" VGA.
In-Reply-To: <20100404104100.GA24922@jet.franken.de>
References: <561569.57344.qm@web112615.mail.gq1.yahoo.com>
	<r2t9e89675b1004040153s55983071z7e9a33eae44795aa@mail.gmail.com>
	<20100404104100.GA24922@jet.franken.de>
Message-ID: <201004040403.47517.chris.kcat@gmail.com>

On Sunday 04 April 2010 3:41:00 am Marcus Meissner wrote:
> Yes, but those INT21 calls are in Win16 protected mode, not DOS real mode.
> 
> And VXD ... I doubt anything uses it.

Back in the Win95 era, I remember libnet having a DOS network driver that 
hooked into winsock.vxd. It allowed a DOS app (compiled with DJGPP) to use 
Windows' winsock driver when run under Windows. I remember that because I 
thought it was the best thing ever, since I only had DJGPP and wasn't 
interested in Win32 programming (and even if I could, I don't think MinGW was 
around, yet).

But beyond that, couldn't a pure DOS app launch a Win32 exe, and have that 
program run like a normal Windows app? How would that work if the app is run 
under DOSBox or similar?


From k.king177 at ntlworld.com  Sun Apr  4 08:32:03 2010
From: k.king177 at ntlworld.com (k4king)
Date: Sun, 4 Apr 2010 06:32:03 -0700 (PDT)
Subject: Working on "DOS" VGA.
In-Reply-To: <201004040403.47517.chris.kcat@gmail.com>
References: <4BB456A9.7000202@tdcadsl.dk>
	<561569.57344.qm@web112615.mail.gq1.yahoo.com>
	<12E07332-A02B-414D-83DD-68F99AB0E31F@gmx.at>
	<87hbnso8gv.fsf@wine.dyndns.org>
	<r2t9e89675b1004040153s55983071z7e9a33eae44795aa@mail.gmail.com>
	<20100404104100.GA24922@jet.franken.de>
	<201004040403.47517.chris.kcat@gmail.com>
Message-ID: <28133105.post@talk.nabble.com>


how seamless could the integration be made?
I've seen a number of programs (mainly installers) and also guilty of
writing a few win apps that shell out a dos call and return to continue.
Also while wine seems to encourage a spread of apps to work, the core DosBox
guys have made it clear they are only interested retro games. So dosemu or a
qemu/bochs co-operation may be more fruitful.


-- 
View this message in context: http://old.nabble.com/Working-on-%22DOS%22-VGA.-tp28105734p28133105.html
Sent from the Wine - Devel mailing list archive at Nabble.com.



From thunderbird2k at gmail.com  Sun Apr  4 09:21:26 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Sun, 4 Apr 2010 16:21:26 +0200
Subject: Working on "DOS" VGA.
In-Reply-To: <28133105.post@talk.nabble.com>
References: <4BB456A9.7000202@tdcadsl.dk>
	<561569.57344.qm@web112615.mail.gq1.yahoo.com>
	<12E07332-A02B-414D-83DD-68F99AB0E31F@gmx.at>
	<87hbnso8gv.fsf@wine.dyndns.org>
	<r2t9e89675b1004040153s55983071z7e9a33eae44795aa@mail.gmail.com>
	<20100404104100.GA24922@jet.franken.de>
	<201004040403.47517.chris.kcat@gmail.com>
	<28133105.post@talk.nabble.com>
Message-ID: <l2nc8485d471004040721x68bf2e32l691f67c3f3211990@mail.gmail.com>

On Sun, Apr 4, 2010 at 3:32 PM, k4king <k.king177 at ntlworld.com> wrote:
>
> how seamless could the integration be made?
> I've seen a number of programs (mainly installers) and also guilty of
> writing a few win apps that shell out a dos call and return to continue.

The command prompt in windows works similar to DOS but it is not DOS.
Things which invoke our command prompt should still work (well, win9x
/ nt4.0 stuff might depend on real DOS stuff though).

> Also while wine seems to encourage a spread of apps to work, the core DosBox
> guys have made it clear they are only interested retro games. So dosemu or a
> qemu/bochs co-operation may be more fruitful.
>

Dosbox is available for all platforms and is relatively light. While
they focus mostly on games, they aren't against general fixes. Dosemu
is Linux specific but qemu/bochs would also be possible. Personally
I'm in favor of Dosbox.

Roderick


From austinenglish at gmail.com  Mon Apr  5 00:50:17 2010
From: austinenglish at gmail.com (Austin English)
Date: Sun, 4 Apr 2010 18:50:17 -1100
Subject: GSoC WPKG and test.winehq.org
In-Reply-To: <6fc03d801003281153i28e5519dh476cfc332c0ff7cd@mail.gmail.com>
References: <a71bd89a1003082148g19bc87a5w7c40ea47e9b8db80@mail.gmail.com> 
	<6fc03d801003090653u628c0c99r2816325dc09426b7@mail.gmail.com> 
	<a71bd89a1003090702r8fe5722h7d53397d2624fdaf@mail.gmail.com> 
	<24f7f56c1003090719u620f2794p1aa6b7452adbf0bd@mail.gmail.com> 
	<b6bb06271003090831l4823db82j36a52663829a8150@mail.gmail.com> 
	<24f7f56c1003090847n7cc2bbb0r60fdea4381d79bbb@mail.gmail.com> 
	<6fc03d801003281153i28e5519dh476cfc332c0ff7cd@mail.gmail.com>
Message-ID: <n2nb6bb06271004042250vb2661148z6e4d2fcc1f5d24a1@mail.gmail.com>

On Sun, Mar 28, 2010 at 12:53 PM, Seth Shelnutt <shelnutt2 at gmail.com> wrote:
> Alright after creating a few test scripts and playing around with things I
> think I have finally settled on exactly what my proposal is. It is in three
> parts,
>
> 1) Convert wpkg (or appDeploy) scripts into ahk scripts. I believe that I
> can convert a hundred or so without to much work.
>
> 2) I'd like to implement a more aggressive error reporting. I want to have
> appinstall rerun failed test using WINEDEBUG=+all (or possibly have it guess
> what channel is needed to be watched). Saving the output of this will allow
> one to more easily debug the program. You won't have to go back and rerun
> the program yourself in wine, you will already be given the output so you
> can see what failed, where.
>
> 3) I'd also like to implement a feature to have the output more in the
> format of test.winehq.org. I am thinking that it would be easier to have it
> done split into two scripts, one on client-side, one server-side. Have the
> client format all the information into an xml file, and then server-side
> convert that xml into something along the lines of what test.winehq.org
> looks like.
>
> I can go more in depth with each step I'd like to take, but I am not sure
> how specific I should be with my proposal? I was looking at last year's
> proposals and they didn't seem overly in depth on the steps they planned to
> take.
>
>
> The five sample scripts and the edited appinstall.sh can be found here,
> http://shelnutt2.host56.com/appinstall/ . I've found the easiest way to add
> the scripts is to copy them into the ~/.appinstallcache folder after it's
> created and before the tests are run.

You'll want to make a formal proposal on http://socghop.appspot.com/gsoc/.

One other thing you may want to aim for is better windows support. It
should be possible to run appinstall in windows under cygwin (it
should be pretty easy to fix, actually).

-- 
-Austin


From bilboed at gmail.com  Mon Apr  5 03:45:23 2010
From: bilboed at gmail.com (Edward Hervey)
Date: Mon, 05 Apr 2010 10:45:23 +0200
Subject: [GSOC] dshow/gst branch rebased and commented
Message-ID: <1270457123.2322.13.camel@putamadre>

Hi all,

  I took some time this morning to rebase tdavenport's gst/dshow branch
against current master and added my comments/reviews in the last commit.

  The branch can be found here :
http://github.com/bilboed/wine/tree/tdaven-rebased

  I'm putting this out so that if any student is interested, he could
carry on this work during GSOC.

  The current status is that using gstreamer as a backend for dshow has
been proven to work within a very limited use-case.

  What remains:
  * Making it more efficient, flexible and lightweight (see all my
comments)
  * Allowing it to automatically pick up whatever GStreamer element is
available on the system and make it available through dshow.

  A good goal for example would be to make the various audio/video
gstreamer sinks available through dshow (for example picking up the
pulse sink), and the various audio/video decoders.
  Having it working with a native windows application (pick a player or
an audio/video app using dshow) would be a must.

  Don't hesitate to ask questions/comments,

    Edward



From thunderbird2k at gmail.com  Mon Apr  5 04:20:07 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Mon, 5 Apr 2010 11:20:07 +0200
Subject: [GSOC] dshow/gst branch rebased and commented
In-Reply-To: <1270457123.2322.13.camel@putamadre>
References: <1270457123.2322.13.camel@putamadre>
Message-ID: <w2nc8485d471004050220n653a363czfff309106377a123@mail.gmail.com>

On Mon, Apr 5, 2010 at 10:45 AM, Edward Hervey <bilboed at gmail.com> wrote:
> Hi all,
>
> ?I took some time this morning to rebase tdavenport's gst/dshow branch
> against current master and added my comments/reviews in the last commit.
>
> ?The branch can be found here :
> http://github.com/bilboed/wine/tree/tdaven-rebased
>
> ?I'm putting this out so that if any student is interested, he could
> carry on this work during GSOC.
>
> ?The current status is that using gstreamer as a backend for dshow has
> been proven to work within a very limited use-case.
>
> ?What remains:
> ?* Making it more efficient, flexible and lightweight (see all my
> comments)
> ?* Allowing it to automatically pick up whatever GStreamer element is
> available on the system and make it available through dshow.
>
> ?A good goal for example would be to make the various audio/video
> gstreamer sinks available through dshow (for example picking up the
> pulse sink), and the various audio/video decoders.
> ?Having it working with a native windows application (pick a player or
> an audio/video app using dshow) would be a must.
>
> ?Don't hesitate to ask questions/comments,
>
> ? ?Edward
>
>

Thanks for the update. I have also updated the gsoc proposal list at
our wiki, to point at this mail. Hopefully someone will pick it up as
this would be a really useful project in my opinion.

Roderick


From dmitry at codeweavers.com  Mon Apr  5 04:44:12 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 5 Apr 2010 18:44:12 +0900
Subject: user32/dialog.c: GetNextDlgTabItem returns hwndDlg if next item
	not found
In-Reply-To: <op.vandc3qdyxumdv@home>
References: <op.vandc3qdyxumdv@home>
Message-ID: <20100405184412.42fd1628.dmitry@codeweavers.com>

"Mikhail Maroukhine" <mikolg at connectivegames.com> wrote:

> user32/dialog.c: GetNextDlgTabItem returns hwndDlg if next item not found
> Behavior checked on Windows XP

Please add a test case for this.

> +    return retWnd ? retWnd : (hwndCtrl ? hwndCtrl : hwndDlg);

Using an 'if' case would be more readable IMO.

-- 
Dmitry.


From hverbeet at gmail.com  Mon Apr  5 04:59:25 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 5 Apr 2010 11:59:25 +0200
Subject: [PATCH 2/7] d3dx9_36: Improve FIXMEs and TRACEs for surface
In-Reply-To: <20100405083002.30746.84595.stgit@titan-desktop>
References: <20100405082956.30746.28296.stgit@titan-desktop>
	<20100405083002.30746.84595.stgit@titan-desktop>
Message-ID: <n2nd658b69e1004050259ze0a79e16wb5fbe0c4bb98eda6@mail.gmail.com>

On 5 April 2010 10:30, Christian Costa <titan.costa at wanadoo.fr> wrote:
> @@ -71,7 +71,8 @@ HRESULT WINAPI D3DXGetImageInfoFromFileA(LPCSTR file, D3DXIMAGE_INFO *info)
>      LPWSTR widename;
>      HRESULT hr;
>      int strlength;
> -    TRACE("(void): relay\n");
> +
> +    TRACE("(%s, %p): relay\n", file, info);
You should use debugstr_a() here (and in a few other places).


From hverbeet at gmail.com  Mon Apr  5 05:03:42 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 5 Apr 2010 12:03:42 +0200
Subject: [PATCH 1/2] amstream: Expose also IMultiMediaStream which is the 
	base interface of IAMMultiMediaStream (patch from Qingchuan Wang)
In-Reply-To: <20100405085539.31319.30601.stgit@titan-desktop>
References: <20100405085539.31319.30601.stgit@titan-desktop>
Message-ID: <r2gd658b69e1004050303ufbfb9d68habec648860b101c5@mail.gmail.com>

On 5 April 2010 10:55, Christian Costa <titan.costa at wanadoo.fr> wrote:
>
The proper way to do attribution is by adding an appropriate From:
line to the patch, preferably by simply passing --author with the
right information to git commit.


From hverbeet at gmail.com  Mon Apr  5 04:59:42 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 5 Apr 2010 11:59:42 +0200
Subject: [PATCH 3/7] d3dx9_36: Beginning of constants parsing + tests 
	(based on work from Luis Busquets)
In-Reply-To: <20100405083007.30746.97776.stgit@titan-desktop>
References: <20100405082956.30746.28296.stgit@titan-desktop>
	<20100405083007.30746.97776.stgit@titan-desktop>
Message-ID: <l2jd658b69e1004050259p920bd60dp4c752c7bc2ada3e1@mail.gmail.com>

On 5 April 2010 10:30, Christian Costa <titan.costa at wanadoo.fr> wrote:
> +inline ctab_constant* get_constant(D3DXHANDLE ptr)
> +{
> +    if (!ptr) return NULL;
> +    return (ctab_constant*)~(DWORD)ptr;
> +}
> +
> +inline D3DXHANDLE get_handle(ctab_constant* ptr)
> +{
> +    return (D3DXHANDLE)~((DWORD)ptr);
> +}
These look like they would be problematic on 64-bit, does it really
work like that?


From hverbeet at gmail.com  Mon Apr  5 04:59:54 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 5 Apr 2010 11:59:54 +0200
Subject: [PATCH 6/7] d3dx9_36: Add stub for D3DXCreateTextureFromFileA
In-Reply-To: <20100405083025.30746.81920.stgit@titan-desktop>
References: <20100405082956.30746.28296.stgit@titan-desktop>
	<20100405083025.30746.81920.stgit@titan-desktop>
Message-ID: <z2md658b69e1004050259qc546826sf98d9ffa9faef25@mail.gmail.com>

On 5 April 2010 10:30, Christian Costa <titan.costa at wanadoo.fr> wrote:
> +    FIXME("(%p, %s, %p): stub\n", device, srcfile, texture);
"srcfile" is an external string, this should use debugstr_a().


From dank at kegel.com  Mon Apr  5 09:06:05 2010
From: dank at kegel.com (Dan Kegel)
Date: Mon, 5 Apr 2010 07:06:05 -0700
Subject: user32/dialog.c: GetNextDlgTabItem returns hwndDlg if next item 
	not found
Message-ID: <x2ya71bd89a1004050706rbf4e0bf2xa868f0fac5af1f15@mail.gmail.com>

"Mikhail Maroukhine" <mikolg at connectivegames.com> wrote:
> user32/dialog.c: GetNextDlgTabItem returns hwndDlg if next item not found
> Behavior checked on Windows XP

Welcome to Wine development!  Poker playing penguins salute you.

As Dmitry wrote, adding a test case would be a good idea;
see http://wiki.winehq.org/WritingConformanceTests
- Dan


From madewokherd+8cd9 at gmail.com  Mon Apr  5 10:10:18 2010
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Mon, 5 Apr 2010 10:10:18 -0500
Subject: [PATCH 4/7] d3dx9_36: Implement D3DXGetImageInfoFromFileInMemory 
	using WindowsCodecs (based on work from Tony Wasserka)
In-Reply-To: <20100405083014.30746.7089.stgit@titan-desktop>
References: <20100405082956.30746.28296.stgit@titan-desktop>
	<20100405083014.30746.7089.stgit@titan-desktop>
Message-ID: <z2sced95fe1004050810na8ebca79p507dfd01d156464@mail.gmail.com>

> +    CoUninitialize();

You should call this function only if your original CoInitializeEx
call succeeded. It may fail in a multithreaded apartment (in which
case WIC won't work either, but that's a bug), and in that case the
uninitialize is not needed.

Also, you seem to be leaving things uninitialized if you get an
unrecognized container format or pixel format. That's probably not a
good policy.


From bradley-tucker at hotmail.com  Mon Apr  5 12:48:09 2010
From: bradley-tucker at hotmail.com (Bradley Tucker)
Date: Mon, 5 Apr 2010 12:48:09 -0500
Subject: Hello, All!  Interested in GSoC
Message-ID: <BLU145-W4CDEC57594A104BEBCD2499190@phx.gbl>


Hello everyone,

I am Bradley Tucker, a junior computer science major at Tennessee Tech University, and I am very interested in participating in the Google Summer of Code.  I have a strong passion for developing video games, and it sounds like working with the Wine Project this summer would be incredibly helpful, informative, and fun.

I'm not sure exactly what I'm supposed to do to get started, so I'll just tell you a little about me and what I'd like to do.

First of all, I am primarily a Windows user who is trying learn more about Linux and all the wonderful things it can do.  I have experience programming in C++ and Java, but I am a quick learner and would gladly become fluent in another language, if necessary.  I do not have any experience working in an open-source community, but again, I am always ready to learn and to try new things.  I would like to participate in the Google Summer of Code because I feel it will help me gain necessary skills and knowledge that will help me once I graduate, while benefiting all others who use open-source software.  While I may not be the most qualified individual right now, I promise that if I am selected to work for the Wine Project this summer, I will quickly do whatever I can to become as qualified as possible.  I am a sociable and easy-to-get-along-with sort of guy, but I am extremely determined and hard-working, and I will do whatever I can to help the project progress.

As I said before, I am very interested in gaming, so naturally Wine is project that I believe I will thoroughly enjoy working on.  Firstly, I would be very interested in improving or testing any Direct3D features.  Testing and finding bugs for recent releases would be tremendously beneficial in helping me get ready for a career in the gaming industry.  So, finding bugs and ways to optimize recent releases would probably be my top choice for working on a project with Wine.  I also enjoy playing classic games as much as the latest releases.  The 
suggested idea of "implementing DOS graphics modes more faithfully" is 
one I would find tremendously interesting and hopefully informative.  I 
don't know enough about Wine yet to give many specifics, but I would 
gladly work on any bugs or features that my mentor would find most 
crucial.  While these are the topics that stood out most to me, I would honestly be willing to help out in any area that could use my help.

As I said, I don't know if this is the best way to introduce myself or if this is the best way to present the ideas I would like to possibly work on.  But, here I am, willing and able to help in whatever ways you would like.

My e-mail address is bradley-tucker at hotmail.com, so feel free to contact me whenever you please, with any questions or comments.  I am a student with classes, so I may not be able to respond right away.

Thanks, and I hope to working with you this summer!

Bradley Tucker

Computer Science Major
Junior, Tennessee Tech University
bradley-tucker at hotmail.com
 		 	   		  
_________________________________________________________________
The New Busy think 9 to 5 is a cute idea. Combine multiple calendars with Hotmail. 
http://www.windowslive.com/campaign/thenewbusy?tile=multicalendar&ocid=PID28326::T:WLMTAGL:ON:WL:en-US:WM_HMP:042010_5
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100405/c1a92bbd/attachment.htm>

From titan.costa at wanadoo.fr  Mon Apr  5 13:08:18 2010
From: titan.costa at wanadoo.fr (Christian Costa)
Date: Mon, 05 Apr 2010 20:08:18 +0200
Subject: [PATCH 3/7] d3dx9_36: Beginning of constants parsing + tests
	(based on work from Luis Busquets)
In-Reply-To: <l2jd658b69e1004050259p920bd60dp4c752c7bc2ada3e1@mail.gmail.com>
References: <20100405082956.30746.28296.stgit@titan-desktop>	<20100405083007.30746.97776.stgit@titan-desktop>
	<l2jd658b69e1004050259p920bd60dp4c752c7bc2ada3e1@mail.gmail.com>
Message-ID: <4BBA2712.9050408@wanadoo.fr>

Henri Verbeet a ?crit :
> On 5 April 2010 10:30, Christian Costa <titan.costa at wanadoo.fr> wrote:
>   
>> +inline ctab_constant* get_constant(D3DXHANDLE ptr)
>> +{
>> +    if (!ptr) return NULL;
>> +    return (ctab_constant*)~(DWORD)ptr;
>> +}
>> +
>> +inline D3DXHANDLE get_handle(ctab_constant* ptr)
>> +{
>> +    return (D3DXHANDLE)~((DWORD)ptr);
>> +}
>>     
> These look like they would be problematic on 64-bit, does it really
> work like that?
>
>
>
>
>   
In 32 bit, handles use this scheme (or something similar). I guess the 
same is used for 64-bit.
I will update the patch to work on both platforms.




From k.king177 at ntlworld.com  Mon Apr  5 13:35:29 2010
From: k.king177 at ntlworld.com (k4king)
Date: Mon, 5 Apr 2010 11:35:29 -0700 (PDT)
Subject: Working on "DOS" VGA.
In-Reply-To: <l2nc8485d471004040721x68bf2e32l691f67c3f3211990@mail.gmail.com>
References: <4BB456A9.7000202@tdcadsl.dk>
	<561569.57344.qm@web112615.mail.gq1.yahoo.com>
	<12E07332-A02B-414D-83DD-68F99AB0E31F@gmx.at>
	<87hbnso8gv.fsf@wine.dyndns.org>
	<r2t9e89675b1004040153s55983071z7e9a33eae44795aa@mail.gmail.com>
	<20100404104100.GA24922@jet.franken.de>
	<201004040403.47517.chris.kcat@gmail.com>
	<28133105.post@talk.nabble.com>
	<l2nc8485d471004040721x68bf2e32l691f67c3f3211990@mail.gmail.com>
Message-ID: <28143309.post@talk.nabble.com>


<<
While they focus mostly on games, they aren't against general fixes.
>>
not the experience I had on a number of non game related postings, 
I was told the couple of bytes it would take to add support for a vesa std
text video mode would add to much bloat and hit a number of other "it will
not help games" responses on other things.

From madewokherd+8cd9 at gmail.com  Mon Apr  5 14:00:22 2010
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Mon, 5 Apr 2010 14:00:22 -0500
Subject: [PATCH 3/6] d3dx9_36: Implement D3DXGetImageInfoFromFileInMemory 
	using WindowsCodecs (based on work from Tony Wasserka) (try 2)
In-Reply-To: <20100405182819.4545.80744.stgit@titan-desktop>
References: <20100405182807.4545.19188.stgit@titan-desktop>
	<20100405182819.4545.80744.stgit@titan-desktop>
Message-ID: <n2tced95fe1004051200s1caa1194z3e832976d972cee4@mail.gmail.com>

+    hr = CoInitializeEx(NULL, COINIT_APARTMENTTHREADED);
+    if (FAILED(hr))
+        return E_FAIL;

You should continue in this case, but don't call CoUninitialize at the end.

On Mon, Apr 5, 2010 at 1:28 PM, Christian Costa <titan.costa at wanadoo.fr> wrote:
> --
> Check return of CoInitializeEx and some WIC calls. Return an error for unsupported file and pixel formats.
> ---
>
> ?dlls/d3dx9_36/Makefile.in ? ? | ? ?2 -
> ?dlls/d3dx9_36/surface.c ? ? ? | ?113 ++++++++++++++++++++++++++++++++++++++++-
> ?dlls/d3dx9_36/tests/texture.c | ? 40 ++++++---------
> ?3 files changed, 127 insertions(+), 28 deletions(-)
>
>
>
>


From hverbeet at gmail.com  Mon Apr  5 14:01:08 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 5 Apr 2010 21:01:08 +0200
Subject: [PATCH 2/6] d3dx9_36: Beginning of constants parsing + tests 
	(based on work from Luis Busquets) (try 2)
In-Reply-To: <20100405182813.4545.73114.stgit@titan-desktop>
References: <20100405182807.4545.19188.stgit@titan-desktop>
	<20100405182813.4545.73114.stgit@titan-desktop>
Message-ID: <h2wd658b69e1004051201h2dd0d93ei12d64b30b21f61bc@mail.gmail.com>

On 5 April 2010 20:28, Christian Costa <titan.costa at wanadoo.fr> wrote:
> +inline ctab_constant* get_constant(D3DXHANDLE ptr)
> +{
> +    if (!ptr) return NULL;
> +    return (ctab_constant*)~(UINT)ptr;
> +}
> +
> +inline D3DXHANDLE get_handle(ctab_constant* ptr)
> +{
> +    return (D3DXHANDLE)~((UINT)ptr);
> +}
How is that different? You'd have to cast to UINT_PTR to fit a 64-bit
pointer in there, although of course that only works if D3DXHANDLE is
also a 64-bit value on 64-bit Windows (didn't check).


From stefandoesinger at gmx.at  Mon Apr  5 14:52:50 2010
From: stefandoesinger at gmx.at (=?iso-8859-1?Q?Stefan_D=F6singer?=)
Date: Mon, 5 Apr 2010 21:52:50 +0200
Subject: [PATCH 6/6] Due to code rewrites is_color_fixup_supported is not
	needed anymore in RealizePalette. The code in question should
	be executed in all cases. This also fixes palette refresh
	issues when shaders / paletted textures aren't around.
In-Reply-To: <1270490718-13123-7-git-send-email-thunderbird2k@gmail.com>
References: <1270490718-13123-1-git-send-email-thunderbird2k@gmail.com>
	<1270490718-13123-2-git-send-email-thunderbird2k@gmail.com>
	<1270490718-13123-3-git-send-email-thunderbird2k@gmail.com>
	<1270490718-13123-4-git-send-email-thunderbird2k@gmail.com>
	<1270490718-13123-5-git-send-email-thunderbird2k@gmail.com>
	<1270490718-13123-6-git-send-email-thunderbird2k@gmail.com>
	<1270490718-13123-7-git-send-email-thunderbird2k@gmail.com>
Message-ID: <B1CC217D-AA31-4F87-ACF3-3FA2A97E2A52@gmx.at>


Am 05.04.2010 um 20:05 schrieb Roderick Colenbrander:
> -        IWineD3DDeviceImpl *device = This->resource.device;
> -        if((This->resource.usage & WINED3DUSAGE_RENDERTARGET) &&
> -            device->blitter->color_fixup_supported(&device->adapter->gl_info, This->resource.format_desc->color_fixup))
> +        if(This->resource.usage & WINED3DUSAGE_RENDERTARGET)
It's a problem with the existing code, but checking the usage here doesn't make much sense. It should check if the surface is a front buffer on any swapchain(or, as long as we store a P8 surface as ARGB in GL this code also applies to backbuffers)



From titan.costa at wanadoo.fr  Mon Apr  5 15:25:33 2010
From: titan.costa at wanadoo.fr (Christian Costa)
Date: Mon, 05 Apr 2010 22:25:33 +0200
Subject: [PATCH 2/6] d3dx9_36: Beginning of constants parsing + tests
	(based on work from Luis Busquets) (try 2)
In-Reply-To: <h2wd658b69e1004051201h2dd0d93ei12d64b30b21f61bc@mail.gmail.com>
References: <20100405182807.4545.19188.stgit@titan-desktop>	<20100405182813.4545.73114.stgit@titan-desktop>
	<h2wd658b69e1004051201h2dd0d93ei12d64b30b21f61bc@mail.gmail.com>
Message-ID: <4BBA473D.9020804@wanadoo.fr>

Henri Verbeet a ?crit :
> On 5 April 2010 20:28, Christian Costa <titan.costa at wanadoo.fr> wrote:
>   
>> +inline ctab_constant* get_constant(D3DXHANDLE ptr)
>> +{
>> +    if (!ptr) return NULL;
>> +    return (ctab_constant*)~(UINT)ptr;
>> +}
>> +
>> +inline D3DXHANDLE get_handle(ctab_constant* ptr)
>> +{
>> +    return (D3DXHANDLE)~((UINT)ptr);
>> +}
>>     
> How is that different? You'd have to cast to UINT_PTR to fit a 64-bit
> pointer in there, although of course that only works if D3DXHANDLE is
> also a 64-bit value on 64-bit Windows (didn't check).
>
>
>
>
>   
D3DXHANDLE maps to LPCSTR type so go for UINT_PTR.




From thunderbird2k at gmail.com  Mon Apr  5 16:25:37 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Mon, 5 Apr 2010 23:25:37 +0200
Subject: [PATCH 6/6] Due to code rewrites is_color_fixup_supported is not 
	needed anymore in RealizePalette. The code in question should be
	executed in 
	all cases. This also fixes palette refresh issues when shaders /
	paletted textures aren't around.
In-Reply-To: <B1CC217D-AA31-4F87-ACF3-3FA2A97E2A52@gmx.at>
References: <1270490718-13123-1-git-send-email-thunderbird2k@gmail.com>
	<1270490718-13123-2-git-send-email-thunderbird2k@gmail.com>
	<1270490718-13123-3-git-send-email-thunderbird2k@gmail.com>
	<1270490718-13123-4-git-send-email-thunderbird2k@gmail.com>
	<1270490718-13123-5-git-send-email-thunderbird2k@gmail.com>
	<1270490718-13123-6-git-send-email-thunderbird2k@gmail.com>
	<1270490718-13123-7-git-send-email-thunderbird2k@gmail.com>
	<B1CC217D-AA31-4F87-ACF3-3FA2A97E2A52@gmx.at>
Message-ID: <m2xc8485d471004051425k6baee99fobd2bde8ef5c20094@mail.gmail.com>

On Mon, Apr 5, 2010 at 9:52 PM, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>
> Am 05.04.2010 um 20:05 schrieb Roderick Colenbrander:
>> - ? ? ? ?IWineD3DDeviceImpl *device = This->resource.device;
>> - ? ? ? ?if((This->resource.usage & WINED3DUSAGE_RENDERTARGET) &&
>> - ? ? ? ? ? ?device->blitter->color_fixup_supported(&device->adapter->gl_info, This->resource.format_desc->color_fixup))
>> + ? ? ? ?if(This->resource.usage & WINED3DUSAGE_RENDERTARGET)
> It's a problem with the existing code, but checking the usage here doesn't make much sense. It should check if the surface is a front buffer on any swapchain(or, as long as we store a P8 surface as ARGB in GL this code also applies to backbuffers)
>

There are some other places which do the same (both P8 and other
code). It might be nice to rewrite it e.g. using the
p8_primary_render_target call or so perhaps something more generic. In
case of DDraw (without P8 textures) we seem to set
WINED3DUSAGE_RENDERTARGET only for the primary surface on the ddraw
side though.

Would you mind if I rewrote this part at a later stage? It isn't that
critical right now. I mainly rewrote it to get
is_color_fixup_supported out of the way and it also fixed bugs. If you
want I could add a 'TODO' comment, so that it won't be forgotten.

Roderick


From m.b.lankhorst at gmail.com  Mon Apr  5 16:52:52 2010
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Mon, 05 Apr 2010 23:52:52 +0200
Subject: Application period ends in ~4 days
Message-ID: <4BBA5BB4.8060309@gmail.com>

Hi all,

I've seen a few very good proposals on the mailing list, but not enough 
of them ended up as a proposal on the official summer of code app. So if 
you haven't done so already please apply there now. You can still modify 
your proposal there after submitting it based on feedback, but you'll 
have to submit something there soon.

Cheers,
Maarten


From dank at kegel.com  Mon Apr  5 23:57:10 2010
From: dank at kegel.com (Dan Kegel)
Date: Mon, 5 Apr 2010 21:57:10 -0700
Subject: wisotool: now supports seven games, runs on windows, too
Message-ID: <s2ya71bd89a1004052157qd46f8dccu52217898d23ade67@mail.gmail.com>

My little automated app installer tool, wisotool, now supports seven apps:
assassinscreed, diablo2, dragonage, morrowind, sims3, starcraft, and
wog (world of goo)
It also seems to run on Windows ok in Cygwin (though I've only barely
tested that).

Thanks to Austin for dragonage, morrowind, and some windows fixes,
and Eleazar Galano for a draft of the assassinscreed verb.

I've updated the doc at
  http://wiki.winehq.org/wisotool

It has a section explaining the difference between wisotool and somewhat
related things like appinstall and PlayOnLinux.  (In a nutshell, wisotool
is a winetricks-like tool for installing games automatically, with no user
interaction.  It caches .iso files to automate disc-swapping for
multiple-disc apps,
and caches cd keys to automate installers that need keys, but you
have to load the cache from your real copy of the cds or dvds first.)
- Dan


From joel at airwebreathe.org.uk  Tue Apr  6 03:12:48 2010
From: joel at airwebreathe.org.uk (Joel Holdsworth)
Date: Tue, 6 Apr 2010 09:12:48 +0100 (BST)
Subject: Icon Patches Feedback
Message-ID: <1758468013.289683.1270541568947.JavaMail.open-xchange@oxltgw15.schlund.de>

Hi,
?
Are there any thoughts about my latest round of icon patches?
?
Thanks
Joel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100406/06dd705c/attachment.htm>

From saulius2 at ar.fi.lt  Tue Apr  6 03:50:21 2010
From: saulius2 at ar.fi.lt (Saulius Krasuckas)
Date: Tue, 6 Apr 2010 11:50:21 +0300 (EEST)
Subject: Working on "DOS" VGA.
In-Reply-To: <28143309.post@talk.nabble.com>
References: <4BB456A9.7000202@tdcadsl.dk>
	<561569.57344.qm@web112615.mail.gq1.yahoo.com>
	<12E07332-A02B-414D-83DD-68F99AB0E31F@gmx.at>
	<87hbnso8gv.fsf@wine.dyndns.org>
	<r2t9e89675b1004040153s55983071z7e9a33eae44795aa@mail.gmail.com>
	<20100404104100.GA24922@jet.franken.de>
	<201004040403.47517.chris.kcat@gmail.com>
	<28133105.post@talk.nabble.com>
	<l2nc8485d471004040721x68bf2e32l691f67c3f3211990@mail.gmail.com>
	<28143309.post@talk.nabble.com>
Message-ID: <alpine.DEB.1.10.1004061039090.3682@localhost.localdomain>

* On Mon, 5 Apr 2010, k4king wrote:
> 
> <<
> While they focus mostly on games, they aren't against general fixes.
> >>

> From memory they don't support lpt ports (for similar reasons) wheras 
> you can multi play games with serial ports so they do support those.

There exists some branch of DOSBox called MegaBuild. [3]

It implements LPT port emulation and enhances serial port emulation (at 
least for DirectSerial mode -- now MegaBuild5 switches DSR-DTR/DCD signal 
pair (and CTS-RTS one also) correctly with appropriate hardware loopback 
used.

LPT hardware loopback works also with DOS application.

Official DOSBox doesn't do that, so I believe you could use MegaBuild for 
games also.


S.

[3] http://home.arcor.de/h-a-l-9000/index.html


From Joerg-Cyril.Hoehle at t-systems.com  Tue Apr  6 06:23:28 2010
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Tue, 6 Apr 2010 13:23:28 +0200
Subject: [PATCH 1/5] winmm: Improve MCI's Sysinfo command.
References: <47CC5ABB01651443A88DB8EC5B4D657B7402F4@S4DE8PSAANK.mitte.t-com.de>	<47CC5ABB01651443A88DB8EC5B4D657B7402FF@S4DE8PSAANK.mitte.t-com.de>
	<47CC5ABB01651443A88DB8EC5B4D657B740304@S4DE8PSAANK.mitte.t-com.de>
	<4BB4F60C.1000901@orange.fr>
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B74030C@S4DE8PSAANK.mitte.t-com.de>

Hi,

Eric Pouech wrote:

>SYSINFO_PARMS.wDeviceType = (WORD)(DWORD)MCI_ALL_DEVICE_ID;
>work better ?
I tested ... = (WORD)MCI_ALL_DEVICE_ID which
should do the same.  It does not yield the "all" functionality.

>did you check what mciGetDeviceID("all") returns on Vista or XP ?
Yes, and it is in the tests.  Alas, you'll have to believe my comment therein
that Win9x returns a 16bit FFFF and the others a 32bit FFFFFFFF,
because the testsuite never works like
ok((iswin9x && MCI_ALL_DEVICE_ID==err) || !iswin9x && (WORD)MCI_ALL_DEVICE_ID==err))

While we know that
1. mciDeviceID "all" yields 0000FFFF in Win9x and that
2. mciCommand(0000FFFF, MCI_SYSINFO ...) yield "all" only in Win9x
sadly we don't know if some Win9x app out there uses 0000FFFF as MCIDEVICEID.

My opinion is that MCIDEVICEID has to be treated in Wine like a 16bit entity
because compatibility with Win9x requires it and the question whether >65535
handles can be opened is not interesting in practice -- or we'll have to start
writing version-dependent code.

Regards,
 J?rg H?hle


From julliard at winehq.org  Tue Apr  6 07:08:39 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 06 Apr 2010 14:08:39 +0200
Subject: [PATCH 01/10] server: allow polling for no events in set_fd_events
In-Reply-To: <v2s4d8b5aa81003312000s1f2baedfh3778e2bbb37ebcdd@mail.gmail.com>
	(Mike Kaplinskiy's message of "Wed, 31 Mar 2010 23:00:36 -0400")
References: <v2s4d8b5aa81003312000s1f2baedfh3778e2bbb37ebcdd@mail.gmail.com>
Message-ID: <87mxxgn5q0.fsf@wine.dyndns.org>

Mike Kaplinskiy <mike.kaplinskiy at gmail.com> writes:

> Remove the fd from the poll list so we don't get POLLHUP/POLLERR
> messages when we ask for no events

This is wrong, even when selecting for no events you want to receive
POLLHUP/POLLERR. If you really don't want any events you have to use -1
to remove the fd from the loop. But in general ignoring POLLHUP/POLLERR
is a bug.

-- 
Alexandre Julliard
julliard at winehq.org


From saulius2 at ar.fi.lt  Tue Apr  6 07:22:33 2010
From: saulius2 at ar.fi.lt (Saulius Krasuckas)
Date: Tue, 6 Apr 2010 15:22:33 +0300 (EEST)
Subject: Working on "DOS" VGA.
In-Reply-To: <alpine.DEB.1.10.1004061039090.3682@localhost.localdomain>
References: <4BB456A9.7000202@tdcadsl.dk>
	<561569.57344.qm@web112615.mail.gq1.yahoo.com>
	<12E07332-A02B-414D-83DD-68F99AB0E31F@gmx.at>
	<87hbnso8gv.fsf@wine.dyndns.org>
	<r2t9e89675b1004040153s55983071z7e9a33eae44795aa@mail.gmail.com>
	<20100404104100.GA24922@jet.franken.de>
	<201004040403.47517.chris.kcat@gmail.com>
	<28133105.post@talk.nabble.com>
	<l2nc8485d471004040721x68bf2e32l691f67c3f3211990@mail.gmail.com>
	<28143309.post@talk.nabble.com>
	<alpine.DEB.1.10.1004061039090.3682@localhost.localdomain>
Message-ID: <alpine.DEB.1.10.1004061519530.5843@localhost.localdomain>

* On Tue, 6 Apr 2010, Saulius Krasuckas wrote:
> 
> There exists some branch of DOSBox called MegaBuild. [3]
> 
> It implements LPT port emulation and enhances serial port emulation (at 
> least for DirectSerial mode -- now MegaBuild5 switches DSR-DTR/DCD 
> signal pair (and CTS-RTS one also) correctly with appropriate hardware 
> loopback used.

I meant sending and querying status line operations at UART I/O port level 
(not via BIOS or DOS ints).


S.


From joni.salmela at hesburger.fi  Tue Apr  6 03:24:08 2010
From: joni.salmela at hesburger.fi (Joni Salmela)
Date: Tue, 06 Apr 2010 11:24:08 +0300
Subject: Native Windows web Browser plugins for Linux Mozilla
Message-ID: <1270542248.3468.7.camel@joni-ubuntu-labtop>


I have an idea how to get native windows mozilla plugins to work in
native Linux mozilla...

as you know in Chrome each new tab is its own independent process yet
they all share a parent x-window so... if you could create a Windows
which would host an active-x plugin or just the mozilla NP_PAPI plugin
it could serve as an wrapper okay so create a generic "plugin wrapper"
for mozilla and start a new instance of wine the application that hosts
the active-x plugin and set its parent as the mozillas window... this
hosting an Active-X plugin via NP_PAPI does work in Windows btw...

sincerely Joni Salmela.
joni.salmela at hesburger.fi



From twickline at gmail.com  Tue Apr  6 08:52:23 2010
From: twickline at gmail.com (Tom Wickline)
Date: Tue, 6 Apr 2010 21:52:23 +0800
Subject: Native Windows web Browser plugins for Linux Mozilla
In-Reply-To: <1270542248.3468.7.camel@joni-ubuntu-labtop>
References: <1270542248.3468.7.camel@joni-ubuntu-labtop>
Message-ID: <w2q53e3a9931004060652jd381b415u5a00e72cb4521d77@mail.gmail.com>

e.g. CrossOver Plugin thats now part of CrossOver Office...

:)

Tom

On Tue, Apr 6, 2010 at 4:24 PM, Joni Salmela <joni.salmela at hesburger.fi> wrote:
>
> I have an idea how to get native windows mozilla plugins to work in
> native Linux mozilla...
>
> as you know in Chrome each new tab is its own independent process yet
> they all share a parent x-window so... if you could create a Windows
> which would host an active-x plugin or just the mozilla NP_PAPI plugin
> it could serve as an wrapper okay so create a generic "plugin wrapper"
> for mozilla and start a new instance of wine the application that hosts
> the active-x plugin and set its parent as the mozillas window... this
> hosting an Active-X plugin via NP_PAPI does work in Windows btw...
>
> sincerely Joni Salmela.
> joni.salmela at hesburger.fi
>
>
>
>



-- 
http://www.freewear.org/?search=FW0044+FW0045


From dmitry at codeweavers.com  Tue Apr  6 08:56:37 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 6 Apr 2010 22:56:37 +0900
Subject: [PATCH] user32: honor bfOffBits in BITMAP_Load
In-Reply-To: <1270542698-10188-1-git-send-email-wolfram@the-dreams.de>
References: <1270542698-10188-1-git-send-email-wolfram@the-dreams.de>
Message-ID: <20100406225637.e7b90d32.dmitry@codeweavers.com>

Wolfram Sang <wolfram at the-dreams.de> wrote:

> +        offbits = bmfh->bfOffBits - sizeof(BITMAPFILEHEADER);

> +    bits = (char *)info + (offbits ?: size);

The purpose of offbits is not clear. Besides "?:" is absolutely not readable,
putting an explicit 0 there would help a bit. Adding a test case wouldn't hurt
either.

-- 
Dmitry.


From wolfram at the-dreams.de  Tue Apr  6 09:42:16 2010
From: wolfram at the-dreams.de (Wolfram Sang)
Date: Tue, 06 Apr 2010 16:42:16 +0200
Subject: [PATCH] user32: honor bfOffBits in BITMAP_Load
In-Reply-To: <20100406225637.e7b90d32.dmitry@codeweavers.com>
References: <1270542698-10188-1-git-send-email-wolfram@the-dreams.de>
	<20100406225637.e7b90d32.dmitry@codeweavers.com>
Message-ID: <4BBB4848.80004@the-dreams.de>

Dmitry Timoshkov wrote:
> Wolfram Sang <wolfram at the-dreams.de> wrote:
> 
>> +        offbits = bmfh->bfOffBits - sizeof(BITMAPFILEHEADER);
> 
>> +    bits = (char *)info + (offbits ?: size);
> 
> The purpose of offbits is not clear.

It has the same purpose as 'offbits' in
BmpFrameDecode_ReadUncompressed() from bmpdecode.c. And in bfOffBits,
too. Please give me a hint, I still think it is clear this way.

> Besides "?:" is absolutely not readable,
> putting an explicit 0 there would help a bit.

:D Okay, that proves your point. This is a short from for 'offbits ?
offbits : size'. Will fix that.

> Adding a test case wouldn't hurt either.

Hmm, do you have a pointer for a test verifying how something should
look like (in contrast to checking a return value)? Was this not
necessary for LoadImage() in general?

Regards,

   Wolfram



From hverbeet at gmail.com  Tue Apr  6 10:00:29 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Tue, 6 Apr 2010 17:00:29 +0200
Subject: [PATCH] user32: honor bfOffBits in BITMAP_Load
In-Reply-To: <4BBB4848.80004@the-dreams.de>
References: <1270542698-10188-1-git-send-email-wolfram@the-dreams.de>
	<20100406225637.e7b90d32.dmitry@codeweavers.com>
	<4BBB4848.80004@the-dreams.de>
Message-ID: <x2zd658b69e1004060800x43824a66r73a26bfe82fe29bc@mail.gmail.com>

On 6 April 2010 16:42, Wolfram Sang <wolfram at the-dreams.de> wrote:
>> Besides "?:" is absolutely not readable,
>> putting an explicit 0 there would help a bit.
>
> :D Okay, that proves your point. This is a short from for 'offbits ?
> offbits : size'. Will fix that.
>
I also think that's a gcc extension, in general Wine tries to stick to C89.


From Joerg-Cyril.Hoehle at t-systems.com  Tue Apr  6 10:47:30 2010
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Tue, 6 Apr 2010 17:47:30 +0200
Subject: msvidc32/msvideo1 question: upside down buffers?
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B740311@S4DE8PSAANK.mitte.t-com.de>

Hi,

does anybody know why msvideo_decode_8bit(), when imported
from the FFmpeg project in 2004, was changed such that the
pixels[] array became filled upside down?  See how
#ifdef ORIGINAL,
  which shows the original FFmpeg code, differs from the
#else
  branch in msvideo1.c

Do buffers in Wine work upside down and backwards?
Why can't Wine use exactly FFmpeg's code?

I'm asking because no similar set of changes was applied to
msvideo_decode_16bit().  I have files that are rendered
incorrectly and even suspect of crashing Wine because of
this.  I could write a patch but need to know.

Thank you for your help,
 J?rg H?hle


From m.b.lankhorst at gmail.com  Tue Apr  6 11:46:12 2010
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Tue, 06 Apr 2010 18:46:12 +0200
Subject: msvidc32/msvideo1 question: upside down buffers?
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B740311@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B740311@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <4BBB6554.7040906@gmail.com>

Hi Joerg,

On 06-04-10 17:47, Joerg-Cyril.Hoehle at t-systems.com wrote:
> does anybody know why msvideo_decode_8bit(), when imported
> from the FFmpeg project in 2004, was changed such that the
> pixels[] array became filled upside down?  See how
> #ifdef ORIGINAL,
>    which shows the original FFmpeg code, differs from the
> #else
>    branch in msvideo1.c
>
> Do buffers in Wine work upside down and backwards?
> Why can't Wine use exactly FFmpeg's code?
>
> I'm asking because no similar set of changes was applied to
> msvideo_decode_16bit().  I have files that are rendered
> incorrectly and even suspect of crashing Wine because of
> this.  I could write a patch but need to know.
>    
See BITMAPINFOHEADER documentation for biHeight:

http://msdn.microsoft.com/en-us/library/dd183376%28VS.85%29.aspx

However not all codecs handle negative height properly, and just ignore 
the information the sign gives. This is probably why ffmpeg puts it 
upside down internally.

Cheers,
Maarten


From thunderbird2k at gmail.com  Tue Apr  6 11:53:42 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Tue, 6 Apr 2010 18:53:42 +0200
Subject: Native Windows web Browser plugins for Linux Mozilla
In-Reply-To: <w2q53e3a9931004060652jd381b415u5a00e72cb4521d77@mail.gmail.com>
References: <1270542248.3468.7.camel@joni-ubuntu-labtop>
	<w2q53e3a9931004060652jd381b415u5a00e72cb4521d77@mail.gmail.com>
Message-ID: <g2sc8485d471004060953n3ba2dea7ndca427f6fd5c524e@mail.gmail.com>

KDE used to have a plugin called 'reaktivate' which was also something similar.

Roderick

On Tue, Apr 6, 2010 at 3:52 PM, Tom Wickline <twickline at gmail.com> wrote:
> e.g. CrossOver Plugin thats now part of CrossOver Office...
>
> :)
>
> Tom
>
> On Tue, Apr 6, 2010 at 4:24 PM, Joni Salmela <joni.salmela at hesburger.fi> wrote:
>>
>> I have an idea how to get native windows mozilla plugins to work in
>> native Linux mozilla...
>>
>> as you know in Chrome each new tab is its own independent process yet
>> they all share a parent x-window so... if you could create a Windows
>> which would host an active-x plugin or just the mozilla NP_PAPI plugin
>> it could serve as an wrapper okay so create a generic "plugin wrapper"
>> for mozilla and start a new instance of wine the application that hosts
>> the active-x plugin and set its parent as the mozillas window... this
>> hosting an Active-X plugin via NP_PAPI does work in Windows btw...
>>
>> sincerely Joni Salmela.
>> joni.salmela at hesburger.fi
>>
>>
>>
>>
>
>
>
> --
> http://www.freewear.org/?search=FW0044+FW0045
>
>
>


From mike.kaplinskiy at gmail.com  Tue Apr  6 12:18:36 2010
From: mike.kaplinskiy at gmail.com (Mike Kaplinskiy)
Date: Tue, 6 Apr 2010 18:18:36 +0100
Subject: [PATCH 01/10] server: allow polling for no events in 
	set_fd_events
In-Reply-To: <87mxxgn5q0.fsf@wine.dyndns.org>
References: <v2s4d8b5aa81003312000s1f2baedfh3778e2bbb37ebcdd@mail.gmail.com> 
	<87mxxgn5q0.fsf@wine.dyndns.org>
Message-ID: <x2h4d8b5aa81004061018n6b2a87c2oe304274acc5bca03@mail.gmail.com>

On Tue, Apr 6, 2010 at 1:08 PM, Alexandre Julliard <julliard at winehq.org> wrote:
> Mike Kaplinskiy <mike.kaplinskiy at gmail.com> writes:
>
>> Remove the fd from the poll list so we don't get POLLHUP/POLLERR
>> messages when we ask for no events
>
> This is wrong, even when selecting for no events you want to receive
> POLLHUP/POLLERR. If you really don't want any events you have to use -1
> to remove the fd from the loop. But in general ignoring POLLHUP/POLLERR
> is a bug.
>
> --
> Alexandre Julliard
> julliard at winehq.org
>

Would allowing adding the fd to the poll loop after it has been
removed be more sane? Otherwise we have to resort to ugly things like
sock_try_event (which only half work).

Mike.


From julliard at winehq.org  Tue Apr  6 13:03:49 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 06 Apr 2010 20:03:49 +0200
Subject: [PATCH 01/10] server: allow polling for no events in set_fd_events
In-Reply-To: <x2h4d8b5aa81004061018n6b2a87c2oe304274acc5bca03@mail.gmail.com>
	(Mike Kaplinskiy's message of "Tue, 6 Apr 2010 18:18:36 +0100")
References: <v2s4d8b5aa81003312000s1f2baedfh3778e2bbb37ebcdd@mail.gmail.com>
	<87mxxgn5q0.fsf@wine.dyndns.org>
	<x2h4d8b5aa81004061018n6b2a87c2oe304274acc5bca03@mail.gmail.com>
Message-ID: <87hbnompa2.fsf@wine.dyndns.org>

Mike Kaplinskiy <mike.kaplinskiy at gmail.com> writes:

> Would allowing adding the fd to the poll loop after it has been
> removed be more sane? Otherwise we have to resort to ugly things like
> sock_try_event (which only half work).

I don't think that makes sense either. The error condition is not going
to go away so you can no longer poll on it anyway, you really need to
close the socket and create a new one.

-- 
Alexandre Julliard
julliard at winehq.org


From mstefani at redhat.com  Tue Apr  6 14:17:13 2010
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Tue, 06 Apr 2010 21:17:13 +0200
Subject: Wine FIXME Report March 2010
Message-ID: <4BBB88B9.5080006@redhat.com>

Wine FIXME Report March 2010
============================
The data for this report comprise the emails from March 2010 archives
of the mailing lists wine-{bugs,devel,users} as well as the bugzilla
attachments referenced by the wine-bugs emails. Although WARN messages
were collected too they aren't handled in this report.

File parsed: 6867 (emails: 6282, bugzilla attachments: 585)
Files (logs) with FIXME/ERR/WARN: 517
   Type  |  Total  | Unique
   ------+---------+-------
   fixme |  191778 | 22303
   err   |  101542 |  3632
   warn  |    6125 |  1199


Most Frequent Messages By Logs
------------------------------
Messages that are present in most Wine output logs collected.

FIXME:
    Logs | Lines |  Mean  | Channel:Function Text
   ------+-------+--------+----------------------
      68 |   200 |   2.94 | d3d:WineD3D_ChoosePixelFormat Add OpenGL 
context recreation support to SetDepthStencilSurface
      62 |    82 |   1.32 | system:SetProcessDPIAware stub!
      51 |    92 |   1.80 | iphlpapi:GetAdaptersAddresses no support for 
IPv6 addresses
      37 |    62 |   1.68 | urlmon:URLMoniker_BindToObject use running 
object table
      35 |    36 |   1.03 | sync:CreateMemoryResourceNotification (0) stub
      33 |    57 |   1.73 | shdocvw:ClOleCommandTarget_QueryStatus 
command_0: 27, 0x0
      31 |    43 |   1.39 | resource:GetGuiResources (0xffffffff,0): stub
      31 |    72 |   2.32 | shdocvw:PropertyNotifySink_OnChanged 
unimplemented dispid 1005
      28 |    66 |   2.36 | d3d9:Direct3DShaderValidatorCreate9 stub
      24 |    85 |   3.54 | shdocvw:BindStatusCallback_OnProgress status 
code 11

ERR:
    Logs | Lines |  Mean  | Channel:Function Text
   ------+-------+--------+----------------------
      31 |    31 |   1.00 | ole:CoGetContextToken apartment not initialised
      24 |    35 |   1.46 | ole:CoGetClassObject class 
{9a5ea990-3034-4d6f-9128-01f3c61022bc} not registered
      24 |    35 |   1.46 | ole:CoGetClassObject no class object 
{9a5ea990-3034-4d6f-9128-01f3c61022bc} could be created for context 0x1
      22 |    44 |   2.00 | ole:CoInitializeEx Attempt to change 
threading model of this apartment from multi-threaded to apartment threaded
      21 |    55 |   2.62 | alsa:ALSA_CheckSetVolume Could not find 'PCM 
Playback Volume' element
      20 |   220 |  11.00 | ole:ClientIdentity_QueryMultipleInterfaces 
IRemUnknown_RemQueryInterface failed with error 0x80004002
      15 |    15 |   1.00 | ole:CoInitializeEx Attempt to change 
threading model of this apartment from apartment threaded to multi-threaded
      14 |    49 |   3.50 | ole:CoUninitialize Mismatched CoUninitialize
      13 |    13 |   1.00 | ole:apartment_getclassobject 
DllGetClassObject returned error 0x80040111
      10 |    15 |   1.50 | eventlog:ReportEventW L"0"


Most Frequent Messages By Mean Lines Per Logs
---------------------------------------------
This are the messages which show up in at least 1% of the logs and have
the highest mean lines per logs ratio.

FIXME:
    Logs | Lines |  Mean  | Channel:Function Text
   ------+-------+--------+----------------------
      15 |  2307 | 153.80 | advapi:SetSecurityInfo stub
      11 |  1655 | 150.45 | d3d:debug_d3dformat Unrecognized 909200449 
(as fourcc: AL16) WINED3DFORMAT!
      11 |  1655 | 150.45 | d3d:debug_d3dformat Unrecognized 909201952 
(as fourcc:  R16) WINED3DFORMAT!
      11 |  1655 | 150.45 | d3d:getFormatDescEntry Can't find format 
unrecognized(909200449) in the format lookup table
      11 |  1655 | 150.45 | d3d:getFormatDescEntry Can't find format 
unrecognized(909201952) in the format lookup table
      14 |  1706 | 121.86 | gdiplus:GdipCreateHalftonePalette
       7 |   715 | 102.14 | d3d:buffer_PreLoad Too many full buffer 
conversions, stopping converting
      13 |   565 |  43.46 | gdiplus:GdipGetFamilyName No support for 
handling of multiple languages!
      21 |   423 |  20.14 | wininet:InternetLockRequestFile STUB
       7 |   110 |  15.71 | shell:URL_ParseUrl failed to parse 
L"cdbxpp.resources"

ERR:
    Logs | Lines |  Mean  | Channel:Function Text
   ------+-------+--------+----------------------
       7 |  7295 |1042.14 | 
d3d:IWineD3DImpl_IsPixelFormatCompatibleWithRenderFmt Unable to check 
compatibility for Format=WINED3DFMT_R32G32B32A32_FLOAT
       7 |  7295 |1042.14 | d3d:getColorBits Unsupported format: 
WINED3DFMT_R32G32B32A32_FLOAT
       6 |   347 |  57.83 | d3d_surface:surface_set_texture_name Surface 
has SFLAG_INTEXTURE set, but no texture name
       7 |   211 |  30.14 | ddraw:PixelFormat_WineD3DtoDD Can't 
translate this Pixelformat 58
       7 |   211 |  30.14 | ddraw:PixelFormat_WineD3DtoDD Can't 
translate this Pixelformat 64
      20 |   220 |  11.00 | ole:ClientIdentity_QueryMultipleInterfaces 
IRemUnknown_RemQueryInterface failed with error 0x80004002
       8 |    66 |   8.25 | ole:CoCreateInstance apartment not initialised
       7 |    48 |   6.86 | richedit:ReadStyleSheet skipping optional 
destination
       7 |    28 |   4.00 | imm:ImmAssociateContextEx Unknown dwFlags 0x0
      14 |    49 |   3.50 | ole:CoUninitialize Mismatched CoUninitialize


Functions With Most Messages By Mean Lines Per Logs
---------------------------------------------------
This are the functions which show up in at least 1% of the logs and have
the highest mean lines per logs ratio.

FIXME:
    Logs | Lines |  Mean  | Channel:Function
   ------+-------+--------+-----------------
       7 |  6082 | 868.86 | d3d_draw:drawStridedFast
      80 | 19784 | 247.30 | d3d_surface:IWineD3DVolumeImpl_LockBox
      15 |  2307 | 153.80 | advapi:SetSecurityInfo
     117 | 16272 | 139.08 | d3d:context_check_fbo_status
      14 |  1706 | 121.86 | gdiplus:GdipCreateHalftonePalette
       6 |   464 |  77.33 | d3d:IWineD3DDeviceImpl_ClearSurface
       6 |   352 |  58.67 | shell:IDropTargetHelper_fnDragOver
      57 |  2695 |  47.28 | dsound:IDirectSoundBufferImpl_AcquireResources
      14 |   566 |  40.43 | gdiplus:GdipGetFamilyName
      22 |   847 |  38.50 | d3d:buffer_PreLoad

ERR:
    Logs | Lines |  Mean  | Channel:Function
   ------+-------+--------+-----------------
      29 | 46357 |1598.52 | 
d3d:IWineD3DImpl_IsPixelFormatCompatibleWithRenderFmt
      29 | 46357 |1598.52 | d3d:getColorBits
       7 |   349 |  49.86 | d3d_surface:surface_set_texture_name
      14 |   422 |  30.14 | ddraw:PixelFormat_WineD3DtoDD
      21 |   222 |  10.57 | ole:ClientIdentity_QueryMultipleInterfaces
       8 |    66 |   8.25 | ole:CoCreateInstance
      10 |    71 |   7.10 | richedit:ReadStyleSheet
      16 |    89 |   5.56 | ole:ITypeInfo_fnInvoke
      47 |   245 |   5.21 | ole:marshal_object
       7 |    28 |   4.00 | imm:ImmAssociateContextEx


Messages With The Highest Repetition Count
------------------------------------------
The messages with the highest repetition count in a single log file.

FIXME:
    Logs | Lines |  Mean  | Channel:Function Text
   ------+-------+--------+----------------------
       1 | 76325 |76325.0 | d3d7:IDirect3DDeviceImpl_3_SetLightState 
D3DLIGHTSTATE_MATERIAL called with NULL material !!!
       1 | 17648 |17648.0 | d3d_surface:IWineD3DVolumeImpl_LockBox 
(0x129fc038) : pBox=0xbff040 stub
       1 |  4256 | 4256.0 | d3d_texture:basetexture_generate_mipmaps 
iface 0x4b577a0 stub!
       1 |  2977 | 2977.0 | d3d:debug_d3dusagequery Unrecognized usage 
query flag(s) 0x1
       1 |  2717 | 2717.0 | d3d:context_check_fbo_status 	Color 
attachment 0: (0x38eebdc0) WINED3DFMT_B8G8R8A8_UNORM 1280x1024
       1 |  2717 | 2717.0 | d3d:context_check_fbo_status 	Depth 
attachment: (0x1a6668) WINED3DFMT_D24_UNORM_S8_UINT 1280x1024
       1 |  2717 | 2717.0 | d3d:context_check_fbo_status FBO status 
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT (0x8cd6)
       1 |  2552 | 2552.0 | d3d_draw:drawStridedFast >>>>>>>>>>>>>>>>> 
GL_INVALID_FRAMEBUFFER_OPERATION (0x506) from glDrawElements @ 
drawprim.c / 46
       1 |  2129 | 2129.0 | d3d_surface:IWineD3DBaseSurfaceImpl_Blt 
Filters not supported in software blit
       4 |  2074 |  518.5 | d3d:context_check_fbo_status FBO status 
GL_FRAMEBUFFER_UNSUPPORTED (0x8cdd)

ERR:
    Logs | Lines |  Mean  | Channel:Function Text
   ------+-------+--------+----------------------
       1 |  2990 | 2990.0 | 
d3d:IWineD3DImpl_IsPixelFormatCompatibleWithRenderFmt Unable to check 
compatibility for Format=WINED3DFMT_R16G16B16A16_UNORM
       1 |  2990 | 2990.0 | d3d:getColorBits Unsupported format: 
WINED3DFMT_R16G16B16A16_UNORM
       4 |  2950 |  737.5 | 
d3d:IWineD3DImpl_IsPixelFormatCompatibleWithRenderFmt Unable to check 
compatibility for Format=WINED3DFMT_R32G32_FLOAT
       4 |  2950 |  737.5 | d3d:getColorBits Unsupported format: 
WINED3DFMT_R32G32_FLOAT
       4 |  2880 |  720.0 | 
d3d:IWineD3DImpl_IsPixelFormatCompatibleWithRenderFmt Unable to check 
compatibility for Format=WINED3DFMT_R16G16B16A16_FLOAT
       4 |  2880 |  720.0 | 
d3d:IWineD3DImpl_IsPixelFormatCompatibleWithRenderFmt Unable to check 
compatibility for Format=WINED3DFMT_R16G16_FLOAT
       4 |  2880 |  720.0 | 
d3d:IWineD3DImpl_IsPixelFormatCompatibleWithRenderFmt Unable to check 
compatibility for Format=WINED3DFMT_R16_FLOAT
       7 |  2880 |  411.4 | 
d3d:IWineD3DImpl_IsPixelFormatCompatibleWithRenderFmt Unable to check 
compatibility for Format=WINED3DFMT_R32G32B32A32_FLOAT
       4 |  2880 |  720.0 | 
d3d:IWineD3DImpl_IsPixelFormatCompatibleWithRenderFmt Unable to check 
compatibility for Format=WINED3DFMT_R32_FLOAT
       4 |  2880 |  720.0 | d3d:getColorBits Unsupported format: 
WINED3DFMT_R16G16B16A16_FLOAT


Further Info:
=============
The sqlite3 database and the perl script to output the above report can
be downloaded from
   http://people.redhat.com/mstefani/winefixme/reports/201003/

bye
	michael


From dank at kegel.com  Tue Apr  6 15:39:12 2010
From: dank at kegel.com (Dan Kegel)
Date: Tue, 6 Apr 2010 13:39:12 -0700
Subject: bt all broken?
Message-ID: <l2xa71bd89a1004061339r95fe15bpc87f5137934d4d8e@mail.gmail.com>

winedbg's bt all seems broken since sometime between 1.1.40 and now.
Has anybody else seen this?


From mikolg at yandex.ru  Tue Apr  6 12:06:40 2010
From: mikolg at yandex.ru (Mikhail Maroukhine)
Date: Wed, 07 Apr 2010 00:06:40 +0700
Subject: user32/dialog.c: GetNextDlgTabItem returns hwndDlg if next item
	not found
In-Reply-To: <x2ya71bd89a1004050706rbf4e0bf2xa868f0fac5af1f15@mail.gmail.com>
References: <x2ya71bd89a1004050706rbf4e0bf2xa868f0fac5af1f15@mail.gmail.com>
Message-ID: <op.vaq25ah91j4v3x@home>

Hello,

Ok. Thanks for note.
I will write test soon.

Mikhail

On Mon, 05 Apr 2010 21:06:05 +0700, Dan Kegel <dank at kegel.com> wrote:

> "Mikhail Maroukhine" <mikolg at connectivegames.com> wrote:
>> user32/dialog.c: GetNextDlgTabItem returns hwndDlg if next item not  
>> found
>> Behavior checked on Windows XP
>
> Welcome to Wine development!  Poker playing penguins salute you.
>
> As Dmitry wrote, adding a test case would be a good idea;
> see http://wiki.winehq.org/WritingConformanceTests
> - Dan


-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/


From winehacker at gmail.com  Tue Apr  6 18:33:56 2010
From: winehacker at gmail.com (Steven Edwards)
Date: Tue, 6 Apr 2010 19:33:56 -0400
Subject: winmm: Rewrite time.c using ntdll timers
In-Reply-To: <4BBBB0D2.5070900@gmail.com>
References: <4BBBB0D2.5070900@gmail.com>
Message-ID: <v2s19e31a081004061633v85706f0ftb686ce33333a9eeb@mail.gmail.com>

On Tue, Apr 6, 2010 at 6:08 PM, Maarten Lankhorst
<m.b.lankhorst at gmail.com> wrote:
> ---
> Should fix bug 22252 as a side effect. It should also make it possible to
> run our winmm on windows for wave playback because the timers are now using
> win32 apis. :)

Thanks, I've been waiting for something like this since
0383e4e4990e414a7dcaba51e6b81bf60499944a
;)

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From conartist6 at gmail.com  Tue Apr  6 21:21:37 2010
From: conartist6 at gmail.com (Conrad Buck)
Date: Tue, 6 Apr 2010 22:21:37 -0400
Subject: Direct3D testing project (GSoC)
Message-ID: <z2t58aa73be1004061921t71d73d5co7b1055043aa12bae@mail.gmail.com>

Hello devels,
     I'm looking at submitting a SoC proposal to the wine project, but I'm
feeling a little overwhelmed as my current coding experience is all over the
place, and very little of it working with existing projects. My most recent
work has been looking  low-level code and algorithms behind basic OpenGL, so
I thought perhaps I might be able to make relevant contributions to the
project of testing and improving Direct3D support. Can anyone that knows
more about whats under the hood for that sort of functionality in wine tell
me what kind of magnitude of project I might be looking at? Only a limited
number of bug reports have been filed, but all seem to be indicative of
fairly major issues. Once I get more of an idea of what I might be dealing
with (and examine some of the problems myself) I can fine-tune my proposal.
Thanks,
    Conrad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100406/ec64ca2a/attachment.htm>

From dmitry at codeweavers.com  Tue Apr  6 22:44:20 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Wed, 7 Apr 2010 12:44:20 +0900
Subject: [PATCH] user32: honor bfOffBits in BITMAP_Load
In-Reply-To: <4BBB4848.80004@the-dreams.de>
References: <1270542698-10188-1-git-send-email-wolfram@the-dreams.de>
	<20100406225637.e7b90d32.dmitry@codeweavers.com>
	<4BBB4848.80004@the-dreams.de>
Message-ID: <20100407124420.1d94b909.dmitry@codeweavers.com>

Wolfram Sang <wolfram at the-dreams.de> wrote:

> Hmm, do you have a pointer for a test verifying how something should
> look like (in contrast to checking a return value)? Was this not
> necessary for LoadImage() in general?

Have a look at gdi32 bitmap tests.

-- 
Dmitry.


From hverbeet at gmail.com  Wed Apr  7 04:29:25 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Wed, 7 Apr 2010 11:29:25 +0200
Subject: [PATCH 2/4] d3d10: Move the effect shader input signature into a 
	separate struct.
In-Reply-To: <4BBB8A07.5080802@web.de>
References: <4BBB8A07.5080802@web.de>
Message-ID: <g2ud658b69e1004070229xf983497asac23ed6d759fc8e3@mail.gmail.com>

2010/4/6 Rico Sch?ller <kgbricola at web.de>:
> ?+struct d3d10_effect_shader_signature {
That isn't going to apply. Did you edit the patch? (And please keep
the formatting consistent with the existing code.)


From hverbeet at gmail.com  Wed Apr  7 04:31:28 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Wed, 7 Apr 2010 11:31:28 +0200
Subject: [PATCH 2/4] d3d10: Move the effect shader input signature into a 
	separate struct.
In-Reply-To: <g2ud658b69e1004070229xf983497asac23ed6d759fc8e3@mail.gmail.com>
References: <4BBB8A07.5080802@web.de>
	<g2ud658b69e1004070229xf983497asac23ed6d759fc8e3@mail.gmail.com>
Message-ID: <m2kd658b69e1004070231j54dfc9f9s9fa271e149e680ff@mail.gmail.com>

On 7 April 2010 11:29, Henri Verbeet <hverbeet at gmail.com> wrote:
> That isn't going to apply.
Also, 3/4 and 4/4 have similar issues.


From hverbeet at gmail.com  Wed Apr  7 04:37:25 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Wed, 7 Apr 2010 11:37:25 +0200
Subject: ddraw/tests: Added todo_wine test to verify resizing of 
	fullscreen windows
In-Reply-To: <i2k103c33d11004061414zd858a4b6qbe1931315f4aef77@mail.gmail.com>
References: <i2k103c33d11004061414zd858a4b6qbe1931315f4aef77@mail.gmail.com>
Message-ID: <n2qd658b69e1004070237h54c17da7ie4ee31f773c14db4@mail.gmail.com>

On 6 April 2010 23:14, Johan Gill <johan.gill at gmail.com> wrote:
> +???????????????if (!EqualRect(&scrn, &orig_rect)) {
> +???????????????    /* Check that the client rect was resized */
> +???????????????    rc = GetClientRect(hwnd, &test);
> +???????????????    ok(rc!=0, "GetClientRect returned %x\n", rc);
> +???????????????    rc = EqualRect(&scrn, &test);
> +???????????????    todo_wine ok(rc!=0, "Fullscreen window has wrong size\n");
> +???????????????}
Please don't mix tabs and spaces, just use 4 space indent.

From ale.goujon at gmail.com  Wed Apr  7 04:41:32 2010
From: ale.goujon at gmail.com (Alexandre Goujon)
Date: Wed, 7 Apr 2010 11:41:32 +0200
Subject: About Wine Test Bot
Message-ID: <x2k523af0e11004070241o48f86ffpd848fcef43ff72e1@mail.gmail.com>

Hi,

I have a suggestion about wineTestBot.
It's maybe the wrong place but I'm quite sure interested people read
wine-devel.

I think it would be great if we could
not only run tests (as it already does)
but also check if a patch does not break wine (on minGW, on cygwin or on MAC
for instance).

Thus, we could choose a kind of WINEBUILD VM to tell wineTestBot to only
compile wine with our patch.

Currently, I can't compile on Linux and cygwin is very slow.
So it would make my life easier if I could rely on wineTestBot...


Comments are welcome
Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100407/c1ce099a/attachment.htm>

From dmitry at codeweavers.com  Wed Apr  7 05:35:47 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Wed, 7 Apr 2010 19:35:47 +0900
Subject: About Wine Test Bot
In-Reply-To: <x2k523af0e11004070241o48f86ffpd848fcef43ff72e1@mail.gmail.com>
References: <x2k523af0e11004070241o48f86ffpd848fcef43ff72e1@mail.gmail.com>
Message-ID: <20100407193547.49233eb3.dmitry@codeweavers.com>

Alexandre Goujon <ale.goujon at gmail.com> wrote:

> Currently, I can't compile on Linux and cygwin is very slow.
> So it would make my life easier if I could rely on wineTestBot...

For any productive Wine development you need not only working compiling
environment, but a working Wine binary, to run at least 'make test'.

-- 
Dmitry.


From julliard at winehq.org  Wed Apr  7 06:13:32 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 07 Apr 2010 13:13:32 +0200
Subject: [PATCH 2/5] [Server]: correctly set the DR0..7 registers on Linux
	for x86_64 architecture
In-Reply-To: <20100406202830.15875.23044.stgit@Euterpe> (Eric Pouech's message
	of "Tue, 06 Apr 2010 22:28:30 +0200")
References: <20100406202610.15875.62459.stgit@Euterpe>
	<20100406202830.15875.23044.stgit@Euterpe>
Message-ID: <87d3ybms6b.fsf@wine.dyndns.org>

Eric Pouech <eric.pouech at orange.fr> writes:

> @@ -549,12 +549,21 @@ void get_thread_context( struct thread *thread, context_t *context, unsigned int
>              goto done;
>          }
>      }
> +#ifdef __i386__
>      context->debug.i386_regs.dr0 = data[0];
>      context->debug.i386_regs.dr1 = data[1];
>      context->debug.i386_regs.dr2 = data[2];
>      context->debug.i386_regs.dr3 = data[3];
>      context->debug.i386_regs.dr6 = data[6];
>      context->debug.i386_regs.dr7 = data[7];
> +#else /* __x86_64__ */
> +    context->debug.x86_64_regs.dr0 = data[0];
> +    context->debug.x86_64_regs.dr1 = data[1];
> +    context->debug.x86_64_regs.dr2 = data[2];
> +    context->debug.x86_64_regs.dr3 = data[3];
> +    context->debug.x86_64_regs.dr6 = data[6];
> +    context->debug.x86_64_regs.dr7 = data[7];
> +#endif

You can't use ifdefs, this needs to depend on the CPU type of the client
process.

-- 
Alexandre Julliard
julliard at winehq.org


From alex at thehandofagony.com  Wed Apr  7 07:26:09 2010
From: alex at thehandofagony.com (=?ISO-8859-1?Q?=22Alexander_N=2E_S=F8rnes=22?=)
Date: Wed, 07 Apr 2010 14:26:09 +0200
Subject: Participation in GSoC
Message-ID: <4BBC79E1.8080004@thehandofagony.com>

Hello,

I'm a student interested in participating in Google's Summer of Code. 
This isn't my first mail to the wine-devel list; I was a GSoC 
partiicpant in 2007, where I worked on WIne's WordPad clone. I have also 
done some work on the AppDB as well as minor bug fixes and lately a 
(little) work on some dsound tests. Other, non-Wine related code I've 
written include work with low-level keyboard hoo

There are a few projects I have in mind. I've had a look at the Wiki, 
and both 'Implementing the Internet Explorer GUI' and working on the 
Control Panel applets seem like interesting projects. Have any students 
applied for these yet? My only COM experience so far has been 
implementing a few stubs for DirectPlay, as well as some dsound tests:

http://www.winehq.org/pipermail/wine-patches/2010-February/084748.html
http://www.winehq.org/pipermail/wine-patches/2010-February/084881.html


As for my own project ideas, I think it would have been interesting to 
implement IPX over TCP in winsock, since most of the games that use IPX 
require root access for it to work. This feature could perhaps be 
enabled in winecfg or the Control Panel. I don't have any experience 
with networkking, though, so I'm concerned that this might be a bit 
amibitous.


I would appreciate feedback of any kind, and yes, I know that time is 
running out with respect to the application deadline :)



Regards,

Alexander N. S?rnes



From thunderbird2k at gmail.com  Wed Apr  7 07:46:59 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Wed, 7 Apr 2010 14:46:59 +0200
Subject: Participation in GSoC
In-Reply-To: <4BBC79E1.8080004@thehandofagony.com>
References: <4BBC79E1.8080004@thehandofagony.com>
Message-ID: <q2hc8485d471004070546g6616a5des7dd4f48d908a7f69@mail.gmail.com>

Hi Alexander,

Good to see you back in GSoc. I can't comment on IE / control panel as
I don't know much about it but I will comment to another small part.

> As for my own project ideas, I think it would have been interesting to
> implement IPX over TCP in winsock, since most of the games that use IPX
> require root access for it to work. This feature could perhaps be enabled in
> winecfg or the Control Panel. I don't have any experience with networkking,
> though, so I'm concerned that this might be a bit amibitous.

It should be possible to implement IPX over TCP but when you do this,
the other side also needs to wrap IPX in a TCP packet.  (there are
various user space tools I believe which can do this). IPX can be used
without root permissions if you use posix file capabilities to enable
raw sockets on wineserver. I experimented with this a long time ago
and I wasn't able to get it working at that time but this should
somehow work.

Roderick


From Joerg-Cyril.Hoehle at t-systems.com  Wed Apr  7 09:33:29 2010
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Wed, 7 Apr 2010 16:33:29 +0200
Subject: winmm: Improve MCI A/W mapping slightly.
References: <47CC5ABB01651443A88DB8EC5B4D657B740315@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B740316@S4DE8PSAANK.mitte.t-com.de>

Hi,

I forgot to mention that this patch was rebased against 1.1.42,
supersedes the former "Fix A/W mapping for 64bit Wine" patch and
is not dependent on prior 64bit patches.

Currently, I can't think of a fully general solution to the A/W
mapping problem. In theory, an unknown driver with new unknown
commands and keywords could be registered.  We have little idea how
large the structure is and which flags controls the validity of the
nth slot, e.g. when to call strdupAtoW().

One could think about parsing the command table to obtain this
information.  However,
 a) I see no guarantee that there's a unique MCI_STRING value for a
    given bit that is set in the flags parameter.
 b) This does not help with baroque commands like SYSINFO which
    sometimes put a string, sometimes a DWORD into the result buffer
    or which are documented to count buffer sizes in bytes, unlike
    other commands.

This latter example reveals that calling MCI_Cleanup() before
unwrapping is unfortunate, as valuable type information is
lost.  It is currently encapsulated inside mciSendCommandW.

Open questions:
 - Does Wine actually support hooking in a new native MCI driver?
   (beside DLL overrides)

 - Why does Wine copy dwCallback only when MCI_NOTIFY is set? It is
   not wrong, but why care? To prevent a Valgrind message when that
   slot was not filled by the caller?

BTW, my (unpublished) testing reveals that unlike what MSDN says,
dwRetSize is counted in characters in MCI_SYSINFO_PARMSW, not bytes
(at least on w2k with SYSINFO_NAME [OPEN]). But that shall be the
subject of another patch.

Regards,
 J?rg H?hle


From ale.goujon at gmail.com  Wed Apr  7 09:50:35 2010
From: ale.goujon at gmail.com (Alexandre Goujon)
Date: Wed, 7 Apr 2010 16:50:35 +0200
Subject: About Wine Test Bot
In-Reply-To: <20100407193547.49233eb3.dmitry@codeweavers.com>
References: <x2k523af0e11004070241o48f86ffpd848fcef43ff72e1@mail.gmail.com>
	<20100407193547.49233eb3.dmitry@codeweavers.com>
Message-ID: <g2y523af0e11004070750u806530adoa754a1aeb1469f36@mail.gmail.com>

Dmitry Timoshkov wrote


> For any productive Wine development you need not only working compiling
> environment, but a working Wine binary, to run at least 'make test'.


Ok so I could not run any test until compiling on cygwin works.
But the idea was to be able to remotly compile wine with some of our patches
applied.

I was told "you can't do that, it will break minGW".
The WINEBUILD VM exists but we can't use it (or tell me how to do that)

Of course I could install MinGW on my PC too...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100407/fcdd7044/attachment-0001.htm>

From dmitry at codeweavers.com  Wed Apr  7 10:05:23 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 8 Apr 2010 00:05:23 +0900
Subject: About Wine Test Bot
In-Reply-To: <g2y523af0e11004070750u806530adoa754a1aeb1469f36@mail.gmail.com>
References: <x2k523af0e11004070241o48f86ffpd848fcef43ff72e1@mail.gmail.com>
	<20100407193547.49233eb3.dmitry@codeweavers.com>
	<g2y523af0e11004070750u806530adoa754a1aeb1469f36@mail.gmail.com>
Message-ID: <20100408000523.714358f8.dmitry@codeweavers.com>

Alexandre Goujon <ale.goujon at gmail.com> wrote:

> > For any productive Wine development you need not only working compiling
> > environment, but a working Wine binary, to run at least 'make test'.
> 
> 
> Ok so I could not run any test until compiling on cygwin works.

Even if compiling under Cygwin works, the tests still require running
them under Wine, and Wine can't run under Cygwin (and most likely will
never be able to).

-- 
Dmitry.


From shelnutt2 at gmail.com  Wed Apr  7 10:10:59 2010
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Wed, 7 Apr 2010 15:10:59 +0000
Subject: About Wine Test Bot
In-Reply-To: <20100408000523.714358f8.dmitry@codeweavers.com>
References: <x2k523af0e11004070241o48f86ffpd848fcef43ff72e1@mail.gmail.com> 
	<20100407193547.49233eb3.dmitry@codeweavers.com>
	<g2y523af0e11004070750u806530adoa754a1aeb1469f36@mail.gmail.com>
	<20100408000523.714358f8.dmitry@codeweavers.com>
Message-ID: <j2p6fc03d801004070810s234312c9rfbc42d0642d992ca@mail.gmail.com>

Patchwatcher is suppose to sort of do this. It only works for linux, not
other systems, but it will not only check your patch against compiling but
also against the test suit and mark and regressions.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100407/5dd91547/attachment.htm>

From ale.goujon at gmail.com  Wed Apr  7 10:17:04 2010
From: ale.goujon at gmail.com (Alexandre Goujon)
Date: Wed, 7 Apr 2010 17:17:04 +0200
Subject: About Wine Test Bot
In-Reply-To: <j2p6fc03d801004070810s234312c9rfbc42d0642d992ca@mail.gmail.com>
References: <x2k523af0e11004070241o48f86ffpd848fcef43ff72e1@mail.gmail.com>
	<20100407193547.49233eb3.dmitry@codeweavers.com>
	<g2y523af0e11004070750u806530adoa754a1aeb1469f36@mail.gmail.com>
	<20100408000523.714358f8.dmitry@codeweavers.com>
	<j2p6fc03d801004070810s234312c9rfbc42d0642d992ca@mail.gmail.com>
Message-ID: <l2r523af0e11004070817t91a20341ue68506d0c4ca599d@mail.gmail.com>

I didn't know this tool.
It looks quite interesting.

Thanks again for your advices
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100407/bab3b01e/attachment.htm>

From ggeldorp at vmware.com  Wed Apr  7 10:45:20 2010
From: ggeldorp at vmware.com (Greg Geldorp)
Date: Wed, 7 Apr 2010 08:45:20 -0700
Subject: About Wine Test Bot
In-Reply-To: <mailman.5760.1270651866.27608.wine-devel@winehq.org>
References: <mailman.5760.1270651866.27608.wine-devel@winehq.org>
Message-ID: <1C77FC3365DBD149802E0F5381EBE2C9024ACC6A2D@EXCH-MBX-4.vmware.com>

Hi Alexandre,

> Ok so I could not run any test until compiling on cygwin works.
> But the idea was to be able to remotly compile wine with some of our patches
> applied.
>
> I was told "you can't do that, it will break minGW".
> The WINEBUILD VM exists but we can't use it (or tell me how to do that)

The WINEBUILD VM is only used to cross-compile tests in case you submit a patch and not a test executable to the bot. Running tests on Wine is outside the scope of WineTestBot (perhaps it should be called WinTestBot...), it is aimed at making sure that the tests themselves are correct (by checking that they don't fail on Windows).

Ge van Geldorp.


From kgbricola at web.de  Wed Apr  7 11:20:42 2010
From: kgbricola at web.de (=?UTF-8?B?UmljbyBTY2jDvGxsZXI=?=)
Date: Wed, 07 Apr 2010 18:20:42 +0200
Subject: [PATCH 2/4] d3d10: Move the effect shader input signature into
	a 	separate struct.
In-Reply-To: <g2ud658b69e1004070229xf983497asac23ed6d759fc8e3@mail.gmail.com>
References: <4BBB8A07.5080802@web.de>
	<g2ud658b69e1004070229xf983497asac23ed6d759fc8e3@mail.gmail.com>
Message-ID: <4BBCB0DA.90102@web.de>

Am 07.04.2010 11:29, schrieb Henri Verbeet:
> 2010/4/6 Rico Sch?ller<kgbricola at web.de>:
>    
>>   +struct d3d10_effect_shader_signature {
>>      
> That isn't going to apply. Did you edit the patch? (And please keep
> the formatting consistent with the existing code.)
>
>
>    
Sorry, Thunderbird screwed up the patches. I'll send a working version.

Cheers
Rico


From computers57 at hotmail.com  Wed Apr  7 14:27:29 2010
From: computers57 at hotmail.com (C.W. Betts)
Date: Wed, 7 Apr 2010 13:27:29 -0600
Subject: Mac OS X technologies
Message-ID: <BLU0-SMTP571569584E9549BA93F8B2B9170@phx.gbl>

There is a long list of technologies in Mac OS X that could be used to improve Wine on OS X. One of them is ColorSync. ColorSync is a color management software that is HEAVILY integrated into the Mac OS. For instance, you can calibrate your monitor and when OS X starts up, it will read the color profile file and adjust the graphics card output.  It will also do color correction automatically in, e.g. Preview to get the best out of an image.

However, I do not know how ColorSync influences Mac OS X's X11 system.  It is possible that in order to take full advantage of ColorSync, a Mac OS X native front-end will need to be developed.

Another interesting Mac OS X technology is Image Capture.  This technology is used by the OS to scan images from a scanner as well as import images from a camera (iPhoto).  It provides a wrapper around TWAIN drivers so they can be used by applications that don't support TWAIN.  This is a purely C Framework. Although a sub-framework of the Carbon Framework, the functions are available in 64-bit code.  This should not be confused with the ImageCaptureKit framework, which is most likely an Objective-c wrapper around the main Image Capture framework.






From hverbeet at gmail.com  Wed Apr  7 14:50:53 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Wed, 7 Apr 2010 21:50:53 +0200
Subject: (try2)[PATCH 3/4] d3d10: Implement
	ID3DEffectVariable::GetInputSignatureElementDesc().
In-Reply-To: <4BBCB410.7050300@web.de>
References: <4BBCB410.7050300@web.de>
Message-ID: <m2vd658b69e1004071250n7378787bje70dc0bd94757afb@mail.gmail.com>

2010/4/7 Rico Sch?ller <kgbricola at web.de>:
> +    /* Check desc for NULL, this crashes on W7/DX10 */
> +    if (!desc)
> +    {
> +        WARN("This should crash on W7/DX10!\n");
> +        return E_FAIL;
> +    }
It's perfectly fine to require a parameter to be non-NULL, and just
crash if it isn't. You'll get a nice backtrace, or at least an
exception, which helps debugging as well.

> +    /* Check shader_index, this crashes on W7/DX10 */
> +    if (shader_index >= This->effect->used_shader_count)
> +    {
> +        WARN("This should crash on W7/DX10!\n");
> +        return E_FAIL;
> +    }
Similar as above. In general if Windows doesn't check something, we
don't either. However, it's worth noting that if we'd be writing to
that index we sometimes do check those, because there's the potential
for memory corruption in those cases.


From mike.kaplinskiy at gmail.com  Wed Apr  7 18:06:33 2010
From: mike.kaplinskiy at gmail.com (Mike Kaplinskiy)
Date: Wed, 7 Apr 2010 19:06:33 -0400
Subject: [PATCH 01/10] server: allow polling for no events in 
	set_fd_events
In-Reply-To: <87hbnompa2.fsf@wine.dyndns.org>
References: <v2s4d8b5aa81003312000s1f2baedfh3778e2bbb37ebcdd@mail.gmail.com> 
	<87mxxgn5q0.fsf@wine.dyndns.org>
	<x2h4d8b5aa81004061018n6b2a87c2oe304274acc5bca03@mail.gmail.com>
	<87hbnompa2.fsf@wine.dyndns.org>
Message-ID: <s2r4d8b5aa81004071606hfc95bc51k66d2ea0de8fce9d4@mail.gmail.com>

On Tue, Apr 6, 2010 at 2:03 PM, Alexandre Julliard <julliard at winehq.org> wrote:
> Mike Kaplinskiy <mike.kaplinskiy at gmail.com> writes:
>
>> Would allowing adding the fd to the poll loop after it has been
>> removed be more sane? Otherwise we have to resort to ugly things like
>> sock_try_event (which only half work).
>
> I don't think that makes sense either. The error condition is not going
> to go away so you can no longer poll on it anyway, you really need to
> close the socket and create a new one.
>
> --
> Alexandre Julliard
> julliard at winehq.org
>

That's only true in the case of a full close; if you do
shutdown(,SD_SEND) on the remote end, we will get POLLIN/0 recv, but
if we decide to do a send after that and the connection gets broken
(either the remote fully closes the socket or we get connection
reset), we will receive a POLLHUP/POLLERR with a different error code,
which is what windows reports. The problem is that there are two
halves of the connection to hang up (when both have hangup we get a
POLLHUP, otherwise just a POLLIN/0 recv). (data from
http://www.greenend.org.uk/rjk/2001/06/poll.html )

But I see your point that perhaps it doesn't belong in the main loop
when one of the halves gets closed. I guess we can keep sock_try_event
around but only use it when the socket has been removed from the main
loop. I'll also add detection of half-closed connection and drop that
event if the other half hasn't hung up yet. Sadly looks like MacOS
will be left out of that detection since it reports POLLIN|POLLHUP for
everything.

Does that sound good?

Mike.


From thomas.mullaly at gmail.com  Wed Apr  7 20:43:45 2010
From: thomas.mullaly at gmail.com (Thomas Mullaly)
Date: Wed, 7 Apr 2010 21:43:45 -0400
Subject: [GSoC] IUri Implementations
In-Reply-To: <4BB343AD.2010706@codeweavers.com>
References: <4BB281E5.7070803@gmail.com> <4BB2895D.30505@codeweavers.com>
	<4BB2B026.1000704@gmail.com> <4BB343AD.2010706@codeweavers.com>
Message-ID: <u2qda106d8d1004071843tace2dbcu3ab2d284329017a0@mail.gmail.com>

>
> In general, the idea looks right, that's how it probably should be
>  implemented. This is an implementation detail through. The bigger and
> more important problem is URI parsing and canonicalization. That's where
> most of work needs to be done. In this case tests will be also very
> important. You don't know how it should work until you have a test. The
> first step would be to write a test infrastructure some tests (adding
> new test shouldn't be harder than filling a table with more data). Once
> it's done, you'll be able to decide on best way to implement parser and
> IUri interface. The project should result in many tests and good support
> for at least more useful flags and IUri functions.


Hi Jacek,

Sorry for my delayed response. Thank you for your suggestions.

For the testing infrastructure, I was thinking about writing a few Windows
programs that use Microsoft's IUri implementation to generate the results
that my testing infrastructure would use to make sure my implementation is
working correctly. Is this the right approach or would you recommend doing
it another way?

Also, I have finished a rough draft of my proposal and I was wondering if it
would appropriate to post to it to the mailing list in order to receive
feedback from you and others.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100407/9d89dc59/attachment.htm>

From dmitry at codeweavers.com  Wed Apr  7 22:30:04 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 8 Apr 2010 12:30:04 +0900
Subject: [PATCH] [Server]: correctly set the DR0..7 registers on Linux
	for x86_64 architecture
In-Reply-To: <20100407190545.3627.73820.stgit@Euterpe>
References: <20100407190545.3627.73820.stgit@Euterpe>
Message-ID: <20100408123004.bc2e4467.dmitry@codeweavers.com>

Eric Pouech <eric.pouech at orange.fr> wrote:

> +    case CPU_x86_64:
> +        context->debug.x86_64_regs.dr0 = data[0];
> +        context->debug.x86_64_regs.dr1 = data[1];
> +        context->debug.x86_64_regs.dr2 = data[2];
> +        context->debug.x86_64_regs.dr3 = data[3];
> +        context->debug.x86_64_regs.dr6 = data[6];
> +        context->debug.x86_64_regs.dr7 = data[7];
> +    default:
> +        set_error( STATUS_INVALID_PARAMETER );
> +        goto done;
> +    }

You forgot 'break'.

> +    case CPU_x86_64:
> +        if (ptrace( PTRACE_POKEUSER, pid, DR_OFFSET(0), context->debug.x86_64_regs.dr0 ) == -1) goto error;
> +        if (thread->context) thread->context->debug.x86_64_regs.dr0 = context->debug.x86_64_regs.dr0;
> +        if (ptrace( PTRACE_POKEUSER, pid, DR_OFFSET(1), context->debug.x86_64_regs.dr1 ) == -1) goto error;
> +        if (thread->context) thread->context->debug.x86_64_regs.dr1 = context->debug.x86_64_regs.dr1;
> +        if (ptrace( PTRACE_POKEUSER, pid, DR_OFFSET(2), context->debug.x86_64_regs.dr2 ) == -1) goto error;
> +        if (thread->context) thread->context->debug.x86_64_regs.dr2 = context->debug.x86_64_regs.dr2;
> +        if (ptrace( PTRACE_POKEUSER, pid, DR_OFFSET(3), context->debug.x86_64_regs.dr3 ) == -1) goto error;
> +        if (thread->context) thread->context->debug.x86_64_regs.dr3 = context->debug.x86_64_regs.dr3;
> +        if (ptrace( PTRACE_POKEUSER, pid, DR_OFFSET(6), context->debug.x86_64_regs.dr6 ) == -1) goto error;
> +        if (thread->context) thread->context->debug.x86_64_regs.dr6 = context->debug.x86_64_regs.dr6;
> +        if (ptrace( PTRACE_POKEUSER, pid, DR_OFFSET(7), context->debug.x86_64_regs.dr7 ) == -1) goto error;
> +        if (thread->context) thread->context->debug.x86_64_regs.dr7 = context->debug.x86_64_regs.dr7;
> +    default:
> +        set_error( STATUS_INVALID_PARAMETER );
> +    }

Same here.

-- 
Dmitry.


From Troy.Wolbrink at ccci.org  Wed Apr  7 08:12:55 2010
From: Troy.Wolbrink at ccci.org (Troy Wolbrink)
Date: Wed, 7 Apr 2010 09:12:55 -0400
Subject: a new trick to add to winetricks
Message-ID: <5F41AFE070FE0549822A07BA1F5EDD8506268CF8@HART-E012V.net.ccci.org>

I've found the winetricks script invaluable in trying to get my app
running on Wine.  But I found that when installing msxml6, I needed to
change the overrides for msi.dll and msiexec.exe to "builtin,native".  I
previously installed the native msi20, and msxml6 wouldn't install with
the native installer.  It installs fine with the builtin installer.

 

Thanks,
Troy

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100407/19054707/attachment.htm>

From dmitry at codeweavers.com  Thu Apr  8 02:48:58 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 8 Apr 2010 16:48:58 +0900
Subject: winebrowser: Fix obtaining of the ASCII strings through the DDE
In-Reply-To: <201004071609.07345.shpigor@etersoft.ru>
References: <201004071609.07345.shpigor@etersoft.ru>
Message-ID: <20100408164858.3886d748.dmitry@codeweavers.com>

Ilya Shpigor <shpigor at etersoft.ru> wrote:

[skipped]

If it could be that easy this would be fixed already. There is a bug
in bugzilla with the details about this problem.

-- 
Dmitry.


From bunglehead at gmail.com  Thu Apr  8 03:09:08 2010
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Thu, 08 Apr 2010 12:09:08 +0400
Subject: a new trick to add to winetricks
In-Reply-To: <5F41AFE070FE0549822A07BA1F5EDD8506268CF8@HART-E012V.net.ccci.org>
References: <5F41AFE070FE0549822A07BA1F5EDD8506268CF8@HART-E012V.net.ccci.org>
Message-ID: <4BBD8F24.8070600@gmail.com>

On 4/7/2010 17:12, Troy Wolbrink wrote:
>
> I've found the winetricks script invaluable in trying to get my app 
> running on Wine.  But I found that when installing msxml6, I needed to 
> change the overrides for msi.dll and msiexec.exe to "builtin,native".  
> I previously installed the native msi20, and msxml6 wouldn't install 
> with the native installer.  It installs fine with the builtin installer.
>
Hi, Troy.

Could you also open a bug for this msxml6 installer problem?
>
> Thanks,
> Troy
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100408/f2b00048/attachment-0001.htm>

From arethusa26 at gmail.com  Thu Apr  8 03:15:54 2010
From: arethusa26 at gmail.com (Andrew Nguyen)
Date: Thu, 8 Apr 2010 03:15:54 -0500
Subject: a new trick to add to winetricks
In-Reply-To: <4BBD8F24.8070600@gmail.com>
References: <5F41AFE070FE0549822A07BA1F5EDD8506268CF8@HART-E012V.net.ccci.org>
	<4BBD8F24.8070600@gmail.com>
Message-ID: <o2oa1affb701004080115t9560fa02scaaaf542284f5582@mail.gmail.com>

On Thu, Apr 8, 2010 at 3:09 AM, Nikolay Sivov <bunglehead at gmail.com> wrote:
> On 4/7/2010 17:12, Troy Wolbrink wrote:
>
> I?ve found the winetricks script invaluable in trying to get my app running
> on Wine.? But I found that when installing msxml6, I needed to change the
> overrides for msi.dll and msiexec.exe to ?builtin,native?.? I previously
> installed the native msi20, and msxml6 wouldn?t install with the native
> installer.? It installs fine with the builtin installer.
>
> Hi, Troy.
>
> Could you also open a bug for this msxml6 installer problem?
>
> Thanks,
> Troy
>
>
>

Actually, from Troy's description, there isn't any valid bug at all.
Troy claims that the msxml6 installer broke when using native msi.dll
but succeeded with Wine's msi implementation. Native msi tends to be
pretty useless and break when used on Wine, and there's no problem in
Wine, so a bug would be useless here.


From thunderbird2k at gmail.com  Thu Apr  8 03:25:14 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Thu, 8 Apr 2010 10:25:14 +0200
Subject: Direct3D testing project (GSoC)
In-Reply-To: <z2t58aa73be1004061921t71d73d5co7b1055043aa12bae@mail.gmail.com>
References: <z2t58aa73be1004061921t71d73d5co7b1055043aa12bae@mail.gmail.com>
Message-ID: <s2uc8485d471004080125m366cd06aif1867b7f33557e55@mail.gmail.com>

On Wed, Apr 7, 2010 at 4:21 AM, Conrad Buck <conartist6 at gmail.com> wrote:
> Hello devels,
> ?? ? I'm looking at submitting a SoC proposal to the wine project, but I'm
> feeling a little overwhelmed as my current coding experience is all over the
> place, and very little of it working with existing projects. My most recent
> work has been looking ?low-level code and algorithms behind basic OpenGL, so
> I thought perhaps I might be able to make relevant contributions to the
> project of testing and improving Direct3D support. Can anyone that knows
> more about whats under the hood for that sort of functionality in wine tell
> me what kind of magnitude of project I might be looking at? Only a limited
> number of bug reports have been filed, but all seem to be indicative of
> fairly major issues. Once I get more of an idea of what I might be dealing
> with (and examine some of the problems myself) I can fine-tune my proposal.
> Thanks,
> ?? ?Conrad
>
>
>

Hi,

First of all welcome to Wine. Our Direct3D -> OpenGL code is quite
complex and has a steep learning curve, so just hacking on Direct3D to
improve big chunks of code isn't that suited. That said there is
certainly work which you could do in the testing / bug hunting area.

For instance you could work on improving our test suite. Currently
mostly Nvidia systems pass the tests. For a part this is due to driver
bugs in the other drivers but some tests are also too strict and there
might be some WineD3D bugs. You could fix broken tests, fix bugs in
our Direct3D code found by the tests, you could add new tests and
perhaps you could also improve the tests on Windows. If you want you
might be able to fix some normal Direct3D bug reports as well (those
will likely require new tests). It might be hard to write a good
proposal though (especially judging whether you reached your goals
might be hard).

Another form of testing which you could improve is our 'gaming' test
suite in which performance in games is tested for regressions. I have
never used those tests but according to Stefan the test suite can use
improvements. Perhaps some visual tests could be added to them as
well, to see if there are no visual regressions. Not sure how that
should work but I guess you would need a mechanism for recording
keyboard/mouse movements and playing them back, so that you reach
fixed spots at which you can make screenshots for comparisons.

The two suggestions and some more info can also be found in a recent
thread which can be found here:
http://www.winehq.org/pipermail/wine-devel/2010-March/082698.html
http://www.winehq.org/pipermail/wine-devel/2010-March/082707.html

Good luck writing a proposal and if you have questions just ask!
Roderick


From jacek at codeweavers.com  Thu Apr  8 04:00:58 2010
From: jacek at codeweavers.com (Jacek Caban)
Date: Thu, 08 Apr 2010 11:00:58 +0200
Subject: [GSoC] IUri Implementations
In-Reply-To: <u2qda106d8d1004071843tace2dbcu3ab2d284329017a0@mail.gmail.com>
References: <4BB281E5.7070803@gmail.com>
	<4BB2895D.30505@codeweavers.com>	<4BB2B026.1000704@gmail.com>
	<4BB343AD.2010706@codeweavers.com>
	<u2qda106d8d1004071843tace2dbcu3ab2d284329017a0@mail.gmail.com>
Message-ID: <4BBD9B4A.8070003@codeweavers.com>

Hi Thomas,

On 4/8/10 3:43 AM, Thomas Mullaly wrote:
>
>     In general, the idea looks right, that's how it probably should be
>     implemented. This is an implementation detail through. The bigger and
>     more important problem is URI parsing and canonicalization. That's
>     where
>     most of work needs to be done. In this case tests will be also very
>     important. You don't know how it should work until you have a
>     test. The
>     first step would be to write a test infrastructure some tests (adding
>     new test shouldn't be harder than filling a table with more data).
>     Once
>     it's done, you'll be able to decide on best way to implement
>     parser and
>     IUri interface. The project should result in many tests and good
>     support
>     for at least more useful flags and IUri functions.
>
>
> Hi Jacek,
>
> Sorry for my delayed response. Thank you for your suggestions.
>
> For the testing infrastructure, I was thinking about writing a few 
> Windows programs that use Microsoft's IUri implementation to generate 
> the results that my testing infrastructure would use to make sure my 
> implementation is working correctly. Is this the right approach or 
> would you recommend doing it another way?

Test should be integrated with Wine tests. See dlls/shlwapi/tests/url.c 
and dlls/wininet/tests/url.c for an idea of how it should be done.

> Also, I have finished a rough draft of my proposal and I was wondering 
> if it would appropriate to post to it to the mailing list in order to 
> receive feedback from you and others.

If you have specific questions, feel free to ask here. Proposal itself 
should be posted to gsoc app. It's capable of editing proposals and 
getting feedback.


Jacek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100408/f3c0496e/attachment.htm>

From hverbeet at gmail.com  Thu Apr  8 04:58:48 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Thu, 8 Apr 2010 11:58:48 +0200
Subject: [PATCH 4/4] wined3d: Add an initial fbo_blit implementation.
In-Reply-To: <1270674746-26368-4-git-send-email-thunderbird2k@gmail.com>
References: <1270674746-26368-1-git-send-email-thunderbird2k@gmail.com>
	<1270674746-26368-2-git-send-email-thunderbird2k@gmail.com>
	<1270674746-26368-3-git-send-email-thunderbird2k@gmail.com>
	<1270674746-26368-4-git-send-email-thunderbird2k@gmail.com>
Message-ID: <j2ld658b69e1004080258z2f33f80doc0c49af7a04919b1@mail.gmail.com>

I don't think so.

Looking at cpu_blit, that "blitter" has exactly a single function
that's actually used, and it might as well have been a function on its
own. I've twice pointed out how to avoid that situation, but for some
reason you ignored that. In the case of cpu_blit I went along with
that in the assumption that later patches would fix it, but I'm not
having another implementation like that.


From hverbeet at gmail.com  Thu Apr  8 04:58:59 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Thu, 8 Apr 2010 11:58:59 +0200
Subject: [PATCH 3/4] wined3d: Start moving texture format fixups to the 
	formats table.
In-Reply-To: <1270674746-26368-3-git-send-email-thunderbird2k@gmail.com>
References: <1270674746-26368-1-git-send-email-thunderbird2k@gmail.com>
	<1270674746-26368-2-git-send-email-thunderbird2k@gmail.com>
	<1270674746-26368-3-git-send-email-thunderbird2k@gmail.com>
Message-ID: <j2kd658b69e1004080258pd8d7a8a2obcfe55c9f33e4777@mail.gmail.com>

On 7 April 2010 23:12, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
> @@ -236,9 +236,55 @@ struct wined3d_format_texture_info
> ? ? GLint gl_format;
> ? ? GLint gl_type;
> ? ? unsigned int flags;
> + ? ?unsigned int conv_byte_count;
> ? ? GL_SupportedExt extension;
> + ? ?void (*convert)(const BYTE *src, BYTE *dst, UINT pitch, UINT width, UINT height);
> ?};
>
...
> - ? ? ? ? ? ?GL_LUMINANCE_ALPHA, ? ? ? ? GL_UNSIGNED_BYTE,
> + ? ? ? ? ? ?GL_LUMINANCE_ALPHA, ? ? ? ? GL_UNSIGNED_BYTE, ? ? ? ? ? ? ? ? 0,
> ? ? ? ? ? ? WINED3DFMT_FLAG_FILTERING,
> - ? ? ? ? ? ?WINED3D_GL_EXT_NONE},
> + ? ? ? ? ? ?WINED3D_GL_EXT_NONE, ? ? ? ?NULL},
Did you test this patch much?


From hverbeet at gmail.com  Thu Apr  8 04:59:09 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Thu, 8 Apr 2010 11:59:09 +0200
Subject: [PATCH 2/4] wined3d: Let d3dfmt_get_conv return a 
	wined3d_format_desc. This required some code shuffling mostly in the
	SRGB area.
In-Reply-To: <1270674746-26368-2-git-send-email-thunderbird2k@gmail.com>
References: <1270674746-26368-1-git-send-email-thunderbird2k@gmail.com>
	<1270674746-26368-2-git-send-email-thunderbird2k@gmail.com>
Message-ID: <h2hd658b69e1004080259z3e480a7dkf504cb397b1a2042@mail.gmail.com>

On 7 April 2010 23:12, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
> ---
> ?dlls/wined3d/device.c ? ? ? ? ?| ? ?5 +-
> ?dlls/wined3d/surface.c ? ? ? ? | ?169 +++++++++++++++++++++++-----------------
> ?dlls/wined3d/utils.c ? ? ? ? ? | ? ?1 +
> ?dlls/wined3d/wined3d_private.h | ? ?5 +-
> ?4 files changed, 102 insertions(+), 78 deletions(-)
>
I'm not so convinced by the idea of having mutable format
descriptions. What problem are you solving, and why is this the best
solution? At the very least the patch looks like it could be split
though.


From thunderbird2k at gmail.com  Thu Apr  8 05:16:30 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Thu, 8 Apr 2010 12:16:30 +0200
Subject: [PATCH 2/4] wined3d: Let d3dfmt_get_conv return a 
	wined3d_format_desc. This required some code shuffling mostly in the
	SRGB area.
In-Reply-To: <h2hd658b69e1004080259z3e480a7dkf504cb397b1a2042@mail.gmail.com>
References: <1270674746-26368-1-git-send-email-thunderbird2k@gmail.com>
	<1270674746-26368-2-git-send-email-thunderbird2k@gmail.com>
	<h2hd658b69e1004080259z3e480a7dkf504cb397b1a2042@mail.gmail.com>
Message-ID: <y2qc8485d471004080316u27e8f37ew9a8bbdc545efbd79@mail.gmail.com>

On Thu, Apr 8, 2010 at 11:59 AM, Henri Verbeet <hverbeet at gmail.com> wrote:
> On 7 April 2010 23:12, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
>> ---
>> ?dlls/wined3d/device.c ? ? ? ? ?| ? ?5 +-
>> ?dlls/wined3d/surface.c ? ? ? ? | ?169 +++++++++++++++++++++++-----------------
>> ?dlls/wined3d/utils.c ? ? ? ? ? | ? ?1 +
>> ?dlls/wined3d/wined3d_private.h | ? ?5 +-
>> ?4 files changed, 102 insertions(+), 78 deletions(-)
>>
> I'm not so convinced by the idea of having mutable format
> descriptions. What problem are you solving, and why is this the best
> solution? At the very least the patch looks like it could be split
> though.
>

The ultimate goals are to reduce the use of d3dfmt_get_conv (some
places can just use the format table) and to clean up d3dfmt_get_conv.
I don't like a mutable format descriptor either but it is temporarily.
The texture format fixups can all be moved over to the formats table
(see patch 3). In a next step the color keying part could be cleaned
up. The switch statement there could for instance be turned into a
small wined3d_format_desc table.

Roderick


From julliard at winehq.org  Thu Apr  8 05:16:47 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 08 Apr 2010 12:16:47 +0200
Subject: [PATCH 01/10] server: allow polling for no events in set_fd_events
In-Reply-To: <s2r4d8b5aa81004071606hfc95bc51k66d2ea0de8fce9d4@mail.gmail.com>
	(Mike Kaplinskiy's message of "Wed, 7 Apr 2010 19:06:33 -0400")
References: <v2s4d8b5aa81003312000s1f2baedfh3778e2bbb37ebcdd@mail.gmail.com>
	<87mxxgn5q0.fsf@wine.dyndns.org>
	<x2h4d8b5aa81004061018n6b2a87c2oe304274acc5bca03@mail.gmail.com>
	<87hbnompa2.fsf@wine.dyndns.org>
	<s2r4d8b5aa81004071606hfc95bc51k66d2ea0de8fce9d4@mail.gmail.com>
Message-ID: <877hoimepc.fsf@wine.dyndns.org>

Mike Kaplinskiy <mike.kaplinskiy at gmail.com> writes:

> But I see your point that perhaps it doesn't belong in the main loop
> when one of the halves gets closed. I guess we can keep sock_try_event
> around but only use it when the socket has been removed from the main
> loop. I'll also add detection of half-closed connection and drop that
> event if the other half hasn't hung up yet. Sadly looks like MacOS
> will be left out of that detection since it reports POLLIN|POLLHUP for
> everything.
>
> Does that sound good?

I think sock_try_event shouldn't even do a poll() at all. Once we have
received POLLHUP there's no point in continuing to poll. All it should
have to do is try a MSG_PEEK read to detect EOF for platforms where that
triggers a POLLHUP. All other cases should be handled by the main loop.

-- 
Alexandre Julliard
julliard at winehq.org


From thunderbird2k at gmail.com  Thu Apr  8 05:31:43 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Thu, 8 Apr 2010 12:31:43 +0200
Subject: [PATCH 3/4] wined3d: Start moving texture format fixups to the 
	formats table.
In-Reply-To: <j2kd658b69e1004080258pd8d7a8a2obcfe55c9f33e4777@mail.gmail.com>
References: <1270674746-26368-1-git-send-email-thunderbird2k@gmail.com>
	<1270674746-26368-2-git-send-email-thunderbird2k@gmail.com>
	<1270674746-26368-3-git-send-email-thunderbird2k@gmail.com>
	<j2kd658b69e1004080258pd8d7a8a2obcfe55c9f33e4777@mail.gmail.com>
Message-ID: <q2pc8485d471004080331yb49ce25o9ea65a5df3c09621@mail.gmail.com>

On Thu, Apr 8, 2010 at 11:58 AM, Henri Verbeet <hverbeet at gmail.com> wrote:
> On 7 April 2010 23:12, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
>> @@ -236,9 +236,55 @@ struct wined3d_format_texture_info
>> ? ? GLint gl_format;
>> ? ? GLint gl_type;
>> ? ? unsigned int flags;
>> + ? ?unsigned int conv_byte_count;
>> ? ? GL_SupportedExt extension;
>> + ? ?void (*convert)(const BYTE *src, BYTE *dst, UINT pitch, UINT width, UINT height);
>> ?};
>>
> ...
>> - ? ? ? ? ? ?GL_LUMINANCE_ALPHA, ? ? ? ? GL_UNSIGNED_BYTE,
>> + ? ? ? ? ? ?GL_LUMINANCE_ALPHA, ? ? ? ? GL_UNSIGNED_BYTE, ? ? ? ? ? ? ? ? 0,
>> ? ? ? ? ? ? WINED3DFMT_FLAG_FILTERING,
>> - ? ? ? ? ? ?WINED3D_GL_EXT_NONE},
>> + ? ? ? ? ? ?WINED3D_GL_EXT_NONE, ? ? ? ?NULL},
> Did you test this patch much?
>
>

Argh, it seems I made a stupid copy&paste error. I wrote the code a
few weeks ago and did test that well on my desktop but on my laptop
(ATi..) the d3d9 V8U8 test and a lot of others never worked :( The
original patch code worked fine, I assumed it would still work (bad,
bad, bad but I only have the laptop) ...

+    unsigned int            byte_count_fixup, Flags;
     GL_SupportedExt extension;
+    void (*convert)(const BYTE *src, BYTE *dst, UINT pitch, UINT width,
+                    UINT height, UINT outpitch);
 } GlPixelFormatDescTemplate;

When I resubmit it, I will test it with another format which has tests
which work on my laptop first.

Roderick


From ggeldorp at vmware.com  Thu Apr  8 08:36:11 2010
From: ggeldorp at vmware.com (Greg Geldorp)
Date: Thu, 8 Apr 2010 06:36:11 -0700
Subject: [3/3] d3dx9: Add source register modifiers (sm 2+) support to
	the shader assembler.
Message-ID: <1C77FC3365DBD149802E0F5381EBE2C9024ACC6CD7@EXCH-MBX-4.vmware.com>

Hi Matteo,

This causes the test to crash on Vista and Windows 2008, see http://winetestbot.geldorp.nl/JobDetails.pl?Key=1315

Ge.


From Troy.Wolbrink at ccci.org  Thu Apr  8 07:04:45 2010
From: Troy.Wolbrink at ccci.org (Troy Wolbrink)
Date: Thu, 8 Apr 2010 08:04:45 -0400
Subject: a new trick to add to winetricks
References: <5F41AFE070FE0549822A07BA1F5EDD8506268CF8@HART-E012V.net.ccci.org><4BBD8F24.8070600@gmail.com>
	<o2oa1affb701004080115t9560fa02scaaaf542284f5582@mail.gmail.com>
Message-ID: <5F41AFE070FE0549822A07BA1F5EDD850679A6@HART-E012V.net.ccci.org>

Correct.  This isn't a bug in Wine.  It's a suggestion for making WineTricks more robust.  The reason I sent this email re WineTricks is because at:
http://wiki.winehq.org/winetricks
 
It says:

Reporting bugs *in* Winetricks

Winetricks has a bug tracking system at http://code.google.com/p/winezeug/issues/list though sending email to wine-devel at winehq.org is usually good enough. 

--Troy


________________________________

From: Andrew Nguyen [mailto:arethusa26 at gmail.com]
Sent: Thu 4/8/2010 4:15 AM
To: Nikolay Sivov
Cc: wine-devel at winehq.org; Troy Wolbrink
Subject: Re: a new trick to add to winetricks



On Thu, Apr 8, 2010 at 3:09 AM, Nikolay Sivov <bunglehead at gmail.com> wrote:
> On 4/7/2010 17:12, Troy Wolbrink wrote:
>
> I've found the winetricks script invaluable in trying to get my app running
> on Wine.  But I found that when installing msxml6, I needed to change the
> overrides for msi.dll and msiexec.exe to "builtin,native".  I previously
> installed the native msi20, and msxml6 wouldn't install with the native
> installer.  It installs fine with the builtin installer.
>
> Hi, Troy.
>
> Could you also open a bug for this msxml6 installer problem?
>
> Thanks,
> Troy
>
>
>

Actually, from Troy's description, there isn't any valid bug at all.
Troy claims that the msxml6 installer broke when using native msi.dll
but succeeded with Wine's msi implementation. Native msi tends to be
pretty useless and break when used on Wine, and there's no problem in
Wine, so a bug would be useless here.




From Joerg-Cyril.Hoehle at t-systems.com  Thu Apr  8 09:27:51 2010
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Thu, 8 Apr 2010 16:27:51 +0200
Subject: [PATCH 1/2] ntdll: Queue WT_EXECUTEINTIMERTHREAD timers as APC
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B740319@S4DE8PSAANK.mitte.t-com.de>

>According to the windows documentation about CreateTimerQueueTimer its 
>how its done.
Indeed, and I believe MS puts APC to even more uses than documented, c.f.
http://bugs.winehq.org/show_bug.cgi?id=3930#c37
Maybe there are other places where Wine ought to use APC.

One issue with APC for WINMM is that one needs further tests to
investigate which call causes memoization of the GetCurrentThread()
field to which the callback will be delivered?
 - Is is the thread that called midiOpen?
 - The thread that called midiWrite?

BTW, would it be ok for Wine to
 a) include a patch that introduces version-specific behaviour
   (as mentioned in the above bug)?
 b) Or should Wine's WINMM generally behave like Win9X because
    it's old and many newer apps use another API?
 c) Like W2k/xp/7 because that's what's current now.

Regards,
 J?rg H?hle


From hverbeet at gmail.com  Thu Apr  8 09:29:28 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Thu, 8 Apr 2010 16:29:28 +0200
Subject: [1/3] d3dx9: Add swizzle and writemask support to the shader 
	assembler.
In-Reply-To: <p2v4bfd6eb11004080520of0c84999r8b26f616f71a952@mail.gmail.com>
References: <p2v4bfd6eb11004080520of0c84999r8b26f616f71a952@mail.gmail.com>
Message-ID: <j2rd658b69e1004080729oe7267a6eq7010bdf68bc11f8e@mail.gmail.com>

On 8 April 2010 14:20, Matteo Bruni <matteo.mystral at gmail.com> wrote:
>
Wouldn't it make a lot more sense to simply define a swizzle as
something like "([xyzw]{1,4})|([rgba]{1,4})" and handle write masks
separately?


From julliard at winehq.org  Thu Apr  8 10:14:21 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 08 Apr 2010 17:14:21 +0200
Subject: winmm: MCI system commands are not eligible for auto-open.
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B740314@S4DE8PSAANK.mitte.t-com.de>
	(Joerg-Cyril Hoehle's message of "Wed, 7 Apr 2010 12:37:37 +0200")
References: <47CC5ABB01651443A88DB8EC5B4D657B740314@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <8739z6m0xe.fsf@wine.dyndns.org>

<Joerg-Cyril.Hoehle at t-systems.com> writes:

> @@ -1341,6 +1343,7 @@ DWORD WINAPI mciSendStringW(LPCWSTR lpstrCommand, LPWSTR lpstrRet,
>  	    if (wmd)
>  		data[4] = wmd->wType;
>  	}
> +    } else if (!strcmpW(verb, wszSound) || !strcmpW(verb, wszBreak)) {
>      } else if ((MCI_ALL_DEVICE_ID != uDevID) && !(wmd = MCI_GetDriver(mciGetDeviceIDW(dev)))) {

You should at the very least add a comment to that empty block.

Also it fails here:

../../../tools/runtest -q -P wine -M winmm.dll -T ../../.. -p winmm_test.exe.so mci.c && touch mci.ok
mci.c:808: Test failed: got 0008 instead of MCI_NOTIFY_xyz 0000 from command sound notify
mci.c:820: Tests skipped: Skipping auto-open tests in Wine
make[1]: *** [mci.ok] Error 1

-- 
Alexandre Julliard
julliard at winehq.org


From austinenglish at gmail.com  Thu Apr  8 10:48:10 2010
From: austinenglish at gmail.com (Austin English)
Date: Thu, 8 Apr 2010 10:48:10 -0500
Subject: a new trick to add to winetricks
In-Reply-To: <5F41AFE070FE0549822A07BA1F5EDD850679A6@HART-E012V.net.ccci.org>
References: <5F41AFE070FE0549822A07BA1F5EDD8506268CF8@HART-E012V.net.ccci.org>
	<4BBD8F24.8070600@gmail.com>
	<o2oa1affb701004080115t9560fa02scaaaf542284f5582@mail.gmail.com>
	<5F41AFE070FE0549822A07BA1F5EDD850679A6@HART-E012V.net.ccci.org>
Message-ID: <o2pb6bb06271004080848ja84d4d7boe5b7c6eef2d9a6eb@mail.gmail.com>

On Thu, Apr 8, 2010 at 7:04 AM, Troy Wolbrink <Troy.Wolbrink at ccci.org> wrote:
> Correct. ?This isn't a bug in Wine. ?It's a suggestion for making WineTricks more robust. ?The reason I sent this email re WineTricks is because at:

It's not a winetricks bug either, it doesn't set msi2 to native when
install msxml6, you did that. Winetricks doesn't try to second guess
the user, it does exactly what you tell it.

> http://wiki.winehq.org/winetricks
>
> It says:
>
> Reporting bugs *in* Winetricks
>
> Winetricks has a bug tracking system at http://code.google.com/p/winezeug/issues/list though sending email to wine-devel at winehq.org is usually good enough.

Reporting issues here is fine, Dan and I will see them here, and it
saves you trouble from registering on google code. Emailing me/Dan
directly is also fine.

-- 
-Austin


From thomas.mullaly at gmail.com  Thu Apr  8 10:58:38 2010
From: thomas.mullaly at gmail.com (Thomas Mullaly)
Date: Thu, 08 Apr 2010 11:58:38 -0400
Subject: [GSoC] IUri Implementations
In-Reply-To: <4BBD9B4A.8070003@codeweavers.com>
References: <4BB281E5.7070803@gmail.com>	<4BB2895D.30505@codeweavers.com>	<4BB2B026.1000704@gmail.com>	<4BB343AD.2010706@codeweavers.com>	<u2qda106d8d1004071843tace2dbcu3ab2d284329017a0@mail.gmail.com>
	<4BBD9B4A.8070003@codeweavers.com>
Message-ID: <4BBDFD2E.1050000@gmail.com>

An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100408/58acaff6/attachment.htm>

From mike.kaplinskiy at gmail.com  Thu Apr  8 13:22:03 2010
From: mike.kaplinskiy at gmail.com (Mike Kaplinskiy)
Date: Thu, 8 Apr 2010 19:22:03 +0100
Subject: [PATCH 01/10] server: allow polling for no events in 
	set_fd_events
In-Reply-To: <877hoimepc.fsf@wine.dyndns.org>
References: <v2s4d8b5aa81003312000s1f2baedfh3778e2bbb37ebcdd@mail.gmail.com> 
	<87mxxgn5q0.fsf@wine.dyndns.org>
	<x2h4d8b5aa81004061018n6b2a87c2oe304274acc5bca03@mail.gmail.com>
	<87hbnompa2.fsf@wine.dyndns.org>
	<s2r4d8b5aa81004071606hfc95bc51k66d2ea0de8fce9d4@mail.gmail.com>
	<877hoimepc.fsf@wine.dyndns.org>
Message-ID: <o2u4d8b5aa81004081122sd49a34ffoac43f0f5a3b6ab13@mail.gmail.com>

On Thu, Apr 8, 2010 at 11:16 AM, Alexandre Julliard <julliard at winehq.org> wrote:
> Mike Kaplinskiy <mike.kaplinskiy at gmail.com> writes:
>
>> But I see your point that perhaps it doesn't belong in the main loop
>> when one of the halves gets closed. I guess we can keep sock_try_event
>> around but only use it when the socket has been removed from the main
>> loop. I'll also add detection of half-closed connection and drop that
>> event if the other half hasn't hung up yet. Sadly looks like MacOS
>> will be left out of that detection since it reports POLLIN|POLLHUP for
>> everything.
>>
>> Does that sound good?
>
> I think sock_try_event shouldn't even do a poll() at all. Once we have
> received POLLHUP there's no point in continuing to poll. All it should
> have to do is try a MSG_PEEK read to detect EOF for platforms where that
> triggers a POLLHUP. All other cases should be handled by the main loop.
>
> --
> Alexandre Julliard
> julliard at winehq.org
>

This won't work for implementing half-closed sockets. If we have only
the read half is closed, we will get POLLIN/0 recv indefinitely if we
keep polling (not POLLHUP). If we remove it from the loop, we have to
keep polling (once in a while, i.e. when an enable_socket_event gets
through) until we get a POLLHUP/POLLERR which signals the other half
is closed. On some platforms this won't work, but they will jump to a
full close automatically (i.e. POLLHUP right away). The problem now is
that if we receive a shutdown, we will spam FD_CLOSE on every
successful send.

I suppose if we don't care to send more than 1 FD_CLOSE (which windows
does do), we can just remove the socket from the loop and be done with
it. I don't know if any apps actually depend on receiving a second
FD_CLOSE after the remote end has sent a shutdown.

Should we just implement the 1 FD_CLOSE behavior and then if any
regressions relating to it pop up bring back try_event?

Mike.


From julliard at winehq.org  Thu Apr  8 14:29:28 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 08 Apr 2010 21:29:28 +0200
Subject: [PATCH 01/10] server: allow polling for no events in set_fd_events
In-Reply-To: <o2u4d8b5aa81004081122sd49a34ffoac43f0f5a3b6ab13@mail.gmail.com>
	(Mike Kaplinskiy's message of "Thu, 8 Apr 2010 19:22:03 +0100")
References: <v2s4d8b5aa81003312000s1f2baedfh3778e2bbb37ebcdd@mail.gmail.com>
	<87mxxgn5q0.fsf@wine.dyndns.org>
	<x2h4d8b5aa81004061018n6b2a87c2oe304274acc5bca03@mail.gmail.com>
	<87hbnompa2.fsf@wine.dyndns.org>
	<s2r4d8b5aa81004071606hfc95bc51k66d2ea0de8fce9d4@mail.gmail.com>
	<877hoimepc.fsf@wine.dyndns.org>
	<o2u4d8b5aa81004081122sd49a34ffoac43f0f5a3b6ab13@mail.gmail.com>
Message-ID: <87wrwhlp47.fsf@wine.dyndns.org>

Mike Kaplinskiy <mike.kaplinskiy at gmail.com> writes:

> This won't work for implementing half-closed sockets. If we have only
> the read half is closed, we will get POLLIN/0 recv indefinitely if we
> keep polling (not POLLHUP). If we remove it from the loop, we have to
> keep polling (once in a while, i.e. when an enable_socket_event gets
> through) until we get a POLLHUP/POLLERR which signals the other half
> is closed. On some platforms this won't work, but they will jump to a
> full close automatically (i.e. POLLHUP right away). The problem now is
> that if we receive a shutdown, we will spam FD_CLOSE on every
> successful send.

I don't see why. If you don't get POLLHUP then you can keep polling,
just don't select for POLLIN once you have seen EOF. The problem with
POLLHUP/POLLERR is that they can't be masked, but POLLIN doesn't have
that issue.

-- 
Alexandre Julliard
julliard at winehq.org


From austinenglish at gmail.com  Thu Apr  8 15:30:41 2010
From: austinenglish at gmail.com (Austin English)
Date: Thu, 8 Apr 2010 15:30:41 -0500
Subject: a new trick to add to winetricks
In-Reply-To: <5F41AFE070FE0549822A07BA1F5EDD8506268FEE@HART-E012V.net.ccci.org>
References: <5F41AFE070FE0549822A07BA1F5EDD8506268CF8@HART-E012V.net.ccci.org>
	<4BBD8F24.8070600@gmail.com>
	<o2oa1affb701004080115t9560fa02scaaaf542284f5582@mail.gmail.com>
	<5F41AFE070FE0549822A07BA1F5EDD850679A6@HART-E012V.net.ccci.org> 
	<o2pb6bb06271004080848ja84d4d7boe5b7c6eef2d9a6eb@mail.gmail.com> 
	<5F41AFE070FE0549822A07BA1F5EDD8506268FEE@HART-E012V.net.ccci.org>
Message-ID: <h2xb6bb06271004081330kff6f2198r313d6c064d38d157@mail.gmail.com>

On Thu, Apr 8, 2010 at 3:26 PM, Troy Wolbrink <Troy.Wolbrink at ccci.org> wrote:
> I'm not suggesting it's a *bug* in winetricks either. ?I'm saying it's a possible way to make it more robust. ?Since it's known that the native msi installer doesn't work, it seems reasonable to me that you'd set the override to use the builtin msi. ?This is similar to how it overrides the winver to win98 when installing mdac. ?It's a known "trick" to get it to install. ?How is this second guessing the user?

By that logic, winetricks would need to set most dll's to native when
installing _anything_, on the off chance that the user has overridden
the builtin dll.

-- 
-Austin


From jasneet.singh.kandhari at gmail.com  Thu Apr  8 12:28:16 2010
From: jasneet.singh.kandhari at gmail.com (Jasneet Singh)
Date: Thu, 8 Apr 2010 22:58:16 +0530
Subject: Google Summer of Code
Message-ID: <s2v3eafc36e1004081028me0c8accfx9a2fd295c998eb0c@mail.gmail.com>

Respected,
I would like to contribute to the Wine development under the Google Summer
Code.
Have a knowledge of C Language and Vast Experience on Operating Systems

 I have worked and managed various OS ( OPERATING SYSTEMS ) of various
PLATFORMS like:-
 * *
* *

*LINUX Platform*

Ubuntu 6.10

Ubuntu 7.04

Ubuntu 7.10

Ubuntu 8.04

Ubuntu 8.10

Ubutnu 9.04

Ubuntu Server 9.04

Fedora 9

Suse


*Microsoft Windows Platform*

Microsoft Windows 3x

Microsoft Windows 95

Microsoft Windows 98

Microsoft Windows ME

Microsoft Windows Server 2000

Microsoft Windows XP

Microsoft Windows Server 2003

Microsoft Windows Vista

Microsoft Windows 7


*
*

*Macintosh Platform*

Tiger MAC OSX 10.4 **

Leopard MAC OSX 10.5


Opensource is what i promote and as is visible from my mention above, I am a
Linux ( opensource supported ).

>My idea/purposal would be to make wine, powerful-enough interms of its
felxibilty to automatically find the .dll and other lib files req. for the
functioning of .exe files in the Linux OS. Inturn making the Opensource
world more friendly to the Other side. Like the MACFUSE on Mac OS X utilises
a folder approach i.e. it creates a folder with a file index so that the
efficiency of MAC is maintained while making NTFS 3G compatible with HFS+,
similarly as Wine can identify the Windows Drive, it should also be able to
think like a windows OS not as a Program on Linux running .exe files. To
this there are two approaches:-

   1. Decrypting the .exe file to its skin and recompiling it to run in the
   Linux way
   2. Making the .exe files a better illusion of windows while providing a
   better experience of the Linux world to the User


I'm keen to learn as much as I can from this opportunity provided and
contribute to the Development to the best of my caliber.

Regards
Jasneet Singh Kandhari
Chandigarh
India
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100408/b0e5170d/attachment-0001.htm>

From Troy.Wolbrink at ccci.org  Thu Apr  8 15:26:06 2010
From: Troy.Wolbrink at ccci.org (Troy Wolbrink)
Date: Thu, 8 Apr 2010 16:26:06 -0400
Subject: a new trick to add to winetricks
In-Reply-To: <o2pb6bb06271004080848ja84d4d7boe5b7c6eef2d9a6eb@mail.gmail.com>
References: <5F41AFE070FE0549822A07BA1F5EDD8506268CF8@HART-E012V.net.ccci.org>
	<4BBD8F24.8070600@gmail.com>
	<o2oa1affb701004080115t9560fa02scaaaf542284f5582@mail.gmail.com>
	<5F41AFE070FE0549822A07BA1F5EDD850679A6@HART-E012V.net.ccci.org>
	<o2pb6bb06271004080848ja84d4d7boe5b7c6eef2d9a6eb@mail.gmail.com>
Message-ID: <5F41AFE070FE0549822A07BA1F5EDD8506268FEE@HART-E012V.net.ccci.org>

I'm not suggesting it's a *bug* in winetricks either.  I'm saying it's a possible way to make it more robust.  Since it's known that the native msi installer doesn't work, it seems reasonable to me that you'd set the override to use the builtin msi.  This is similar to how it overrides the winver to win98 when installing mdac.  It's a known "trick" to get it to install.  How is this second guessing the user?

--Troy


-----Original Message-----
From: Austin English [mailto:austinenglish at gmail.com] 
Sent: Thursday, April 08, 2010 11:48 AM
To: Troy Wolbrink
Cc: Andrew Nguyen; Nikolay Sivov; wine-devel at winehq.org
Subject: Re: a new trick to add to winetricks

On Thu, Apr 8, 2010 at 7:04 AM, Troy Wolbrink <Troy.Wolbrink at ccci.org> wrote:
> Correct. ?This isn't a bug in Wine. ?It's a suggestion for making WineTricks more robust. ?The reason I sent this email re WineTricks is because at:

It's not a winetricks bug either, it doesn't set msi2 to native when
install msxml6, you did that. Winetricks doesn't try to second guess
the user, it does exactly what you tell it.

> http://wiki.winehq.org/winetricks
>
> It says:
>
> Reporting bugs *in* Winetricks
>
> Winetricks has a bug tracking system at http://code.google.com/p/winezeug/issues/list though sending email to wine-devel at winehq.org is usually good enough.

Reporting issues here is fine, Dan and I will see them here, and it
saves you trouble from registering on google code. Emailing me/Dan
directly is also fine.

-- 
-Austin

From Troy.Wolbrink at ccci.org  Thu Apr  8 16:33:43 2010
From: Troy.Wolbrink at ccci.org (Troy Wolbrink)
Date: Thu, 8 Apr 2010 17:33:43 -0400
Subject: a new trick to add to winetricks
References: <5F41AFE070FE0549822A07BA1F5EDD8506268CF8@HART-E012V.net.ccci.org>
	<4BBD8F24.8070600@gmail.com>
	<o2oa1affb701004080115t9560fa02scaaaf542284f5582@mail.gmail.com>
	<5F41AFE070FE0549822A07BA1F5EDD850679A6@HART-E012V.net.ccci.org>
	<o2pb6bb06271004080848ja84d4d7boe5b7c6eef2d9a6eb@mail.gmail.com>
	<5F41AFE070FE0549822A07BA1F5EDD8506268FEE@HART-E012V.net.ccci.org>
	<h2xb6bb06271004081330kff6f2198r313d6c064d38d157@mail.gmail.com>
Message-ID: <5F41AFE070FE0549822A07BA1F5EDD850679A7@HART-E012V.net.ccci.org>

That's a good point, Austin.
 
--Troy

________________________________

From: Austin English [mailto:austinenglish at gmail.com]
Sent: Thu 4/8/2010 4:30 PM
To: Troy Wolbrink
Cc: Andrew Nguyen; Nikolay Sivov; wine-devel at winehq.org
Subject: Re: a new trick to add to winetricks



On Thu, Apr 8, 2010 at 3:26 PM, Troy Wolbrink <Troy.Wolbrink at ccci.org> wrote:
> I'm not suggesting it's a *bug* in winetricks either.  I'm saying it's a possible way to make it more robust.  Since it's known that the native msi installer doesn't work, it seems reasonable to me that you'd set the override to use the builtin msi.  This is similar to how it overrides the winver to win98 when installing mdac.  It's a known "trick" to get it to install.  How is this second guessing the user?

By that logic, winetricks would need to set most dll's to native when
installing _anything_, on the off chance that the user has overridden
the builtin dll.

--
-Austin




From madewokherd+8cd9 at gmail.com  Thu Apr  8 17:36:40 2010
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Thu, 8 Apr 2010 17:36:40 -0500
Subject: Google Summer of Code
In-Reply-To: <s2v3eafc36e1004081028me0c8accfx9a2fd295c998eb0c@mail.gmail.com>
References: <s2v3eafc36e1004081028me0c8accfx9a2fd295c998eb0c@mail.gmail.com>
Message-ID: <r2qced95fe1004081536qe1a56ebah9ab75a68e83ca392@mail.gmail.com>

It's very unclear what you're proposing.

Running Wine from an NTFS partition would provide little benefit, and
Wine cannot interact sensibly with a real Windows install.

Wine includes a loader capable of loading/linking PE .exe and .dll
files in memory. Attempting to take apart a PE file and put it
together in a different format wouldn't provide any compatibility
benefits.

What is the problem you want to solve?


From niko.lecam at gmail.com  Fri Apr  9 02:14:24 2010
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Fri, 9 Apr 2010 09:14:24 +0200
Subject: loader: Fix French translation of wine manpage
In-Reply-To: <4BBECD5E.2020506@gmail.com>
References: <4BBECD5E.2020506@gmail.com>
Message-ID: <h2gd7e62e981004090014q54ec0d12i1ddcfab8198ccdb6@mail.gmail.com>

Hi Fr?d?ric,

>+\fIwineserver\fR dans le chemin syst?me ou quelques autres emplacements vraisemblables.
>[...]
>+"wine" dans le chemin syst?me ou quelques autres emplacements vraisemblables.
Even if "likely" literally means "vraisemblable" I think the previous
use of "potentiel" or even "possible" suits better.

>+n'est sp?cifi?e, le caract?re + peut ?tre omis. Notez que les espaces ne sont pas
>+autoris?es dans cette cha?ne de caract?res.
Should be "autoris?s"

>+D?finit le type de remplacement et l'ordre de chargement des DLL utilis?es lors du
>+processus de chargement d'une DLL. Le comportement par d?faut est sp?cifi? dans le
>+fichier de configuration. Deux types de biblioth?ques peuvent actuellement ?tre charg?es
>+dans l'espace d'adressage d'un processus : les DLL natives de
>+Windows
Should be "charg?s"

Thanks for your work.

--
Nicolas Le Cam


From niko.lecam at gmail.com  Fri Apr  9 02:19:16 2010
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Fri, 9 Apr 2010 09:19:16 +0200
Subject: wineserver: Fix French manpage
In-Reply-To: <4BBECDAA.7040109@gmail.com>
References: <4BBECDAA.7040109@gmail.com>
Message-ID: <y2vd7e62e981004090019l9f79d4fj96f10c705845cae6@mail.gmail.com>

Hi Fr?d?ric,

>+processus clients se sont termin?s. Ceci ?vite le co?t inh?rent ? l'arr?t
sont -> soient

>+\fIwineserver\fR dans le chemin syst?me ou quelques autres emplacements vraisemblables.
"potentiels" or "possibles" suit better.


-- 
Nicolas Le Cam


From niko.lecam at gmail.com  Fri Apr  9 02:25:49 2010
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Fri, 9 Apr 2010 09:25:49 +0200
Subject: tools: Add French translation of wineprefixcreate manpage
In-Reply-To: <4BBECDE2.10708@gmail.com>
References: <4BBECDE2.10708@gmail.com>
Message-ID: <g2zd7e62e981004090025w79df477eiae9efc189cba4fe6@mail.gmail.com>

Hi Fr?d?ric,

>+N'afficher aucun message de statut.
It doesn't really matter but as you don't use infinitive form
elsewhere perhaps "N'affiche" could be better.

Thanks again for your work.

-- 
Nicolas Le Cam


From winehq.org at urbanec.net  Fri Apr  9 04:10:38 2010
From: winehq.org at urbanec.net (Peter Urbanec)
Date: Fri, 09 Apr 2010 19:10:38 +1000
Subject: bt all broken?
In-Reply-To: <l2xa71bd89a1004061339r95fe15bpc87f5137934d4d8e@mail.gmail.com>
References: <l2xa71bd89a1004061339r95fe15bpc87f5137934d4d8e@mail.gmail.com>
Message-ID: <4BBEEF0E.6070805@urbanec.net>

On 07/04/10 06:39, Dan Kegel wrote:
> winedbg's bt all seems broken since sometime between 1.1.40 and now.
> Has anybody else seen this?
>    

If I start a program under debugger control with "./wine winedbg 
~/test/my.exe" then I see errors such as "Can't get context for thread 
0021 in current process" or backtraces like this:

Backtrace:
=>0 0xf773d42e uni2cp_low+0x576e() in libwine.so.1 (0x0033f7a8)

Backtrace:
=>0 0xf773d42e uni2cp_low+0x576e() in libwine.so.1 (0x0033f7a8)
0xf771d42e: jmp 0xf771d423


If a program crashes and invokes the debugger (which I have modified to 
execute "bt all" instead of "bt" by default), I get a full set of 
backtraces.

I have also been seeing "err:dbghelp_msc:pe_load_debug_directory Got a 
page fault while loading symbols" on executables and matching PDB files 
generated by the Intel Compiler. It seems that MSVC generated 
executables and PDBs work fine. That problem has been around for quite a 
while, certainly before 1.1.40



From julliard at winehq.org  Fri Apr  9 04:33:52 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 09 Apr 2010 11:33:52 +0200
Subject: [PATCH] d3dx9_36: Beginning of constants parsing + tests (based
	on work from Luis Busquets) (try 3) (resend)
In-Reply-To: <20100409064311.16516.12737.stgit@titan-desktop> (Christian
	Costa's message of "Fri, 09 Apr 2010 08:43:11 +0200")
References: <20100409064311.16516.12737.stgit@titan-desktop>
Message-ID: <87ljcxkm0v.fsf@wine.dyndns.org>

Christian Costa <titan.costa at wanadoo.fr> writes:

> @@ -650,6 +650,29 @@ HRESULT WINAPI D3DXCompileShader(LPCSTR pSrcData,
>      return D3DERR_INVALIDCALL;
>  }
>  
> +typedef struct ctab_constant ctab_constant;
> +
> +struct ctab_constant {
> +    D3DXCONSTANT_DESC desc;
> +    ctab_constant* members;
> +};
> +
> +inline ctab_constant* get_constant(D3DXHANDLE ptr)
> +{
> +    if (!ptr) return NULL;
> +    return (ctab_constant*)~((UINT_PTR)ptr);
> +}
> +
> +inline D3DXHANDLE get_handle(ctab_constant* ptr)
> +{
> +    return (D3DXHANDLE)~((UINT_PTR)ptr);
> +}
> +
> +inline BOOL isstring(D3DXHANDLE ptr)
> +{
> +    return !(((UINT_PTR)ptr) & (1 << (sizeof(UINT_PTR)*8-1)));
> +}

This is broken, you can't make assumptions about the high bit of pointer
values. The handle management needs more thought.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Apr  9 04:41:37 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 09 Apr 2010 11:41:37 +0200
Subject: oleaut32: be more explicit with locale dependent parsing of dates
In-Reply-To: <4BBDE91F.6030408@dawncrow.de> (=?utf-8?Q?=22Andr=C3=A9?=
	Hentschel"'s message of "Thu, 08 Apr 2010 16:33:03 +0200")
References: <4BBDE91F.6030408@dawncrow.de>
Message-ID: <87eiipklny.fsf@wine.dyndns.org>

Andr? Hentschel <nerv at dawncrow.de> writes:

> @@ -7708,7 +7708,7 @@ HRESULT WINAPI VarDateFromStr(OLECHAR* strIn, LCID lcid, ULONG dwFlags, DATE* pd
>        break;
>  
>      case 0x1B: /* localized DDDTTT */
> -      if (!iDate)
> +      if (PRIMARYLANGID(lcid) != LANG_GERMAN)

Obviously you cannot hardcode specific locales like that.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Apr  9 04:55:09 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 09 Apr 2010 11:55:09 +0200
Subject: shlwapi: Skip tests on IE < 6 (try 2)
In-Reply-To: <4BBE0BA7.1010107@dawncrow.de> (=?utf-8?Q?=22Andr=C3=A9?=
	Hentschel"'s message of "Thu, 08 Apr 2010 19:00:23 +0200")
References: <4BBE0BA7.1010107@dawncrow.de>
Message-ID: <87aatdkl1e.fsf@wine.dyndns.org>

Andr? Hentschel <nerv at dawncrow.de> writes:

> @@ -617,6 +617,12 @@ static void test_UrlGetPart(void)
>    dwSize = sizeof szPart;
>    szPart[0]='x'; szPart[1]=0;
>    res = pUrlGetPartA("hi", szPart, &dwSize, URL_PART_SCHEME, 0);
> +
> +  if (res) {
> +    win_skip("probably too old IE\n");
> +    return;
> +  }

There's no reason to skip the whole thing.

-- 
Alexandre Julliard
julliard at winehq.org


From dank at kegel.com  Fri Apr  9 05:04:28 2010
From: dank at kegel.com (Dan Kegel)
Date: Fri, 9 Apr 2010 03:04:28 -0700
Subject: tuxradar's map of linux audio
Message-ID: <w2za71bd89a1004090304lfb37abeau4632348ee08daba0@mail.gmail.com>

This seemed like a useful overview of how the various layers relate to
each other:
http://tuxradar.com/content/how-it-works-linux-audio-explained


From shacklein at gmail.com  Fri Apr  9 05:24:10 2010
From: shacklein at gmail.com (Ben Klein)
Date: Fri, 9 Apr 2010 20:24:10 +1000
Subject: tuxradar's map of linux audio
In-Reply-To: <w2za71bd89a1004090304lfb37abeau4632348ee08daba0@mail.gmail.com>
References: <w2za71bd89a1004090304lfb37abeau4632348ee08daba0@mail.gmail.com>
Message-ID: <g2id7e40be31004090324r36c3946er2edef3d26ae8e0a6@mail.gmail.com>

On 9 April 2010 20:04, Dan Kegel <dank at kegel.com> wrote:
> This seemed like a useful overview of how the various layers relate to
> each other:
> http://tuxradar.com/content/how-it-works-linux-audio-explained

A cursory glance does not reveal any mention of libalsa as a valid
"sound input", and I'm not sure but I think it falsely implies that
jack can't use OSS backend.


From msclrhd at googlemail.com  Fri Apr  9 05:25:46 2010
From: msclrhd at googlemail.com (Reece Dunn)
Date: Fri, 9 Apr 2010 11:25:46 +0100
Subject: tuxradar's map of linux audio
In-Reply-To: <w2za71bd89a1004090304lfb37abeau4632348ee08daba0@mail.gmail.com>
References: <w2za71bd89a1004090304lfb37abeau4632348ee08daba0@mail.gmail.com>
Message-ID: <x2o3f4fd2641004090325p4e395630g830cfaf29f663050@mail.gmail.com>

On 9 April 2010 11:04, Dan Kegel <dank at kegel.com> wrote:
> This seemed like a useful overview of how the various layers relate to
> each other:
> http://tuxradar.com/content/how-it-works-linux-audio-explained

This is somewhat confusing:

*  PulseAudio is an audio mixer that provides a finer grained control
over volume (being able to set it per-application), etc.

*  GStreamer is not solving the same problem as PulseAudio (PulseAudio
is not a multimedia framework). GStreamer adds support for playing,
synchronising and encoding audio and video media so is fulfilling a
different role in the audio landscape -- you cannot decode ogg files
directly through PulseAudio, for example.

*  The Xine framework is like GStreamer and FFmpeg/MPlayer. AFAICS,
this is independant of GStreamer and thus sits on top of PulseAudio,
ALSA, Jack, etc. I can't see anything that says that xine-lib calls
into GStreamer.

*  Phonon is an API that abstracts the multimedia frameworks and sits
on top of either GStreamer or Xine (or other supported backends), with
Xine being the default.

- Reece


From damjan.jov at gmail.com  Fri Apr  9 05:30:41 2010
From: damjan.jov at gmail.com (Damjan Jovanovic)
Date: Fri, 9 Apr 2010 12:30:41 +0200
Subject: tuxradar's map of linux audio
In-Reply-To: <w2za71bd89a1004090304lfb37abeau4632348ee08daba0@mail.gmail.com>
References: <w2za71bd89a1004090304lfb37abeau4632348ee08daba0@mail.gmail.com>
Message-ID: <j2l9e89675b1004090330h5edc8597tcc8d76c2de924547@mail.gmail.com>

On Fri, Apr 9, 2010 at 12:04 PM, Dan Kegel <dank at kegel.com> wrote:
> This seemed like a useful overview of how the various layers relate to
> each other:
> http://tuxradar.com/content/how-it-works-linux-audio-explained
>
>
>

http://insanecoding.blogspot.com/2009/06/state-of-sound-in-linux-not-so-sorry.html
is another good one.


From shacklein at gmail.com  Fri Apr  9 05:40:55 2010
From: shacklein at gmail.com (Ben Klein)
Date: Fri, 9 Apr 2010 20:40:55 +1000
Subject: tuxradar's map of linux audio
In-Reply-To: <j2l9e89675b1004090330h5edc8597tcc8d76c2de924547@mail.gmail.com>
References: <w2za71bd89a1004090304lfb37abeau4632348ee08daba0@mail.gmail.com> 
	<j2l9e89675b1004090330h5edc8597tcc8d76c2de924547@mail.gmail.com>
Message-ID: <u2sd7e40be31004090340hce8c112i16e831b19a7d9e49@mail.gmail.com>

On 9 April 2010 20:30, Damjan Jovanovic <damjan.jov at gmail.com> wrote:
> On Fri, Apr 9, 2010 at 12:04 PM, Dan Kegel <dank at kegel.com> wrote:
>> This seemed like a useful overview of how the various layers relate to
>> each other:
>> http://tuxradar.com/content/how-it-works-linux-audio-explained
>>
>>
>>
>
> http://insanecoding.blogspot.com/2009/06/state-of-sound-in-linux-not-so-sorry.html
> is another good one.

The diagrams there are generally much more representative of the
reality of audio APIs in Linux systems. A few gems:
"As should be obvious, these sound servers today do nothing except add
latency, and should be done away with."
"Compare the insanity that is PulseAudio ..."

:)


From thunderbird2k at gmail.com  Fri Apr  9 05:56:08 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Fri, 9 Apr 2010 12:56:08 +0200
Subject: tuxradar's map of linux audio
In-Reply-To: <u2sd7e40be31004090340hce8c112i16e831b19a7d9e49@mail.gmail.com>
References: <w2za71bd89a1004090304lfb37abeau4632348ee08daba0@mail.gmail.com>
	<j2l9e89675b1004090330h5edc8597tcc8d76c2de924547@mail.gmail.com>
	<u2sd7e40be31004090340hce8c112i16e831b19a7d9e49@mail.gmail.com>
Message-ID: <v2jc8485d471004090356w7b4db272p7270b989b066f88b@mail.gmail.com>

On Fri, Apr 9, 2010 at 12:40 PM, Ben Klein <shacklein at gmail.com> wrote:
> On 9 April 2010 20:30, Damjan Jovanovic <damjan.jov at gmail.com> wrote:
>> On Fri, Apr 9, 2010 at 12:04 PM, Dan Kegel <dank at kegel.com> wrote:
>>> This seemed like a useful overview of how the various layers relate to
>>> each other:
>>> http://tuxradar.com/content/how-it-works-linux-audio-explained
>>>
>>>
>>>
>>
>> http://insanecoding.blogspot.com/2009/06/state-of-sound-in-linux-not-so-sorry.html
>> is another good one.
>
> The diagrams there are generally much more representative of the
> reality of audio APIs in Linux systems. A few gems:
> "As should be obvious, these sound servers today do nothing except add
> latency, and should be done away with."
> "Compare the insanity that is PulseAudio ..."
>
> :)
>
>

Whether we like it our not audio servers are the future, they make
things a lot easier for users they don't care about the card but only
see a microphone, speakers and other input/output devices and don't
know how it is wired up. The audio server (or whatever thing you use
as a 'router') all takes care of it.

Windows Vista/Win7 also use a sound server quite similar to
pulseaudio. In Wine, Maarten is busy implementing these new Windows
APIs and older winmm (and perhaps dsound) will be layered on top of it
which is also what Windows does. The design will use OpenAL and
whether that's a good choice is another discussion.

Roderick


From titan.costa at wanadoo.fr  Fri Apr  9 06:21:45 2010
From: titan.costa at wanadoo.fr (Christian Costa)
Date: Fri,  9 Apr 2010 13:21:45 +0200 (CEST)
Subject: [PATCH] d3dx9_36: Beginning of constants parsing + tests (based
	on work from Luis Busquets) (try 3) (resend)
In-Reply-To: <87ljcxkm0v.fsf@wine.dyndns.org>
References: <20100409064311.16516.12737.stgit@titan-desktop>
	<87ljcxkm0v.fsf@wine.dyndns.org>
Message-ID: <23905958.173363.1270812105154.JavaMail.www@wwinf1k16>


> Message du 09/04/10 11:33
> De : "Alexandre Julliard" 
> A : "Christian Costa" 
> Copie ? : wine-devel at winehq.org
> Objet : Re: [PATCH] d3dx9_36: Beginning of constants parsing + tests (based on work from Luis Busquets) (try 3) (resend)
> 
> 
> Christian Costa writes:
> 
> > @@ -650,6 +650,29 @@ HRESULT WINAPI D3DXCompileShader(LPCSTR pSrcData,
> > return D3DERR_INVALIDCALL;
> > }
> > 
> > +typedef struct ctab_constant ctab_constant;
> > +
> > +struct ctab_constant {
> > + D3DXCONSTANT_DESC desc;
> > + ctab_constant* members;
> > +};
> > +
> > +inline ctab_constant* get_constant(D3DXHANDLE ptr)
> > +{
> > + if (!ptr) return NULL;
> > + return (ctab_constant*)~((UINT_PTR)ptr);
> > +}
> > +
> > +inline D3DXHANDLE get_handle(ctab_constant* ptr)
> > +{
> > + return (D3DXHANDLE)~((UINT_PTR)ptr);
> > +}
> > +
> > +inline BOOL isstring(D3DXHANDLE ptr)
> > +{
> > + return !(((UINT_PTR)ptr) & (1 << (sizeof(UINT_PTR)*8-1)));
> > +}
> 
> This is broken, you can't make assumptions about the high bit of pointer
> values. The handle management needs more thought.
> 
> -- 
> Alexandre Julliard
> julliard at winehq.org
> 
> 

Does a 16-bit index would be suitable ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100409/ae1c2408/attachment.htm>

From frederic.delanoy at gmail.com  Fri Apr  9 06:23:17 2010
From: frederic.delanoy at gmail.com (=?UTF-8?B?RnLDqWTDqXJpYyBEZWxhbm95?=)
Date: Fri, 9 Apr 2010 13:23:17 +0200
Subject: tools: Add French translation of wineprefixcreate manpage
In-Reply-To: <g2zd7e62e981004090025w79df477eiae9efc189cba4fe6@mail.gmail.com>
References: <4BBECDE2.10708@gmail.com>
	<g2zd7e62e981004090025w79df477eiae9efc189cba4fe6@mail.gmail.com>
Message-ID: <q2g779619571004090423i42e6b3ccz390de74966922620@mail.gmail.com>

Well I thought about putting it in non-infinitive form, but it didn't
sound/feel right to me.

In fact "N'affiche" would be more like a description, while
"N'afficher" is more an action/modifier/behaviour "alterator"
which seems the purpose of an command-line option IMHO.

Fr?d?ric

On Fri, Apr 9, 2010 at 9:25 AM, Nicolas Le Cam <niko.lecam at gmail.com> wrote:
> Hi Fr?d?ric,
>
>>+N'afficher aucun message de statut.
> It doesn't really matter but as you don't use infinitive form
> elsewhere perhaps "N'affiche" could be better.
>
> Thanks again for your work.
>
> --
> Nicolas Le Cam
>


From frederic.delanoy at gmail.com  Fri Apr  9 06:30:51 2010
From: frederic.delanoy at gmail.com (=?UTF-8?B?RnLDqWTDqXJpYyBEZWxhbm95?=)
Date: Fri, 9 Apr 2010 13:30:51 +0200
Subject: wineserver: Fix French manpage
In-Reply-To: <y2vd7e62e981004090019l9f79d4fj96f10c705845cae6@mail.gmail.com>
References: <4BBECDAA.7040109@gmail.com>
	<y2vd7e62e981004090019l9f79d4fj96f10c705845cae6@mail.gmail.com>
Message-ID: <p2k779619571004090430o1406131anba3411a24bc206f3@mail.gmail.com>

2010/4/9 Nicolas Le Cam <niko.lecam at gmail.com>:
> Hi Fr?d?ric,
>
>>+processus clients se sont termin?s. Ceci ?vite le co?t inh?rent ? l'arr?t
> sont -> soient
>
>>+\fIwineserver\fR dans le chemin syst?me ou quelques autres emplacements vraisemblables.
> "potentiels" or "possibles" suit better.
>

My understanding was that it looked first in the system path, then
tried in, e.g., the home dir or other
directories.
I guess it looks in a hardcoded list of dirs, or sthg like that. In
that sense, "possibles" does not fit IMO.
"potentiels" or "vraisemblables" could both fit, but I wanted to
insist on the probability for the command
to be there (sthg like P[potentiels] < P[vraisemblables]).

Fr?d?ric


From paul.vriens.wine at gmail.com  Fri Apr  9 06:36:11 2010
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Fri, 09 Apr 2010 13:36:11 +0200
Subject: kernel32: Add tests for lstrcmpW
In-Reply-To: <4BBF0B8A.5010705@dawncrow.de>
References: <4BBF0B8A.5010705@dawncrow.de>
Message-ID: <4BBF112B.3090006@gmail.com>

On 04/09/2010 01:12 PM, Andr? Hentschel wrote:
> +#define TESTMARKER(w) \
> +        markerW[2] = w; \
> +        ok(!lstrcmpW(markerW,nomarkerW), "expected the character 0x%x to be ignored within the string\n", w);

Hi Andr?,

lstrcmpW is not implemented on Win95/98/Me so these tests will always 
succeed.

You should probably add a lstrcmpW call at the beginning and skip when 
not implemented, something like:

SetLastError(0xdeadbeef);
lstrcmpW(markerW, nomarkerW);
if (GetLastError() == ERROR_CALL_NOT_IMPLEMENTED)
{
     win_skip("lstrcmpW is not implemented\n");
     return;
}

-- 
Cheers,

Paul.


From hverbeet at gmail.com  Fri Apr  9 06:52:25 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 9 Apr 2010 13:52:25 +0200
Subject: [PATCH 6/7] wined3d: Add an initial fbo_blit_supported 
	implementation.
In-Reply-To: <1270759791-16630-7-git-send-email-thunderbird2k@gmail.com>
References: <1270759791-16630-1-git-send-email-thunderbird2k@gmail.com>
	<1270759791-16630-2-git-send-email-thunderbird2k@gmail.com>
	<1270759791-16630-3-git-send-email-thunderbird2k@gmail.com>
	<1270759791-16630-4-git-send-email-thunderbird2k@gmail.com>
	<1270759791-16630-5-git-send-email-thunderbird2k@gmail.com>
	<1270759791-16630-6-git-send-email-thunderbird2k@gmail.com>
	<1270759791-16630-7-git-send-email-thunderbird2k@gmail.com>
Message-ID: <g2od658b69e1004090452if70723d0y3c4b3739b101a952@mail.gmail.com>

On 8 April 2010 22:49, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
> + ? ?/* Source and/or destination need to be on the GL side */
> + ? ?if (src_pool == WINED3DPOOL_SYSTEMMEM || dst_pool == WINED3DPOOL_SYSTEMMEM)
> + ? ? ? ?return FALSE;
...
> + ? ?if (!is_identity_fixup(src_format_desc->color_fixup) ||
> + ? ? ? ?!is_identity_fixup(dst_format_desc->color_fixup))
> + ? ? ? ?return FALSE;
These weren't in the original function. Perhaps they should but, but
as separate patches, please.

> + ? ?if (!(src_format_desc->format == dst_format_desc->format
> + ? ? ? ?|| (is_identity_fixup(src_format_desc->color_fixup)
> + ? ? ? ?&& is_identity_fixup(dst_format_desc->color_fixup))))
> + ? ? ? ?return FALSE;
This entire check would be redundant after the is_identity_fixup() checks above.


From dmitry at codeweavers.com  Fri Apr  9 07:08:32 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Fri, 9 Apr 2010 21:08:32 +0900
Subject: kernel32: Add tests for lstrcmpW
In-Reply-To: <4BBF0B8A.5010705@dawncrow.de>
References: <4BBF0B8A.5010705@dawncrow.de>
Message-ID: <20100409210832.33684956.dmitry@codeweavers.com>

Andr? Hentschel <nerv at dawncrow.de> wrote:

> +#define TESTMARKER(w) \
> +        markerW[2] = w; \
> +        ok(!lstrcmpW(markerW,nomarkerW), "expected the character 0x%x to be ignored within the string\n", w);
> +
> +static void test_lstrcmpW(void)
> +{
> +    static const WCHAR nomarkerW[] = {'t','e','s','t',0};
> +    static WCHAR markerW[] = {'t','e','r','s','t',0};
> +
> +    todo_wine
> +    {
> +        TESTMARKER(0x034f);
> +        TESTMARKER(0x0378);

What this test is supposed to show? Is there a bug that prevents real world
application not to function properly under Wine? Besides, lstrcmpW() is just
a wrapper for CompareStringW(), and there is a bunch of tests for it already.
Testing explicit unicode values is not useful, Wine uses different unicode
tables than Windows does.

-- 
Dmitry.


From helge.hafting at hist.no  Fri Apr  9 08:45:56 2010
From: helge.hafting at hist.no (Helge Hafting)
Date: Fri, 09 Apr 2010 15:45:56 +0200
Subject: winetricks failed, expecting "system32" where I have "System32" and
	so on
Message-ID: <4BBF2F94.50700@hist.no>

I just tried installing gdiplus using winetricks, on a debian testing 
system.

This failed, as winetricks tried to copy stuff into windows/system32,
where I happen to have Windows/System32.

I first tried making symlinks windows->Windows and system32->System32.
winetricks would run, but the app using gdiplus.dll now failed to find 
it. The file was in Windows/System32 as expected.

So I removed my links, and used search&replace on winetricks, to replace 
all occurences of "windows" and "system32" with captialized versions. 
Then I ran winetricks again. The installation succeeded this time too, 
but the app could still not find the dll in System32.

I finally gave up and copied the dll into the directory where the app
is installed. This worked, but is problematic; it will have to be done 
for every app that uses this dll.

Helge Hafting





From wylda at volny.cz  Fri Apr  9 08:50:22 2010
From: wylda at volny.cz (wylda at volny.cz)
Date: Fri, 09 Apr 2010 15:50:22 +0200 (CEST)
Subject: new icons
Message-ID: <a729afeeb6283646d73c81888f1b8470@www3-mail.volny.cz>


Hi, this will be just a short note... I noticed some new icons and i
like them!

W.




From austinenglish at gmail.com  Fri Apr  9 10:57:40 2010
From: austinenglish at gmail.com (Austin English)
Date: Fri, 9 Apr 2010 10:57:40 -0500
Subject: winetricks failed, expecting "system32" where I have "System32" 
	and so on
In-Reply-To: <4BBF2F94.50700@hist.no>
References: <4BBF2F94.50700@hist.no>
Message-ID: <o2hb6bb06271004090857na2e76432s7998d1e30f6f25a1@mail.gmail.com>

On Fri, Apr 9, 2010 at 8:45 AM, Helge Hafting <helge.hafting at hist.no> wrote:
> I just tried installing gdiplus using winetricks, on a debian testing
> system.
>
> This failed, as winetricks tried to copy stuff into windows/system32,
> where I happen to have Windows/System32.
>
> I first tried making symlinks windows->Windows and system32->System32.
> winetricks would run, but the app using gdiplus.dll now failed to find it.
> The file was in Windows/System32 as expected.
>
> So I removed my links, and used search&replace on winetricks, to replace all
> occurences of "windows" and "system32" with captialized versions. Then I ran
> winetricks again. The installation succeeded this time too, but the app
> could still not find the dll in System32.
>
> I finally gave up and copied the dll into the directory where the app
> is installed. This worked, but is problematic; it will have to be done for
> every app that uses this dll.

Why did you rename system32? Are you linking your ~/.wine/drive_c to a
real windows installation?

-- 
-Austin


From dmitry at codeweavers.com  Fri Apr  9 11:00:02 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sat, 10 Apr 2010 01:00:02 +0900
Subject: winetricks failed, expecting "system32" where I have "System32"
	and so on
In-Reply-To: <4BBF2F94.50700@hist.no>
References: <4BBF2F94.50700@hist.no>
Message-ID: <20100410010002.d49ce10e.dmitry@codeweavers.com>

Helge Hafting <helge.hafting at hist.no> wrote:

> I just tried installing gdiplus using winetricks, on a debian testing 
> system.
> 
> This failed, as winetricks tried to copy stuff into windows/system32,
> where I happen to have Windows/System32.

As usual start with a clean Wine prefix 'rm -rf ~/.wine', and try again.

-- 
Dmitry.


From dank at kegel.com  Fri Apr  9 12:30:30 2010
From: dank at kegel.com (Dan Kegel)
Date: Fri, 9 Apr 2010 10:30:30 -0700
Subject: winetricks failed, expecting "system32" where I have "System32" 
	and so on
Message-ID: <q2na71bd89a1004091030v864032c8i8a629cce3a6ed77d@mail.gmail.com>

Helge wrote:
> I happen to have Windows/System32.

Hang on right there.  Why?   Once I understand that, the rest will be easier.

Winetricks does handle the case where users renamed windows/fonts to
windows/Fonts, because it was observed happening in the wild
(one can imagine users doing thiis when manually installing fonts).
But this is the first I've heard of a System32 rather than a system32.
- Dan


From thunderbird2k at gmail.com  Fri Apr  9 12:44:00 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Fri, 9 Apr 2010 19:44:00 +0200
Subject: winetricks failed, expecting "system32" where I have "System32" 
	and so on
In-Reply-To: <q2na71bd89a1004091030v864032c8i8a629cce3a6ed77d@mail.gmail.com>
References: <q2na71bd89a1004091030v864032c8i8a629cce3a6ed77d@mail.gmail.com>
Message-ID: <o2uc8485d471004091044u71593752k10049303801dc761@mail.gmail.com>

On Fri, Apr 9, 2010 at 7:30 PM, Dan Kegel <dank at kegel.com> wrote:
> Helge wrote:
>> I happen to have Windows/System32.
>
> Hang on right there. ?Why? ? Once I understand that, the rest will be easier.
>
> Winetricks does handle the case where users renamed windows/fonts to
> windows/Fonts, because it was observed happening in the wild
> (one can imagine users doing thiis when manually installing fonts).
> But this is the first I've heard of a System32 rather than a system32.
> - Dan
>
>
>

Just something else which is a little related. Does winetricks handle
SysWow64 already?

Roderick


From dank at kegel.com  Fri Apr  9 12:50:40 2010
From: dank at kegel.com (Dan Kegel)
Date: Fri, 9 Apr 2010 10:50:40 -0700
Subject: winetricks failed, expecting "system32" where I have "System32" 
	and so on
In-Reply-To: <o2uc8485d471004091044u71593752k10049303801dc761@mail.gmail.com>
References: <q2na71bd89a1004091030v864032c8i8a629cce3a6ed77d@mail.gmail.com>
	<o2uc8485d471004091044u71593752k10049303801dc761@mail.gmail.com>
Message-ID: <l2ua71bd89a1004091050l5267818enbb003f04e166a501@mail.gmail.com>

On Fri, Apr 9, 2010 at 10:44 AM, Roderick Colenbrander
<thunderbird2k at gmail.com> wrote:
> Just something else which is a little related. Does winetricks handle
> SysWow64 already?

Nope.  Waiting for the first bug report or first patch...


From austinenglish at gmail.com  Fri Apr  9 12:59:03 2010
From: austinenglish at gmail.com (Austin English)
Date: Fri, 9 Apr 2010 12:59:03 -0500
Subject: winetricks failed, expecting "system32" where I have "System32" 
	and so on
In-Reply-To: <l2ua71bd89a1004091050l5267818enbb003f04e166a501@mail.gmail.com>
References: <q2na71bd89a1004091030v864032c8i8a629cce3a6ed77d@mail.gmail.com> 
	<o2uc8485d471004091044u71593752k10049303801dc761@mail.gmail.com> 
	<l2ua71bd89a1004091050l5267818enbb003f04e166a501@mail.gmail.com>
Message-ID: <r2lb6bb06271004091059w5ee4c178p9243b239e8775327@mail.gmail.com>

On Fri, Apr 9, 2010 at 12:50 PM, Dan Kegel <dank at kegel.com> wrote:
> On Fri, Apr 9, 2010 at 10:44 AM, Roderick Colenbrander
> <thunderbird2k at gmail.com> wrote:
>> Just something else which is a little related. Does winetricks handle
>> SysWow64 already?
>
> Nope. ?Waiting for the first bug report or first patch...

There actually is a bug report:
http://code.google.com/p/winezeug/issues/detail?id=102

It's on my todo list, thanks for the reminder.

-- 
-Austin


From joel at airwebreathe.org.uk  Fri Apr  9 13:05:53 2010
From: joel at airwebreathe.org.uk (Joel Holdsworth)
Date: Fri, 09 Apr 2010 19:05:53 +0100
Subject: new icons
In-Reply-To: <a729afeeb6283646d73c81888f1b8470@www3-mail.volny.cz>
References: <a729afeeb6283646d73c81888f1b8470@www3-mail.volny.cz>
Message-ID: <1270836353.809.1.camel@joel-desktop>

On Fri, 2010-04-09 at 15:50 +0200, wylda at volny.cz wrote:
> Hi, this will be just a short note... I noticed some new icons and i
> like them!
> 
> W.
> 

There's plenty more to come: http://www.airwebreathe.org.uk/wine-icon/ !



From mike.kaplinskiy at gmail.com  Fri Apr  9 15:47:21 2010
From: mike.kaplinskiy at gmail.com (Mike Kaplinskiy)
Date: Fri, 9 Apr 2010 21:47:21 +0100
Subject: [PATCH 01/10] server: allow polling for no events in 
	set_fd_events
In-Reply-To: <87wrwhlp47.fsf@wine.dyndns.org>
References: <v2s4d8b5aa81003312000s1f2baedfh3778e2bbb37ebcdd@mail.gmail.com> 
	<87mxxgn5q0.fsf@wine.dyndns.org>
	<x2h4d8b5aa81004061018n6b2a87c2oe304274acc5bca03@mail.gmail.com>
	<87hbnompa2.fsf@wine.dyndns.org>
	<s2r4d8b5aa81004071606hfc95bc51k66d2ea0de8fce9d4@mail.gmail.com>
	<877hoimepc.fsf@wine.dyndns.org>
	<o2u4d8b5aa81004081122sd49a34ffoac43f0f5a3b6ab13@mail.gmail.com>
	<87wrwhlp47.fsf@wine.dyndns.org>
Message-ID: <x2x4d8b5aa81004091347n31ba34a0qd6f90435db6f1fa5@mail.gmail.com>

On Thu, Apr 8, 2010 at 8:29 PM, Alexandre Julliard <julliard at winehq.org> wrote:
> Mike Kaplinskiy <mike.kaplinskiy at gmail.com> writes:
>
>> This won't work for implementing half-closed sockets. If we have only
>> the read half is closed, we will get POLLIN/0 recv indefinitely if we
>> keep polling (not POLLHUP). If we remove it from the loop, we have to
>> keep polling (once in a while, i.e. when an enable_socket_event gets
>> through) until we get a POLLHUP/POLLERR which signals the other half
>> is closed. On some platforms this won't work, but they will jump to a
>> full close automatically (i.e. POLLHUP right away). The problem now is
>> that if we receive a shutdown, we will spam FD_CLOSE on every
>> successful send.
>
> I don't see why. If you don't get POLLHUP then you can keep polling,
> just don't select for POLLIN once you have seen EOF. The problem with
> POLLHUP/POLLERR is that they can't be masked, but POLLIN doesn't have
> that issue.
>
> --
> Alexandre Julliard
> julliard at winehq.org
>

Shoot, I'm sorry I was confusing poll vs FD_*. You're right of course,
that would work. The slight problem is that a 0 recv is not
necessarily a full POLLHUP (i.e. both halves closed). So on platforms
that don't signal POLLHUP/POLLERR when both halves are closed we're
going to sit there and do nothing, after the first half of the socket
is closed. (Are there any like this still around?) In other words we
can get rid of try_event completely.

There is also a small issue that even after a full close, windows will
let you call send() and succeed but with an erroneous FD_CLOSE right
after. I think the best way to deal with it is just to special case it
in enable_socket_event to send an error close without polling
anything, if for some reason FD_CLOSE is unheld.

I'll send patches on Monday.

Mike.


From niko.lecam at gmail.com  Fri Apr  9 16:25:03 2010
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Fri, 9 Apr 2010 23:25:03 +0200
Subject: loader: Fix French translation of wine manpage
In-Reply-To: <p2m779619571004090437r16f308e8o8eea1c13ca1524a4@mail.gmail.com>
References: <4BBECD5E.2020506@gmail.com>
	<h2gd7e62e981004090014q54ec0d12i1ddcfab8198ccdb6@mail.gmail.com>
	<p2m779619571004090437r16f308e8o8eea1c13ca1524a4@mail.gmail.com>
Message-ID: <s2xd7e62e981004091425pe7bbc22bt53bad0e7f4d2366a@mail.gmail.com>

Le 9 avril 2010 13:37, Fr?d?ric Delanoy <frederic.delanoy at gmail.com> a ?crit :
> 2010/4/9 Nicolas Le Cam <niko.lecam at gmail.com>:
>> Hi Fr?d?ric,
>>
>>>+\fIwineserver\fR dans le chemin syst?me ou quelques autres emplacements vraisemblables.
>>>[...]
>>>+"wine" dans le chemin syst?me ou quelques autres emplacements vraisemblables.
>> Even if "likely" literally means "vraisemblable" I think the previous
>> use of "potentiel" or even "possible" suits better.
>
> See my comments in the mail "wineserver: Fix French manpage"
>>
>>>+n'est sp?cifi?e, le caract?re + peut ?tre omis. Notez que les espaces ne sont pas
>>>+autoris?es dans cette cha?ne de caract?res.
>> Should be "autoris?s"
>
> "espace" is feminine when talking about the typographical sign (cf
> http://fr.wikipedia.org/wiki/Espace_typographique).
> Now if \t or similar had been relevant in that sentence, it would have
> been "caract?res d'espacement".
Oh didn't know that. Thanks for the explanation.

>>
>>>+D?finit le type de remplacement et l'ordre de chargement des DLL utilis?es lors du
>>>+processus de chargement d'une DLL. Le comportement par d?faut est sp?cifi? dans le
>>>+fichier de configuration. Deux types de biblioth?ques peuvent actuellement ?tre charg?es
>>>+dans l'espace d'adressage d'un processus : les DLL natives de
>>>+Windows
>> Should be "charg?s"
>
> What's loaded? The types or the libraries? I think the latter...
It's the "two types of libraries" that can be loaded.

-- 
Nicolas Le Cam


From niko.lecam at gmail.com  Fri Apr  9 16:33:35 2010
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Fri, 9 Apr 2010 23:33:35 +0200
Subject: tools: Add French translation of wineprefixcreate manpage
In-Reply-To: <q2g779619571004090423i42e6b3ccz390de74966922620@mail.gmail.com>
References: <4BBECDE2.10708@gmail.com>
	<g2zd7e62e981004090025w79df477eiae9efc189cba4fe6@mail.gmail.com>
	<q2g779619571004090423i42e6b3ccz390de74966922620@mail.gmail.com>
Message-ID: <j2od7e62e981004091433gc687d796j8db75524f4e8d26b@mail.gmail.com>

Le 9 avril 2010 13:23, Fr?d?ric Delanoy <frederic.delanoy at gmail.com> a ?crit :
> Well I thought about putting it in non-infinitive form, but it didn't
> sound/feel right to me.
>
> In fact "N'affiche" would be more like a description, while
> "N'afficher" is more an action/modifier/behaviour "alterator"
> which seems the purpose of an command-line option IMHO.
>
> Fr?d?ric
>
> On Fri, Apr 9, 2010 at 9:25 AM, Nicolas Le Cam <niko.lecam at gmail.com> wrote:
>> Hi Fr?d?ric,
>>
>>>+N'afficher aucun message de statut.
>> It doesn't really matter but as you don't use infinitive form
>> elsewhere perhaps "N'affiche" could be better.
>>
>> Thanks again for your work.
>>
>> --
>> Nicolas Le Cam
>>
>
What about 'Masque (tous) les messages de statut', that should do the trick.


-- 
Nicolas Le Cam


From niko.lecam at gmail.com  Fri Apr  9 16:46:58 2010
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Fri, 9 Apr 2010 23:46:58 +0200
Subject: wineserver: Fix French manpage
In-Reply-To: <p2k779619571004090430o1406131anba3411a24bc206f3@mail.gmail.com>
References: <4BBECDAA.7040109@gmail.com>
	<y2vd7e62e981004090019l9f79d4fj96f10c705845cae6@mail.gmail.com>
	<p2k779619571004090430o1406131anba3411a24bc206f3@mail.gmail.com>
Message-ID: <z2pd7e62e981004091446lf98cab24r4091329d55899fd5@mail.gmail.com>

Le 9 avril 2010 13:30, Fr?d?ric Delanoy <frederic.delanoy at gmail.com> a ?crit :
> 2010/4/9 Nicolas Le Cam <niko.lecam at gmail.com>:
>> Hi Fr?d?ric,
>>
>>>+processus clients se sont termin?s. Ceci ?vite le co?t inh?rent ? l'arr?t
>> sont -> soient
>>
>>>+\fIwineserver\fR dans le chemin syst?me ou quelques autres emplacements vraisemblables.
>> "potentiels" or "possibles" suit better.
>>
>
> My understanding was that it looked first in the system path, then
> tried in, e.g., the home dir or other
> directories.
> I guess it looks in a hardcoded list of dirs, or sthg like that. In
> that sense, "possibles" does not fit IMO.
> "potentiels" or "vraisemblables" could both fit, but I wanted to
> insist on the probability for the command
> to be there (sthg like P[potentiels] < P[vraisemblables]).
>
> Fr?d?ric
>
It tries PATH and BINDIR (and server/wineserver if in a build
directory). See
http://source.winehq.org/git/wine.git/?a=blob;f=libs/wine/config.c#l480
So 'potentiels' or 'possibles' fit better IMHO.


-- 
Nicolas Le Cam


From austinenglish at gmail.com  Fri Apr  9 20:01:55 2010
From: austinenglish at gmail.com (Austin English)
Date: Fri, 9 Apr 2010 20:01:55 -0500
Subject: Remove NoAppDBEntry keyword?
In-Reply-To: <a71bd89a0911082147w7efdb086w9a046c827158894f@mail.gmail.com>
References: <a71bd89a0911082147w7efdb086w9a046c827158894f@mail.gmail.com>
Message-ID: <i2sb6bb06271004091801o562145ftc8255390a8e4f08b@mail.gmail.com>

On Mon, Nov 9, 2009 at 12:47 AM, Dan Kegel <dank at kegel.com> wrote:
> Jerome Leclanche wrote:
>> Austin English <austinenglish at gmail.com> wrote:
>>> Anyone opposed to removing that keyword?
>>
>> +1 on removing it.
>> It would be nice to have a bugzilla filter to replace it, too.
>>
>> Are we keeping "tasklist" and "tasklet" keywords as well? theres
>> barely a dozen very old bugs for both of them.
>
> I think it'd be fine to remove noappdbentry, tasklist, and tasklet.
>
> If there are no objections by next weekend, let's go ahead and do it.

I've removed the keywords bugbuster, noappdbentry, tasklet, and
tasklist from all bugs. Could someone with the appropriate bugzilla
permissions please delete the keywords themselves?

-- 
-Austin


From dank at kegel.com  Sat Apr 10 09:46:28 2010
From: dank at kegel.com (Dan Kegel)
Date: Sat, 10 Apr 2010 07:46:28 -0700
Subject: Remove NoAppDBEntry keyword?
In-Reply-To: <i2sb6bb06271004091801o562145ftc8255390a8e4f08b@mail.gmail.com>
References: <a71bd89a0911082147w7efdb086w9a046c827158894f@mail.gmail.com>
	<i2sb6bb06271004091801o562145ftc8255390a8e4f08b@mail.gmail.com>
Message-ID: <x2ia71bd89a1004100746m31e19619uc8bdfd7e337d8dd9@mail.gmail.com>

On Fri, Apr 9, 2010 at 6:01 PM, Austin English <austinenglish at gmail.com> wrote:
> On Mon, Nov 9, 2009 at 12:47 AM, Dan Kegel <dank at kegel.com> wrote:
>> Jerome Leclanche wrote:
>>> Austin English <austinenglish at gmail.com> wrote:
>>>> Anyone opposed to removing that keyword?
>>>
>>> +1 on removing it.
>>> It would be nice to have a bugzilla filter to replace it, too.
>>>
>>> Are we keeping "tasklist" and "tasklet" keywords as well? theres
>>> barely a dozen very old bugs for both of them.
>>
>> I think it'd be fine to remove noappdbentry, tasklist, and tasklet.
>>
>> If there are no objections by next weekend, let's go ahead and do it.
>
> I've removed the keywords bugbuster, noappdbentry, tasklet, and
> tasklist from all bugs. Could someone with the appropriate bugzilla
> permissions please delete the keywords themselves?

Done.
- Dan


From ggeldorp at vmware.com  Sun Apr 11 17:01:24 2010
From: ggeldorp at vmware.com (Greg Geldorp)
Date: Sun, 11 Apr 2010 15:01:24 -0700
Subject: WineTestBot: phase 3 implemented
Message-ID: <1C77FC3365DBD149802E0F5381EBE2C9024ACC73B1@EXCH-MBX-4.vmware.com>

I'm happy to announce that WineTestBot (http://winetestbot.geldorp.nl) is now actively scanning wine-patches submissions for changes to tests. If it finds a test change, it will apply the changes, build the affected test executables and run them on the base VMs. Results will be mailed back to the submitter. It will also try to determine if new failures were introduced, by comparing the test results to the most recent run using winetest.exe from WineHQ. If it thinks there are new failures, a message is sent to the author with a copy to wine-devel.

The bot will only process complete series, so it will queue up patches that appear to be part of a series. Then when the series is complete, it generates one big patch file by adding all the individual patches from the series together before submitting it. We'll have to see how robust this is, it is quite possible to mess up this algorithm.

Only patches that contain changes to tests are run. It checks to see if any dlls/<dllname>/tests/* files were changed, if so it is deemed a change to the tests. This should cover most cases, but again is not 100% correct all the time (if you only change a file in include/ then the tests depending on the header files don't get run). In the end we still have the daily run that's done when Alexandre publishes a new winetest.exe.

There's a new item in the WineTestBot menu, "Wine-patches". It will show which patches have been received via the mailing list and what the bot has done with them.

Of course, you'll still be able to manually submit a patch to the bot too. These run at higher priority than the jobs generated from wine-patches submissions.

Happy testing, Ge.



From b.manashirov at utoronto.ca  Sun Apr 11 17:10:41 2010
From: b.manashirov at utoronto.ca (Benzakhar)
Date: Sun, 11 Apr 2010 18:10:41 -0400
Subject: compiling just user32.dll
Message-ID: <4BC248E1.5080502@utoronto.ca>

I got wine sources and I'm on a debian system. So I want to edit the 
function GetMenuBarInfo in user32.dll to just fill in the menu structure 
with some fake/resonable/constant values. I want to do this cause I 
think visual boy advance looks at those values and resets the screen 
size. And unfortunatly everytime it does it I have to press ALT+click to 
move it up to see the resize on bottom right and resize. I'm thinking 
just put some fake values especialy for the rect sturcture and have wine 
use it.

I don't want to recompile the whole thing I'm just hoping I can compile 
just the user32.dll put it into windows/system32 and tell wine (which is 
installed from package manager) via winecfg to simply use that dll.

Is it possible and easy for me? I already found GetMenuBarInfo and it 
just calls FIXME; I need to change it to modify the structure and 
compile user32.dll.

Thank you


From cdavis at mymail.mines.edu  Sun Apr 11 17:16:47 2010
From: cdavis at mymail.mines.edu (Charles Davis)
Date: Sun, 11 Apr 2010 16:16:47 -0600
Subject: compiling just user32.dll
In-Reply-To: <4BC248E1.5080502@utoronto.ca>
References: <4BC248E1.5080502@utoronto.ca>
Message-ID: <4BC24A4F.5060105@mymail.mines.edu>

After configuring, you cd to dlls/user32 and do a make in that
directory, like this:

./configure
make -C dlls/user32

The 'C' parameter tells make to change to that directory before making.

But seriously, why are you trying to run the Win32 version VisualBoy
Advance in Wine anyway? You do realize that it runs natively on Linux,
right?

Chip


From damjan.jov at gmail.com  Sun Apr 11 15:57:49 2010
From: damjan.jov at gmail.com (Damjan Jovanovic)
Date: Sun, 11 Apr 2010 22:57:49 +0200
Subject: usbhub.sys: add stubbed usbhub.sys
In-Reply-To: <87tys4b4rj.fsf@wine.dyndns.org>
References: <9e89675b1003232208j71308ddcq1d305648cf41daa3@mail.gmail.com>
	<874ok5fu8b.fsf@wine.dyndns.org>
	<9e89675b1003241149x86357b2n261793a77177f062@mail.gmail.com>
	<87ocided4v.fsf@wine.dyndns.org>
	<9e89675b1003241244t7d37bc15w638b17e772a60912@mail.gmail.com>
	<87hbo5ebwk.fsf@wine.dyndns.org>
	<9e89675b1003241255g724fb53eh3cc4f5aefae40ae4@mail.gmail.com>
	<87y6hhcwpj.fsf@wine.dyndns.org>
	<9e89675b1003251154r7306dc0ft3dc92017da5adbef@mail.gmail.com>
	<87tys4b4rj.fsf@wine.dyndns.org>
Message-ID: <g2p9e89675b1004111357v354c473am38fc66ecf62015ed@mail.gmail.com>

On Thu, Mar 25, 2010 at 9:06 PM, Alexandre Julliard <julliard at winehq.org> wrote:
> Damjan Jovanovic <damjan.jov at gmail.com> writes:
>
>> I don't know enough about writing kernel drivers yet to decide this
>> (and several other things), so I think it's best I hack at it until I
>> have it working, then I'll start submitting patches again.
>>
>> In the meanwhile, is the use of libusb-1.0 in Wine ok? Or should I use
>> libusb-0.1 or some other library?
>
> I think 1.0 is fine, but I'd like to see some code using it first.
>
> --
> Alexandre Julliard
> julliard at winehq.org
>

I've hacked at this enough to get some basic USB I/O working, so now I
have a better idea of what's necessary.

I like usbhub.sys separate from usbd.sys because:
* The service is called Usbhub in the registry, drivers might depend
on the service, and having the service load usbd.sys instead of
usbhub.sys is confusing.
* usbd.sys isn't part of the device stack in any way, it's just a
utility library used to do miscellaneous things like parse USB
descriptors. Putting I/O code in there would be confusing.
* Windows from 2000 onwards uses usbhub.sys for device stack
management and I/O. No Windows version uses usbd.sys like that.
* If we don't want dlls that export nothing, mountmgr.sys also exports
nothing, so it should be part of ntoskrnl.exe by the same logic.
* There will no more usbXXX.sys files for basic USB after usbhub.sys.
We might eventually want higher-level device class drivers
(usbstor.sys, usbprint.sys) and Microsoft-provided generic drivers
(usbscan.sys) though.
* The driver doesn't load first and load usbd.sys via an import which
creates a device stack, usbhub.sys loads first and then loads drivers
(into the same process) on-demand, as their USB devices are plugged
in.

A *very hacked* patch is attached, if you want to see how libusb-1.0
is used. It only works just enough for the driver to read descriptors
from the device and send a few basic I/O requests.

I'd like to start sending real patches soon, so can I add a separate
usbhub.sys or do I have to stick with usbd.sys? And is libusb-1.0 ok?

Thank you
Damjan Jovanovic
-------------- next part --------------
diff --git a/configure.ac b/configure.ac
index 142d32a..6080b0f 100644
--- a/configure.ac
+++ b/configure.ac
@@ -69,6 +69,7 @@ AC_ARG_WITH(png,       AS_HELP_STRING([--without-png],[do not use PNG]),
 AC_ARG_WITH(pthread,   AS_HELP_STRING([--without-pthread],[do not use the pthread library]),
             [if test "x$withval" = "xno"; then ac_cv_header_pthread_h=no; fi])
 AC_ARG_WITH(sane,      AS_HELP_STRING([--without-sane],[do not use SANE (scanner support)]))
+AC_ARG_WITH(usb,       AS_HELP_STRING([--without-usb],[do not use libusb]))
 AC_ARG_WITH(tiff,       AS_HELP_STRING([--without-tiff],[do not use TIFF]),
             [if test "x$withval" = "xno"; then ac_cv_header_tiffio_h=no; fi])
 AC_ARG_WITH(v4l,       AS_HELP_STRING([--without-v4l],[do not use v4l1 (v4l support)]))
@@ -1162,6 +1163,28 @@ fi
 WINE_NOTICE_WITH(sane,[test "x$ac_cv_lib_soname_sane" = "x"],
                  [libsane ${notice_platform}development files not found, scanners won't be supported.])
 
+dnl *** Check for libusb-1.0 ****
+AC_SUBST(LIBUSBINCL,"")
+AC_SUBST(LIBUSBLIBS,"")
+if test "x$with_usb" != "xno"
+then
+    ac_save_CPPFLAGS="$CPPFLAGS"
+    if test "$PKG_CONFIG" != "false"
+    then
+        ac_usb_libs="`$PKG_CONFIG --libs libusb-1.0 2>/dev/null`"
+        ac_usb_cflags="`$PKG_CONFIG --cflags libusb-1.0 2>/dev/null`"
+        CPPFLAGS="$CPPFLAGS $ac_usb_cflags"
+    fi
+    AC_CHECK_HEADER(libusb.h,
+        [AC_CHECK_LIB(usb-1.0,libusb_init,
+             [AC_DEFINE(HAVE_LIBUSB, 1, [Define if you have the libusb-1.0 library and header])
+              LIBUSBLIBS="$ac_usb_libs"
+              LIBUSBINCL="$ac_usb_cflags"],,$ac_usb_libs)])
+    CPPFLAGS="$ac_save_CPPFLAGS"
+fi
+WINE_NOTICE_WITH(usb,[test "x$ac_cv_lib_usb_1_0_libusb_init" != "xyes"],
+                 [libusb-1.0 ${notice_platform}development files not found, USB won't be supported.])
+
 dnl **** Check for libv4l1 ****
 if test "x$with_v4l" != "xno"
 then
@@ -2543,6 +2566,7 @@ WINE_CONFIG_DLL(url,,[url])
 WINE_CONFIG_DLL(urlmon,,[urlmon])
 WINE_CONFIG_TEST(dlls/urlmon/tests)
 WINE_CONFIG_DLL(usbd.sys,,[usbd.sys])
+WINE_CONFIG_DLL(usbhub.sys,,[usbhub.sys])
 WINE_CONFIG_DLL(user.exe16,enable_win16)
 WINE_CONFIG_DLL(user32,,[user32])
 WINE_CONFIG_TEST(dlls/user32/tests)
diff --git a/dlls/ntoskrnl.exe/ntoskrnl.c b/dlls/ntoskrnl.exe/ntoskrnl.c
index 7a5af73..0f77660 100644
--- a/dlls/ntoskrnl.exe/ntoskrnl.c
+++ b/dlls/ntoskrnl.exe/ntoskrnl.c
@@ -632,14 +632,9 @@ NTSTATUS  WINAPI IoGetDeviceObjectPointer( UNICODE_STRING *name, ACCESS_MASK acc
 
 
 /***********************************************************************
- *           IofCallDriver   (NTOSKRNL.EXE.@)
+ *           IoCallDriver   (NTOSKRNL.EXE.@)
  */
-#ifdef DEFINE_FASTCALL2_ENTRYPOINT
-DEFINE_FASTCALL2_ENTRYPOINT( IofCallDriver )
-NTSTATUS WINAPI __regs_IofCallDriver( DEVICE_OBJECT *device, IRP *irp )
-#else
-NTSTATUS WINAPI IofCallDriver( DEVICE_OBJECT *device, IRP *irp )
-#endif
+NTSTATUS WINAPI IoCallDriver( DEVICE_OBJECT *device, IRP *irp )
 {
     PDRIVER_DISPATCH dispatch;
     IO_STACK_LOCATION *irpsp;
@@ -650,6 +645,8 @@ NTSTATUS WINAPI IofCallDriver( DEVICE_OBJECT *device, IRP *irp )
     --irp->CurrentLocation;
     irpsp = --irp->Tail.Overlay.s.u2.CurrentStackLocation;
     dispatch = device->DriverObject->MajorFunction[irpsp->MajorFunction];
+if (dispatch == NULL) { FIXME("AVOIDING CRASH DUE TO UNIMPLEMENTED MAJOR FUNCTION 0x%X\n", irpsp->MajorFunction); return STATUS_SUCCESS; }
+FIXME("calling the driver at %p, function 0x%X !!!\n", dispatch, irpsp->MajorFunction);
     status = dispatch( device, irp );
 
     return status;
@@ -657,6 +654,21 @@ NTSTATUS WINAPI IofCallDriver( DEVICE_OBJECT *device, IRP *irp )
 
 
 /***********************************************************************
+ *           IofCallDriver   (NTOSKRNL.EXE.@)
+ */
+#ifdef DEFINE_FASTCALL2_ENTRYPOINT
+DEFINE_FASTCALL2_ENTRYPOINT( IofCallDriver )
+NTSTATUS WINAPI __regs_IofCallDriver( DEVICE_OBJECT *device, IRP *irp )
+#else
+NTSTATUS WINAPI IofCallDriver( DEVICE_OBJECT *device, IRP *irp )
+#endif
+{
+    TRACE( "%p %p\n", device, irp );
+    return IoCallDriver( device, irp );
+}
+
+
+/***********************************************************************
  *           IoGetRelatedDeviceObject    (NTOSKRNL.EXE.@)
  */
 PDEVICE_OBJECT WINAPI IoGetRelatedDeviceObject( PFILE_OBJECT obj )
@@ -679,6 +691,20 @@ PCONFIGURATION_INFORMATION WINAPI IoGetConfigurationInformation(void)
 
 
 /***********************************************************************
+ *           IoGetDeviceProperty     (NTOSKRNL.EXE.@)
+ */
+NTSTATUS WINAPI IoGetDeviceProperty( PDEVICE_OBJECT DeviceObject,
+                                     int DeviceProperty,
+                                     ULONG BufferLength,
+                                     PVOID PropertyBuffer,
+                                     PULONG ResultLength )
+{
+    FIXME( "%p %d %u %p %p:stub\n", DeviceObject, DeviceProperty, BufferLength, PropertyBuffer, ResultLength );
+    return STATUS_NOT_IMPLEMENTED;
+}
+
+
+/***********************************************************************
  *           IoIsWdmVersionAvailable     (NTOSKRNL.EXE.@)
  */
 NTSTATUS WINAPI IoIsWdmVersionAvailable(UCHAR MajorVersion, UCHAR MinorVersion)
@@ -757,6 +783,20 @@ NTSTATUS WINAPI IoQueryDeviceDescription(PINTERFACE_TYPE itype, PULONG bus, PCON
 
 
 /***********************************************************************
+ *           IoRegisterDeviceInterface    (NTOSKRNL.EXE.@)
+ */
+NTSTATUS WINAPI IoRegisterDeviceInterface( PDEVICE_OBJECT obj, const GUID *interface_class_guid,
+                                           PUNICODE_STRING reference_string, PUNICODE_STRING symlink_name )
+{
+    static const WCHAR devicepath[] = {'D','E','V',0};
+    FIXME( "(%p, %s, %p, %p)\n", obj, debugstr_guid(interface_class_guid),
+           reference_string, symlink_name );
+    RtlCreateUnicodeString( symlink_name, devicepath );
+    return STATUS_SUCCESS;//NOT_IMPLEMENTED;
+}
+
+
+/***********************************************************************
  *           IoRegisterDriverReinitialization    (NTOSKRNL.EXE.@)
  */
 void WINAPI IoRegisterDriverReinitialization( PDRIVER_OBJECT obj, PDRIVER_REINITIALIZE reinit, PVOID context )
@@ -1167,6 +1207,16 @@ LONG WINAPI KeReleaseSemaphore( PRKSEMAPHORE Semaphore, KPRIORITY Increment,
 
 
 /***********************************************************************
+ *           KeResetEvent   (NTOSKRNL.EXE.@)
+ */
+LONG WINAPI KeResetEvent( PRKEVENT Event )
+{
+    FIXME("(%p): stub\n", Event);
+    return 0;
+}
+
+
+/***********************************************************************
  *           KeQueryTimeIncrement   (NTOSKRNL.EXE.@)
  */
 ULONG WINAPI KeQueryTimeIncrement(void)
@@ -1176,6 +1226,16 @@ ULONG WINAPI KeQueryTimeIncrement(void)
 
 
 /***********************************************************************
+ *           KeSetEvent   (NTOSKRNL.EXE.@)
+ */
+LONG WINAPI KeSetEvent( PRKEVENT Event, KPRIORITY Increment, BOOLEAN Wait )
+{
+    FIXME("(%p, %d, %d): stub\n", Event, Increment, Wait);
+    return 0;
+}
+
+
+/***********************************************************************
  *           KeSetPriorityThread   (NTOSKRNL.EXE.@)
  */
 KPRIORITY WINAPI KeSetPriorityThread( PKTHREAD Thread, KPRIORITY Priority )
diff --git a/dlls/ntoskrnl.exe/ntoskrnl.exe.spec b/dlls/ntoskrnl.exe/ntoskrnl.exe.spec
index 993de77..ceb02a4 100644
--- a/dlls/ntoskrnl.exe/ntoskrnl.exe.spec
+++ b/dlls/ntoskrnl.exe/ntoskrnl.exe.spec
@@ -323,7 +323,7 @@
 @ stdcall IoBuildDeviceIoControlRequest(long ptr ptr long ptr long long ptr ptr)
 @ stub IoBuildPartialMdl
 @ stub IoBuildSynchronousFsdRequest
-@ stub IoCallDriver
+@ stdcall IoCallDriver(ptr ptr)
 @ stub IoCancelFileOpen
 @ stub IoCancelIrp
 @ stub IoCheckDesiredAccess
@@ -383,7 +383,7 @@
 @ stub IoGetDeviceInterfaceAlias
 @ stub IoGetDeviceInterfaces
 @ stdcall IoGetDeviceObjectPointer(ptr long ptr ptr)
-@ stub IoGetDeviceProperty
+@ stdcall IoGetDeviceProperty(ptr long long ptr ptr)
 @ stub IoGetDeviceToVerify
 @ stub IoGetDiskDeviceObject
 @ stub IoGetDmaAdapter
@@ -425,7 +425,7 @@
 @ stub IoReadPartitionTableEx
 @ stub IoReadTransferCount
 @ stub IoRegisterBootDriverReinitialization
-@ stub IoRegisterDeviceInterface
+@ stdcall IoRegisterDeviceInterface(ptr ptr ptr ptr)
 @ stdcall IoRegisterDriverReinitialization(ptr ptr ptr)
 @ stdcall IoRegisterFileSystem(ptr)
 @ stub IoRegisterFsRegistrationChange
@@ -597,7 +597,7 @@
 @ stub KeRemoveQueue
 @ stub KeRemoveQueueDpc
 @ stub KeRemoveSystemServiceTable
-@ stub KeResetEvent
+@ stdcall KeResetEvent(ptr)
 @ stub KeRestoreFloatingPointState
 @ stub KeRevertToUserAffinityThread
 @ stub KeRundownQueue
@@ -607,7 +607,7 @@
 @ stub KeSetAffinityThread
 @ stub KeSetBasePriorityThread
 @ stub KeSetDmaIoCoherency
-@ stub KeSetEvent
+@ stdcall KeSetEvent(ptr long long)
 @ stub KeSetEventBoostPriority
 @ stub KeSetIdealProcessorThread
 @ stub KeSetImportanceDpc
diff --git a/dlls/usbhub.sys/Makefile.in b/dlls/usbhub.sys/Makefile.in
new file mode 100644
index 0000000..56f7a38
--- /dev/null
+++ b/dlls/usbhub.sys/Makefile.in
@@ -0,0 +1,14 @@
+TOPSRCDIR = @top_srcdir@
+TOPOBJDIR = ../..
+SRCDIR    = @srcdir@
+VPATH     = @srcdir@
+MODULE    = usbhub.sys
+IMPORTS   = kernel32 ntoskrnl.exe ntdll advapi32 setupapi
+EXTRADLLFLAGS = -Wb,--subsystem,native
+EXTRAINCL = @LIBUSBINCL@
+EXTRALIBS = @LIBUSBLIBS@
+
+C_SRCS = \
+	usbhub.c
+
+ at MAKE_DLL_RULES@
diff --git a/dlls/usbhub.sys/usbhub.c b/dlls/usbhub.sys/usbhub.c
new file mode 100644
index 0000000..0cc8c61
--- /dev/null
+++ b/dlls/usbhub.sys/usbhub.c
@@ -0,0 +1,763 @@
+/*
+ * Copyright 2010 Damjan Jovanovic
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#include "config.h"
+
+// FIXME
+#include "wine/port.h"
+#include <stdio.h>
+
+#include <stdarg.h>
+
+#define NONAMELESSUNION
+#define NONAMELESSSTRUCT
+
+#include "ntstatus.h"
+#define WIN32_NO_STATUS
+#include "windef.h"
+#include "winbase.h"
+#include "winternl.h"
+#include "winioctl.h"
+#include "winreg.h"
+#include "winuser.h"
+#include "setupapi.h"
+#include "cfgmgr32.h"
+#include "ddk/wdm.h"
+#include "ddk/usb.h"
+#include "ddk/usbioctl.h"
+#include "wine/unicode.h"
+#include "wine/debug.h"
+
+#ifdef HAVE_LIBUSB
+#include <libusb.h>
+
+static libusb_context *context;
+#endif
+
+WINE_DEFAULT_DEBUG_CHANNEL(usbhub);
+
+#ifdef HAVE_LIBUSB
+
+typedef struct {
+    libusb_device *device;
+    libusb_device_handle *handle;
+} WineUsbDeviceExtension;
+
+static DRIVER_OBJECT *usbhub_driver;
+// FIXME
+    DRIVER_EXTENSION driver_extension;
+    DRIVER_OBJECT driver_obj;
+
+static USBD_STATUS libusb_to_usbd_status(int ret)
+{
+    switch (ret)
+    {
+        case LIBUSB_SUCCESS:
+            return USBD_STATUS_SUCCESS;
+        case LIBUSB_ERROR_IO:
+            return USBD_STATUS_INTERNAL_HC_ERROR;
+        case LIBUSB_ERROR_INVALID_PARAM:
+            return USBD_STATUS_INVALID_PARAMETER;
+        case LIBUSB_ERROR_ACCESS:
+            return USBD_STATUS_INTERNAL_HC_ERROR;
+        case LIBUSB_ERROR_NO_DEVICE:
+            return USBD_STATUS_DEVICE_GONE;
+        case LIBUSB_ERROR_NOT_FOUND:
+            return USBD_STATUS_INTERNAL_HC_ERROR;
+        case LIBUSB_ERROR_BUSY:
+            return USBD_STATUS_ERROR_BUSY;
+        case LIBUSB_ERROR_TIMEOUT:
+            return USBD_STATUS_TIMEOUT;
+        case LIBUSB_ERROR_OVERFLOW:
+            /* http://www.cypress.com/?rID=37596 */
+            return USBD_STATUS_BUFFER_OVERRUN;
+        case LIBUSB_ERROR_PIPE:
+            return USBD_STATUS_STALL_PID;
+        case LIBUSB_ERROR_INTERRUPTED:
+            return USBD_STATUS_INTERNAL_HC_ERROR;
+        case LIBUSB_ERROR_NO_MEM:
+            return USBD_STATUS_NO_MEMORY;
+        case LIBUSB_ERROR_NOT_SUPPORTED:
+            return USBD_STATUS_NOT_SUPPORTED;
+    }
+    return USBD_STATUS_INTERNAL_HC_ERROR;
+}
+
+static NTSTATUS usb_vendor_class_control_request( URB *urb, UCHAR typeAndRecipient, WineUsbDeviceExtension *device_extension )
+{
+    UCHAR requestType;
+    UCHAR *buffer;
+    int ret;
+
+    requestType = typeAndRecipient;
+    if (urb->u.UrbControlVendorClassRequest.TransferFlags & USBD_TRANSFER_DIRECTION_IN)
+        requestType |= 0x80;
+    if (requestType & urb->u.UrbControlVendorClassRequest.RequestTypeReservedBits)
+    {
+        FIXME( "buggy driver wants to set reserved bits 0x%02X in USB control request, aborting I/O, please report\n",
+            requestType & urb->u.UrbControlVendorClassRequest.RequestTypeReservedBits);
+        urb->u.UrbHeader.Status = USBD_STATUS_INVALID_PARAMETER;
+        return STATUS_INVALID_PARAMETER;
+    }
+    requestType |= urb->u.UrbControlVendorClassRequest.RequestTypeReservedBits;
+
+    buffer = urb->u.UrbControlVendorClassRequest.TransferBuffer;
+    if (buffer == NULL)
+        buffer = urb->u.UrbControlVendorClassRequest.TransferBufferMDL->MappedSystemVa;
+    if (buffer == NULL)
+    {
+        urb->u.UrbHeader.Status = USBD_STATUS_INVALID_PARAMETER;
+        return STATUS_INVALID_PARAMETER;
+    }
+
+    ret = libusb_control_transfer( device_extension->handle, requestType,
+        urb->u.UrbControlVendorClassRequest.Request,
+        urb->u.UrbControlVendorClassRequest.Value,
+        urb->u.UrbControlVendorClassRequest.Index,
+        buffer, urb->u.UrbControlVendorClassRequest.TransferBufferLength, 0 );
+    if (ret >= 0)
+    {
+        urb->u.UrbControlVendorClassRequest.TransferBufferLength = ret;
+        urb->u.UrbHeader.Status = USBD_STATUS_SUCCESS;
+        return STATUS_SUCCESS;
+    }
+    else
+    {
+        urb->u.UrbHeader.Status = libusb_to_usbd_status( ret );
+        return STATUS_UNSUCCESSFUL;
+    }
+}
+
+static NTSTATUS submit_urb( URB *urb, WineUsbDeviceExtension *device_extension )
+{
+    NTSTATUS status = STATUS_NOT_IMPLEMENTED;
+    int ret;
+
+    switch (urb->u.UrbHeader.Function)
+    {
+        case URB_FUNCTION_SELECT_CONFIGURATION:
+        {
+            TRACE( "URB_FUNCTION_SELECT_CONFIGURATION\n" );
+            break;
+        }
+        case URB_FUNCTION_GET_DESCRIPTOR_FROM_DEVICE:
+        {
+            unsigned char *buffer;
+            TRACE( "URB_FUNCTION_GET_DESCRIPTOR_FROM_DEVICE\n" );
+
+            buffer = urb->u.UrbControlDescriptorRequest.TransferBuffer;
+            if (buffer == NULL)
+                buffer = urb->u.UrbControlDescriptorRequest.TransferBufferMDL->MappedSystemVa;
+            if (buffer == NULL)
+            {
+                urb->u.UrbHeader.Status = USBD_STATUS_INVALID_PARAMETER;
+                status = STATUS_INVALID_PARAMETER;
+                break;
+            }
+
+            switch (urb->u.UrbControlDescriptorRequest.DescriptorType)
+            {
+                case USB_DEVICE_DESCRIPTOR_TYPE:
+                {
+                    struct libusb_device_descriptor device_descriptor;
+                    TRACE( "USB_DEVICE_DESCRIPTOR_TYPE\n" );
+                    ret = libusb_get_device_descriptor( device_extension->device, &device_descriptor );
+                    if (ret == LIBUSB_SUCCESS)
+                    {
+                        ULONG size = urb->u.UrbControlDescriptorRequest.TransferBufferLength;
+                        if (size > sizeof(device_descriptor))
+                            size = sizeof(device_descriptor);
+                        memcpy( buffer, &device_descriptor, size );
+                        urb->u.UrbHeader.Status = USBD_STATUS_SUCCESS;
+                        status = STATUS_SUCCESS;
+                    }
+                    else
+                    {
+                        ERR( "libusb error %d getting device descriptor\n", ret );
+                        urb->u.UrbHeader.Status = libusb_to_usbd_status( ret );
+                        status = STATUS_UNSUCCESSFUL;
+                    }
+                    break;
+                }
+                case USB_CONFIGURATION_DESCRIPTOR_TYPE:
+                {
+                    struct libusb_config_descriptor *config_descriptor;
+                    TRACE( "USB_CONFIGURATION_DESCRIPTOR_TYPE\n" );
+                    ret = libusb_get_active_config_descriptor( device_extension->device, &config_descriptor );
+                    if (ret == LIBUSB_SUCCESS)
+                    {
+                        ULONG remaining = urb->u.UrbControlDescriptorRequest.TransferBufferLength;
+                        int i;
+                        size_t size = sizeof(USB_CONFIGURATION_DESCRIPTOR);
+                        if (size > remaining)
+                            size = remaining;
+                        memcpy( buffer, config_descriptor, size );
+                        buffer += size;
+                        remaining -= size;
+                        size = config_descriptor->extra_length;
+                        if (size > remaining)
+                            size = remaining;
+                        memcpy( buffer, config_descriptor->extra, size );
+                        buffer += size;
+                        remaining -= size;
+                        for (i = 0; i < config_descriptor->bNumInterfaces; i++)
+                        {
+                            int j;
+                            size = sizeof(USB_INTERFACE_DESCRIPTOR);
+                            if (size > remaining)
+                                size = remaining;
+                            memcpy( buffer, &config_descriptor->interface[i].altsetting[0], size );
+                            buffer += size;
+                            remaining -= size;
+                            size = config_descriptor->interface[i].altsetting[0].extra_length;
+                            if (size > remaining)
+                                size = remaining;
+                            memcpy( buffer, &config_descriptor->interface[i].altsetting[0].extra, size );
+                            buffer += size;
+                            remaining -= size;
+                            for (j = 0; j < config_descriptor->interface[i].altsetting[0].bNumEndpoints; j++)
+                            {
+                                size = sizeof(USB_ENDPOINT_DESCRIPTOR);
+                                if (size > remaining)
+                                    size = remaining;
+                                memcpy( buffer, &config_descriptor->interface[i].altsetting[0].endpoint[j], size );
+                                buffer += size;
+                                remaining -= size;
+                                size = config_descriptor->interface[i].altsetting[0].endpoint[j].extra_length;
+                                if (size > remaining)
+                                    size = remaining;
+                                memcpy( buffer, &config_descriptor->interface[i].altsetting[0].endpoint[j].extra, size );
+                                buffer += size;
+                                remaining -= size;
+                            }
+                        }
+                        urb->u.UrbHeader.Status = USBD_STATUS_SUCCESS;
+                        status = STATUS_SUCCESS;
+                        libusb_free_config_descriptor( config_descriptor );
+                    }
+                    else
+                    {
+                        ERR( "libusb error %d getting configuration descriptor\n", ret );
+                        urb->u.UrbHeader.Status = libusb_to_usbd_status( ret );
+                        status = STATUS_UNSUCCESSFUL;
+                    }
+                    break;
+                }
+                case USB_STRING_DESCRIPTOR_TYPE:
+                    FIXME( "USB_STRING_DESCRIPTOR_TYPE: stub\n" );
+                    urb->u.UrbHeader.Status = STATUS_NOT_SUPPORTED;
+                    status = STATUS_NOT_IMPLEMENTED;
+                    break;
+                default:
+                    FIXME( "unknown USB descriptor type %d\n", urb->u.UrbControlDescriptorRequest.DescriptorType );
+                    urb->u.UrbHeader.Status = USBD_STATUS_NOT_SUPPORTED;
+                    status = STATUS_NOT_IMPLEMENTED;
+            }
+            break;
+        }
+        case URB_FUNCTION_VENDOR_DEVICE:
+        {
+            TRACE( "URB_FUNCTION_VENDOR_DEVICE\n" );
+            status = usb_vendor_class_control_request( urb, 0x40, device_extension );
+            break;
+        }
+        default:
+            FIXME( "unimplemented URB function %d\n", urb->u.UrbHeader.Function );
+            urb->u.UrbHeader.Status = USBD_STATUS_NOT_SUPPORTED;
+            status = STATUS_NOT_IMPLEMENTED;
+            break;
+    }
+    return status;
+}
+
+static NTSTATUS WINAPI usbhub_internal_ioctl( DEVICE_OBJECT *device, IRP *irp )
+{
+    IO_STACK_LOCATION *irpsp;
+    URB *urb = NULL;
+    WineUsbDeviceExtension *deviceExtension;
+    NTSTATUS status = STATUS_NOT_IMPLEMENTED;
+
+    TRACE( "(%p, %p)\n", device, irp );
+
+    deviceExtension = device->DeviceExtension;
+    irp->IoStatus.Information = 0;
+    irpsp = IoGetCurrentIrpStackLocation( irp );
+
+    switch (irpsp->Parameters.DeviceIoControl.IoControlCode)
+    {
+        case IOCTL_INTERNAL_USB_SUBMIT_URB:
+            urb = irpsp->Parameters.Others.Argument1;
+            status = submit_urb( urb, deviceExtension );
+            break;
+        default:
+            FIXME( "ioctl code 0x%08X is unimplemented\n", irpsp->Parameters.DeviceIoControl.IoControlCode );
+            if (urb)
+                urb->u.UrbHeader.Status = USBD_STATUS_NOT_SUPPORTED;
+            status = STATUS_NOT_IMPLEMENTED;
+    }
+
+    irp->IoStatus.u.Status = status;
+    IoCompleteRequest( irp, IO_NO_INCREMENT );
+    return status;
+}
+
+static BOOL is_any_usb_interface_unclaimed( libusb_device *device, libusb_device_handle *handle )
+{
+    struct libusb_config_descriptor *config_desc = NULL;
+    int i;
+    BOOL anyInterfaceUnclaimed = FALSE;
+    int ret;
+
+    ret = libusb_get_active_config_descriptor( device, &config_desc );
+    if (ret != LIBUSB_SUCCESS)
+    {
+        ERR( "could not get active configuration's descriptor\n" );
+        goto done;
+    }
+
+    for (i = 0; i < config_desc->bNumInterfaces; i++)
+    {
+        struct libusb_interface_descriptor interface_desc =
+            config_desc->interface[i].altsetting[0];
+        ret = libusb_kernel_driver_active( handle, interface_desc.bInterfaceNumber );
+        if (ret == 0)
+        {
+            anyInterfaceUnclaimed = TRUE;
+            break;
+        }
+        else if (ret == 1)
+            ;
+        else
+        {
+            ERR( "checking for active kernel driver for USB interface failed with %d\n", ret );
+            goto done;
+        }
+    }
+    /* It's still theoretically possible a user-space driver has claimed interfaces we think are free,
+     * but the problem also exists between other user-space drivers, with no clear solution.
+     */
+
+done:
+    libusb_free_config_descriptor( config_desc );
+    return anyInterfaceUnclaimed;
+}
+
+/* find the LDR_MODULE corresponding to the driver module */
+static LDR_MODULE *find_ldr_module( HMODULE module )
+{
+    LIST_ENTRY *entry, *list = &NtCurrentTeb()->Peb->LdrData->InMemoryOrderModuleList;
+
+    for (entry = list->Flink; entry != list; entry = entry->Flink)
+    {
+        LDR_MODULE *ldr = CONTAINING_RECORD(entry, LDR_MODULE, InMemoryOrderModuleList);
+        if (ldr->BaseAddress == module) return ldr;
+        if (ldr->BaseAddress > (void *)module) break;
+    }
+    return NULL;
+}
+
+/* load the driver module file */
+static HMODULE load_driver_module( const WCHAR *name )
+{
+    IMAGE_NT_HEADERS *nt;
+    const IMAGE_IMPORT_DESCRIPTOR *imports;
+    size_t page_size = getpagesize();
+    int i, delta;
+    ULONG size;
+    HMODULE module = LoadLibraryW( name );
+
+    if (!module) return NULL;
+    nt = RtlImageNtHeader( module );
+
+    if (!(delta = (char *)module - (char *)nt->OptionalHeader.ImageBase)) return module;
+
+    /* the loader does not apply relocations to non page-aligned binaries or executables,
+     * we have to do it ourselves */
+
+    if (nt->OptionalHeader.SectionAlignment < page_size ||
+        !(nt->FileHeader.Characteristics & IMAGE_FILE_DLL))
+    {
+        DWORD old;
+        IMAGE_BASE_RELOCATION *rel, *end;
+
+        if ((rel = RtlImageDirectoryEntryToData( module, TRUE, IMAGE_DIRECTORY_ENTRY_BASERELOC, &size )))
+        {
+            WINE_TRACE( "%s: relocating from %p to %p\n",
+                        wine_dbgstr_w(name), (char *)module - delta, module );
+            end = (IMAGE_BASE_RELOCATION *)((char *)rel + size);
+            while (rel < end && rel->SizeOfBlock)
+            {
+                void *page = (char *)module + rel->VirtualAddress;
+                VirtualProtect( page, page_size, PAGE_EXECUTE_READWRITE, &old );
+                rel = LdrProcessRelocationBlock( page, (rel->SizeOfBlock - sizeof(*rel)) / sizeof(USHORT),
+                                                 (USHORT *)(rel + 1), delta );
+                if (old != PAGE_EXECUTE_READWRITE) VirtualProtect( page, page_size, old, NULL );
+                if (!rel) goto error;
+            }
+            /* make sure we don't try again */
+            nt->OptionalHeader.DataDirectory[IMAGE_DIRECTORY_ENTRY_BASERELOC].VirtualAddress = 0;
+        }
+    }
+
+    /* make sure imports are relocated too */
+    if ((imports = RtlImageDirectoryEntryToData( module, TRUE, IMAGE_DIRECTORY_ENTRY_IMPORT, &size )))
+    {
+        for (i = 0; imports[i].Name && imports[i].FirstThunk; i++)
+        {
+            char *name = (char *)module + imports[i].Name;
+            WCHAR buffer[32], *p = buffer;
+
+            while (p < buffer + 32) if (!(*p++ = *name++)) break;
+            if (p <= buffer + 32) FreeLibrary( load_driver_module( buffer ) );
+        }
+    }
+
+    return module;
+
+error:
+    FreeLibrary( module );
+    return NULL;
+}
+
+/* call the driver init entry point */
+static NTSTATUS init_driver( WCHAR *driver_name, HMODULE module, UNICODE_STRING *keyname )
+{
+    unsigned int i;
+    NTSTATUS status;
+    const IMAGE_NT_HEADERS *nt = RtlImageNtHeader( module );
+
+    if (!nt->OptionalHeader.AddressOfEntryPoint) return STATUS_SUCCESS;
+
+    driver_obj.Size            = sizeof(driver_obj);
+    driver_obj.DriverSection   = find_ldr_module( module );
+    driver_obj.DriverInit      = (PDRIVER_INITIALIZE)((char *)module + nt->OptionalHeader.AddressOfEntryPoint);
+    driver_obj.DriverExtension = &driver_extension;
+
+    driver_extension.DriverObject   = &driver_obj;
+    driver_extension.ServiceKeyName = *keyname;
+
+//    if (WINE_TRACE_ON(relay))
+        WINE_DPRINTF( "%04x:Call driver init %p (obj=%p,str=%s)\n", GetCurrentThreadId(),
+                      driver_obj.DriverInit, &driver_obj, wine_dbgstr_w(keyname->Buffer) );
+
+    status = driver_obj.DriverInit( &driver_obj, keyname );
+
+//    if (WINE_TRACE_ON(relay))
+        WINE_DPRINTF( "%04x:Ret  driver init %p (obj=%p,str=%s) retval=%08x\n", GetCurrentThreadId(),
+                      driver_obj.DriverInit, &driver_obj, wine_dbgstr_w(keyname->Buffer), status );
+    WINE_TRACE( "init done for %s obj %p\n", wine_dbgstr_w(driver_name), &driver_obj );
+    WINE_TRACE( "- DriverInit = %p\n", driver_obj.DriverInit );
+    WINE_TRACE( "- DriverStartIo = %p\n", driver_obj.DriverStartIo );
+    WINE_TRACE( "- DriverUnload = %p\n", driver_obj.DriverUnload );
+    for (i = 0; i <= IRP_MJ_MAXIMUM_FUNCTION; i++)
+        WINE_TRACE( "- MajorFunction[%d] = %p\n", i, driver_obj.MajorFunction[i] );
+
+    return status;
+}
+/* load the .sys module for a device driver */
+static HMODULE load_driver(WCHAR *driver_name)
+{
+    static const WCHAR driversW[] = {'\\','d','r','i','v','e','r','s','\\',0};
+    static const WCHAR postfixW[] = {'.','s','y','s',0};
+    static const WCHAR ntprefixW[] = {'\\','?','?','\\',0};
+    static const WCHAR ImagePathW[] = {'I','m','a','g','e','P','a','t','h',0};
+    static const WCHAR servicesW[] = {'\\','R','e','g','i','s','t','r','y',
+                                      '\\','M','a','c','h','i','n','e',
+                                      '\\','S','y','s','t','e','m',
+                                      '\\','C','u','r','r','e','n','t','C','o','n','t','r','o','l','S','e','t',
+                                      '\\','S','e','r','v','i','c','e','s','\\',0};
+
+    UNICODE_STRING keypath;
+    HMODULE module;
+    LPWSTR path = NULL, str;
+    DWORD type, size;
+    HKEY driver_hkey;
+
+    str = HeapAlloc( GetProcessHeap(), 0, sizeof(servicesW) + strlenW(driver_name)*sizeof(WCHAR) );
+    lstrcpyW( str, servicesW );
+    lstrcatW( str, driver_name );
+
+    if (RegOpenKeyW( HKEY_LOCAL_MACHINE, str + 18 /* skip \registry\machine */, &driver_hkey ))
+    {
+        WINE_ERR( "cannot open key %s, err=%u\n", wine_dbgstr_w(str), GetLastError() );
+        HeapFree( GetProcessHeap(), 0, str);
+        return NULL;
+    }
+    RtlInitUnicodeString( &keypath, str );
+
+    /* read the executable path from memory */
+    size = 0;
+    if (!RegQueryValueExW( driver_hkey, ImagePathW, NULL, &type, NULL, &size ))
+    {
+        str = HeapAlloc( GetProcessHeap(), 0, size );
+        if (!RegQueryValueExW( driver_hkey, ImagePathW, NULL, &type, (LPBYTE)str, &size ))
+        {
+            size = ExpandEnvironmentStringsW(str,NULL,0);
+            path = HeapAlloc(GetProcessHeap(),0,size*sizeof(WCHAR));
+            ExpandEnvironmentStringsW(str,path,size);
+        }
+        HeapFree( GetProcessHeap(), 0, str );
+        if (!path) return NULL;
+    }
+    else
+    {
+        /* default is to use the driver name + ".sys" */
+        WCHAR buffer[MAX_PATH];
+        GetSystemDirectoryW(buffer, MAX_PATH);
+        path = HeapAlloc(GetProcessHeap(),0,
+          (strlenW(buffer) + strlenW(driversW) + strlenW(driver_name) + strlenW(postfixW) + 1)
+          *sizeof(WCHAR));
+        lstrcpyW(path, buffer);
+        lstrcatW(path, driversW);
+        lstrcatW(path, driver_name);
+        lstrcatW(path, postfixW);
+    }
+
+    /* GameGuard uses an NT-style path name */
+    str = path;
+    if (!strncmpW( path, ntprefixW, 4 )) str += 4;
+
+    WINE_TRACE( "loading driver %s\n", wine_dbgstr_w(str) );
+
+    module = load_driver_module( str );
+    HeapFree( GetProcessHeap(), 0, path );
+    if (!module) return NULL;
+
+    init_driver( driver_name, module, &keypath );
+    return module;
+}
+
+
+static void start_service( WCHAR *service, libusb_device *device, libusb_device_handle *handle )
+{
+    HMODULE module;
+    module = load_driver(service);
+    if (module)
+    {
+        DEVICE_OBJECT *device_object;
+        NTSTATUS status;
+
+        FIXME("loaded driver\n");
+        status = IoCreateDevice( usbhub_driver, sizeof(WineUsbDeviceExtension), NULL, FILE_DEVICE_UNKNOWN, 0, FALSE, &device_object );
+        if (status == STATUS_SUCCESS)
+        {
+            NTSTATUS (WINAPI *AddDevice)( PDRIVER_OBJECT, PDEVICE_OBJECT ) =
+                driver_obj.DriverExtension->AddDevice;
+            ((WineUsbDeviceExtension*)device_object->DeviceExtension)->device = device;
+            ((WineUsbDeviceExtension*)device_object->DeviceExtension)->handle = handle;
+            FIXME("calling add device at %p\n", AddDevice);
+            status = AddDevice( &driver_obj, device_object );
+            FIXME("add device gave 0x%X\n", status);
+            if (status == STATUS_SUCCESS)
+            {
+                if (driver_obj.MajorFunction[IRP_MJ_PNP] == NULL)
+                    FIXME("MJ_PNP not supported\n");
+                else
+                {
+                    PIRP irp;
+                    irp = IoAllocateIrp( device_object->StackSize, FALSE );
+                    if (irp)
+                    {
+                        IO_STACK_LOCATION *irpsp;
+                        irpsp = IoGetNextIrpStackLocation( irp );
+                        irp->RequestorMode = KernelMode;
+                        irpsp->MajorFunction = IRP_MJ_PNP;
+                        irpsp->MinorFunction = IRP_MN_START_DEVICE;
+                        irpsp->DeviceObject = device_object;
+device_object->CurrentIrp = irp;
+device_object->DriverObject = usbhub_driver;
+irp->IoStatus.u.Status = STATUS_NOT_SUPPORTED;
+                        status = IoCallDriver( device_object->AttachedDevice, irp );
+                        FIXME("IoCallDriver gave 0x%x\n", status);
+                        IoFreeIrp( irp );
+                    }
+                    else
+                        FIXME("IoAllocateIrp failed\n");
+                }
+            }
+        }
+        else
+            ERR("IoCreateDevice failed, status 0x%X\n", status);
+    }
+    else
+        ERR("loading driver failed\n");
+}
+
+static void load_usb_driver( libusb_device *device, libusb_device_handle *handle )
+{
+    static const WCHAR usbW[] = {'U','S','B',0};
+    int ret;
+    struct libusb_device_descriptor dev_desc;
+    DWORD i;
+    BOOL found = FALSE;
+    HDEVINFO devices = INVALID_HANDLE_VALUE;
+    SP_DEVINFO_DATA devinfo;
+
+    ret = libusb_get_device_descriptor( device, &dev_desc );
+    if (ret != LIBUSB_SUCCESS)
+    {
+        ERR( "getting USB device descriptor failed, error %d\n", ret );
+        goto end;
+    }
+
+    /* Windows could create an enum key here,
+     * but we do all that from winecfg
+     * and only when asked */
+    devices = SetupDiGetClassDevsW( NULL, usbW, NULL, DIGCF_ALLCLASSES );
+    if (devices == INVALID_HANDLE_VALUE)
+    {
+        ERR( "listing USB devices failed with error %d\n", GetLastError() );
+        goto end;
+    }
+
+    memset( &devinfo, 0, sizeof(devinfo) );
+    devinfo.cbSize = sizeof(devinfo);
+    for (i = 0; SetupDiEnumDeviceInfo( devices, i, &devinfo ); i++)
+    {
+        CHAR deviceId[MAX_DEVICE_ID_LEN];
+        if (SetupDiGetDeviceInstanceIdA( devices, &devinfo, deviceId, MAX_DEVICE_ID_LEN, NULL ))
+        {
+#if 0
+            static const WCHAR pattern[] = {
+                'U','S','B','\\','V','I','D','_','%','0','4','X','&',
+                                 'P','I','D','_','%','0','4','X',0
+            };
+#endif
+            int vendorId, productId;
+            if (sscanf( deviceId, "USB\\VID_%04X&PID_%04X", &vendorId, &productId ) == 2 &&
+                dev_desc.idVendor == vendorId && dev_desc.idProduct == productId)
+            {
+                WCHAR *service;
+                DWORD size = 0;
+                SetupDiGetDeviceRegistryPropertyW( devices, &devinfo, SPDRP_SERVICE,
+                    NULL, NULL, 0, &size );
+                service = HeapAlloc( GetProcessHeap(), 0, size );
+                if (service)
+                {
+                    if (SetupDiGetDeviceRegistryPropertyW( devices, &devinfo, SPDRP_SERVICE,
+                            NULL, (PBYTE)service, size, &size ))
+                    {
+                        start_service( service, device, handle );
+                    }
+                    else
+                        ERR(" error %d reading service name\n", GetLastError() );
+                    HeapFree( GetProcessHeap(), 0, service );
+                }
+            }
+        }
+        else
+            ERR( "couldn't get device instance id, error %d\n", GetLastError() );
+    }
+    if (!found && GetLastError() != ERROR_NO_MORE_ITEMS)
+        ERR( "enumerating USB devices failed with error %d\n", GetLastError() );
+
+end:
+    if (devices != INVALID_HANDLE_VALUE)
+        SetupDiDestroyDeviceInfoList( devices );
+}
+
+static void add_usb_device( libusb_device *device )
+{
+    int ret;
+    libusb_device_handle *handle;
+
+    ret = libusb_open( device, &handle );
+    if (ret == LIBUSB_SUCCESS)
+    {
+        if (is_any_usb_interface_unclaimed( device, handle ))
+        {
+FIXME("found free device\n");
+            load_usb_driver( device, handle );
+        }
+        libusb_close( handle );
+    }
+    else
+        ERR("could not open libusb device, error %d\n", ret);
+}
+
+static DWORD WINAPI detect_usb_devices( LPVOID arg )
+{
+    /* HAL is deprecated,
+     * its official replacements - devkit and udev - are 100% Linux-only (wow, progress!),
+     * libusb-1.0 plans to support device hotplugging from version 1.1,
+     * so we have to poll for now.
+     */
+    while (1)
+    {
+        libusb_device **list;
+        ssize_t size;
+        size = libusb_get_device_list( context, &list );
+        if (size >= 0)
+        {
+            int i;
+            for (i = 0; i < size; i++)
+            {
+                add_usb_device( list[i] );
+            }
+            libusb_free_device_list( list, 1 );
+        }
+        else
+            ERR( "libusb_get_device_list failed with error %d\n", size );
+        Sleep( 1000 );
+//FIXME:
+break;
+
+    }
+    return 0;
+}
+
+static VOID WINAPI usbhub_unload( DRIVER_OBJECT *driver )
+{
+    TRACE( "(%p)\n", driver );
+    libusb_exit( context );
+}
+
+#endif
+
+NTSTATUS WINAPI DriverEntry( DRIVER_OBJECT *driver, UNICODE_STRING *path )
+{
+    int ret = 0;
+    NTSTATUS status = STATUS_SUCCESS;
+
+    TRACE( "(%p, %s)\n", driver, debugstr_w(path->Buffer) );
+
+#ifdef HAVE_LIBUSB
+    ret = libusb_init( &context );
+    if (ret == LIBUSB_SUCCESS)
+    {
+        if (CreateThread( NULL, 0, detect_usb_devices, NULL, 0, NULL ) != NULL)
+        {
+            driver->DriverUnload = usbhub_unload;
+            driver->MajorFunction[IRP_MJ_INTERNAL_DEVICE_CONTROL] = usbhub_internal_ioctl;
+            usbhub_driver = driver;
+        }
+        else
+        {
+            ERR( "couldn't create thread to detect USB devices, error %d\n", GetLastError() );
+            status = STATUS_UNSUCCESSFUL;
+        }
+    }
+    else
+    {
+        ERR( "libusb_init() failed with %d\n", ret );
+        status = STATUS_UNSUCCESSFUL;
+    }
+#endif
+
+    return status;
+}
diff --git a/dlls/usbhub.sys/usbhub.sys.spec b/dlls/usbhub.sys/usbhub.sys.spec
new file mode 100644
index 0000000..e69de29
diff --git a/include/ddk/usb.h b/include/ddk/usb.h
index af1c10d..0093478 100644
--- a/include/ddk/usb.h
+++ b/include/ddk/usb.h
@@ -103,6 +103,7 @@ typedef PVOID USBD_INTERFACE_HANDLE;
 #define USBD_STATUS_BABBLE_DETECTED                  ((USBD_STATUS)0xC0000012)
 #define USBD_STATUS_DATA_BUFFER_ERROR                ((USBD_STATUS)0xC0000013)
 #define USBD_STATUS_ENDPOINT_HALTED                  ((USBD_STATUS)0xC0000030)
+#define USBD_STATUS_NO_MEMORY                        ((USBD_STATUS)0x80000100)
 #define USBD_STATUS_INVALID_URB_FUNCTION             ((USBD_STATUS)0x80000200)
 #define USBD_STATUS_INVALID_PARAMETER                ((USBD_STATUS)0x80000300)
 #define USBD_STATUS_ERROR_BUSY                       ((USBD_STATUS)0x80000400)
diff --git a/include/ddk/usbioctl.h b/include/ddk/usbioctl.h
new file mode 100644
index 0000000..8fcce74
--- /dev/null
+++ b/include/ddk/usbioctl.h
@@ -0,0 +1,28 @@
+/*
+ * Copyright (C) Damjan Jovanovic
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#ifndef __DDK_USBIOCTL_H__
+#define __DDK_USBIOCTL_H__
+
+#include "ntddk.h"
+#include "usbiodef.h"
+
+#define IOCTL_INTERNAL_USB_SUBMIT_URB \
+    CTL_CODE(FILE_DEVICE_USB, USB_SUBMIT_URB, METHOD_NEITHER, FILE_ANY_ACCESS)
+
+#endif
diff --git a/include/ddk/usbiodef.h b/include/ddk/usbiodef.h
new file mode 100644
index 0000000..0c34cdd
--- /dev/null
+++ b/include/ddk/usbiodef.h
@@ -0,0 +1,28 @@
+/*
+ * Copyright (C) Damjan Jovanovic
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#ifndef __DDK_USBIODEF_H__
+#define __DDK_USBIODEF_H__
+
+#include "ntddk.h"
+
+#define USB_SUBMIT_URB 0
+
+#define FILE_DEVICE_USB FILE_DEVICE_UNKNOWN
+
+#endif
diff --git a/include/ddk/wdm.h b/include/ddk/wdm.h
index 102dda8..89c9805 100644
--- a/include/ddk/wdm.h
+++ b/include/ddk/wdm.h
@@ -1024,14 +1024,18 @@ NTSTATUS WINAPI ObCloseHandle(IN HANDLE handle);
 #ifdef NONAMELESSUNION
 # ifdef NONAMELESSSTRUCT
 #  define IoGetCurrentIrpStackLocation(_Irp) ((_Irp)->Tail.Overlay.s.u2.CurrentStackLocation)
+#  define IoGetNextIrpStackLocation(_Irp) ((_Irp)->Tail.Overlay.s.u2.CurrentStackLocation - 1)
 # else
 #  define IoGetCurrentIrpStackLocation(_Irp) ((_Irp)->Tail.Overlay.u2.CurrentStackLocation)
+#  define IoGetNextIrpStackLocation(_Irp) ((_Irp)->Tail.Overlay.u2.CurrentStackLocation - 1)
 # endif
 #else
 # ifdef NONAMELESSSTRUCT
 #  define IoGetCurrentIrpStackLocation(_Irp) ((_Irp)->Tail.Overlay.s.CurrentStackLocation)
+#  define IoGetNextIrpStackLocation(_Irp) ((_Irp)->Tail.Overlay.s.CurrentStackLocation - 1)
 # else
 #  define IoGetCurrentIrpStackLocation(_Irp) ((_Irp)->Tail.Overlay.CurrentStackLocation)
+#  define IoGetNextIrpStackLocation(_Irp) ((_Irp)->Tail.Overlay.CurrentStackLocation - 1)
 # endif
 #endif
 
@@ -1059,6 +1063,7 @@ void      WINAPI ExFreePoolWithTag(PVOID,ULONG);
 NTSTATUS  WINAPI IoAllocateDriverObjectExtension(PDRIVER_OBJECT,PVOID,ULONG,PVOID*);
 PVOID     WINAPI IoAllocateErrorLogEntry(PVOID,UCHAR);
 PIRP      WINAPI IoAllocateIrp(CCHAR,BOOLEAN);
+NTSTATUS  WINAPI IoCallDriver(DEVICE_OBJECT*,IRP*);
 VOID      WINAPI IoCompleteRequest(IRP*,UCHAR);
 NTSTATUS  WINAPI IoCreateDevice(DRIVER_OBJECT*,ULONG,UNICODE_STRING*,DEVICE_TYPE,ULONG,BOOLEAN,DEVICE_OBJECT**);
 NTSTATUS  WINAPI IoCreateDriver(UNICODE_STRING*,PDRIVER_INITIALIZE);

From niko.lecam at gmail.com  Sun Apr 11 17:30:12 2010
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 12 Apr 2010 00:30:12 +0200
Subject: WineTestBot: phase 3 implemented
In-Reply-To: <1C77FC3365DBD149802E0F5381EBE2C9024ACC73B1@EXCH-MBX-4.vmware.com>
References: <1C77FC3365DBD149802E0F5381EBE2C9024ACC73B1@EXCH-MBX-4.vmware.com>
Message-ID: <h2pd7e62e981004111530n336e19cdo5543a058fddb31ad@mail.gmail.com>

2010/4/12 Greg Geldorp <ggeldorp at vmware.com>:
> I'm happy to announce that WineTestBot (http://winetestbot.geldorp.nl) is now actively scanning wine-patches submissions for changes to tests. If it finds a test change, it will apply the changes, build the affected test executables and run them on the base VMs. Results will be mailed back to the submitter. It will also try to determine if new failures were introduced, by comparing the test results to the most recent run using winetest.exe from WineHQ. If it thinks there are new failures, a message is sent to the author with a copy to wine-devel.
>
> The bot will only process complete series, so it will queue up patches that appear to be part of a series. Then when the series is complete, it generates one big patch file by adding all the individual patches from the series together before submitting it. We'll have to see how robust this is, it is quite possible to mess up this algorithm.
>
> Only patches that contain changes to tests are run. It checks to see if any dlls/<dllname>/tests/* files were changed, if so it is deemed a change to the tests. This should cover most cases, but again is not 100% correct all the time (if you only change a file in include/ then the tests depending on the header files don't get run). In the end we still have the daily run that's done when Alexandre publishes a new winetest.exe.
>
> There's a new item in the WineTestBot menu, "Wine-patches". It will show which patches have been received via the mailing list and what the bot has done with them.
>
> Of course, you'll still be able to manually submit a patch to the bot too. These run at higher priority than the jobs generated from wine-patches submissions.
>
> Happy testing, Ge.
>
>
>
>

Hi Greg,

Perhaps you could also check for programs/<programname>/tests/ now
that at least cmd has tests.
WineTestBot is a wonderful tool, thanks for supporting and improving it!

-- 
Nicolas Le Cam


From winetestbot at geldorp.nl  Sun Apr 11 21:24:21 2010
From: winetestbot at geldorp.nl (winetestbot at geldorp.nl)
Date: Mon, 12 Apr 2010 04:24:21 +0200
Subject: d3dx9: Implement D3DXDeclaratorFromFVF with tests 
Message-ID: <201004120224.o3C2OL9p005625@v1.gse.nl>

Hi,

While running your changed tests on Windows, I think I found new failures.
Being a bot and all I'm not very good at pattern recognition, so I might be
wrong, but could you please double-check?
Full results can be found at
http://winetestbot.geldorp.nl/JobDetails.pl?Key=1361

Your paranoid android.


=== WINEBUILD (Wine build VM) ===
Make failed


From 29389896 at qq.com  Sun Apr 11 22:35:20 2010
From: 29389896 at qq.com (=?ISO-8859-1?B?eGZ6aGVuZw==?=)
Date: Mon, 12 Apr 2010 11:35:20 +0800
Subject: Is it possible to merge/integrate wine window and qt window?
Message-ID: <tencent_771158F11C786CC3580D077D@qq.com>

Our product both have windows version and QT version, the windows version has more functions.
 we MUST move all of function to Linux OS.
 The windows version has already move to linux currently, some of code has been rewritten. Here comes the questions, as we know ,both wine and qt choose X11 as its windows implemention,  is there any way to implement QWindow or QWidget using MFC ?
  
 thanks in advance.
  
 xfzheng.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100412/60b9bb72/attachment.htm>

From dank at kegel.com  Sun Apr 11 23:05:47 2010
From: dank at kegel.com (Dan Kegel)
Date: Sun, 11 Apr 2010 21:05:47 -0700
Subject: Is it possible to merge/integrate wine window and qt window?
Message-ID: <i2ya71bd89a1004112105h558b9890l8969401b2b36db51@mail.gmail.com>

xfzheng asked:
> [We're porting a Windows app to Linux, and would like to mix
>  native Linux GUI code and Windows GUI code.]

You're probably not going to have much luck with that.

Better (and easier, I bet) to do a pure port.

Even easier to run the Windows version in Wine.
Have you tried that yet?
There are ways (see Google's Picasa) to hide
drive letters from the user somewhat.
- Dan


From adys.wh at gmail.com  Sun Apr 11 23:08:15 2010
From: adys.wh at gmail.com (Jerome Leclanche)
Date: Mon, 12 Apr 2010 07:08:15 +0300
Subject: compiling just user32.dll
In-Reply-To: <4BC24A4F.5060105@mymail.mines.edu>
References: <4BC248E1.5080502@utoronto.ca> <4BC24A4F.5060105@mymail.mines.edu>
Message-ID: <r2t41eceb531004112108g145c82d3we95245ae63799a51@mail.gmail.com>

Benzakhar,

I think you're looking for this bug:
http://bugs.winehq.org/show_bug.cgi?id=18776

There's a pretty lengthy patch in there too. Worth having a look at.

J. Leclanche / Adys



On Mon, Apr 12, 2010 at 1:16 AM, Charles Davis <cdavis at mymail.mines.edu> wrote:
> After configuring, you cd to dlls/user32 and do a make in that
> directory, like this:
>
> ./configure
> make -C dlls/user32
>
> The 'C' parameter tells make to change to that directory before making.
>
> But seriously, why are you trying to run the Win32 version VisualBoy
> Advance in Wine anyway? You do realize that it runs natively on Linux,
> right?
>
> Chip
>
>
>


From austinenglish at gmail.com  Sun Apr 11 23:47:43 2010
From: austinenglish at gmail.com (Austin English)
Date: Sun, 11 Apr 2010 23:47:43 -0500
Subject: updated winetricks directx-beta verb
Message-ID: <z2lb6bb06271004112147na4620fabg320f2b9c29c6957@mail.gmail.com>

Howdy all,

I've updated winetricks's directx-beta verb to hopefully workaround
the problems it has in wine. Using directx-beta now installs directx
in winxp mode, then also extracts and regsvr's the directplay and
directmusic dll's (using the winetricks directplay and the new
winetricks directmusic options).

Please test on your applications that need native directx dlls. I
don't have an application that needs directmusic, so if it doesn't
work, please let me know. If something is missing from directx-beta
that is installed in win2k mode, please let me know.

Get it at http://winezeug.googlecode.com/svn/trunk/winetricks

-- 
-Austin


From austinenglish at gmail.com  Mon Apr 12 02:07:13 2010
From: austinenglish at gmail.com (Austin English)
Date: Mon, 12 Apr 2010 02:07:13 -0500
Subject: [Wine] updated winetricks directx-beta verb
In-Reply-To: <4bc2c11c.CYVmuToU5LS3243e%perryh@pluto.rain.com>
References: <z2lb6bb06271004112147na4620fabg320f2b9c29c6957@mail.gmail.com> 
	<4bc2c11c.CYVmuToU5LS3243e%perryh@pluto.rain.com>
Message-ID: <m2wb6bb06271004120007k7e5a3cadk36041a99aa31caa@mail.gmail.com>

On Mon, Apr 12, 2010 at 1:43 AM,  <perryh at pluto.rain.com> wrote:
> Austin English <austinenglish at gmail.com> wrote:
>
>> I've updated winetricks ...
>>
>> Get it at http://winezeug.googlecode.com/svn/trunk/winetricks
>
> Were you aware that VERSION is still set to 20100317?

Yes, Dan updates that when he puts it at
http://kegel.com/wine/winetricks. SVN versions are 'betas'.

-- 
-Austin


From frederic.delanoy at gmail.com  Mon Apr 12 03:17:33 2010
From: frederic.delanoy at gmail.com (=?UTF-8?B?RnLDqWTDqXJpYyBEZWxhbm95?=)
Date: Mon, 12 Apr 2010 10:17:33 +0200
Subject: tools: Add French translation of wineprefixcreate manpage
In-Reply-To: <j2od7e62e981004091433gc687d796j8db75524f4e8d26b@mail.gmail.com>
References: <4BBECDE2.10708@gmail.com>
	<g2zd7e62e981004090025w79df477eiae9efc189cba4fe6@mail.gmail.com>
	<q2g779619571004090423i42e6b3ccz390de74966922620@mail.gmail.com> 
	<j2od7e62e981004091433gc687d796j8db75524f4e8d26b@mail.gmail.com>
Message-ID: <r2g779619571004120117q320735a9rb6a36cf7433d14f6@mail.gmail.com>

2010/4/9 Nicolas Le Cam <niko.lecam at gmail.com>:
> Le 9 avril 2010 13:23, Fr?d?ric Delanoy <frederic.delanoy at gmail.com> a ?crit :
>> Well I thought about putting it in non-infinitive form, but it didn't
>> sound/feel right to me.
>>
>> In fact "N'affiche" would be more like a description, while
>> "N'afficher" is more an action/modifier/behaviour "alterator"
>> which seems the purpose of an command-line option IMHO.
>>
>> Fr?d?ric
>>
>> On Fri, Apr 9, 2010 at 9:25 AM, Nicolas Le Cam <niko.lecam at gmail.com> wrote:
>>> Hi Fr?d?ric,
>>>
>>>>+N'afficher aucun message de statut.
>>> It doesn't really matter but as you don't use infinitive form
>>> elsewhere perhaps "N'affiche" could be better.
>>>
>>> Thanks again for your work.
>>>
>>> --
>>> Nicolas Le Cam
>>>
>>
> What about 'Masque (tous) les messages de statut', that should do the trick.
>

Right, I'll fix that and resent when I've got time

Thanks for your comments.

Fr?d?ric Delanoy


From frederic.delanoy at gmail.com  Mon Apr 12 04:02:08 2010
From: frederic.delanoy at gmail.com (=?UTF-8?B?RnLDqWTDqXJpYyBEZWxhbm95?=)
Date: Mon, 12 Apr 2010 11:02:08 +0200
Subject: wineserver: Fix French manpage
In-Reply-To: <z2pd7e62e981004091446lf98cab24r4091329d55899fd5@mail.gmail.com>
References: <4BBECDAA.7040109@gmail.com>
	<y2vd7e62e981004090019l9f79d4fj96f10c705845cae6@mail.gmail.com>
	<p2k779619571004090430o1406131anba3411a24bc206f3@mail.gmail.com> 
	<z2pd7e62e981004091446lf98cab24r4091329d55899fd5@mail.gmail.com>
Message-ID: <p2k779619571004120202pe78e41b1m7bef3e3ebc843698@mail.gmail.com>

2010/4/9 Nicolas Le Cam <niko.lecam at gmail.com>:
> Le 9 avril 2010 13:30, Fr?d?ric Delanoy <frederic.delanoy at gmail.com> a ?crit :
>> 2010/4/9 Nicolas Le Cam <niko.lecam at gmail.com>:
>>> Hi Fr?d?ric,
>>>
>>>>+processus clients se sont termin?s. Ceci ?vite le co?t inh?rent ? l'arr?t
>>> sont -> soient
>>>
>>>>+\fIwineserver\fR dans le chemin syst?me ou quelques autres emplacements vraisemblables.
>>> "potentiels" or "possibles" suit better.
>>>
>>
>> My understanding was that it looked first in the system path, then
>> tried in, e.g., the home dir or other
>> directories.
>> I guess it looks in a hardcoded list of dirs, or sthg like that. In
>> that sense, "possibles" does not fit IMO.
>> "potentiels" or "vraisemblables" could both fit, but I wanted to
>> insist on the probability for the command
>> to be there (sthg like P[potentiels] < P[vraisemblables]).
>>
>> Fr?d?ric
>>
> It tries PATH and BINDIR (and server/wineserver if in a build
> directory). See
> http://source.winehq.org/git/wine.git/?a=blob;f=libs/wine/config.c#l480
> So 'potentiels' or 'possibles' fit better IMHO.

"Probables" may possibly fit even better (altough "potentiels" should be OK)?

Fr?d?ric


From perryh at pluto.rain.com  Mon Apr 12 01:43:40 2010
From: perryh at pluto.rain.com (perryh at pluto.rain.com)
Date: Sun, 11 Apr 2010 23:43:40 -0700
Subject: [Wine] updated winetricks directx-beta verb
In-Reply-To: <z2lb6bb06271004112147na4620fabg320f2b9c29c6957@mail.gmail.com>
References: <z2lb6bb06271004112147na4620fabg320f2b9c29c6957@mail.gmail.com>
Message-ID: <4bc2c11c.CYVmuToU5LS3243e%perryh@pluto.rain.com>

Austin English <austinenglish at gmail.com> wrote:

> I've updated winetricks ...
>
> Get it at http://winezeug.googlecode.com/svn/trunk/winetricks

Were you aware that VERSION is still set to 20100317?


From helge.hafting at hist.no  Mon Apr 12 04:10:57 2010
From: helge.hafting at hist.no (Helge Hafting)
Date: Mon, 12 Apr 2010 11:10:57 +0200
Subject: winetricks failed, expecting "system32" where I have "System32"
	and so on
In-Reply-To: <o2hb6bb06271004090857na2e76432s7998d1e30f6f25a1@mail.gmail.com>
References: <4BBF2F94.50700@hist.no>
	<o2hb6bb06271004090857na2e76432s7998d1e30f6f25a1@mail.gmail.com>
Message-ID: <4BC2E3A1.4020009@hist.no>

Austin English wrote:
> On Fri, Apr 9, 2010 at 8:45 AM, Helge Hafting <helge.hafting at hist.no> wrote:
>> I just tried installing gdiplus using winetricks, on a debian testing
>> system.
>>
>> This failed, as winetricks tried to copy stuff into windows/system32,
>> where I happen to have Windows/System32.
>>
>> I first tried making symlinks windows->Windows and system32->System32.
>> winetricks would run, but the app using gdiplus.dll now failed to find it.
>> The file was in Windows/System32 as expected.
>>
>> So I removed my links, and used search&replace on winetricks, to replace all
>> occurences of "windows" and "system32" with captialized versions. Then I ran
>> winetricks again. The installation succeeded this time too, but the app
>> could still not find the dll in System32.
>>
>> I finally gave up and copied the dll into the directory where the app
>> is installed. This worked, but is problematic; it will have to be done for
>> every app that uses this dll.
> 
> Why did you rename system32? Are you linking your ~/.wine/drive_c to a
> real windows installation?

I never renamed system32 - I don't like uppercase in filenames. I can 
only guess that wine did it that way itself in 2003 when I installed it.

I have no real windows installation. I use wine to run the one windows 
program I need - a raw converter for my digital camera.

Helge Hafting



From winetestbot at geldorp.nl  Mon Apr 12 04:32:23 2010
From: winetestbot at geldorp.nl (winetestbot at geldorp.nl)
Date: Mon, 12 Apr 2010 11:32:23 +0200
Subject: [PATCH] d3dx9_36/tests: Move surface tests into surface.c 
Message-ID: <201004120932.o3C9WNeW023087@v1.gse.nl>

Hi,

While running your changed tests on Windows, I think I found new failures.
Being a bot and all I'm not very good at pattern recognition, so I might be
wrong, but could you please double-check?
Full results can be found at
http://winetestbot.geldorp.nl/JobDetails.pl?Key=1363

Your paranoid android.


=== W98SE (Windows 98 Second Edition) ===
No test summary line found

=== WNT4WSSP6 (NT4 Workstation SP6 (English, IE2)) ===
Failure running script in VM: Exceeded timeout limit of 300 sec

=== W2KPROSP4 (Windows 2000 Professional SP4) ===
No test summary line found

=== WXPPROSP3 (XP Professional SP3 (English, IE6)) ===
No test summary line found

=== W2K3R2SESP2 (Server 2003 R2 Standard Edition SP2) ===
No test summary line found

=== WVISTAADM (Windows Vista (English, IE7)) ===
Failure running script in VM: Exceeded timeout limit of 300 sec

=== W2K8SE (Server 2008 Standard Edition) ===
Failure running script in VM: Exceeded timeout limit of 300 sec

=== W7PRO (Windows 7 Professional (English, IE8)) ===
No test summary line found

=== W7PROX64 (Windows 7 Professional 64 bit) ===
No test summary line found

=== W7PROX64 (Windows 7 Professional 64 bit) ===
No test summary line found


From hverbeet at gmail.com  Mon Apr 12 04:52:15 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 12 Apr 2010 11:52:15 +0200
Subject: d3dx9: Implement D3DXDeclaratorFromFVF with tests
In-Reply-To: <t2g5f9140a21004111922g632f4b0ezf899f4a976ceb9c3@mail.gmail.com>
References: <t2g5f9140a21004111922g632f4b0ezf899f4a976ceb9c3@mail.gmail.com>
Message-ID: <n2id658b69e1004120252r3090d7cby1b015761342fe230@mail.gmail.com>

Formatting, among others.


From jeremielapuree at yahoo.fr  Mon Apr 12 05:10:00 2010
From: jeremielapuree at yahoo.fr (paulo lesgaz)
Date: Mon, 12 Apr 2010 03:10:00 -0700 (PDT)
Subject: d3dx9: Implement D3DXDeclaratorFromFVF with tests
In-Reply-To: <n2id658b69e1004120252r3090d7cby1b015761342fe230@mail.gmail.com>
References: <t2g5f9140a21004111922g632f4b0ezf899f4a976ceb9c3@mail.gmail.com>
	<n2id658b69e1004120252r3090d7cby1b015761342fe230@mail.gmail.com>
Message-ID: <850390.46130.qm@web26005.mail.ukl.yahoo.com>

What do you mean?

I think I kept the file format.

And what are the other things ? ;)

A+

David




________________________________
De : Henri Verbeet <hverbeet at gmail.com>
? : wine-devel at winehq.org
Envoy? le : Lun 12 avril 2010, 11 h 52 min 15 s
Objet : Re: d3dx9: Implement D3DXDeclaratorFromFVF with tests

Formatting, among others.


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100412/86beb352/attachment.htm>

From titan.costa at wanadoo.fr  Mon Apr 12 05:20:11 2010
From: titan.costa at wanadoo.fr (Christian Costa)
Date: Mon, 12 Apr 2010 12:20:11 +0200
Subject: [PATCH] d3dx9_36/tests: Move surface tests into surface.c
In-Reply-To: <201004120932.o3C9WNeW023087@v1.gse.nl>
References: <201004120932.o3C9WNeW023087@v1.gse.nl>
Message-ID: <4BC2F3DB.3060503@wanadoo.fr>

The issues were existing before and thus not related to the patch.
The patch is only a file renaming and the test selector changed from 
"texture" to "surface" to match tested functions.
I will see if I can do something to fix the test failures.

Christian

 (Marvin) a ?crit :
> Hi,
>
> While running your changed tests on Windows, I think I found new failures.
> Being a bot and all I'm not very good at pattern recognition, so I might be
> wrong, but could you please double-check?
> Full results can be found at
> http://winetestbot.geldorp.nl/JobDetails.pl?Key=1363
>
> Your paranoid android.
>
>
> === W98SE (Windows 98 Second Edition) ===
> No test summary line found
>
> === WNT4WSSP6 (NT4 Workstation SP6 (English, IE2)) ===
> Failure running script in VM: Exceeded timeout limit of 300 sec
>
> === W2KPROSP4 (Windows 2000 Professional SP4) ===
> No test summary line found
>
> === WXPPROSP3 (XP Professional SP3 (English, IE6)) ===
> No test summary line found
>
> === W2K3R2SESP2 (Server 2003 R2 Standard Edition SP2) ===
> No test summary line found
>
> === WVISTAADM (Windows Vista (English, IE7)) ===
> Failure running script in VM: Exceeded timeout limit of 300 sec
>
> === W2K8SE (Server 2008 Standard Edition) ===
> Failure running script in VM: Exceeded timeout limit of 300 sec
>
> === W7PRO (Windows 7 Professional (English, IE8)) ===
> No test summary line found
>
> === W7PROX64 (Windows 7 Professional 64 bit) ===
> No test summary line found
>
> === W7PROX64 (Windows 7 Professional 64 bit) ===
> No test summary line found
>
>
>   





From fgouget at free.fr  Mon Apr 12 05:19:58 2010
From: fgouget at free.fr (Francois Gouget)
Date: Mon, 12 Apr 2010 12:19:58 +0200 (CEST)
Subject: winetricks failed, expecting "system32" where I have "System32"
	and so on
In-Reply-To: <o2hb6bb06271004090857na2e76432s7998d1e30f6f25a1@mail.gmail.com>
References: <4BBF2F94.50700@hist.no>
	<o2hb6bb06271004090857na2e76432s7998d1e30f6f25a1@mail.gmail.com>
Message-ID: <alpine.DEB.2.00.1004121218490.25383@amboise.dolphin>

On Fri, 9 Apr 2010, Austin English wrote:
[...]
> Why did you rename system32? Are you linking your ~/.wine/drive_c to a
> real windows installation?

Windows paths are case insensitive so anything in drive_c should be 
treated in a case-insensitive way. If winetricks does not do so, then it 
is buggy.

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
     The software said it requires Win95 or better, so I installed Linux.


From julliard at winehq.org  Mon Apr 12 05:45:05 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 12 Apr 2010 12:45:05 +0200
Subject: usbhub.sys: add stubbed usbhub.sys
In-Reply-To: <g2p9e89675b1004111357v354c473am38fc66ecf62015ed@mail.gmail.com>
	(Damjan Jovanovic's message of "Sun, 11 Apr 2010 22:57:49 +0200")
References: <9e89675b1003232208j71308ddcq1d305648cf41daa3@mail.gmail.com>
	<874ok5fu8b.fsf@wine.dyndns.org>
	<9e89675b1003241149x86357b2n261793a77177f062@mail.gmail.com>
	<87ocided4v.fsf@wine.dyndns.org>
	<9e89675b1003241244t7d37bc15w638b17e772a60912@mail.gmail.com>
	<87hbo5ebwk.fsf@wine.dyndns.org>
	<9e89675b1003241255g724fb53eh3cc4f5aefae40ae4@mail.gmail.com>
	<87y6hhcwpj.fsf@wine.dyndns.org>
	<9e89675b1003251154r7306dc0ft3dc92017da5adbef@mail.gmail.com>
	<87tys4b4rj.fsf@wine.dyndns.org>
	<g2p9e89675b1004111357v354c473am38fc66ecf62015ed@mail.gmail.com>
Message-ID: <871velj6fi.fsf@wine.dyndns.org>

Damjan Jovanovic <damjan.jov at gmail.com> writes:

> I've hacked at this enough to get some basic USB I/O working, so now I
> have a better idea of what's necessary.
>
> I like usbhub.sys separate from usbd.sys because:
> * The service is called Usbhub in the registry, drivers might depend
> on the service, and having the service load usbd.sys instead of
> usbhub.sys is confusing.
> * usbd.sys isn't part of the device stack in any way, it's just a
> utility library used to do miscellaneous things like parse USB
> descriptors. Putting I/O code in there would be confusing.
> * Windows from 2000 onwards uses usbhub.sys for device stack
> management and I/O. No Windows version uses usbd.sys like that.
> * If we don't want dlls that export nothing, mountmgr.sys also exports
> nothing, so it should be part of ntoskrnl.exe by the same logic.
> * There will no more usbXXX.sys files for basic USB after usbhub.sys.
> We might eventually want higher-level device class drivers
> (usbstor.sys, usbprint.sys) and Microsoft-provided generic drivers
> (usbscan.sys) though.
> * The driver doesn't load first and load usbd.sys via an import which
> creates a device stack, usbhub.sys loads first and then loads drivers
> (into the same process) on-demand, as their USB devices are plugged
> in.
>
> A *very hacked* patch is attached, if you want to see how libusb-1.0
> is used. It only works just enough for the driver to read descriptors
> from the device and send a few basic I/O requests.
>
> I'd like to start sending real patches soon, so can I add a separate
> usbhub.sys or do I have to stick with usbd.sys? And is libusb-1.0 ok?

It seems to me that the device detection needs to be handled by
mountmgr, you don't want a libusb polling loop. Also I don't think you
want to load all of usb inside the same process, native drivers will
crash, and that shouldn't take down the whole usb support. I'd say you
should have one process per device or something along those lines.

-- 
Alexandre Julliard
julliard at winehq.org


From niko.lecam at gmail.com  Mon Apr 12 06:02:36 2010
From: niko.lecam at gmail.com (Nicolas Le Cam)
Date: Mon, 12 Apr 2010 13:02:36 +0200
Subject: wineserver: Fix French manpage
In-Reply-To: <p2k779619571004120202pe78e41b1m7bef3e3ebc843698@mail.gmail.com>
References: <4BBECDAA.7040109@gmail.com>
	<y2vd7e62e981004090019l9f79d4fj96f10c705845cae6@mail.gmail.com>
	<p2k779619571004090430o1406131anba3411a24bc206f3@mail.gmail.com>
	<z2pd7e62e981004091446lf98cab24r4091329d55899fd5@mail.gmail.com>
	<p2k779619571004120202pe78e41b1m7bef3e3ebc843698@mail.gmail.com>
Message-ID: <q2id7e62e981004120402v4b4341e9v3fc7a65e2fd4a27a@mail.gmail.com>

Le 12 avril 2010 11:02, Fr?d?ric Delanoy <frederic.delanoy at gmail.com> a ?crit :
> 2010/4/9 Nicolas Le Cam <niko.lecam at gmail.com>:
>> Le 9 avril 2010 13:30, Fr?d?ric Delanoy <frederic.delanoy at gmail.com> a ?crit :
>>> 2010/4/9 Nicolas Le Cam <niko.lecam at gmail.com>:
>>>> Hi Fr?d?ric,
>>>>
>>>>>+processus clients se sont termin?s. Ceci ?vite le co?t inh?rent ? l'arr?t
>>>> sont -> soient
>>>>
>>>>>+\fIwineserver\fR dans le chemin syst?me ou quelques autres emplacements vraisemblables.
>>>> "potentiels" or "possibles" suit better.
>>>>
>>>
>>> My understanding was that it looked first in the system path, then
>>> tried in, e.g., the home dir or other
>>> directories.
>>> I guess it looks in a hardcoded list of dirs, or sthg like that. In
>>> that sense, "possibles" does not fit IMO.
>>> "potentiels" or "vraisemblables" could both fit, but I wanted to
>>> insist on the probability for the command
>>> to be there (sthg like P[potentiels] < P[vraisemblables]).
>>>
>>> Fr?d?ric
>>>
>> It tries PATH and BINDIR (and server/wineserver if in a build
>> directory). See
>> http://source.winehq.org/git/wine.git/?a=blob;f=libs/wine/config.c#l480
>> So 'potentiels' or 'possibles' fit better IMHO.
>
> "Probables" may possibly fit even better (altough "potentiels" should be OK)?
>
> Fr?d?ric
>
IMHO, "Probables" or "Vraisemblables" mean that it tries randomly some
paths and isn't at all certain to succeed, IOW it sounds really weak ;
where "Potentiels" or "Possibles" mean that if wineserver can't be
found in a fixed number of (logically computed) places, you need to
fix your system because you have a problem. I really prefer the second
option.


-- 
Nicolas Le Cam


From frederic.delanoy at gmail.com  Mon Apr 12 06:45:09 2010
From: frederic.delanoy at gmail.com (=?UTF-8?B?RnLDqWTDqXJpYyBEZWxhbm95?=)
Date: Mon, 12 Apr 2010 13:45:09 +0200
Subject: wineserver: Fix French manpage
In-Reply-To: <q2id7e62e981004120402v4b4341e9v3fc7a65e2fd4a27a@mail.gmail.com>
References: <4BBECDAA.7040109@gmail.com>
	<y2vd7e62e981004090019l9f79d4fj96f10c705845cae6@mail.gmail.com>
	<p2k779619571004090430o1406131anba3411a24bc206f3@mail.gmail.com> 
	<z2pd7e62e981004091446lf98cab24r4091329d55899fd5@mail.gmail.com> 
	<p2k779619571004120202pe78e41b1m7bef3e3ebc843698@mail.gmail.com> 
	<q2id7e62e981004120402v4b4341e9v3fc7a65e2fd4a27a@mail.gmail.com>
Message-ID: <x2w779619571004120445h31085c54rba5cb74930d25ff2@mail.gmail.com>

2010/4/12 Nicolas Le Cam <niko.lecam at gmail.com>:
> Le 12 avril 2010 11:02, Fr?d?ric Delanoy <frederic.delanoy at gmail.com> a ?crit :
>> 2010/4/9 Nicolas Le Cam <niko.lecam at gmail.com>:
>>> Le 9 avril 2010 13:30, Fr?d?ric Delanoy <frederic.delanoy at gmail.com> a ?crit :
>>>> 2010/4/9 Nicolas Le Cam <niko.lecam at gmail.com>:
>>>>> Hi Fr?d?ric,
>>>>>
>>>>>>+processus clients se sont termin?s. Ceci ?vite le co?t inh?rent ? l'arr?t
>>>>> sont -> soient
>>>>>
>>>>>>+\fIwineserver\fR dans le chemin syst?me ou quelques autres emplacements vraisemblables.
>>>>> "potentiels" or "possibles" suit better.
>>>>>
>>>>
>>>> My understanding was that it looked first in the system path, then
>>>> tried in, e.g., the home dir or other
>>>> directories.
>>>> I guess it looks in a hardcoded list of dirs, or sthg like that. In
>>>> that sense, "possibles" does not fit IMO.
>>>> "potentiels" or "vraisemblables" could both fit, but I wanted to
>>>> insist on the probability for the command
>>>> to be there (sthg like P[potentiels] < P[vraisemblables]).
>>>>
>>>> Fr?d?ric
>>>>
>>> It tries PATH and BINDIR (and server/wineserver if in a build
>>> directory). See
>>> http://source.winehq.org/git/wine.git/?a=blob;f=libs/wine/config.c#l480
>>> So 'potentiels' or 'possibles' fit better IMHO.
>>
>> "Probables" may possibly fit even better (altough "potentiels" should be OK)?
>>
>> Fr?d?ric
>>
> IMHO, "Probables" or "Vraisemblables" mean that it tries randomly some
> paths and isn't at all certain to succeed, IOW it sounds really weak ;
> where "Potentiels" or "Possibles" mean that if wineserver can't be
> found in a fixed number of (logically computed) places, you need to
> fix your system because you have a problem. I really prefer the second
> option.

OK for "potentiels" in that case (although "probables" seems stronger
than "possibles" IMHO)

Fr?d?ric


From hverbeet at gmail.com  Mon Apr 12 07:31:19 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 12 Apr 2010 14:31:19 +0200
Subject: [PATCH 03/10] wined3d: Move D24X4S4 to the formats table.
In-Reply-To: <1271069085-14318-4-git-send-email-thunderbird2k@gmail.com>
References: <1271069085-14318-1-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-2-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-3-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-4-git-send-email-thunderbird2k@gmail.com>
Message-ID: <q2vd658b69e1004120531x4cd33c30y79dbe42ae2a817ef@mail.gmail.com>

On 12 April 2010 12:44, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
> ? ? {WINED3DFMT_D16_UNORM, ? ? ? ? ? ? ?GL_DEPTH_COMPONENT24_ARB, ? ? ? ? GL_DEPTH_COMPONENT24_ARB, ? ? ? ? ? ? ? 0,
> ? ? ? ? ? ? GL_DEPTH_COMPONENT, ? ? ? ? GL_UNSIGNED_SHORT, ? ? ? ? ? ? ? ?0,
> ? ? ? ? ? ? WINED3DFMT_FLAG_POSTPIXELSHADER_BLENDING | WINED3DFMT_FLAG_FILTERING | WINED3DFMT_FLAG_DEPTH,
> - ? ? ? ? ? ?ARB_DEPTH_TEXTURE, ? ? ? ? ?NULL},
> + ? ? ? ? ? ?ARB_DEPTH_TEXTURE, ? ? ? ? ?&convert_s4x4_uint_d24_unorm},
That's wrong.

From hverbeet at gmail.com  Mon Apr 12 07:31:53 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 12 Apr 2010 14:31:53 +0200
Subject: [PATCH 10/10] wined3d: Add BLT_OP_COLOR_FILL to blit_supported 
	and use it in BltOverride.
In-Reply-To: <1271069085-14318-11-git-send-email-thunderbird2k@gmail.com>
References: <1271069085-14318-1-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-3-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-4-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-5-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-6-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-7-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-8-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-9-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-10-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-11-git-send-email-thunderbird2k@gmail.com>
Message-ID: <g2qd658b69e1004120531x6dd47c93sba5a567202e376ac@mail.gmail.com>

On 12 April 2010 12:44, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
> + ? ? ? ? ? ?if (ffp_blit.blit_supported(&myDevice->adapter->gl_info, BLIT_OP_COLOR_FILL,
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?NULL, 0, 0, NULL,
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?&dst_rect, This->resource.usage, This->resource.pool, This->resource.format_desc))
> + ? ? ? ? ? ?{
> + ? ? ? ? ? ? ? ?return ffp_blit.color_fill(myDevice, This, &dst_rect, color);
> ? ? ? ? ? ? }
>
> - ? ? ? ? ? ?return ffp_blit.color_fill(myDevice, This, &dst_rect, color);
> + ? ? ? ? ? ?return cpu_blit.color_fill(myDevice, This, &dst_rect, color);
> ? ? ? ? }
> ? ? }
>
Going through struct blit_shader means that you should also check if
cpu_blit can do that operation.

From hverbeet at gmail.com  Mon Apr 12 07:31:40 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 12 Apr 2010 14:31:40 +0200
Subject: [PATCH 09/10] wined3d: Improve FBO support in ClearSurface.
In-Reply-To: <1271069085-14318-10-git-send-email-thunderbird2k@gmail.com>
References: <1271069085-14318-1-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-2-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-3-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-4-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-5-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-6-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-7-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-8-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-9-git-send-email-thunderbird2k@gmail.com>
	<1271069085-14318-10-git-send-email-thunderbird2k@gmail.com>
Message-ID: <s2yd658b69e1004120531t67491d2cy78185aebfbe676bf@mail.gmail.com>

On 12 April 2010 12:44, Roderick Colenbrander <thunderbird2k at gmail.com> wrote:
> - ? ?context = context_acquire(This, (IWineD3DSurface *)target, CTXUSAGE_CLEAR);
> + ? ?if (wined3d_settings.offscreen_rendering_mode == ORM_FBO)
> + ? ?{
> + ? ? ? ?if (!surface_is_offscreen((IWineD3DSurface *)target))
> + ? ? ? ?{
> + ? ? ? ? ? ?TRACE("Surface %p is onscreen\n", target);
> +
> + ? ? ? ? ? ?context = context_acquire(This, (IWineD3DSurface *)target, CTXUSAGE_RESOURCELOAD);
> + ? ? ? ? ? ?ENTER_GL();
> + ? ? ? ? ? ?context_bind_fbo(context, GL_FRAMEBUFFER, NULL);
> + ? ? ? ? ? ?context_set_draw_buffer(context, surface_get_gl_buffer((IWineD3DSurface *)target));
> + ? ? ? ? ? ?LEAVE_GL();
> + ? ? ? ?}
> + ? ? ? ?else
> + ? ? ? ?{
> + ? ? ? ? ? ?TRACE("Surface %p is offscreen\n", target);
> +
> + ? ? ? ? ? ?context = context_acquire(This, NULL, CTXUSAGE_RESOURCELOAD);
> + ? ? ? ? ? ?ENTER_GL();
> + ? ? ? ? ? ?context_bind_fbo(context, GL_FRAMEBUFFER, &context->dst_fbo);
> + ? ? ? ? ? ?context_attach_surface_fbo(context, GL_FRAMEBUFFER, 0, (IWineD3DSurface *)target);
> + ? ? ? ? ? ?context_attach_depth_stencil_fbo(context, GL_FRAMEBUFFER, NULL, FALSE);
> + ? ? ? ? ? ?LEAVE_GL();
> + ? ? ? ?}
> + ? ?}
> + ? ?else
> + ? ?{
> + ? ? ? ?context = context_acquire(This, (IWineD3DSurface *)target, CTXUSAGE_CLEAR);
> + ? ?}
> +
That doesn't work of course, CTXUSAGE_CLEAR isn't there just for show.


From hverbeet at gmail.com  Mon Apr 12 07:40:16 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 12 Apr 2010 14:40:16 +0200
Subject: d3dx9: Implement D3DXDeclaratorFromFVF with tests
In-Reply-To: <850390.46130.qm@web26005.mail.ukl.yahoo.com>
References: <t2g5f9140a21004111922g632f4b0ezf899f4a976ceb9c3@mail.gmail.com>
	<n2id658b69e1004120252r3090d7cby1b015761342fe230@mail.gmail.com>
	<850390.46130.qm@web26005.mail.ukl.yahoo.com>
Message-ID: <l2sd658b69e1004120540p6ceb89ccnfa53b65d84e2d2b1@mail.gmail.com>

On 12 April 2010 12:10, paulo lesgaz <jeremielapuree at yahoo.fr> wrote:
> What do you mean?
>
> I think I kept the file format.
>
> And what are the other things ? ;)
>
Sorry, but I really think these are things you should be able to
figure out on your own.


From m.b.lankhorst at gmail.com  Mon Apr 12 09:14:30 2010
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Mon, 12 Apr 2010 16:14:30 +0200
Subject: [rfc] realtime priority patch based on rtkit
Message-ID: <4BC32AC6.3030508@gmail.com>

Hi all,

I decided to dig through the sample documentation for rtkit and see if I 
could find a way to make it work for wine.
There's still a few things missing: hardcoded libdbus soname, no 
checking if dbus is available, -I/usr/include/dbus-1.0 
-I/usr/lib/dbus-1.0/include should be added to ntdll/Makefile and 
SIGXCPU should demote all threads of the application back to normal priority

The server queues an APC to the target thread that signals it should try 
to acquire rt prio for it. the thread makes a request to rtkit over dbus 
to say it wants realtime. This is because rtkit requires the affected 
process to call dbus.

Any moral objections to this approach?

Cheers,
Maarten
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0004-server-Thread-prio-patch-based-on-rtkit.txt
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100412/841f2ef1/attachment.txt>

From dmitry at codeweavers.com  Mon Apr 12 09:48:39 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 12 Apr 2010 23:48:39 +0900
Subject: winmm: MCI system commands are not eligible for auto-open. (try 2)
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B740321@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B740314@S4DE8PSAANK.mitte.t-com.de>
	<8739z6m0xe.fsf@wine.dyndns.org>
	<47CC5ABB01651443A88DB8EC5B4D657B740321@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <20100412234839.4a80d87b.dmitry@codeweavers.com>

<Joerg-Cyril.Hoehle at t-systems.com> wrote:

> +    FIXME("(%04x) vkey %04X stub\n", dwFlags, lpParms->nVirtKey);

That change is unwanted.
 
> -    if (dwFlags & MCI_NOTIFY)
> -	mciDriverNotify((HWND)lpParms->dwCallback, wDevID,
> -                        (dwRet == 0) ? MCI_NOTIFY_SUCCESSFUL : MCI_NOTIFY_FAILURE);
> -
> +    if (MMSYSERR_NOERROR==dwRet && (dwFlags & MCI_NOTIFY))
> +        mciDriverNotify((HWND)lpParms->dwCallback, wDevID, MCI_NOTIFY_SUCCESSFUL);
>      return dwRet;
>  }
>  
> @@ -1903,10 +1906,9 @@ static	DWORD MCI_Sound(UINT wDevID, DWORD dwFlags, LPMCI_SOUND_PARMSW lpParms)
>          dwRet = sndPlaySoundW(lpParms->lpstrSoundName, SND_SYNC) ? MMSYSERR_NOERROR : MMSYSERR_ERROR;
>      else
>          dwRet = MMSYSERR_ERROR; /* what should be done ??? */
> -    if (dwFlags & MCI_NOTIFY)
> -	mciDriverNotify((HWND)lpParms->dwCallback, wDevID,
> -                        (dwRet == 0) ? MCI_NOTIFY_SUCCESSFUL : MCI_NOTIFY_FAILURE);
>  
> +    if (MMSYSERR_NOERROR==dwRet && (dwFlags & MCI_NOTIFY))
> +        mciDriverNotify((HWND)lpParms->dwCallback, wDevID, MCI_NOTIFY_SUCCESSFUL);
>      return dwRet;
>  }

Do you have a test case which shows that notofication is not sent is the failure case?

Also 'if (MMSYSERR_NOERROR==dwRet' misses spaces, and having comparison reversed doesn't
match the style of the surrounding code.
 
-- 
1.5.6.3


[text/plain (2B)]




-- 
Dmitry.


From Joerg-Cyril.Hoehle at t-systems.com  Mon Apr 12 10:07:04 2010
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Mon, 12 Apr 2010 17:07:04 +0200
Subject: winmm: MCI system commands are not eligible for auto-open. (try 2)
References: <47CC5ABB01651443A88DB8EC5B4D657B740314@S4DE8PSAANK.mitte.t-com.de><8739z6m0xe.fsf@wine.dyndns.org><47CC5ABB01651443A88DB8EC5B4D657B740321@S4DE8PSAANK.mitte.t-com.de>
	<20100412234839.4a80d87b.dmitry@codeweavers.com>
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B740324@S4DE8PSAANK.mitte.t-com.de>

Dmitry Timoshkov wrote:

>> +    FIXME("(%04x) vkey %04X stub\n", dwFlags, lpParms->nVirtKey);
>That change is unwanted.
I can remove it, but why? Is supporting break keys a WONTFIX in Wine?
 
>Do you have a test case which shows that notofication is not sent is the failure case?
It's already in mci.c:
    test_notification(hwnd, "sound notify", err ? 0 : MCI_NOTIFY_SUCCESSFUL);
It's how all commands I've tested to some depth so far behave.

> having comparison reversed doesn't
>match the style of the surrounding code.
Ok.  After being bitten at least once by assignment/comparison
mismatch I promised myself to use that style.  I'm myself used
to read code as "if A equals 3" rather than "if 3 is the value
of A" but I'm convinced that's just a matter of getting used
to this style that is less error-prone in C.

Regards,
 J?rg H?hle.


From dmitry at codeweavers.com  Mon Apr 12 10:27:21 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 13 Apr 2010 00:27:21 +0900
Subject: winmm: MCI system commands are not eligible for auto-open. (try 2)
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B740324@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B740314@S4DE8PSAANK.mitte.t-com.de>
	<8739z6m0xe.fsf@wine.dyndns.org>
	<47CC5ABB01651443A88DB8EC5B4D657B740321@S4DE8PSAANK.mitte.t-com.de>
	<20100412234839.4a80d87b.dmitry@codeweavers.com>
	<47CC5ABB01651443A88DB8EC5B4D657B740324@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <20100413002721.d05aeaa9.dmitry@codeweavers.com>

<Joerg-Cyril.Hoehle at t-systems.com> wrote:

> >> +    FIXME("(%04x) vkey %04X stub\n", dwFlags, lpParms->nVirtKey);
> >That change is unwanted.
> I can remove it, but why? Is supporting break keys a WONTFIX in Wine?

If that's really a problem then the first thing to do is start with some bug
reports or test cases. Adding spurious FIXME's is not an improvement.

> >Do you have a test case which shows that notofication is not sent is the failure case?
> It's already in mci.c:
>     test_notification(hwnd, "sound notify", err ? 0 : MCI_NOTIFY_SUCCESSFUL);
> It's how all commands I've tested to some depth so far behave.

I don't see any correspnding changes in that patch that remove todo_wine statements
in the tests. That suggests that either such tests don't exist, or that change actually
fixes nothing.

-- 
Dmitry.


From julliard at winehq.org  Mon Apr 12 10:40:36 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 12 Apr 2010 17:40:36 +0200
Subject: winmm: MCI system commands are not eligible for auto-open. (try 2)
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B740324@S4DE8PSAANK.mitte.t-com.de>
	(Joerg-Cyril Hoehle's message of "Mon, 12 Apr 2010 17:07:04 +0200")
References: <47CC5ABB01651443A88DB8EC5B4D657B740314@S4DE8PSAANK.mitte.t-com.de>
	<8739z6m0xe.fsf@wine.dyndns.org>
	<47CC5ABB01651443A88DB8EC5B4D657B740321@S4DE8PSAANK.mitte.t-com.de>
	<20100412234839.4a80d87b.dmitry@codeweavers.com>
	<47CC5ABB01651443A88DB8EC5B4D657B740324@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <87zl18he6j.fsf@wine.dyndns.org>

<Joerg-Cyril.Hoehle at t-systems.com> writes:

> Ok.  After being bitten at least once by assignment/comparison
> mismatch I promised myself to use that style.  I'm myself used
> to read code as "if A equals 3" rather than "if 3 is the value
> of A" but I'm convinced that's just a matter of getting used
> to this style that is less error-prone in C.

gcc prints a warning in most cases where you could make the mistake, so
it's not a good enough reason to make the code harder to read.

-- 
Alexandre Julliard
julliard at winehq.org


From dmitry at codeweavers.com  Mon Apr 12 10:43:23 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 13 Apr 2010 00:43:23 +0900
Subject: winmm: MCI system commands are not eligible for auto-open. (try 2)
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B740325@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B740314@S4DE8PSAANK.mitte.t-com.de>
	<8739z6m0xe.fsf@wine.dyndns.org>
	<47CC5ABB01651443A88DB8EC5B4D657B740321@S4DE8PSAANK.mitte.t-com.de>
	<20100412234839.4a80d87b.dmitry@codeweavers.com>
	<47CC5ABB01651443A88DB8EC5B4D657B740325@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <20100413004323.890034ff.dmitry@codeweavers.com>

[cc:ing wine-devel]

<Joerg-Cyril.Hoehle at t-systems.com> wrote:

> this is the second time that AJ commits a patch of mine despite
> a comment of yours.

I think that Alexandre has commited your patch slightly in a hurry,
usually he waits at least several hours unless the patch is obviously
correct (which is not the case here IMO).

> Should I send a subsequent patch that takes
> all your comments into consideration?

In my opinion your patch should be reverted until all the changes have
appropriate test cases, and that patch makes the tests pass (i.e. remove
existing todo_wine statements).

-- 
Dmitry.


From Joerg-Cyril.Hoehle at t-systems.com  Mon Apr 12 10:49:46 2010
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Mon, 12 Apr 2010 17:49:46 +0200
Subject: winmm: MCI system commands are not eligible for auto-open. (try 2)
References: <47CC5ABB01651443A88DB8EC5B4D657B740314@S4DE8PSAANK.mitte.t-com.de><8739z6m0xe.fsf@wine.dyndns.org><47CC5ABB01651443A88DB8EC5B4D657B740321@S4DE8PSAANK.mitte.t-com.de><20100412234839.4a80d87b.dmitry@codeweavers.com><47CC5ABB01651443A88DB8EC5B4D657B740324@S4DE8PSAANK.mitte.t-com.de>
	<20100413002721.d05aeaa9.dmitry@codeweavers.com>
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B740326@S4DE8PSAANK.mitte.t-com.de>

Dmitry Timoshkov wrote:

>I don't see any corresponding changes in that patch that remove todo_wine statements
>in the tests. That suggests that either such tests don't exist, or that change actually
>fixes nothing.
A third explanation is possible:
It's an example of one bug shadowing another bug.

There's no todo_wine to remove because
a) No Notification was sent in Wine because the parser did
   not correctly handle system commands.  MCI_Sound was never called so
   there was no notification.
b) There was no need for todo_wine in the past because this double error could
   not be detected.  No notification was and is the correct behaviour when the
   sound command returns an error, as it currently does.
b) When I fixed that in "try 1", AJ observed the notification test failure.
   That's why I had to fix the notification as well for "try 2".

The tests pass on MS (in both MMSYS_NOERROR and MCIERR_HARDWARE modes) proving they are ok.

Regards,
 J?rg H?hle.


From dmitry at codeweavers.com  Mon Apr 12 10:58:50 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 13 Apr 2010 00:58:50 +0900
Subject: winmm: MCI system commands are not eligible for auto-open. (try 2)
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B740326@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B740314@S4DE8PSAANK.mitte.t-com.de>
	<8739z6m0xe.fsf@wine.dyndns.org>
	<47CC5ABB01651443A88DB8EC5B4D657B740321@S4DE8PSAANK.mitte.t-com.de>
	<20100412234839.4a80d87b.dmitry@codeweavers.com>
	<47CC5ABB01651443A88DB8EC5B4D657B740324@S4DE8PSAANK.mitte.t-com.de>
	<20100413002721.d05aeaa9.dmitry@codeweavers.com>
	<47CC5ABB01651443A88DB8EC5B4D657B740326@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <20100413005850.9f261253.dmitry@codeweavers.com>

<Joerg-Cyril.Hoehle at t-systems.com> wrote:

> >I don't see any corresponding changes in that patch that remove todo_wine statements
> >in the tests. That suggests that either such tests don't exist, or that change actually
> >fixes nothing.
> A third explanation is possible:
> It's an example of one bug shadowing another bug.
> 
> There's no todo_wine to remove because
> a) No Notification was sent in Wine because the parser did
>    not correctly handle system commands.  MCI_Sound was never called so
>    there was no notification.
> b) There was no need for todo_wine in the past because this double error could
>    not be detected.  No notification was and is the correct behaviour when the
>    sound command returns an error, as it currently does.

Then that's what you need to fix in the first place.

> b) When I fixed that in "try 1", AJ observed the notification test failure.
>    That's why I had to fix the notification as well for "try 2".
> 
> The tests pass on MS (in both MMSYS_NOERROR and MCIERR_HARDWARE modes) proving they are ok.

Since there is no neither todo_wine statements in the tests, nor test failures
under Wine that means that both the tests and the patch are not OK.

-- 
Dmitry.


From Joerg-Cyril.Hoehle at t-systems.com  Mon Apr 12 11:45:16 2010
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Mon, 12 Apr 2010 18:45:16 +0200
Subject: winmm: MCI system commands are not eligible for auto-open. (try 2)
References: <47CC5ABB01651443A88DB8EC5B4D657B740314@S4DE8PSAANK.mitte.t-com.de><8739z6m0xe.fsf@wine.dyndns.org><47CC5ABB01651443A88DB8EC5B4D657B740321@S4DE8PSAANK.mitte.t-com.de><20100412234839.4a80d87b.dmitry@codeweavers.com><47CC5ABB01651443A88DB8EC5B4D657B740324@S4DE8PSAANK.mitte.t-com.de><20100413002721.d05aeaa9.dmitry@codeweavers.com><47CC5ABB01651443A88DB8EC5B4D657B740326@S4DE8PSAANK.mitte.t-com.de>
	<20100413005850.9f261253.dmitry@codeweavers.com>
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B740327@S4DE8PSAANK.mitte.t-com.de>

Dmitry Timoshkov wrote:

>Since there is no neither todo_wine statements in the tests, nor test failures
>under Wine that means that both the tests and the patch are not OK.

What has Wine to say when talking about the correctness
of tests?  Only native dictates what the test result should be.
The emerging rule is: "no notification in case of error", and there's even a
specific test case about the MCI sound string command in the tests.

I believe you forgot that AJ mentioned a notification test failure that
appeared with "try 1": So there was a test failure under Wine.

>> b) There was no need for todo_wine in the past because this double error could
>>    not be detected.  No notification was and is the correct behaviour when the
>>    sound command returns an error, as it currently does.
>Then that's what you need to fix in the first place.

I cannot demonstrate the value of a fix to MCI_SOUND via a test case if the parser
never calls MCI_SOUND.  That's why the order in my git tree and that of submission is:
1. Get MCI_SOUND called (and fix the notification because of
   the test failure this introduces).
2. Get MCI_SOUND to actually play a sound (in my queue, past the 64bit patch).

I find it illogical to write a patch that would prefix an existing test
with todo_wine.  I aim at eliminating existing todo_wine.

Now I think the subject of my patch is misleading.  It should have read
"winmm: Correctly deal with MCI system commands." (to some extent).

Regards,
 J?rg H?hle.


From winetestbot at geldorp.nl  Mon Apr 12 15:10:49 2010
From: winetestbot at geldorp.nl (winetestbot at geldorp.nl)
Date: Mon, 12 Apr 2010 22:10:49 +0200
Subject: [PATCH 7/7] wined3d: Move A4L4 conversion to the formats table. 
Message-ID: <201004122010.o3CKAnVw019062@v1.gse.nl>

Hi,

While running your changed tests on Windows, I think I found new failures.
Being a bot and all I'm not very good at pattern recognition, so I might be
wrong, but could you please double-check?
Full results can be found at
http://winetestbot.geldorp.nl/JobDetails.pl?Key=1399

Your paranoid android.


=== WINEBUILD (Wine build VM) ===
Patch failed


From winetestbot at geldorp.nl  Mon Apr 12 15:30:10 2010
From: winetestbot at geldorp.nl (winetestbot at geldorp.nl)
Date: Mon, 12 Apr 2010 22:30:10 +0200
Subject: [PATCH] d3dx9_36/tests: Move surface tests into surface.c (try 2)
Message-ID: <201004122030.o3CKUAnM020131@v1.gse.nl>

Hi,

While running your changed tests on Windows, I think I found new failures.
Being a bot and all I'm not very good at pattern recognition, so I might be
wrong, but could you please double-check?
Full results can be found at
http://winetestbot.geldorp.nl/JobDetails.pl?Key=1401

Your paranoid android.


=== WINEBUILD (Wine build VM) ===
Make failed


From thunderbird2k at gmail.com  Mon Apr 12 15:52:57 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Mon, 12 Apr 2010 22:52:57 +0200
Subject: [PATCH 7/7] wined3d: Move A4L4 conversion to the formats table.
In-Reply-To: <201004122010.o3CKAnVw019062@v1.gse.nl>
References: <201004122010.o3CKAnVw019062@v1.gse.nl>
Message-ID: <k2lc8485d471004121352tbe8c57fbl423e3bd70ddebfa9@mail.gmail.com>

I'm not sure how the bot works but it looks like it concatenated some
of my patches together and then applied to them. I have no idea to
what Wine version it was since it applies fine on Wine git here. It
could be that I'm doing something wrong but I don't see where.

Roderick


On Mon, Apr 12, 2010 at 10:10 PM, Marvin <winetestbot at geldorp.nl> wrote:
> Hi,
>
> While running your changed tests on Windows, I think I found new failures.
> Being a bot and all I'm not very good at pattern recognition, so I might be
> wrong, but could you please double-check?
> Full results can be found at
> http://winetestbot.geldorp.nl/JobDetails.pl?Key=1399
>
> Your paranoid android.
>
>
> === WINEBUILD (Wine build VM) ===
> Patch failed
>


From ggeldorp at vmware.com  Mon Apr 12 16:20:33 2010
From: ggeldorp at vmware.com (Greg Geldorp)
Date: Mon, 12 Apr 2010 14:20:33 -0700
Subject: [PATCH 7/7] wined3d: Move A4L4 conversion to the formats table.
In-Reply-To: <k2lc8485d471004121352tbe8c57fbl423e3bd70ddebfa9@mail.gmail.com>
References: <201004122010.o3CKAnVw019062@v1.gse.nl>
	<k2lc8485d471004121352tbe8c57fbl423e3bd70ddebfa9@mail.gmail.com>
Message-ID: <1C77FC3365DBD149802E0F5381EBE2C9024ACC7701@EXCH-MBX-4.vmware.com>

> From: Roderick Colenbrander 
>
> I'm not sure how the bot works but it looks like it concatenated some
> of my patches together and then applied to them. I have no idea to
> what Wine version it was since it applies fine on Wine git here. It
> could be that I'm doing something wrong but I don't see where.

No, this is the bot messing up. For some reason I don't understand yet
it included one of your earlier patches ("[PATCH 08/13] d3d9: Add an
initial ColorFill regression test.") as the first of this series. That
threw everything off.

I'll disable emailing to wine-devel until I've sorted this out.

Ge.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 4183 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100412/dc664de3/attachment.bin>

From ggeldorp at vmware.com  Mon Apr 12 17:46:27 2010
From: ggeldorp at vmware.com (Greg Geldorp)
Date: Mon, 12 Apr 2010 15:46:27 -0700
Subject: [PATCH 7/7] wined3d: Move A4L4 conversion to the formats table.
References: <201004122010.o3CKAnVw019062@v1.gse.nl>
	<k2lc8485d471004121352tbe8c57fbl423e3bd70ddebfa9@mail.gmail.com> 
Message-ID: <1C77FC3365DBD149802E0F5381EBE2C9024ACC7764@EXCH-MBX-4.vmware.com>

> From: Ge van Geldorp
> > From: Roderick Colenbrander 
> >
> > I'm not sure how the bot works but it looks like it concatenated some
> > of my patches together and then applied to them. I have no idea to
> > what Wine version it was since it applies fine on Wine git here. It
> > could be that I'm doing something wrong but I don't see where.
>
> No, this is the bot messing up. For some reason I don't understand yet
> it included one of your earlier patches ("[PATCH 08/13] d3d9: Add an
> initial ColorFill regression test.") as the first of this series. That
> threw everything off.
>
> I'll disable emailing to wine-devel until I've sorted this out.

Ok, I understand what happened now... This is the sequence of patches you
submitted, in the order they arrived in my mail queue (oldest first):

1) [PATCH 4/7] wined3d: Move D15S1 over to the formats table.
2) [PATCH 1/7] wined3d: Move L6V5U5 conversion to the formats table.
3) [PATCH 5/7] wined3d: Move R32G32F convertion to the formats table.
4) [PATCH 3/7] wined3d: Move D24X4S4 to the formats table.
5) [PATCH 6/7] wined3d: Move G16R16/R16G16F conversion to the formats table.
6) 1/3 d3d9: Add an initial ColorFill regression test.
7) [PATCH 2/7] wined3d: Move D24FS8 to formats table.
8) [PATCH 7/7] wined3d: Move A4L4 conversion to the formats table.

Note the out-of-sequence arrival of number 6). The bot is not smart enough
to handle two series from the same author arriving interleaved. It will see
everything as one big series until all parts of a series have arrived. In
this case, the patch attached to message 6) overwrote the patch attached
to message 2) (both have part number 1).

Not sure how to handle this, except by asking people to leave some time
before sending another series.

Re-enabling emailing to wine-devel since this is working as designed.

Ge.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 4183 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100412/821cd9b6/attachment.bin>

From dmitry at codeweavers.com  Mon Apr 12 23:01:25 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 13 Apr 2010 13:01:25 +0900
Subject: winmm: MCI system commands are not eligible for auto-open. (try 2)
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B740327@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B740314@S4DE8PSAANK.mitte.t-com.de>
	<8739z6m0xe.fsf@wine.dyndns.org>
	<47CC5ABB01651443A88DB8EC5B4D657B740321@S4DE8PSAANK.mitte.t-com.de>
	<20100412234839.4a80d87b.dmitry@codeweavers.com>
	<47CC5ABB01651443A88DB8EC5B4D657B740324@S4DE8PSAANK.mitte.t-com.de>
	<20100413002721.d05aeaa9.dmitry@codeweavers.com>
	<47CC5ABB01651443A88DB8EC5B4D657B740326@S4DE8PSAANK.mitte.t-com.de>
	<20100413005850.9f261253.dmitry@codeweavers.com>
	<47CC5ABB01651443A88DB8EC5B4D657B740327@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <20100413130125.9f7ed39d.dmitry@codeweavers.com>

<Joerg-Cyril.Hoehle at t-systems.com> wrote:

> >Since there is no neither todo_wine statements in the tests, nor test failures
> >under Wine that means that both the tests and the patch are not OK.
> 
> What has Wine to say when talking about the correctness
> of tests?  Only native dictates what the test result should be.

Of course the tests are suppose to show the behaviour of Windows.

> The emerging rule is: "no notification in case of error", and there's even a
> specific test case about the MCI sound string command in the tests.

And another rule is that the patch which changes the behaviour of an API
needs to have an appropriate test case which does not pass before the patch
(i.e. has the todo_wine around it), and passes after the patch (i.e. the patch
removes the corresponding todo_wine). Your patch doesn't qualify for that.

-- 
Dmitry.


From paul.vriens.wine at gmail.com  Tue Apr 13 01:44:45 2010
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Tue, 13 Apr 2010 08:44:45 +0200
Subject: [PATCH 7/7] wined3d: Move A4L4 conversion to the formats table.
In-Reply-To: <1C77FC3365DBD149802E0F5381EBE2C9024ACC7764@EXCH-MBX-4.vmware.com>
References: <201004122010.o3CKAnVw019062@v1.gse.nl>	<k2lc8485d471004121352tbe8c57fbl423e3bd70ddebfa9@mail.gmail.com>
	<1C77FC3365DBD149802E0F5381EBE2C9024ACC7764@EXCH-MBX-4.vmware.com>
Message-ID: <4BC412DD.6090105@gmail.com>

On 04/13/2010 12:46 AM, Greg Geldorp wrote:
>> From: Ge van Geldorp
>>> From: Roderick Colenbrander
>>>
>>> I'm not sure how the bot works but it looks like it concatenated some
>>> of my patches together and then applied to them. I have no idea to
>>> what Wine version it was since it applies fine on Wine git here. It
>>> could be that I'm doing something wrong but I don't see where.
>>
>> No, this is the bot messing up. For some reason I don't understand yet
>> it included one of your earlier patches ("[PATCH 08/13] d3d9: Add an
>> initial ColorFill regression test.") as the first of this series. That
>> threw everything off.
>>
>> I'll disable emailing to wine-devel until I've sorted this out.
>
> Ok, I understand what happened now... This is the sequence of patches you
> submitted, in the order they arrived in my mail queue (oldest first):
>
> 1) [PATCH 4/7] wined3d: Move D15S1 over to the formats table.
> 2) [PATCH 1/7] wined3d: Move L6V5U5 conversion to the formats table.
> 3) [PATCH 5/7] wined3d: Move R32G32F convertion to the formats table.
> 4) [PATCH 3/7] wined3d: Move D24X4S4 to the formats table.
> 5) [PATCH 6/7] wined3d: Move G16R16/R16G16F conversion to the formats table.
> 6) 1/3 d3d9: Add an initial ColorFill regression test.
> 7) [PATCH 2/7] wined3d: Move D24FS8 to formats table.
> 8) [PATCH 7/7] wined3d: Move A4L4 conversion to the formats table.
>
> Note the out-of-sequence arrival of number 6). The bot is not smart enough
> to handle two series from the same author arriving interleaved. It will see
> everything as one big series until all parts of a series have arrived. In
> this case, the patch attached to message 6) overwrote the patch attached
> to message 2) (both have part number 1).
>
> Not sure how to handle this, except by asking people to leave some time
> before sending another series.

Dan's Patchwatcher had more or less the same issue in the beginning, but 
wasn't that solved?

I think the only issue left was when people sent 2 series of equal 
patchcounts and they arrive mixed.

-- 
Cheers,

Paul.


From ggeldorp at vmware.com  Tue Apr 13 04:20:29 2010
From: ggeldorp at vmware.com (Greg Geldorp)
Date: Tue, 13 Apr 2010 02:20:29 -0700
Subject: TestBot moved to new address
Message-ID: <1C77FC3365DBD149802E0F5381EBE2C9024ACC77BD@EXCH-MBX-4.vmware.com>

The TestBot has moved to a new location:

http://testbot.winehq.org

You will be automatically redirected if you use the old address.
Thanks to Jeremy Newman who helped me set this up.

Ge.


From sven.wine at gmail.com  Tue Apr 13 04:26:02 2010
From: sven.wine at gmail.com (Sven Baars)
Date: Tue, 13 Apr 2010 11:26:02 +0200
Subject: [PATCH 7/7] wined3d: Move A4L4 conversion to the formats table.
In-Reply-To: <1C77FC3365DBD149802E0F5381EBE2C9024ACC7764@EXCH-MBX-4.vmware.com>
References: <201004122010.o3CKAnVw019062@v1.gse.nl>	<k2lc8485d471004121352tbe8c57fbl423e3bd70ddebfa9@mail.gmail.com>
	<1C77FC3365DBD149802E0F5381EBE2C9024ACC7764@EXCH-MBX-4.vmware.com>
Message-ID: <4BC438AA.7050409@gmail.com>

Greg Geldorp schreef:
>> From: Ge van Geldorp
>>     
>>> From: Roderick Colenbrander 
>>>
>>> I'm not sure how the bot works but it looks like it concatenated some
>>> of my patches together and then applied to them. I have no idea to
>>> what Wine version it was since it applies fine on Wine git here. It
>>> could be that I'm doing something wrong but I don't see where.
>>>       
>> No, this is the bot messing up. For some reason I don't understand yet
>> it included one of your earlier patches ("[PATCH 08/13] d3d9: Add an
>> initial ColorFill regression test.") as the first of this series. That
>> threw everything off.
>>
>> I'll disable emailing to wine-devel until I've sorted this out.
>>     
>
> Ok, I understand what happened now... This is the sequence of patches you
> submitted, in the order they arrived in my mail queue (oldest first):
>
> 1) [PATCH 4/7] wined3d: Move D15S1 over to the formats table.
> 2) [PATCH 1/7] wined3d: Move L6V5U5 conversion to the formats table.
> 3) [PATCH 5/7] wined3d: Move R32G32F convertion to the formats table.
> 4) [PATCH 3/7] wined3d: Move D24X4S4 to the formats table.
> 5) [PATCH 6/7] wined3d: Move G16R16/R16G16F conversion to the formats table.
> 6) 1/3 d3d9: Add an initial ColorFill regression test.
> 7) [PATCH 2/7] wined3d: Move D24FS8 to formats table.
> 8) [PATCH 7/7] wined3d: Move A4L4 conversion to the formats table.
>
> Note the out-of-sequence arrival of number 6). The bot is not smart enough
> to handle two series from the same author arriving interleaved. It will see
> everything as one big series until all parts of a series have arrived. In
> this case, the patch attached to message 6) overwrote the patch attached
> to message 2) (both have part number 1).
>
> Not sure how to handle this, except by asking people to leave some time
> before sending another series.
>
> Re-enabling emailing to wine-devel since this is working as designed.
>
> Ge.
>   
Hey Ge,

you could, instead of only checking for the author, also try to check 
for the maximum amount of patches. If you find patch [Patch 1/7], I 
assume you currently wait for all 7 patches. Now if a patch 1/3 comes in 
between, you'll see that the maximum is different, in this case 3, so 
you'll know that it's a different patch-set.

In case the maximum is also the same, it's also difficult for a human to 
see what patch belongs to what patch-set, so that should never happen in 
the first place. Unless AJ is a psychic of course.

Sven

P.S. Awesome work on the testbot.


From ggeldorp at vmware.com  Tue Apr 13 05:52:30 2010
From: ggeldorp at vmware.com (Greg Geldorp)
Date: Tue, 13 Apr 2010 03:52:30 -0700
Subject: Detecting patch sets
In-Reply-To: <4BC438AA.7050409@gmail.com>
References: <201004122010.o3CKAnVw019062@v1.gse.nl>
	<k2lc8485d471004121352tbe8c57fbl423e3bd70ddebfa9@mail.gmail.com>
	<1C77FC3365DBD149802E0F5381EBE2C9024ACC7764@EXCH-MBX-4.vmware.com>
	<4BC438AA.7050409@gmail.com>
Message-ID: <1C77FC3365DBD149802E0F5381EBE2C9024AD5D18A@EXCH-MBX-4.vmware.com>

Hi Sven,

> From: Sven Baars
>
> you could, instead of only checking for the author, also try to check
> for the maximum amount of patches. If you find patch [Patch 1/7], I
> assume you currently wait for all 7 patches. Now if a patch 1/3 comes in
> between, you'll see that the maximum is different, in this case 3, so
> you'll know that it's a different patch-set.

I thought about that, but the drawback is that a new patch set is started
if the submitter mistypes the maximum (e.g. [1/4], [2/4], [3/5], [4/4]). In
that case we end up with two incomplete sets.
I've also considered taking the DLL name into account if available (most
people will include the DLL name in their Subject), but there are valid
patch sets spanning multiple DLLs (e.g. 1/3 d3d9: ..., 2/3 wined3d: ...,
3/3 wined3d: ...) so that won't work either.
I'll probably go back to using author + maximum as the key and perhaps
build a UI so an author can manually select patches belonging to a set
and put them in the right order. Then when a set still appears incomplete
after a couple of hours a reminder email could be sent to the author asking
him to manually group his patches.

> In case the maximum is also the same, it's also difficult for a human to
> see what patch belongs to what patch-set, so that should never happen in
> the first place. Unless AJ is a psychic of course.

He is ;-)

Ge.


From wolfram at the-dreams.de  Tue Apr 13 06:20:33 2010
From: wolfram at the-dreams.de (Wolfram Sang)
Date: Tue, 13 Apr 2010 13:20:33 +0200
Subject: Detecting patch sets
In-Reply-To: <1C77FC3365DBD149802E0F5381EBE2C9024AD5D18A@EXCH-MBX-4.vmware.com>
References: <201004122010.o3CKAnVw019062@v1.gse.nl>	<k2lc8485d471004121352tbe8c57fbl423e3bd70ddebfa9@mail.gmail.com>	<1C77FC3365DBD149802E0F5381EBE2C9024ACC7764@EXCH-MBX-4.vmware.com>	<4BC438AA.7050409@gmail.com>
	<1C77FC3365DBD149802E0F5381EBE2C9024AD5D18A@EXCH-MBX-4.vmware.com>
Message-ID: <4BC45381.4090804@the-dreams.de>


>> you could, instead of only checking for the author, also try to check
>> for the maximum amount of patches. If you find patch [Patch 1/7], I
>> assume you currently wait for all 7 patches. Now if a patch 1/3 comes in
>> between, you'll see that the maximum is different, in this case 3, so
>> you'll know that it's a different patch-set.
> 
> I thought about that, but the drawback is that a new patch set is started
> if the submitter mistypes the maximum (e.g. [1/4], [2/4], [3/5], [4/4]). In
> that case we end up with two incomplete sets.

This should be a pretty rare case given that most people will use some
generators like 'git format-patch' or 'quilt' for their patch-series.
I'd say if such an error ever occurs, the series could be manually
fixed/resent. That way, you don't need to code some UI and the authors
who have not done a mistake won't need to take an extra step.

Kind regards,

   Wolfram



From mstefani at redhat.com  Tue Apr 13 06:45:35 2010
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Tue, 13 Apr 2010 13:45:35 +0200
Subject: Detecting patch sets
In-Reply-To: <4BC45381.4090804@the-dreams.de>
References: <201004122010.o3CKAnVw019062@v1.gse.nl>	<k2lc8485d471004121352tbe8c57fbl423e3bd70ddebfa9@mail.gmail.com>	<1C77FC3365DBD149802E0F5381EBE2C9024ACC7764@EXCH-MBX-4.vmware.com>	<4BC438AA.7050409@gmail.com>	<1C77FC3365DBD149802E0F5381EBE2C9024AD5D18A@EXCH-MBX-4.vmware.com>
	<4BC45381.4090804@the-dreams.de>
Message-ID: <4BC4595F.6090406@redhat.com>

Wolfram Sang wrote:
>>> you could, instead of only checking for the author, also try to check
>>> for the maximum amount of patches. If you find patch [Patch 1/7], I
>>> assume you currently wait for all 7 patches. Now if a patch 1/3 comes in
>>> between, you'll see that the maximum is different, in this case 3, so
>>> you'll know that it's a different patch-set.
>> I thought about that, but the drawback is that a new patch set is started
>> if the submitter mistypes the maximum (e.g. [1/4], [2/4], [3/5], [4/4]). In
>> that case we end up with two incomplete sets.
> 
> This should be a pretty rare case given that most people will use some
> generators like 'git format-patch' or 'quilt' for their patch-series.
People do use those tools and then change their mind. One can see
regularly patches like [5/4] or people drop a patch from the series, etc.

> I'd say if such an error ever occurs, the series could be manually
> fixed/resent. That way, you don't need to code some UI and the authors
> who have not done a mistake won't need to take an extra step.
That isn't very user friendly and at least for the beginning the tool
needs to cope with the established and accepted workflow. Once the tool
gets part of the patch submission process stuff can be made more strict
if it is deemed necessary.

bye
    michael


From ggeldorp at vmware.com  Tue Apr 13 07:35:32 2010
From: ggeldorp at vmware.com (Greg Geldorp)
Date: Tue, 13 Apr 2010 05:35:32 -0700
Subject: Detecting patch sets
In-Reply-To: <4BC45381.4090804@the-dreams.de>
References: <201004122010.o3CKAnVw019062@v1.gse.nl>
	<k2lc8485d471004121352tbe8c57fbl423e3bd70ddebfa9@mail.gmail.com>
	<1C77FC3365DBD149802E0F5381EBE2C9024ACC7764@EXCH-MBX-4.vmware.com>
	<4BC438AA.7050409@gmail.com>
	<1C77FC3365DBD149802E0F5381EBE2C9024AD5D18A@EXCH-MBX-4.vmware.com>
	<4BC45381.4090804@the-dreams.de>
Message-ID: <1C77FC3365DBD149802E0F5381EBE2C9024AD5D19F@EXCH-MBX-4.vmware.com>

> From: Wolfram Sang
>
> This should be a pretty rare case given that most people will use some
> generators like 'git format-patch' or 'quilt' for their patch-series.
> I'd say if such an error ever occurs, the series could be manually
> fixed/resent. That way, you don't need to code some UI and the authors
> who have not done a mistake won't need to take an extra step.

Looking back at my previous post I see that I haven't been very clear.
The intent is to automatically process sets that the bot can recognize
by itself (by looking at author + xx/yy info) and only have the manual
interface as a fallback mechanism.

> From: Michael Stefaniuc
>
> That isn't very user friendly and at least for the beginning the tool
> needs to cope with the established and accepted workflow.

Totally agree, the tool should support the developers, not the other way
around. However, humans are much better at pattern recognition than
computers, so it might be advantageous to have a mechanism whereby a
human can nudge the tool in the right direction.

Ge.


From juan.lang at gmail.com  Tue Apr 13 10:07:19 2010
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 13 Apr 2010 08:07:19 -0700
Subject: winmm: MCI system commands are not eligible for auto-open. (try 
	2)
In-Reply-To: <20100413130125.9f7ed39d.dmitry@codeweavers.com>
References: <47CC5ABB01651443A88DB8EC5B4D657B740314@S4DE8PSAANK.mitte.t-com.de>
	<8739z6m0xe.fsf@wine.dyndns.org>
	<47CC5ABB01651443A88DB8EC5B4D657B740321@S4DE8PSAANK.mitte.t-com.de>
	<20100412234839.4a80d87b.dmitry@codeweavers.com>
	<47CC5ABB01651443A88DB8EC5B4D657B740324@S4DE8PSAANK.mitte.t-com.de>
	<20100413002721.d05aeaa9.dmitry@codeweavers.com>
	<47CC5ABB01651443A88DB8EC5B4D657B740326@S4DE8PSAANK.mitte.t-com.de>
	<20100413005850.9f261253.dmitry@codeweavers.com>
	<47CC5ABB01651443A88DB8EC5B4D657B740327@S4DE8PSAANK.mitte.t-com.de>
	<20100413130125.9f7ed39d.dmitry@codeweavers.com>
Message-ID: <o2t3a768c551004130807tea86d5c5o34296f469719238@mail.gmail.com>

Hi Dmitry,

> And another rule is that the patch which changes the behaviour of an API
> needs to have an appropriate test case which does not pass before the patch
> (i.e. has the todo_wine around it), and passes after the patch (i.e. the patch
> removes the corresponding todo_wine). Your patch doesn't qualify for that.

I think this is a good guideline, but I think Joerg justified his
approach reasonably well:  his first attempt introduced a test failure
because it caused a previously spuriously passing test to fail.  His
choices are to resubmit this patch, marking the test todo_wine along
with an explanation, and follow up with the patch that really fixes
the test, or to submit the two combined.  I think both are reasonable
if the explanation is clear enough.

The rule clearly applies when a test was not spuriously passing
before, e.g. is marked todo_wine, but in cases when the test is
spuriously passing, the "tests must always pass" rule also comes into
play.  The tests must always pass rule takes precedence, making the
tests should only ever remove a todo_wine rule impossible to meet.
--Juan


From stefandoesinger at gmx.at  Tue Apr 13 10:10:57 2010
From: stefandoesinger at gmx.at (=?iso-8859-1?Q?Stefan_D=F6singer?=)
Date: Tue, 13 Apr 2010 17:10:57 +0200
Subject: 1/3 d3d9: Add an initial ColorFill regression test.
In-Reply-To: <v2vc8485d471004121206oa6161f3dg249a80b4991276bd@mail.gmail.com>
References: <v2vc8485d471004121206oa6161f3dg249a80b4991276bd@mail.gmail.com>
Message-ID: <A38C39A6-B9D2-40DE-9F03-E89AC4AC5BE8@gmx.at>

Ideas for future tests:

* default pool textures
* default pool rendertarget textures
* default pool depth stencil textures
* managed pool textures
* default pool depthstencil surfaces

Am 12.04.2010 um 21:06 schrieb Roderick Colenbrander:

> 
> <0008-d3d9-Add-an-initial-ColorFill-regression-test.patch>



From dank at kegel.com  Tue Apr 13 10:50:14 2010
From: dank at kegel.com (Dan Kegel)
Date: Tue, 13 Apr 2010 08:50:14 -0700
Subject: Detecting patch sets
Message-ID: <t2ha71bd89a1004130850j8e54901r58c1061546b29508@mail.gmail.com>

Hi Ge,
when I was running patchwatcher, taking the number of patches
in the series helped more than it hurt.  (It's fairly frequent for
people to submit two patchsets, and fairly infrequent for the
second patchset to have the same number of patches.)
The darn interface needed babysitting, though, since
there were always malformed and/or partial series.

I think it'd be cool to have a UI where developers
could correct their detected patchsets if they don't
like what the automated extractor did.  That could
morph into a way of submitting patchsets in the
first place later on.

It'd also be cool if other tools - say, a buildbot or a patchwatcher -
could monitor the detected patchset stream
(to save them from having to maintain their own).
- Dan


From damjan.jov at gmail.com  Tue Apr 13 10:56:54 2010
From: damjan.jov at gmail.com (Damjan Jovanovic)
Date: Tue, 13 Apr 2010 17:56:54 +0200
Subject: Working on "DOS" VGA.
In-Reply-To: <901B5DC6-95A3-4C29-B0C7-0925B784D495@gmx.at>
References: <4BB456A9.7000202@tdcadsl.dk>
	<p2wc8485d471004010224p68b253ebqcedb54d6834f693c@mail.gmail.com>
	<901B5DC6-95A3-4C29-B0C7-0925B784D495@gmx.at>
Message-ID: <w2n9e89675b1004130856w88ffd477l83702de90f3b3f8c@mail.gmail.com>

On Thu, Apr 1, 2010 at 4:47 PM, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>
> Am 01.04.2010 um 11:24 schrieb Roderick Colenbrander:
>> First of all welcome to Wine. Myself I'm a bit worried about whether
>> we should improve our DOS support even further. The problem is that
>> more and more people are moving over to 64-bit Linux. While you can
>> run 32-bit programs on a 64-bit system, there is no protected mode
>> support (vm86; there is emulation in some cases using a kernel
>> module).
> There's protected mode 32 bit, protected mode 16 bit, but no vm86 16 bit. So no real mode apps in Wine. We'd need to integrate a CPU emulator or JIT compiler into Wine to get this working.
>
> There are a surprising big number of Win95 area apps that have an installer that starts off in vm86 mode...
>
>
>
>

Actually we don't need a CPU emulator for 64 bit after all. There's a
project on Sourceforge that's gotten VM86 working in 64-bit Linux:
http://v86-64.sourceforge.net/

It claims to work with Wine.

Damjan


From ggeldorp at vmware.com  Tue Apr 13 11:39:43 2010
From: ggeldorp at vmware.com (Greg Geldorp)
Date: Tue, 13 Apr 2010 09:39:43 -0700
Subject: Detecting patch sets
In-Reply-To: <t2ha71bd89a1004130850j8e54901r58c1061546b29508@mail.gmail.com>
References: <t2ha71bd89a1004130850j8e54901r58c1061546b29508@mail.gmail.com>
Message-ID: <1C77FC3365DBD149802E0F5381EBE2C9024AD5D265@EXCH-MBX-4.vmware.com>

> From: Dan Kegel
>
> when I was running patchwatcher, taking the number of patches
> in the series helped more than it hurt.  (It's fairly frequent for
> people to submit two patchsets, and fairly infrequent for the
> second patchset to have the same number of patches.)

Thanks Dan, I think we have a winner then: take the maximum patch
number into account.

> The darn interface needed babysitting, though, since
> there were always malformed and/or partial series.
>
> I think it'd be cool to have a UI where developers
> could correct their detected patchsets if they don't
> like what the automated extractor did.  That could
> morph into a way of submitting patchsets in the
> first place later on.

I tend to get distracted every now and then by things my boss wants
me to do and don't always have time for babysitting bots, which is why
I kind of like the idea of giving control to the devs, so the whole
bot doesn't break down when I'm not available.
I can certainly imagine a future where patches would be submitted
through Alexandres patch tracker and send out to wine-patches from
there, instead of the patch tracker picking up emails. But for now,
it's probably most productive for everyone to adjust to the existing
workflow.

> It'd also be cool if other tools - say, a buildbot or a patchwatcher -
> could monitor the detected patchset stream
> (to save them from having to maintain their own).

I'm always open to talk about integration.
One of the things that always kind of irked me about the Wine websites
is that each (including mine) has its own user management. I think
a central Wine LDAP server would be a good idea. I'll be adding LDAP
support to the testbot for internal VMware usage anyway.

Ge.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 4183 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100413/2c2af1ba/attachment.bin>

From sven.wine at gmail.com  Tue Apr 13 12:30:36 2010
From: sven.wine at gmail.com (Sven Baars)
Date: Tue, 13 Apr 2010 19:30:36 +0200
Subject: Detecting patch sets
In-Reply-To: <1C77FC3365DBD149802E0F5381EBE2C9024AD5D265@EXCH-MBX-4.vmware.com>
References: <t2ha71bd89a1004130850j8e54901r58c1061546b29508@mail.gmail.com>
	<1C77FC3365DBD149802E0F5381EBE2C9024AD5D265@EXCH-MBX-4.vmware.com>
Message-ID: <4BC4AA3C.40102@gmail.com>

How about this:

First check it the normal way, also taking the maximum patch number into 
account.

If a patch with a number higher than the maximum comes in that also 
changes tests, then you run the whole patchset again.

If a set is not complete after x hours after the last patch has been set 
(not the first), you either send a reminder to check it, or you just run 
the tests anyway, even with an incomplete patchset. If it fails, that 
could also be a good thing in case someone actually forgets a patch.

If there are two incomplete patchsets after x hours, and they would fit 
together perfectly, then merge them, and run the tests. If it fails, 
that means that the set(s) itself is/are invalid.

If someone sends a try 2 for a patch (with tests), run the whole set 
again (in case you weren't already doing that). This only after x hours 
or minutes, because there could be more patches coming. If it runs too 
early, or a try 3 for a different patch comes in, always use the last 
try in the next run. This shouldn't be a problem, because extra tests 
don't hurt (unless we get over 300 patches a day or something).

This would reduce work to a minimum, and shouldn't leave any patches 
behind. Also, in the time of waiting before running tests in case of 
invalid patchsets, one could still go to the UI to run them or change them.

Sven


From johan.gill at gmail.com  Tue Apr 13 13:32:35 2010
From: johan.gill at gmail.com (Johan Gill)
Date: Tue, 13 Apr 2010 20:32:35 +0200
Subject: ddraw: Do not restore the display mode from inside 
	SetCooperativeLevel
Message-ID: <p2w103c33d11004131132i85e942f0k8ea9d64c92704113@mail.gmail.com>

It seems this patch wasn't accepted yet. Are there any issues I should
know about?

Regards
Johan Gill


From julliard at winehq.org  Tue Apr 13 13:33:43 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 13 Apr 2010 20:33:43 +0200
Subject: user32: BM_SETSTATE handler needs to repaint the button including
	focus rectangle.
In-Reply-To: <20100413154901.fecab251.dmitry@codeweavers.com> (Dmitry
	Timoshkov's message of "Tue, 13 Apr 2010 15:49:01 +0900")
References: <20100413154901.fecab251.dmitry@codeweavers.com>
Message-ID: <87k4sbqk1k.fsf@wine.dyndns.org>

Dmitry Timoshkov <dmitry at codeweavers.com> writes:

> While playing with the button painting bug I noticed that the button doesn't
> repaint its focus when you hold mouse button and move it outside and then back
> to the button.

It looks to me that you should fix the push button paint routine,
instead of changing the notification type.

-- 
Alexandre Julliard
julliard at winehq.org


From testbot at testbot.winehq.org  Tue Apr 13 04:36:06 2010
From: testbot at testbot.winehq.org (testbot at testbot.winehq.org)
Date: Tue, 13 Apr 2010 11:36:06 +0200
Subject: [5/5] msi: Move application of substorage transforms out of
	msi_parse_patch_summary. 
Message-ID: <201004130936.o3D9a6wQ032102@v1.gse.nl>

Hi,

While running your changed tests on Windows, I think I found new failures.
Being a bot and all I'm not very good at pattern recognition, so I might be
wrong, but could you please double-check?
Full results can be found at
http://testbot.winehq.nl/JobDetails.pl?Key=1407

Your paranoid android.


=== W7PROX64 (Windows 7 Professional 64 bit) ===
install.c:4613: Test failed: Expected ERROR_SUCCESS, got 2
install.c:4616: Test failed: Expected ERROR_SUCCESS, got 6
install.c:4636: Test failed: Key doesn't exist or wrong type
install.c:4637: Test failed: Key doesn't exist or wrong type
install.c:4639: Test failed: Key doesn't exist or wrong type
install.c:4640: Test failed: Key doesn't exist or wrong type
install.c:4643: Test failed: Key doesn't exist or wrong type
install.c:4652: Test failed: Expected ERROR_SUCCESS, got 6
install.c:4661: Test failed: Expected ERROR_SUCCESS, got 2
install.c:4663: Test failed: Key doesn't exist or wrong type
install.c:4712: Test failed: Expected ERROR_SUCCESS, got 2
install.c:4715: Test failed: Expected ERROR_SUCCESS, got 6
install.c:4735: Test failed: Key doesn't exist or wrong type
install.c:4736: Test failed: Key doesn't exist or wrong type
install.c:4738: Test failed: Key doesn't exist or wrong type
install.c:4739: Test failed: Key doesn't exist or wrong type
install.c:4742: Test failed: Key doesn't exist or wrong type
install.c:4751: Test failed: Expected ERROR_SUCCESS, got 6
install.c:4760: Test failed: Expected ERROR_SUCCESS, got 2
install.c:4762: Test failed: Key doesn't exist or wrong type
install.c:5047: Test failed: Expected ERROR_SUCCESS, got 2
install.c:5049: Test failed: Key doesn't exist or wrong type
install.c:5050: Test failed: Key doesn't exist or wrong type
install.c:5082: Test failed: Expected ERROR_SUCCESS, got 2
install.c:5084: Test failed: Key doesn't exist or wrong type
install.c:5085: Test failed: Key doesn't exist or wrong type
install.c:5191: Test failed: Expected ERROR_SUCCESS, got 2
install.c:5193: Test failed: Key doesn't exist or wrong type
install.c:5194: Test failed: Key doesn't exist or wrong type
install.c:5195: Test failed: Key doesn't exist or wrong type
install.c:5212: Test failed: Expected ERROR_SUCCESS, got 2
install.c:5214: Test failed: Key doesn't exist or wrong type
install.c:5215: Test failed: Key doesn't exist or wrong type
install.c:5216: Test failed: Key doesn't exist or wrong type
install.c:5269: Test failed: Expected ERROR_SUCCESS, got 2
install.c:5274: Test failed: Expected ERROR_SUCCESS, got 6
install.c:5279: Test failed: Expected "C:\Program Files (x86)\msitest\maximus", got "Software\Microsoft\Windows\CurrentVersion\Installer\UserData\S-1-5-18\Products\84A88FD7F6998CE40A22FB59F6B9C2BB\InstallProperties"
install.c:5292: Test failed: Expected ERROR_SUCCESS, got 2
install.c:5297: Test failed: Expected ERROR_SUCCESS, got 6
install.c:5298: Test failed: Expected "01\msitest\augustus", got "Software\Microsoft\Windows\CurrentVersion\Installer\UserData\S-1-5-18\Products\84A88FD7F6998CE40A22FB59F6B9C2BB\InstallProperties"
install.c:5317: Test failed: Expected ERROR_SUCCESS, got 2
install.c:5322: Test failed: Expected ERROR_SUCCESS, got 6
install.c:5323: Test failed: Expected "C:\Program Files (x86)\msitest\maximus", got "Software\Microsoft\Windows\CurrentVersion\Installer\UserData\S-1-5-18\Products\84A88FD7F6998CE40A22FB59F6B9C2BB\InstallProperties"
install.c:5336: Test failed: Expected ERROR_SUCCESS, got 2
install.c:5341: Test failed: Expected ERROR_SUCCESS, got 6
install.c:5342: Test failed: Expected "01\msitest\augustus", got "Software\Microsoft\Windows\CurrentVersion\Installer\UserData\S-1-5-18\Products\84A88FD7F6998CE40A22FB59F6B9C2BB\InstallProperties"
install.c:5390: Test failed: Expected INSTALLSTATE_UNKNOWN, got 2
install.c:5400: Test failed: Expected ERROR_UNKNOWN_PRODUCT, got 0
install.c:5401: Test failed: Expected INSTALLSTATE_UNKNOWN, got 3
install.c:5413: Test failed: Expected INSTALLSTATE_UNKNOWN, got 2
install.c:5423: Test failed: Expected ERROR_UNKNOWN_PRODUCT, got 0
install.c:5424: Test failed: Expected INSTALLSTATE_UNKNOWN, got 3
install.c:5446: Test failed: Expected ERROR_UNKNOWN_COMPONENT, got 0
install.c:5447: Test failed: Expected INSTALLSTATE_UNKNOWN, got 3
install.c:5487: Test failed: Expected INSTALLSTATE_UNKNOWN, got 2
install.c:5501: Test failed: Expected ERROR_FILE_NOT_FOUND, got 0
install.c:5550: Test failed: Expected 12 or -12, got 24
install.c:5562: Test failed: Expected INSTALLSTATE_UNKNOWN, got 2
install.c:5576: Test failed: Expected ERROR_FILE_NOT_FOUND, got 0
install.c:5625: Test failed: Expected 12 or -12, got 36
install.c:5677: Test failed: Expected 12 or -12, got 36
install.c:5729: Test failed: Expected 12 or -20, got 36
install.c:5741: Test failed: Expected INSTALLSTATE_UNKNOWN, got 2
install.c:5755: Test failed: Expected ERROR_FILE_NOT_FOUND, got 0
install.c:5804: Test failed: Expected 12 or -12, got 48
install.c:5816: Test failed: Expected INSTALLSTATE_UNKNOWN, got 2
install.c:5830: Test failed: Expected ERROR_FILE_NOT_FOUND, got 0
install.c:7455: Test failed: Expected ERROR_SUCCESS, got 2
install.c:7459: Test failed: Expected ERROR_SUCCESS, got 6
install.c:7465: Test failed: Expected ERROR_INSTALL_SOURCE_ABSENT, got 0
install.c:7467: Test failed: File not installed
install.c:7468: Test failed: File not installed
install.c:7469: Test failed: File not installed
install.c:7470: Test failed: File not installed
install.c:7479: Test failed: Expected ERROR_SUCCESS, got 1605
install.c:7498: Test failed: Expected ERROR_SUCCESS, got 2
install.c:7502: Test failed: Expected ERROR_SUCCESS, got 6
install.c:7524: Test failed: Expected ERROR_INSTALL_SOURCE_ABSENT, got 0
install.c:7526: Test failed: File not installed
install.c:7527: Test failed: File not installed
install.c:7528: Test failed: File not installed
install.c:7529: Test failed: File not installed
install.c:7534: Test failed: Expected ERROR_SUCCESS, got 1018
install.c:7540: Test failed: Expected ERROR_SUCCESS, got 1605

=== W7PROX64 (Windows 7 Professional 64 bit) ===
install.c:3378: Test failed: File not installed
install.c:3379: Test failed: File not installed
install.c:3380: Test failed: File not installed
install.c:3381: Test failed: File not installed
install.c:3382: Test failed: File not installed
install.c:3385: Test failed: Expected ERROR_SUCCESS, got 2
install.c:3390: Test failed: Expected ERROR_SUCCESS, got 6
install.c:3391: Test failed: Expected imaname, got 
install.c:3396: Test failed: Expected ERROR_FILE_NOT_FOUND, got 6
install.c:3401: Test failed: Expected ERROR_SUCCESS, got 6
install.c:3402: Test failed: Expected 314, got 2047
install.c:3407: Test failed: Expected ERROR_SUCCESS, got 6
install.c:3408: Test failed: Expected OrderTestValue, got 
install.c:3425: Test failed: File not installed
install.c:3426: Test failed: File not installed
install.c:3427: Test failed: File not installed
install.c:3428: Test failed: File not installed
install.c:3429: Test failed: File not installed
install.c:3432: Test failed: Expected ERROR_SUCCESS, got 2
install.c:3448: Test failed: File not installed
install.c:3449: Test failed: File not installed
install.c:3450: Test failed: File not installed
install.c:3451: Test failed: File not installed
install.c:3452: Test failed: File not installed
install.c:3455: Test failed: Expected ERROR_SUCCESS, got 2
install.c:3471: Test failed: File not installed
install.c:3472: Test failed: File not installed
install.c:3473: Test failed: File not installed
install.c:3474: Test failed: File not installed
install.c:3475: Test failed: File not installed
install.c:3478: Test failed: Expected ERROR_SUCCESS, got 2
install.c:3494: Test failed: File not installed
install.c:3495: Test failed: File not installed
install.c:3496: Test failed: File not installed
install.c:3497: Test failed: File not installed
install.c:3498: Test failed: File not installed
install.c:3501: Test failed: Expected ERROR_SUCCESS, got 2
install.c:3517: Test failed: File not installed
install.c:3518: Test failed: File not installed
install.c:3519: Test failed: File not installed
install.c:3520: Test failed: File not installed
install.c:3521: Test failed: File not installed
install.c:3539: Test failed: File not installed
install.c:3540: Test failed: File not installed
install.c:3541: Test failed: File not installed
install.c:3542: Test failed: File not installed
install.c:3543: Test failed: File not installed
install.c:3561: Test failed: File not installed
install.c:3562: Test failed: File not installed
install.c:3563: Test failed: File not installed
install.c:3564: Test failed: File not installed
install.c:3565: Test failed: File not installed
install.c:3583: Test failed: File not installed
install.c:3584: Test failed: File not installed
install.c:3585: Test failed: File not installed
install.c:3586: Test failed: File not installed
install.c:3587: Test failed: File not installed
install.c:3605: Test failed: File not installed
install.c:3606: Test failed: File not installed
install.c:3607: Test failed: File not installed
install.c:3608: Test failed: File not installed
install.c:3609: Test failed: File not installed
install.c:3788: Test failed: File not installed
install.c:3789: Test failed: File not installed
install.c:3790: Test failed: File not installed
install.c:3791: Test failed: File not installed
install.c:3804: Test failed: File not installed
install.c:3806: Test failed: File not installed
install.c:3807: Test failed: File not installed
install.c:3808: Test failed: File not installed
install.c:3832: Test failed: Expected ERROR_INSTALL_FAILURE, got 0
install.c:3864: Test failed: Expected ERROR_INSTALL_FAILURE, got 0
install.c:3914: Test failed: File not installed
install.c:3915: Test failed: File not installed
install.c:3916: Test failed: File not installed
install.c:3917: Test failed: File not installed
install.c:3941: Test failed: File not installed
install.c:3942: Test failed: File not installed
install.c:3943: Test failed: File not installed
install.c:3944: Test failed: File not installed
install.c:3965: Test failed: File not installed
install.c:3966: Test failed: File not installed
install.c:3967: Test failed: File not installed
install.c:4016: Test failed: Expected file to be overwritten
install.c:4017: Test failed: File not installed
install.c:4018: Test failed: File not installed
install.c:4064: Test failed: Expected file to be overwritten, got ''
install.c:4065: Test failed: File not installed
install.c:4066: Test failed: File not installed
install.c:4251: Test failed: File not installed
install.c:4252: Test failed: File not installed
install.c:4280: Test failed: File not installed
install.c:4281: Test failed: File not installed
install.c:4282: Test failed: File not installed
install.c:4283: Test failed: File not installed
install.c:4284: Test failed: File not installed
install.c:4318: Test failed: File not installed
install.c:4319: Test failed: File not installed
install.c:4325: Test failed: File not installed
install.c:4327: Test failed: File not installed
install.c:4364: Test failed: File not installed
install.c:4365: Test failed: File not installed
install.c:4572: Test failed: File not installed
install.c:4573: Test failed: File not installed
install.c:4579: Test failed: Expected ERROR_SUCCESS, got 2
install.c:4598: Test failed: Key doesn't exist or wrong type
install.c:4599: Test failed: Key doesn't exist or wrong type
install.c:4601: Test failed: Key doesn't exist or wrong type
install.c:4602: Test failed: Key doesn't exist or wrong type
install.c:4605: Test failed: Key doesn't exist or wrong type
install.c:4671: Test failed: File not installed
install.c:4672: Test failed: File not installed
install.c:4678: Test failed: Expected ERROR_SUCCESS, got 2
install.c:4697: Test failed: Key doesn't exist or wrong type
install.c:4698: Test failed: Key doesn't exist or wrong type
install.c:4700: Test failed: Key doesn't exist or wrong type
install.c:4701: Test failed: Key doesn't exist or wrong type
install.c:4704: Test failed: Key doesn't exist or wrong type
install.c:4813: Test failed: File not installed
install.c:4814: Test failed: File not installed
install.c:4911: Test failed: File not installed
install.c:4912: Test failed: File not installed
install.c:5025: Test failed: File not installed
install.c:5026: Test failed: File not installed
install.c:5060: Test failed: File not installed
install.c:5061: Test failed: File not installed
install.c:5185: Test failed: File not installed
install.c:5186: Test failed: File not installed
install.c:5206: Test failed: File not installed
install.c:5207: Test failed: File not installed
install.c:5263: Test failed: File not installed
install.c:5264: Test failed: File not installed
install.c:5279: Test failed: Expected "C:\Program Files\msitest\maximus", got "C:\Program Files (x86)\msitest\maximus"
install.c:5311: Test failed: File not installed
install.c:5312: Test failed: File not installed
install.c:5323: Test failed: Expected "C:\Program Files\msitest\maximus", got "C:\Program Files (x86)\msitest\maximus"
install.c:5450: Test failed: Expected ERROR_SUCCESS, got 2
install.c:5469: Test failed: Key doesn't exist or wrong type
install.c:5470: Test failed: Key doesn't exist or wrong type
install.c:5472: Test failed: Key doesn't exist or wrong type
install.c:5473: Test failed: Key doesn't exist or wrong type
install.c:5476: Test failed: Key doesn't exist or wrong type
install.c:5524: Test failed: Expected ERROR_SUCCESS, got 2
install.c:5543: Test failed: Key doesn't exist or wrong type
install.c:5544: Test failed: Key doesn't exist or wrong type
install.c:5546: Test failed: Key doesn't exist or wrong type
install.c:5547: Test failed: Key doesn't exist or wrong type
install.c:5550: Test failed: Key doesn't exist or wrong type
install.c:5558: Test failed: File not deleted
install.c:5559: Test failed: Directory not deleted
install.c:5599: Test failed: Expected ERROR_SUCCESS, got 2
install.c:5618: Test failed: Key doesn't exist or wrong type
install.c:5619: Test failed: Key doesn't exist or wrong type
install.c:5621: Test failed: Key doesn't exist or wrong type
install.c:5622: Test failed: Key doesn't exist or wrong type
install.c:5625: Test failed: Key doesn't exist or wrong type
install.c:5651: Test failed: Expected ERROR_SUCCESS, got 2
install.c:5670: Test failed: Key doesn't exist or wrong type
install.c:5671: Test failed: Key doesn't exist or wrong type
install.c:5673: Test failed: Key doesn't exist or wrong type
install.c:5674: Test failed: Key doesn't exist or wrong type
install.c:5677: Test failed: Key doesn't exist or wrong type
install.c:5703: Test failed: Expected ERROR_SUCCESS, got 2
install.c:5722: Test failed: Key doesn't exist or wrong type
install.c:5723: Test failed: Key doesn't exist or wrong type
install.c:5725: Test failed: Key doesn't exist or wrong type
install.c:5726: Test failed: Key doesn't exist or wrong type
install.c:5729: Test failed: Key doesn't exist or wrong type
install.c:5737: Test failed: File not deleted
install.c:5738: Test failed: Directory not deleted
install.c:5778: Test failed: Expected ERROR_SUCCESS, got 2
install.c:5797: Test failed: Key doesn't exist or wrong type
install.c:5798: Test failed: Key doesn't exist or wrong type
install.c:5800: Test failed: Key doesn't exist or wrong type
install.c:5801: Test failed: Key doesn't exist or wrong type
install.c:5804: Test failed: Key doesn't exist or wrong type
install.c:5812: Test failed: File not deleted
install.c:5813: Test failed: Directory not deleted
install.c:5864: Test failed: File not installed
install.c:5865: Test failed: File not installed
install.c:5886: Test failed: File not installed
install.c:5887: Test failed: File not installed
install.c:5908: Test failed: File not installed
install.c:5909: Test failed: File not installed
install.c:5930: Test failed: File not installed
install.c:5931: Test failed: File not installed
install.c:5952: Test failed: File not installed
install.c:5953: Test failed: File not installed
install.c:6219: Test failed: File not installed
install.c:6220: Test failed: File not installed
install.c:6258: Test failed: File not installed
install.c:6259: Test failed: File not installed
install.c:6275: Test failed: File not installed
install.c:6276: Test failed: File not installed
install.c:6392: Test failed: File installed
install.c:6393: Test failed: File installed
install.c:6431: Test failed: File not installed
install.c:6433: Test failed: File not installed
install.c:6434: Test failed: File not installed
install.c:6440: Test failed: File deleted
install.c:6441: Test failed: File deleted
install.c:6457: Test failed: File not deleted
install.c:6460: Test failed: File deleted
install.c:6479: Test failed: File not installed
install.c:6480: Test failed: File not deleted
install.c:6486: Test failed: File not deleted
install.c:6487: Test failed: File not deleted
install.c:6488: Test failed: File not deleted
install.c:6501: Test failed: File not deleted
install.c:6503: Test failed: File deleted
install.c:6507: Test failed: File not deleted
install.c:6508: Test failed: File not deleted
install.c:6510: Test failed: File not deleted
install.c:6511: Test failed: File not deleted
install.c:6518: Test failed: File not installed
install.c:6520: Test failed: File not installed
install.c:6528: Test failed: Directory not deleted
install.c:6584: Test failed: File not installed
install.c:6586: Test failed: File not copied
install.c:6587: Test failed: File not moved
install.c:6591: Test failed: File not moved
install.c:6594: Test failed: File not moved
install.c:6597: Test failed: File not moved
install.c:6600: Test failed: File not moved
install.c:6603: Test failed: File not moved
install.c:6609: Test failed: File not moved
install.c:6612: Test failed: File not moved
install.c:6613: Test failed: File not moved
install.c:6615: Test failed: File not moved
install.c:6616: Test failed: File not moved
install.c:6618: Test failed: File not installed
install.c:6715: Test failed: File not installed
install.c:6716: Test failed: File not duplicated
install.c:6717: Test failed: File not duplicated
install.c:6718: Test failed: File not duplicated
install.c:6719: Test failed: File not duplicated
install.c:6720: Test failed: File not duplicated
install.c:6721: Test failed: File not installed
install.c:6745: Test failed: File installed
install.c:6746: Test failed: File installed
install.c:6749: Test failed: Expected ERROR_SUCCESS, got 2
install.c:6755: Test failed: Expected ERROR_SUCCESS, got 6
install.c:6756: Test failed: Wrong multi-sz data
install.c:6757: Test failed: Expected 15, got 260
install.c:6780: Test failed: Expected ERROR_INSTALL_FAILURE, got 0
install.c:6816: Test failed: File installed
install.c:6817: Test failed: File installed
install.c:6848: Test failed: File not installed
install.c:6850: Test failed: File not installed
install.c:6851: Test failed: File not installed
install.c:6860: Test failed: File not installed
install.c:6866: Test failed: File not installed
install.c:6869: Test failed: File not installed
install.c:6870: Test failed: File not installed
install.c:6872: Test failed: File not installed
install.c:6876: Test failed: File not installed
install.c:6880: Test failed: File not installed
install.c:6883: Test failed: File not installed
install.c:6886: Test failed: File not installed
install.c:6892: Test failed: File not installed
install.c:7371: Test failed: File not installed
install.c:7372: Test failed: File not installed
install.c:7373: Test failed: File not installed
install.c:7374: Test failed: File not installed
install.c:7396: Test failed: File not installed
install.c:7397: Test failed: File not installed
install.c:7398: Test failed: File not installed
install.c:7399: Test failed: File not installed
install.c:7421: Test failed: File not installed
install.c:7422: Test failed: File not installed
install.c:7423: Test failed: File not installed
install.c:7424: Test failed: File not installed
install.c:7443: Test failed: File not installed
install.c:7444: Test failed: File not installed
install.c:7445: Test failed: File not installed
install.c:7446: Test failed: File not installed
install.c:7467: Test failed: File not installed
install.c:7468: Test failed: File not installed
install.c:7469: Test failed: File not installed
install.c:7470: Test failed: File not installed
install.c:7488: Test failed: File not installed
install.c:7489: Test failed: File not installed
install.c:7490: Test failed: File not installed
install.c:7491: Test failed: File not installed
install.c:7526: Test failed: File not installed
install.c:7527: Test failed: File not installed
install.c:7528: Test failed: File not installed
install.c:7529: Test failed: File not installed
install.c:7571: Test failed: File not installed
install.c:7572: Test failed: File not installed
install.c:7573: Test failed: File not installed
install.c:7575: Test failed: File not installed
install.c:7607: Test failed: File installed
install.c:7608: Test failed: File installed
install.c:7621: Test failed: File installed
install.c:7622: Test failed: File installed
install.c:7661: Test failed: File not installed
install.c:7662: Test failed: File not installed
install.c:7663: Test failed: File not installed
install.c:7664: Test failed: File not installed
install.c:7665: Test failed: File not installed
install.c:7695: Test failed: File not installed
install.c:7696: Test failed: File not installed
install.c:7937: Test failed: File not installed
install.c:7948: Test failed: File not installed
install.c:7951: Test failed: File not installed
install.c:7952: Test failed: File not installed
install.c:7954: Test failed: File not installed
install.c:7955: Test failed: File not installed
install.c:7982: Test failed: File not installed
install.c:7985: Test failed: File not installed
install.c:7986: Test failed: File not installed
install.c:7987: Test failed: File installed
install.c:7988: Test failed: File not installed
install.c:7989: Test failed: File not installed
install.c:8234: Test failed: Expected ERROR_SUCCESS_REBOOT_REQUIRED got 0
install.c:8132: Test failed: RegQueryValueExA failed 2 (0)
install.c:8173: Test failed: Expected a 'msitest' entry
install.c:8194: Test failed: Expected file to match
install.c:8285: Test failed: Expected ERROR_SUCCESS_REBOOT_REQUIRED got 0
install.c:8173: Test failed: Expected a 'msitest' entry
install.c:8194: Test failed: Expected file to match
install.c:8014: Test failed: File not installed
install.c:8017: Test failed: File not installed
install.c:8018: Test failed: File not installed
install.c:8019: Test failed: File installed
install.c:8020: Test failed: File not installed
install.c:8021: Test failed: File not installed
install.c:8041: Test failed: File not installed
install.c:8044: Test failed: File not installed
install.c:8045: Test failed: File not installed
install.c:8046: Test failed: File installed
install.c:8047: Test failed: File not installed
install.c:8048: Test failed: File not installed
install.c:8068: Test failed: File not installed
install.c:8071: Test failed: File not installed
install.c:8072: Test failed: File not installed
install.c:8073: Test failed: File installed
install.c:8074: Test failed: File not installed
install.c:8075: Test failed: File not installed
install.c:8401: Test failed: File not installed
install.c:8403: Test failed: File not installed
install.c:8547: Test failed: File not installed
install.c:8548: Test failed: Directory not created
install.c:8549: Test failed: File not installed
install.c:8550: Test failed: Directory not created
install.c:8552: Test failed: Directory not created
install.c:8553: Test failed: File not installed
install.c:8554: Test failed: Directory not created
install.c:8555: Test failed: File not installed
install.c:8556: Test failed: File not installed
install.c:8557: Test failed: File not installed
install.c:8558: Test failed: Directory not created
install.c:8589: Test failed: File not installed
install.c:8590: Test failed: Directory not created
install.c:8591: Test failed: File not installed
install.c:8592: Test failed: Directory not created
install.c:8594: Test failed: Directory not created
install.c:8595: Test failed: File not installed
install.c:8596: Test failed: Directory not created
install.c:8597: Test failed: File not installed
install.c:8598: Test failed: File not installed
install.c:8599: Test failed: File not installed
install.c:8600: Test failed: Directory not created
install.c:8617: Test failed: File not installed
install.c:8618: Test failed: Directory not created
install.c:8619: Test failed: File not installed
install.c:8620: Test failed: Directory not created
install.c:8622: Test failed: Directory not created
install.c:8623: Test failed: File not installed
install.c:8624: Test failed: Directory not created
install.c:8625: Test failed: File not installed
install.c:8626: Test failed: File not installed
install.c:8627: Test failed: File not installed
install.c:8628: Test failed: Directory not created
install.c:8692: Test failed: File not installed
install.c:8693: Test failed: Directory not created
install.c:8694: Test failed: File not installed
install.c:8695: Test failed: Directory not created
install.c:8697: Test failed: Directory not created
install.c:8698: Test failed: File not installed
install.c:8699: Test failed: Directory not created
install.c:8700: Test failed: File not installed
install.c:8701: Test failed: File not installed
install.c:8702: Test failed: File not installed
install.c:8703: Test failed: Directory not created
install.c:8725: Test failed: file not created
install.c:8726: Test failed: file not created
install.c:8727: Test failed: file not created
install.c:8728: Test failed: file not created
install.c:8729: Test failed: file not created
install.c:8788: Test failed: file not created
install.c:8789: Test failed: file not created
install.c:8855: Test failed: file not created
install.c:8856: Test failed: file not created
install.c:8858: Test failed: file not created
install.c:8864: Test failed: file removed
install.c:8869: Test failed: directory removed
install.c:8916: Test failed: key not removed
install.c:8926: Test failed: key not removed
install.c:8937: Test failed: key not removed
install.c:9011: Test failed: got 6 expected 0
install.c:9017: Test failed: got 6 expected 0
install.c:9020: Test failed: got 6 expected 0
install.c:9022: Test failed: file removed
install.c:9167: Test failed: key not created


From hverbeet at gmail.com  Tue Apr 13 15:04:34 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Tue, 13 Apr 2010 22:04:34 +0200
Subject: [5/5] msi: Move application of substorage transforms out of 
	msi_parse_patch_summary.
In-Reply-To: <201004130936.o3D9a6wQ032102@v1.gse.nl>
References: <201004130936.o3D9a6wQ032102@v1.gse.nl>
Message-ID: <g2kd658b69e1004131304xa43621bcr3f597d61b782bce2@mail.gmail.com>

On 13 April 2010 11:36, Marvin <testbot at testbot.winehq.org> wrote:
> While running your changed tests on Windows, I think I found new failures.
> Being a bot and all I'm not very good at pattern recognition, so I might be
> wrong, but could you please double-check?
> Full results can be found at
> http://testbot.winehq.nl/JobDetails.pl?Key=1407
>
That should probably be winehq.org.


From ggeldorp at vmware.com  Tue Apr 13 15:10:08 2010
From: ggeldorp at vmware.com (Greg Geldorp)
Date: Tue, 13 Apr 2010 13:10:08 -0700
Subject: [5/5] msi: Move application of substorage transforms out of
	msi_parse_patch_summary.
In-Reply-To: <g2kd658b69e1004131304xa43621bcr3f597d61b782bce2@mail.gmail.com>
References: <201004130936.o3D9a6wQ032102@v1.gse.nl>
	<g2kd658b69e1004131304xa43621bcr3f597d61b782bce2@mail.gmail.com>
Message-ID: <1C77FC3365DBD149802E0F5381EBE2C9024AD5D3B7@EXCH-MBX-4.vmware.com>

> From: Henri Verbeet
>
> On 13 April 2010 11:36, Marvin <testbot at testbot.winehq.org> wrote:
> > While running your changed tests on Windows, I think I found new failures.
> > Being a bot and all I'm not very good at pattern recognition, so I might be
> > wrong, but could you please double-check?
> > Full results can be found at
> > http://testbot.winehq.nl/JobDetails.pl?Key=1407
> >
> That should probably be winehq.org.

Indeed. Thanks, fixed.
Also, I wouldn't pay much attention to the msi test results, it's one of the few DLLs where testing doesn't produce consistent results.

Ge.

From hans at codeweavers.com  Tue Apr 13 15:21:18 2010
From: hans at codeweavers.com (Hans Leidekker)
Date: Tue, 13 Apr 2010 22:21:18 +0200
Subject: [5/5] msi: Move application of substorage transforms out of
	msi_parse_patch_summary.
In-Reply-To: <1C77FC3365DBD149802E0F5381EBE2C9024AD5D3B7@EXCH-MBX-4.vmware.com>
References: <201004130936.o3D9a6wQ032102@v1.gse.nl>
	<g2kd658b69e1004131304xa43621bcr3f597d61b782bce2@mail.gmail.com>
	<1C77FC3365DBD149802E0F5381EBE2C9024AD5D3B7@EXCH-MBX-4.vmware.com>
Message-ID: <1271190078.2153.65.camel@t400>

On Tue, 2010-04-13 at 13:10 -0700, Greg Geldorp wrote:
> > From: Henri Verbeet
> >
> > On 13 April 2010 11:36, Marvin <testbot at testbot.winehq.org> wrote:
> > > While running your changed tests on Windows, I think I found new failures.
> > > Being a bot and all I'm not very good at pattern recognition, so I might be
> > > wrong, but could you please double-check?
> > > Full results can be found at
> > > http://testbot.winehq.nl/JobDetails.pl?Key=1407
> > >
> > That should probably be winehq.org.
> 
> Indeed. Thanks, fixed.
> Also, I wouldn't pay much attention to the msi test results, it's one of the few DLLs where testing doesn't produce consistent results.

Yep, looks like a false positive. I see no new failures on 64-bit
Windows:

http://test.winehq.org/data/72d9aaa6e5ffbd449c025b982b5761fee38977e6/win7_wtb-w7prox64-32/msi:install.html
http://test.winehq.org/data/e35f54ef1f6775b6cbf2707450b1930d540d1e12/win7_wtb-w7prox64-32/msi:install.html




From stefandoesinger at gmx.at  Tue Apr 13 16:13:25 2010
From: stefandoesinger at gmx.at (=?iso-8859-1?Q?Stefan_D=F6singer?=)
Date: Tue, 13 Apr 2010 23:13:25 +0200
Subject: [PATCH 3/5] wined3d: Disable strict draw ordering by default.
In-Reply-To: <1271184388-23096-3-git-send-email-hverbeet@codeweavers.com>
References: <1271184388-23096-3-git-send-email-hverbeet@codeweavers.com>
Message-ID: <A01DF8F1-B72B-468D-9C58-BCBB9A6657CB@gmx.at>


Am 13.04.2010 um 20:46 schrieb Henri Verbeet:
> +    if (wined3d_settings.strict_draw_ordering) wglFlush(); /* Flush to ensure ordering across contexts. */
I'd prefer to have this in an (inline) function.

From hverbeet at gmail.com  Tue Apr 13 16:51:00 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Tue, 13 Apr 2010 23:51:00 +0200
Subject: [PATCH 3/5] wined3d: Disable strict draw ordering by default.
In-Reply-To: <A01DF8F1-B72B-468D-9C58-BCBB9A6657CB@gmx.at>
References: <1271184388-23096-3-git-send-email-hverbeet@codeweavers.com>
	<A01DF8F1-B72B-468D-9C58-BCBB9A6657CB@gmx.at>
Message-ID: <x2ld658b69e1004131451se615b2fdne773c5d57f62bf20@mail.gmail.com>

On 13 April 2010 23:13, Stefan D?singer <stefandoesinger at gmx.at> wrote:
> Am 13.04.2010 um 20:46 schrieb Henri Verbeet:
>> + ? ?if (wined3d_settings.strict_draw_ordering) wglFlush(); /* Flush to ensure ordering across contexts. */
> I'd prefer to have this in an (inline) function.
>
I'm not sure I see how that's going to make things better.


From testbot at testbot.winehq.org  Tue Apr 13 17:27:27 2010
From: testbot at testbot.winehq.org (testbot at testbot.winehq.org)
Date: Wed, 14 Apr 2010 00:27:27 +0200
Subject: [1/1] wcmd/tests: Attrib tests (resend) 
Message-ID: <201004132227.o3DMRRPI019657@v1.gse.nl>

Hi,

While running your changed tests on Windows, I think I found new failures.
Being a bot and all I'm not very good at pattern recognition, so I might be
wrong, but could you please double-check?
Full results can be found at
http://testbot.winehq.org/JobDetails.pl?Key=1423

Your paranoid android.


=== WINEBUILD (Wine build VM) ===
Make failed


From dmitry at codeweavers.com  Tue Apr 13 22:34:47 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Wed, 14 Apr 2010 12:34:47 +0900
Subject: user32: BM_SETSTATE handler needs to repaint the button
	including focus rectangle.
In-Reply-To: <87k4sbqk1k.fsf@wine.dyndns.org>
References: <20100413154901.fecab251.dmitry@codeweavers.com>
	<87k4sbqk1k.fsf@wine.dyndns.org>
Message-ID: <20100414123447.5da26383.dmitry@codeweavers.com>

Alexandre Julliard <julliard at winehq.org> wrote:

> > While playing with the button painting bug I noticed that the button doesn't
> > repaint its focus when you hold mouse button and move it outside and then back
> > to the button.
> 
> It looks to me that you should fix the push button paint routine,
> instead of changing the notification type.

Do you mean that the push button paint proc should be changed to paint focus rect
in the case of ODA_SELECT as well as ODA_DRAWENTIRE? I didn't want to do that because
all button painting procs have similar logic for drawing the focus, and it seemed
safe enough to change ODA_SELECT to ODA_DRAWENTIRE in the BM_SETSTATE handler.
I see now that UB_Paint relies on ODA_SELECT, and perhaps ODA_SELECT should be
passed to BS_USERBUTTON, and ODA_DRAWENTIRE to everyone else for BM_SETSTATE.

-- 
Dmitry.


From luis.busquets at ilidium.com  Tue Apr 13 23:35:14 2010
From: luis.busquets at ilidium.com (Luis Busquets)
Date: Wed, 14 Apr 2010 06:35:14 +0200
Subject: Future implementation
Message-ID: <4BC54602.5090003@ilidium.com>

Could someone please confirm the following points?:

1. Sound system. The configuration that wine will implement is:
winmm --> WASAPI --> OpenAL
and
DirectSound --> OpenAL
After that is done wineoss, winejack, winealsa, ... will be removed from 
the tree.

2. Integration of DosBOX or other emulator. How this will be done? Is 
the plan to use them when wine detects that the programme is compiled 
for real mode? Does that mean that the sake of wine is to provide 
compatibility only for applications built to be run on protected mode?

3. Direct3D10 and Direct3D11, Is there a target date for them?


From shacklein at gmail.com  Tue Apr 13 23:45:24 2010
From: shacklein at gmail.com (Ben Klein)
Date: Wed, 14 Apr 2010 14:45:24 +1000
Subject: Future implementation
In-Reply-To: <4BC54602.5090003@ilidium.com>
References: <4BC54602.5090003@ilidium.com>
Message-ID: <j2nd7e40be31004132145j1513e89atc394c4c3b3bd83e4@mail.gmail.com>

On 14 April 2010 14:35, Luis Busquets <luis.busquets at ilidium.com> wrote:
> Could someone please confirm the following points?:
>
> 1. Sound system. The configuration that wine will implement is:
> winmm --> WASAPI --> OpenAL
> and
> DirectSound --> OpenAL
> After that is done wineoss, winejack, winealsa, ... will be removed from the
> tree.

I can't speak for the Developers That Matter (TM), but I don't think
there is any plan to remove wineoss, winejack and winealsa from the
tree completely. I think it's more likely that wineopenal will be
available (probably as default in the long term) as an alternative.

> 2. Integration of DosBOX or other emulator. How this will be done? Is the
> plan to use them when wine detects that the programme is compiled for real
> mode? Does that mean that the sake of wine is to provide compatibility only
> for applications built to be run on protected mode?

I certainly haven't heard of any plans to include an emulator in Wine.

> 3. Direct3D10 and Direct3D11, Is there a target date for them?

Work has already begun, but Wine as a project generally does not set
target dates for any feature support.


From twickline at gmail.com  Wed Apr 14 01:46:02 2010
From: twickline at gmail.com (Tom Wickline)
Date: Wed, 14 Apr 2010 14:46:02 +0800
Subject: Future implementation
In-Reply-To: <4BC54602.5090003@ilidium.com>
References: <4BC54602.5090003@ilidium.com>
Message-ID: <m2u53e3a9931004132346h972135cfq4743469dd1f179cf@mail.gmail.com>

On Wed, Apr 14, 2010 at 12:35 PM, Luis Busquets
<luis.busquets at ilidium.com> wrote:
> Could someone please confirm the following points?:
>
> 1. Sound system. The configuration that wine will implement is:
> winmm --> WASAPI --> OpenAL
> and
> DirectSound --> OpenAL
> After that is done wineoss, winejack, winealsa, ... will be removed from the
> tree.
>

Wine also runs on BSD and OpenSolaris, so if OSS was removed it would kill
sound support on these platforms.

Tom


From xixsimplicityxix at gmail.com  Wed Apr 14 01:52:40 2010
From: xixsimplicityxix at gmail.com (John Klehm)
Date: Wed, 14 Apr 2010 01:52:40 -0500
Subject: Future implementation
In-Reply-To: <m2u53e3a9931004132346h972135cfq4743469dd1f179cf@mail.gmail.com>
References: <4BC54602.5090003@ilidium.com>
	<m2u53e3a9931004132346h972135cfq4743469dd1f179cf@mail.gmail.com>
Message-ID: <m2p78a7dad01004132352rbc5bd27bv679f86fffd3d9549@mail.gmail.com>

On Wed, Apr 14, 2010 at 1:46 AM, Tom Wickline <twickline at gmail.com> wrote:
>
> Wine also runs on BSD and OpenSolaris, so if OSS was removed it would kill
> sound support on these platforms.
>

Doesn't openal support bsd and solaris too?
http://connect.creativelabs.com/openal/OpenAL%20Wiki/Platforms.aspx

--John Klehm


From austinenglish at gmail.com  Wed Apr 14 02:25:10 2010
From: austinenglish at gmail.com (Austin English)
Date: Wed, 14 Apr 2010 02:25:10 -0500
Subject: Future implementation
In-Reply-To: <m2p78a7dad01004132352rbc5bd27bv679f86fffd3d9549@mail.gmail.com>
References: <4BC54602.5090003@ilidium.com>
	<m2u53e3a9931004132346h972135cfq4743469dd1f179cf@mail.gmail.com>
	<m2p78a7dad01004132352rbc5bd27bv679f86fffd3d9549@mail.gmail.com>
Message-ID: <u2qb6bb06271004140025rc8549ca1g875b60f9e1af4a6@mail.gmail.com>

On Wed, Apr 14, 2010 at 1:52 AM, John Klehm <xixsimplicityxix at gmail.com> wrote:
> On Wed, Apr 14, 2010 at 1:46 AM, Tom Wickline <twickline at gmail.com> wrote:
>>
>> Wine also runs on BSD and OpenSolaris, so if OSS was removed it would kill
>> sound support on these platforms.
>>
>
> Doesn't openal support bsd and solaris too?
> http://connect.creativelabs.com/openal/OpenAL%20Wiki/Platforms.aspx

Yes, but in their current ports (last I checked), the version is not
new enough for wine to support.

-- 
-Austin


From damjan.jov at gmail.com  Wed Apr 14 02:54:43 2010
From: damjan.jov at gmail.com (Damjan Jovanovic)
Date: Wed, 14 Apr 2010 09:54:43 +0200
Subject: Future implementation
In-Reply-To: <4BC54602.5090003@ilidium.com>
References: <4BC54602.5090003@ilidium.com>
Message-ID: <q2o9e89675b1004140054w68bcfac5ma59e6ebc7d8582e0@mail.gmail.com>

On Wed, Apr 14, 2010 at 6:35 AM, Luis Busquets
<luis.busquets at ilidium.com> wrote:
> Could someone please confirm the following points?:
>

> 2. Integration of DosBOX or other emulator. How this will be done? Is the
> plan to use them when wine detects that the programme is compiled for real
> mode? Does that mean that the sake of wine is to provide compatibility only
> for applications built to be run on protected mode?
>

Just yesterday (http://www.winehq.org/pipermail/wine-devel/2010-April/082983.html)
I wrote that we don't need emulation even on 64-bit since we can still
get into virtual 8086 mode using the http://v86-64.sourceforge.net
project.

In any case, a real mode DOS application can still switch into
protected mode, and a 16-bit protected mode Windows 3.1 application
can still call into DOS, so there's no escape from DOS in Wine :-).

Damjan


From mstefani at redhat.com  Wed Apr 14 04:08:13 2010
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Wed, 14 Apr 2010 11:08:13 +0200
Subject: Future implementation
In-Reply-To: <q2o9e89675b1004140054w68bcfac5ma59e6ebc7d8582e0@mail.gmail.com>
References: <4BC54602.5090003@ilidium.com>
	<q2o9e89675b1004140054w68bcfac5ma59e6ebc7d8582e0@mail.gmail.com>
Message-ID: <4BC585FD.7040706@redhat.com>

Damjan Jovanovic wrote:
> On Wed, Apr 14, 2010 at 6:35 AM, Luis Busquets
> <luis.busquets at ilidium.com> wrote:
>> Could someone please confirm the following points?:
>>
> 
>> 2. Integration of DosBOX or other emulator. How this will be done? Is the
>> plan to use them when wine detects that the programme is compiled for real
>> mode? Does that mean that the sake of wine is to provide compatibility only
>> for applications built to be run on protected mode?
>>
> 
> Just yesterday (http://www.winehq.org/pipermail/wine-devel/2010-April/082983.html)
> I wrote that we don't need emulation even on 64-bit since we can still
> get into virtual 8086 mode using the http://v86-64.sourceforge.net
> project.
And yesterday ;) I wanted to reply that Wine cannot rely on that
feature. That stuff is a kernel patch in the early stage. Provided that
Linus is willing to accept that feature it is at least 2 kernel versions
out; I see it earliest in 2.6.36 aka 1 year from now. And it will take
another 6-12 month until that feature is generally available in Linux
distributions. Also the non-Linux OSes would need to provide a similar
functionality too.

> In any case, a real mode DOS application can still switch into
> protected mode, and a 16-bit protected mode Windows 3.1 application
> can still call into DOS, so there's no escape from DOS in Wine :-).
16bit Windows applications do run in Wine on a 64bit OS without any need
for VM86.

bye
	michael


From florian at fkoeberle.de  Wed Apr 14 04:08:50 2010
From: florian at fkoeberle.de (=?ISO-8859-1?Q?Florian_K=F6berle?=)
Date: Wed, 14 Apr 2010 11:08:50 +0200
Subject: [PATCH 5/5] winex11.drv: Allow OpenGL on minimized windows.
In-Reply-To: <1271015269-27050-5-git-send-email-hverbeet@codeweavers.com>
References: <1271015269-27050-5-git-send-email-hverbeet@codeweavers.com>
Message-ID: <4BC58622.9030205@fkoeberle.de>

Hello Henri,

your patch fixes bug 12611:
http://bugs.winehq.org/show_bug.cgi?id=12611

Thanks for your great work!

You have worked on quite a few bugs I have voted for. Would be buying
Crossover Games (again) the correct way to support your work?

Best regards,
Florian


From stefandoesinger at gmx.at  Wed Apr 14 04:52:56 2010
From: stefandoesinger at gmx.at (=?iso-8859-1?Q?Stefan_D=F6singer?=)
Date: Wed, 14 Apr 2010 11:52:56 +0200
Subject: [PATCH 3/5] wined3d: Disable strict draw ordering by default.
In-Reply-To: <x2ld658b69e1004131451se615b2fdne773c5d57f62bf20@mail.gmail.com>
References: <1271184388-23096-3-git-send-email-hverbeet@codeweavers.com>
	<A01DF8F1-B72B-468D-9C58-BCBB9A6657CB@gmx.at>
	<x2ld658b69e1004131451se615b2fdne773c5d57f62bf20@mail.gmail.com>
Message-ID: <4A36385A-5A58-40F9-AE7A-53ED7A18EFE3@gmx.at>


Am 13.04.2010 um 23:51 schrieb Henri Verbeet:

> On 13 April 2010 23:13, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>> Am 13.04.2010 um 20:46 schrieb Henri Verbeet:
>>> +    if (wined3d_settings.strict_draw_ordering) wglFlush(); /* Flush to ensure ordering across contexts. */
>> I'd prefer to have this in an (inline) function.
>> 
> I'm not sure I see how that's going to make things better.
Well, mostly to have the sync conditions and the way we sync in a single place. That'll make it easier to use more suited GL methods to order draws, e.g. sharing one context across multiple threads on OSX.



From hverbeet at gmail.com  Wed Apr 14 05:16:57 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Wed, 14 Apr 2010 12:16:57 +0200
Subject: [PATCH 3/5] wined3d: Disable strict draw ordering by default.
In-Reply-To: <4A36385A-5A58-40F9-AE7A-53ED7A18EFE3@gmx.at>
References: <1271184388-23096-3-git-send-email-hverbeet@codeweavers.com>
	<A01DF8F1-B72B-468D-9C58-BCBB9A6657CB@gmx.at>
	<x2ld658b69e1004131451se615b2fdne773c5d57f62bf20@mail.gmail.com>
	<4A36385A-5A58-40F9-AE7A-53ED7A18EFE3@gmx.at>
Message-ID: <q2ud658b69e1004140316h8b6f2737odafca1e3590a8c65@mail.gmail.com>

On 14 April 2010 11:52, Stefan D?singer <stefandoesinger at gmx.at> wrote:
> Am 13.04.2010 um 23:51 schrieb Henri Verbeet:
>> I'm not sure I see how that's going to make things better.
> Well, mostly to have the sync conditions and the way we sync in a single place. That'll make it easier to use more suited GL methods to order draws, e.g. sharing one context across multiple threads on OSX.
>

Maybe, although I'm not at all convinced we want to go there. However,
making a function out of that line isn't going to work very well when
you've got both
> +    if (wined3d_settings.strict_draw_ordering) wglFlush(); /* Flush to ensure ordering across
and
> +        if (wined3d_settings.strict_draw_ordering || (dstSwapchain
> +                && ((IWineD3DSurface *)This == dstSwapchain->frontBuffer
> +                || dstSwapchain->num_contexts > 1)))
> +            wglFlush(); /* Flush to ensure ordering across contexts. */

Perhaps those should be the same, but that's way past the goal of this
patch, all it's trying to do is to ensure there are no regressions
compared to before ce42470138a4805dce509a1fa806c8880530f324. I also
don't think that e.g. the num_contexts check is very helpful, because
at that point you've already got two contexts, but didn't flush for
any potential previous draws. This patch simply isn't trying to fix
those things.

Feel free to work on trying to fix that, but I think it's more useful
to work on a more structural solution.


From hverbeet at gmail.com  Wed Apr 14 05:26:54 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Wed, 14 Apr 2010 12:26:54 +0200
Subject: [PATCH 5/5] winex11.drv: Allow OpenGL on minimized windows.
In-Reply-To: <4BC58622.9030205@fkoeberle.de>
References: <1271015269-27050-5-git-send-email-hverbeet@codeweavers.com>
	<4BC58622.9030205@fkoeberle.de>
Message-ID: <i2yd658b69e1004140326v61311f1ucd7728f909bc63fd@mail.gmail.com>

On 14 April 2010 11:08, Florian K?berle <florian at fkoeberle.de> wrote:
> You have worked on quite a few bugs I have voted for. Would be buying
> Crossover Games (again) the correct way to support your work?
>
In principle, yes. Though in all fairness it should also be noted that
Wine is the work of many people, not all of them employed by
CodeWeavers, not all of them developers, and we build on each other's
work.


From tijnema at gmail.com  Wed Apr 14 06:08:48 2010
From: tijnema at gmail.com (Matijn Woudt)
Date: Wed, 14 Apr 2010 13:08:48 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
Message-ID: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>

Hi,

I'm about to implement the HLSL compiler, but I want to make sure I'm
taking the right direction.
For the compiler:
preprocessor(wpp)->hlslparser/compiler(lex/bison)->bytecode
writer(same as for the shader assembler).
Now the question is where to implement the compiler. It can be called
from at least 3 places, d3dx9_xx, d3d10_xx and d3dcompiler_xx.
It seems to me that d3dx9_xx and d3d10_xx are forwarding their calls
to d3dcompiler_xx.
My proposal is:
1) Create the d3dcompiler_xx.dll structure in wine. Is it legal to use
a program like dll export viewer to get the exported functions for
each dll?
2) Move the assembler to d3dcompiler_xx.dll and forward calls from
d3dx9. This is needed because the assembler and compiler can share the
same bytecode writer this way.
3) Implement the compiler in d3dcompiler_xx.

Regards,

Matijn


From hverbeet at gmail.com  Wed Apr 14 06:24:26 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Wed, 14 Apr 2010 13:24:26 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
Message-ID: <o2hd658b69e1004140424y3a787bcbo84015d816fd4bb55@mail.gmail.com>

On 14 April 2010 13:08, Matijn Woudt <tijnema at gmail.com> wrote:
> Hi,
>
> I'm about to implement the HLSL compiler, but I want to make sure I'm
> taking the right direction.
> For the compiler:
> preprocessor(wpp)->hlslparser/compiler(lex/bison)->bytecode
> writer(same as for the shader assembler).
> Now the question is where to implement the compiler. It can be called
> from at least 3 places, d3dx9_xx, d3d10_xx and d3dcompiler_xx.
> It seems to me that d3dx9_xx and d3d10_xx are forwarding their calls
> to d3dcompiler_xx.

In earlier d3dx9 versions the compiler was part of d3dx9, but at some
point Microsoft introduced d3dcompiler. I think it makes sense to
switch to the same scheme in Wine. Note that d3dcompiler is (somewhat)
documented at http://msdn.microsoft.com/en-us/library/dd607340%28v=VS.85%29.aspx


From paul.vriens.wine at gmail.com  Wed Apr 14 06:41:57 2010
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 14 Apr 2010 13:41:57 +0200
Subject: [PATCH 09/16] Replaced mycomputer.ico with a Tango compliant icon
In-Reply-To: <1271192376.7595.9.camel@joel-desktop>
References: <1271192376.7595.9.camel@joel-desktop>
Message-ID: <4BC5AA05.6030006@gmail.com>

On 04/13/2010 10:59 PM, Joel Holdsworth wrote:
> Signed-off-by: Joel Holdsworth<joel at airwebreathe.org.uk>
> ---
>   dlls/shell32/mycomputer.ico |  Bin 15086 ->  25214 bytes
>   dlls/shell32/mycomputer.svg | 2400 ++++++++++++++++++++++++++-----------------
>   2 files changed, 1477 insertions(+), 923 deletions(-)
>
>
>
>
>
>
Hi Joel,

I think this has been mentioned before, but the monitor icons (32-bit 
and 8-bit for size 32) show a wider lower half of the monitor compared 
to the upper half (I think the 32-bit size 22 as well).

-- 
Cheers,

Paul.


From paul.vriens.wine at gmail.com  Wed Apr 14 06:50:49 2010
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 14 Apr 2010 13:50:49 +0200
Subject: [PATCH 09/16] Replaced mycomputer.ico with a Tango compliant icon
In-Reply-To: <4BC5AA05.6030006@gmail.com>
References: <1271192376.7595.9.camel@joel-desktop> <4BC5AA05.6030006@gmail.com>
Message-ID: <4BC5AC19.6080601@gmail.com>

On 04/14/2010 01:41 PM, Paul Vriens wrote:
> On 04/13/2010 10:59 PM, Joel Holdsworth wrote:
>> Signed-off-by: Joel Holdsworth<joel at airwebreathe.org.uk>
>> ---
>> dlls/shell32/mycomputer.ico | Bin 15086 -> 25214 bytes
>> dlls/shell32/mycomputer.svg | 2400
>> ++++++++++++++++++++++++++-----------------
>> 2 files changed, 1477 insertions(+), 923 deletions(-)
>>
>>
>>
>>
>>
>>
> Hi Joel,
>
> I think this has been mentioned before, but the monitor icons (32-bit
> and 8-bit for size 32) show a wider lower half of the monitor compared

sorry that should have been size 48x48

> to the upper half (I think the 32-bit size 22 as well).

and size 32x32.

-- 
Cheers,

Paul.


From joel at airwebreathe.org.uk  Wed Apr 14 07:04:33 2010
From: joel at airwebreathe.org.uk (Joel Holdsworth)
Date: Wed, 14 Apr 2010 13:04:33 +0100 (BST)
Subject: [PATCH 09/16] Replaced mycomputer.ico with a Tango compliant icon
In-Reply-To: <4BC5AA05.6030006@gmail.com>
References: <1271192376.7595.9.camel@joel-desktop> <4BC5AA05.6030006@gmail.com>
Message-ID: <1272148240.677408.1271246673465.JavaMail.open-xchange@oxltgw03.schlund.de>




> Hi Joel,
>
> I think this has been mentioned before, but the monitor icons (32-bit
> and 8-bit for size 32) show a wider lower half of the monitor compared
> to the upper half (I think the 32-bit size 22 as well).
>??
I've heard feedback about the screen colour before, which I've resolved. Never
any queries about the shape of the screen. The reason it's slightly wider at the
top to the bottom is that it is drawn in perspective, which is how the screen is
drawn in the Tango base set. I believe only The 48px-32bit and 48px-8bit have
this.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100414/6201defa/attachment.htm>

From paul.vriens.wine at gmail.com  Wed Apr 14 07:10:27 2010
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 14 Apr 2010 14:10:27 +0200
Subject: [PATCH 09/16] Replaced mycomputer.ico with a Tango compliant icon
In-Reply-To: <1272148240.677408.1271246673465.JavaMail.open-xchange@oxltgw03.schlund.de>
References: <1271192376.7595.9.camel@joel-desktop> <4BC5AA05.6030006@gmail.com>
	<1272148240.677408.1271246673465.JavaMail.open-xchange@oxltgw03.schlund.de>
Message-ID: <4BC5B0B3.5020306@gmail.com>

On 04/14/2010 02:04 PM, Joel Holdsworth wrote:
>
>
>
>  > Hi Joel,
>  >
>  > I think this has been mentioned before, but the monitor icons (32-bit
>  > and 8-bit for size 32) show a wider lower half of the monitor compared
>  > to the upper half (I think the 32-bit size 22 as well).
>  >
>
> I've heard feedback about the screen colour before, which I've resolved.
> Never any queries about the shape of the screen. The reason it's

I digged a bit and found:

http://www.winehq.org/pipermail/wine-devel/2009-November/079938.html

> slightly wider at the top to the bottom is that it is drawn in
> perspective, which is how the screen is drawn in the Tango base set. I
> believe only The 48px-32bit and 48px-8bit have this.

I let others judge whether this is ok, it's just something I noticed.

-- 
Cheers,

Paul.


From sven.wine at gmail.com  Wed Apr 14 07:16:37 2010
From: sven.wine at gmail.com (Sven Baars)
Date: Wed, 14 Apr 2010 14:16:37 +0200
Subject: [PATCH 09/16] Replaced mycomputer.ico with a Tango compliant icon
In-Reply-To: <1272148240.677408.1271246673465.JavaMail.open-xchange@oxltgw03.schlund.de>
References: <1271192376.7595.9.camel@joel-desktop> <4BC5AA05.6030006@gmail.com>
	<1272148240.677408.1271246673465.JavaMail.open-xchange@oxltgw03.schlund.de>
Message-ID: <4BC5B225.4040004@gmail.com>

Joel Holdsworth wrote:
>
>
> > Hi Joel,
> >
> > I think this has been mentioned before, but the monitor icons (32-bit
> > and 8-bit for size 32) show a wider lower half of the monitor compared
> > to the upper half (I think the 32-bit size 22 as well).
> > 
>
>  
>
> I've heard feedback about the screen colour before, which I've 
> resolved. Never any queries about the shape of the screen. The reason 
> it's slightly wider at the top to the bottom is that it is drawn in 
> perspective, which is how the screen is drawn in the Tango base set. I 
> believe only The 48px-32bit and 48px-8bit have this.
>
> ------------------------------------------------------------------------
>
>
>   
Especially the 8-bit version does look a bit weird though.

Oh, and while you're at it: the certerror.bmp and smallicons.bmp still 
use the no entrance sign instead of the cross from oic_hand.ico. IIRC 
people found this confusing or something.


From stefandoesinger at gmx.at  Wed Apr 14 08:07:10 2010
From: stefandoesinger at gmx.at (=?iso-8859-1?Q?Stefan_D=F6singer?=)
Date: Wed, 14 Apr 2010 15:07:10 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
Message-ID: <6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>


Am 14.04.2010 um 13:08 schrieb Matijn Woudt:
> 2) Move the assembler to d3dcompiler_xx.dll and forward calls from
> d3dx9. This is needed because the assembler and compiler can share the
> same bytecode writer this way.
When Mattheo implemented the assembler in the gsoc project we decided to put the assembler into d3dx9 because we assumed MS implements it there as well, and there are no assembler specific exports in d3dcompiler.dll. Using wine-internal exports is generally a bad idea and should only be used if there are clear advantages. (It e.g. makes it impossible to use the native d3dcompiler.dll with builtin d3dx9)

Before moving the assembler into d3dcompiler.dll we have to be sure that sharing the bytecode writer is possible and is worth the problems it introduces.

> 3) Implement the compiler in d3dcompiler_xx.
I wrote a basic HLSL compiler as university project in 2008, this is where part of the assembler code came from. Do you have the sources, do you need them?



From tijnema at gmail.com  Wed Apr 14 08:31:16 2010
From: tijnema at gmail.com (Matijn Woudt)
Date: Wed, 14 Apr 2010 15:31:16 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
Message-ID: <s2zd8269d911004140631z3b3bc641ue45e93548e66337c@mail.gmail.com>

On Wed, Apr 14, 2010 at 3:07 PM, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>
> Am 14.04.2010 um 13:08 schrieb Matijn Woudt:
>> 2) Move the assembler to d3dcompiler_xx.dll and forward calls from
>> d3dx9. This is needed because the assembler and compiler can share the
>> same bytecode writer this way.
> When Mattheo implemented the assembler in the gsoc project we decided to put the assembler into d3dx9 because we assumed MS implements it there as well, and there are no assembler specific exports in d3dcompiler.dll. Using wine-internal exports is generally a bad idea and should only be used if there are clear advantages. (It e.g. makes it impossible to use the native d3dcompiler.dll with builtin d3dx9)

In the last two versions of d3dcompiler (41 & 42), there's an
undocumented export D3DAssemble, which makes me assume that MS has
moved the Assembler there too. We can define D3DAssemble just like
D3DXAssembleShader for now, and once Microsoft documents this function
(or defines in d3dcompiler.h), we can adjust the definition if needed.

>
> Before moving the assembler into d3dcompiler.dll we have to be sure that sharing the bytecode writer is possible and is worth the problems it introduces.

I'm not sure why sharing the bytecode writer wouldn't be possible. If
the shader assembler is moved along, there shouldn't be problems (or
am I missing something?).

>
>> 3) Implement the compiler in d3dcompiler_xx.
> I wrote a basic HLSL compiler as university project in 2008, this is where part of the assembler code came from. Do you have the sources, do you need them?
>
>

Matteo told me about it, and he was going to send your code to me
after he checked if it was ok with you. But if you can send them to me
directly, that's fine too, of course.


From hverbeet at gmail.com  Wed Apr 14 08:44:42 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Wed, 14 Apr 2010 15:44:42 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
Message-ID: <l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>

On 14 April 2010 15:07, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>> 3) Implement the compiler in d3dcompiler_xx.
> I wrote a basic HLSL compiler as university project in 2008, this is where part of the assembler code came from. Do you have the sources, do you need them?
>
Quite frankly, I also believe that's where some of the issues in the
early versions of those assembler patches came from. I don't know if
that compiler has seen any work since 2008, but I'd be careful with
taking it as too much of an example.


From stefandoesinger at gmx.at  Wed Apr 14 09:27:03 2010
From: stefandoesinger at gmx.at (=?iso-8859-1?Q?Stefan_D=F6singer?=)
Date: Wed, 14 Apr 2010 16:27:03 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
Message-ID: <3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>


Am 14.04.2010 um 15:44 schrieb Henri Verbeet:

> On 14 April 2010 15:07, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>>> 3) Implement the compiler in d3dcompiler_xx.
>> I wrote a basic HLSL compiler as university project in 2008, this is where part of the assembler code came from. Do you have the sources, do you need them?
>> 
> Quite frankly, I also believe that's where some of the issues in the
> early versions of those assembler patches came from. I don't know if
> that compiler has seen any work since 2008, but I'd be careful with
> taking it as too much of an example.
Yep, I recommend using Mattheo's code if possible. He has rebased my old code and fixed a bunch of issues. Beyond that, my compiler is fairly minimalistic. I think it supports most features except arrays(needs loop unrolling support). However, the optimizer is fairly simplistic. For better optimizations you may want to investigate SSA transformations and related stuff. I guess perfect optimization isn't a requirement for a first version though.

Just in case my git tree is here: http://84.112.174.163/~stefan/wine/ . It's not online all the time, and I am not guaranted a fixed IP(although it hasn't changed in years), so check it out as long as you can if you need it.

From tijnema at gmail.com  Wed Apr 14 09:38:55 2010
From: tijnema at gmail.com (Matijn Woudt)
Date: Wed, 14 Apr 2010 16:38:55 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
Message-ID: <z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>

On Wed, Apr 14, 2010 at 4:27 PM, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>
> Am 14.04.2010 um 15:44 schrieb Henri Verbeet:
>
>> On 14 April 2010 15:07, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>>>> 3) Implement the compiler in d3dcompiler_xx.
>>> I wrote a basic HLSL compiler as university project in 2008, this is where part of the assembler code came from. Do you have the sources, do you need them?
>>>
>> Quite frankly, I also believe that's where some of the issues in the
>> early versions of those assembler patches came from. I don't know if
>> that compiler has seen any work since 2008, but I'd be careful with
>> taking it as too much of an example.
> Yep, I recommend using Mattheo's code if possible. He has rebased my old code and fixed a bunch of issues. Beyond that, my compiler is fairly minimalistic. I think it supports most features except arrays(needs loop unrolling support). However, the optimizer is fairly simplistic. For better optimizations you may want to investigate SSA transformations and related stuff. I guess perfect optimization isn't a requirement for a first version though.

First thing would probably be cleaning up and getting something minimal past AJ.

>
> Just in case my git tree is here: http://84.112.174.163/~stefan/wine/ . It's not online all the time, and I am not guaranted a fixed IP(although it hasn't changed in years), so check it out as long as you can if you need it.
>

Am I supposed to find your compiler code there? It seems like a git
tree of ages ago (where d3dx9_36 only contains math and font code).


From thunderbird2k at gmail.com  Wed Apr 14 09:51:38 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Wed, 14 Apr 2010 16:51:38 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
Message-ID: <m2xc8485d471004140751jd90d1c08hbe7bf0c5d2f9ff9a@mail.gmail.com>

On Wed, Apr 14, 2010 at 4:38 PM, Matijn Woudt <tijnema at gmail.com> wrote:
> On Wed, Apr 14, 2010 at 4:27 PM, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>>
>> Am 14.04.2010 um 15:44 schrieb Henri Verbeet:
>>
>>> On 14 April 2010 15:07, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>>>>> 3) Implement the compiler in d3dcompiler_xx.
>>>> I wrote a basic HLSL compiler as university project in 2008, this is where part of the assembler code came from. Do you have the sources, do you need them?
>>>>
>>> Quite frankly, I also believe that's where some of the issues in the
>>> early versions of those assembler patches came from. I don't know if
>>> that compiler has seen any work since 2008, but I'd be careful with
>>> taking it as too much of an example.
>> Yep, I recommend using Mattheo's code if possible. He has rebased my old code and fixed a bunch of issues. Beyond that, my compiler is fairly minimalistic. I think it supports most features except arrays(needs loop unrolling support). However, the optimizer is fairly simplistic. For better optimizations you may want to investigate SSA transformations and related stuff. I guess perfect optimization isn't a requirement for a first version though.
>
> First thing would probably be cleaning up and getting something minimal past AJ.
>
>>
>> Just in case my git tree is here: http://84.112.174.163/~stefan/wine/ . It's not online all the time, and I am not guaranted a fixed IP(although it hasn't changed in years), so check it out as long as you can if you need it.
>>
>
> Am I supposed to find your compiler code there? It seems like a git
> tree of ages ago (where d3dx9_36 only contains math and font code).
>
>
>

It might also make sense to explore whether compilers like LLVM (used
a lot these days including for OpenCL implementations by Apple,
Nvidia; and don't forget Gallium3D) and Open64 (used in Cuda) and
others.

Roderick


From tijnema at gmail.com  Wed Apr 14 10:19:24 2010
From: tijnema at gmail.com (Matijn Woudt)
Date: Wed, 14 Apr 2010 17:19:24 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <m2xc8485d471004140751jd90d1c08hbe7bf0c5d2f9ff9a@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
	<m2xc8485d471004140751jd90d1c08hbe7bf0c5d2f9ff9a@mail.gmail.com>
Message-ID: <i2ld8269d911004140819nd4922168ua0763014b9abc20c@mail.gmail.com>

On Wed, Apr 14, 2010 at 4:51 PM, Roderick Colenbrander
<thunderbird2k at gmail.com> wrote:
> On Wed, Apr 14, 2010 at 4:38 PM, Matijn Woudt <tijnema at gmail.com> wrote:
>> On Wed, Apr 14, 2010 at 4:27 PM, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>>>
>>> Am 14.04.2010 um 15:44 schrieb Henri Verbeet:
>>>
>>>> On 14 April 2010 15:07, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>>>>>> 3) Implement the compiler in d3dcompiler_xx.
>>>>> I wrote a basic HLSL compiler as university project in 2008, this is where part of the assembler code came from. Do you have the sources, do you need them?
>>>>>
>>>> Quite frankly, I also believe that's where some of the issues in the
>>>> early versions of those assembler patches came from. I don't know if
>>>> that compiler has seen any work since 2008, but I'd be careful with
>>>> taking it as too much of an example.
>>> Yep, I recommend using Mattheo's code if possible. He has rebased my old code and fixed a bunch of issues. Beyond that, my compiler is fairly minimalistic. I think it supports most features except arrays(needs loop unrolling support). However, the optimizer is fairly simplistic. For better optimizations you may want to investigate SSA transformations and related stuff. I guess perfect optimization isn't a requirement for a first version though.
>>
>> First thing would probably be cleaning up and getting something minimal past AJ.
>>
>>>
>>> Just in case my git tree is here: http://84.112.174.163/~stefan/wine/ . It's not online all the time, and I am not guaranted a fixed IP(although it hasn't changed in years), so check it out as long as you can if you need it.
>>>
>>
>> Am I supposed to find your compiler code there? It seems like a git
>> tree of ages ago (where d3dx9_36 only contains math and font code).
>>
>>
>>
>
> It might also make sense to explore whether compilers like LLVM (used
> a lot these days including for OpenCL implementations by Apple,
> Nvidia; and don't forget Gallium3D) and Open64 (used in Cuda) and
> others.
>
> Roderick
>

I have thought about using LLVM, but I don't like it because of:
1) Having another wine dependency (~40MB for me on ubuntu)
2) Code generated by LLVM will most likely not generated exactly the
same bytecode as native compiler does, even though the shader has same
effect on both. This makes it really hard to verify the HLSL compiler
is working. My idea was to make wine's hlsl compiler produce exactly
the same bytecode as native does. We might even find bugs in the
native compiler, and either fix or duplicate these bugs.

LLVM might be useful if we needed a really fast compiler, but native
compiler isn't really fast AFAIK. Once games are calling it a few
hundred times it might be worth the effort.


From julliard at winehq.org  Wed Apr 14 10:19:41 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 14 Apr 2010 17:19:41 +0200
Subject: configure: when compiling with CLANG, set -std=gnu89
In-Reply-To: <r2lb6bb06271004131200gc9e93e05z523430264437ffc2@mail.gmail.com>
	(Austin English's message of "Tue, 13 Apr 2010 14:00:38 -0500")
References: <r2lb6bb06271004131200gc9e93e05z523430264437ffc2@mail.gmail.com>
Message-ID: <87ochmoycy.fsf@wine.dyndns.org>

Austin English <austinenglish at gmail.com> writes:

> Clang defaults to compiling in C99 mode, which breaks the compile.

Of course the compile should be fixed instead.

-- 
Alexandre Julliard
julliard at winehq.org


From thunderbird2k at gmail.com  Wed Apr 14 10:44:14 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Wed, 14 Apr 2010 17:44:14 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <i2ld8269d911004140819nd4922168ua0763014b9abc20c@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
	<m2xc8485d471004140751jd90d1c08hbe7bf0c5d2f9ff9a@mail.gmail.com>
	<i2ld8269d911004140819nd4922168ua0763014b9abc20c@mail.gmail.com>
Message-ID: <k2tc8485d471004140844m97be6d4y2b514ebcbd1cba33@mail.gmail.com>

On Wed, Apr 14, 2010 at 5:19 PM, Matijn Woudt <tijnema at gmail.com> wrote:
> On Wed, Apr 14, 2010 at 4:51 PM, Roderick Colenbrander
> <thunderbird2k at gmail.com> wrote:
>> On Wed, Apr 14, 2010 at 4:38 PM, Matijn Woudt <tijnema at gmail.com> wrote:
>>> On Wed, Apr 14, 2010 at 4:27 PM, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>>>>
>>>> Am 14.04.2010 um 15:44 schrieb Henri Verbeet:
>>>>
>>>>> On 14 April 2010 15:07, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>>>>>>> 3) Implement the compiler in d3dcompiler_xx.
>>>>>> I wrote a basic HLSL compiler as university project in 2008, this is where part of the assembler code came from. Do you have the sources, do you need them?
>>>>>>
>>>>> Quite frankly, I also believe that's where some of the issues in the
>>>>> early versions of those assembler patches came from. I don't know if
>>>>> that compiler has seen any work since 2008, but I'd be careful with
>>>>> taking it as too much of an example.
>>>> Yep, I recommend using Mattheo's code if possible. He has rebased my old code and fixed a bunch of issues. Beyond that, my compiler is fairly minimalistic. I think it supports most features except arrays(needs loop unrolling support). However, the optimizer is fairly simplistic. For better optimizations you may want to investigate SSA transformations and related stuff. I guess perfect optimization isn't a requirement for a first version though.
>>>
>>> First thing would probably be cleaning up and getting something minimal past AJ.
>>>
>>>>
>>>> Just in case my git tree is here: http://84.112.174.163/~stefan/wine/ . It's not online all the time, and I am not guaranted a fixed IP(although it hasn't changed in years), so check it out as long as you can if you need it.
>>>>
>>>
>>> Am I supposed to find your compiler code there? It seems like a git
>>> tree of ages ago (where d3dx9_36 only contains math and font code).
>>>
>>>
>>>
>>
>> It might also make sense to explore whether compilers like LLVM (used
>> a lot these days including for OpenCL implementations by Apple,
>> Nvidia; and don't forget Gallium3D) and Open64 (used in Cuda) and
>> others.
>>
>> Roderick
>>
>
> I have thought about using LLVM, but I don't like it because of:
> 1) Having another wine dependency (~40MB for me on ubuntu)

I agree that an extra dependency should be avoided if possible.
Remember that if we use some generic framework (if it makes sense)
they would do a lot of hard work for us (especially optimizations
later on). Further other projects might want to help as well (there is
some XNA project for mono which wants a HLSL but there are likely
others as well). The 40MB is not a big deal, disk space is really
cheap these days.

> 2) Code generated by LLVM will most likely not generated exactly the
> same bytecode as native compiler does, even though the shader has same
> effect on both. This makes it really hard to verify the HLSL compiler
> is working. My idea was to make wine's hlsl compiler produce exactly
> the same bytecode as native does. We might even find bugs in the
> native compiler, and either fix or duplicate these bugs.

I don't know much details about the HLSL compiler but I think this is
nearly impossible. I wouldn't be surprised if Microsoft has added more
and more tweaks to each new revision of the HLSL compiler, so creating
100% the same code is hard. I think we need very strict d3dx9 test
cases which don't necessarily check the bytecode (in simple cases you
can) but which check whether the shader when fed with data works
correctly.

> LLVM might be useful if we needed a really fast compiler, but native
> compiler isn't really fast AFAIK. Once games are calling it a few
> hundred times it might be worth the effort.

My main worry is that in the end if we use a compiler framework
(remember we don't have a lot of manpower for this) I think it would
reduce in more efficient shaders and it prevents some reinventing of
the wheel.

Roderick


From jacek at codeweavers.com  Wed Apr 14 10:51:17 2010
From: jacek at codeweavers.com (Jacek Caban)
Date: Wed, 14 Apr 2010 17:51:17 +0200
Subject: [PATCH] urlmon/tests: CoInternetCreateSecurityManager not present
	on	W95B
In-Reply-To: <1271195390-3906-1-git-send-email-wine.dev@web.de>
References: <1271195390-3906-1-git-send-email-wine.dev@web.de>
Message-ID: <4BC5E475.30803@codeweavers.com>

On 4/13/10 11:49 PM, Detlef Riekenberg wrote:
> ---
>   dlls/urlmon/tests/sec_mgr.c |   17 ++++++++++++-----
>   1 files changed, 12 insertions(+), 5 deletions(-)
>
> diff --git a/dlls/urlmon/tests/sec_mgr.c b/dlls/urlmon/tests/sec_mgr.c
> index e758115..8e39301 100644
> --- a/dlls/urlmon/tests/sec_mgr.c
> +++ b/dlls/urlmon/tests/sec_mgr.c
> @@ -107,8 +107,10 @@ static void test_SecurityManager(void)
>       DWORD zone, size, policy;
>       HRESULT hres;
>
> -    hres = CoInternetCreateSecurityManager(NULL,&secmgr, 0);
> -    ok(hres == S_OK, "CoInternetCreateSecurityManager failed: %08x\n", hres);
> +    hres = CoCreateInstance(&CLSID_InternetSecurityManager, NULL, CLSCTX_INPROC_SERVER,
> +&IID_IInternetSecurityManager, (void **)&secmgr);
> +
> +    ok(hres == S_OK, "CoCreateInstance for IInternetSecurityManager failed: %08x\n", hres);
>       if(FAILED(hres))
>           return;
>    

You're changing what we test here. If you only want to fix tests on 
win98 it's a nice excuse to skip tests. If you want to test 
CLSID_InternetSecurityManager anyway, you should test both 
CLSID_InternetSecurityManager  and CoInternetCreateSecurityManager. Same 
for zone manager patch.

Jacek


From matteo.mystral at gmail.com  Wed Apr 14 10:59:36 2010
From: matteo.mystral at gmail.com (Matteo Bruni)
Date: Wed, 14 Apr 2010 17:59:36 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
Message-ID: <o2h4bfd6eb11004140859zffabae9fy73a0a66d6b4e7f0e@mail.gmail.com>

2010/4/14 Matijn Woudt <tijnema at gmail.com>:
> On Wed, Apr 14, 2010 at 4:27 PM, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>>
>> Am 14.04.2010 um 15:44 schrieb Henri Verbeet:
>>
>>> On 14 April 2010 15:07, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>>>>> 3) Implement the compiler in d3dcompiler_xx.
>>>> I wrote a basic HLSL compiler as university project in 2008, this is where part of the assembler code came from. Do you have the sources, do you need them?
>>>>
>>> Quite frankly, I also believe that's where some of the issues in the
>>> early versions of those assembler patches came from. I don't know if
>>> that compiler has seen any work since 2008, but I'd be careful with
>>> taking it as too much of an example.
>> Yep, I recommend using Mattheo's code if possible. He has rebased my old code and fixed a bunch of issues. Beyond that, my compiler is fairly minimalistic. I think it supports most features except arrays(needs loop unrolling support). However, the optimizer is fairly simplistic. For better optimizations you may want to investigate SSA transformations and related stuff. I guess perfect optimization isn't a requirement for a first version though.
>
> First thing would probably be cleaning up and getting something minimal past AJ.
>
>>
>> Just in case my git tree is here: http://84.112.174.163/~stefan/wine/ . It's not online all the time, and I am not guaranted a fixed IP(although it hasn't changed in years), so check it out as long as you can if you need it.
>>
>
> Am I supposed to find your compiler code there? It seems like a git
> tree of ages ago (where d3dx9_36 only contains math and font code).
>
>
>

Yeah, Stefan's project is based on wine 1.1.0 and you can find the
relevant code into dlls/wineshader. One of the things I did was to
port the assembler to current wine and move it into d3dx9_36.dll. In
the process I changed quite some things all around and I stripped from
the bytecode writer what wasn't needed by the assembler. I didn't
update the compiler code, and as Henri said, at this point probably
it's better to just continue what you are doing and look at Stefan's
implementation only as a "source for inspiration".
As d3dcompiler_xx.dll now seems to contain also the assembler, I'm ok
to move the assembler there (once completed) to share the bytecode
writer with the compiler.

Regarding the optimization, I'd suggest to keep it simple in the
beginning. I liked the idea in Stefan's compiler to have a parser
which produces an abstract intermediate representation, which is then
optimized to generate the bwriter_shader. The optimizer could then be
implemented from scratch, or using something third-party as LLVM or
such, while as a first step the optimizer could (ideally) simply spit
out the code unchanged. I believe that some language features cannot
be supported without some "optimizations", so this problem can crop up
sooner than expected.

Lastly, a bit on testing the compiler. I'm not sure trying to get
exactly the same bytecode as native is a feasible objective: while for
an assembler program there is only one correct translation, this is
not true for a compiler. Moreover I expect each iteration of the
Microsoft compiler could produce a different output with the same
shader program, so there isn't a "right" implementation to compare
with. I agree, this makes testing the compiler much harder...


From tijnema at gmail.com  Wed Apr 14 11:16:14 2010
From: tijnema at gmail.com (Matijn Woudt)
Date: Wed, 14 Apr 2010 18:16:14 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <o2h4bfd6eb11004140859zffabae9fy73a0a66d6b4e7f0e@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
	<o2h4bfd6eb11004140859zffabae9fy73a0a66d6b4e7f0e@mail.gmail.com>
Message-ID: <v2td8269d911004140916u38e7b203x5031f68e8849c4b6@mail.gmail.com>

On Wed, Apr 14, 2010 at 5:59 PM, Matteo Bruni <matteo.mystral at gmail.com> wrote:
> 2010/4/14 Matijn Woudt <tijnema at gmail.com>:
>> On Wed, Apr 14, 2010 at 4:27 PM, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>>>
>>> Am 14.04.2010 um 15:44 schrieb Henri Verbeet:
>>>
>>>> On 14 April 2010 15:07, Stefan D?singer <stefandoesinger at gmx.at> wrote:
>>>>>> 3) Implement the compiler in d3dcompiler_xx.
>>>>> I wrote a basic HLSL compiler as university project in 2008, this is where part of the assembler code came from. Do you have the sources, do you need them?
>>>>>
>>>> Quite frankly, I also believe that's where some of the issues in the
>>>> early versions of those assembler patches came from. I don't know if
>>>> that compiler has seen any work since 2008, but I'd be careful with
>>>> taking it as too much of an example.
>>> Yep, I recommend using Mattheo's code if possible. He has rebased my old code and fixed a bunch of issues. Beyond that, my compiler is fairly minimalistic. I think it supports most features except arrays(needs loop unrolling support). However, the optimizer is fairly simplistic. For better optimizations you may want to investigate SSA transformations and related stuff. I guess perfect optimization isn't a requirement for a first version though.
>>
>> First thing would probably be cleaning up and getting something minimal past AJ.
>>
>>>
>>> Just in case my git tree is here: http://84.112.174.163/~stefan/wine/ . It's not online all the time, and I am not guaranted a fixed IP(although it hasn't changed in years), so check it out as long as you can if you need it.
>>>
>>
>> Am I supposed to find your compiler code there? It seems like a git
>> tree of ages ago (where d3dx9_36 only contains math and font code).
>>
>>
>>
>
> Yeah, Stefan's project is based on wine 1.1.0 and you can find the
> relevant code into dlls/wineshader. One of the things I did was to
> port the assembler to current wine and move it into d3dx9_36.dll. In
> the process I changed quite some things all around and I stripped from
> the bytecode writer what wasn't needed by the assembler. I didn't
> update the compiler code, and as Henri said, at this point probably
> it's better to just continue what you are doing and look at Stefan's
> implementation only as a "source for inspiration".

dlls/wineshader doesn't exist in that tree?

> As d3dcompiler_xx.dll now seems to contain also the assembler, I'm ok
> to move the assembler there (once completed) to share the bytecode
> writer with the compiler.
>
> Regarding the optimization, I'd suggest to keep it simple in the
> beginning. I liked the idea in Stefan's compiler to have a parser
> which produces an abstract intermediate representation, which is then
> optimized to generate the bwriter_shader. The optimizer could then be
> implemented from scratch, or using something third-party as LLVM or
> such, while as a first step the optimizer could (ideally) simply spit
> out the code unchanged. I believe that some language features cannot
> be supported without some "optimizations", so this problem can crop up
> sooner than expected.

That's the direction I wanted to take indeed. The optimizer should at
some point optimize according to the flag setting. At first, I would
only create test cases with D3DXSHADER_SKIPOPTIMIZATION.

>
> Lastly, a bit on testing the compiler. I'm not sure trying to get
> exactly the same bytecode as native is a feasible objective: while for
> an assembler program there is only one correct translation, this is
> not true for a compiler. Moreover I expect each iteration of the
> Microsoft compiler could produce a different output with the same
> shader program, so there isn't a "right" implementation to compare
> with. I agree, this makes testing the compiler much harder...
>

I think that with a lot of testing, the logic behind can be figured
out. Then the compiler can be built around this logic. This could
possibly even work for a lot of optimizations.

On Wed, Apr 14, 2010 at 5:44 PM, Roderick Colenbrander
<thunderbird2k at gmail.com> wrote:
> My main worry is that in the end if we use a compiler framework
> (remember we don't have a lot of manpower for this) I think it would
> reduce in more efficient shaders and it prevents some reinventing of
> the wheel.

I'm still not convinced it's worth the effort. Also, I think that a
parser/compiler written in lex/bison is much easier for other
developers to understand and maintain once it is in the tree (And
probably also a lot easier to review patches).


From msclrhd at googlemail.com  Wed Apr 14 11:36:16 2010
From: msclrhd at googlemail.com (Reece Dunn)
Date: Wed, 14 Apr 2010 17:36:16 +0100
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <i2ld8269d911004140819nd4922168ua0763014b9abc20c@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
	<m2xc8485d471004140751jd90d1c08hbe7bf0c5d2f9ff9a@mail.gmail.com>
	<i2ld8269d911004140819nd4922168ua0763014b9abc20c@mail.gmail.com>
Message-ID: <q2u3f4fd2641004140936r18d0d610j99f08bb8ce33ffc2@mail.gmail.com>

On 14 April 2010 16:19, Matijn Woudt <tijnema at gmail.com> wrote:
> I have thought about using LLVM, but I don't like it because of:
> 1) Having another wine dependency (~40MB for me on ubuntu)
> 2) Code generated by LLVM will most likely not generated exactly the
> same bytecode as native compiler does, even though the shader has same
> effect on both. This makes it really hard to verify the HLSL compiler
> is working. My idea was to make wine's hlsl compiler produce exactly
> the same bytecode as native does. We might even find bugs in the
> native compiler, and either fix or duplicate these bugs.
>
> LLVM might be useful if we needed a really fast compiler, but native
> compiler isn't really fast AFAIK. Once games are calling it a few
> hundred times it might be worth the effort.

My understanding was that LLVM is written in C++, so cannot be used
directly in Wine (which only allows C89 code).

Therefore, for it to be usable in Wine, the LLVM API will need to be
wrapped in a C API.

- Reece


From austinenglish at gmail.com  Wed Apr 14 11:38:24 2010
From: austinenglish at gmail.com (Austin English)
Date: Wed, 14 Apr 2010 11:38:24 -0500
Subject: configure: when compiling with CLANG, set -std=gnu89
In-Reply-To: <87ochmoycy.fsf@wine.dyndns.org>
References: <r2lb6bb06271004131200gc9e93e05z523430264437ffc2@mail.gmail.com> 
	<87ochmoycy.fsf@wine.dyndns.org>
Message-ID: <y2pb6bb06271004140938yd71dfc1aode7422193786540@mail.gmail.com>

On Wed, Apr 14, 2010 at 10:19 AM, Alexandre Julliard
<julliard at winehq.org> wrote:
> Austin English <austinenglish at gmail.com> writes:
>
>> Clang defaults to compiling in C99 mode, which breaks the compile.
>
> Of course the compile should be fixed instead.

Not entirely trivial, since the compile is broken for gcc in c99 mode as well:
http://bugs.winehq.org/show_bug.cgi?id=20474

-- 
-Austin


From matteo.mystral at gmail.com  Wed Apr 14 11:47:05 2010
From: matteo.mystral at gmail.com (Matteo Bruni)
Date: Wed, 14 Apr 2010 18:47:05 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <v2td8269d911004140916u38e7b203x5031f68e8849c4b6@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
	<o2h4bfd6eb11004140859zffabae9fy73a0a66d6b4e7f0e@mail.gmail.com>
	<v2td8269d911004140916u38e7b203x5031f68e8849c4b6@mail.gmail.com>
Message-ID: <j2x4bfd6eb11004140947i4ff33912g5e39a37c683d3777@mail.gmail.com>

> dlls/wineshader doesn't exist in that tree?
>

Check if you are in the correct branch (should be the "compiler"
branch in his tree).

>> Lastly, a bit on testing the compiler. I'm not sure trying to get
>> exactly the same bytecode as native is a feasible objective: while for
>> an assembler program there is only one correct translation, this is
>> not true for a compiler. Moreover I expect each iteration of the
>> Microsoft compiler could produce a different output with the same
>> shader program, so there isn't a "right" implementation to compare
>> with. I agree, this makes testing the compiler much harder...
>>
>
> I think that with a lot of testing, the logic behind can be figured
> out. Then the compiler can be built around this logic. This could
> possibly even work for a lot of optimizations.
>

What I mean is that there could not be a single logic behind, I expect
to find differences between the various d3dcompiler_xx dlls,
expecially regarding the optimizations. You could just pick a version
to compare against and try to stick with that, but maybe this is not
the best thing to do.
On the other hand, with optimizations disabled maybe this doable (but
then you aren't testing the optimizer).


From cdavis at mymail.mines.edu  Wed Apr 14 11:56:17 2010
From: cdavis at mymail.mines.edu (Charles Davis)
Date: Wed, 14 Apr 2010 10:56:17 -0600
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <q2u3f4fd2641004140936r18d0d610j99f08bb8ce33ffc2@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>	<m2xc8485d471004140751jd90d1c08hbe7bf0c5d2f9ff9a@mail.gmail.com>	<i2ld8269d911004140819nd4922168ua0763014b9abc20c@mail.gmail.com>
	<q2u3f4fd2641004140936r18d0d610j99f08bb8ce33ffc2@mail.gmail.com>
Message-ID: <4BC5F3B1.6080006@mymail.mines.edu>

On 4/14/10 10:36 AM, Reece Dunn wrote:
> On 14 April 2010 16:19, Matijn Woudt <tijnema at gmail.com> wrote:
>> I have thought about using LLVM, but I don't like it because of:
>> 1) Having another wine dependency (~40MB for me on ubuntu)
>> 2) Code generated by LLVM will most likely not generated exactly the
>> same bytecode as native compiler does, even though the shader has same
>> effect on both. This makes it really hard to verify the HLSL compiler
>> is working. My idea was to make wine's hlsl compiler produce exactly
>> the same bytecode as native does. We might even find bugs in the
>> native compiler, and either fix or duplicate these bugs.
>>
>> LLVM might be useful if we needed a really fast compiler, but native
>> compiler isn't really fast AFAIK. Once games are calling it a few
>> hundred times it might be worth the effort.
> 
> My understanding was that LLVM is written in C++, so cannot be used
> directly in Wine (which only allows C89 code).
> 
> Therefore, for it to be usable in Wine, the LLVM API will need to be
> wrapped in a C API.
But LLVM *is* wrapped in a C API. (The headers are in include/llvm-c
from the LLVM source root.)

The real problem is that if we use LLVM, we'll have to write a backend
to generate shader bytecode, and LLVM backends have to be written in C++
(actually, you write description files that get turned into C++ code).
Personally, I think that should be a separate project anyway.

Chip


From morten.roenne at tdcadsl.dk  Wed Apr 14 12:20:07 2010
From: morten.roenne at tdcadsl.dk (=?ISO-8859-1?Q?Morten_R=F8nne?=)
Date: Wed, 14 Apr 2010 19:20:07 +0200
Subject: Future implementation
In-Reply-To: <4BC54602.5090003@ilidium.com>
References: <4BC54602.5090003@ilidium.com>
Message-ID: <4BC5F947.4060105@tdcadsl.dk>

Luis Busquets wrote:
> Could someone please confirm the following points?:
>
> 2. Integration of DosBOX or other emulator. How this will be done? Is 
> the plan to use them when wine detects that the programme is compiled 
> for real mode? Does that mean that the sake of wine is to provide 
> compatibility only for applications built to be run on protected mode?
>
It was briefly discussed when I wrote about implementing VGA mode 18. 
This does require a lot of changes in the DOSVM (another mail incoming 
about that).
It was seen as a way of making more real mode programs run without 
having to redo what others have already done.
But doing so present it's own set of problems. For me the main thing 
would be how to tell the user that they are now "leaving" wine and what 
ever error that might come should be directed at someone else.

So for me the way forward is still to improve wine's dosvm to handle 
more cases. Something I hope I can devote some time to.

BR
Morten R?nne



From tijnema at gmail.com  Wed Apr 14 12:22:44 2010
From: tijnema at gmail.com (Matijn Woudt)
Date: Wed, 14 Apr 2010 19:22:44 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <j2x4bfd6eb11004140947i4ff33912g5e39a37c683d3777@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
	<o2h4bfd6eb11004140859zffabae9fy73a0a66d6b4e7f0e@mail.gmail.com>
	<v2td8269d911004140916u38e7b203x5031f68e8849c4b6@mail.gmail.com>
	<j2x4bfd6eb11004140947i4ff33912g5e39a37c683d3777@mail.gmail.com>
Message-ID: <j2jd8269d911004141022p353f6f52kc9c0cd894792bfb@mail.gmail.com>

On Wed, Apr 14, 2010 at 6:47 PM, Matteo Bruni <matteo.mystral at gmail.com> wrote:
>> dlls/wineshader doesn't exist in that tree?
>>
>
> Check if you are in the correct branch (should be the "compiler"
> branch in his tree).
>

Right, my mistake.

>>> Lastly, a bit on testing the compiler. I'm not sure trying to get
>>> exactly the same bytecode as native is a feasible objective: while for
>>> an assembler program there is only one correct translation, this is
>>> not true for a compiler. Moreover I expect each iteration of the
>>> Microsoft compiler could produce a different output with the same
>>> shader program, so there isn't a "right" implementation to compare
>>> with. I agree, this makes testing the compiler much harder...
>>>
>>
>> I think that with a lot of testing, the logic behind can be figured
>> out. Then the compiler can be built around this logic. This could
>> possibly even work for a lot of optimizations.
>>
>
> What I mean is that there could not be a single logic behind, I expect
> to find differences between the various d3dcompiler_xx dlls,
> expecially regarding the optimizations. You could just pick a version
> to compare against and try to stick with that, but maybe this is not
> the best thing to do.
> On the other hand, with optimizations disabled maybe this doable (but
> then you aren't testing the optimizer).
>

It should be same as the latest version available (currently version
42). Changes in the logic when a new version comes out will be caught
by test cases. We probably shouldn't directly fail, but perhaps mark
it todo_wine when it fails with newer version?


From hverbeet at gmail.com  Wed Apr 14 12:29:54 2010
From: hverbeet at gmail.com (Henri Verbeet)
Date: Wed, 14 Apr 2010 19:29:54 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <i2ld8269d911004140819nd4922168ua0763014b9abc20c@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
	<m2xc8485d471004140751jd90d1c08hbe7bf0c5d2f9ff9a@mail.gmail.com>
	<i2ld8269d911004140819nd4922168ua0763014b9abc20c@mail.gmail.com>
Message-ID: <t2sd658b69e1004141029w75ae3600uc27d2504be7fb5cd@mail.gmail.com>

On 14 April 2010 17:19, Matijn Woudt <tijnema at gmail.com> wrote:
> I have thought about using LLVM, but I don't like it because of:
> 1) Having another wine dependency (~40MB for me on ubuntu)
> 2) Code generated by LLVM will most likely not generated exactly the
> same bytecode as native compiler does, even though the shader has same
> effect on both. This makes it really hard to verify the HLSL compiler
> is working. My idea was to make wine's hlsl compiler produce exactly
> the same bytecode as native does. We might even find bugs in the
> native compiler, and either fix or duplicate these bugs.
>
> LLVM might be useful if we needed a really fast compiler, but native
> compiler isn't really fast AFAIK. Once games are calling it a few
> hundred times it might be worth the effort.
>
I think you want to test if the compiled shader works instead of the
exact bytecode. Generating the same bytecode is probably way too hard,
fragile to test, and most likely not worth the effort.

I'm not sure about LLVM. On one hand I don't think we want to be
writing and maintaining all the optimizations that LLVM can do inside
the d3d compiler dll. On the other hand, it would be a pretty large
dependency, and it's not clear if it would gain us anything at all.
It's not entirely unlikely that if the driver we're running on has a
good GLSL compiler we're not going to see much of a benefit from
generating good d3d bytecode. (I can already hear the Mesa people
laughing about that one though.) Either way, it would probably already
be a good start to have a parser, and generate some basic unoptimized
bytecode from that, or even just print an AST.


From thunderbird2k at gmail.com  Wed Apr 14 12:30:20 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Wed, 14 Apr 2010 19:30:20 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <j2jd8269d911004141022p353f6f52kc9c0cd894792bfb@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
	<o2h4bfd6eb11004140859zffabae9fy73a0a66d6b4e7f0e@mail.gmail.com>
	<v2td8269d911004140916u38e7b203x5031f68e8849c4b6@mail.gmail.com>
	<j2x4bfd6eb11004140947i4ff33912g5e39a37c683d3777@mail.gmail.com>
	<j2jd8269d911004141022p353f6f52kc9c0cd894792bfb@mail.gmail.com>
Message-ID: <o2vc8485d471004141030ub28b3f7bg3db2de9d7de11c@mail.gmail.com>

On Wed, Apr 14, 2010 at 7:22 PM, Matijn Woudt <tijnema at gmail.com> wrote:
> On Wed, Apr 14, 2010 at 6:47 PM, Matteo Bruni <matteo.mystral at gmail.com> wrote:
>>> dlls/wineshader doesn't exist in that tree?
>>>
>>
>> Check if you are in the correct branch (should be the "compiler"
>> branch in his tree).
>>
>
> Right, my mistake.
>
>>>> Lastly, a bit on testing the compiler. I'm not sure trying to get
>>>> exactly the same bytecode as native is a feasible objective: while for
>>>> an assembler program there is only one correct translation, this is
>>>> not true for a compiler. Moreover I expect each iteration of the
>>>> Microsoft compiler could produce a different output with the same
>>>> shader program, so there isn't a "right" implementation to compare
>>>> with. I agree, this makes testing the compiler much harder...
>>>>
>>>
>>> I think that with a lot of testing, the logic behind can be figured
>>> out. Then the compiler can be built around this logic. This could
>>> possibly even work for a lot of optimizations.
>>>
>>
>> What I mean is that there could not be a single logic behind, I expect
>> to find differences between the various d3dcompiler_xx dlls,
>> expecially regarding the optimizations. You could just pick a version
>> to compare against and try to stick with that, but maybe this is not
>> the best thing to do.
>> On the other hand, with optimizations disabled maybe this doable (but
>> then you aren't testing the optimizer).
>>
>
> It should be same as the latest version available (currently version
> 42). Changes in the logic when a new version comes out will be caught
> by test cases. We probably shouldn't directly fail, but perhaps mark
> it todo_wine when it fails with newer version?
>

Also remember that perhaps based on gpu capabilities (even on
different SM3.0 capable GPUs) some different code might get generated.

One good reason for not having the same code is vertex / pixel shader
constants. For some games d3d9x selects uniforms constants which are
close to the SM3.0 limits (wined3d eats a number of constants) and
this can cause major issues especially on Geforce6/7 and AMD cards
(even modern AMD cards only report SM3.0 limits using glsl; you need
UBOs to get more). When we have our own compiler we can 'schedule' the
constants in such a way that we might be able to avoid these issues.
This leads to different shaders.

It is not something to worry about now. I think you just want to focus
on rendering tests to see if the shader does the right thing.

Roderick


From tijnema at gmail.com  Wed Apr 14 12:48:25 2010
From: tijnema at gmail.com (Matijn Woudt)
Date: Wed, 14 Apr 2010 19:48:25 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <t2sd658b69e1004141029w75ae3600uc27d2504be7fb5cd@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
	<m2xc8485d471004140751jd90d1c08hbe7bf0c5d2f9ff9a@mail.gmail.com>
	<i2ld8269d911004140819nd4922168ua0763014b9abc20c@mail.gmail.com>
	<t2sd658b69e1004141029w75ae3600uc27d2504be7fb5cd@mail.gmail.com>
Message-ID: <r2xd8269d911004141048lefd263c2s18edd3085c98d58f@mail.gmail.com>

On Wed, Apr 14, 2010 at 7:29 PM, Henri Verbeet <hverbeet at gmail.com> wrote:
> On 14 April 2010 17:19, Matijn Woudt <tijnema at gmail.com> wrote:
>> I have thought about using LLVM, but I don't like it because of:
>> 1) Having another wine dependency (~40MB for me on ubuntu)
>> 2) Code generated by LLVM will most likely not generated exactly the
>> same bytecode as native compiler does, even though the shader has same
>> effect on both. This makes it really hard to verify the HLSL compiler
>> is working. My idea was to make wine's hlsl compiler produce exactly
>> the same bytecode as native does. We might even find bugs in the
>> native compiler, and either fix or duplicate these bugs.
>>
>> LLVM might be useful if we needed a really fast compiler, but native
>> compiler isn't really fast AFAIK. Once games are calling it a few
>> hundred times it might be worth the effort.
>>
> I think you want to test if the compiled shader works instead of the
> exact bytecode. Generating the same bytecode is probably way too hard,
> fragile to test, and most likely not worth the effort.

I think I should go for exact bytecode as long as it is possible, it's
the only way we can be sure the implementation is 100% right for each
test case.

>
> I'm not sure about LLVM. On one hand I don't think we want to be
> writing and maintaining all the optimizations that LLVM can do inside
> the d3d compiler dll. On the other hand, it would be a pretty large
> dependency, and it's not clear if it would gain us anything at all.
> It's not entirely unlikely that if the driver we're running on has a
> good GLSL compiler we're not going to see much of a benefit from
> generating good d3d bytecode. (I can already hear the Mesa people
> laughing about that one though.) Either way, it would probably already
> be a good start to have a parser, and generate some basic unoptimized
> bytecode from that, or even just print an AST.
>

Right, it's probably better to go ahead first, and implement LLVM once
we find it necessary (if ever).


From tijnema at gmail.com  Wed Apr 14 12:55:14 2010
From: tijnema at gmail.com (Matijn Woudt)
Date: Wed, 14 Apr 2010 19:55:14 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <o2vc8485d471004141030ub28b3f7bg3db2de9d7de11c@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
	<o2h4bfd6eb11004140859zffabae9fy73a0a66d6b4e7f0e@mail.gmail.com>
	<v2td8269d911004140916u38e7b203x5031f68e8849c4b6@mail.gmail.com>
	<j2x4bfd6eb11004140947i4ff33912g5e39a37c683d3777@mail.gmail.com>
	<j2jd8269d911004141022p353f6f52kc9c0cd894792bfb@mail.gmail.com>
	<o2vc8485d471004141030ub28b3f7bg3db2de9d7de11c@mail.gmail.com>
Message-ID: <o2id8269d911004141055p3c66fcd5j1c000795e17c9cac@mail.gmail.com>

On Wed, Apr 14, 2010 at 7:30 PM, Roderick Colenbrander
<thunderbird2k at gmail.com> wrote:
> On Wed, Apr 14, 2010 at 7:22 PM, Matijn Woudt <tijnema at gmail.com> wrote:
>> On Wed, Apr 14, 2010 at 6:47 PM, Matteo Bruni <matteo.mystral at gmail.com> wrote:
>>>> dlls/wineshader doesn't exist in that tree?
>>>>
>>>
>>> Check if you are in the correct branch (should be the "compiler"
>>> branch in his tree).
>>>
>>
>> Right, my mistake.
>>
>>>>> Lastly, a bit on testing the compiler. I'm not sure trying to get
>>>>> exactly the same bytecode as native is a feasible objective: while for
>>>>> an assembler program there is only one correct translation, this is
>>>>> not true for a compiler. Moreover I expect each iteration of the
>>>>> Microsoft compiler could produce a different output with the same
>>>>> shader program, so there isn't a "right" implementation to compare
>>>>> with. I agree, this makes testing the compiler much harder...
>>>>>
>>>>
>>>> I think that with a lot of testing, the logic behind can be figured
>>>> out. Then the compiler can be built around this logic. This could
>>>> possibly even work for a lot of optimizations.
>>>>
>>>
>>> What I mean is that there could not be a single logic behind, I expect
>>> to find differences between the various d3dcompiler_xx dlls,
>>> expecially regarding the optimizations. You could just pick a version
>>> to compare against and try to stick with that, but maybe this is not
>>> the best thing to do.
>>> On the other hand, with optimizations disabled maybe this doable (but
>>> then you aren't testing the optimizer).
>>>
>>
>> It should be same as the latest version available (currently version
>> 42). Changes in the logic when a new version comes out will be caught
>> by test cases. We probably shouldn't directly fail, but perhaps mark
>> it todo_wine when it fails with newer version?
>>
>
> Also remember that perhaps based on gpu capabilities (even on
> different SM3.0 capable GPUs) some different code might get generated.
>
> One good reason for not having the same code is vertex / pixel shader
> constants. For some games d3d9x selects uniforms constants which are
> close to the SM3.0 limits (wined3d eats a number of constants) and
> this can cause major issues especially on Geforce6/7 and AMD cards
> (even modern AMD cards only report SM3.0 limits using glsl; you need
> UBOs to get more). When we have our own compiler we can 'schedule' the
> constants in such a way that we might be able to avoid these issues.
> This leads to different shaders.
>
> It is not something to worry about now. I think you just want to focus
> on rendering tests to see if the shader does the right thing.
>
> Roderick
>

I think, for now, we should pass D3DXSHADER_SKIPVALIDATION to the
compiler, so the code won't be checked for GPU capabilities. I'm not
sure if different code is generated when GPU capabilities are low, but
I think it's safe to fail if we request too many constants. In test
cases we could check D3DCAPS9 and skip if needed.


From stefandoesinger at gmx.at  Wed Apr 14 12:57:08 2010
From: stefandoesinger at gmx.at (=?iso-8859-1?Q?Stefan_D=F6singer?=)
Date: Wed, 14 Apr 2010 19:57:08 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <t2sd658b69e1004141029w75ae3600uc27d2504be7fb5cd@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
	<m2xc8485d471004140751jd90d1c08hbe7bf0c5d2f9ff9a@mail.gmail.com>
	<i2ld8269d911004140819nd4922168ua0763014b9abc20c@mail.gmail.com>
	<t2sd658b69e1004141029w75ae3600uc27d2504be7fb5cd@mail.gmail.com>
Message-ID: <5629B627-FFE2-408D-BFCB-769D47BF3698@gmx.at>


Am 14.04.2010 um 19:29 schrieb Henri Verbeet:
> I think you want to test if the compiled shader works instead of the
> exact bytecode. Generating the same bytecode is probably way too hard,
> fragile to test, and most likely not worth the effort.
Yep, comparing generated bytecode is not going to work. I think I wrote only 3-4 HLSL tests in the compiler, and all those were based on checking the rendering results, similar to the d3d9 visual tests.

> I'm not sure about LLVM. On one hand I don't think we want to be
> writing and maintaining all the optimizations that LLVM can do inside
> the d3d compiler dll.
My main concern about LLVM in 2008 was that it wasn't capable of some shader specific things like DDX and DDY. Apple only used it to optimize CPU fallback code, not to optimize code sent to the GPU. This might have changed since then, especially if the Gallium3D developers indeed use LLVM, as they planned in the past. I recommend to contact the Mesa developers about their compiler status and plans.

If we can it's certainly an advantage to use an existing compiler engine like LLVM instead of reinventing the wheel. I doubt that the dependency is a big issue. It will probably be required by Mesa as well, so distros will install it anyway. LLVM is available on OSX too.

If we're extra-lucky we can implement the parser and bytecode writer ourselves, and just send the parse tree to LLVM and get an optimized tree back. So LLVM could be optional. If you have it great, otherwise things will still work, but shaders will be less efficient.

HLSL is both a simple and complicated language. In many ways it is easier than average imperative programming language because it doesn't have pointers, references or similar features. In d3d9 it had pretty much no types(only floats, except in special cases). Then there are issues that make things more complicated, for example the special address registers, vector registers and no memory to push/pop registers. If your register allocator can't fit the program in the existing registers you're out of luck.

However, pointers are appearing in GLSL via extensions, and I guess in HLSL it's only a matter of time(maybe dx11 compute shaders...).



From frechdachs69 at sofortsurf.de  Wed Apr 14 13:35:53 2010
From: frechdachs69 at sofortsurf.de (frechdachs69)
Date: Wed, 14 Apr 2010 20:35:53 +0200
Subject: usbhub.sys: add stubbed usbhub.sys
In-Reply-To: <9e89675b1003241149x86357b2n261793a77177f062@mail.gmail.com>
References: <9e89675b1003232208j71308ddcq1d305648cf41daa3@mail.gmail.com>
	<874ok5fu8b.fsf@wine.dyndns.org>
	<9e89675b1003241149x86357b2n261793a77177f062@mail.gmail.com>
Message-ID: <201004142035.53529.frechdachs69@sofortsurf.de>

Am Mittwoch, 24. M?rz 2010 19:49:46 schrieb Damjan Jovanovic:
> On Wed, Mar 24, 2010 at 8:30 PM, Alexandre Julliard <julliard at winehq.org> 
wrote:
> > Damjan Jovanovic <damjan.jov at gmail.com> writes:
> >> Changelog:
> >> * usbhub.sys: add stubbed usbhub.sys
> >
> > What is this going to be useful for?
> >
> > --
> > Alexandre Julliard
> > julliard at winehq.org
> 
> The same as Etersoft's USB patches: for doing USB I/O to USB devices.
> 
> Damjan
> 

Without having looked into the code: is it possible to simulate virtual USB 
devices plugged or removed at the USB bus?

--
Heiko Nardmann


From jave27 at gmail.com  Wed Apr 14 13:45:20 2010
From: jave27 at gmail.com (Jason Green)
Date: Wed, 14 Apr 2010 14:45:20 -0400
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <r2xd8269d911004141048lefd263c2s18edd3085c98d58f@mail.gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
	<m2xc8485d471004140751jd90d1c08hbe7bf0c5d2f9ff9a@mail.gmail.com>
	<i2ld8269d911004140819nd4922168ua0763014b9abc20c@mail.gmail.com>
	<t2sd658b69e1004141029w75ae3600uc27d2504be7fb5cd@mail.gmail.com>
	<r2xd8269d911004141048lefd263c2s18edd3085c98d58f@mail.gmail.com>
Message-ID: <24C77209-B751-4E36-9C39-875CB66B6D50@gmail.com>

On Apr 14, 2010, at 1:48 PM, Matijn Woudt wrote:

>> I think you want to test if the compiled shader works instead of the
>> exact bytecode. Generating the same bytecode is probably way too hard,
>> fragile to test, and most likely not worth the effort.
> 
> I think I should go for exact bytecode as long as it is possible, it's
> the only way we can be sure the implementation is 100% right for each
> test case.

FYI, we encountered a game a while back which used a few shaders that depended on being compiled with a particular version for d3dx9_##.dll.  There was a compiler bug which the game engine knew about and accounted for.  If you tried to use the compiled shader from a newer d3dx9_##.dll, then the rendering wouldn't look quite right on certain objects.

So, there's one argument for identical bytecode compatibility, but it's likely that very few apps will exhibit behavior like this.

From damjan.jov at gmail.com  Wed Apr 14 13:50:25 2010
From: damjan.jov at gmail.com (Damjan Jovanovic)
Date: Wed, 14 Apr 2010 20:50:25 +0200
Subject: usbhub.sys: add stubbed usbhub.sys
In-Reply-To: <201004142035.53529.frechdachs69@sofortsurf.de>
References: <9e89675b1003232208j71308ddcq1d305648cf41daa3@mail.gmail.com>
	<874ok5fu8b.fsf@wine.dyndns.org>
	<9e89675b1003241149x86357b2n261793a77177f062@mail.gmail.com>
	<201004142035.53529.frechdachs69@sofortsurf.de>
Message-ID: <p2t9e89675b1004141150hf4aebb71s96a91fae16de031e@mail.gmail.com>

On Wed, Apr 14, 2010 at 8:35 PM, frechdachs69
<frechdachs69 at sofortsurf.de> wrote:
> Am Mittwoch, 24. M?rz 2010 19:49:46 schrieb Damjan Jovanovic:
>> On Wed, Mar 24, 2010 at 8:30 PM, Alexandre Julliard <julliard at winehq.org>
> wrote:
>> > Damjan Jovanovic <damjan.jov at gmail.com> writes:
>> >> Changelog:
>> >> * usbhub.sys: add stubbed usbhub.sys
>> >
>> > What is this going to be useful for?
>> >
>> > --
>> > Alexandre Julliard
>> > julliard at winehq.org
>>
>> The same as Etersoft's USB patches: for doing USB I/O to USB devices.
>>
>> Damjan
>>
>
> Without having looked into the code: is it possible to simulate virtual USB
> devices plugged or removed at the USB bus?
>
> --
> Heiko Nardmann
>

I am not sure where you're going with this. User-space software only
interacts with a device using a driver, and only interacts with that
driver, at the lowest level, using I/O operations like ReadFile,
WriteFile, DeviceIoControl, etc. You could write a driver to simulate
a device but you don't need any USB functions for that.

Damjan


From nsivov at codeweavers.com  Wed Apr 14 14:08:53 2010
From: nsivov at codeweavers.com (Nikolay Sivov)
Date: Wed, 14 Apr 2010 23:08:53 +0400
Subject: oleaut32: be more explicit with locale dependent parsing of dates
	(try 2)
In-Reply-To: <4BC60E99.3010609@dawncrow.de>
References: <4BC60E99.3010609@dawncrow.de>
Message-ID: <4BC612C5.3010704@codeweavers.com>

On 4/14/2010 22:51, Andr? Hentschel wrote:
>       case 0x3: /* TTT TTTDD TTTDDD */
> -      if (iDate&&  dp.dwCount == 3)
> +      if (dp.dwCount == 3&&  !strncmp(ShortDate,"dd.MM.yy",8))
>
>    

>       case 0x1B: /* localized DDDTTT */
> -      if (!iDate)
> +      if (strncmp(ShortDate,"dd.MM.yy",8))
>           {
>             hRet = DISP_E_TYPEMISMATCH;
>             break;
>    
This looks like a workaround. I don't think you should hard code it this 
way, what's so special with this format?
And what is a initial problem with that?


From mstefani at redhat.com  Wed Apr 14 14:44:21 2010
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Wed, 14 Apr 2010 21:44:21 +0200
Subject: [PATCH 2/2] mmdevapi: Add pulseaudio on ignore for older
	openal-soft's
In-Reply-To: <4BC61688.7080207@gmail.com>
References: <4BC61688.7080207@gmail.com>
Message-ID: <4BC61B15.1060105@redhat.com>

On 04/14/2010 09:24 PM, Maarten Lankhorst wrote:
> ---
> I cannot query the version string unless a device context is created.
> Since OpenAL-1.12 added support for thread local contexts I use that to
> determine whether pulseaudio should be ignored or not. OpenAL 1.10 and
> older will crash on pulseaudio. Since other os's don't support
> pulseaudio it is safe.
> +static void boycott_pulse(const char *devstr, const char **defstr) {
The function is badly named. It doesn't "boycott" PA but doesn't uses it
on older OpenAL versions.

> +    if (!blacklist_pulse && !local_contexts) {
> +        WARN("Disabling pulseaudio because of old openal version\n");
> +        blacklist_pulse = 1;
> +    }
> +    if (!blacklist_pulse || !devstr || strncmp(*defstr, "PulseAudio ", 11))
> +        return;
> +    while (*devstr && !strncmp(devstr, "PulseAudio ", 11)) {
> +        devstr += strlen(devstr) + 1;
> +    }
> +    TRACE("New default: %s\n", devstr);
> +    *defstr = devstr;
> +}
> +

bye
         michael


From nerv at dawncrow.de  Wed Apr 14 14:56:16 2010
From: nerv at dawncrow.de (=?ISO-8859-15?Q?Andr=E9_Hentschel?=)
Date: Wed, 14 Apr 2010 21:56:16 +0200
Subject: oleaut32: be more explicit with locale dependent parsing of dates
	(try 2)
In-Reply-To: <4BC612C5.3010704@codeweavers.com>
References: <4BC60E99.3010609@dawncrow.de> <4BC612C5.3010704@codeweavers.com>
Message-ID: <4BC61DE0.6080202@dawncrow.de>

Nikolay Sivov schrieb:
> On 4/14/2010 22:51, Andr? Hentschel wrote:
>>       case 0x3: /* TTT TTTDD TTTDDD */
>> -      if (iDate&&  dp.dwCount == 3)
>> +      if (dp.dwCount == 3&&  !strncmp(ShortDate,"dd.MM.yy",8))
>>
>>    
> 
>>       case 0x1B: /* localized DDDTTT */
>> -      if (!iDate)
>> +      if (strncmp(ShortDate,"dd.MM.yy",8))
>>           {
>>             hRet = DISP_E_TYPEMISMATCH;
>>             break;
>>    
> This looks like a workaround. I don't think you should hard code it this
> way, what's so special with this format?
> And what is a initial problem with that?
> 
> 
The date and time parsing is locale dependent of course, but the code is mainly written for english.
There was a bug so i fixed it and introduced a regression and bug 22287 came up.

-- 

Best Regards, Andr? Hentschel


From ehoover at mines.edu  Wed Apr 14 20:36:12 2010
From: ehoover at mines.edu (Erich Hoover)
Date: Wed, 14 Apr 2010 19:36:12 -0600
Subject: winex11: add support for 32-bit DDBs
Message-ID: <y2q4c1ac96d1004141836l99530494v7ff069c1cf02eb3b@mail.gmail.com>

I noticed a problem with the icons in Wine when alt+tabbing today.  After
doing a regression test it appears that commit
c29cf0591976f96c3adb30c3c3b6db59f4983251 results in pixmaps that do not
always display properly when alt+tabbing (see attached screenshot).

Erich Hoover
ehoover at mines.edu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100414/1cb2ff55/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screenshot-Notepad.png
Type: image/png
Size: 9291 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100414/1cb2ff55/attachment-0001.png>

From dmitry at codeweavers.com  Wed Apr 14 23:57:42 2010
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 15 Apr 2010 13:57:42 +0900
Subject: kernel32: Add tests for lstrcmpW (try 2)
In-Reply-To: <4BC60703.1030307@dawncrow.de>
References: <4BC60703.1030307@dawncrow.de>
Message-ID: <20100415135742.d9cb3708.dmitry@codeweavers.com>

Andr? Hentschel <nerv at dawncrow.de> wrote:

> - Design similar to ntdll/tests/error.c
> - Passes all Machines on WTB
> - with check for existance of function
> - just the known 2 instead of 4510
> - intendation for todo_wine choosen so that it can be easy removed without touching the tests

You need to test CompareStringW instead, and try to avoid using any macros at all.
Probably the very first thing you need to do in the test is to call GetStringType
and verify that the character you want to test is supported and has the expected
attributes.

-- 
Dmitry.


From thunderbird2k at gmail.com  Thu Apr 15 03:22:52 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Thu, 15 Apr 2010 10:22:52 +0200
Subject: winex11: add support for 32-bit DDBs
In-Reply-To: <y2q4c1ac96d1004141836l99530494v7ff069c1cf02eb3b@mail.gmail.com>
References: <y2q4c1ac96d1004141836l99530494v7ff069c1cf02eb3b@mail.gmail.com>
Message-ID: <r2mc8485d471004150122u491a7733x97692ee117622f8c@mail.gmail.com>

I can't see the screenshot well but that's notepad? What display
drivers are you using?

Roderick

On Thu, Apr 15, 2010 at 3:36 AM, Erich Hoover <ehoover at mines.edu> wrote:
> I noticed a problem with the icons in Wine when alt+tabbing today.? After
> doing a regression test it appears that commit
> c29cf0591976f96c3adb30c3c3b6db59f4983251 results in pixmaps that do not
> always display properly when alt+tabbing (see attached screenshot).
>
> Erich Hoover
> ehoover at mines.edu
>


From mstefani at redhat.com  Wed Apr 14 17:00:46 2010
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Thu, 15 Apr 2010 00:00:46 +0200
Subject: Packaging Wine 64bit
Message-ID: <4BC63B0E.4090506@redhat.com>

Hello guys!

Wine 64bit (the one able to run 64bit Windows application) is nearly 
feature complete. As of wine-1.1.42 Wine supports shared 32/64-bit 
setups; though we do not recommend it yet for general consumption. This 
is more of a "heads up" info as the next stable Wine release aka 1.2 is 
"imminent" (about one month until code freeze and then an additional 
month for the stabilization period).

Proper Wine 64bit support poses some challenges for packaging as it 
requires *both* 64bit as well as 32bit libraries and binaries. This 
makes Wine 64bit packaging different from the normal other 64bit 
packages. To ease the pain we have created a wiki page with information 
pertinent to packagers/distributions:
     http://wiki.winehq.org/Wine64ForPackagers

Do not hesitate to contact us either by email to wine-devel or on irc on 
Freenode in #winehackers if you have any questions or suggestions. The 
above page actually evolved from discussions on irc.


If you do know about Wine packagers on other Linux distributions please 
forward them this info; we are pretty sure that we missed a few.
We didn't forget about the non-Linux OSes but Wine 64bit is at the 
moment a Linux only feature; patches to change that are of course welcome ;)

bye
	michael


From stefandoesinger at gmx.at  Thu Apr 15 04:23:45 2010
From: stefandoesinger at gmx.at (=?iso-8859-1?Q?Stefan_D=F6singer?=)
Date: Thu, 15 Apr 2010 11:23:45 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <24C77209-B751-4E36-9C39-875CB66B6D50@gmail.com>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<6CEE99DD-27BE-4079-8C1E-DA25EB3DE3A9@gmx.at>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
	<m2xc8485d471004140751jd90d1c08hbe7bf0c5d2f9ff9a@mail.gmail.com>
	<i2ld8269d911004140819nd4922168ua0763014b9abc20c@mail.gmail.com>
	<t2sd658b69e1004141029w75ae3600uc27d2504be7fb5cd@mail.gmail.com>
	<r2xd8269d911004141048lefd263c2s18edd3085c98d58f@mail.gmail.com>
	<24C77209-B751-4E36-9C39-875CB66B6D50@gmail.com>
Message-ID: <EE589B96-C9C8-4FDD-B06F-826725107EED@gmx.at>


Am 14.04.2010 um 20:45 schrieb Jason Green:
> FYI, we encountered a game a while back which used a few shaders that depended on being compiled with a particular version for d3dx9_##.dll.  There was a compiler bug which the game engine knew about and accounted for.  If you tried to use the compiled shader from a newer d3dx9_##.dll, then the rendering wouldn't look quite right on certain objects.
> 
> So, there's one argument for identical bytecode compatibility, but it's likely that very few apps will exhibit behavior like this.
I think it's only an argument that we may need some specific tests that check for identical bytecode. And by your description it sounds like the compiler bug can be detected by looking at the rendering output. I still think that having the majority of tests check the generated bytecode is a bad idea:

* It will be hard to implement the same compiler result
* It will make our own optimizations impossible(the MS compiler is very good optimization wise, so that point is mostly moot)
* It will be hard to maintain the tests when we're moving them to a newer MS compiler version
* There are things that can be translated into different bytecodes, and all are equally valid and optimal, like constants ordering.




From nsivov at codeweavers.com  Thu Apr 15 04:33:01 2010
From: nsivov at codeweavers.com (Nikolay Sivov)
Date: Thu, 15 Apr 2010 13:33:01 +0400
Subject: oleaut32: be more explicit with locale dependent parsing of dates
	(try 2)
In-Reply-To: <4BC61DE0.6080202@dawncrow.de>
References: <4BC60E99.3010609@dawncrow.de> <4BC612C5.3010704@codeweavers.com>
	<4BC61DE0.6080202@dawncrow.de>
Message-ID: <4BC6DD4D.9020201@codeweavers.com>

On 4/14/2010 23:56, Andr? Hentschel wrote:
> Nikolay Sivov schrieb:
>    
>> On 4/14/2010 22:51, Andr? Hentschel wrote:
>>      
>>>        case 0x3: /* TTT TTTDD TTTDDD */
>>> -      if (iDate&&   dp.dwCount == 3)
>>> +      if (dp.dwCount == 3&&   !strncmp(ShortDate,"dd.MM.yy",8))
>>>
>>>
>>>        
>>      
>>>        case 0x1B: /* localized DDDTTT */
>>> -      if (!iDate)
>>> +      if (strncmp(ShortDate,"dd.MM.yy",8))
>>>            {
>>>              hRet = DISP_E_TYPEMISMATCH;
>>>              break;
>>>
>>>        
>> This looks like a workaround. I don't think you should hard code it this
>> way, what's so special with this format?
>> And what is a initial problem with that?
>>
>>
>>      
> The date and time parsing is locale dependent of course, but the code is mainly written for english.
> There was a bug so i fixed it and introduced a regression and bug 22287 came up.
>    
Yes, but that doesn't mean it should be hard coded this way. Am I right 
it should use localized format and try to fit input in it?
If so, this should be fixed in a general way.



From Joerg-Cyril.Hoehle at t-systems.com  Thu Apr 15 06:51:54 2010
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Thu, 15 Apr 2010 13:51:54 +0200
Subject: mciseq: Prevent busy-wait while paused.
References: <47CC5ABB01651443A88DB8EC5B4D657B7402C1@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B74032C@S4DE8PSAANK.mitte.t-com.de>

Hi,

any comment on that patch? It's currently the bottommost in
source.winehq.org/patches hence may fall into the bitbucket anytime.

I had noticed that the MCI MIDI player would busy loop while paused
because of a while(xyz) ; statement therein.

Test it using these MCI commands
open c:\data\foo.mid alias m
play m
pause m

So I simply added a Sleep() and wrote:
>7 ms is arbitrary. It allows to sleep well yet be responsive enough
>so the app doesn't wait too long should the next command be MCI_Stop.
>For the ear, an even larger sleep would be good enough.

Sleep is a sort of stop gap until someone invents a
notification/setEvent/Resume patch or whatever would be TRT.

Regards,
 J?rg H?hle


From m.b.lankhorst at gmail.com  Thu Apr 15 07:00:31 2010
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Thu, 15 Apr 2010 14:00:31 +0200
Subject: mciseq: Prevent busy-wait while paused.
In-Reply-To: <47CC5ABB01651443A88DB8EC5B4D657B74032C@S4DE8PSAANK.mitte.t-com.de>
References: <47CC5ABB01651443A88DB8EC5B4D657B7402C1@S4DE8PSAANK.mitte.t-com.de>
	<47CC5ABB01651443A88DB8EC5B4D657B74032C@S4DE8PSAANK.mitte.t-com.de>
Message-ID: <r2zb130c85e1004150500x5f6a533cx853f846cb3fb42c@mail.gmail.com>

Hi Joerg,

2010/4/15  <Joerg-Cyril.Hoehle at t-systems.com>:
> Hi,
>
> any comment on that patch? It's currently the bottommost in
> source.winehq.org/patches hence may fall into the bitbucket anytime.
>
> I had noticed that the MCI MIDI player would busy loop while paused
> because of a while(xyz) ; statement therein.
>
> Test it using these MCI commands
> open c:\data\foo.mid alias m
> play m
> pause m
>
> So I simply added a Sleep() and wrote:
>>7 ms is arbitrary. It allows to sleep well yet be responsive enough
>>so the app doesn't wait too long should the next command be MCI_Stop.
>>For the ear, an even larger sleep would be good enough.

It would be better to signal an event object to wake up from sleep.

Cheers,
Maarten


From ehoover at mines.edu  Thu Apr 15 08:04:41 2010
From: ehoover at mines.edu (Erich Hoover)
Date: Thu, 15 Apr 2010 07:04:41 -0600
Subject: winex11: add support for 32-bit DDBs
In-Reply-To: <r2mc8485d471004150122u491a7733x97692ee117622f8c@mail.gmail.com>
References: <y2q4c1ac96d1004141836l99530494v7ff069c1cf02eb3b@mail.gmail.com>
	<r2mc8485d471004150122u491a7733x97692ee117622f8c@mail.gmail.com>
Message-ID: <k2n4c1ac96d1004150604k72e4febay63032214b31ef86e@mail.gmail.com>

On Thu, Apr 15, 2010 at 2:22 AM, Roderick Colenbrander <
thunderbird2k at gmail.com> wrote:

> I can't see the screenshot well but that's notepad? What display
> drivers are you using?
>
> Roderick
>
> On Thu, Apr 15, 2010 at 3:36 AM, Erich Hoover <ehoover at mines.edu> wrote:
> > I noticed a problem with the icons in Wine when alt+tabbing today.  After
> > doing a regression test it appears that commit
> > c29cf0591976f96c3adb30c3c3b6db59f4983251 results in pixmaps that do not
> > always display properly when alt+tabbing (see attached screenshot).
> >
>

That's the notepad window in the compiz alt+tab dialog (everything except
the window icon gets scaled).  The key feature is that in the bottom right
corner the icon for the window is really messed up (black with a few dots of
color).  It's also worth noting that the window icon does not display in the
gnome taskbar at all after this patch, just a generic "this program has no
icon" icon.  I'm using the nVidia driver version 185.18.36.

Erich Hoover
ehoover at mines.edu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100415/5fc3bd1f/attachment.htm>

From tijnema at gmail.com  Thu Apr 15 09:52:46 2010
From: tijnema at gmail.com (Matijn Woudt)
Date: Thu, 15 Apr 2010 16:52:46 +0200
Subject: HLSL Compiler and d3dcompiler_xx.dll
In-Reply-To: <EE589B96-C9C8-4FDD-B06F-826725107EED@gmx.at>
References: <z2kd8269d911004140408t39f76855u9e07677bbdf83c96@mail.gmail.com>
	<l2sd658b69e1004140644o685e9ef9oacacdbf1d46c7d46@mail.gmail.com>
	<3837E012-C476-46A9-8A3E-4FB6422C8C0A@gmx.at>
	<z2ud8269d911004140738w61adb843r114e2eee9a4509dc@mail.gmail.com>
	<m2xc8485d471004140751jd90d1c08hbe7bf0c5d2f9ff9a@mail.gmail.com>
	<i2ld8269d911004140819nd4922168ua0763014b9abc20c@mail.gmail.com>
	<t2sd658b69e1004141029w75ae3600uc27d2504be7fb5cd@mail.gmail.com>
	<r2xd8269d911004141048lefd263c2s18edd3085c98d58f@mail.gmail.com>
	<24C77209-B751-4E36-9C39-875CB66B6D50@gmail.com>
	<EE589B96-C9C8-4FDD-B06F-826725107EED@gmx.at>
Message-ID: <g2hd8269d911004150752yf7dbad8tfaecd29ea5df40ef@mail.gmail.com>

On Thu, Apr 15, 2010 at 11:23 AM, Stefan D?singer
<stefandoesinger at gmx.at> wrote:
>
> Am 14.04.2010 um 20:45 schrieb Jason Green:
>> FYI, we encountered a game a while back which used a few shaders that depended on being compiled with a particular version for d3dx9_##.dll. ?There was a compiler bug which the game engine knew about and accounted for. ?If you tried to use the compiled shader from a newer d3dx9_##.dll, then the rendering wouldn't look quite right on certain objects.
>>
>> So, there's one argument for identical bytecode compatibility, but it's likely that very few apps will exhibit behavior like this.
> I think it's only an argument that we may need some specific tests that check for identical bytecode. And by your description it sounds like the compiler bug can be detected by looking at the rendering output. I still think that having the majority of tests check the generated bytecode is a bad idea:
>
> * It will be hard to implement the same compiler result

As long as it is possible, I think we should do.

> * It will make our own optimizations impossible(the MS compiler is very good optimization wise, so that point is mostly moot)
> * It will be hard to maintain the tests when we're moving them to a newer MS compiler version

Tests should fail if a newer version of MS compiler is used and
different code is produced. Or, if you prefer, win_skip if version is
newer than what the tests expect.


> * There are things that can be translated into different bytecodes, and all are equally valid and optimal, like constants ordering.
>

Same as your first concern.


From julliard at winehq.org  Thu Apr 15 10:03:34 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 15 Apr 2010 17:03:34 +0200
Subject: ddraw: Do not restore the display mode from inside
	SetCooperativeLevel (resend)
In-Reply-To: <g2n103c33d11004150523ia006c19cu5fd3e2bb07d10195@mail.gmail.com>
	(Johan Gill's message of "Thu, 15 Apr 2010 14:23:50 +0200")
References: <g2n103c33d11004150523ia006c19cu5fd3e2bb07d10195@mail.gmail.com>
Message-ID: <878w8opxkp.fsf@wine.dyndns.org>

Johan Gill <johan.gill at gmail.com> writes:

>  dlls/ddraw/ddraw.c            |    3 ---
>  dlls/ddraw/tests/ddrawmodes.c |   25 +++++++++++++++++++++++++
>  2 files changed, 25 insertions(+), 3 deletions(-)

This causes the test to not restore the display mode properly on exit.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Thu Apr 15 10:49:03 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 15 Apr 2010 17:49:03 +0200
Subject: [1/1] wcmd/tests: Attrib tests (resend)
In-Reply-To: <1A46C96D-CEE9-4C32-A02C-AE569ED302F2@gmail.com> (Eleazar
	Galano's message of "Tue, 13 Apr 2010 11:57:18 -0700")
References: <1270190047.2605.16.camel@eg-laptop>
	<1A46C96D-CEE9-4C32-A02C-AE569ED302F2@gmail.com>
Message-ID: <87zl14ogwg.fsf@wine.dyndns.org>

Eleazar Galano <eg.galano at gmail.com> writes:

>> Dan Kegel is helping me get started with Wine development. To prepare
>> for modifications to the ATTRIB function of CMD.EXE, I have added test
>> cases for the current functionality of ATTRIB.

It seems to me this should go in programs/attrib. Also it should test
that the attributes actually changed.

-- 
Alexandre Julliard
julliard at winehq.org


From ehoover at mines.edu  Thu Apr 15 11:08:51 2010
From: ehoover at mines.edu (Erich Hoover)
Date: Thu, 15 Apr 2010 10:08:51 -0600
Subject: winex11: add support for 32-bit DDBs
In-Reply-To: <k2n4c1ac96d1004150604k72e4febay63032214b31ef86e@mail.gmail.com>
References: <y2q4c1ac96d1004141836l99530494v7ff069c1cf02eb3b@mail.gmail.com>
	<r2mc8485d471004150122u491a7733x97692ee117622f8c@mail.gmail.com>
	<k2n4c1ac96d1004150604k72e4febay63032214b31ef86e@mail.gmail.com>
Message-ID: <o2i4c1ac96d1004150908vf5b52348q157ada9b726f3a91@mail.gmail.com>

On Thu, Apr 15, 2010 at 7:04 AM, Erich Hoover <ehoover at mines.edu> wrote:

> On Thu, Apr 15, 2010 at 2:22 AM, Roderick Colenbrander <
> thunderbird2k at gmail.com> wrote:
>
>> I can't see the screenshot well but that's notepad? What display
>> drivers are you using?
>>
>> Roderick
>>
>> On Thu, Apr 15, 2010 at 3:36 AM, Erich Hoover <ehoover at mines.edu> wrote:
>> > I noticed a problem with the icons in Wine when alt+tabbing today.
>> After
>> > doing a regression test it appears that commit
>> > c29cf0591976f96c3adb30c3c3b6db59f4983251 results in pixmaps that do not
>> > always display properly when alt+tabbing (see attached screenshot).
>> >
>>
>
> That's the notepad window in the compiz alt+tab dialog (everything except
> the window icon gets scaled).  The key feature is that in the bottom right
> corner the icon for the window is really messed up (black with a few dots of
> color).  It's also worth noting that the window icon does not display in the
> gnome taskbar at all after this patch, just a generic "this program has no
> icon" icon.  I'm using the nVidia driver version 185.18.36.
>

I looked into this a little and it appears like it's necessary to use the
extended window manager hint _NET_WM_ICON to use 32-bit window icons.  I've
whipped up a small patch (attached) that does this and it fixes the problem
I'm seeing (both with alt+tab and in the gnome taskbar), does this solution
appear acceptable?

Erich Hoover
ehoover at mines.edu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100415/ed26fc94/attachment.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-winex11.drv-Set-the-_NET_WM_ICON-for-32-bit-window-i.patch
Type: text/x-diff
Size: 2995 bytes
Desc: not available
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100415/ed26fc94/attachment.patch>

From trisk at forkgnu.org  Thu Apr 15 13:33:09 2010
From: trisk at forkgnu.org (Albert Lee)
Date: Thu, 15 Apr 2010 14:33:09 -0400
Subject: [PATCH] RFC: C99: rewrote some extern inline to static inline
In-Reply-To: <1271325392-13454-1-git-send-email-yann@droneaud.fr>
References: <y2pb6bb06271004140938yd71dfc1aode7422193786540@mail.gmail.com>
	<r2lb6bb06271004131200gc9e93e05z523430264437ffc2@mail.gmail.com>
	<87ochmoycy.fsf@wine.dyndns.org>
	<1271325392-13454-1-git-send-email-yann@droneaud.fr>
Message-ID: <f66e6cdccd862db801d96474fe7fc134@quasarnet.org>

On Thu, 15 Apr 2010 11:56:32 +0200, Yann Droneaud <yann at droneaud.fr>
wrote:
> In order to build with CLANG with default arguments, extern inline
> declaration
> must be changed.
> 
> By default CLANG uses C99's "extern inline" semantic which is like
> gcc's "inline", and not the expected gcc's "extern inline" behavor.
> 
> Additionnaly LLVM/CLANG don't support multiple function definitions with
> different linkage in the same module (source file) : so it's not
> possible to have a static inline definition in a header included in a
> source file with a externally visible function of the same name.
> 

C99's inline differs from GNU C's in that it will never cause a function
definition to be emitted, so you should be able to replace GNU C's "extern
inline" with plain inline.

This has an advantage over static inline if you need to define an
externally visible function, since you can avoid the copying the definition
from the header to a source file by making sure the translation unit
declares the function as C99 extern inline before including the inline
definition.

> This patch convert extern inline to static inline, so 
> embedded functions are not globally visible.
> 
> This could be a problem if those symbols are needed. But currently,
> I'm not able to give you any status: i was only able to run "cmd.exe",
> before going further with LLVM/CLANG. I'm fighting with LLVM/CLANG bug
> instead.
> 
> If they are so symbols needed or if the binaries size grow to much,
> the "extern inline" attribute will have to be converted to a macro,
> expanded to "extern inline" with gcc in default behavor, and "inline"
with
> a C99 compatible compiler.
> 

With C99 static inline, there should be no function definitions emitted so
the size should not be much different.

> See for example how this work in GMP:
> http://gmplib.org:8000/gmp/file/da5903b6e386/gmp-h.in#l414
> 

Thanks for helping Wine get closer to C standards conformance!

-Albert



From frederic.delanoy at gmail.com  Thu Apr 15 14:46:25 2010
From: frederic.delanoy at gmail.com (=?UTF-8?B?RnLDqWTDqXJpYyBEZWxhbm95?=)
Date: Thu, 15 Apr 2010 21:46:25 +0200
Subject: loader: Fix French translation of wine manpage (resent)
In-Reply-To: <4BC76AD6.50201@gmail.com>
References: <4BC76AD6.50201@gmail.com>
Message-ID: <v2r779619571004151246kaf4f67d8mfbb79205b10e2b27@mail.gmail.com>

Hi.

Could someone please tell me why this patch was silently discarded ?
Is there some something awfully wrong in the
changes in tools/Makefile.in ?

Or some other trivial mistake ?

Fr?d?ric


From paul.vriens.wine at gmail.com  Fri Apr 16 01:57:39 2010
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Fri, 16 Apr 2010 08:57:39 +0200
Subject: [PATCH 2/8] urlmon/tests: CoInternetCreateZoneManager not present
	on W95B
In-Reply-To: <1271370029-6372-1-git-send-email-wine.dev@web.de>
References: <1271370029-6372-1-git-send-email-wine.dev@web.de>
Message-ID: <4BC80A63.90002@gmail.com>

On 04/16/2010 12:20 AM, Detlef Riekenberg wrote:
> ---
>   dlls/urlmon/tests/sec_mgr.c |   29 +++++++++++++++++++++--------
>   1 files changed, 21 insertions(+), 8 deletions(-)
>

Hi Detlef,

After this patch none of the tests are actually run on W95B and we have 
loads of win_skip's.

Wouldn't it be better to just check for one (or all) and bail out with a 
(only one) win_skip()? I guess if one is not present, none are?

-- 
Cheers,

Paul.


From thunderbird2k at gmail.com  Fri Apr 16 03:54:31 2010
From: thunderbird2k at gmail.com (Roderick Colenbrander)
Date: Fri, 16 Apr 2010 10:54:31 +0200
Subject: [PATCH 3/4] wined3d: Separate AMD Radeon HD2300 from other 
	HD2xxx/HD3xxx GPUs since it is D3D9 instead of D3D10.
In-Reply-To: <1271400583-5974-3-git-send-email-thunderbird2k@gmail.com>
References: <1271400583-5974-1-git-send-email-thunderbird2k@gmail.com>
	<1271400583-5974-2-git-send-email-thunderbird2k@gmail.com>
	<1271400583-5974-3-git-send-email-thunderbird2k@gmail.com>
Message-ID: <u2jc8485d471004160154o73259d08o409fe8f6e0443fd4@mail.gmail.com>

Obviously this patch and the same for 4/4 can be dropped. I'm still a
bit new to git send-email and my out directory wasn't empty, so it
picked these two up.

Roderick

On Fri, Apr 16, 2010 at 8:49 AM, Roderick Colenbrander
<thunderbird2k at gmail.com> wrote:
> Just some clever AMD rebranding for China I believe.
> ---
> ?dlls/wined3d/directx.c ? ? ? ? | ? 30 ++++++++++++++++++------------
> ?dlls/wined3d/wined3d_private.h | ? ?2 +-
> ?2 files changed, 19 insertions(+), 13 deletions(-)
>
> diff --git a/dlls/wined3d/directx.c b/dlls/wined3d/directx.c
> index 6498859..7e22dbc 100644
> --- a/dlls/wined3d/directx.c
> +++ b/dlls/wined3d/directx.c
> @@ -1021,7 +1021,7 @@ static const struct driver_version_information driver_version_table[] =
> ? ? {HW_VENDOR_ATI, ? ? ? ?CARD_ATI_RADEON_9500, ? ? ? ? ? "ATI Radeon 9500", ? ? ? ? ? ? ? ? ?14, 10, 6764 ? ?},
> ? ? {HW_VENDOR_ATI, ? ? ? ?CARD_ATI_RADEON_X700, ? ? ? ? ? "ATI Radeon X700 SE", ? ? ? ? ? ? ? 14, 10, 6764 ? ?},
> ? ? {HW_VENDOR_ATI, ? ? ? ?CARD_ATI_RADEON_X1600, ? ? ? ? ?"ATI Radeon X1600 Series", ? ? ? ? ?14, 10, 6764 ? ?},
> - ? ?{HW_VENDOR_ATI, ? ? ? ?CARD_ATI_RADEON_HD2300, ? ? ? ? "ATI Mobility Radeon HD 2300", ? ? ?14, 10, 6764 ? ?},
> + ? ?{HW_VENDOR_ATI, ? ? ? ?CARD_ATI_RADEON_HD2350, ? ? ? ? "ATI Mobility Radeon HD 2350", ? ? ?14, 10, 6764 ? ?},
> ? ? {HW_VENDOR_ATI, ? ? ? ?CARD_ATI_RADEON_HD2600, ? ? ? ? "ATI Mobility Radeon HD 2600", ? ? ?14, 10, 6764 ? ?},
> ? ? {HW_VENDOR_ATI, ? ? ? ?CARD_ATI_RADEON_HD2900, ? ? ? ? "ATI Radeon HD 2900 XT", ? ? ? ? ? ?14, 10, 6764 ? ?},
> ? ? {HW_VENDOR_ATI, ? ? ? ?CARD_ATI_RADEON_HD4350, ? ? ? ? "ATI Radeon HD 4350", ? ? ? ? ? ? ? 14, 10, 6764 ? ?},
> @@ -1581,16 +1581,17 @@ static enum wined3d_pci_device select_card_ati_binary(const struct wined3d_gl_in
> ? ? ? ? ? ? return CARD_ATI_RADEON_HD2600;
> ? ? ? ? }
>
> - ? ? ? ?/* Radeon R6xx HD2300/HD2400/HD3400 - lowend */
> - ? ? ? ?if (strstr(gl_renderer, "HD 2300")
> + ? ? ? ?/* Radeon R6xx HD2350/HD2400/HD3400 - lowend
> + ? ? ? ? * Note HD2300=DX9, HD2350=DX10 */
> + ? ? ? ?if (strstr(gl_renderer, "HD 2350")
> ? ? ? ? ? ? ? ? || strstr(gl_renderer, "HD 2400")
> ? ? ? ? ? ? ? ? || strstr(gl_renderer, "HD 3470")
> ? ? ? ? ? ? ? ? || strstr(gl_renderer, "HD 3450")
> ? ? ? ? ? ? ? ? || strstr(gl_renderer, "HD 3430")
> ? ? ? ? ? ? ? ? || strstr(gl_renderer, "HD 3400"))
> ? ? ? ? {
> - ? ? ? ? ? ?*vidmem = 128; /* HD2300 uses at least 128MB, HD2400 uses 256MB */
> - ? ? ? ? ? ?return CARD_ATI_RADEON_HD2300;
> + ? ? ? ? ? ?*vidmem = 256; /* HD2350/2400 use 256MB, HD34xx use 256-512MB */
> + ? ? ? ? ? ?return CARD_ATI_RADEON_HD2350;
> ? ? ? ? }
>
> ? ? ? ? /* Radeon R6xx/R7xx integrated */
> @@ -1613,14 +1614,19 @@ static enum wined3d_pci_device select_card_ati_binary(const struct wined3d_gl_in
> ? ? ? ? ? ? return CARD_ATI_RADEON_X1600;
> ? ? ? ? }
>
> - ? ? ? ?/* Radeon R4xx + X1300/X1400/X1450/X1550/X2300 (lowend R5xx) */
> + ? ? ? ?/* Radeon R4xx + X1300/X1400/X1450/X1550/X2300/X2500/HD2300 (lowend R5xx)
> + ? ? ? ? * Note X2300/X2500/HD2300 are R5xx GPUs with a 2xxx naming but they are still DX9-only */
> ? ? ? ? if (strstr(gl_renderer, "X700")
> ? ? ? ? ? ? ? ? || strstr(gl_renderer, "X800")
> ? ? ? ? ? ? ? ? || strstr(gl_renderer, "X850")
> ? ? ? ? ? ? ? ? || strstr(gl_renderer, "X1300")
> ? ? ? ? ? ? ? ? || strstr(gl_renderer, "X1400")
> ? ? ? ? ? ? ? ? || strstr(gl_renderer, "X1450")
> - ? ? ? ? ? ? ? ?|| strstr(gl_renderer, "X1550"))
> + ? ? ? ? ? ? ? ?|| strstr(gl_renderer, "X1550")
> + ? ? ? ? ? ? ? ?|| strstr(gl_renderer, "X2300")
> + ? ? ? ? ? ? ? ?|| strstr(gl_renderer, "X2500")
> + ? ? ? ? ? ? ? ?|| strstr(gl_renderer, "HD 2300")
> + ? ? ? ? ? ? ? ?)
> ? ? ? ? {
> ? ? ? ? ? ? *vidmem = 128; /* x700/x8*0 use 128-256MB, >=x1300 128-512MB */
> ? ? ? ? ? ? return CARD_ATI_RADEON_X700;
> @@ -1737,12 +1743,12 @@ static enum wined3d_pci_device select_card_ati_mesa(const struct wined3d_gl_info
> ? ? ? ? ? ? return CARD_ATI_RADEON_HD2600;
> ? ? ? ? }
>
> - ? ? ? ?/* Radeon R6xx HD2300/HD2400/HD3400 - lowend */
> + ? ? ? ?/* Radeon R6xx HD2350/HD2400/HD3400 - lowend */
> ? ? ? ? if (strstr(gl_renderer, "RV610")
> ? ? ? ? ? ? ? ? || strstr(gl_renderer, "RV620"))
> ? ? ? ? {
> - ? ? ? ? ? ?*vidmem = 128; /* HD2300 uses at least 128MB, HD2400 uses 256MB */
> - ? ? ? ? ? ?return CARD_ATI_RADEON_HD2300;
> + ? ? ? ? ? ?*vidmem = 256; /* HD2350/2400 use 256MB, HD34xx use 256-512MB */
> + ? ? ? ? ? ?return CARD_ATI_RADEON_HD2350;
> ? ? ? ? }
>
> ? ? ? ? /* Radeon R6xx/R7xx integrated */
> @@ -1860,8 +1866,8 @@ static enum wined3d_pci_device select_card_ati_mesa(const struct wined3d_gl_info
> ? ? ? ? if (strstr(gl_renderer, "(RV610")
> ? ? ? ? ? ? ? ? || strstr(gl_renderer, "(RV620"))
> ? ? ? ? {
> - ? ? ? ? ? ?*vidmem = 128; /* HD2300 uses at least 128MB, HD2400 uses 256MB */
> - ? ? ? ? ? ?return CARD_ATI_RADEON_HD2300;
> + ? ? ? ? ? ?*vidmem = 256; /* HD2350/2400 use 256MB, HD34xx use 256-512MB */
> + ? ? ? ? ? ?return CARD_ATI_RADEON_HD2350;
> ? ? ? ? }
>
> ? ? ? ? /* Radeon R6xx/R7xx integrated */
> diff --git a/dlls/wined3d/wined3d_private.h b/dlls/wined3d/wined3d_private.h
> index 4652be5..53200ce 100644
> --- a/dlls/wined3d/wined3d_private.h
> +++ b/dlls/wined3d/wined3d_private.h
> @@ -1301,7 +1301,7 @@ enum wined3d_pci_device
> ? ? CARD_ATI_RADEON_XPRESS_200M ? ? = 0x5955,
> ? ? CARD_ATI_RADEON_X700 ? ? ? ? ? ?= 0x5e4c,
> ? ? CARD_ATI_RADEON_X1600 ? ? ? ? ? = 0x71c2,
> - ? ?CARD_ATI_RADEON_HD2300 ? ? ? ? ?= 0x7210,
> + ? ?CARD_ATI_RADEON_HD2350 ? ? ? ? ?= 0x94c7,
> ? ? CARD_ATI_RADEON_HD2600 ? ? ? ? ?= 0x9581,
> ? ? CARD_ATI_RADEON_HD2900 ? ? ? ? ?= 0x9400,
> ? ? CARD_ATI_RADEON_HD3200 ? ? ? ? ?= 0x9620,
> --
> 1.6.3.3
>
>


From Joerg-Cyril.Hoehle at t-systems.com  Fri Apr 16 08:19:22 2010
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Fri, 16 Apr 2010 15:19:22 +0200
Subject: winmm: Remove timeGetTime.
References: <47CC5ABB01651443A88DB8EC5B4D657B7402C1@S4DE8PSAANK.mitte.t-com.de><47CC5ABB01651443A88DB8EC5B4D657B74032C@S4DE8PSAANK.mitte.t-com.de>
	<r2zb130c85e1004150500x5f6a533cx853f846cb3fb42c@mail.gmail.com>
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B740330@S4DE8PSAANK.mitte.t-com.de>

Hi,

Maarten recently mapped winmm:timeGetTime to kernel32.GetTickCount
This rang a bell and now I found again the article where I read about it:

http://blogs.msdn.com/larryosterman/archive/2009/09/02/what-s-the-difference-between-gettickcount-and-timegettime.aspx

"So why are all these multimedia APIs using timeGetTime and not GetTickCount
since the two APIs apparently return the same value? ...
The answer is that they don?t."

I cannot judge whether what's described there applies to Wine's timing.
However the listed timings prove both values are different.

FWIW, I've determined long ago that timer increments in MS suffer
from a 15.625ms granularity.  This affects almost all applications
in MS-Windows.  For instance, JMeter(Java) always returns times that
are multiple of this value, plus/minus rounding.  It will tell you
jobs took 15, 16, 31, 32, 46 or 47ms etc.  Never 5, 12, 26 or 30ms!
You can't use it to time short jobs.
I've seen the same values in many other apps (not just Java) and
several versions of MS-Windows.
Heck, 46 and 47ms are even shown in the above URL in the dTicks column
(as well as the next pair: 62 and 63ms).

Whatever you measure, you'll encounter this 15.625ms increment.
Presumably, the high performance counters are not affected.  But
few apps seem to use these.

What's 15.625ms?  Exactly 64 ticks per second
... and the linearisation of all returned values.

If you GetTickCount something that truly takes 29ms multiple times,
you'll observe 31/32 deltas much more often than 15/16. (As the article
says: "note that the deltas average to 55ms").

Regards,
 J?rg H?hle


From julliard at winehq.org  Fri Apr 16 09:33:20 2010
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 16 Apr 2010 16:33:20 +0200
Subject: [PATCH] ntdll: split out sort and handle win64 cdecl
In-Reply-To: Marcus Meissner's message of "Thu\, 15 Apr 2010 23\:43\:36 +0200"
Message-ID: <87tyrblb67.fsf@wine.dyndns.org>

Marcus Meissner <meissner at suse.de> writes:

> qsort() calls a cdecl routine, but Win64 cdecl is sadly
> not UNIX cdecl... So we need a wrapper.
>
> Hope this kind of ifdef magic is acceptable, I don't want
> it for win32.

That looks quite inefficient, not to mention not thread-safe. It would
be better to reimplement these functions, that's not hard.

-- 
Alexandre Julliard
julliard at winehq.org


From Joerg-Cyril.Hoehle at t-systems.com  Fri Apr 16 12:11:01 2010
From: Joerg-Cyril.Hoehle at t-systems.com (Joerg-Cyril.Hoehle at t-systems.com)
Date: Fri, 16 Apr 2010 19:11:01 +0200
Subject: ICM tests and top-down DIB
Message-ID: <47CC5ABB01651443A88DB8EC5B4D657B740335@S4DE8PSAANK.mitte.t-com.de>

Hi,

any suggestions about how could one reasonably test the ICM codecs?
I found no test at all in Wine (but the 4 Austin and I once wrote).

I was considering adding the ability to deal with a negative
biHeight values (native amstream seems to use this to work around bug
#17893) but I feel uncomfortable at touching the always
sensitive graphics area without good tests to start with.
Upside-down support in the codecs could start a landslide in other places.

Negative biHeight indicates top-down bitmaps, see
http://msdn.microsoft.com/en-us/library/dd183376.aspx

Grepping through dlls/* revealed only few places that deal with them.

Thanks for your help,
 J?rg H?hle.


From nerv at dawncrow.de  Fri Apr 16 15:22:33 2010
From: nerv at dawncrow.de (=?ISO-8859-15?Q?Andr=E9_Hentschel?=)
Date: Fri, 16 Apr 2010 22:22:33 +0200
Subject: FYI: Wine is used for TeamViewer
Message-ID: <4BC8C709.3050108@dawncrow.de>

Hey,
you might take that as spam, but i just saw that Wine seems to be used for the Linux Version of http://www.teamviewer.com
I did not yet had a look if they use wine64 for their 64-bit packages...
-- 

Best Regards, Andr? Hentschel


From marcus at jet.franken.de  Fri Apr 16 16:03:17 2010
From: marcus at jet.franken.de (Marcus Meissner)
Date: Fri, 16 Apr 2010 23:03:17 +0200
Subject: winegcc: Fix compiling of 32-bit Winelib Apps on shared
	32/64-bit setups
In-Reply-To: <4BC8CDD1.7020308@dawncrow.de>
References: <4BC8CDD1.7020308@dawncrow.de>
Message-ID: <20100416210317.GA5403@galeere.jet.franken.de>

On Fri, Apr 16, 2010 at 10:51:29PM +0200, Andr? Hentschel wrote:
> ---
>  tools/winegcc/winegcc.c |    8 ++++++++
>  1 files changed, 8 insertions(+), 0 deletions(-)
> 
> diff --git a/tools/winegcc/winegcc.c b/tools/winegcc/winegcc.c
> index 7023ff4..f780a69 100644
> --- a/tools/winegcc/winegcc.c
> +++ b/tools/winegcc/winegcc.c
> @@ -1252,6 +1252,14 @@ int main(int argc, char **argv)
>  			opts.unicode_app = 1;
>  		    else if (strcmp("-m32", argv[i]) == 0)
>                      {
> +                        if (opts.target_cpu == CPU_x86_64)
> +                        {
> +                            const char *stdlib32path[] = { "/usr/lib32/wine", "/usr/local/lib32/wine", "/lib32/wine" };

lib32 is almost never used in the Linux distros though

e.g. for SUSE:
/usr/lib is the 32bit path on x86, ppc, s390
/usr/lib64 the 64bit path  on x86_64, ppc64, s390x

Just ia64 is an exception and has /usr/lib (and the compat libs somewhere weird).

Ciao, Marcus


From cdavis at mymail.mines.edu  Fri Apr 16 16:04:02 2010
From: cdavis at mymail.mines.edu (Charles Davis)
Date: Fri, 16 Apr 2010 15:04:02 -0600
Subject: winegcc: Fix compiling of 32-bit Winelib Apps on shared 32/64-bit
	setups
In-Reply-To: <4BC8CDD1.7020308@dawncrow.de>
References: <4BC8CDD1.7020308@dawncrow.de>
Message-ID: <4BC8D0C2.70609@mymail.mines.edu>

On 4/16/10 2:51 PM, Andr? Hentschel wrote:
> ---
>  tools/winegcc/winegcc.c |    8 ++++++++
>  1 files changed, 8 insertions(+), 0 deletions(-)
> 
> diff --git a/tools/winegcc/winegcc.c b/tools/winegcc/winegcc.c
> index 7023ff4..f780a69 100644
> --- a/tools/winegcc/winegcc.c
> +++ b/tools/winegcc/winegcc.c
> @@ -1252,6 +1252,14 @@ int main(int argc, char **argv)
>  			opts.unicode_app = 1;
>  		    else if (strcmp("-m32", argv[i]) == 0)
>                      {
> +                        if (opts.target_cpu == CPU_x86_64)
> +                        {
> +                            const char *stdlib32path[] = { "/usr/lib32/wine", "/usr/local/lib32/wine", "/lib32/wine" };
That's great for Linux, FreeBSD, etc., but in a world of universal
binaries (read: Mac OS X), this ain't gonna fly. I'm pretty sure that
when 64-bit Wine support does come to Mac OS X, people are going to want
to build it universal (i.e. 32-bit and 64-bit binaries in the same
file); I know I do.

Chip



From eric.pouech at orange.fr  Sat Apr 17 01:52:38 2010
From: eric.pouech at orange.fr (Eric Pouech)
Date: Sat, 17 Apr 2010 08:52:38 +0200
Subject: Francois Gouget : winedbg: Fix compilation with gcc 2. 95 and
	non-GNU	compilers.
In-Reply-To: <E1NwGPW-0006pO-0Y@wine.codeweavers.com>
References: <E1NwGPW-0006pO-0Y@wine.codeweavers.com>
Message-ID: <4BC95AB6.9050007@orange.fr>

Alexandre Julliard a ?crit :
> Module: wine
> Branch: master
> Commit: 51dfd9adb11885daec878737f18f89fb05c1516c
> URL:    http://source.winehq.org/git/wine.git/?a=commit;h=51dfd9adb11885daec878737f18f89fb05c1516c
>
> Author: Francois Gouget <fgouget at free.fr>
> Date:   Sat Mar 27 16:55:27 2010 +0100
>
> winedbg: Fix compilation with gcc 2.95 and non-GNU compilers.
>   
Fran?ois,
what was the exact issue here ? I guess that the ; at the end of the 
attribute definition for GNUCC compiler was missing for the non gnu C 
compilers ?
your fix is wrong as dbg_printf doesn't take a va_list as argument 
(you'd want dbg_vprintf which doesn't exist)
does the attached patch work in your configuration ?

A+

-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: err
URL: <http://www.winehq.org/pipermail/wine-devel/attachments/20100417/c5300a39/attachment.asc>

From ggeldorp at vmware.com  Sat Apr 17 02:36:17 2010
From: ggeldorp at vmware.com (Greg Geldorp)
Date: Sat, 17 Apr 2010 00:36:17 -0700
Subject: usp10/tests: add tests for CR and LF chars and remove some
	trailing white space 
Message-ID: <1C77FC3365DBD149802E0F5381EBE2C9024AD5E11C@EXCH-MBX-4.vmware.com>

Hi,

While running your changed tests on Windows, I think I found new failures.
Being a bot and all I'm not very good at pattern recognition, so I might be
wrong, but could you please double-check?
Full results can be found at
http://testbot.winehq.org/JobDetails.pl?Key=1506

Your paranoid android.


=== W98SE (Windows 98 Second Edition) ===
usp10.c:613: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 12 (14)nusp10.c:616: Test failed: Start pos [3] not = 12 (14) or end [4] pos not = 13 (11)
usp10.c:619: Test failed: Start pos [4] not = 13 (11) or end [5] pos not = 16 (14), cInChars = 14
usp10.c:643: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 14 (12), cInChars = 16

=== WNT4WSSP6 (NT4 Workstation SP6 (English, IE2)) ===
usp10.c:613: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 12 (14)nusp10.c:616: Test failed: Start pos [3] not = 12 (14) or end [4] pos not = 13 (11)
usp10.c:619: Test failed: Start pos [4] not = 13 (11) or end [5] pos not = 16 (14), cInChars = 14
usp10.c:643: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 14 (12), cInChars = 16

=== W2KPROSP4 (Windows 2000 Professional SP4) ===
usp10.c:613: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 12 (14)nusp10.c:616: Test failed: Start pos [3] not = 12 (14) or end [4] pos not = 13 (11)
usp10.c:619: Test failed: Start pos [4] not = 13 (11) or end [5] pos not = 16 (14), cInChars = 14
usp10.c:643: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 14 (12), cInChars = 16

=== WXPPROSP3 (XP Professional SP3 (English, IE6)) ===
usp10.c:613: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 12 (14)nusp10.c:616: Test failed: Start pos [3] not = 12 (14) or end [4] pos not = 13 (11)
usp10.c:619: Test failed: Start pos [4] not = 13 (11) or end [5] pos not = 16 (14), cInChars = 14
usp10.c:643: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 14 (12), cInChars = 16

=== W2K3R2SESP2 (Server 2003 R2 Standard Edition SP2) ===
usp10.c:613: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 12 (14)nusp10.c:616: Test failed: Start pos [3] not = 12 (14) or end [4] pos not = 13 (11)
usp10.c:619: Test failed: Start pos [4] not = 13 (11) or end [5] pos not = 16 (14), cInChars = 14
usp10.c:643: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 14 (12), cInChars = 16

=== WVISTAADM (Windows Vista (English, IE7)) ===
usp10.c:613: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 12 (14)nusp10.c:616: Test failed: Start pos [3] not = 12 (14) or end [4] pos not = 13 (11)
usp10.c:619: Test failed: Start pos [4] not = 13 (11) or end [5] pos not = 16 (14), cInChars = 14
usp10.c:643: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 14 (12), cInChars = 16

=== W2K8SE (Server 2008 Standard Edition) ===
usp10.c:613: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 12 (14)nusp10.c:616: Test failed: Start pos [3] not = 12 (14) or end [4] pos not = 13 (11)
usp10.c:619: Test failed: Start pos [4] not = 13 (11) or end [5] pos not = 16 (14), cInChars = 14
usp10.c:643: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 14 (12), cInChars = 16

=== W7PRO (Windows 7 Professional (English, IE8)) ===
usp10.c:613: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 12 (14)nusp10.c:616: Test failed: Start pos [3] not = 12 (14) or end [4] pos not = 13 (11)
usp10.c:619: Test failed: Start pos [4] not = 13 (11) or end [5] pos not = 16 (14), cInChars = 14
usp10.c:643: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 14 (12), cInChars = 16

=== W7PROX64 (Windows 7 Professional 64 bit) ===
usp10.c:613: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 12 (14)nusp10.c:616: Test failed: Start pos [3] not = 12 (14) or end [4] pos not = 13 (11)
usp10.c:619: Test failed: Start pos [4] not = 13 (11) or end [5] pos not = 16 (14), cInChars = 14
usp10.c:643: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 14 (12), cInChars = 16

=== W7PROX64 (Windows 7 Professional 64 bit) ===
usp10.c:613: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 12 (14)nusp10.c:616: Test failed: Start pos [3] not = 12 (14) or end [4] pos not = 13 (11)
usp10.c:619: Test failed: Start pos [4] not = 13 (11) or end [5] pos not = 16 (14), cInChars = 14
usp10.c:643: Test failed: Start pos [2] not = 11 (11) or end [3] pos not = 14 (12), cInChars = 16



From hintak_leung at yahoo.co.uk  Fri Apr 16 17:47:21 2010
From: hintak_leung at yahoo.co.uk (Hin-Tak Leung)
Date: Fri, 16 Apr 2010 22:47:21 +0000 (GMT)
Subject: winegcc: Fix compiling of 32-bit Winelib Apps on shared 32/64-bit
	setups
In-Reply-To: <20100416210317.GA5403@galeere.jet.franken.de>
Message-ID: <382901.1408.qm@web23103.mail.ird.yahoo.com>

--- On Fri, 16/4/10, Marcus Meissner <marcus at jet.franken.de> wrote:

> On Fri, Apr 16, 2010 at 10:51:29PM
> +0200, Andr? Hentschel wrote:
> > ---
> >  tools/winegcc/winegcc.c |    8
> ++++++++
> >  1 files changed, 8 insertions(+), 0
> deletions(-)
> > 
> > diff --git a/tools/winegcc/winegcc.c
> b/tools/winegcc/winegcc.c
> > index 7023ff4..f780a69 100644
> > --- a/tools/winegcc/winegcc.c
> > +++ b/tools/winegcc/winegcc.c
> > @@ -1252,6 +1252,14 @@ int main(int argc, char
> **argv)
> >         
>     opts.unicode_app = 1;
> >           
>   else if (strcmp("-m32", argv[i]) == 0)
> >               
>       {
> > +             
>           if (opts.target_cpu ==
> CPU_x86_64)
> > +             
>           {
> > +             
>               const char
> *stdlib32path[] = { "/usr/lib32/wine",
> "/usr/local/lib32/wine", "/lib32/wine" };
> 
> lib32 is almost never used in the Linux distros though

I think I read it somewhere that it is a debian-ism. on x86_64 debian, 64-bits libraries  are in /lib, and 32-bits are in /lib32 .


> 
> e.g. for SUSE:
> /usr/lib is the 32bit path on x86, ppc, s390
> /usr/lib64 the 64bit path  on x86_64, ppc64, s390x
> 
> Just ia64 is an exception and has /usr/lib (and the compat
> libs somewhere weird).
> 
> Ciao, Marcus
> 
> 
> 


      


