From wine-devel at kievinfo.com  Fri Aug  1 00:10:32 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Thu, 31 Jul 2008 23:10:32 -0600
Subject: dinput: the DIK_ keycode is not the same as the scancode.
In-Reply-To: <4891F6C6.2050708@codeweavers.com>
References: <488DD4FF.70202@codeweavers.com> <488E7C66.9090000@kievinfo.com>	
	<48908507.7020202@codeweavers.com> <48910355.6010109@kievinfo.com>
	<1217487182.27965.24.camel@hermes2.karcher.local>
	<4891AB23.1050805@codeweavers.com> <4891BF51.3060006@kievinfo.com>
	<4891C09D.5070000@codeweavers.com>
	<4891F6C6.2050708@codeweavers.com>
Message-ID: <48929AC8.9000809@kievinfo.com>

Please bottom post on this ML.

Aric Stewart wrote:
 > Here is a revised patch which builds the scancode->DIK table on
 > initialization making no xserver round trips required on lookup.
 >
 > How does this look?
 >
 > -aric
 >
 > Aric Stewart wrote:
 >> Yes, I have verified those vkeys in windows.
 >> the VK_OEM_* keys are specificaly VK codes that vary from keyboard to
 >> keyboard. VK_OEM_3 is just one example.
 >>
 >> -aric
 >>
 >> Vitaliy Margolen wrote:
 >>> Aric Stewart wrote:
 >>>> vkey codes similarly do not produce a clean 1 to 1 correspondance.
 >>>> the '@' key (0x1a) is vkey (VK_OEM_3)  which is the vkey of the '`'
 >>>> key on the us keyboard.
 >>> This is needs to be fixed in x11drv then. Not in dinput. Have you
 >>> verified what v_keys you getting from windows for these keys?
 >>>
 >>> Vitaliy.
 >>>
 >>


Few problems with your patch:

> +    if (c && c >31 && c < 96)
Checking for c != 0 is redundant here.

> -    dik_code = hook->scanCode & 0xff;
> +    dik_code = This->ScanCodemap[hook->scanCode];
Scan code can be larger then 256 so "& 0xff" is really necessary.

> +    BYTE ScanCodemap[WINE_DINPUT_KEYBOARD_MAX_KEYS];
You should make this array static and initialize it only once per process

> +static int map_dik_code(DWORD scanCode)
> +{
> +    int out_code = 0;
> +    static const int asciiCodes[] =
> +        {/*32*/ DIK_SPACE,0,0,0,0,0,0,DIK_APOSTROPHE,0,0,0,0, DIK_COMMA,       /*44*/ \
Please rearrange array to have some-what reasonable and same number of 
elements in each line, like 10 (or 5, 8).

> +        newDevice->ScanCodemap[i] = map_dik_code(i);
Please stay consistent with types. If it's a BYTE then you should return 
BYTE from the function.

Vitaliy.




From julliard at winehq.org  Fri Aug  1 02:35:05 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 01 Aug 2008 09:35:05 +0200
Subject: dinput: the DIK_ keycode is not the same as the scancode.
In-Reply-To: <4891AB23.1050805@codeweavers.com> (Aric Stewart's message of
	"Thu, 31 Jul 2008 07:08:03 -0500")
References: <488DD4FF.70202@codeweavers.com> <488E7C66.9090000@kievinfo.com>
	<48908507.7020202@codeweavers.com> <48910355.6010109@kievinfo.com>
	<1217487182.27965.24.camel@hermes2.karcher.local>
	<4891AB23.1050805@codeweavers.com>
Message-ID: <87vdylchna.fsf@wine.dyndns.org>

Aric Stewart <aric at codeweavers.com> writes:

> I like Michael's  idea of initializing this lookup array on 
> initialization of the keyboard. Then we only have to worry about it if 
> the user switches keyboard layouts mid program and since last i looked 
> wine does not support that anyway we would be ok.

Wine does support dynamic keyboard changes, so you'd need to refresh the
mapping at that point. I doubt it's worth the trouble.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Aug  1 02:49:17 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 01 Aug 2008 09:49:17 +0200
Subject: [1/7] WineD3D: use the window size as drawable size
In-Reply-To: <00d701c8f31e$b0db9c50$1292d4f0$@com> ("Stefan =?utf-8?Q?D?=
	=?utf-8?Q?=C3=B6singer=22's?=
	message of "Thu, 31 Jul 2008 10:03:31 -0500")
References: <00d701c8f31e$b0db9c50$1292d4f0$@com>
Message-ID: <87od4dcgzm.fsf@wine.dyndns.org>

Stefan D?singer <stefan at codeweavers.com> writes:

> @@ -4681,7 +4681,9 @@ static void viewport_miscpart(DWORD state, IWineD3DStateBlockImpl *stateblock, W
>                     stateblock->viewport.Width, stateblock->viewport.Height);
>      } else {
>          target = (IWineD3DSurfaceImpl *) stateblock->wineD3DDevice->render_targets[0];
> +        LEAVE_GL();
>          target->get_drawable_size(target, &width, &height);
> +        ENTER_GL();

That's ugly, the lock isn't even entered in that function. Can we please
start to clean up the ENTER_GL mess to only grab the lock around GL
calls and not over huge amounts of code including nested functions?

-- 
Alexandre Julliard
julliard at winehq.org


From r.kalbermatter at hccnet.nl  Fri Aug  1 02:53:43 2008
From: r.kalbermatter at hccnet.nl (Rolf Kalbermatter)
Date: Fri, 1 Aug 2008 09:53:43 +0200
Subject: DLL loading prolem when injecting into another process
In-Reply-To: <BAY118-W25BB0F3F870EC071236BF6947F0@phx.gbl>
References: <BAY118-W51033CC21D50A53EFFE578947D0@phx.gbl><9885634A383842D2815FCC53C4B2B2FD@NATERS>
	<BAY118-W25BB0F3F870EC071236BF6947F0@phx.gbl>
Message-ID: <9AD9899D2F0240D7AB3751D0A6C8E254@NATERS>

Hongbo Ni  wrote: 

>> Not sure about what you mean with injecting here but in normal
application operation
>> when loading a DLL explicitedly from a specific directory (which is not
the current
>> directory nor the application directory or one of the standard search
paths), 
>> Windows
>	
> did you mean 'Wine', i know ms-windows has no problem.

No I was refereing to Windows and in my experience this is true for Windows
at least up to XP.
	 
>> will not resolve to other DLLs implicitedly loaded by that DLL eventhough
they are in
>> the same directory than the referencing DLL.
>	 
> This is exactly the another situation I am going to explain. Thanks.

It's been some time that I had to deal with this in an application someone
else had developed
as I have always made sure to avoid this for a long time.

But from working in higher level applications loading DLLs form a specific
absolut path, this
loading usually seems to fail if this DLL references other DLLs that are not
in the standard
Windows search locations (memory, application dir, windows and system dir,
and PATH environment
variable) eventhough those dependant DLLs reside in the same directory as
the DLL that was
just attempted to be loaded.

It may be that you have to make sure to not modify the current directory in
the process of
determining the path to load the parent DLL from. I've seen for instance in
those higher level
development environments that loading such DLL combos failed on the initial
application load
only to be prompted to locate the parent DLL in question with a file dialog
and then it magically
seemed to work. This is because the windows file dialog will automagically
modify the current
directory for the current process and now the implicit LoadLibrary during
the loading of the
parent DLL seems to also find the dependant DLLs in that same directory.

And this behaviour was certainly like that up to and including W2K but I do
believe even XP.

That is not to say that Wine might not have to do something extra here, for
instance to support
new Vista behaviour which seems to have complicated the whole DLL loading
procedure a bit.
	 
>I have produced a patch to load the imported dll from same directory
>as the referring DLL when import_dll() fail to load from standard 
>locations (current dir, app dir and PATH)
>	 
>But I did not know how to write test case for it since there are other DLL
involved.

Well it will be a bit cumbersome as you will have to create two extra dummy
DLLs A.dll and B.dll
where A.dll implicitedly loads B.dll and then load A.dll from the test
executable. A.dll and B.dll
would have to reside in a different directory (possibly subdirectory) to the
actual test executable
and of course can't be inside any directory considered a windows or system
directory. Also make sure you set the current directory to something else
than that directory. 
And then see what happens when this test is crosscompiled and run under
Windows. If the LoadLibrary
of A.dll does not fail under Windows then yes Wine will need some extra
functionality to replicate
that behaviour.

My guess is that it will however fail on most Windows versions except maybe
Vista which would still
be a reason to try to implement that behaviour in Wine too. However you will
likely have to do quite
a bit more tests to then figure out the exact conditions under which this
behaviour is applied under
newer Windows versions. 

Rolf Kalbermatter



From julliard at winehq.org  Fri Aug  1 02:54:30 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 01 Aug 2008 09:54:30 +0200
Subject: d3dx9: Implementation of D3DXGetPixelShaderProfile 1/2 try 3
In-Reply-To: <489220EE.80809@ilidium.com> (Luis Busquets's message of "Thu, 31
	Jul 2008 22:30:38 +0200")
References: <489220EE.80809@ilidium.com>
Message-ID: <87k5f1cgqx.fsf@wine.dyndns.org>

Luis Busquets <luis.busquets at ilidium.com> writes:

> +       case D3DPS_VERSION(2, 0):
> +           if ((caps.PS20Caps.NumTemps>=22)                          &&
> +               (caps.PS20Caps.Caps&D3DPS20CAPS_ARBITRARYSWIZZLE)     &&
> +               (caps.PS20Caps.Caps&D3DPS20CAPS_GRADIENTINSTRUCTIONS) &&
> +               (caps.PS20Caps.Caps&D3DPS20CAPS_PREDICATION)          &&
> +               (caps.PS20Caps.Caps&D3DPS20CAPS_NODEPENDENTREADLIMIT) &&
> +               (caps.PS20Caps.Caps&D3DPS20CAPS_NOTEXINSTRUCTIONLIMIT))
> +           {
> +           return "ps_2_a";
> +           }
> +           if ((caps.PS20Caps.NumTemps>=32)                          &&
> +               (caps.PS20Caps.Caps&D3DPS20CAPS_NOTEXINSTRUCTIONLIMIT))
> +           {
> +           return "ps_2_b";
> +           }
> +           return "ps_2_0";

I'm usually tolerant of strange identation styles, but that's not even
indentation at all. Can you please fix this to use a more commonly
accepted format?

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Aug  1 02:57:01 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 01 Aug 2008 09:57:01 +0200
Subject: [PATCH 1/2] shell32: Add a test for FindExecutableA.
In-Reply-To: <558b2f5c0807311800j54e82d1cke2c5dd2251db5257@mail.gmail.com>
	(Lei Zhang's message of "Thu, 31 Jul 2008 18:00:06 -0700")
References: <558b2f5c0807311800j54e82d1cke2c5dd2251db5257@mail.gmail.com>
Message-ID: <87fxppcgmq.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> +    {
> +        char expand[MAX_PATH];
> +        strcpy(command, "foobar");
> +        strcpy(filename, "foo.msi");
> +        file = CreateFileA(filename, GENERIC_WRITE, 0, NULL, CREATE_ALWAYS, 0, NULL);
> +        ok(file != INVALID_HANDLE_VALUE, "Failure to open file %s\n", filename);
> +        CloseHandle(file);
> +
> +        ok(ExpandEnvironmentStringsA("\%systemroot\%\\system32\\msiexec.exe", expand, MAX_PATH) != 0, "ExpandEnvironmentStringsA failed\n");

Again, please don't hardcode system32, use GetSystemDirectory instead.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Aug  1 04:31:16 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 01 Aug 2008 11:31:16 +0200
Subject: crypt32(1/3): Use ReadFile rather than a memory-mapped file to
	check the type of a file
In-Reply-To: <3a768c550807311029o1fd910daobdb0527f2a3a0f3f@mail.gmail.com>
	(Juan Lang's message of "Thu, 31 Jul 2008 10:29:47 -0700")
References: <3a768c550807311029o1fd910daobdb0527f2a3a0f3f@mail.gmail.com>
Message-ID: <878wvhcc9n.fsf@wine.dyndns.org>

"Juan Lang" <juan.lang at gmail.com> writes:

> From 064365f26630c76546a6c8bedc1e99d47b74563d Mon Sep 17 00:00:00 2001
> From: Juan Lang <juan.lang at gmail.com>
> Date: Thu, 31 Jul 2008 09:08:09 -0700
> Subject: [PATCH] Use ReadFile rather than a memory-mapped file to check the type of a file

This doesn't work here:

../../../tools/runtest -q -P wine -M wintrust.dll -T ../../.. -p wintrust_test.exe.so softpub.c && touch softpub.ok
softpub.c:449: Test failed: expected TRUST_E_NOSIGNATURE, got 800b0003
make: *** [softpub.ok] Error 1

-- 
Alexandre Julliard
julliard at winehq.org


From huw at codeweavers.com  Fri Aug  1 06:56:48 2008
From: huw at codeweavers.com (Huw Davies)
Date: Fri, 1 Aug 2008 12:56:48 +0100
Subject: DIB engine status
Message-ID: <20080801115648.GB24893@merlot.physics.ox.ac.uk>

Hi folks,

Here's an update on the DIB engine that I've been working on for the
last few months.  This work has been made possible by the generosity
of Google - so thanks go to them and of course to Dan.

You can find the code at http://repo.or.cz/w/wine/dibeng-hd.git

What's supported
================
- All dib section depths (including BI_BITFIELD support).

- Single pixel solid and dashed pens.

- The 16 rop2s.

- Solid and dib pattern brushes.

- A brunch of primitives for drawing onto all dib section surfaces.

- GDI32 apis: LineTo, Rectangle and PatBlt.

- An extensive test suite for all of the above.

What needs to be done
=====================
- Blitting (eg BitBlt, StretchBlt and StretchDIBits) - I have some
  hacks for these in my tree.

- ExtTextOut

- Many more GDI32 apis - a lot of these should be easy given that we
  have a set of underlying dib drawing primitives.

- Non-MM_TEXT mapping modes and world transforms.

- The initial interaction with GDI32 in BITMAP_SelectObject is hacky
  and needs some work.

- Lots more...



Note that at the moment it's essentially useless because of the lack
of blitting, so unless you fancy hacking on that yourself then you
probably don't want to bother fetching the tree.

I'm going to stop working on this for a while (lots of fun Outlook
2007 bugs for me to look at!), but will endeavour to keep the tree up
to date with respect to WineHQ.  If someone *does* want to hack on
this then feel free to send me patches!

Thanks,
Huw.
-- 
Huw Davies
huw at codeweavers.com


From dank at kegel.com  Fri Aug  1 07:32:54 2008
From: dank at kegel.com (Dan Kegel)
Date: Fri, 1 Aug 2008 05:32:54 -0700
Subject: New valgrind warnings in wined3d/arb_program_shader.c
In-Reply-To: <00bb01c8f346$3dc6fb10$b954f130$@com>
References: <a71bd89a0807311021k24c08391i51405b1558ae6514@mail.gmail.com>
	<00bb01c8f346$3dc6fb10$b954f130$@com>
Message-ID: <a71bd89a0808010532n4f1a0cb3lded2007e79b23a22@mail.gmail.com>

Stefan D?singer <stefan at codeweavers.com> wrote:
> Does the attached patch fix the warnings?

It had a level of indirection mistake, but yes, the
following patch fixes the new warnings:

diff --git a/dlls/wined3d/utils.c b/dlls/wined3d/utils.c
index a9fc780..6e1e0ac 100644
--- a/dlls/wined3d/utils.c
+++ b/dlls/wined3d/utils.c
@@ -1790,6 +1790,7 @@ void gen_ffp_op(IWineD3DStateBlockImpl
*stateblock, struct ffp_settings *setting
     DWORD ttff;
     DWORD cop, aop, carg0, carg1, carg2, aarg0, aarg1, aarg2;

+    memset(settings, 0, sizeof(*settings));
     for(i = 0; i < GL_LIMITS(texture_stages); i++) {
         IWineD3DBaseTextureImpl *texture;
         if(stateblock->textureState[i][WINED3DTSS_COLOROP] ==
WINED3DTOP_DISABLE) {


From stefan at codeweavers.com  Fri Aug  1 09:48:07 2008
From: stefan at codeweavers.com (=?UTF-8?Q?Stefan_D=C3=B6singer?=)
Date: Fri, 1 Aug 2008 09:48:07 -0500
Subject: [1/7] WineD3D: use the window size as drawable size
In-Reply-To: <87od4dcgzm.fsf@wine.dyndns.org>
References: <00d701c8f31e$b0db9c50$1292d4f0$@com>
	<87od4dcgzm.fsf@wine.dyndns.org>
Message-ID: <001a01c8f3e5$9ccadce0$d66096a0$@com>

> > +        LEAVE_GL();
> >          target->get_drawable_size(target, &width, &height);
> > +        ENTER_GL();
> 
> That's ugly, the lock isn't even entered in that function. Can we
> please
> start to clean up the ENTER_GL mess to only grab the lock around GL
> calls and not over huge amounts of code including nested functions?
Actually the problem with patch 2 made me unsure if using the Window size here is correct at all.

To stay on topic though, I oppose moving the lock into every state handler. There are just the scissorrect and viewport functions that may have to perform User32 calls(if the patch turns out to be correct). Moving the lock call into the state handlers would pollute the code with them and raise the locking costs considerably.





From lav at etersoft.ru  Fri Aug  1 09:58:39 2008
From: lav at etersoft.ru (Vitaly Lipatov)
Date: Fri, 1 Aug 2008 18:58:39 +0400
Subject: [Gdiplus] Try harder to get a monospace font
In-Reply-To: <1217550920.6507.4.camel@belthazor-saved>
References: <1217550920.6507.4.camel@belthazor-saved>
Message-ID: <200808011858.40764.lav@etersoft.ru>

? ????????? ?? 1 ??????? 2008 Adam Petaccia ???????(a):
> + *  If Courier New is not found, the replacement font Liberation Mono is
> used. */
Why do not use font replacement rules in the registry? I think it is more 
common way to subst Liberation fonts instead proprietary one.


-- 
Vitaly Lipatov, ALT Linux Team
Russia, Saint-Petersburg, www.etersoft.ru


From julliard at winehq.org  Fri Aug  1 10:18:03 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 01 Aug 2008 17:18:03 +0200
Subject: [1/7] WineD3D: use the window size as drawable size
In-Reply-To: <001a01c8f3e5$9ccadce0$d66096a0$@com> ("Stefan =?utf-8?Q?D?=
	=?utf-8?Q?=C3=B6singer=22's?=
	message of "Fri, 1 Aug 2008 09:48:07 -0500")
References: <00d701c8f31e$b0db9c50$1292d4f0$@com>
	<87od4dcgzm.fsf@wine.dyndns.org> <001a01c8f3e5$9ccadce0$d66096a0$@com>
Message-ID: <87vdykbw7o.fsf@wine.dyndns.org>

Stefan D?singer <stefan at codeweavers.com> writes:

> To stay on topic though, I oppose moving the lock into every state
> handler. There are just the scissorrect and viewport functions that
> may have to perform User32 calls(if the patch turns out to be
> correct). Moving the lock call into the state handlers would pollute
> the code with them and raise the locking costs considerably.

It would require adding more of them, but that's good, it makes the
locking more explicit. We really have to stop taking a big global lock
and executing thousands of lines of code inside it. As long as you are
only moving the lock inside the individual functions the cost is the
same.

-- 
Alexandre Julliard
julliard at winehq.org


From stefan at codeweavers.com  Fri Aug  1 10:50:18 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Fri, 1 Aug 2008 10:50:18 -0500
Subject: New valgrind warnings in wined3d/arb_program_shader.c
In-Reply-To: <a71bd89a0808010532n4f1a0cb3lded2007e79b23a22@mail.gmail.com>
References: <a71bd89a0807311021k24c08391i51405b1558ae6514@mail.gmail.com>	
	<00bb01c8f346$3dc6fb10$b954f130$@com>
	<a71bd89a0808010532n4f1a0cb3lded2007e79b23a22@mail.gmail.com>
Message-ID: <000601c8f3ee$4cbc8b50$e635a1f0$@com>

> It had a level of indirection mistake, but yes, the
> following patch fixes the new warnings:
I think it's gcc's fault, or the code relying on something that the C spec
doesn't guarantee. It seems to me that gcc doesn't pack the bitfields
properly as we hoped, and leaves padding bytes in between that are left
uninitialized. The hash function then treats the structure as a binary blob.

Since the bitfields did not do what we hoped they'd do(avoid hashing over
empty data), I'll dig my old manual packing patch out again.

Meanwhile, the problems should not cause any crashes or incorrect rendering,
but it has negative effects on performance.

I tried replacing the memset with this:

    for(i = 0; i < 8; i++) {
        settings->op[i].cop = 0;
        settings->op[i].aop = 0;
        /* 0x3F: set all 6 bits of the args to 1 */
        settings->op[i].carg0 = 0;
        settings->op[i].carg1 = 0;
        settings->op[i].carg2 = 0;
        settings->op[i].aarg0 = 0;
        settings->op[i].aarg1 = 0;
        settings->op[i].aarg2 = 0;
        settings->op[i].dst = 0;
        settings->op[i].tex_type = 0;
        settings->op[i].projected = 0;
        settings->op[i].color_correction = 0;
    }
    settings->fog = 0;

The code manually initializes all members of the structure, but the valgrind
warnings still remain





From stefan at codeweavers.com  Fri Aug  1 10:52:25 2008
From: stefan at codeweavers.com (=?utf-8?Q?Stefan_D=C3=B6singer?=)
Date: Fri, 1 Aug 2008 10:52:25 -0500
Subject: [1/7] WineD3D: use the window size as drawable size
In-Reply-To: <87vdykbw7o.fsf@wine.dyndns.org>
References: <00d701c8f31e$b0db9c50$1292d4f0$@com>	<87od4dcgzm.fsf@wine.dyndns.org>
	<001a01c8f3e5$9ccadce0$d66096a0$@com>
	<87vdykbw7o.fsf@wine.dyndns.org>
Message-ID: <000701c8f3ee$97f68260$c7e38720$@com>

> It would require adding more of them, but that's good, it makes the
> locking more explicit. We really have to stop taking a big global lock
> and executing thousands of lines of code inside it. As long as you are
> only moving the lock inside the individual functions the cost is the
> same.
In the current form there's one lock call each time the states are applied, if the individual functions call the lock there's one call per applied state




From hongbo_ni at hotmail.com  Fri Aug  1 11:11:47 2008
From: hongbo_ni at hotmail.com (Hongbo Ni)
Date: Sat, 2 Aug 2008 02:11:47 +1000
Subject: DLL loading prolem when injecting into another process
In-Reply-To: <9AD9899D2F0240D7AB3751D0A6C8E254@NATERS>
References: <BAY118-W51033CC21D50A53EFFE578947D0@phx.gbl><9885634A383842D2815FCC53C4B2B2FD@NATERS>
	<BAY118-W25BB0F3F870EC071236BF6947F0@phx.gbl>
	<9AD9899D2F0240D7AB3751D0A6C8E254@NATERS>
Message-ID: <BAY118-W50BE39C01E8061867C5DA7947F0@phx.gbl>


Rolf Kalbermatter wrote: 
> My guess is that it will however fail on most Windows versions except maybe
> Vista which would still be a reason to try to implement that behaviour in Wine 
> too. However you will likely have to do quite
> a bit more tests to then figure out the exact conditions under which this
> behaviour is applied under newer Windows versions. 

You are right, when loading a DLL from specific folder, the linked DLL in same folder
can not be loaded. I have tested on Windows Vista.

Back to DLL injecting, It works since Windows 95. My program has been working
for many years, but not on Wine.

Here is how to inject a DLL into another process:

A.exe is linked to A.dll, A.dll is linked to B.dll, they are all in the same folder.

in A.dll I have a function called InjectDll(), it calls SetWindowsHookEx(WH_GETMESSAGE,...)
to inject A.dll into Notepad process. Since A.dll is lined to B.dll, B.dll will be loaded on
window, but on wine.

//in A.dll
LRESULT WINAPI GetMsgProc (int nCode, WPARAM wParam,  LPARAM lParam)
{
 if(g_hHookGetMsg==NULL) return 0;
 return(CallNextHookEx(g_hHookGetMsg, nCode, wParam, lParam));
}

DLLA_API int InjectDll(void)
{
 HWND hwnd = FindWindow(NULL,"Notepad");
 if(hwnd){
   g_hHookGetMsg = SetWindowsHookEx(WH_GETMESSAGE, GetMsgProc, g_hinstDll,GetWindowThreadProcessId(hwnd, NULL));
   if(g_hHookGetMsg){
       PostMessage(hwnd, WM_NULL, 0, 0);
   }
 }
 return fnDllB(); //in DLLB.dll
}

Maybe in window SetWindowsHookEx not only map A.dll, but so all DLL linked by A.dll into Hooked 
Window process. 

Also at the time A.exe is injecting A.dll, B.dll is loaded, so the system knows where B.dll is.
Now I am wondering how window do that.

To Prove windows do it, I have put a Test suite at http://www.njstar.com/zipfile/HookApp.zip
It contains source project and compiled exe in BIN folder.

1. start BIN\App-exe\App.exe first, it's is not linked to DLLA or DLLB.

2. start BIN\HookApp.exe and DLLA and DLLB is linked and loaded.

3. Click BIN\HookApp.exe's menu Inject. it will inject DLLA into  BIN\App-exe\App.exe, and
    DLLB will also got loaded into  BIN\App-exe\App.exe on Windows. This will be fail on Wine.

Regards
Hongbo















_________________________________________________________________
Are you paid what you're worth? Find out: SEEK Salary Centre
http://a.ninemsn.com.au/b.aspx?URL=http%3A%2F%2Fninemsn%2Eseek%2Ecom%2Eau%2Fcareer%2Dresources%2Fsalary%2Dcentre%2F%3Ftracking%3Dsk%3Ahet%3Asc%3Anine%3A0%3Ahot%3Atext&_t=764565661&_r=OCT07_endtext_salary&_m=EXT

From julliard at winehq.org  Fri Aug  1 11:20:46 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 01 Aug 2008 18:20:46 +0200
Subject: New valgrind warnings in wined3d/arb_program_shader.c
In-Reply-To: <000601c8f3ee$4cbc8b50$e635a1f0$@com> ("Stefan =?utf-8?Q?D?=
	=?utf-8?Q?=C3=B6singer=22's?=
	message of "Fri, 1 Aug 2008 10:50:18 -0500")
References: <a71bd89a0807311021k24c08391i51405b1558ae6514@mail.gmail.com>
	<00bb01c8f346$3dc6fb10$b954f130$@com>
	<a71bd89a0808010532n4f1a0cb3lded2007e79b23a22@mail.gmail.com>
	<000601c8f3ee$4cbc8b50$e635a1f0$@com>
Message-ID: <87k5f0btb5.fsf@wine.dyndns.org>

Stefan D?singer <stefan at codeweavers.com> writes:

>> It had a level of indirection mistake, but yes, the
>> following patch fixes the new warnings:
> I think it's gcc's fault, or the code relying on something that the C spec
> doesn't guarantee. It seems to me that gcc doesn't pack the bitfields
> properly as we hoped, and leaves padding bytes in between that are left
> uninitialized. The hash function then treats the structure as a binary blob.

gcc is perfectly correct, if you don't want padding space then your
bitfields have to add up to the size of an integer.

-- 
Alexandre Julliard
julliard at winehq.org


From stefan at codeweavers.com  Fri Aug  1 11:56:24 2008
From: stefan at codeweavers.com (=?utf-8?Q?Stefan_D=C3=B6singer?=)
Date: Fri, 1 Aug 2008 11:56:24 -0500
Subject: New valgrind warnings in wined3d/arb_program_shader.c
In-Reply-To: <87k5f0btb5.fsf@wine.dyndns.org>
References: <a71bd89a0807311021k24c08391i51405b1558ae6514@mail.gmail.com>	<00bb01c8f346$3dc6fb10$b954f130$@com>	<a71bd89a0808010532n4f1a0cb3lded2007e79b23a22@mail.gmail.com>	<000601c8f3ee$4cbc8b50$e635a1f0$@com>
	<87k5f0btb5.fsf@wine.dyndns.org>
Message-ID: <000e01c8f3f7$887a3080$996e9180$@com>

> gcc is perfectly correct, if you don't want padding space then your
> bitfields have to add up to the size of an integer.
Figured that out by now :-)

I thought it left paddings between my flags, but actually there are 12 unused bits at the end, and one uninitialized, because unused, but still hashed member adding troubles.




From liquid.acid at gmx.net  Fri Aug  1 13:03:56 2008
From: liquid.acid at gmx.net (Tobias Jakobi)
Date: Fri, 01 Aug 2008 20:03:56 +0200
Subject: [2/7] WineD3D: use the drawable size to set up blitting
In-Reply-To: <000401c8f386$f9c7b080$ed571180$@com>
References: <000001c8f37f$d784f430$868edc90$@com>
	<000401c8f386$f9c7b080$ed571180$@com>
Message-ID: <4893500C.2010804@gmx.net>

Stefan D?singer wrote:
>> I'm sorry, I cannot reproduce this. Which settings are you using?
> I see it now, it only occurs with medium post processing settings.
OK, I can't use the high settings for now because of the slowdowns. 
Medium is the only half-working option for now.

> 
> The patch obviously has a flaw when the drawable is bigger than the target,
> in which case the coordinate system's origin is outside of the target's
> area. I think I have to deal with the drawable-target difference in the
> blit-to-frontbuffer code


I keep an eye out for patches on the ml :)


From jjmckenzie51 at earthlink.net  Fri Aug  1 14:17:02 2008
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Fri, 1 Aug 2008 12:17:02 -0700 (GMT-07:00)
Subject: crypt32(3/3): More fully implement CryptSIPRetrieveSubjectGuid
Message-ID: <890417.1217618222821.JavaMail.root@mswamui-cedar.atl.sa.earthlink.net>

Juan:

Please put something in the title to let us know that this is a resumission like (try 2).  Some folks resend and resend their patches when Alexandre does not 'immediately' react to them.

Thank you.

James McKenzie


-----Original Message-----
>From: Juan Lang <juan.lang at gmail.com>
>Sent: Aug 1, 2008 10:22 AM
>To: wine-patches at winehq.org
>Subject: crypt32(3/3): More fully implement CryptSIPRetrieveSubjectGuid
>
>Also just rediffed.

Need a full change log here as well.

>--Juan



From juan.lang at gmail.com  Fri Aug  1 14:23:56 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Fri, 1 Aug 2008 12:23:56 -0700
Subject: crypt32(3/3): More fully implement CryptSIPRetrieveSubjectGuid
In-Reply-To: <890417.1217618222821.JavaMail.root@mswamui-cedar.atl.sa.earthlink.net>
References: <890417.1217618222821.JavaMail.root@mswamui-cedar.atl.sa.earthlink.net>
Message-ID: <3a768c550808011223v16287caam8599b3cbb928d2be@mail.gmail.com>

> Please put something in the title to let us know that this is a resumission like (try 2).  Some folks resend and resend their patches when Alexandre does not 'immediately' react to them.

I did, in the body.  They're not different than the original
submissions, except for being rediffed, as I already noted.
--Juan


From truiken at gmail.com  Fri Aug  1 14:30:14 2008
From: truiken at gmail.com (James Hawkins)
Date: Fri, 1 Aug 2008 14:30:14 -0500
Subject: crypt32(3/3): More fully implement CryptSIPRetrieveSubjectGuid
In-Reply-To: <3a768c550808011223v16287caam8599b3cbb928d2be@mail.gmail.com>
References: <890417.1217618222821.JavaMail.root@mswamui-cedar.atl.sa.earthlink.net>
	<3a768c550808011223v16287caam8599b3cbb928d2be@mail.gmail.com>
Message-ID: <22821af30808011230p20e8f1a5u4e3c541cb556bc08@mail.gmail.com>

On Fri, Aug 1, 2008 at 2:23 PM, Juan Lang <juan.lang at gmail.com> wrote:
>> Please put something in the title to let us know that this is a resumission like (try 2).  Some folks resend and resend their patches when Alexandre does not 'immediately' react to them.
>
> I did, in the body.  They're not different than the original
> submissions, except for being rediffed, as I already noted.
> --Juan
>

Can you put it in the subject line?  That makes it easier to
distinguish the email from previous attempts.  gmail, for instance,
groups emails with the same subject line into conversations, so your
resubmissions sometimes look like replies to old emails, etc.

-- 
James Hawkins


From wine-devel at kievinfo.com  Fri Aug  1 15:15:04 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Fri, 01 Aug 2008 14:15:04 -0600
Subject: dinput: the DIK_ keycode is not the same as the scancode.
In-Reply-To: <23758778.1217603851417.JavaMail.root@elwamui-chisos.atl.sa.earthlink.net>
References: <23758778.1217603851417.JavaMail.root@elwamui-chisos.atl.sa.earthlink.net>
Message-ID: <48936EC8.7050403@kievinfo.com>

James Mckenzie wrote:
> Vitaliy Margolen <wine-devel at kievinfo.com> at Jul 31, 2008 10:10 PM (PNT) wrote about Re: dinput: the DIK_ keycode is not the same as the scancode.
>>> -    dik_code = hook->scanCode & 0xff;
>>> +    dik_code = This->ScanCodemap[hook->scanCode];
>> Scan code can be larger then 256 so "& 0xff" is really necessary.
>>
> What is the type of scanCode.  If it is BYTE and BYTE is properly defined as being between 0x00 and 0xff, then the check is not necessary.  If it is defined as something else, then the check IS necessary and should nto be dropped

typedef struct tagKBDLLHOOKSTRUCT
{
     DWORD   vkCode;
     DWORD   scanCode;
     DWORD   flags;
     DWORD   time;
     ULONG_PTR dwExtraInfo;
} KBDLLHOOKSTRUCT, *LPKBDLLHOOKSTRUCT, *PKBDLLHOOKSTRUCT;


(scanCode & 0x100) != 0 indicates an extended key.

> In this case, I feel that map_dik_code should be defined as BYTE and no other type.  Was that the intent of your comment?
That and definitions of the variables and the array type.


Vitaliy.


From r.kalbermatter at hccnet.nl  Fri Aug  1 17:25:11 2008
From: r.kalbermatter at hccnet.nl (Rolf Kalbermatter)
Date: Sat, 2 Aug 2008 00:25:11 +0200
Subject: DLL loading prolem when injecting into another process
In-Reply-To: <BAY118-W50BE39C01E8061867C5DA7947F0@phx.gbl>
References: <BAY118-W51033CC21D50A53EFFE578947D0@phx.gbl><9885634A383842D2815FCC53C4B2B2FD@NATERS><BAY118-W25BB0F3F870EC071236BF6947F0@phx.gbl><9AD9899D2F0240D7AB3751D0A6C8E254@NATERS>
	<BAY118-W50BE39C01E8061867C5DA7947F0@phx.gbl>
Message-ID: <B78735D867E043DAAFEFFC15A5EB1FD5@NATERS>

Hongbo Ni wrote:
  
> Back to DLL injecting, It works since Windows 95. My program 
> has been working for many years, but not on Wine.
> 
> Here is how to inject a DLL into another process:
> .....

Ok I think I understand. You are using a technique I have once read about in
Microsoft System Journal back in about 1994. And this is certainly tricky.

Eventhough I'm anything but an expert in these matters I do think that the
code
that receives a message for a process and checks if a WH_GETMESSAGE hook is
set
and in that case maps the according DLL into the process space if that
hasn't
already happened, should also track down all implicit dependencies of that
DLL
and map them into the process space too.

It may currently just do a LoadLibrary equivalent and that will of course
not
find the B.dll as it is not in any of the standard search locations for the
injected process.

I do not think that the solution is to "correct" LoadLibrary to actually do
a
search for linked libraries in the parent library's directory too.

However I fear the proper fix might go deep into Wine server and probably is
above most people's head except for Alexandre. What you can do is trying to
get an actual test integrated to the Wine tests that does what you do in
your
test that you wrote and mark that test as todo_wine. And then hope that
Alexandre
can find a way to implement a fix without to much trouble.

Of course if you can find the way to implement that correctly a second patch
after
the test has been added as todo_wine would certainly be welcome.

Rolf Kalbermatter



From winehacker at gmail.com  Sat Aug  2 01:10:11 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Sat, 2 Aug 2008 02:10:11 -0400
Subject: DLL loading prolem when injecting into another process
In-Reply-To: <B78735D867E043DAAFEFFC15A5EB1FD5@NATERS>
References: <BAY118-W51033CC21D50A53EFFE578947D0@phx.gbl>
	<9885634A383842D2815FCC53C4B2B2FD@NATERS>
	<BAY118-W25BB0F3F870EC071236BF6947F0@phx.gbl>
	<9AD9899D2F0240D7AB3751D0A6C8E254@NATERS>
	<BAY118-W50BE39C01E8061867C5DA7947F0@phx.gbl>
	<B78735D867E043DAAFEFFC15A5EB1FD5@NATERS>
Message-ID: <19e31a080808012310x30450f7fg98baa5dff66a7b64@mail.gmail.com>

On Fri, Aug 1, 2008 at 6:25 PM, Rolf Kalbermatter
<r.kalbermatter at hccnet.nl> wrote:
> Ok I think I understand. You are using a technique I have once read about in
> Microsoft System Journal back in about 1994. And this is certainly tricky.

Its also documented in Inside Windows by Jeffery Richter if you happen
to have a copy of that laying around.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From winehacker at gmail.com  Sat Aug  2 01:12:43 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Sat, 2 Aug 2008 02:12:43 -0400
Subject: DLL loading prolem when injecting into another process
In-Reply-To: <19e31a080808012310x30450f7fg98baa5dff66a7b64@mail.gmail.com>
References: <BAY118-W51033CC21D50A53EFFE578947D0@phx.gbl>
	<9885634A383842D2815FCC53C4B2B2FD@NATERS>
	<BAY118-W25BB0F3F870EC071236BF6947F0@phx.gbl>
	<9AD9899D2F0240D7AB3751D0A6C8E254@NATERS>
	<BAY118-W50BE39C01E8061867C5DA7947F0@phx.gbl>
	<B78735D867E043DAAFEFFC15A5EB1FD5@NATERS>
	<19e31a080808012310x30450f7fg98baa5dff66a7b64@mail.gmail.com>
Message-ID: <19e31a080808012312j26d897bo41f370c8c0ee9e68@mail.gmail.com>

On Sat, Aug 2, 2008 at 2:10 AM, Steven Edwards <winehacker at gmail.com> wrote:
> Its also documented in Inside Windows by Jeffery Richter if you happen
> to have a copy of that laying around.

Sorry make that Advanced Windows. I gave my copy to a friend so I
don't recall much about the chapter, except there is example code that
could be used for testing that came with the cd in the book.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From hongbo_ni at hotmail.com  Sat Aug  2 01:48:16 2008
From: hongbo_ni at hotmail.com (Hongbo Ni)
Date: Sat, 2 Aug 2008 16:48:16 +1000
Subject: DLL loading prolem when injecting into another process
In-Reply-To: <B78735D867E043DAAFEFFC15A5EB1FD5@NATERS>
References: <BAY118-W51033CC21D50A53EFFE578947D0@phx.gbl><9885634A383842D2815FCC53C4B2B2FD@NATERS><BAY118-W25BB0F3F870EC071236BF6947F0@phx.gbl><9AD9899D2F0240D7AB3751D0A6C8E254@NATERS>
	<BAY118-W50BE39C01E8061867C5DA7947F0@phx.gbl>
	<B78735D867E043DAAFEFFC15A5EB1FD5@NATERS>
Message-ID: <BAY118-W53A316E6010E8A99AA93B9947E0@phx.gbl>



Rolf Kalbermatter wrote:
> I do not think that the solution is to "correct" LoadLibrary to actually do
> a search for linked libraries in the parent library's directory too.
>
> However I fear the proper fix might go deep into Wine server and probably is
> above most people's head except for Alexandre. What you can do is trying to
> get an actual test integrated to the Wine tests that does what you do in
> your test that you wrote and mark that test as todo_wine. And then hope that
> Alexandre can find a way to implement a fix without to much trouble.
>
> Of course if you can find the way to implement that correctly a second patch after
> the test has been added as todo_wine would certainly be welcome.

What I have descripted is only one way of hook to another process, there are other ways.

Good news, It turns out the fix could be a simple patch as this

@ -322,7 +322,7 @@ void *get_hook_proc( void *proc, const WCHAR *module )
     {
         TRACE( "loading %s\n", debugstr_w(module) );
         /* FIXME: the library will never be freed */
-        if (!(mod = LoadLibraryW(module))) return NULL;
+        if (!(mod = LoadLibraryExW(module, NULL, LOAD_WITH_ALTERED_SEARCH_PATH))) return NULL;
     }
     return (char *)mod + (ULONG_PTR)proc;
 }

When my debug, I noticed 'module' comes in full path. so LoadLibraryW will load the module, but when it process
imports, it searchs the application dir, current dir and PATH. So DLL in the same dir can not be loaded.

By using LOAD_WITH_ALTERED_SEARCH_PATH, LoadLibraryExW will put in path of 'module' on the load_path, 
so fix-imports can load linked DLLs by searching the dir of injected dll first, then the current and PATH.

In process HOOK, the target proc has no idea of the injected DLL comes from.  The linked DLLs are most likely
NOT in the same dir as current hooked application(s). More likely in the same dir as injected DLL .

What do I have to do to get this patch accepted ?

Hongbo Ni


_________________________________________________________________
Are you paid what you're worth? Find out: SEEK Salary Centre
http://a.ninemsn.com.au/b.aspx?URL=http%3A%2F%2Fninemsn%2Eseek%2Ecom%2Eau%2Fcareer%2Dresources%2Fsalary%2Dcentre%2F%3Ftracking%3Dsk%3Ahet%3Asc%3Anine%3A0%3Ahot%3Atext&_t=764565661&_r=OCT07_endtext_salary&_m=EXT

From andrewfenn at gmail.com  Sat Aug  2 10:17:15 2008
From: andrewfenn at gmail.com (Andrew Fenn)
Date: Sat, 2 Aug 2008 22:17:15 +0700
Subject: one liner patch to stop crash, everquest2.exe
In-Reply-To: <d658b69e0807232353q582c4fe6h1b398477e8aef3f5@mail.gmail.com>
References: <b594ca9d0807170229y47e390b6xe999176d35340cb0@mail.gmail.com>
	<d658b69e0807202339i2925897fg5cc7bd1a4896f78b@mail.gmail.com>
	<b594ca9d0807210048v76676718h9090077bf1aeca05@mail.gmail.com>
	<d658b69e0807210058i3cb616fbq6fd28677ea79c5d9@mail.gmail.com>
	<b594ca9d0807210339q3350795cg90e6272b15c469d@mail.gmail.com>
	<d658b69e0807210403q3d132f81r603ff7ace66cbc21@mail.gmail.com>
	<000901c8eb3e$0d32ec80$2798c580$@com>
	<b594ca9d0807232046m31abe200j42aae76fc1d4ac7d@mail.gmail.com>
	<d658b69e0807232352r5121d2fetd835effce485fb00@mail.gmail.com>
	<d658b69e0807232353q582c4fe6h1b398477e8aef3f5@mail.gmail.com>
Message-ID: <b594ca9d0808020817yb9fe3e6ke98fc2ff45a12aac@mail.gmail.com>

After doing a recent git pull I noticed that it now crashes at a different
place in the code. Here's the backtrace (I haven't had a look yet, this is
more of a heads up)..

Backtrace:
=>1 0x7e49089b hash_table_destroy+0xb(table=0x17, free_value=0x7e3e8dc0,
cb=0x7e4c9a50) [/home/andrew/wine/wine/dlls/wined3d/utils.c:1583] in wined3d
(0x0032e8f8)
  2 0x7e3e539f arbfp_free+0x3f(iface=0x19c480)
[/home/andrew/wine/wine/dlls/wined3d/arb_program_shader.c:2258] in wined3d
(0x0032e918)
  3 0x7e40f02b IWineD3DDeviceImpl_Reset+0x19b(iface=0x19c480,
pPresentationParameters=0x32e9c0)
[/home/andrew/wine/wine/dlls/wined3d/device.c:7256] in wined3d (0x0032e998)
  4 0x7e4e43ce IDirect3DDevice9Impl_Reset+0x1ae(iface=<register EDI not in
topmost frame>, pPresentationParameters=0x1b9f848)
[/home/andrew/wine/wine/dlls/d3d9/device.c:381] in d3d9 (0x0032ea08)
  5 0x008d31a1 in everquest2 (+0x4d31a1) (0x0032ea3c)
0x7e49089b hash_table_destroy+0xb
[/home/andrew/wine/wine/dlls/wined3d/utils.c:1583] in wined3d: movl
0x14(%eax),%ecx
1583        for (i = 0; i < table->entry_count; ++i)

This is while performing the same task as before. Start up Everquest2.exe in
windowed mode, wait till it gets to the login screen, press alt+enter to go
to fullscreen mode.

On Thu, Jul 24, 2008 at 1:53 PM, H. Verbeet <hverbeet at gmail.com> wrote:

> > certainly worth a try to see if it fixes the game. It'll involve
> There should be a "You'll still need a test case though." somewhere in
> that line.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080802/adebf7eb/attachment-0001.htm 

From hverbeet at gmail.com  Sat Aug  2 10:22:11 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Sat, 2 Aug 2008 17:22:11 +0200
Subject: one liner patch to stop crash, everquest2.exe
In-Reply-To: <b594ca9d0808020817yb9fe3e6ke98fc2ff45a12aac@mail.gmail.com>
References: <b594ca9d0807170229y47e390b6xe999176d35340cb0@mail.gmail.com>
	<b594ca9d0807210048v76676718h9090077bf1aeca05@mail.gmail.com>
	<d658b69e0807210058i3cb616fbq6fd28677ea79c5d9@mail.gmail.com>
	<b594ca9d0807210339q3350795cg90e6272b15c469d@mail.gmail.com>
	<d658b69e0807210403q3d132f81r603ff7ace66cbc21@mail.gmail.com>
	<000901c8eb3e$0d32ec80$2798c580$@com>
	<b594ca9d0807232046m31abe200j42aae76fc1d4ac7d@mail.gmail.com>
	<d658b69e0807232352r5121d2fetd835effce485fb00@mail.gmail.com>
	<d658b69e0807232353q582c4fe6h1b398477e8aef3f5@mail.gmail.com>
	<b594ca9d0808020817yb9fe3e6ke98fc2ff45a12aac@mail.gmail.com>
Message-ID: <d658b69e0808020822hf3df52cu4dc4979bfba47eb8@mail.gmail.com>

2008/8/2 Andrew Fenn <andrewfenn at gmail.com>:
> After doing a recent git pull I noticed that it now crashes at a different
> place in the code. Here's the backtrace (I haven't had a look yet, this is
> more of a heads up)..
>
> Backtrace:
> =>1 0x7e49089b hash_table_destroy+0xb(table=0x17, free_value=0x7e3e8dc0,
> cb=0x7e4c9a50) [/home/andrew/wine/wine/dlls/wined3d/utils.c:1583] in wined3d
> (0x0032e8f8)
>   2 0x7e3e539f arbfp_free+0x3f(iface=0x19c480)
> [/home/andrew/wine/wine/dlls/wined3d/arb_program_shader.c:2258] in wined3d
> (0x0032e918)
>   3 0x7e40f02b IWineD3DDeviceImpl_Reset+0x19b(iface=0x19c480,
> pPresentationParameters=0x32e9c0)
> [/home/andrew/wine/wine/dlls/wined3d/device.c:7256] in wined3d (0x0032e998)
>
There were some changes there, but it still looks like the same basic
issue to me (Reset triggering another Reset).


From kornelpal at gmail.com  Sat Aug  2 10:52:26 2008
From: kornelpal at gmail.com (=?ISO-8859-1?Q?Korn=E9l_P=E1l?=)
Date: Sat, 02 Aug 2008 17:52:26 +0200
Subject: mono progress on mixed-mode assemblies...
In-Reply-To: <482C49EC.2020306@codeweavers.com>
References: <a71bd89a0805090318v177de82cw55b90b72c0a20fab@mail.gmail.com>	<002001c8b1c6$c6fa6a00$83666250@kornelpal.hu>	<a71bd89a0805090754o34dca0cew9eabe1165e203169@mail.gmail.com>
	<005201c8b5a6$12700930$83666250@kornelpal.hu>
	<482C49EC.2020306@codeweavers.com>
Message-ID: <489482BA.9070701@gmail.com>

Hi,

Mono 2.0 (Preview 1) is available for download on
http://mono.ximian.com/monobuild/preview/download-preview/

This includes a lot of improvements over version 1.9 including my work
on supporting mixed-mode assemblies.

Please try it. Feedback is welcome, version 2.0 has not been released yet.

Note that MSVCRT is not yet supported.

There are some test projects in the SVN repository available at
http://anonsvn.mono-project.com/viewcvs/trunk/mono/mono/tests/mixed-mode/

Only MixedModeApp and MixedModeLibrary are supposed to work.

Korn?l



From chi at etersoft.ru  Fri Aug  1 09:23:43 2008
From: chi at etersoft.ru (=?koi8-r?b?88XSx8XKIO7P18/To8zP1w==?=)
Date: Fri, 1 Aug 2008 18:23:43 +0400
Subject: DIB engine status
In-Reply-To: <20080801115648.GB24893@merlot.physics.ox.ac.uk>
References: <20080801115648.GB24893@merlot.physics.ox.ac.uk>
Message-ID: <200808011823.43422.chi@office.etersoft.ru>

 Friday 01 August 2008 15:56:48 Huw Davies wrote:
> Hi folks,
>
> Here's an update on the DIB engine that I've been working on for the
> last few months.  This work has been made possible by the generosity
> of Google - so thanks go to them and of course to Dan.
>
> You can find the code at http://repo.or.cz/w/wine/dibeng-hd.git
>
> What's supported
> ================
> - All dib section depths (including BI_BITFIELD support).
>
> - Single pixel solid and dashed pens.
>
> - The 16 rop2s.
>
> - Solid and dib pattern brushes.
>
> - A brunch of primitives for drawing onto all dib section surfaces.
>
> - GDI32 apis: LineTo, Rectangle and PatBlt.
>
> - An extensive test suite for all of the above.
>
> What needs to be done
> =====================
> - Blitting (eg BitBlt, StretchBlt and StretchDIBits) - I have some
>   hacks for these in my tree.
>
> - ExtTextOut
>
> - Many more GDI32 apis - a lot of these should be easy given that we
>   have a set of underlying dib drawing primitives.
>
> - Non-MM_TEXT mapping modes and world transforms.
>
> - The initial interaction with GDI32 in BITMAP_SelectObject is hacky
>   and needs some work.
>
> - Lots more...
>
>
>
> Note that at the moment it's essentially useless because of the lack
> of blitting, so unless you fancy hacking on that yourself then you
> probably don't want to bother fetching the tree.
>
> I'm going to stop working on this for a while (lots of fun Outlook
> 2007 bugs for me to look at!), but will endeavour to keep the tree up
> to date with respect to WineHQ.  If someone *does* want to hack on
> this then feel free to send me patches!
>
> Thanks,
> Huw.
Hello, Huw!

Did you hear anything about Jesse Allen's version of DIB Engine: 
http://article.gmane.org/gmane.comp.emulators.wine.devel/53234 (His version - 
http://repo.or.cz/w/wine/dibdrv.git )
Do you know why it was neccesary to restart solving this problem with your 
work instead of accepting and developing that version?
We'd like to continue develop your version. When are you going to remain this 
project?

Tha/nks, Serge.


From juan.lang at gmail.com  Sat Aug  2 13:16:53 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sat, 2 Aug 2008 11:16:53 -0700
Subject: [1/2] netapi32: Added partial implementation of NetShareAdd
Message-ID: <3a768c550808021116q1b7fc3c5u7a271adff4590c4a@mail.gmail.com>

Hi Vitaliy, overall your patch looks pretty good.  A few minor points:

+    FIXME("(%s %d %p) partially implemented\n",
debugstr_w(servername), level, buf);
Because you add a more specific FIXME for every unimplemented path, it
seems to me this would be better as a TRACE.

+    result = RegCreateKeyExA(HKEY_LOCAL_MACHINE, regKey, 0, NULL, 0, KEY_WRITE,
+                NULL, &hKey, &disposition);
+    if (result != ERROR_SUCCESS)
+    {
+        FIXME("Unable to open/create key 'HKLM\\%s'\n", regKey);
+        return result;
This shouldn't be a FIXME, as there's nothing to "fix" in the code:
if the key couldn't be created, there's a setup problem or some other
unrecoverable error.  A TRACE is fine.

+    /* FIXME: A duplicate patch checking should be implemented here */
Do you mean a duplicate path?

--Juan


From juan.lang at gmail.com  Sat Aug  2 13:26:05 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sat, 2 Aug 2008 11:26:05 -0700
Subject: [2/2] netapi32: Added partial implementation of NetShareGetInfo
Message-ID: <3a768c550808021126g79a10a55rb7d689df485feb5@mail.gmail.com>

Hi again Vitaliy,

+/************************************************************/
+WCHAR *ParseParam(WCHAR **paramStr, const WCHAR *name)

This should be static.  The name of the function also shouldn't be
capitalized like this, to make it clear that it isn't a Win32
function.  Looking at other source files in netapi32, either
NETAPI_ParseParam or simply parse_param would be better.  Also, some
comments for it would be nice.  In particular, the meaning of paramStr
and the return value aren't clear from the function name.

+    FIXME("(%s %s %d %p) partially implemented\n", debugstr_w(servername),
+        debugstr_w(netname), level, bufptr);
As with patch 1, a TRACE is probably better here.

+    size = 512;
+    result = RegQueryValueExW(hKey, netname, NULL, NULL, (LPBYTE)
paramStr, &size);
This isn't actually a correct value for size, size = sizeof(paramStr)
would be correct (and less prone to future error.)  Can the value
become bigger than 512 characters?

--Juan


From juan.lang at gmail.com  Sat Aug  2 13:27:48 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sat, 2 Aug 2008 11:27:48 -0700
Subject: DLL loading prolem when injecting into another process
In-Reply-To: <BAY118-W53A316E6010E8A99AA93B9947E0@phx.gbl>
References: <BAY118-W51033CC21D50A53EFFE578947D0@phx.gbl>
	<9885634A383842D2815FCC53C4B2B2FD@NATERS>
	<BAY118-W25BB0F3F870EC071236BF6947F0@phx.gbl>
	<9AD9899D2F0240D7AB3751D0A6C8E254@NATERS>
	<BAY118-W50BE39C01E8061867C5DA7947F0@phx.gbl>
	<B78735D867E043DAAFEFFC15A5EB1FD5@NATERS>
	<BAY118-W53A316E6010E8A99AA93B9947E0@phx.gbl>
Message-ID: <3a768c550808021127i798fc670sa50873ad83463012@mail.gmail.com>

> What do I have to do to get this patch accepted ?

Write a regression test that shows the problem, marked with todo_wine.
--Juan


From jacek at codeweavers.com  Sat Aug  2 13:34:48 2008
From: jacek at codeweavers.com (Jacek Caban)
Date: Sat, 02 Aug 2008 20:34:48 +0200
Subject: kernal32: change if...if to if...'else if' in
	get_module_path_end()
In-Reply-To: <1217574512101511498@njxvm1.njstar.com>
References: <1217574512101511498@njxvm1.njstar.com>
Message-ID: <4894A8C8.4060909@codeweavers.com>

Hongbo Ni wrote:
> If '\\' is found, there is no point to find '/'.
>   

There is, think about path like
c:\dir1\dir2/file.dll

Jacek


From jjmckenzie51 at earthlink.net  Sat Aug  2 17:24:26 2008
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Sat, 02 Aug 2008 15:24:26 -0700
Subject: rsaenh: Test and correct the maximum allowable salt length
In-Reply-To: <3a768c550807281958s335c50b6rad1b9ea5531a397c@mail.gmail.com>
References: <3a768c550807281958s335c50b6rad1b9ea5531a397c@mail.gmail.com>
Message-ID: <4894DE9A.3080209@earthlink.net>

Juan Lang wrote:
> Inspired by a patch by Karsten Elfenbein.
>   
Who is this and why is this so important?
> --Juan
>   
Per:
http://winehq.org/site/sending_patches

What in the hell does this patch do?  Why is it needed?  What does it 
fix/implement?  Doees this change affect any Bugzilla issues? Where is 
the Changelog?

This is what I have been trying to get you to do.  I have no idea what 
you are up to and I have NO access to IRC or other alternate forms of 
messaging/communications other than this mailing list.

Let's try to do things better in the future.

James McKenzie



From juan.lang at gmail.com  Sat Aug  2 17:41:43 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sat, 2 Aug 2008 15:41:43 -0700
Subject: rsaenh: Test and correct the maximum allowable salt length
In-Reply-To: <4894DE9A.3080209@earthlink.net>
References: <3a768c550807281958s335c50b6rad1b9ea5531a397c@mail.gmail.com>
	<4894DE9A.3080209@earthlink.net>
Message-ID: <3a768c550808021541u4759556eoa0e55391352bc10@mail.gmail.com>

James, please show a little more courtesy.

> Who is this and why is this so important?

Karsten wrote a patch to address an issue he had with Eve Online.
It's important because of attribution:  I wanted people to realize
that I was indebted to him for thinking of it.  I didn't use his code,
though, otherwise I would have said "based on a patch by Karsten
Elfenbein."  You'll find many such changelog entries in the CVS log.
You can find his old patch by googling.

> What in the hell does this patch do?  Why is it needed?  What does it
> fix/implement?  Doees this change affect any Bugzilla issues? Where is
> the Changelog?

The Changelog is the subject of the email, and that's what showed up
in the commit log.  As far as what it does and why it's needed, it
fixes a bug (obviously), whose presence is shown by the test.  Karsten
didn't open a bugzilla entry, otherwise I would have referenced it.

> This is what I have been trying to get you to do.  I have no idea what
> you are up to and I have NO access to IRC or other alternate forms of
> messaging/communications other than this mailing list.

I'm not sure what you mean by trying to get me to do.  You've emailed
me once before when I neglected to put the magic words "try 2" in the
subject of an email.  I'm not sure what that has to do with this.

As far as not having access to other forms of communication, you're
not really on this list, either, at least you don't use an email
address we can reply to without jumping through some hoop.  There's no
missing communication.  All the communication about this issue took
place in this forum and wine-patches.

> Let's try to do things better in the future.

Sorry, I'm doing things just fine.  Read the commit logs.  You may try
to do better in the future if you wish.  You could start by being more
polite.
--Juan


From dank at kegel.com  Sat Aug  2 17:42:13 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 2 Aug 2008 15:42:13 -0700
Subject: Patch checking robot coming
Message-ID: <a71bd89a0808021542n68ae2a4em11e7a371bf440710@mail.gmail.com>

After some discussion with Jeremy and Alexandre
about how nice it would be to have some automated
way to check patches before Alexandre commits them,
I decided to have a go at creating one.

What I have so far is a script that watches wine-patches
and applies each patch to current git, then builds,
and sends email with a subject line saying whether
it worked, and a body containing a short "I'm a build robot"
note, the patch, and the build log.

You can see the code at
http://code.google.com/p/winezeug/source/browse/#svn/trunk/patchwatcher
Its main failing is that it doesn't understand patch
series yet, but I should be able to get that going
by rewriting get-next-patch.pl to take a bit more context into account.

Right now it only emails the results to me, but it's probably
nearly good enough to show results to other people.

Question: where should the results go?
I could put them up on a web site
and/or email them to the patch's author
and/or email them to a dedicated mailing list (e.g.
wine-patches-buildlogs at winehq.org?)
and/or email them to wine-devel.
- Dan


From truiken at gmail.com  Sat Aug  2 17:51:07 2008
From: truiken at gmail.com (James Hawkins)
Date: Sat, 2 Aug 2008 17:51:07 -0500
Subject: fusion: Use proper function pointer
In-Reply-To: <200808022209.49338.andrew.talbot@talbotville.com>
References: <200808022209.49338.andrew.talbot@talbotville.com>
Message-ID: <22821af30808021551r4ea205fcj973c7b789e8f8670@mail.gmail.com>

On Sat, Aug 2, 2008 at 4:09 PM, Andrew Talbot
<andrew.talbot at talbotville.com> wrote:
> Changelog:
>    fusion: Use proper function pointer.
>
> diff --git a/dlls/fusion/fusion.c b/dlls/fusion/fusion.c
> index ac01cf4..637346c 100644
> --- a/dlls/fusion/fusion.c
> +++ b/dlls/fusion/fusion.c
> @@ -32,6 +32,9 @@
>
>  WINE_DEFAULT_DEBUG_CHANNEL(fusion);
>
> +typedef HRESULT (WINAPI *PFNGETCORVERSION)(LPWSTR pbuffer, DWORD cchBuffer,
> +                                           DWORD *dwLength);
> +
>  /******************************************************************
>  *  ClearDownloadCache   (FUSION.@)
>  */
> @@ -89,20 +92,18 @@ HRESULT WINAPI GetAssemblyIdentityFromFile(LPCWSTR pwzFilePath, REFIID riid,
>     return E_NOTIMPL;
>  }
>
> -static HRESULT (WINAPI *pGetCORVersion)(LPWSTR pbuffer, DWORD cchBuffer,
> -                                        DWORD *dwLength);
> -

There's nothing wrong with this.  We use this type of function pointer
all over the code base.

-- 
James Hawkins


From ambro at b4ever.net  Sat Aug  2 18:30:01 2008
From: ambro at b4ever.net (Ambroz Bizjak)
Date: Sun, 3 Aug 2008 01:30:01 +0200 (CEST)
Subject: Patch checking robot coming
In-Reply-To: <a71bd89a0808021542n68ae2a4em11e7a371bf440710@mail.gmail.com>
References: <a71bd89a0808021542n68ae2a4em11e7a371bf440710@mail.gmail.com>
Message-ID: <45133.193.77.101.149.1217719801.squirrel@webmail.b4ever.net>

Dan Kegel wrote:
> What I have so far is a script that watches wine-patches
> and applies each patch to current git, then builds,

Just where are you going to run that? To me, a script that builds just
every patch is a serious security flaw; I suppose it wouldn't be very hard
for someone to send a naughty patch that would take control of your
machine. Something like editing a Makefile. I suggest you make it build
patches in a chroot as a regular user, and copy over the chroot from a
template every time a new patch is being built.



From xerox_xerox2000 at yahoo.co.uk  Sat Aug  2 18:50:45 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis. Lenders)
Date: Sat, 2 Aug 2008 23:50:45 +0000 (GMT)
Subject: rsaenh: Test and correct the maximum allowable salt length
Message-ID: <587930.81709.qm@web23206.mail.ird.yahoo.com>

Usually i don't feel the need to respond to  messages on wine-devel, but now i do:


> What in the hell does this patch do?  Why is it needed?  What does it
> fix/implement?  Doees this change affect any Bugzilla issues? Where is
> the Changelog?
> This is what I have been trying to get you to do.  I have no idea what
> you are up to and I have NO access to IRC or other alternate forms of
> messaging/communications other than this mailing list.

I haven't got a clue what the patch is all about either, 
but if i'd wanted to know i would just drop a friendly note, asking 
some more info. As long as i've followed wine's development i've seen 
Juan as very helpful and main contributor to wine, so i'm  a bit surprised 
about your unfriendly reaction to this patch....


      __________________________________________________________
Not happy with your email address?.
Get the one you really want - millions of new email addresses available now at Yahoo! http://uk.docs.yahoo.com/ymail/new.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080802/17e078a8/attachment-0001.htm 

From dank at kegel.com  Sat Aug  2 19:24:07 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 2 Aug 2008 17:24:07 -0700
Subject: Patch checking robot coming
Message-ID: <a71bd89a0808021724w3125ae57y900f09a56396d267@mail.gmail.com>

Ambroz wrote:
>  To me, a script that builds just
> every patch is a serious security flaw; I suppose it wouldn't
> be very hard for someone to send a naughty patch
> that would take control of your machine.

True.

> I suggest you make it build patches in a chroot
> as a regular user, and copy over the chroot from a
> template every time a new patch is being built.

Sounds great.  Want to implement that and send it
my way?   It'll take me a while to get the kinks worked
out of the script, it'd be nice to have a hand with the chroot.
- Dan


From zgold550 at gmail.com  Sat Aug  2 21:25:52 2008
From: zgold550 at gmail.com (Zachary Goldberg)
Date: Sat, 2 Aug 2008 22:25:52 -0400
Subject: Patch checking robot coming
In-Reply-To: <a71bd89a0808021724w3125ae57y900f09a56396d267@mail.gmail.com>
References: <a71bd89a0808021724w3125ae57y900f09a56396d267@mail.gmail.com>
Message-ID: <b050a5e70808021925g1e0b747uf0661c38350841ff@mail.gmail.com>

On Sat, Aug 2, 2008 at 8:24 PM, Dan Kegel <dank at kegel.com> wrote:
> Ambroz wrote:
>>  To me, a script that builds just
>> every patch is a serious security flaw; I suppose it wouldn't
>> be very hard for someone to send a naughty patch
>> that would take control of your machine.
>
> True.
>
>> I suggest you make it build patches in a chroot
>> as a regular user, and copy over the chroot from a
>> template every time a new patch is being built.
>
> Sounds great.  Want to implement that and send it
> my way?   It'll take me a while to get the kinks worked
> out of the script, it'd be nice to have a hand with the chroot.
> - Dan
>
>
>

Its really ironic that you post this today as just yesterday I was
contemplating the same thing, and not only doing a compile check but
also a run of the test suite and valgrind.  Other than that I wanted
to put in a +1 for sending an email to the author and to a status
website.


From the3dfxdude at gmail.com  Sat Aug  2 21:25:55 2008
From: the3dfxdude at gmail.com (Jesse Allen)
Date: Sat, 2 Aug 2008 20:25:55 -0600
Subject: DIB engine status
In-Reply-To: <200808011823.43422.chi@office.etersoft.ru>
References: <20080801115648.GB24893@merlot.physics.ox.ac.uk>
	<200808011823.43422.chi@office.etersoft.ru>
Message-ID: <530468570808021925n7ad9f07mba976fb1d89db7e6@mail.gmail.com>

On Fri, Aug 1, 2008 at 8:23 AM, ?????? ????????? <chi at etersoft.ru> wrote:
>
> Did you hear anything about Jesse Allen's version of DIB Engine:
> http://article.gmane.org/gmane.comp.emulators.wine.devel/53234 (His version -
> http://repo.or.cz/w/wine/dibdrv.git )
> Do you know why it was neccesary to restart solving this problem with your
> work instead of accepting and developing that version?
> We'd like to continue develop your version. When are you going to remain this
> project?
>
> Tha/nks, Serge.
>


Mainly because I don't have time, I only have access to that git, and
I have another job :) I did a bit of work on it last december that I
didn't release. It's still on my hard drive. Huw's DIB tree is similar
in concept to what I did. He was my mentor if you remember. But it
doesn't mean what I was doing was usable. I trust Huw can manage
building the basis of a DIB engine alot better than me. But I will
likely download his tree and play around with it before school starts
again.

From dank at kegel.com  Sat Aug  2 21:36:26 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 2 Aug 2008 19:36:26 -0700
Subject: Patch checking robot coming
In-Reply-To: <b050a5e70808021925g1e0b747uf0661c38350841ff@mail.gmail.com>
References: <a71bd89a0808021724w3125ae57y900f09a56396d267@mail.gmail.com>
	<b050a5e70808021925g1e0b747uf0661c38350841ff@mail.gmail.com>
Message-ID: <a71bd89a0808021936x185400e8icf2087aa9c617c32@mail.gmail.com>

On Sat, Aug 2, 2008 at 7:25 PM, Zachary Goldberg <zgold550 at gmail.com> wrote:
> Its really ironic that you post this today as just yesterday I was
> contemplating the same thing, and not only doing a compile check but
> also a run of the test suite and valgrind.

Yeah, that's the end goal.  Gotta walk before you run, though.

> Other than that I wanted to put in a +1 for sending an
> email to the author and to a status website.

Yeah, I'll probably do that.  I'll probably only send the email
in case of a failure; nobody needs extra email that just
tells them what they already knew (that their patch was perfect :-)
- Dan


From dmitry at codeweavers.com  Sat Aug  2 22:00:28 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 3 Aug 2008 12:00:28 +0900
Subject: [1/2] mlang: Add implementation of
	fnIMLangFontLink_GetCharCodePages
References: <200808021613.12951.vitperov@etersoft.ru>
Message-ID: <84FF1AD176374EE79A6CEBC88D8A1A23@DMITRY>

"Vitaly Perov" <vitperov at etersoft.ru> wrote:

> @@ -1855,8 +1855,56 @@ static HRESULT WINAPI fnIMLangFontLink_GetCharCodePages(
>          WCHAR chSrc,
>          DWORD* pdwCodePages)
>  {
> -    FIXME("\n");
> -    return E_NOTIMPL;
> +    /* codepages, supported by Windows */
> +    static const unsigned int processCP[] = {1250, 1251, 1252, 1253, 1254, 1255,
> +        1256, 1257, 1258, 874, 932, 936, 949, 950, 0};

It doesn't really matter what code pages Windows supports, it does
matter though what code pages are valid. You need to use Win32 APIs
EnumSystemCodePages/GetCPInfo/MultiByteToWideChar instead of accessing
Wine internals directly.

-- 
Dmitry.


From dmitry at codeweavers.com  Sat Aug  2 22:05:51 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 3 Aug 2008 12:05:51 +0900
Subject: [2/2] mlang/tests: add test for fnIMLangFontLink_GetCharCodePages
References: <200808021613.20699.vitperov@etersoft.ru>
Message-ID: <62E050D02BE14B51B038D73B63ADCAE7@DMITRY>

"Vitaly Perov" <vitperov at etersoft.ru> wrote:

> +    /* Tests for GetCharCodePages */
> +    /* Latin 1 */
> +    ok(IMLangFontLink_GetCharCodePages(iMLFL, 'd', &dwCodePages) == S_OK,
> +        "IMLangFontLink_GetCharCodePages failed\n");
> +    ok(dwCodePages == 2032127, "Incorrect CodePages returned (%i)\n", dwCodePages);
> +
> +    /* Cyrillic (Japanese, Simplified Chinese and Korean are also
> +       include these symbols) */
> +    ok(IMLangFontLink_GetCharCodePages(iMLFL, 0x0436, &dwCodePages) == S_OK,
> +        "IMLangFontLink_GetCharCodePages failed\n");
> +    ok(dwCodePages == 917508, "Incorrect CodePages returned (%i)\n", dwCodePages);
> +
> +    /* Japanese */
> +    ok(IMLangFontLink_GetCharCodePages(iMLFL, 0xff6f, &dwCodePages) == S_OK,
> +        "IMLangFontLink_GetCharCodePages failed\n");
> +    ok(dwCodePages == 131072, "Incorrect CodePages returned (%i)\n", dwCodePages);

Please use symbolic names for code pages bit field.

-- 
Dmitry.


From dmitry at codeweavers.com  Sat Aug  2 22:09:54 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 3 Aug 2008 12:09:54 +0900
Subject: ntdll: import dll from dir of referring dll if not found
	instandard locations
References: <1217575415101518340@njxvm1.njstar.com>
Message-ID: <C67F62172C154E1DA0050D9F798A5692@DMITRY>

"Hongbo Ni" <hongbo at njstar.com> wrote:

> This patch fixes bug 14699. It should fix all failed applications
> which try to load a dll from specific folder, and the dll is link
> another dll in the same folder.

Please add a test case for this behaviour to confirm that your patch
is doing a correct thing.

-- 
Dmitry.


From dmitry at codeweavers.com  Sat Aug  2 23:11:09 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 3 Aug 2008 13:11:09 +0900
Subject: [1/2] mlang: Add implementation
	offnIMLangFontLink_GetCharCodePages
References: <200808021613.12951.vitperov@etersoft.ru>
	<84FF1AD176374EE79A6CEBC88D8A1A23@DMITRY>
Message-ID: <9BFC50F4DB6644ED80DFF7CDEEBFE4FE@DMITRY>

"Dmitry Timoshkov" <dmitry at codeweavers.com> wrote:

> It doesn't really matter what code pages Windows supports, it does
> matter though what code pages are valid. You need to use Win32 APIs
> EnumSystemCodePages/GetCPInfo/MultiByteToWideChar instead of accessing
> Wine internals directly.

... or rather use mlang internal mlang_data structures.

-- 
Dmitry.


From hongbo_ni at hotmail.com  Sun Aug  3 01:45:15 2008
From: hongbo_ni at hotmail.com (Hongbo Ni)
Date: Sun, 3 Aug 2008 16:45:15 +1000
Subject: ntdll: import dll from dir of referring dll if not found
	instandard locations
In-Reply-To: <C67F62172C154E1DA0050D9F798A5692@DMITRY>
References: <1217575415101518340@njxvm1.njstar.com>
	<C67F62172C154E1DA0050D9F798A5692@DMITRY>
Message-ID: <BAY118-W4972F6F639633D6945E06994790@phx.gbl>


"Dmitry Timoshkov" <dmitry at codeweavers.com> wrote:> > This patch fixes bug 14699. It should fix all failed applications> > which try to load a dll from specific folder, and the dll is link> > another dll in the same folder.> > Please add a test case for this behaviour to confirm that your patch> is doing a correct thing.Please ignore this patch. This is not how window work. Window&Wine solve it byLoadLibraryExW(module, NULL, LOAD_WITH_ALTERED_SEARCH_PATH)  I will post another patch to just solve bug 14699. As discussed in my prev email: RE: DLL loading prolem when injecting into another process? @ -322,7 +322,7 @@ void *get_hook_proc( void *proc, const WCHAR *module ){     TRACE( "loading %s\n", debugstr_w(module) );     /* FIXME: the library will never be freed */-    if (!(mod = LoadLibraryW(module))) return NULL;+   if (!(mod = LoadLibraryExW(module, NULL, LOAD_WITH_ALTERED_SEARCH_PATH))) return NULL;   }   return (char *)mod + (ULONG_PTR)proc;}Currently there is no test case to show LoadLibraryW above has loaded the module in the processother than current process. But how can I write test case to justify using LoadLibraryExW instead LoadLibraryW above ?  How can I know if another process has loaded the DLL containing GetMsgProc when I am trying to callSetWindowsHookEx(WH_GETMESSAGE, GetMsgProc, g_hinstDll,GetWindowThreadProcessId(hwnd, NULL)); Hongbo Ni
_________________________________________________________________
Meet singles near you. Try ninemsn dating now!
http://a.ninemsn.com.au/b.aspx?URL=http%3A%2F%2Fdating%2Eninemsn%2Ecom%2Eau%2Fchannel%2Findex%2Easpx%3Ftrackingid%3D1046247&_t=773166080&_r=WL_TAGLINE&_m=EXT
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080803/77ed54a8/attachment.htm 

From jeffzaroyko at gmail.com  Sun Aug  3 03:27:23 2008
From: jeffzaroyko at gmail.com (Jeff Zaroyko)
Date: Sun, 3 Aug 2008 18:27:23 +1000
Subject: xinput implementation
In-Reply-To: <op.ue51cei3t3yy3k@chourmovs-desktop>
References: <a71bd89a0807310704j5903bc15p7d9c3609e21b9946@mail.gmail.com>
	<op.ue51cei3t3yy3k@chourmovs-desktop>
Message-ID: <f5d9424f0808030127y4158d020w6f8f8f8f391690a3@mail.gmail.com>

On Fri, Aug 1, 2008 at 2:56 AM, chourmovs <vince.saulnier at free.fr> wrote:
> If i've understood what i read before, i think i've found a sort of xinput's conformance test suite writen by windows coder
> what do you think of that ?
>
> http://www.codeproject.com/KB/directx/xbox360_cont_xinput.aspx
>
> We've got the source code for a test and even binaries !!
>
> I've to test its behaviour under windows XP and after use it under wine to test new code and patches, isn't it ? I'm not sure to understand the conformance test guide well
>
> Thank you

It's in C++ and the license looks incompatible with the LGPL.  So, no
it doesn't look like it can be used.  If you're looking to contribute
code, it's probably in your best interest to learn to program in C by
picking up a book such as 'The C Programming Language, second edition'
by K&R as a start, otherwise you have a large gap between not knowing
how to program in C and being able to contribute to the degree which
you've expressed interest.

-Jeff


From hverbeet at gmail.com  Sun Aug  3 03:56:06 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Sun, 3 Aug 2008 10:56:06 +0200
Subject: [3/9] WineD3D: Beware of the frontbuffer coordinate system
	difference
In-Reply-To: <002201c8f533$148a6310$3d9f2930$@com>
References: <002201c8f533$148a6310$3d9f2930$@com>
Message-ID: <d658b69e0808030156y4d2eab78m91f48a089324a806@mail.gmail.com>

2008/8/3 Stefan D?singer <stefan at codeweavers.com>:
> +            src_rect->x1 -= offset.x; dst_rect->x2 -=offset.x;
Why are you modifying dst_rect here?


From hverbeet at gmail.com  Sun Aug  3 04:00:53 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Sun, 3 Aug 2008 11:00:53 +0200
Subject: [7/9] WineD3D: Always load glFinish and glFlush from opengl32.dll
In-Reply-To: <001201c8f533$039e6ab0$0adb4010$@com>
References: <001201c8f533$039e6ab0$0adb4010$@com>
Message-ID: <d658b69e0808030200x190680c2h3a5d036a4cd38a9e@mail.gmail.com>

2008/8/3 Stefan D?singer <stefan at codeweavers.com>:
> +/* glFinish and glFlush are always loaded from opengl32.dll, this the always have
> + * __stdcall calling convention
> + */
In theory WINAPI could be something else than __stdcall.


From ambro at b4ever.net  Sun Aug  3 05:22:32 2008
From: ambro at b4ever.net (Ambroz Bizjak)
Date: Sun, 3 Aug 2008 12:22:32 +0200 (CEST)
Subject: Patch checking robot coming
In-Reply-To: <a71bd89a0808021724w3125ae57y900f09a56396d267@mail.gmail.com>
References: <a71bd89a0808021724w3125ae57y900f09a56396d267@mail.gmail.com>
Message-ID: <50954.193.77.101.149.1217758952.squirrel@webmail.b4ever.net>

Dan Kegel wrote:
> Sounds great.  Want to implement that and send it
> my way?   It'll take me a while to get the kinks worked
> out of the script, it'd be nice to have a hand with the chroot.
> - Dan

OK, I'll try it. I have a lot of experience with the OS's architecture so
it should be ready soon.



From jarredsumner at gmail.com  Sat Aug  2 18:23:31 2008
From: jarredsumner at gmail.com (Jarred Sumner)
Date: Sat, 2 Aug 2008 16:23:31 -0700
Subject: World of Warcraft's Current Perforamnce Rating
Message-ID: <62dc9df70808021623w5cd0d3bbo7acb18729621e8a9@mail.gmail.com>

Dear Wine Dev's,

    It seems that as of wine 1.1.0 and later, Almost Every Game's
performance that I play on linux has vastly improved. Those games are:


   - World of Warcraft
   - City of Heroes
   - Command & Conquer 3 Tiberium Wars

World of Warcraft's Performance has reached higher levels than Windows XP
Professional Service Pack 3. It runs 85 FPS whereas on Windows it runs 75fps
averagely

City of Heroes runs the same on Windows as on Linux

Command & Conquer 3 Tiberium Wars Runs a little better due to the fact that
there is no anti-aliasing (With the patches provided on the appdb)

Great Job with this wine development team!

I have tested these games on the following distrobutions:

Arch CORE
Ubuntu 8.04.1 & 8.04
Slackware 12.1

Thank You for making gaming on Linux Playable!

Sincerely,
Jarrhed
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080802/fcc441df/attachment.htm 

From piotr.caban at gmail.com  Sun Aug  3 06:15:07 2008
From: piotr.caban at gmail.com (Piotr Caban)
Date: Sun, 3 Aug 2008 13:15:07 +0200
Subject: msxml3: off-by-one fix for Qname allocation
In-Reply-To: <mailman.922.1217706731.4616.wine-patches@winehq.org>
References: <mailman.922.1217706731.4616.wine-patches@winehq.org>
Message-ID: <200808031315.07846.piotr.caban@gmail.com>

Hi Joris,
SysAllocStringLen allocates additional space for NULL byte. It's not needed to 
change string size.
On the other hand QNames should be created differently. I will send patches 
changing it soon.

Regards,
Piotr


From Andrew.Talbot at talbotville.com  Sun Aug  3 07:15:28 2008
From: Andrew.Talbot at talbotville.com (Andrew Talbot)
Date: Sun, 03 Aug 2008 13:15:28 +0100
Subject: fusion: Use proper function pointer
References: <200808022209.49338.andrew.talbot@talbotville.com>
	<22821af30808021551r4ea205fcj973c7b789e8f8670@mail.gmail.com>
Message-ID: <g747h1$reb$1@ger.gmane.org>

James Hawkins wrote:

> On Sat, Aug 2, 2008 at 4:09 PM, Andrew Talbot
> <andrew.talbot at talbotville.com> wrote:
>> Changelog:
>>    fusion: Use proper function pointer.
>>
>> diff --git a/dlls/fusion/fusion.c b/dlls/fusion/fusion.c
>> index ac01cf4..637346c 100644
>> --- a/dlls/fusion/fusion.c
>> +++ b/dlls/fusion/fusion.c
>> @@ -32,6 +32,9 @@
>>
>>  WINE_DEFAULT_DEBUG_CHANNEL(fusion);
>>
>> +typedef HRESULT (WINAPI *PFNGETCORVERSION)(LPWSTR pbuffer, DWORD
>> cchBuffer,
>> +                                           DWORD *dwLength);
>> +
>>  /******************************************************************
>>  *  ClearDownloadCache   (FUSION.@)
>>  */
>> @@ -89,20 +92,18 @@ HRESULT WINAPI GetAssemblyIdentityFromFile(LPCWSTR
>> pwzFilePath, REFIID riid,
>>     return E_NOTIMPL;
>>  }
>>
>> -static HRESULT (WINAPI *pGetCORVersion)(LPWSTR pbuffer, DWORD cchBuffer,
>> -                                        DWORD *dwLength);
>> -
> 
> There's nothing wrong with this.  We use this type of function pointer
> all over the code base.
> 

Hi James,

I think the part of my patch you have copied excludes the crucial bit (please excuse the line-wrapping).

-    pGetCORVersion = (void *)GetProcAddress(hmscoree, "GetCORVersion");
+    pGetCORVersion = (PFNGETCORVERSION)GetProcAddress(hmscoree, "GetCORVersion");

The thing that I would argue is wrong is that we are using an object pointer

    (void*)

in place of a function pointer

    <return type> (*)(<args>)

Granted there are probably around two thousand other instances like this in the dlls, and some may argue that it works, so leave it. On the other hand, there are also quite a lot of type definitions for *PFN...s and several MAKE_FUNCPTR() macros around, too.

I seem to remember that someone tried to compile Wine with Visual Studio or suchlike, recently, and had to suppress warnings about using object pointers instead of function pointers (amongst other things).

Anyway, I just fly the odd flag in good faith, occasionally, and see whether it gets saluted or shot down. :)

Thanks and kind regards,

-- 
Andy.




From wine at mkarcher.dialup.fu-berlin.de  Sun Aug  3 07:18:24 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sun, 03 Aug 2008 14:18:24 +0200
Subject: fusion: Use proper function pointer
In-Reply-To: <22821af30808021551r4ea205fcj973c7b789e8f8670@mail.gmail.com>
References: <200808022209.49338.andrew.talbot@talbotville.com>
	<22821af30808021551r4ea205fcj973c7b789e8f8670@mail.gmail.com>
Message-ID: <1217765904.5061.10.camel@hermes2.karcher.local>

Am Samstag, den 02.08.2008, 17:51 -0500 schrieb James Hawkins:
> > -static HRESULT (WINAPI *pGetCORVersion)(LPWSTR pbuffer, DWORD cchBuffer,
> > -                                        DWORD *dwLength);
> > -
> 
> There's nothing wrong with this.  We use this type of function pointer
> all over the code base.

You don't quote the interesting part:
> > -    pGetCORVersion = (void *)GetProcAddress(hmscoree, "GetCORVersion");
> > +    pGetCORVersion = (PFNGETCORVERSION)GetProcAddress(hmscoree, "GetCORVersion");

This *is* wrong, according to the C standard. You may not cast a
function pointer to a data pointer (like void*). There might be
precedence in Wine to ignore this rule, but the patch seems appropriate
at this point, as GetProcAddress does, in fact, return a
pointer-to-function (FARPROC, which is typedefed in windef.h to a
function pointer), which gets assigned to a function pointer. The
(void*) cast is an IMHO misguided attempt to suppress the warning of
casting between to function pointers of different types. As there is no
void* like generic pointer for function pointers, the only sensible way
to suppress the warning without causing undefined behaviour really is
casting the result of GetProcAddress to the type of the destination
pointer. As the casts to function pointer types look utterly
incomprehensible in C, it seems correct to introduce a typedef, like the
patch does.

Another point of the patch is that is makes a static global variable a
local function variable. I don't take a position on that change,
although on the first glance it seems reasonable, as the global variable
is initialized on each entry into get_corversion. If the address of
GetCORVersion should be cached between invocations, the GetProcAddress
and LoadLibraryA calls should probably be guarded by pGetCORVersion !=
NULL.

Regards,
  Michael Karcher



From hongbo_ni at hotmail.com  Sun Aug  3 08:54:37 2008
From: hongbo_ni at hotmail.com (Hongbo Ni)
Date: Sun, 3 Aug 2008 23:54:37 +1000
Subject: problem loading wine test projects windows vista
Message-ID: <BAY118-W5665E3798D8280C540E18694790@phx.gbl>


Hi,

I want to build and test wine test suite on window, I did

./tools/winapi/msvcmaker --no-wine

that is ok, but when I try to open the fille winetest.dsw,

1. with Developer Studio 6.0, it compaints that all *.dsp files (such as dlls\advapi32\tests\advapi32_test.dsp)
   have been modified and can not be loaded as Developer Studio Project.
   
2. with Developer Studio 2008, half of the *.dsp files (such as dlls\user32\tests\user32_test.dsp) 
   was reported corrupted after been converted into the current Visual C++ project format. 

Does anyone know what is the problem? Please help me.

I really need to compile and run existing tests on window before I can write any test case for wine.

Regards
Hongbo Ni
_________________________________________________________________
It's simple! Sell your car for just $40 at CarPoint.com.au
http://a.ninemsn.com.au/b.aspx?URL=http%3A%2F%2Fsecure%2Dau%2Eimrworldwide%2Ecom%2Fcgi%2Dbin%2Fa%2Fci%5F450304%2Fet%5F2%2Fcg%5F801459%2Fpi%5F1004813%2Fai%5F859641&_t=762955845&_r=tig_OCT07&_m=EXT

From stefan at codeweavers.com  Sun Aug  3 09:36:19 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Sun, 3 Aug 2008 09:36:19 -0500
Subject: [3/9] WineD3D: Beware of the frontbuffer coordinate
	system	difference
In-Reply-To: <d658b69e0808030156y4d2eab78m91f48a089324a806@mail.gmail.com>
References: <002201c8f533$148a6310$3d9f2930$@com>
	<d658b69e0808030156y4d2eab78m91f48a089324a806@mail.gmail.com>
Message-ID: <004b01c8f576$4bd0cba0$e37262e0$@com>

> 2008/8/3 Stefan D?singer <stefan at codeweavers.com>:
> > +            src_rect->x1 -= offset.x; dst_rect->x2 -=offset.x;
> Why are you modifying dst_rect here?
Wooops. Copypaste.





From stefan at codeweavers.com  Sun Aug  3 09:36:19 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Sun, 3 Aug 2008 09:36:19 -0500
Subject: [7/9] WineD3D: Always load glFinish and glFlush from opengl32.dll
In-Reply-To: <d658b69e0808030200x190680c2h3a5d036a4cd38a9e@mail.gmail.com>
References: <001201c8f533$039e6ab0$0adb4010$@com>
	<d658b69e0808030200x190680c2h3a5d036a4cd38a9e@mail.gmail.com>
Message-ID: <004c01c8f576$516308d0$f4291a70$@com>

> 2008/8/3 Stefan D?singer <stefan at codeweavers.com>:
> > +/* glFinish and glFlush are always loaded from opengl32.dll, this
> the always have
> > + * __stdcall calling convention
> > + */
> In theory WINAPI could be something else than __stdcall.
The code uses __stdcall, not WINAPI, if USE_WIN32_OPENGL is defined, thus
I've used __stdcall here too




From dank at kegel.com  Sun Aug  3 10:28:13 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 3 Aug 2008 08:28:13 -0700
Subject: problem loading wine test projects windows vista
Message-ID: <a71bd89a0808030828s5ddfbc70l323a8f81041387ed@mail.gmail.com>

Hongbo wrote:
> I really need to compile and run existing tests on window before I can write any test case for wine.

The easiest way is to cross-compile them on wine and then run them on windows.

To do this, say
   make crosstest

See
http://www.winehq.org/site/docs/winedev-guide/cross-compiling-tests
- Dan


From msclrhd at googlemail.com  Sun Aug  3 09:27:07 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Sun, 3 Aug 2008 15:27:07 +0100
Subject: problem loading wine test projects windows vista
In-Reply-To: <BAY118-W5665E3798D8280C540E18694790@phx.gbl>
References: <BAY118-W5665E3798D8280C540E18694790@phx.gbl>
Message-ID: <3f4fd2640808030727m7344464cn7f4dfe59037a7d5e@mail.gmail.com>

2008/8/3 Hongbo Ni <hongbo_ni at hotmail.com>:
>
> Hi,
>
> I want to build and test wine test suite on window, I did
>
> ./tools/winapi/msvcmaker --no-wine
>
> that is ok, but when I try to open the fille winetest.dsw,
>
> 1. with Developer Studio 6.0, it compaints that all *.dsp files (such as dlls\advapi32\tests\advapi32_test.dsp)
>   have been modified and can not be loaded as Developer Studio Project.
>
> 2. with Developer Studio 2008, half of the *.dsp files (such as dlls\user32\tests\user32_test.dsp)
>   was reported corrupted after been converted into the current Visual C++ project format.
>
> Does anyone know what is the problem? Please help me.
>
> I really need to compile and run existing tests on window before I can write any test case for wine.

What is git's core.autocrlf setting configured to? I had this issue
(some of the detected filenames are '\r' - which is caused by perl
being confused, which then confuses Visual Studio).

You need to set core.autocrlf to false:

    $ git config --bool core.autocrlf false

HTH,
- Reece


From paul.vriens.wine at gmail.com  Sun Aug  3 12:50:42 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Sun, 03 Aug 2008 19:50:42 +0200
Subject: winetest sometimes shows 'crashed' and sometimes 'timeout'
Message-ID: <4895EFF2.4050804@gmail.com>

Hi,

A few months ago I mentioned the fact that due to some issues with old 
kernel32/debugger tests there were some leftovers in the registry:

HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AeDebug
  (contains 'Debugger' which points to kernel32_test.exe)

I have a feeling that on systems where this AeDebug contains normal debugger 
information we sometimes see 'crashed' whereas we see 'timeout' when the key 
still contains our own entry.

Can anybody confirm this finding?

What I'm actually looking for is people having a look at that registry key to 
see the contents. If it's indeed something containing "kernel32_test.exe" I'd 
like to hear about it (preferably with the tag they have used for the winetest run).

One way to fix this registry key is to run 'drwtsn32 -i'. This of course 
restores the basic dr watson entry and not some specific debug program that was 
there before.

-- 
Cheers,

Paul.


From hverbeet at gmail.com  Sun Aug  3 13:12:25 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Sun, 3 Aug 2008 20:12:25 +0200
Subject: [7/9] WineD3D: Always load glFinish and glFlush from opengl32.dll
In-Reply-To: <004c01c8f576$516308d0$f4291a70$@com>
References: <001201c8f533$039e6ab0$0adb4010$@com>
	<d658b69e0808030200x190680c2h3a5d036a4cd38a9e@mail.gmail.com>
	<004c01c8f576$516308d0$f4291a70$@com>
Message-ID: <d658b69e0808031112g7fb86b50n3811b0c7193d15ea@mail.gmail.com>

2008/8/3 Stefan D?singer <stefan at codeweavers.com>:
> The code uses __stdcall, not WINAPI, if USE_WIN32_OPENGL is defined, thus
> I've used __stdcall here too
>
What code? The exports in opengl32.dll are WINAPI. (It would only
really make a difference for Win64, I guess)


From chourmovs at gmail.com  Sun Aug  3 13:24:23 2008
From: chourmovs at gmail.com (chourmovs vs)
Date: Sun, 3 Aug 2008 20:24:23 +0200
Subject: No subject
Message-ID: <374283970808031124w25292690t2753815e945d78a9@mail.gmail.com>

chourmovs at gmail.com


From Andrew.Talbot at talbotville.com  Sun Aug  3 13:26:03 2008
From: Andrew.Talbot at talbotville.com (Andrew Talbot)
Date: Sun, 03 Aug 2008 19:26:03 +0100
Subject: msvfw32: Rename macro parameter to avoid string coincidence
References: <200808031820.29188.andrew.talbot@talbotville.com>
Message-ID: <g74t7r$l49$1@ger.gmane.org>

You might want to forget this one. I guess no one is compiling Wine on a
broken, pre-ANSI compiler. So the expansion of macro parameters inside
string literals may well, in effect, be a non-issue.

-- 
Andy.




From chourmovs at gmail.com  Sun Aug  3 13:29:28 2008
From: chourmovs at gmail.com (chourmovs)
Date: Sun, 3 Aug 2008 11:29:28 -0700 (PDT)
Subject: xinput implementation
Message-ID: <18800318.post@talk.nabble.com>



Jeff Zaroyko wrote:
> 
> 
> It's in C++ and the license looks incompatible with the LGPL.  So, no
> it doesn't look like it can be used.  If you're looking to contribute
> code, it's probably in your best interest to learn to program in C by
> picking up a book such as 'The C Programming Language, second edition'
> by K&R as a start, otherwise you have a large gap between not knowing
> how to program in C and being able to contribute to the degree which
> you've expressed interest.
> 
> -Jeff
> 

Hi Jeff thank you for your support
I've got few notion of c, and i've never tried class programming with c++
The fact is what i found about xinput on the web use xinput msnd classes
like windows.h and xinput.h
How could i rewrite what is included in msdn ? How could i intercept xinput
signal with c coding without any classes ?
To Follow Dan instruction, my first and only aim is to write conformance
test for the moment but i'm not sure i have understood what i've to do

-- 
View this message in context: http://www.nabble.com/xinput-implementation-tp18748649p18800318.html
Sent from the Wine - Devel mailing list archive at Nabble.com.



From alexd4 at inbox.lv  Sun Aug  3 16:52:39 2008
From: alexd4 at inbox.lv (Alexander Dorofeyev)
Date: Mon, 04 Aug 2008 00:52:39 +0300
Subject: [2/2] wined3d: Use CTXUSAGE_RESOURCELOAD for ActivateContext()
	in	color_fill_fbo()
In-Reply-To: <d658b69e0808031217v743022c7pe2ffca52a68fef0f@mail.gmail.com>
References: <d658b69e0808031217v743022c7pe2ffca52a68fef0f@mail.gmail.com>
Message-ID: <489628A7.8030705@inbox.lv>

H. Verbeet wrote:

> +    IWineD3DDeviceImpl_MarkStateDirty(This, STATE_RENDER(WINED3DRS_SCISSORTESTENABLE));
> +
> +    glDisable(GL_BLEND);
> +    IWineD3DDeviceImpl_MarkStateDirty(This, STATE_RENDER(WINED3DRS_ALPHABLENDENABLE));

Don't you need to also dirtify STATE_SCISSORRECT there?


From stefan at codeweavers.com  Sun Aug  3 16:54:55 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Sun, 3 Aug 2008 16:54:55 -0500
Subject: [7/9] WineD3D: Always load glFinish and glFlush from opengl32.dll
In-Reply-To: <d658b69e0808031112g7fb86b50n3811b0c7193d15ea@mail.gmail.com>
References: <001201c8f533$039e6ab0$0adb4010$@com>	
	<d658b69e0808030200x190680c2h3a5d036a4cd38a9e@mail.gmail.com>	
	<004c01c8f576$516308d0$f4291a70$@com>
	<d658b69e0808031112g7fb86b50n3811b0c7193d15ea@mail.gmail.com>
Message-ID: <004701c8f5b3$91572e20$b4058a60$@com>

> > The code uses __stdcall, not WINAPI, if USE_WIN32_OPENGL is defined,
> thus
> > I've used __stdcall here too
> >
> What code? The exports in opengl32.dll are WINAPI. (It would only
> really make a difference for Win64, I guess)
The definition of WINE_GLAPI on top of the same file:

#ifdef USE_WIN32_OPENGL
#define WINE_GLAPI __stdcall
#else
#define WINE_GLAPI
#endif

I can surely send a patch that replaces the __stdcall in there with WINAPI,
but I'd prefer to ask Roderick first why he set it up this way.




From scott at open-vote.org  Sun Aug  3 21:27:36 2008
From: scott at open-vote.org (Scott Ritchie)
Date: Sun, 03 Aug 2008 19:27:36 -0700
Subject: Patch checking robot coming
In-Reply-To: <a71bd89a0808021936x185400e8icf2087aa9c617c32@mail.gmail.com>
References: <a71bd89a0808021724w3125ae57y900f09a56396d267@mail.gmail.com>	<b050a5e70808021925g1e0b747uf0661c38350841ff@mail.gmail.com>
	<a71bd89a0808021936x185400e8icf2087aa9c617c32@mail.gmail.com>
Message-ID: <48966918.8060004@open-vote.org>

Dan Kegel wrote:
> On Sat, Aug 2, 2008 at 7:25 PM, Zachary Goldberg <zgold550 at gmail.com> wrote:
>> Its really ironic that you post this today as just yesterday I was
>> contemplating the same thing, and not only doing a compile check but
>> also a run of the test suite and valgrind.
> 
> Yeah, that's the end goal.  Gotta walk before you run, though.
> 
>> Other than that I wanted to put in a +1 for sending an
>> email to the author and to a status website.
> 
> Yeah, I'll probably do that.  I'll probably only send the email
> in case of a failure; nobody needs extra email that just
> tells them what they already knew (that their patch was perfect :-)
> - Dan
> 
> 
Depending on how bogged-down the robot gets (compiler cache will help),
it might be useful to have a visible status somewhere so I know that my
patch was at least checked before bothering Alexandre to commit it :)


Thanks,
Scott Ritchie


From dmitry at codeweavers.com  Sun Aug  3 23:18:37 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 4 Aug 2008 13:18:37 +0900
Subject: user32/tests: Avoid crash on win9x in win.c
References: <1217797302.7803.23.camel@p4.lan>
Message-ID: <CF3888EEFC1242FF8BB895644B3B44C3@DMITRY>

"Detlef Riekenberg" <wine.dev at web.de> wrote:

> @@ -4765,10 +4765,14 @@ static void test_hwnd_message(void)
>          parent = pGetAncestor(hwnd, GA_PARENT);
>          ok(parent != 0, "GetAncestor(GA_PARENT) should not return 0 for message windows\n");
>          ok(parent != desktop, "GetAncestor(GA_PARENT) should not return desktop for message windows\n");
> -        root = pGetAncestor(hwnd, GA_ROOT);
> -        ok(root == hwnd, "GetAncestor(GA_ROOT) should return hwnd for message windows\n");
> +        if (0) {
> +            /* this crash on win9x */
> +            root = pGetAncestor(hwnd, GA_ROOT);
> +            ok(root == hwnd, "GetAncestor(GA_ROOT) should return hwnd for message windows\n");
> +        }

HWND_MESSAGE is not supported on win9x, so there is no point in
disabling a part of the test which is not supposed to pass a all.
Probably CreateWindowEx doesn't fail for some reason, so you need
to find a different way to detect that.

-- 
Dmitry.


From chourmovs at gmail.com  Sun Aug  3 11:57:18 2008
From: chourmovs at gmail.com (chourmovs)
Date: Sun, 3 Aug 2008 09:57:18 -0700 (PDT)
Subject: xinput implementation
In-Reply-To: <f5d9424f0808030127y4158d020w6f8f8f8f391690a3@mail.gmail.com>
References: <op.ue4e57uct3yy3k@chourmovs-desktop>
	<a71bd89a0807310704j5903bc15p7d9c3609e21b9946@mail.gmail.com>
	<op.ue51cei3t3yy3k@chourmovs-desktop>
	<f5d9424f0808030127y4158d020w6f8f8f8f391690a3@mail.gmail.com>
Message-ID: <18800318.post@talk.nabble.com>




Jeff Zaroyko wrote:
> 
> 
> It's in C++ and the license looks incompatible with the LGPL.  So, no
> it doesn't look like it can be used.  If you're looking to contribute
> code, it's probably in your best interest to learn to program in C by
> picking up a book such as 'The C Programming Language, second edition'
> by K&R as a start, otherwise you have a large gap between not knowing
> how to program in C and being able to contribute to the degree which
> you've expressed interest.
> 
> -Jeff
> 

Hi Jeff thank you for your support
I've got few notion of c, and i've never tried class programming with c++
The fact is what i found about xinput on the net call xinput msnd classes
like windows.h and xinput.h
How could i rewrite what is included in msdn ? How could i intercept xinput
signal with c coding without any classes ?
To Follow Dan instruction, my first and only aim is to write conformance
test for the moment but i'm not sure i have understood what i've to do

-- 
View this message in context: http://www.nabble.com/xinput-implementation-tp18748649p18800318.html
Sent from the Wine - Devel mailing list archive at Nabble.com.



From hverbeet at gmail.com  Mon Aug  4 01:55:46 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Mon, 4 Aug 2008 08:55:46 +0200
Subject: [2/2] wined3d: Use CTXUSAGE_RESOURCELOAD for ActivateContext() in
	color_fill_fbo()
In-Reply-To: <489628A7.8030705@inbox.lv>
References: <d658b69e0808031217v743022c7pe2ffca52a68fef0f@mail.gmail.com>
	<489628A7.8030705@inbox.lv>
Message-ID: <d658b69e0808032355g636d351fhe3ac3f11250cc706@mail.gmail.com>

2008/8/3 Alexander Dorofeyev <alexd4 at inbox.lv>:
> H. Verbeet wrote:
>
>> +    IWineD3DDeviceImpl_MarkStateDirty(This, STATE_RENDER(WINED3DRS_SCISSORTESTENABLE));
>> +
>> +    glDisable(GL_BLEND);
>> +    IWineD3DDeviceImpl_MarkStateDirty(This, STATE_RENDER(WINED3DRS_ALPHABLENDENABLE));
>
> Don't you need to also dirtify STATE_SCISSORRECT there?
>
Probably, yeah.


From fgouget at free.fr  Mon Aug  4 03:23:34 2008
From: fgouget at free.fr (Francois Gouget)
Date: Mon, 4 Aug 2008 10:23:34 +0200 (CEST)
Subject: DIB engine status
In-Reply-To: <20080801115648.GB24893@merlot.physics.ox.ac.uk>
References: <20080801115648.GB24893@merlot.physics.ox.ac.uk>
Message-ID: <alpine.DEB.1.10.0808041006020.5515@amboise.dolphin>

On Fri, 1 Aug 2008, Huw Davies wrote:

> Hi folks,
> 
> Here's an update on the DIB engine that I've been working on for the
> last few months.

An important thing to note about this work is that its architecture 
should be acceptable to Alexandre. So it can go into WineHQ, the only 
blocker being that it's not quite complete enough yet.

So that leads to the most important question:

   what's needed to allow it to go into WineHQ?

Blitting I guess. Everything else in the list below?
Can we avoid having to implement everything before we can commit it?

[...]
> What needs to be done
> =====================
> - Blitting (eg BitBlt, StretchBlt and StretchDIBits) - I have some
>   hacks for these in my tree.
> 
> - ExtTextOut
> 
> - Many more GDI32 apis - a lot of these should be easy given that we
>   have a set of underlying dib drawing primitives.
> 
> - Non-MM_TEXT mapping modes and world transforms.
> 
> - The initial interaction with GDI32 in BITMAP_SelectObject is hacky
>   and needs some work.
> 
> - Lots more...



-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                            1 + e ^ ( i * pi ) = 0


From fgouget at free.fr  Mon Aug  4 03:55:46 2008
From: fgouget at free.fr (Francois Gouget)
Date: Mon, 4 Aug 2008 10:55:46 +0200 (CEST)
Subject: Patch checking robot coming
In-Reply-To: <b050a5e70808021925g1e0b747uf0661c38350841ff@mail.gmail.com>
References: <a71bd89a0808021724w3125ae57y900f09a56396d267@mail.gmail.com>
	<b050a5e70808021925g1e0b747uf0661c38350841ff@mail.gmail.com>
Message-ID: <alpine.DEB.1.10.0808041024530.13588@amboise.dolphin>

On Sat, 2 Aug 2008, Zachary Goldberg wrote:
[...]
> Its really ironic that you post this today as just yesterday I was
> contemplating the same thing, and not only doing a compile check but
> also a run of the test suite

One problem is that you need an X server, preferably on real hardware to 
please the DirectX chaps. That may be tricky for the chroot, but maybe 
not.

Another problem with running the test suite is that all it's going to 
tell you is that it failed. As I understand it, even on Alexandre's 
machine it fails intermittently.

One way it could work would be to only have the robot complain about new 
failures. This is tricky, see below, but feasible. Let's just take a 
test failure as an example:

   visual.c:506: Test failed: Present failed: Got color 0x00ffffff, expected 0x00ff0000.

The problem here is that if someone adds ten lines near the beginning of 
visual.c, this may turn into:

   visual.c:516: Test failed: Present failed: Got color 0x00ffffff, expected 0x00ff0000.

Or if the colors are random (probably not the case here but happens for 
other tests), then the next time you may get the following message:

   visual.c:506: Test failed: Present failed: Got color 0x001e89df, expected 0x00ff0000.

So how is a bot to know all these are the same error?
With git-blame, that's how. Just use the filename and line number as 
imput to git-blame:

$ git-blame -p -L506,506 dlls/d3d8/tests/visual.c | head -n 1
078523f73e7b708dab06e888c24a1595bb5a63d8 495 506 1

What this means is that this line was first introduced in commit 
078523f7 and was line number 495 at the time. Now, if you commit a 
patch adding 10 lines and then ask about line 516 you will get the exact 
same result. So a unique identifier for this line is:

078523f73e7b708dab06e888c24a1595bb5a63d8:dlls/d3d8/tests/visual.c:495

So all the bot has to do is to run git-blame on each failure line to get 
its unique id, then check the unique id against the list of 
known/allowed (intermittent) failures, and only fail the patch if the 
failure is not in the list.


Now what I'd like is to have something like that for the Windows test 
results...



> and valgrind.

There you have to take into account that for the past week we've had an 
average of 56 patch submissions per day. So if you want the bot to keep 
up it means it must spend less than 25 minutes on each patch. But if you 
want to have a little bit of room for growth it limiting it to 15 
minutes per patch (96 patches/day) would be better...

My understanding is that Valgrinding alone takes much more than 25 
minutes already.

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                  Hiroshima '45 - Czernobyl '86 - Windows '95


From fgouget at free.fr  Mon Aug  4 04:07:53 2008
From: fgouget at free.fr (Francois Gouget)
Date: Mon, 4 Aug 2008 11:07:53 +0200 (CEST)
Subject: Patch checking robot coming
In-Reply-To: <a71bd89a0808021542n68ae2a4em11e7a371bf440710@mail.gmail.com>
References: <a71bd89a0808021542n68ae2a4em11e7a371bf440710@mail.gmail.com>
Message-ID: <alpine.DEB.1.10.0808041056090.13588@amboise.dolphin>

On Sat, 2 Aug 2008, Dan Kegel wrote:
[...]
> Question: where should the results go?
> I could put them up on a web site
> and/or email them to the patch's author
> and/or email them to a dedicated mailing list (e.g.
> wine-patches-buildlogs at winehq.org?)
> and/or email them to wine-devel.

I'd send the results to:
 * a website so everyone can see the status of each patch and how 
   backlogged the bot is (especially when people send a series of 30 
   patches at once).
 * to Alexandre to use as a replacement for wine-patches so he'd have 
   more information about each patch.
 * to the submitter but only when the checks failed.
   The website could potentially let you tune this in your preferences
   (never receive any email, receive both success and failure).

A dedicated mailing list could work too but I'm not sure there's really 
a point.

Submitters are just interested in their patches and it seems easier to 
find out about their status directly via email, or by looking on the 
website.

The dedicated mailing list could be useful to reviewers in that it would 
let them focus on just the patches that have been vetted by the bot. But 
I'm not sure that would be such a good thing. The other submitters may 
need guidance too...


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                     Linux: the choice of a GNU generation


From vitperov at etersoft.ru  Mon Aug  4 05:57:23 2008
From: vitperov at etersoft.ru (Vitaly Perov)
Date: Mon, 4 Aug 2008 14:57:23 +0400
Subject: [1/2] mlang: Add implementation of
	fnIMLangFontLink_GetCharCodePages
In-Reply-To: <84FF1AD176374EE79A6CEBC88D8A1A23@DMITRY>
References: <200808021613.12951.vitperov@etersoft.ru>
	<84FF1AD176374EE79A6CEBC88D8A1A23@DMITRY>
Message-ID: <200808041457.24576.vitperov@etersoft.ru>

Hi! Thank you for your comments

> It doesn't really matter what code pages Windows supports, it does
> matter though what code pages are valid. You need to use Win32 APIs
> EnumSystemCodePages/GetCPInfo/MultiByteToWideChar instead of accessing
> Wine internals directly.

I used EnumSystemCodePages before, but in this case GetCharCodePages set some 
extra bits in result. So the result differ from Windows

> ... or rather use mlang internal mlang_data structures.

I's good idea! Thank you!

-- 
Best wishes,
Vitaly Perov
Russia, Saint-Petersburg. www.etersoft.ru


From julliard at winehq.org  Mon Aug  4 06:50:09 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 04 Aug 2008 13:50:09 +0200
Subject: [9/9] WineD3D: Advertise D3DFMT_A16B16G16R16 support
In-Reply-To: <000401c8f532$fbb08a40$f3119ec0$@com> ("Stefan =?utf-8?Q?D?=
	=?utf-8?Q?=C3=B6singer=22's?=
	message of "Sun, 3 Aug 2008 01:34:29 -0500")
References: <000401c8f532$fbb08a40$f3119ec0$@com>
Message-ID: <87myjtvw26.fsf@wine.dyndns.org>

Stefan D?singer <stefan at codeweavers.com> writes:

> I don't see a reason not to do this

It doesn't work here:

../../../tools/runtest -q -P wine -M d3d9.dll -T ../../.. -p d3d9_test.exe.so visual.c && touch visual.ok
visual.c:8469: Tests skipped: D3DFMT_G16R16F textures not supported
visual.c:8469: Tests skipped: D3DFMT_G32R32F textures not supported
visual.c:3155: Test failed: quad 1 has color 00000000, expected 0x00FFFF00
visual.c:3159: Test failed: quad 3 has color 00000000, expected 0x0000FF00
visual.c:3242: Test failed: quad 1 has color 00000000, expected 0x00FF0000
visual.c:3249: Test failed: quad 4 has color 00000000, expected 0x0033cc00
visual.c:7453: Tests skipped: Card has unconditional pow2 support, skipping conditional NP2 tests
visual.c:8330: Tests skipped: Only 1 simultaneous render target supported, skipping MRT test
make: *** [visual.ok] Error 4

-- 
Alexandre Julliard
julliard at winehq.org


From dank at kegel.com  Mon Aug  4 07:00:56 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 4 Aug 2008 05:00:56 -0700
Subject: Patch checking robot coming
In-Reply-To: <alpine.DEB.1.10.0808041024530.13588@amboise.dolphin>
References: <a71bd89a0808021724w3125ae57y900f09a56396d267@mail.gmail.com>
	<b050a5e70808021925g1e0b747uf0661c38350841ff@mail.gmail.com>
	<alpine.DEB.1.10.0808041024530.13588@amboise.dolphin>
Message-ID: <a71bd89a0808040500h39a13b13mcdf759425032f41d@mail.gmail.com>

On Mon, Aug 4, 2008 at 1:55 AM, Francois Gouget <fgouget at free.fr> wrote:
> So all the bot has to do is to run git-blame on each failure line to get
> its unique id, then check the unique id against the list of
> known/allowed (intermittent) failures, and only fail the patch if the
> failure is not in the list.

Great idea, thanks!  I had been toying with ideas like
'only alert to diffs from yesterday' (but that's noisy)
or 'run failures repeatedly' (to help with flaky tests)
and 'ignore line numbers', but your idea sounds a lot better.

>> and valgrind.
>
> There you have to take into account that for the past week we've had an
> average of 56 patch submissions per day. So if you want the bot to keep
> up it means it must spend less than 25 minutes on each patch. But if you
> want to have a little bit of room for growth it limiting it to 15
> minutes per patch (96 patches/day) would be better...

Right, but this is very parallelizable.   Valgrinding on my dual core
machine takes 90 minutes now, so we'd just need four equivalently
powerful machines.  Not scary at all.  (It would help if Alexandre
would commit the parallel conformance test patch, otherwise I'll
probably need eight machines.)
- Dan


From dank at kegel.com  Mon Aug  4 07:03:22 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 4 Aug 2008 05:03:22 -0700
Subject: Patch checking robot coming
In-Reply-To: <alpine.DEB.1.10.0808041056090.13588@amboise.dolphin>
References: <a71bd89a0808021542n68ae2a4em11e7a371bf440710@mail.gmail.com>
	<alpine.DEB.1.10.0808041056090.13588@amboise.dolphin>
Message-ID: <a71bd89a0808040503s5ec4dd8ja75dfb815783dc85@mail.gmail.com>

On Mon, Aug 4, 2008 at 2:07 AM, Francois Gouget <fgouget at free.fr> wrote:
> I'd send the results to:
>  * a website so everyone can see the status of each patch and how
>   backlogged the bot is (especially when people send a series of 30
>   patches at once).

Yes.

>  * to Alexandre to use as a replacement for wine-patches so he'd have
>   more information about each patch.

If he asks for it.  (Maybe he'll be happy with the web site.)

>  * to the submitter but only when the checks failed.

Yes (that's how the code is now).

>   The website could potentially let you tune this in your preferences
>   (never receive any email, receive both success and failure).

Yes.  I'll start off with static html, the dynamic part can be
added later if it all seems worth it.
- Dan


From julliard at winehq.org  Mon Aug  4 07:09:57 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 04 Aug 2008 14:09:57 +0200
Subject: Patch checking robot coming
In-Reply-To: <a71bd89a0808040503s5ec4dd8ja75dfb815783dc85@mail.gmail.com> (Dan
	Kegel's message of "Mon, 4 Aug 2008 05:03:22 -0700")
References: <a71bd89a0808021542n68ae2a4em11e7a371bf440710@mail.gmail.com>
	<alpine.DEB.1.10.0808041056090.13588@amboise.dolphin>
	<a71bd89a0808040503s5ec4dd8ja75dfb815783dc85@mail.gmail.com>
Message-ID: <87iquhvv56.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

>>  * to Alexandre to use as a replacement for wine-patches so he'd have
>>   more information about each patch.
>
> If he asks for it.  (Maybe he'll be happy with the web site.)

what should really happen is that patches that fail the validation don't
even make it to wine-patches, they get bounced to the submitter. Of
course the bot needs to be reliable enough for this not to become a
nuisance. Maybe there can be a magic bypass keyword to add to a patch to
override the bot.

-- 
Alexandre Julliard
julliard at winehq.org


From dank at kegel.com  Mon Aug  4 07:20:43 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 4 Aug 2008 05:20:43 -0700
Subject: [PATCH] AcceptEx Impelementation
Message-ID: <a71bd89a0808040520g512036carc39854adaa118668@mail.gmail.com>

Hi Scott!
Three suggestions:
1) send one patch per email; use 1/2 and 2/2 in the subject line to
make it clear they're related
2) port some existing accept() conformance tests from ws2_32/tests/sock.c
to use AcceptEx(), add a bit to check the special new features,
and make sure they pass on Windows.
3) Submit the acceptance tests first as a separate patch

Thanks,
Dan


From dank at kegel.com  Mon Aug  4 07:22:49 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 4 Aug 2008 05:22:49 -0700
Subject: Patch checking robot coming
In-Reply-To: <87iquhvv56.fsf@wine.dyndns.org>
References: <a71bd89a0808021542n68ae2a4em11e7a371bf440710@mail.gmail.com>
	<alpine.DEB.1.10.0808041056090.13588@amboise.dolphin>
	<a71bd89a0808040503s5ec4dd8ja75dfb815783dc85@mail.gmail.com>
	<87iquhvv56.fsf@wine.dyndns.org>
Message-ID: <a71bd89a0808040522u665cf661o15c8b8ca72db9b0@mail.gmail.com>

On Mon, Aug 4, 2008 at 5:09 AM, Alexandre Julliard <julliard at winehq.org> wrote:
> what should really happen is that patches that fail the validation don't
> even make it to wine-patches, they get bounced to the submitter. Of
> course the bot needs to be reliable enough for this not to become a
> nuisance. Maybe there can be a magic bypass keyword to add to a patch to
> override the bot.

That can be arranged.  First things first though,
let's get a simple bot working off to the side;
then once it's reliable enough, we can insert it
into the normal workflow.
- Dan


From the3dfxdude at gmail.com  Mon Aug  4 07:50:45 2008
From: the3dfxdude at gmail.com (Jesse Allen)
Date: Mon, 4 Aug 2008 06:50:45 -0600
Subject: DIB engine status
In-Reply-To: <alpine.DEB.1.10.0808041006020.5515@amboise.dolphin>
References: <20080801115648.GB24893@merlot.physics.ox.ac.uk>
	<alpine.DEB.1.10.0808041006020.5515@amboise.dolphin>
Message-ID: <530468570808040550h27288d67u933bddb0ec1609ae@mail.gmail.com>

On Mon, Aug 4, 2008 at 2:23 AM, Francois Gouget <fgouget at free.fr> wrote:
> On Fri, 1 Aug 2008, Huw Davies wrote:
>
>> Hi folks,
>>
>> Here's an update on the DIB engine that I've been working on for the
>> last few months.
>
> An important thing to note about this work is that its architecture
> should be acceptable to Alexandre. So it can go into WineHQ, the only
> blocker being that it's not quite complete enough yet.
>
> So that leads to the most important question:
>
>   what's needed to allow it to go into WineHQ?
>
> Blitting I guess. Everything else in the list below?
> Can we avoid having to implement everything before we can commit it?
>


Could we forward unimplemented stuff back to x11drv now? That's one
thing I never really did so my code seemed like it broke alot of stuff
because of how much was missing.


From stefan at codeweavers.com  Mon Aug  4 09:10:01 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Mon, 4 Aug 2008 09:10:01 -0500
Subject: [wined3d] Remove arb_tex_npot for NV FX series in fixup_extensions
In-Reply-To: <20080804094830.243280@gmx.net>
References: <20080804094830.243280@gmx.net>
Message-ID: <006a01c8f63b$c96df8b0$5c49ea10$@com>

> this patch fixes performance regressions in Max Payne 2, Morrowind and
> HL2 on nVidia GeforceFx based hardware.
> It has been approved by Stefan D?singer and verified by test
> application (see source).
Just to add this here as well, I think this patch is fine. I could not find
any way to use the NP2 emulation for conditional NP2 textures like on ATI
cards




From dmitry at codeweavers.com  Mon Aug  4 09:18:15 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 4 Aug 2008 23:18:15 +0900
Subject: [2/2] user32:focus.c Remove unneeded palette messages.
References: <4896C69B.9010203@etersoft.ru>
Message-ID: <67033E3642AA46608C46B82527223AD6@DMITRY>

"Anatoly Lyutin" <vostok at etersoft.ru> wrote:

> I run test-cases on 98 and XP and I can not see where this messages have 
> been posted in tests. In Wine this messages have not processing.
> 
> Does anybody something know about this?

Try to run the tests in a paletted (256 color) mode.

-- 
Dmitry.


From zgold at bluesata.com  Mon Aug  4 09:34:42 2008
From: zgold at bluesata.com (Zachary Goldberg)
Date: Mon, 4 Aug 2008 10:34:42 -0400
Subject: [WineHQ] [4/4] news: Remove the 'Weekly Newsletters' box from the
	home page.
In-Reply-To: <48970417.3050201@free.fr>
References: <48970417.3050201@free.fr>
Message-ID: <b050a5e70808040734l4ce32f6fg70bccdba23c4569@mail.gmail.com>

On Mon, Aug 4, 2008 at 9:28 AM, Francois Gouget <fgouget at free.fr> wrote:
> ---
>
> So assuming that all the previous patches were miraculously correct, then,
> as discussed on wine-devel, we don't need the 'Weekly Newsletters' box
> anymore.
>
>  site |    6 ------
>  1 files changed, 0 insertions(+), 6 deletions(-)
>
>
>
>


I'm still not 100% convinced removing this box altogether is the right
idea.  Making the box smaller (via taking out the indicies) might
still achieve the same purpose of de-cluttering while still providing
a repository of links to recent WWNs.

Also, we should add a link in the main menu to http://winehq.org/?issue=back.


From hongbo_ni at hotmail.com  Mon Aug  4 10:18:49 2008
From: hongbo_ni at hotmail.com (Hongbo Ni)
Date: Tue, 5 Aug 2008 01:18:49 +1000
Subject: problem loading wine test projects windows vista
In-Reply-To: <3f4fd2640808030727m7344464cn7f4dfe59037a7d5e@mail.gmail.com>
References: <BAY118-W5665E3798D8280C540E18694790@phx.gbl>
	<3f4fd2640808030727m7344464cn7f4dfe59037a7d5e@mail.gmail.com>
Message-ID: <BAY118-W353F744F5A73B3632B07EC94780@phx.gbl>


Reece wrote

>> I really need to compile and run existing tests on window before I can write any test case for wine.
>
> What is git's core.autocrlf setting configured to? I had this issue
> (some of the detected filenames are '\r' - which is caused by perl
> being confused, which then confuses Visual Studio).

change of core.autocrlf does not fix the problem.

I have found the problem in msvcmaker generated .dsp file.

It only happens when running msvcmaker on windows under MinGW32.
And it only happen to the tests folder with more one c files.

For example in dlls/user32/tests/user32_test.dsp
----------------------------------------------
# Begin Source File

SOURCE=.\broadcast.c
# End Source File
# Begin Source File

SOURCE=.\\              <<--------------- something wrong here, rest of the test files are missing
# End Source File
# Begin Source File

SOURCE=.\testlist.c
# End Source File
# End Group
------------------------------------------------

I traced the msvcmaker and found the fix in line 138

	if(!$again) {
	    chomp $line;
	    if($lookahead) {
		$lookahead = 0;
-		$_ .= "\n" . $line;
+		$_ .= "  " . $line;
	    } else {
		$_ = $line;
	    }
	} else {

If lines ending with \ are joined with '\n', the line (12 lines down)
"if(s/\\$/ /s)"  will fail, so rest of test file are not joined. 

I replaced "\n" with "" in line 138, so rest of code can split files again.
Now it works on Linux and MinGW32. 

Does anyone ever run msvcmaker on windows ?

Hongbo Ni



_________________________________________________________________
Meet singles near you. Try ninemsn dating now!
http://a.ninemsn.com.au/b.aspx?URL=http%3A%2F%2Fdating%2Eninemsn%2Ecom%2Eau%2Fchannel%2Findex%2Easpx%3Ftrackingid%3D1046247&_t=773166080&_r=WL_TAGLINE&_m=EXT

From aric at codeweavers.com  Mon Aug  4 11:28:59 2008
From: aric at codeweavers.com (Aric Stewart)
Date: Mon, 04 Aug 2008 11:28:59 -0500
Subject: dinput: the DIK_ keycode is not the same as the scancode.
In-Reply-To: <48929AC8.9000809@kievinfo.com>
References: <488DD4FF.70202@codeweavers.com> <488E7C66.9090000@kievinfo.com>	
	<48908507.7020202@codeweavers.com> <48910355.6010109@kievinfo.com>
	<1217487182.27965.24.camel@hermes2.karcher.local>
	<4891AB23.1050805@codeweavers.com> <4891BF51.3060006@kievinfo.com>
	<4891C09D.5070000@codeweavers.com>
	<4891F6C6.2050708@codeweavers.com> <48929AC8.9000809@kievinfo.com>
Message-ID: <48972E4B.9010701@codeweavers.com>

Thanks for the feedback.  Resubmitted.

-aric

Vitaliy Margolen wrote:
> Please bottom post on this ML.
> 
> Aric Stewart wrote:
>  > Here is a revised patch which builds the scancode->DIK table on
>  > initialization making no xserver round trips required on lookup.
>  >
>  > How does this look?
>  >
>  > -aric
>  >
>  > Aric Stewart wrote:
>  >> Yes, I have verified those vkeys in windows.
>  >> the VK_OEM_* keys are specificaly VK codes that vary from keyboard to
>  >> keyboard. VK_OEM_3 is just one example.
>  >>
>  >> -aric
>  >>
>  >> Vitaliy Margolen wrote:
>  >>> Aric Stewart wrote:
>  >>>> vkey codes similarly do not produce a clean 1 to 1 correspondance.
>  >>>> the '@' key (0x1a) is vkey (VK_OEM_3)  which is the vkey of the '`'
>  >>>> key on the us keyboard.
>  >>> This is needs to be fixed in x11drv then. Not in dinput. Have you
>  >>> verified what v_keys you getting from windows for these keys?
>  >>>
>  >>> Vitaliy.
>  >>>
>  >>
> 
> 
> Few problems with your patch:
> 
>> +    if (c && c >31 && c < 96)
> Checking for c != 0 is redundant here.
> 
>> -    dik_code = hook->scanCode & 0xff;
>> +    dik_code = This->ScanCodemap[hook->scanCode];
> Scan code can be larger then 256 so "& 0xff" is really necessary.
> 
>> +    BYTE ScanCodemap[WINE_DINPUT_KEYBOARD_MAX_KEYS];
> You should make this array static and initialize it only once per process
> 
>> +static int map_dik_code(DWORD scanCode)
>> +{
>> +    int out_code = 0;
>> +    static const int asciiCodes[] =
>> +        {/*32*/ DIK_SPACE,0,0,0,0,0,0,DIK_APOSTROPHE,0,0,0,0, 
>> DIK_COMMA,       /*44*/ \
> Please rearrange array to have some-what reasonable and same number of 
> elements in each line, like 10 (or 5, 8).
> 
>> +        newDevice->ScanCodemap[i] = map_dik_code(i);
> Please stay consistent with types. If it's a BYTE then you should return 
> BYTE from the function.
> 
> Vitaliy.
> 
> 
> 


From paul.vriens.wine at gmail.com  Mon Aug  4 13:03:40 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Mon, 04 Aug 2008 20:03:40 +0200
Subject: What to do with tests that run for ages (examples dplayx and
	msi/install)
Message-ID: <4897447C.60300@gmail.com>

Hi,

The recent additions to the dplayx tests make these tests run very slow (or 
there is just a lot tested?).

Is there a way to either split up these tests so they don't timeout or better 
yet find out if we can run them faster. This issue can be seen on W2K upwards.

The same can be said about the msi/install tests. This however only seems to be 
an issue on XP and Vista.

-- 
Cheers,

Paul.


From stefan at codeweavers.com  Mon Aug  4 13:05:33 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Mon, 4 Aug 2008 13:05:33 -0500
Subject: [3/3] wined3d: Handle CTXUSAGE_BLIT with offscreen targets and
	FBO ORM
In-Reply-To: <d658b69e0808041028i2e6266b5u4519e85ae80fc8fd@mail.gmail.com>
References: <d658b69e0808041028i2e6266b5u4519e85ae80fc8fd@mail.gmail.com>
Message-ID: <004c01c8f65c$b0888420$11998c60$@com>

> This is mostly for correctness, in practice we should always be able to
> avoid using CTXUSAGE_BLIT for offscreen targets when FBO ORM is used.
Not always actually. With my upcoming patches to perform YUV conversion in
Blt I'll have to avoid the fbo_blit codepath in some situations even if
fbo_blit is available and fbos are used




From scott at open-vote.org  Mon Aug  4 13:08:50 2008
From: scott at open-vote.org (Scott Ritchie)
Date: Mon, 04 Aug 2008 11:08:50 -0700
Subject: Patch checking robot coming
In-Reply-To: <alpine.DEB.1.10.0808041024530.13588@amboise.dolphin>
References: <a71bd89a0808021724w3125ae57y900f09a56396d267@mail.gmail.com>	<b050a5e70808021925g1e0b747uf0661c38350841ff@mail.gmail.com>
	<alpine.DEB.1.10.0808041024530.13588@amboise.dolphin>
Message-ID: <489745B2.4060401@open-vote.org>

Francois Gouget wrote:
> 
> There you have to take into account that for the past week we've had an 
> average of 56 patch submissions per day. So if you want the bot to keep 
> up it means it must spend less than 25 minutes on each patch. But if you 
> want to have a little bit of room for growth it limiting it to 15 
> minutes per patch (96 patches/day) would be better...
> 
> My understanding is that Valgrinding alone takes much more than 25 
> minutes already.
> 

Well, you could throw more hardware at it.

Alternatively, if most patches are good, then you could test several
patches at a time and only test specific ones if something breaks.

Thanks,
Scott Ritchie


From hverbeet at gmail.com  Mon Aug  4 13:11:59 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Mon, 4 Aug 2008 20:11:59 +0200
Subject: [3/3] wined3d: Handle CTXUSAGE_BLIT with offscreen targets and
	FBO ORM
In-Reply-To: <004c01c8f65c$b0888420$11998c60$@com>
References: <d658b69e0808041028i2e6266b5u4519e85ae80fc8fd@mail.gmail.com>
	<004c01c8f65c$b0888420$11998c60$@com>
Message-ID: <d658b69e0808041111h4acb714dg33c2177d89d8aa3@mail.gmail.com>

2008/8/4 Stefan D?singer <stefan at codeweavers.com>:
>> This is mostly for correctness, in practice we should always be able to
>> avoid using CTXUSAGE_BLIT for offscreen targets when FBO ORM is used.
> Not always actually. With my upcoming patches to perform YUV conversion in
> Blt I'll have to avoid the fbo_blit codepath in some situations even if
> fbo_blit is available and fbos are used
>
Yes, but for offscreen targets you can always read from the texture.


From dank at kegel.com  Mon Aug  4 13:20:23 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 4 Aug 2008 11:20:23 -0700
Subject: Patch checking robot coming
In-Reply-To: <489745B2.4060401@open-vote.org>
References: <a71bd89a0808021724w3125ae57y900f09a56396d267@mail.gmail.com>
	<b050a5e70808021925g1e0b747uf0661c38350841ff@mail.gmail.com>
	<alpine.DEB.1.10.0808041024530.13588@amboise.dolphin>
	<489745B2.4060401@open-vote.org>
Message-ID: <a71bd89a0808041120x2d27de2bg96b7ba34cc320b73@mail.gmail.com>

On Mon, Aug 4, 2008 at 11:08 AM, Scott Ritchie <scott at open-vote.org> wrote:
>> My understanding is that Valgrinding alone takes much more than 25
>> minutes already.
>
> Well, you could throw more hardware at it.

That's the option I like.

> Alternatively, if most patches are good, then you could test several
> patches at a time and only test specific ones if something breaks.

That could work too, but the scripting would be more
complex and brittle.  I'm less scared of doing the scripting to
distribute the work over four computers.


From adam at tpetaccia.com  Mon Aug  4 13:21:36 2008
From: adam at tpetaccia.com (Adam Petaccia)
Date: Mon, 04 Aug 2008 14:21:36 -0400
Subject: What to do with tests that run for ages (examples dplayx and
	msi/install)
In-Reply-To: <4897447C.60300@gmail.com>
References: <4897447C.60300@gmail.com>
Message-ID: <1217874096.6573.34.camel@belthazor-saved>

On Mon, 2008-08-04 at 20:03 +0200, Paul Vriens wrote:
> Hi,
> 
> The recent additions to the dplayx tests make these tests run very slow (or 
> there is just a lot tested?).
> 
> Is there a way to either split up these tests so they don't timeout or better 
> yet find out if we can run them faster. This issue can be seen on W2K upwards.
> 
> The same can be said about the msi/install tests. This however only seems to be 
> an issue on XP and Vista.
> 
The DirectX tests timeout for me on XP and Vista. See:
http://test.winehq.org/data/428fd07e73c08e01f463982fab0d4b4267695b8f/xp_APetaccia-XPSP2/d3d9:device.html
http://test.winehq.org/data/428fd07e73c08e01f463982fab0d4b4267695b8f/vista_APetaccia-SP1/d3d9:device.html




From jnewman at codeweavers.com  Mon Aug  4 14:02:05 2008
From: jnewman at codeweavers.com (Jeremy Newman)
Date: Mon, 04 Aug 2008 14:02:05 -0500
Subject: [WineHQ] [4/4] news: Remove the 'Weekly Newsletters' box from
	the	home page.
In-Reply-To: <b050a5e70808040734l4ce32f6fg70bccdba23c4569@mail.gmail.com>
References: <48970417.3050201@free.fr>
	<b050a5e70808040734l4ce32f6fg70bccdba23c4569@mail.gmail.com>
Message-ID: <4897522D.7040105@codeweavers.com>

I have no intention of removing the WWN box. Removing it will leave a 
large gaping hole on that right sidebar.

I agree, we should also have a sidebar link for WWN back issues.

-Newman

Zachary Goldberg wrote:
> On Mon, Aug 4, 2008 at 9:28 AM, Francois Gouget <fgouget at free.fr> wrote:
>> So assuming that all the previous patches were miraculously correct, then,
>> as discussed on wine-devel, we don't need the 'Weekly Newsletters' box
>> anymore.
> 
> I'm still not 100% convinced removing this box altogether is the right
> idea.  Making the box smaller (via taking out the indicies) might
> still achieve the same purpose of de-cluttering while still providing
> a repository of links to recent WWNs.
> 
> Also, we should add a link in the main menu to http://winehq.org/?issue=back.


From hverbeet at gmail.com  Mon Aug  4 14:45:29 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Mon, 4 Aug 2008 21:45:29 +0200
Subject: d3dx9: Implementation of D3DXMatrixDecompose and tests
In-Reply-To: <4897551A.7040403@ilidium.com>
References: <4897551A.7040403@ilidium.com>
Message-ID: <d658b69e0808041245i2b7cad08v3a862bfac20afad3@mail.gmail.com>

2008/8/4 Luis Busquets <luis.busquets at ilidium.com>:
> +#include "d3d9.h"
...
> +#define module(vx,vy,vz) sqrt((vx)*(vx)+(vy)*(vy)+(vz)*(vz))
...
> +#include "stdio.h"

You don't really need those.


From hverbeet at gmail.com  Mon Aug  4 14:55:47 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Mon, 4 Aug 2008 21:55:47 +0200
Subject: [1/10] WineD3D: Call glFlush outside the GL lock
In-Reply-To: <003c01c8f66a$8a676fa0$9f364ee0$@com>
References: <003c01c8f66a$8a676fa0$9f364ee0$@com>
Message-ID: <d658b69e0808041255n76c427d2ibcc2fc1a7e516c8d@mail.gmail.com>

2008/8/4 Stefan D?singer <stefan at codeweavers.com>:
> +    /* No checkGLcall here to avoid locking the lock just for checking a call that hardly ever
> +     * fails
> +     */
I think explaining why there's no ENTER_GL()/LEAVE_GL() is more important there.


From truiken at gmail.com  Mon Aug  4 14:57:11 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 4 Aug 2008 14:57:11 -0500
Subject: What to do with tests that run for ages (examples dplayx and
	msi/install)
In-Reply-To: <4897447C.60300@gmail.com>
References: <4897447C.60300@gmail.com>
Message-ID: <22821af30808041257n4121fd5en7150c559220b1c0c@mail.gmail.com>

On Mon, Aug 4, 2008 at 1:03 PM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> Hi,
>
> The recent additions to the dplayx tests make these tests run very slow (or
> there is just a lot tested?).
>
> Is there a way to either split up these tests so they don't timeout or better
> yet find out if we can run them faster. This issue can be seen on W2K upwards.
>
> The same can be said about the msi/install tests. This however only seems to be
> an issue on XP and Vista.
>

The install tests should only take forever if you have some form of
logging enabled.  All logging should be disabled.

-- 
James Hawkins


From austinenglish at gmail.com  Mon Aug  4 15:02:14 2008
From: austinenglish at gmail.com (Austin English)
Date: Mon, 4 Aug 2008 15:02:14 -0500
Subject: What to do with tests that run for ages (examples dplayx and
	msi/install)
In-Reply-To: <22821af30808041257n4121fd5en7150c559220b1c0c@mail.gmail.com>
References: <4897447C.60300@gmail.com>
	<22821af30808041257n4121fd5en7150c559220b1c0c@mail.gmail.com>
Message-ID: <b6bb06270808041302j1ea0690er600606de77b55fb3@mail.gmail.com>

On Mon, Aug 4, 2008 at 2:57 PM, James Hawkins <truiken at gmail.com> wrote:
> On Mon, Aug 4, 2008 at 1:03 PM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>> Hi,
>>
>> The recent additions to the dplayx tests make these tests run very slow (or
>> there is just a lot tested?).
>>
>> Is there a way to either split up these tests so they don't timeout or better
>> yet find out if we can run them faster. This issue can be seen on W2K upwards.
>>
>> The same can be said about the msi/install tests. This however only seems to be
>> an issue on XP and Vista.
>>
>
> The install tests should only take forever if you have some form of
> logging enabled.  All logging should be disabled.
>
> --
> James Hawkins
>
>
>

For me in XP, they repeatedly take forever and usually time out. On my
2k box, they run fine. The 2k box is a Pentium 4 single core, and the
XP box is a Intel duo IIRC. Not sure what logging you're speaking of,
be it in winetest or in windows itself...

-Austin


From truiken at gmail.com  Mon Aug  4 15:05:43 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 4 Aug 2008 15:05:43 -0500
Subject: What to do with tests that run for ages (examples dplayx and
	msi/install)
In-Reply-To: <b6bb06270808041302j1ea0690er600606de77b55fb3@mail.gmail.com>
References: <4897447C.60300@gmail.com>
	<22821af30808041257n4121fd5en7150c559220b1c0c@mail.gmail.com>
	<b6bb06270808041302j1ea0690er600606de77b55fb3@mail.gmail.com>
Message-ID: <22821af30808041305q62913550x32e4c0e3845d80ab@mail.gmail.com>

On Mon, Aug 4, 2008 at 3:02 PM, Austin English <austinenglish at gmail.com> wrote:
> On Mon, Aug 4, 2008 at 2:57 PM, James Hawkins <truiken at gmail.com> wrote:
>> On Mon, Aug 4, 2008 at 1:03 PM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>>> Hi,
>>>
>>> The recent additions to the dplayx tests make these tests run very slow (or
>>> there is just a lot tested?).
>>>
>>> Is there a way to either split up these tests so they don't timeout or better
>>> yet find out if we can run them faster. This issue can be seen on W2K upwards.
>>>
>>> The same can be said about the msi/install tests. This however only seems to be
>>> an issue on XP and Vista.
>>>
>>
>> The install tests should only take forever if you have some form of
>> logging enabled.  All logging should be disabled.
>>
>> --
>> James Hawkins
>>
>>
>>
>
> For me in XP, they repeatedly take forever and usually time out. On my
> 2k box, they run fine. The 2k box is a Pentium 4 single core, and the
> XP box is a Intel duo IIRC. Not sure what logging you're speaking of,
> be it in winetest or in windows itself...
>

HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\Installer

Debug:DWORD should be 0 or nonexistent
Logging:REG_SZ should be empty or nonexistent

There may be other policies somewhere else that cause logging to
happen.  The tests run fine for me in XP, and for others as well.

-- 
James Hawkins


From hverbeet at gmail.com  Mon Aug  4 15:14:00 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Mon, 4 Aug 2008 22:14:00 +0200
Subject: [9/10] WineD3D: Test formats for surface support
In-Reply-To: <001c01c8f66a$6b18e8e0$414abaa0$@com>
References: <001c01c8f66a$6b18e8e0$414abaa0$@com>
Message-ID: <d658b69e0808041314o770e4766l7e370aa633fa3121@mail.gmail.com>

2008/8/4 Stefan D?singer <stefan at codeweavers.com>:
> +    if(CheckDepthStencilCapability(Adapter, AdapterFormat, CheckFormat)) return TRUE;
This is redundant, the depthstencil formats should already be caught
by the CheckTextureCapability() call. I think you should set this up
the same way as WINED3DRTYPE_TEXTURE, if only for maintainability.


From hverbeet at gmail.com  Mon Aug  4 15:27:05 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Mon, 4 Aug 2008 22:27:05 +0200
Subject: [4/10] WineD3D: Implement overlay position tracking
In-Reply-To: <003001c8f66a$7e5ba280$7b12e780$@com>
References: <003001c8f66a$7e5ba280$7b12e780$@com>
Message-ID: <d658b69e0808041327oc2e0c7aga172673bfab60869@mail.gmail.com>

2008/8/4 Stefan D?singer <stefan at codeweavers.com>:
> and will be done in another patch wave.
>
About those... could you spread them out a bit? It's quite a bit of
code to review, and right now I probably don't look as close as I
probably should.


From stefan at codeweavers.com  Mon Aug  4 16:27:32 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Mon, 4 Aug 2008 16:27:32 -0500
Subject: [1/10] WineD3D: Call glFlush outside the GL lock
In-Reply-To: <d658b69e0808041255n76c427d2ibcc2fc1a7e516c8d@mail.gmail.com>
References: <003c01c8f66a$8a676fa0$9f364ee0$@com>
	<d658b69e0808041255n76c427d2ibcc2fc1a7e516c8d@mail.gmail.com>
Message-ID: <00b201c8f678$e7c624d0$b7526e70$@com>

> 2008/8/4 Stefan D?singer <stefan at codeweavers.com>:
> > +    /* No checkGLcall here to avoid locking the lock just for
> checking a call that hardly ever
> > +     * fails
> > +     */
> I think explaining why there's no ENTER_GL()/LEAVE_GL() is more
> important there.
Good point




From fgouget at free.fr  Mon Aug  4 17:17:33 2008
From: fgouget at free.fr (Francois Gouget)
Date: Tue, 5 Aug 2008 00:17:33 +0200 (CEST)
Subject: [WineHQ] [4/4] news: Remove the 'Weekly Newsletters' box from
	the home page.
In-Reply-To: <4897522D.7040105@codeweavers.com>
References: <48970417.3050201@free.fr>
	<b050a5e70808040734l4ce32f6fg70bccdba23c4569@mail.gmail.com>
	<4897522D.7040105@codeweavers.com>
Message-ID: <alpine.DEB.1.10.0808050016330.6045@amboise.dolphin>

On Mon, 4 Aug 2008, Jeremy Newman wrote:

> I have no intention of removing the WWN box. Removing it will leave a 
> large gaping hole on that right sidebar.

Are the other patches ok?


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
    I haven't lost my mind, it's backed up on tape around here somewhere...


From msclrhd at googlemail.com  Mon Aug  4 10:52:56 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Mon, 4 Aug 2008 16:52:56 +0100
Subject: problem loading wine test projects windows vista
In-Reply-To: <BAY118-W353F744F5A73B3632B07EC94780@phx.gbl>
References: <BAY118-W5665E3798D8280C540E18694790@phx.gbl>
	<3f4fd2640808030727m7344464cn7f4dfe59037a7d5e@mail.gmail.com>
	<BAY118-W353F744F5A73B3632B07EC94780@phx.gbl>
Message-ID: <3f4fd2640808040852o234c591av8f9aefeeeab6a8c7@mail.gmail.com>

2008/8/4 Hongbo Ni <hongbo_ni at hotmail.com>:
>
> Reece wrote
>
>>> I really need to compile and run existing tests on window before I can write any test case for wine.
>>
>> What is git's core.autocrlf setting configured to? I had this issue
>> (some of the detected filenames are '\r' - which is caused by perl
>> being confused, which then confuses Visual Studio).
>
> change of core.autocrlf does not fix the problem.
>
> I have found the problem in msvcmaker generated .dsp file.
>
> It only happens when running msvcmaker on windows under MinGW32.
> And it only happen to the tests folder with more one c files.
>
> For example in dlls/user32/tests/user32_test.dsp
> ----------------------------------------------
> # Begin Source File
>
> SOURCE=.\broadcast.c
> # End Source File
> # Begin Source File
>
> SOURCE=.\\              <<--------------- something wrong here, rest of the test files are missing
> # End Source File
> # Begin Source File
>
> SOURCE=.\testlist.c
> # End Source File
> # End Group
> ------------------------------------------------

This was the error that I was getting. Changing the core.autocrlf
property fixed this for me.

> I traced the msvcmaker and found the fix in line 138
>
>        if(!$again) {
>            chomp $line;
>            if($lookahead) {
>                $lookahead = 0;
> -               $_ .= "\n" . $line;
> +               $_ .= "  " . $line;
>            } else {
>                $_ = $line;
>            }
>        } else {
>
> If lines ending with \ are joined with '\n', the line (12 lines down)
> "if(s/\\$/ /s)"  will fail, so rest of test file are not joined.
>
> I replaced "\n" with "" in line 138, so rest of code can split files again.
> Now it works on Linux and MinGW32.

Great! Could you submit a patch for this?

> Does anyone ever run msvcmaker on windows ?

I run it when testing my patches on Windows, as I can't get the
crosstest target to build on my Windows dev machine (and don't want to
continually switch between Linux and Windows when developing the
patches - only for testing the results).

I would like to rework the msvcmaker tool. Specifically:

    1.  Generate VC 2002/3/5/8 vcproj and sln files directly, as well
as dsp files.

    2.  Add support for RC targets (some tests, e.g. user32 need this to build).

    3.  Add support for IDL targets (some tests need this to build).

There may be more, but that is the general direction.

- Reece


From msclrhd at googlemail.com  Mon Aug  4 15:53:25 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Mon, 4 Aug 2008 21:53:25 +0100
Subject: What to do with tests that run for ages (examples dplayx and
	msi/install)
In-Reply-To: <22821af30808041257n4121fd5en7150c559220b1c0c@mail.gmail.com>
References: <4897447C.60300@gmail.com>
	<22821af30808041257n4121fd5en7150c559220b1c0c@mail.gmail.com>
Message-ID: <3f4fd2640808041353g50f19430t247154695393a69b@mail.gmail.com>

2008/8/4 James Hawkins <truiken at gmail.com>:
> On Mon, Aug 4, 2008 at 1:03 PM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>> Hi,
>>
>> The recent additions to the dplayx tests make these tests run very slow (or
>> there is just a lot tested?).
>>
>> Is there a way to either split up these tests so they don't timeout or better
>> yet find out if we can run them faster. This issue can be seen on W2K upwards.
>>
>> The same can be said about the msi/install tests. This however only seems to be
>> an issue on XP and Vista.
>>
>
> The install tests should only take forever if you have some form of
> logging enabled.  All logging should be disabled.

My experience has been that the msi:automation tests are slower on
Vista - I suspect that this is because of logging, but could not see
an entry in the registry key you provided - even when UAC is disabled.
IIRC, logging is enabled by default on Vista.

When UAC is enabled, the tests will timeout because of the countless
number of times you have to accept the installer: yes I *do* want to
run this installer!

... but then when UAC is enabled, almost everything fails!

- Reece


From stefan at codeweavers.com  Mon Aug  4 16:33:55 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Mon, 4 Aug 2008 16:33:55 -0500
Subject: [4/10] WineD3D: Implement overlay position tracking
In-Reply-To: <d658b69e0808041327oc2e0c7aga172673bfab60869@mail.gmail.com>
References: <003001c8f66a$7e5ba280$7b12e780$@com>
	<d658b69e0808041327oc2e0c7aga172673bfab60869@mail.gmail.com>
Message-ID: <00c501c8f679$cc1bf880$6453e980$@com>

> 2008/8/4 Stefan D?singer <stefan at codeweavers.com>:
> > and will be done in another patch wave.
> >
> About those... could you spread them out a bit? It's quite a bit of
> code to review, and right now I probably don't look as close as I
> probably should.
Sure, I attached a dump of my git tree.

There are essentially two biggies remaining:
1) Clean up ddraw_window and friends in WineD3DDevice, make DirectDraw
render to the clipper window if one exists
2) Implement a framework for color conversions in blits

(and of course (0), the overlay blitting implementation)

Also there are a few other junk patches


-------------- next part --------------
A non-text attachment was scrubbed...
Name: patches.tar.gz
Type: application/octet-stream
Size: 40497 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080804/9f0d9c5b/attachment-0001.obj 

From ivg231 at gmail.com  Mon Aug  4 22:53:40 2008
From: ivg231 at gmail.com (Ivan Gyurdiev)
Date: Mon, 04 Aug 2008 23:53:40 -0400
Subject: d3dx9: Implementation of D3DXGetVertexShaderProfile 2/2 try 4
In-Reply-To: <489361AF.4000306@ilidium.com>
References: <489361AF.4000306@ilidium.com>
Message-ID: <4897CEC4.7090401@gmail.com>

Luis Busquets wrote:

> +        if ((caps.VS20Caps.NumTemps>=13)                          &&
> +            (caps.VS20Caps.DynamicFlowControlDepth=24)            &&
> +            (caps.VS20Caps.Caps&D3DPS20CAPS_PREDICATION))
> +        {
> +            return "vs_2_a";
> +        }

Please re-check - the second condition is an assignment and always true.

- Ivan





From dmitry at codeweavers.com  Tue Aug  5 01:44:19 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 5 Aug 2008 15:44:19 +0900
Subject: advapi32: Implement GetSecurityInfo.
References: <20080804205631.GG22846@linux.ucla.edu>
Message-ID: <D3591298610741C3A07DE933D6AF53B4@DMITRY>

"Dan Hipschman" <dsh at linux.ucla.edu> wrote:

> +#include <assert.h>
...
> @@ -2718,8 +2719,38 @@ DWORD WINAPI GetSecurityInfo(
>     PSECURITY_DESCRIPTOR *ppSecurityDescriptor
> )
> {
> -  FIXME("stub!\n");
> -  return ERROR_BAD_PROVIDER;
> +    SECURITY_DESCRIPTOR *sd;
> +    NTSTATUS status;
> +    ULONG n1, n2;
> +
> +    status = NtQuerySecurityObject(hObject, SecurityInfo, NULL, 0, &n1);
> +    assert(status != STATUS_SUCCESS);
> +    if (status != STATUS_BUFFER_TOO_SMALL)
> +        return RtlNtStatusToDosError(status);

assert() (or rather ok(0)) would be appropriate in the test case, but not
in the implementation IMO.

-- 
Dmitry.


From paul.vriens.wine at gmail.com  Tue Aug  5 01:46:40 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Tue, 05 Aug 2008 08:46:40 +0200
Subject: [dplayx 01/12] Tests for CreateGroup
In-Reply-To: <82e274890808041856o3157b2e4ue2afbdf15bb9c516@mail.gmail.com>
References: <82e274890808041856o3157b2e4ue2afbdf15bb9c516@mail.gmail.com>
Message-ID: <4897F750.5050707@gmail.com>

Ismael Barros wrote:
> Tests for CreateGroup
> Fixed the implementation of CreateGroup and CreateGroupInGroup so that
> it doesn't segfault when the service provider is not initialized
> 
> ---
>  dlls/dplayx/dplay.c        |   10 ++
>  dlls/dplayx/tests/dplayx.c |  340 ++++++++++++++++++++++++++++++++++++++++++++
>  2 files changed, 350 insertions(+), 0 deletions(-)
> 
> 
> ------------------------------------------------------------------------
> 
> 
Hi Ismael,

On what Windows version are you running your tests for verification? Is there 
anything particular you are doing to speed up the tests on your box?

test.winehq.org already shows timeouts for all boxes that are running W2K or 
higher. This new patch serie will even add more tests but I'm afaid we will not 
see any output from it on the mentioned website.

-- 
Cheers,

Paul.


From dmitry at codeweavers.com  Tue Aug  5 02:38:14 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 5 Aug 2008 16:38:14 +0900
Subject: [NJS#80583] Re: ntdll: import dll from dir of referring dll if
	not found instandard locations
Message-ID: <8601E4B4229248D682E08A9B75D5CE45@DMITRY>

"Hongbo Ni" <hongbo at njstar.com> wrote:

> I have posted a another patch regarding to windows hook into another
> process. 
> http://www.winehq.org/pipermail/wine-patches/2008-August/059069.html
> 
> Basically it change LoadlibraryW to LoadlibraryExW with Alt-path.
> 
> Could you please let me know what your comment and guide me in coding 
> such test case?
> 
> Basically the test need to inject 2 dlls into another process (say Notepad) 
> using SetWindowsHookEx(), and have some way to know if the dlls are
> loaded by the target process.
> 
> I can code the dll so it will send a message back to my test window to
> inform me that they are loaded into Notepad.
> 
> For those 2 DLLS, I have already made it on windows, How and where
> can I add to wine test?
> 
> Do I need submit the source and make file of those 2 dlls for maketest? 
> I am not sure how maketest create window DLL for auto-testing.

Due to some problems there is no way to create an ELF wrapped hook dll
using Wine tools. I'd suggest to create maximally stripped down test
which works under Windows, and post an url to it with your fix.

-- 
Dmitry.


From tony.wasserka at freenet.de  Tue Aug  5 02:39:37 2008
From: tony.wasserka at freenet.de (tony.wasserka at freenet.de)
Date: Tue, 05 Aug 2008 09:39:37 +0200
Subject: d3dx9: Implementation of D3DXMatrixDecompose and tests
Message-ID: <E1KQH8r-0003eC-PR@www15.emo.freenet-rz.de>

Hi, 

1. The order of
+    /*The components of the translation transformation vector are straigth in the fourth column of the transformation matrix*/
+    (*pouttranslation).x=(*pM).m[3][0];
+    (*pouttranslation).y=(*pM).m[3][1];
+    (*pouttranslation).z=(*pM).m[3][2];
+
+    /*Let's calculate rotation now*/
+    /*If some of the scale factors is zero, it is impossible to obtain the rotation*/
+    if (((*poutscale).x==0)||((*poutscale).y==0)||((*poutscale).z==0))
+    {
+        return D3DERR_INVALIDCALL;
+    }
should be reversed, as we want to return D3DERR_INVALIDCALL as soon as possible (if needed). Also, the whole code can be simplified to:
+    /*If some of the scale factors is zero, it is impossible to obtain the rotation*/
+    if ((poutscale->x==0)||(poutscale->y==0)||(poutscale->z==0))
+        return D3DERR_INVALIDCALL;
+
+    /*The components of the translation transformation vector are straigth in the fourth column of the transformation matrix*/
+    pouttranslation->x=pM->m[3][0];
+    pouttranslation->y=pM->m[3][1];
+    pouttranslation->z=pM->m[3][2];
+
+    /*Let's calculate rotation now*/

(Note the removed {} which saves two lines of code)

2. I haven't tested this, but if you haven't done so yet, you should check the function's behavior if one of the pointers is NULL. If it segfaults with native d3dx9_36, your code is okay, otherwise you'll need an additional check right at the beginning.

3. Also, there were some spelling mistakes:
+    /*The scale factors are the modules of the three vectors __of that__ lie in __the__ column of the 3x3 submatrix*/
+    /*The scale factors are the modules of the three vectors __which__ lie in __each__ column of the 3x3 submatrix*/

+    /*If some of the scale factors is zero, it is impossible to obtain the rotation*/
+    /*If __any scale factor__ is zero, it is impossible to obtain the rotation*/

+    /*Then we go for the biggest component in order to __minimise__ division error as commonly explained in the __literacy__.
+      We just calculate one component from the diagonal to avoid sign loss of the square root. The first sign is not important
+      because the rotations (x,y,z,w) and (-x,-y,-z,-w) are equivalent. But if we __calc ulated__ the other two components we would have
+      to choose and could be wrong.*/
+    /*Then we go for the biggest component in order to __minimize__ division error as commonly explained in the __literature__.
+      We just calculate one component from the diagonal to avoid sign loss of the square root. The first sign is not important
+      because the rotations (x,y,z,w) and (-x,-y,-z,-w) are equivalent. But if we __calculated__ the other two components we would have
+      to choose and could be wrong.*/

4. Regarding the test, you should perhaps explain in a one-line comment what's special about the tested numbers in comparison to the others (other sign? invalid numbers? etc.)

5. It's not bad, but for the future you may want  to split the implementation and the test in two patches so that you have a greater chance to get one of them in.


Best regards,
    Tony




Unbegrenzter Speicher, Top-Spamschutz, 120 SMS und eigene E-MailDomain inkl.
http://office.freenet.de/dienste/emailoffice/produktuebersicht/power/mail/index.html



From julliard at winehq.org  Tue Aug  5 03:53:10 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 05 Aug 2008 10:53:10 +0200
Subject: msxml3: Add ISAXContentHandler_endPrefix event (1/7)
In-Reply-To: <200808042201.42306.piotr.caban@gmail.com> (Piotr Caban's message
	of "Mon, 4 Aug 2008 22:01:42 +0200")
References: <200808042201.42306.piotr.caban@gmail.com>
Message-ID: <87zlnrvo5l.fsf@wine.dyndns.org>

Piotr Caban <piotr.caban at gmail.com> writes:

> +static HRESULT namespacePush(saxlocator *locator, int ns)
> +{
> +    if(locator->nsStackLast+1>locator->nsStackSize)
> +    {
> +        locator->nsStackSize += STACKALLOCATIONSIZE;
> +        locator->nsStack = HeapReAlloc(GetProcessHeap(), 0,
> +                locator->nsStack, locator->nsStackSize);
> +        if(!locator->nsStack) return E_FAIL;

You should preserve the existing stack on failure. Also the growth
should be by a multiple of the current size instead of a constant.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Aug  5 05:15:41 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 05 Aug 2008 12:15:41 +0200
Subject: [PATCH] oleaut32: Fix some corner cases in VarBstrCmp.
In-Reply-To: <558b2f5c0808041539x61a1b785tc787acba0333aeec@mail.gmail.com>
	(Lei Zhang's message of "Mon, 4 Aug 2008 15:39:10 -0700")
References: <558b2f5c0808041539x61a1b785tc787acba0333aeec@mail.gmail.com>
Message-ID: <87sktjvkc2.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> diff --git a/dlls/oleaut32/vartype.c b/dlls/oleaut32/vartype.c
> index daeac85..713ebae 100644
> --- a/dlls/oleaut32/vartype.c
> +++ b/dlls/oleaut32/vartype.c
> @@ -6942,7 +6942,24 @@ HRESULT WINAPI VarBstrCmp(BSTR pbstrLeft, BSTR pbstrRight, LCID lcid, DWORD dwFl
>      if (!pbstrLeft || !*pbstrLeft)
>      {
>        if (!pbstrRight || !*pbstrRight)
> -        return VARCMP_EQ;
> +      {
> +        UINT ll;
> +        UINT lr;
> +
> +        if (lcid)
> +        {
> +          ll = SysStringLen(pbstrLeft);
> +          lr = SysStringLen(pbstrRight);
> +        }
> +        else
> +        {
> +          ll = SysStringByteLen(pbstrLeft);
> +          lr = SysStringByteLen(pbstrRight);
> +        }
> +        if (ll == lr)
> +          return VARCMP_EQ;
> +        return ll < lr ? VARCMP_LT : VARCMP_GT;
> +      }

That's ugly, you shouldn't need such special handling here, you should
simply fall through to the normal comparisons which should give the
correct results.

-- 
Alexandre Julliard
julliard at winehq.org


From vostok at etersoft.ru  Tue Aug  5 06:06:33 2008
From: vostok at etersoft.ru (Anatoly Lyutin)
Date: Tue, 05 Aug 2008 15:06:33 +0400
Subject: [2/2] user32:focus.c Remove unneeded palette messages.
In-Reply-To: <67033E3642AA46608C46B82527223AD6@DMITRY>
References: <4896C69B.9010203@etersoft.ru>
	<67033E3642AA46608C46B82527223AD6@DMITRY>
Message-ID: <48983439.6010907@etersoft.ru>

Dmitry Timoshkov wrote:
> "Anatoly Lyutin" <vostok at etersoft.ru> wrote:
>
>> I run test-cases on 98 and XP and I can not see where this messages 
>> have been posted in tests. In Wine this messages have not processing.
>>
>> Does anybody something know about this?
>
> Try to run the tests in a paletted (256 color) mode.
>
Dmitry, thank you for your feedback.

I have added this messages in the SetActiveWindow msg sequences tests.

-- 
Best regards
	Anatoly Lyutin.



From andre.wisplinghoff at gmail.com  Tue Aug  5 07:24:06 2008
From: andre.wisplinghoff at gmail.com (Andre Wisplinghoff)
Date: Tue, 05 Aug 2008 14:24:06 +0200
Subject: [1/2] user32: Add a test for ToUnicode (try 5)
In-Reply-To: <4891EDD0.4070601@gmail.com>
References: <4891E30D.3030005@gmail.com> <4891EDD0.4070601@gmail.com>
Message-ID: <48984666.8010102@gmail.com>

Paul Vriens wrote:
> Just some things that caught my attention:
>
> Could you trim the length for some of the lines somewhat? I also don't think you 
> need all those comments in the first call to ToUnicode.
>
> There is a C++ comment in the patch, should be avoided.
>
> And as a last one, is it possible to use names instead of magic constants?
>   

I just resent my patches, hoping everything is ok now.


From ambro at b4ever.net  Tue Aug  5 08:50:10 2008
From: ambro at b4ever.net (Ambroz Bizjak)
Date: Tue, 5 Aug 2008 15:50:10 +0200 (CEST)
Subject: Patch checking robot coming
In-Reply-To: <50954.193.77.101.149.1217758952.squirrel@webmail.b4ever.net>
References: <a71bd89a0808021724w3125ae57y900f09a56396d267@mail.gmail.com>
	<50954.193.77.101.149.1217758952.squirrel@webmail.b4ever.net>
Message-ID: <34786.193.77.101.149.1217944210.squirrel@webmail.b4ever.net>

I've written some code for the chroot, though it has proven to be harder
than I taught it would, especially because of all the development tools
and libraries that need to be copied into the chroot.
Right now it will only work on Gentoo, other distributions will require
some fine-tuning of paths, especially the toolchain. Dan, if you tell me
which distro you use, I'll try to get it working there as well.

To use it, you first need a second user in the system (not the one you're
using!) that has read-access to files you create with default permissions
(but no write access). Specify that user in the file "config" and run
"patchwatcher.sh initialize_chroot". If everything goes well you will be
able to get a shell inside the chroot with "patchwatcher.sh chroot-shell"
or "patchwatcher.sh chroot-shell-owner" after running some commands
displayed as root.
After having a working chroot, use the initialize_tree command to setup
the wine source (it's inside the chroot), and the "run" option to start
continuous building.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: patchwatcher-chroot1.patch
Type: application/octet-stream
Size: 17748 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080805/9267ae99/attachment-0001.obj 

From huw at codeweavers.com  Tue Aug  5 08:56:53 2008
From: huw at codeweavers.com (Huw Davies)
Date: Tue, 5 Aug 2008 14:56:53 +0100
Subject: DIB engine status
In-Reply-To: <200808011823.43422.chi@office.etersoft.ru>
References: <20080801115648.GB24893@merlot.physics.ox.ac.uk>
	<200808011823.43422.chi@office.etersoft.ru>
Message-ID: <20080805135652.GA18328@merlot.physics.ox.ac.uk>

On Fri, Aug 01, 2008 at 06:23:43PM +0400, ?????? ????????? wrote:
> We'd like to continue develop your version. When are you going
> to remain this project?

Great!  Please send me patches and I'll apply them.  I'll probably
merge with WineHQ on every WineHQ release.

I'm not planning on doing any work on it for a while, but will
probably return to it at some point in the future.

Huw.
-- 
Huw Davies
huw at codeweavers.com


From razielmine at gmail.com  Tue Aug  5 08:57:30 2008
From: razielmine at gmail.com (Ismael Barros)
Date: Tue, 5 Aug 2008 15:57:30 +0200
Subject: [dplayx 01/12] Tests for CreateGroup
In-Reply-To: <4897F750.5050707@gmail.com>
References: <82e274890808041856o3157b2e4ue2afbdf15bb9c516@mail.gmail.com>
	<4897F750.5050707@gmail.com>
Message-ID: <82e274890808050657k8e9806en25a982fed96086f9@mail.gmail.com>

On 8/5/08, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> Ismael Barros wrote:
>> Tests for CreateGroup
>> Fixed the implementation of CreateGroup and CreateGroupInGroup so that
>> it doesn't segfault when the service provider is not initialized
>>
>> ---
>>  dlls/dplayx/dplay.c        |   10 ++
>>  dlls/dplayx/tests/dplayx.c |  340
>> ++++++++++++++++++++++++++++++++++++++++++++
>>  2 files changed, 350 insertions(+), 0 deletions(-)
>>
>>
>> ------------------------------------------------------------------------
>>
>>
> Hi Ismael,
>
> On what Windows version are you running your tests for verification? Is
> there
> anything particular you are doing to speed up the tests on your box?

I'm running them in XP SP2, in vmware, and I don't have ane way to
speed them up,
dplay is quite slow setting up connections.

> test.winehq.org already shows timeouts for all boxes that are running W2K or
> higher. This new patch serie will even add more tests but I'm afaid we will
> not
> see any output from it on the mentioned website.

All the tests work on my machine, I'll have to check how to stop them
failing in Win98 and NT4, their behavior seems completely different...
Why do timeouts appear? Tests take too long? Too long without output
to stdout? Is there any way to solve it without rewriting everything?

> --
> Cheers,
>
> Paul.
>


-- 
...yet even then, we ran like the wind, whilst our laughter echoed,
under cerulean skies...


From jnewman at codeweavers.com  Tue Aug  5 09:02:36 2008
From: jnewman at codeweavers.com (Jeremy Newman)
Date: Tue, 05 Aug 2008 09:02:36 -0500
Subject: [WineHQ] [4/4] news: Remove the 'Weekly Newsletters' box from
	the home page.
In-Reply-To: <alpine.DEB.1.10.0808050016330.6045@amboise.dolphin>
References: <48970417.3050201@free.fr>
	<b050a5e70808040734l4ce32f6fg70bccdba23c4569@mail.gmail.com>
	<4897522D.7040105@codeweavers.com>
	<alpine.DEB.1.10.0808050016330.6045@amboise.dolphin>
Message-ID: <48985D7C.5090403@codeweavers.com>

They should be fine. I will get them in sometime today, and clean them 
up if that is even needed.

Thanks for the work.

Francois Gouget wrote:
> On Mon, 4 Aug 2008, Jeremy Newman wrote:
> 
>> I have no intention of removing the WWN box. Removing it will leave a 
>> large gaping hole on that right sidebar.
> 
> Are the other patches ok?
> 
> 


From julliard at winehq.org  Tue Aug  5 11:05:36 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 05 Aug 2008 18:05:36 +0200
Subject: Vacation
Message-ID: <87d4knv44v.fsf@wine.dyndns.org>

Folks,

I'm leaving on vacation, so there won't be any commits for a while.  Of
course thanks to git that shouldn't prevent you from filling my mailbox
with patches... I'll be back on the 18th, and release 1.1.3 will thus be
on the 22nd.

-- 
Alexandre Julliard
julliard at winehq.org


From hverbeet at gmail.com  Tue Aug  5 14:35:49 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Tue, 5 Aug 2008 21:35:49 +0200
Subject: d3dx9: Implementation of D3DXGetDeclLength
In-Reply-To: <4898A7E7.6050009@ilidium.com>
References: <4898A7E7.6050009@ilidium.com>
Message-ID: <d658b69e0808051235m30cff5b4hb1fbc28e59e7119d@mail.gmail.com>

2008/8/5 Luis Busquets <luis.busquets at ilidium.com>:
> +static const D3DVERTEXELEMENT9 lc={0xFF,0,D3DDECLTYPE_UNUSED,0,0,0};
What do you use this for?

> +    while ((pdecl+i)->Stream!=0xFF)
> +    {
> +        i++;
You might as well increment pdecl itself.

Also keep in mind that Alexandre won't be back before the 18th, so no
patches will be applied before that either.


From hverbeet at gmail.com  Tue Aug  5 14:47:23 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Tue, 5 Aug 2008 21:47:23 +0200
Subject: d3dx9: Implementation of D3DXMatrixDecompose 2/2
In-Reply-To: <5f9140a20808051234h632534detf5dc8f196d81415e@mail.gmail.com>
References: <489885DF.70802@ilidium.com>
	<5f9140a20808051234h632534detf5dc8f196d81415e@mail.gmail.com>
Message-ID: <d658b69e0808051247pc454efen71ffe4d92dd7fdd2@mail.gmail.com>

2008/8/5 David Adam <david.adam.cnrs at gmail.com>:
> Hi,
>
> some remarks
>
> +    if (((*poutscale).x==0)||((*poutscale).y==0)||((*poutscale).z==0))
> should be
> +    if ((poutscale->x==0)||(poutscale->y==0)||(poutscale->z==0))
>
To add to that, you really should test your error paths in your test case.

Also:
> +    TRACE("\n");
That's not a very informative TRACE.


From thestig at google.com  Tue Aug  5 19:39:13 2008
From: thestig at google.com (Lei Zhang)
Date: Tue, 5 Aug 2008 17:39:13 -0700
Subject: [PATCH] oleaut32: Fix some corner cases in VarBstrCmp.
In-Reply-To: <87sktjvkc2.fsf@wine.dyndns.org>
References: <558b2f5c0808041539x61a1b785tc787acba0333aeec@mail.gmail.com>
	<87sktjvkc2.fsf@wine.dyndns.org>
Message-ID: <558b2f5c0808051739v19aac098mba16886ec40eb746@mail.gmail.com>

On Tue, Aug 5, 2008 at 3:15 AM, Alexandre Julliard <julliard at winehq.org> wrote:
> That's ugly, you shouldn't need such special handling here, you should
> simply fall through to the normal comparisons which should give the
> correct results.

Falling through didn't work. CompareStringW does not like NULL inputs.
It still needs a little bit of special handling. Will resubmit patch.


From dmitry at codeweavers.com  Wed Aug  6 00:15:17 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Wed, 6 Aug 2008 14:15:17 +0900
Subject: user32: DdeClientTransaction should return 0 in the last param
	forDDE_DATA
References: <48984458.1040208@yless4u.com.au>
Message-ID: <A5D3546B49AB40C8A68D34480CE61F19@DMITRY>

"Jeff Latimer" <lats at yless4u.com.au> wrote:

> --- a/dlls/user32/dde_client.c
> +++ b/dlls/user32/dde_client.c
> @@ -520,6 +520,7 @@ static WDML_QUEUE_STATE WDML_HandleRequestReply(WDML_CONV* pConv, MSG* msg, WDML
>     case WM_DDE_DATA:
>         UnpackDDElParam(WM_DDE_DATA, msg->lParam, &uiLo, &uiHi);
>  TRACE("Got the result (%08lx)\n", uiLo);
> + if (ack) *ack = ERROR_SUCCESS;
> 
>  hsz = WDML_MakeHszFromAtom(pConv->instance, uiHi);
> 
> diff --git a/dlls/user32/tests/dde.c b/dlls/user32/tests/dde.c
> index 8ea0525..debbd20 100644
> --- a/dlls/user32/tests/dde.c
> +++ b/dlls/user32/tests/dde.c
> @@ -292,10 +292,7 @@ static void test_ddeml_client(void)
>     hdata = DdeClientTransaction(NULL, 0, conversation, item, CF_TEXT, XTYP_REQUEST, default_timeout, &res);
>     ret = DdeGetLastError(client_pid);
>     ok(ret == ERROR_SUCCESS, "Expected ERROR_SUCCESS, got %d\n", ret);
> -    todo_wine
> -    {
> -        ok(res == ERROR_SUCCESS, "Expected ERROR_SUCCESS, got %08x\n", res);
> -    }
> +    ok(res == ERROR_SUCCESS, "Expected ERROR_SUCCESS, got %08x\n", res);

DdeClientTransaction is not supposed to return ERROR_SUCCESS in res. DDE_FNOTPROCESSED
looks like a more appropriate value. Same for DdeGetLastError, DMLERR_NO_ERROR seems
more reasonable in this case.

Also IMO a more appropriate place to set ack to DDE_FNOTPROCESSED is WDML_HandleReply,
so that all types of replies get covered.

-- 
Dmitry.


From dmitry at codeweavers.com  Wed Aug  6 00:21:44 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Wed, 6 Aug 2008 14:21:44 +0900
Subject: advapi32: Implement GetSecurityInfo. [take 2]
References: <20080805232109.GH22846@linux.ucla.edu>
Message-ID: <FC354578C07B40D69CC2314B0F31DD0B@DMITRY>

"Dan Hipschman" <dsh at linux.ucla.edu> wrote:

> +#include <assert.h>
...
> DWORD WINAPI GetSecurityInfo(
>     HANDLE hObject, SE_OBJECT_TYPE ObjectType,
> @@ -2718,8 +2735,44 @@ DWORD WINAPI GetSecurityInfo(
>     PSECURITY_DESCRIPTOR *ppSecurityDescriptor
> )
> {
> -  FIXME("stub!\n");
> -  return ERROR_BAD_PROVIDER;
> +    PSECURITY_DESCRIPTOR sd;
> +    NTSTATUS status;
> +    ULONG n1, n2;
> +    BOOL present, defaulted;
> +
> +    status = NtQuerySecurityObject(hObject, SecurityInfo, NULL, 0, &n1);
> +    assert(status != STATUS_SUCCESS);
> +    if (status != STATUS_BUFFER_TOO_SMALL)
> +        return RtlNtStatusToDosError(status);

My previous comments regarding assert() still apply.

-- 
Dmitry.


From david.adam.cnrs at gmail.com  Tue Aug  5 14:34:16 2008
From: david.adam.cnrs at gmail.com (David Adam)
Date: Tue, 5 Aug 2008 21:34:16 +0200
Subject: d3dx9: Implementation of D3DXMatrixDecompose 2/2
In-Reply-To: <489885DF.70802@ilidium.com>
References: <489885DF.70802@ilidium.com>
Message-ID: <5f9140a20808051234h632534detf5dc8f196d81415e@mail.gmail.com>

Hi,

some remarks

+    if (((*poutscale).x==0)||((*poutscale).y==0)||((*poutscale).z==0))
should be
+    if ((poutscale->x==0)||(poutscale->y==0)||(poutscale->z==0))

No need to redefine a module fonction
Replace  +    poutscale->x=module(pM->m[0][0],pM->m[0][1],pM->m[0][2]);
by
+
poutscale->x=D3DXVec3Length(&D3DXVECTOR3((pM->m[0][0],pM->m[0][1],pM->m[0][2]));

David


2008/8/5 Luis Busquets <luis.busquets at ilidium.com>

> Please be aware that this function relies on D3DXQuaternionRotationMatrix
> and therefore the bug in the latter has to be corrected.
>
> ---
>  dlls/d3dx9_36/d3dx9_36.spec |    2 +-
>  dlls/d3dx9_36/math.c        |   39 ++++++++++++++++++++++++++
>  dlls/d3dx9_36/tests/math.c  |   64
> +++++++++++++++++++++++++++++++++++++++++++
>  include/d3dx9math.h         |    1 +
>  4 files changed, 105 insertions(+), 1 deletions(-)
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080805/3a67df27/attachment.htm 

From bunglehead at gmail.com  Wed Aug  6 04:11:48 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Wed, 06 Aug 2008 13:11:48 +0400
Subject: taskmgr [try 2]: Converted some functions and variables to Unicode
	[1/12]
In-Reply-To: <48995C3F.3000206@mail.ru>
References: <48995C3F.3000206@mail.ru>
Message-ID: <48996AD4.5050302@gmail.com>

Vladimir Pankratov wrote:

> -    TCHAR     strErrorText[260];
> +    WCHAR     wstrErrorText[0x400];

Why do you use word format for size constant? Btw, is it normal that it's changed 260 -> 1024?

> -            GetLastErrorText(strErrorText, 260);
> +            GetLastErrorText(wstrErrorText, sizeof(wstrErrorText)/sizeof(WCHAR));

You've patched GetLastErrorText in your patch 12. But you changed calls to use WCHAR argument before this.
That's why previous patches are broken I think. you should change function and all related calls of it in
a single patch.



From luis.busquets at ilidium.com  Wed Aug  6 05:51:12 2008
From: luis.busquets at ilidium.com (Luis Busquets)
Date: Wed, 06 Aug 2008 12:51:12 +0200
Subject: d3dx9: Implementation of D3DXGetDeclLength
In-Reply-To: <d658b69e0808051235m30cff5b4hb1fbc28e59e7119d@mail.gmail.com>
References: <4898A7E7.6050009@ilidium.com>
	<d658b69e0808051235m30cff5b4hb1fbc28e59e7119d@mail.gmail.com>
Message-ID: <48998220.3040600@ilidium.com>

Certainly

+static const D3DVERTEXELEMENT9 lc={0xFF,0,D3DDECLTYPE_UNUSED,0,0,0};

is not used. I will take it out.

However, I do not understand why pdecl needs to be incremented. Actually, the tests respond correctly. Why do you think pdecl has to be incremented? We are actually returning i. pdecl is just an input.

Last, yeah I know. It is a pity. When I am on holiday is when I have more time...



H. Verbeet escribi?:
> 2008/8/5 Luis Busquets <luis.busquets at ilidium.com>:
>   
>> +static const D3DVERTEXELEMENT9 lc={0xFF,0,D3DDECLTYPE_UNUSED,0,0,0};
>>     
> What do you use this for?
>
>   
>> +    while ((pdecl+i)->Stream!=0xFF)
>> +    {
>> +        i++;
>>     
> You might as well increment pdecl itself.
>
> Also keep in mind that Alexandre won't be back before the 18th, so no
> patches will be applied before that either.
>
>
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080806/8218a3eb/attachment.htm 

From dmitry at codeweavers.com  Wed Aug  6 09:37:22 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Wed, 6 Aug 2008 23:37:22 +0900
Subject: user32: Add test and fix for the error with edit control whose
	parentis desktop.
References: <200808061813.12074.shpigor@etersoft.ru>
Message-ID: <D76C6EF7BCFE4407A01A4A2B7BF441A5@DMITRY>

"Ilya Shpigor" <shpigor at etersoft.ru> wrote:

> +static void test_edit_parent_desktop_1(void)
> +{
> +    HWND hwEdit;
> +    HDC hdc;
> +
> +    hwEdit = CreateWindowEx( 0, "EDIT", NULL, WS_CHILD | WS_OVERLAPPEDWINDOW | 
> WS_VISIBLE, 10, 10, 300, 300,                                 GetDesktopWindow(), NULL, hinst, NULL);

Formatting of the line above looks pretty much strange. Please try to keep
the line length under 80 columns, and use consistent spacing.

> +
> +    hdc = GetDC( hwEdit );
> +    SendMessage( hwEdit, WM_PAINT, (WPARAM)GetDC( hwEdit ), 0 );
> +
> +    ok( GetPixel( hdc, PIXEL_X, PIXEL_Y ) != COLOR_DEF_EDIT, "Get incorrect parent device context handle: brush color 
> = %04x\n", GetPixel( hdc, PIXEL_X, PIXEL_Y ) );

Same here.

> +
> +    DestroyWindow( hwEdit );
> +}

In general this test proves nothing.

-- 
Dmitry. 



From stefan at codeweavers.com  Wed Aug  6 10:27:59 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Wed, 6 Aug 2008 10:27:59 -0500
Subject: winex11.drv: recognize WGL_SWAP_METHOD_ARB wgl pixel format
	attribute.
In-Reply-To: <48998CB9.4030704@lxnt.info>
References: <48998CB9.4030704@lxnt.info>
Message-ID: <00b501c8f7d9$02308fc0$0691af40$@com>

> WGL_SWAP_METHOD attribute is not handled. Explicitly skip it in
> ConvertAttribWGLtoGLX and always return WGL_SWAP_UNDEFINED_ARB in
> X11DRV_wglGetPixelFormatAttribivARB, because buffers are always in
> undefined state after swap in GLX.
There's GLX_OML_swap_method. It is supported on fglrx, and I think it is
supported on the open source drivers as well





From stefan at codeweavers.com  Wed Aug  6 10:31:28 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Wed, 6 Aug 2008 10:31:28 -0500
Subject: winex11.drv: recognize WGL_SWAP_METHOD_ARB wgl pixel format
	attribute.
In-Reply-To: <48998CB9.4030704@lxnt.info>
References: <48998CB9.4030704@lxnt.info>
Message-ID: <00bc01c8f7d9$7ebf9db0$7c3ed910$@com>

> WGL_SWAP_METHOD attribute is not handled. Explicitly skip it in
> ConvertAttribWGLtoGLX and always return WGL_SWAP_UNDEFINED_ARB in
> X11DRV_wglGetPixelFormatAttribivARB, because buffers are always in
> undefined state after swap in GLX.
There's GLX_OML_swap_method. It is supported on fglrx, and I think it is
supported on the open source drivers as well





From chi at etersoft.ru  Wed Aug  6 06:48:08 2008
From: chi at etersoft.ru (Sergey Novosyolov)
Date: Wed, 6 Aug 2008 15:48:08 +0400
Subject: DIB engine status
In-Reply-To: <530468570808021925n7ad9f07mba976fb1d89db7e6@mail.gmail.com>
References: <20080801115648.GB24893@merlot.physics.ox.ac.uk>
	<200808011823.43422.chi@office.etersoft.ru>
	<530468570808021925n7ad9f07mba976fb1d89db7e6@mail.gmail.com>
Message-ID: <200808061548.10117.chi@office.etersoft.ru>


> I will
> likely download his tree and play around with it before school starts
> again.

Which functions will you work on? It is necessary for us to plan our further 
development.


From dsh at linux.ucla.edu  Wed Aug  6 11:47:02 2008
From: dsh at linux.ucla.edu (Dan Hipschman)
Date: Wed, 6 Aug 2008 09:47:02 -0700
Subject: advapi32: Implement GetSecurityInfo. [take 2]
In-Reply-To: <FC354578C07B40D69CC2314B0F31DD0B@DMITRY>
References: <20080805232109.GH22846@linux.ucla.edu>
	<FC354578C07B40D69CC2314B0F31DD0B@DMITRY>
Message-ID: <20080806164702.GI22846@linux.ucla.edu>

On Wed, Aug 06, 2008 at 02:21:44PM +0900, Dmitry Timoshkov wrote:
> "Dan Hipschman" <dsh at linux.ucla.edu> wrote:
> 
> >+#include <assert.h>
> ...
> >DWORD WINAPI GetSecurityInfo(
> >    HANDLE hObject, SE_OBJECT_TYPE ObjectType,
> >@@ -2718,8 +2735,44 @@ DWORD WINAPI GetSecurityInfo(
> >    PSECURITY_DESCRIPTOR *ppSecurityDescriptor
> >)
> >{
> >-  FIXME("stub!\n");
> >-  return ERROR_BAD_PROVIDER;
> >+    PSECURITY_DESCRIPTOR sd;
> >+    NTSTATUS status;
> >+    ULONG n1, n2;
> >+    BOOL present, defaulted;
> >+
> >+    status = NtQuerySecurityObject(hObject, SecurityInfo, NULL, 0, &n1);
> >+    assert(status != STATUS_SUCCESS);
> >+    if (status != STATUS_BUFFER_TOO_SMALL)
> >+        return RtlNtStatusToDosError(status);
> 
> My previous comments regarding assert() still apply.

But I like the assert.  You haven't really given me a reason to take it
out.  Why is it inappropriate?  It's use here seems perfectly reasonable
to me.  I'm calling NtQuerySecurityObject in such a way that I'm
expecting it to fail, and if it doesn't fail it's certainly a bug.
Further, it had better fail because there's nothing reasonable to do if
it doesn't.  assert is the perfect way to document all these things.


From screwdriver at lxnt.info  Wed Aug  6 13:50:24 2008
From: screwdriver at lxnt.info (Alexander Sabourenkov)
Date: Wed, 06 Aug 2008 22:50:24 +0400
Subject: winex11.drv: recognize WGL_SWAP_METHOD_ARB wgl pixel
	format	attribute.
In-Reply-To: <00bc01c8f7d9$7ebf9db0$7c3ed910$@com>
References: <48998CB9.4030704@lxnt.info> <00bc01c8f7d9$7ebf9db0$7c3ed910$@com>
Message-ID: <4899F270.7010303@lxnt.info>

Stefan D?singer wrote:
> There's GLX_OML_swap_method. It is supported on fglrx, and I think it is
> supported on the open source drivers as well
> 

Hmm. Did not found that one. Is supported on r300/mesa7-7.1.0~git20080728.

Modified patch attached.

It would be better to actually convert the attribute in 
ConvertAttribWGLtoGLX, but, in case the GLX extension is missing, we 
must somehow tell ConvertAttribWGLtoGLX's caller, of whose currently 
only one exists, that it should filter the list of fbformats on this 
attribute itself (in general case).

In our case, if we can't tell what swap methods are on fbformats, we 
must assume they're GLX_SWAP_UNDEFINED_OML, and thus if 
WGL_SWAP_METHOD_ARB attribute in request is not WGL_SWAP_UNDEFINED_ARB, 
then there are zero matching fbformats(pixelformats).

Is putting the following into ConvertAttribWGLtoGLX a good idea?

case WGL_SWAP_METHOD_ARB:
   pop = iWGLAttr[++cur];
   if  (glxRequireExtension("GLX_OML_swap_method"))
     switch(pop) {
       case WGL_SWAP_EXCHANGE_ARB:
         PUSH2(oGLXAttr, GLX_SWAP_METHOD_OML,
           GLX_SWAP_EXCHANGE_OML);
         break;
       case WGL_SWAP_COPY_ARB:
         PUSH2(oGLXAttr, GLX_SWAP_METHOD_OML,
           GLX_SWAP_COPY_OML);
         break;
       case WGL_SWAP_UNDEFINED_ARB:
         PUSH2(oGLXAttr, GLX_SWAP_METHOD_OML,
           WGL_SWAP_UNDEFINED_ARB);
         break;
       default:
         ERR("unexpected WGL_SWAP_METHOD_ARB(%x)\n", pop);
      }
   else if (pop != WGL_SWAP_UNDEFINED_ARB)
         return 0; /* no fbconfig could possibly match */
   break; /* they all match, swap being undefined by default */


-------------- next part --------------
A non-text attachment was scrubbed...
Name: wgl_swap_method_arb.patch
Type: text/x-diff
Size: 2368 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080806/41e794a2/attachment.patch 

From dmitry at codeweavers.com  Wed Aug  6 20:05:35 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 7 Aug 2008 10:05:35 +0900
Subject: advapi32: Implement GetSecurityInfo. [take 2]
References: <20080805232109.GH22846@linux.ucla.edu><FC354578C07B40D69CC2314B0F31DD0B@DMITRY>
	<20080806164702.GI22846@linux.ucla.edu>
Message-ID: <BAEA6AB577A1444D9DF46118026A4259@DMITRY>

"Dan Hipschman" <dsh at linux.ucla.edu> wrote:

> But I like the assert.  You haven't really given me a reason to take it
> out.  Why is it inappropriate?  It's use here seems perfectly reasonable
> to me.  I'm calling NtQuerySecurityObject in such a way that I'm
> expecting it to fail, and if it doesn't fail it's certainly a bug.
> Further, it had better fail because there's nothing reasonable to do if
> it doesn't.  assert is the perfect way to document all these things.

Any API may fail in some way, but that would be ridiculous to pollute
the whole Wine source tree with asserts. As I've said, IMO it's better
to have a test case for the API which will detect broken behaviour
instead.

-- 
Dmitry.


From juan.lang at gmail.com  Wed Aug  6 20:15:37 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Wed, 6 Aug 2008 18:15:37 -0700
Subject: advapi32: Implement GetSecurityInfo. [take 2]
In-Reply-To: <BAEA6AB577A1444D9DF46118026A4259@DMITRY>
References: <20080805232109.GH22846@linux.ucla.edu>
	<FC354578C07B40D69CC2314B0F31DD0B@DMITRY>
	<20080806164702.GI22846@linux.ucla.edu>
	<BAEA6AB577A1444D9DF46118026A4259@DMITRY>
Message-ID: <3a768c550808061815l242bf1cl87bb89bdcb690872@mail.gmail.com>

> Any API may fail in some way, but that would be ridiculous to pollute
> the whole Wine source tree with asserts. As I've said, IMO it's better
> to have a test case for the API which will detect broken behaviour
> instead.

I agree that we shouldn't have asserts across DLLs.  While we may
"know" that the behavior is consistent, we may change the
implementation of another DLL at some point, and it's more difficult
to discover cross-DLL dependencies like this than those within one
DLL.  I think Dmitry's right that test cases for the API are a better
way to ensure an API will behave in a particular way.  asserts are
better to ensure consistency within one module, IMO.
--Juan


From dmitry at codeweavers.com  Thu Aug  7 00:01:50 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 7 Aug 2008 14:01:50 +0900
Subject: [TRY2]user32/tests: add tests for creating subclassed
	builtinclass windows
References: <E1KQlaE-0003eH-8i@wine.codeweavers.com>
Message-ID: <EF00617886DB4A3DAC7EEDABC3B7FF8B@DMITRY>

"Hongbo Ni" <hongbo at njstar.com> wrote:

> +static void test_builtin_class_subclassed(char *classA, WCHAR *classW);

It is possible to avoid forward declarations by a proper function rearranging.
Also please add 'const' to classA/W.

> +
> +static void test_all_builtin_classes_subclassed(void)
> +{
> +    int i, n, len;
> +    WCHAR classW[80];

10 should be enough.

> +    CHAR *BUILTIN_CLASSES[MAX_BUILTIN_CLASSES] = {

'static const CHAR BUILTIN_CLASSES[][10]' as in the existing test would be
better IMO.

> +        "Edit",
> +        "Button",
> +        "Static",
> +        "ComboBox",
> +        "ComboLBox",
> +        "ListBox",
> +        "#32770",  /* dialog */
> +    };

You forgot "ScrollBar" and some other builtin classes.

> +
> +    for(i = 0; i < MAX_BUILTIN_CLASSES; i++)
> +    {
> +        len = strlen(BUILTIN_CLASSES[i]);
> +        for(n = 0; n < len; n++) classW[n] = BUILTIN_CLASSES[i][n];
> +        classW[n] = 0;

MultiByteToWideChar would be more appropriate here.

> +        test_builtin_class_subclassed(BUILTIN_CLASSES[i], classW);
> +    }
> +}
> +
> +static void test_builtin_class_subclassed(char *classA, WCHAR *classW)
> +{
> +    HWND hwnd, hwnd2;
> +    WNDPROC oldproc;
> +    
> +    hwnd = CreateWindowExA(0, classA, NULL, WS_OVERLAPPEDWINDOW, CW_USEDEFAULT, 
> +                         CW_USEDEFAULT, 680, 260, NULL, NULL, NULL, 0);

It would be helpful to actually test whether window has been created, and what
type it has (ansi/unicode). Same is true for all similar cases.

Otherwise the test looks good, and it passes for me under XP SP3.

-- 
Dmitry.


From wl at gnu.org  Thu Aug  7 03:33:28 2008
From: wl at gnu.org (Werner LEMBERG)
Date: Thu, 07 Aug 2008 10:33:28 +0200 (CEST)
Subject: Networking problems with IDU Verwaltung software
Message-ID: <20080807.103328.128311483.wl@gnu.org>


[wine 1.1.2]
[openSuSE 10.2, kernel 2.6.21-rc6]

Folks,


I try to make run a German software bundle called `IDU Verwaltung'.
It seems to work, however, I can't make it to connect to a PostgreSQL
database.  I have enabled PostgreSQL access in my firewall.

Interestingly, I couldn't find information how to debug networking
problems with wine.  Any links?

Whatever, here my problem report.  I tried on wine-users first, but
the responses weren't really encouraging.

I've executed

  WINEDEBUG=warn+all wine Idu_Verwaltung.exe 2> ~/winelog.warnall

[within a fresh .wine, not installing any vcredist_x86.exe bundle --
 doing this doesn't solve the `actctx' problem which is listed below,
 BTW]

Doing

  cat winelog.warnall \
  | grep -v 'c000003[45]' \
  | grep -v 'not found' \
  | grep -v 'case-insensitive' \
  | grep -i -v 'failed to load' \
  | grep -v 'cannot open' \
  | grep -v 'no-exec' \
  | grep -v 'Invalid handle' \
  | grep -v 'font' \
  | grep -v 'vkey' \
  | grep -v 'keysyms' \
  | grep -v 'Heap' \
  | grep -v 'Bitmap' \
  | grep -v 'GetDC'

gives

  warn:sync:SetNamedPipeHandleState stub: 0x24 0x7edca5a8/2 (nil) (nil)
  warn:msvcrt:msvcrt_init_console :Console handle Initialisation FAILED!
  warn:class:CLASS_RegisterClass Win extra bytes 44 is > 40
  warn:class:CLASS_RegisterClass Win extra bytes 44 is > 40
  warn:winspool:WINSPOOL_GetDWORDFromReg Got ret = 2 on name dnsTimeout
  warn:winspool:WINSPOOL_GetDWORDFromReg Got ret = 2 on name txTimeout
  warn:winspool:WINSPOOL_GetDWORDFromReg Got ret = 2 on name dnsTimeout
  warn:winspool:WINSPOOL_GetDWORDFromReg Got ret = 2 on name txTimeout
  warn:mixer:getcomponenttype Unknown mixer name Capture Mux, probably harmless
  warn:mixer:getcomponenttype Unknown mixer name Capture Mux, probably harmless
  warn:class:CLASS_RegisterClass Win extra bytes 44 is > 40
  warn:actctx:lookup_manifest_file no matching file for L"x86_Microsoft.VC80.CRT_1fc8b3b9a1e18e3b_8.0.*.*_*.manife
  fixme:actctx:parse_depend_manifests Could not find dependent assembly L"Microsoft.VC80.CRT"
  warn:module:process_attach Initialization of L"MSVCR80.dll" failed
  warn:combo:ComboWndProc_common unknown msg WM_USER+ba10 wp=460001 lp=00030046
  warn:file:CreateFileW Unable to create file L"\\\\.\\Z:" (status c0000022)
  warn:combo:ComboWndProc_common unknown msg WM_USER+ba10 wp=420001 lp=00060042
  warn:combo:ComboWndProc_common unknown msg WM_USER+ba10 wp=4c0001 lp=0009004c
  warn:driver:CloseDriver Failed to close driver
  warn:driver:CloseDriver Failed to close driver
  warn:driver:CloseDriver Failed to close driver
  warn:driver:CloseDriver Failed to close driver
  warn:driver:CloseDriver Failed to close driver
  warn:profile:PROFILE_FlushFile No current profile!

The only messages related to networking are those winspool things
which doesn't say anything to me.  Any idea how to proceed?


    Werner


PS: In case you still have any FreeType issues in Wine, ask me :-)


From leslie_alistair at hotmail.com  Thu Aug  7 05:31:57 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Thu, 07 Aug 2008 20:31:57 +1000
Subject: Networking problems with IDU Verwaltung software
In-Reply-To: <20080807.103328.128311483.wl@gnu.org>
References: <20080807.103328.128311483.wl@gnu.org>
Message-ID: <489ACF1D.9020509@hotmail.com>

Werner LEMBERG wrote:
> [wine 1.1.2]
> [openSuSE 10.2, kernel 2.6.21-rc6]
> 
> Folks,
> 
> 
> I try to make run a German software bundle called `IDU Verwaltung'.
> It seems to work, however, I can't make it to connect to a PostgreSQL
> database.  I have enabled PostgreSQL access in my firewall.

How are you connecting to the PostgreSQL DB, ADO, ODBC?  From pass 
experience, wine needs to be in win98 mode for odbc.

> 
> Interestingly, I couldn't find information how to debug networking
> problems with wine.  Any links?
> 
> Whatever, here my problem report.  I tried on wine-users first, but
> the responses weren't really encouraging.

I would log a bug report, and attached a log.

Best Regards
  Alistair Leslie-Hughes


From lats at yless4u.com.au  Thu Aug  7 06:22:15 2008
From: lats at yless4u.com.au (Jeff Latimer)
Date: Thu, 07 Aug 2008 21:22:15 +1000
Subject: user32: DdeClientTransaction should return 0 in the last param
	forDDE_DATA
In-Reply-To: <A5D3546B49AB40C8A68D34480CE61F19@DMITRY>
References: <48984458.1040208@yless4u.com.au>
	<A5D3546B49AB40C8A68D34480CE61F19@DMITRY>
Message-ID: <489ADAE7.5020904@yless4u.com.au>

Dmitry Timoshkov wrote:
> "Jeff Latimer" <lats at yless4u.com.au> wrote:
>
>>
>> + if (ack) *ack = ERROR_SUCCESS;
>>
>>  
>>     ok(ret == ERROR_SUCCESS, "Expected ERROR_SUCCESS, got %d\n", ret);
>> -    todo_wine
>> -    {
>> -        ok(res == ERROR_SUCCESS, "Expected ERROR_SUCCESS, got 
>> %08x\n", res);
>> -    }
>> +    ok(res == ERROR_SUCCESS, "Expected ERROR_SUCCESS, got %08x\n", 
>> res);
>
> DdeClientTransaction is not supposed to return ERROR_SUCCESS in res. 
> DDE_FNOTPROCESSED
> looks like a more appropriate value. Same for DdeGetLastError, 
> DMLERR_NO_ERROR seems
> more reasonable in this case.
Thanks, DMLERR_NO_ERROR looks better.

MSDN does not show DdeCientTransaction as returning in res 
DDE_FNOTPROCESSED.  Is this the standard test to see if it is zero?  
Otherwise an actual test for 0 would be just as good.
>
> Also IMO a more appropriate place to set ack to DDE_FNOTPROCESSED is 
> WDML_HandleReply,
> so that all types of replies get covered.
I thought this as well when I was hunting for a place for setting ack.  
It seems that handle routines all do something different.  Some don't 
set the ack/res and this causes tests to fail (ie. deadbeef passes 
through some of them).  I opted to place the setting of ack in the 
routine that applies to this test.

Jeff



From dmitry at codeweavers.com  Thu Aug  7 06:31:44 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 7 Aug 2008 20:31:44 +0900
Subject: user32: DdeClientTransaction should return 0 in the last param
	forDDE_DATA
References: <48984458.1040208@yless4u.com.au>
	<A5D3546B49AB40C8A68D34480CE61F19@DMITRY>
	<489ADAE7.5020904@yless4u.com.au>
Message-ID: <1BFB9C596A534225B47A8154DF52C558@DMITRY>

"Jeff Latimer" <lats at yless4u.com.au> wrote:

> MSDN does not show DdeCientTransaction as returning in res 
> DDE_FNOTPROCESSED.  Is this the standard test to see if it is zero?  
> Otherwise an actual test for 0 would be just as good.

Existing tests already check for DDE_FNOTPROCESSED. Using just 0
doesn't say anything, and using meaningful symbol names is always
preferred.

>> Also IMO a more appropriate place to set ack to DDE_FNOTPROCESSED is 
>> WDML_HandleReply,
>> so that all types of replies get covered.
> I thought this as well when I was hunting for a place for setting ack.  
> It seems that handle routines all do something different.  Some don't 
> set the ack/res and this causes tests to fail (ie. deadbeef passes 
> through some of them).  I opted to place the setting of ack in the 
> routine that applies to this test.

Although there is no tests for all DdeClientTransaction cases, it should
be pretty safe to assume that all request types behave similar in returning
handling state.

-- 
Dmitry.


From lats at yless4u.com.au  Thu Aug  7 06:42:40 2008
From: lats at yless4u.com.au (Jeff Latimer)
Date: Thu, 07 Aug 2008 21:42:40 +1000
Subject: user32: DdeClientTransaction should return 0 in the last param
	forDDE_DATA
In-Reply-To: <1BFB9C596A534225B47A8154DF52C558@DMITRY>
References: <48984458.1040208@yless4u.com.au>
	<A5D3546B49AB40C8A68D34480CE61F19@DMITRY>
	<489ADAE7.5020904@yless4u.com.au>
	<1BFB9C596A534225B47A8154DF52C558@DMITRY>
Message-ID: <489ADFB0.8000908@yless4u.com.au>

Dmitry Timoshkov wrote:
> "Jeff Latimer" <lats at yless4u.com.au> wrote:
>
>> MSDN does not show DdeCientTransaction as returning in res 
>> DDE_FNOTPROCESSED.  Is this the standard test to see if it is zero?  
>> Otherwise an actual test for 0 would be just as good.
>
> Existing tests already check for DDE_FNOTPROCESSED. Using just 0
> doesn't say anything, and using meaningful symbol names is always
> preferred.
Ok, it will be consistent.
>
>>> Also IMO a more appropriate place to set ack to DDE_FNOTPROCESSED is 
>>> WDML_HandleReply,
>>> so that all types of replies get covered.
>> I thought this as well when I was hunting for a place for setting 
>> ack.  It seems that handle routines all do something different.  Some 
>> don't set the ack/res and this causes tests to fail (ie. deadbeef 
>> passes through some of them).  I opted to place the setting of ack in 
>> the routine that applies to this test.
>
> Although there is no tests for all DdeClientTransaction cases, it should
> be pretty safe to assume that all request types behave similar in 
> returning
> handling state.
That is not how it looked when I set ack to DMLERR_NO_ERROR at the start 
of the WDML_HandleReply.  Tests started fail != 0xdeadbeef in Windows.  
I would prefer to leave the test where I placed it for that reason.



From kai.blin at gmail.com  Thu Aug  7 08:54:37 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Thu, 7 Aug 2008 15:54:37 +0200
Subject: Networking problems with IDU Verwaltung software
In-Reply-To: <20080807.103328.128311483.wl@gnu.org>
References: <20080807.103328.128311483.wl@gnu.org>
Message-ID: <200808071554.37394.kai.blin@gmail.com>

On Thursday 07 August 2008 10:33:28 Werner LEMBERG wrote:

> I try to make run a German software bundle called `IDU Verwaltung'.
> It seems to work, however, I can't make it to connect to a PostgreSQL
> database.  I have enabled PostgreSQL access in my firewall.
>
> Interestingly, I couldn't find information how to debug networking
> problems with wine.  Any links?

If your software really is trying to use winsock to access the database, try 
running it with "WINEDEBUG=+winsock wine app.exe" to log the winsock calls 
that are being made.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080807/ec63c52b/attachment-0001.pgp 

From bunglehead at gmail.com  Thu Aug  7 09:20:56 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Thu, 07 Aug 2008 18:20:56 +0400
Subject: taskmgr: Converted some functions and variables to Unicode
In-Reply-To: <489A9A0A.5000703@mail.ru>
References: <489A9A0A.5000703@mail.ru>
Message-ID: <489B04C8.6020904@gmail.com>

Vladimir Pankratov wrote:

> -    if (DialogBox(hInst, MAKEINTRESOURCE(IDD_COLUMNS_DIALOG), hMainWnd, ColumnsDialogWndProc) == IDOK)
> +    if (DialogBoxW(hInst, (LPWSTR)MAKEINTRESOURCE(IDD_COLUMNS_DIALOG), hMainWnd, ColumnsDialogWndProc) == IDOK)

Why not to use MAKEINTRESOURCEW?



From zgold550 at gmail.com  Thu Aug  7 09:40:21 2008
From: zgold550 at gmail.com (Zachary Goldberg)
Date: Thu, 7 Aug 2008 10:40:21 -0400
Subject: Make RegisterDeviceNotificationW behave like
	RegisterDeviceNotificationA
In-Reply-To: <20080806210531.203090@gmx.net>
References: <20080806210531.203090@gmx.net>
Message-ID: <b050a5e70808070740i28e9a13fk40cb40efd20746a7@mail.gmail.com>

On 8/6/08, Martin Profittlich <martin.profittlich at gmx.de> wrote:
> Hello!
>
> This patch fixes bug 14781 (http://bugs.winehq.org/show_bug.cgi?id=14781).
>
> Some Native Instruments apps like Kontakt 3 and Kore Player crash on startup, shortly after calling RegisterDeviceNotificationW(). This stub currently returns a 0 for failure. RegisterDeviceNotificationA() otoh returns a fake handle. This patch makes RegisterDeviceNotificationW() do this also. This makes both apps work.
>
> This is my first submission. Please let me know if the format is wrong or some important information is missing.
>
> Martin
> --
> Ist Ihr Browser Vista-kompatibel? Jetzt die neuesten
> Browser-Versionen downloaden: http://www.gmx.net/de/go/browser
>
>
>
>
>


Martin,

Your patch is more likely to be accepted if it comes with a test which
works on windows, didnt pass in wine before but passes now and
demonstrates why the new behavior is correct.

--Zach


From dmitry at codeweavers.com  Thu Aug  7 09:48:42 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 7 Aug 2008 23:48:42 +0900
Subject: user32: DdeClientTransaction should return 0 in the last
	paramforDDE_DATA
References: <48984458.1040208@yless4u.com.au><A5D3546B49AB40C8A68D34480CE61F19@DMITRY><489ADAE7.5020904@yless4u.com.au><1BFB9C596A534225B47A8154DF52C558@DMITRY>
	<489ADFB0.8000908@yless4u.com.au>
Message-ID: <8C3F913283194D09A45F82A45B1D3A35@DMITRY>

"Jeff Latimer" <lats at yless4u.com.au> wrote:

>> Although there is no tests for all DdeClientTransaction cases, it should
>> be pretty safe to assume that all request types behave similar in 
>> returning
>> handling state.
> That is not how it looked when I set ack to DMLERR_NO_ERROR at the start 
> of the WDML_HandleReply.  Tests started fail != 0xdeadbeef in Windows.  
> I would prefer to leave the test where I placed it for that reason.

I don't see how changing Wine internal implementation could lead to
failing tests under Windows.

-- 
Dmitry.


From dmitry at codeweavers.com  Thu Aug  7 09:52:25 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 7 Aug 2008 23:52:25 +0900
Subject: Make RegisterDeviceNotificationW behave
	likeRegisterDeviceNotificationA
References: <20080806210531.203090@gmx.net>
	<b050a5e70808070740i28e9a13fk40cb40efd20746a7@mail.gmail.com>
Message-ID: <BE8EAFC2F24D4C9A8DDA66C90F642E84@DMITRY>

"Zachary Goldberg" <zgold550 at gmail.com> wrote:

> Your patch is more likely to be accepted if it comes with a test which
> works on windows, didnt pass in wine before but passes now and
> demonstrates why the new behavior is correct.

There is no need for a test since that's not really an implementation
but just a better stub which follows existing code.

-- 
Dmitry.


From hintak_leung at yahoo.co.uk  Thu Aug  7 06:43:32 2008
From: hintak_leung at yahoo.co.uk (Hin-Tak Leung)
Date: Thu, 7 Aug 2008 11:43:32 +0000 (GMT)
Subject: Networking problems with IDU Verwaltung software
In-Reply-To: <20080807.103328.128311483.wl@gnu.org>
Message-ID: <901873.43732.qm@web23107.mail.ird.yahoo.com>

Hi Werner, fancy seeing you in a different list... I was wondering why you do warn+all (not very useful). I would be doing +relay or +odbc or one of the others. Here is a useful link:

http://wiki.jswindle.com/index.php/Wine_Debug_Channels


--- On Thu, 7/8/08, Werner LEMBERG <wl at gnu.org> wrote:
> [wine 1.1.2]
> [openSuSE 10.2, kernel 2.6.21-rc6]
> 
> Folks,
> 
> 
> I try to make run a German software bundle called `IDU
> Verwaltung'.
> It seems to work, however, I can't make it to connect
> to a PostgreSQL
> database.  I have enabled PostgreSQL access in my firewall.
> 
> Interestingly, I couldn't find information how to debug
> networking
> problems with wine.  Any links?


<snipped>
>   WINEDEBUG=warn+all wine Idu_Verwaltung.exe 2>
> ~/winelog.warnall
<snipped>


      __________________________________________________________
Not happy with your email address?.
Get the one you really want - millions of new email addresses available now at Yahoo! http://uk.docs.yahoo.com/ymail/new.html


From juan.lang at gmail.com  Thu Aug  7 16:25:00 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 7 Aug 2008 14:25:00 -0700
Subject: advapi32: Implement GetSecurityInfo. [take 3]
Message-ID: <3a768c550808071425v1d5578f1xfcaa481f07c2328d@mail.gmail.com>

Hi Dan,

+    if (ppSecurityDescriptor)
+        *ppSecurityDescriptor = sd;
+

you leak sd in the (implicit) else block here.
--Juan


From dsh at linux.ucla.edu  Thu Aug  7 16:28:10 2008
From: dsh at linux.ucla.edu (Dan Hipschman)
Date: Thu, 7 Aug 2008 14:28:10 -0700
Subject: advapi32: Implement GetSecurityInfo. [take 3]
In-Reply-To: <3a768c550808071425v1d5578f1xfcaa481f07c2328d@mail.gmail.com>
References: <3a768c550808071425v1d5578f1xfcaa481f07c2328d@mail.gmail.com>
Message-ID: <20080807212810.GL22846@linux.ucla.edu>

On Thu, Aug 07, 2008 at 02:25:00PM -0700, Juan Lang wrote:
> +    if (ppSecurityDescriptor)
> +        *ppSecurityDescriptor = sd;
> +
> 
> you leak sd in the (implicit) else block here.

So does Windows.


From juan.lang at gmail.com  Thu Aug  7 16:30:27 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 7 Aug 2008 14:30:27 -0700
Subject: advapi32: Implement GetSecurityInfo. [take 3]
In-Reply-To: <20080807212810.GL22846@linux.ucla.edu>
References: <3a768c550808071425v1d5578f1xfcaa481f07c2328d@mail.gmail.com>
	<20080807212810.GL22846@linux.ucla.edu>
Message-ID: <3a768c550808071430q26a6ae46m4894bf67b39aca6a@mail.gmail.com>

>> you leak sd in the (implicit) else block here.
>
> So does Windows.

In that case, you should include that in your tests, as it's not
especially obvious.
--Juan


From dsh at linux.ucla.edu  Thu Aug  7 16:31:30 2008
From: dsh at linux.ucla.edu (Dan Hipschman)
Date: Thu, 7 Aug 2008 14:31:30 -0700
Subject: advapi32: Implement GetSecurityInfo. [take 3]
In-Reply-To: <20080807212810.GL22846@linux.ucla.edu>
References: <3a768c550808071425v1d5578f1xfcaa481f07c2328d@mail.gmail.com>
	<20080807212810.GL22846@linux.ucla.edu>
Message-ID: <20080807213130.GM22846@linux.ucla.edu>

On Thu, Aug 07, 2008 at 02:28:10PM -0700, Dan Hipschman wrote:
> On Thu, Aug 07, 2008 at 02:25:00PM -0700, Juan Lang wrote:
> > +    if (ppSecurityDescriptor)
> > +        *ppSecurityDescriptor = sd;
> > +
> > 
> > you leak sd in the (implicit) else block here.
> 
> So does Windows.

I guess I should elaborate on that.  You can request any of the four
parts of the security descriptor and pass NULL for the SD itself and
Windows will return them without anyway to free the memory.


From juan.lang at gmail.com  Thu Aug  7 16:33:35 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 7 Aug 2008 14:33:35 -0700
Subject: advapi32: Implement GetSecurityInfo. [take 3]
In-Reply-To: <20080807213130.GM22846@linux.ucla.edu>
References: <3a768c550808071425v1d5578f1xfcaa481f07c2328d@mail.gmail.com>
	<20080807212810.GL22846@linux.ucla.edu>
	<20080807213130.GM22846@linux.ucla.edu>
Message-ID: <3a768c550808071433r78d67adaube1ff83cfc9ec253@mail.gmail.com>

> I guess I should elaborate on that.  You can request any of the four
> parts of the security descriptor and pass NULL for the SD itself and
> Windows will return them without anyway to free the memory.

I can see what MSDN says it does, but your tests don't check that
calling GetSecurityInfo with a non-null ppsidOwner, ppsidGroup etc.
and a null ppSecurityDescriptor is allowed.  Because you're not
checking it, it looks like a bug.
--Juan


From dsh at linux.ucla.edu  Thu Aug  7 16:39:32 2008
From: dsh at linux.ucla.edu (Dan Hipschman)
Date: Thu, 7 Aug 2008 14:39:32 -0700
Subject: advapi32: Implement GetSecurityInfo. [take 3]
In-Reply-To: <3a768c550808071433r78d67adaube1ff83cfc9ec253@mail.gmail.com>
References: <3a768c550808071425v1d5578f1xfcaa481f07c2328d@mail.gmail.com>
	<20080807212810.GL22846@linux.ucla.edu>
	<20080807213130.GM22846@linux.ucla.edu>
	<3a768c550808071433r78d67adaube1ff83cfc9ec253@mail.gmail.com>
Message-ID: <20080807213932.GN22846@linux.ucla.edu>

On Thu, Aug 07, 2008 at 02:33:35PM -0700, Juan Lang wrote:
> > I guess I should elaborate on that.  You can request any of the four
> > parts of the security descriptor and pass NULL for the SD itself and
> > Windows will return them without anyway to free the memory.
> 
> I can see what MSDN says it does, but your tests don't check that
> calling GetSecurityInfo with a non-null ppsidOwner, ppsidGroup etc.
> and a null ppSecurityDescriptor is allowed.  Because you're not
> checking it, it looks like a bug.

These results were determined through tests that I ran on Windows.  I
don't think I included them with the conformance tests because I didn't
think tests that leaked memory would be very good tests.  I will send
them in a separate patch since the implementation is still valid.


From wl at gnu.org  Thu Aug  7 17:13:40 2008
From: wl at gnu.org (Werner LEMBERG)
Date: Fri, 08 Aug 2008 00:13:40 +0200 (CEST)
Subject: Networking problems with IDU Verwaltung software
In-Reply-To: <200808071554.37394.kai.blin@gmail.com>
References: <20080807.103328.128311483.wl@gnu.org>
	<200808071554.37394.kai.blin@gmail.com>
Message-ID: <20080808.001340.87832791.wl@gnu.org>


> If your software really is trying to use winsock to access the database, try 
> running it with "WINEDEBUG=+winsock wine app.exe" to log the winsock calls 
> that are being made.

This gives

  trace:winsock:DllMain 0x7e6a0000 0x1 0x1
  trace:winsock:WSAStartup verReq=202
  trace:winsock:WSAStartup succeeded
  trace:winsock:DllMain 0x7e6a0000 0x2 (nil)
  fixme:actctx:parse_depend_manifests Could not find dependent assembly L"Microsoft.VC80.CRT"
  trace:winsock:DllMain 0x7e6a0000 0x3 (nil)
  trace:winsock:WSAStartup verReq=2
  trace:winsock:WSAStartup succeeded
  trace:winsock:DllMain 0x7e6a0000 0x2 (nil)
  trace:winsock:DllMain 0x7e6a0000 0x2 (nil)
  trace:winsock:DllMain 0x7e6a0000 0x0 0x1

Looks rather innocent to me.


     Werner


From wl at gnu.org  Thu Aug  7 17:29:32 2008
From: wl at gnu.org (Werner LEMBERG)
Date: Fri, 08 Aug 2008 00:29:32 +0200 (CEST)
Subject: Networking problems with IDU Verwaltung software
In-Reply-To: <901873.43732.qm@web23107.mail.ird.yahoo.com>
References: <20080807.103328.128311483.wl@gnu.org>
	<901873.43732.qm@web23107.mail.ird.yahoo.com>
Message-ID: <20080808.002932.169758856.wl@gnu.org>


> Hi Werner, fancy seeing you in a different list...

:-)

> I was wondering why you do warn+all (not very useful). I would be
> doing +relay or +odbc or one of the others.

Hrmpf.  Using WINEDEBUG=+relay gives me a 237MByte log file, using
WINEDEBUG=+warn:relay produces nothing (except the unrelated actctx
message).  Is there anything between these two extremes?

WINEDEBUG=+odcb gives the following:

  trace:odbc:DllMain Initializing or Finalizing proxy ODBC: 0x7e570000,1,0x1
  trace:odbc:DllMain Loading ODBC...
  trace:odbc:ODBC_LoadDriverManager 
  trace:odbc:SQLAllocEnv 
  trace:odbc:SQLAllocEnv Returns ret=0, Env=7c0c5fd8
  trace:odbc:ODBC_ReplicateODBCInstToRegistry Driver settings are not currently replicated to the registry
  trace:odbc:SQLDrivers 
  trace:odbc:SQLDataSources EnvironmentHandle = 0x7c0c5fd8
  trace:odbc:SQLDataSources returns: 100 	DataSource = ~?_|, Description = 
  trace:odbc:SQLDataSources EnvironmentHandle = 0x7c0c5fd8
  trace:odbc:SQLDataSources returns: 100 	DataSource = ~?_|, Description = 
  trace:odbc:SQLFreeEnv (Env=7c0c5fd8)
  trace:odbc:SQLFreeEnv Returns 0
  fixme:actctx:parse_depend_manifests Could not find dependent assembly L"Microsoft.VC80.CRT"
  trace:odbc:DllMain Initializing or Finalizing proxy ODBC: 0x7e570000,0,0x1
  trace:odbc:DllMain Unloading ODBC...


      Werner


From wl at gnu.org  Thu Aug  7 17:33:19 2008
From: wl at gnu.org (Werner LEMBERG)
Date: Fri, 08 Aug 2008 00:33:19 +0200 (CEST)
Subject: Networking problems with IDU Verwaltung software
In-Reply-To: <489B77CF.7050205@yahoo.co.uk>
References: <200808071554.37394.kai.blin@gmail.com>
	<20080808.001340.87832791.wl@gnu.org>
	<489B77CF.7050205@yahoo.co.uk>
Message-ID: <20080808.003319.208573175.wl@gnu.org>


> It is probably irrelevant, but something is looking for the visual C
> 8 runtime and not finding it. You can install VC80 runtime with
> winetricks.

Well, the program comes with a setup for VC80 files (which I
intentionally haven't installed to make Wine debugging easier due to
non-tainting -- at least I hope this; please correct me if I'm wrong).
However, the message doesn't disappear.


    Werner


From juan.lang at gmail.com  Thu Aug  7 17:43:06 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 7 Aug 2008 15:43:06 -0700
Subject: Networking problems with IDU Verwaltung software
In-Reply-To: <20080808.003319.208573175.wl@gnu.org>
References: <200808071554.37394.kai.blin@gmail.com>
	<20080808.001340.87832791.wl@gnu.org> <489B77CF.7050205@yahoo.co.uk>
	<20080808.003319.208573175.wl@gnu.org>
Message-ID: <3a768c550808071543r4e4f427ai2a1bdbe617823a41@mail.gmail.com>

This discussion really would be better taken up in bugzilla.
--Juan


From leslie_alistair at hotmail.com  Thu Aug  7 18:17:34 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Fri, 8 Aug 2008 09:17:34 +1000
Subject: [8/11] ole32 : basic inprocess handler implentation
Message-ID: <BAY117-W17421A8A65CB4B5935831293750@phx.gbl>

 
<f.dorin at free.fr> wrote in message news:146439758.2397291218116816278.JavaMail.root at spooler1-g27.priv.proxad.net...> Modify the stub implementation of GetDestCtx, to "emulate" a local machine instead of a remote machine. This trick  is needed to allow handle marshalling 




> + *pdwDestContext = MSHCTX_NOSHAREDMEM; //MSHCTX_DIFFERENTMACHINE;>
c++ style comments are discouraged.
 
Best Regards
 Alistair Leslie-Huges
_________________________________________________________________
Shout your Messenger buddies to the movies
http://www.livelife.ninemsn.com.au/compIntro.aspx?compId=4590 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080808/8eb2095d/attachment.htm 

From wine-devel at kievinfo.com  Thu Aug  7 22:01:01 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Thu, 07 Aug 2008 21:01:01 -0600
Subject: advapi32: Implement GetSecurityInfo. [take 3]
In-Reply-To: <3a768c550808071425v1d5578f1xfcaa481f07c2328d@mail.gmail.com>
References: <3a768c550808071425v1d5578f1xfcaa481f07c2328d@mail.gmail.com>
Message-ID: <489BB6ED.8080903@kievinfo.com>

Juan Lang wrote:
> Hi Dan,
> 
> +    if (ppSecurityDescriptor)
> +        *ppSecurityDescriptor = sd;
> +
> 
> you leak sd in the (implicit) else block here.
> --Juan
> 
> 
There are no other options here. I'm sure windows will leak it as well. Did 
anyone mentioned already how well win32api is designed?

You can't free it since other pointers refer to it. Unless of course all the 
pointers are NULL. Only then descriptor can be freed.

Vitaliy.


From hintak_leung at yahoo.co.uk  Thu Aug  7 17:31:43 2008
From: hintak_leung at yahoo.co.uk (Hin-Tak Leung)
Date: Thu, 07 Aug 2008 23:31:43 +0100
Subject: Networking problems with IDU Verwaltung software
In-Reply-To: <20080808.001340.87832791.wl@gnu.org>
References: <20080807.103328.128311483.wl@gnu.org>	<200808071554.37394.kai.blin@gmail.com>
	<20080808.001340.87832791.wl@gnu.org>
Message-ID: <489B77CF.7050205@yahoo.co.uk>

Werner LEMBERG wrote:
>> If your software really is trying to use winsock to access the database, try 
>> running it with "WINEDEBUG=+winsock wine app.exe" to log the winsock calls 
>> that are being made.
> 
> This gives
> 
>   trace:winsock:DllMain 0x7e6a0000 0x1 0x1
>   trace:winsock:WSAStartup verReq=202
>   trace:winsock:WSAStartup succeeded
>   trace:winsock:DllMain 0x7e6a0000 0x2 (nil)
>   fixme:actctx:parse_depend_manifests Could not find dependent assembly L"Microsoft.VC80.CRT"
>   trace:winsock:DllMain 0x7e6a0000 0x3 (nil)
>   trace:winsock:WSAStartup verReq=2
>   trace:winsock:WSAStartup succeeded
>   trace:winsock:DllMain 0x7e6a0000 0x2 (nil)
>   trace:winsock:DllMain 0x7e6a0000 0x2 (nil)
>   trace:winsock:DllMain 0x7e6a0000 0x0 0x1
> 
> Looks rather innocent to me.

It is probably irrelevant, but something is looking for the visual C 8 runtime
and not finding it. You can install VC80 runtime with winetricks.

Hin-Tak



From hongbo at njstar.com  Thu Aug  7 21:54:40 2008
From: hongbo at njstar.com (Hongbo Ni)
Date: Fri, 08 Aug 2008 12:54:40 +1000
Subject: [NJS#80583] Re: [TRY2]user32/tests: add tests for creating
	subclassed builtinclass windows
In-Reply-To: <EF00617886DB4A3DAC7EEDABC3B7FF8B@DMITRY>
References: <E1KQlaE-0003eH-8i@wine.codeweavers.com>
	<EF00617886DB4A3DAC7EEDABC3B7FF8B@DMITRY>
Message-ID: <mailman.89.1218177560.4613.wine-devel@winehq.org>

Dmitry Timoshkov wrote:

>>+        "Edit",
>>+        "Button",
>>+        "Static",
>>+        "ComboBox",
>>+        "ComboLBox",
>>+        "ListBox",
>>+        "#32770",  /* dialog */
>>+    };
>
>You forgot "ScrollBar" and some other builtin classes.

Ok all other builtin classes added for testing, but more todo_wine added without subclassing it.

>>+    hwnd = CreateWindowExA(0, classA, NULL, WS_OVERLAPPEDWINDOW, CW_USEDEFAULT, +                         CW_USEDEFAULT, 680, 260, NULL, NULL, NULL, 0);
>
>It would be helpful to actually test whether window has been created, and what
>type it has (ansi/unicode). Same is true for all similar cases.

All done and TRY3 submitted to wine-patch list.

Regards
Hongbo Ni



From wl at gnu.org  Fri Aug  8 02:38:50 2008
From: wl at gnu.org (Werner LEMBERG)
Date: Fri, 08 Aug 2008 09:38:50 +0200 (CEST)
Subject: Networking problems with IDU Verwaltung software
In-Reply-To: <3a768c550808071543r4e4f427ai2a1bdbe617823a41@mail.gmail.com>
References: <489B77CF.7050205@yahoo.co.uk>
	<20080808.003319.208573175.wl@gnu.org>
	<3a768c550808071543r4e4f427ai2a1bdbe617823a41@mail.gmail.com>
Message-ID: <20080808.093850.263779101.wl@gnu.org>


> This discussion really would be better taken up in bugzilla.

Fortunately, it isn't necessary.  Running an updated version of IDU, I
can continue, so maybe the version I tried first was buggy.


    Werner


From dmitry at codeweavers.com  Fri Aug  8 03:38:33 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Fri, 8 Aug 2008 17:38:33 +0900
Subject: [TRY3]user32/tests: add tests for creating
	subclassedbuiltin-class windows
References: <E1KRLdE-0005Nz-6k@wine.codeweavers.com>
Message-ID: <C2FFF8B1721A4B40827676625E0DBF5B@DMITRY>

"Hongbo Ni" <hongbo at njstar.com> wrote:

> Changes since TRY2 - thanks to Dmitry Timoshkov for advice.
> 
> 1. adds extra bulitin classes: ScrollBar,Message,DDEMLEvent & all #327xx;
> 2. make sure created hwnd is valid;
> 3. more tests for unicodeness of built-in-class window before subclassing;
> 4. add more todo_wine for those extra classes without subclassing.
> 
> Tested on Windows Vista SP1, XP SP3.

> +#include "windows.h"

Please avoid windows.h (include everything) inclusion, find an appropriate
set of smaller include files instead, winnls.h in this case.

The test looks good to me. it passes for me under XP SP3 (32 bit), and Vista SP1
x64 (native 64-bit and emulated 32-bit modes), although in order to pass in 64-bit
mode I had to apply the following patch

-#define IS_WNDPROC_HANDLE(x) (((ULONG_PTR)(x) >> 16) == (~((ULONG_PTR)0) >> 16))
+#define IS_WNDPROC_HANDLE(x) (((ULONG_PTR)(x) >> 16) == ((~(ULONG)0) >> 16))

but that's not your fault.

-- 
Dmitry.


From lats at yless4u.com.au  Fri Aug  8 06:38:21 2008
From: lats at yless4u.com.au (Jeff Latimer)
Date: Fri, 08 Aug 2008 21:38:21 +1000
Subject: user32: DdeClientTransaction should return 0 in the last
	paramforDDE_DATA
In-Reply-To: <8C3F913283194D09A45F82A45B1D3A35@DMITRY>
References: <48984458.1040208@yless4u.com.au><A5D3546B49AB40C8A68D34480CE61F19@DMITRY><489ADAE7.5020904@yless4u.com.au><1BFB9C596A534225B47A8154DF52C558@DMITRY>
	<489ADFB0.8000908@yless4u.com.au>
	<8C3F913283194D09A45F82A45B1D3A35@DMITRY>
Message-ID: <489C302D.3090309@yless4u.com.au>

Dmitry Timoshkov wrote:
>
> I don't see how changing Wine internal implementation could lead to
> failing tests under Windows.
My confusion.  Late at night.  Found the problem, the inside the if 
block. Resent the patch.

Jeff


From dmitry at codeweavers.com  Fri Aug  8 07:01:36 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Fri, 8 Aug 2008 21:01:36 +0900
Subject: user32: Add tests and fix for the edit control parent notification
References: <200808081441.51452.shpigor@etersoft.ru>
Message-ID: <7A52E005A507422CAA1E02BB4F97E040@DMITRY>

"Ilya Shpigor" <shpigor at etersoft.ru> wrote:

> - /* why do we notify to es->hwndParent, and we send this one to GetParent()? */
> -        hbrush = (HBRUSH)SendMessageW(GetParent(es->hwndSelf), msg, (WPARAM)hdc, (LPARAM)es->hwndSelf);
> +        /* We must send all notifies to es->hwndParent. 
> +         * If es->hwndParent don't response, we call 
> +         * DefWindowProcW of the current parent.
> +         */
> +
> +        hbrush = (HBRUSH)SendMessageW(es->hwndParent, msg, (WPARAM)hdc, (LPARAM)es->hwndSelf);
>          if (!hbrush)
>              hbrush = (HBRUSH)DefWindowProcW(GetParent(es->hwndSelf), msg, (WPARAM)hdc, (LPARAM)es->hwndSelf);
>          return hbrush;

If you have changed the target in the SendMessage call, shouldn't you do
the same for DefWindowProc?

> +    SendMessage( hwEdit, WM_PAINT, (WPARAM)GetDC( hwEdit ), 0 );
> +    syscolor = GetPixel( GetDC( hwEdit ), PIXEL_X, PIXEL_Y );
> +
> +    SetParent( hwEdit, hwParent2 );
> +    DestroyWindow( hwParent1 );
> +
> +    SendMessage( hwEdit, WM_PAINT, (WPARAM)GetDC( hwEdit ), 0 );
> +    editcolor = GetPixel( GetDC( hwEdit ), PIXEL_X, PIXEL_Y );
> +
> +    ok( editcolor == syscolor, "Child color is wrong, child = %04x\n", editcolor );
> +
> +    DestroyWindow( hwEdit );
> +    DestroyWindow( hwParent2 );
> +}

You are leaking a DC in the test. From your fix it looks like you need to
test the message sequences instead of the pixel color (which is not reliable).
Same applies to your other patch.

-- 
Dmitry.


From dank at kegel.com  Fri Aug  8 08:39:05 2008
From: dank at kegel.com (Dan Kegel)
Date: Fri, 8 Aug 2008 06:39:05 -0700
Subject: Patch checking robot coming
In-Reply-To: <a71bd89a0808041120x2d27de2bg96b7ba34cc320b73@mail.gmail.com>
References: <a71bd89a0808021724w3125ae57y900f09a56396d267@mail.gmail.com>
	<b050a5e70808021925g1e0b747uf0661c38350841ff@mail.gmail.com>
	<alpine.DEB.1.10.0808041024530.13588@amboise.dolphin>
	<489745B2.4060401@open-vote.org>
	<a71bd89a0808041120x2d27de2bg96b7ba34cc320b73@mail.gmail.com>
Message-ID: <a71bd89a0808080639n30f502b2pc9eecb90edad9a5b@mail.gmail.com>

I was distracted by my trip to Linuxworld (trip report:
http://lula.org/pipermail/lula_lula.org/2008-August/015218.html )
but am still slowly making progress on the patch
robot.  It now looks at all mime parts of a message,
and properly flags messages with multiple patches
attached as violating list policy (since we require one
message per patch).

Next step is probably to have it generate a status page
and start uploading results to a web site.


From htl10 at users.sourceforge.net  Fri Aug  8 09:29:22 2008
From: htl10 at users.sourceforge.net (Hin-Tak Leung)
Date: Fri, 8 Aug 2008 14:29:22 +0000 (GMT)
Subject: debugging applications Re: Networking problems with IDU Verwaltung
	software
In-Reply-To: <20080808.003319.208573175.wl@gnu.org>
Message-ID: <668868.37247.qm@web23106.mail.ird.yahoo.com>

--- On Thu, 7/8/08, Werner LEMBERG <wl at gnu.org> wrote:

> From: Werner LEMBERG <wl at gnu.org>
> Subject: Re: Networking problems with IDU Verwaltung software
> To: hintak_leung at yahoo.co.uk
> Cc: wine-devel at winehq.org
> Date: Thursday, 7 August, 2008, 11:33 PM
> > It is probably irrelevant, but something is looking for
> the visual C
> > 8 runtime and not finding it. You can install VC80
> runtime with
> > winetricks.
> 
> Well, the program comes with a setup for VC80 files (which
> I
> intentionally haven't installed to make Wine debugging
> easier due to
> non-tainting -- at least I hope this; please correct me if
> I'm wrong).
> However, the message doesn't disappear.

Glad to hear that you have sorted out the problem with a new version of the application. I think the general rule is that if wine doesn't provide some component (such as mfc and vc++ 80), using winetricks to install the additional components is preferred over installing application's bundled additional installers.

As for debugging problems with applications, the most useful and concise
advice I have read is actual this - I looked for it earlier but couldn't find it because the web page has a strange name :-):  
http://www.winehq.org/site/developer-cheatsheet

it explains +relay and +snoop quite well, which are the first two things one normally do, I think.


      __________________________________________________________
Not happy with your email address?.
Get the one you really want - millions of new email addresses available now at Yahoo! http://uk.docs.yahoo.com/ymail/new.html


From wl at gnu.org  Fri Aug  8 09:51:50 2008
From: wl at gnu.org (Werner LEMBERG)
Date: Fri, 08 Aug 2008 16:51:50 +0200 (CEST)
Subject: debugging applications Re: Networking problems with IDU
	Verwaltung software
In-Reply-To: <668868.37247.qm@web23106.mail.ird.yahoo.com>
References: <20080808.003319.208573175.wl@gnu.org>
	<668868.37247.qm@web23106.mail.ird.yahoo.com>
Message-ID: <20080808.165150.238609056.wl@gnu.org>


> Glad to hear that you have sorted out the problem with a new version
> of the application.  I think the general rule is that if wine
> doesn't provide some component (such as mfc and vc++ 80), using
> winetricks to install the additional components is preferred over
> installing application's bundled additional installers.

OK.  As mentioned before, I explicitly looked into Winetricks, and for
that particular VC++ runtime library version it does an ordinary
install and nothing else.

> As for debugging problems with applications, the most useful and
> concise advice I have read is actual this - I looked for it earlier
> but couldn't find it because the web page has a strange name :-):
> http://www.winehq.org/site/developer-cheatsheet

Aah.  Indeed, this helps.  A minor things: I can read

  Investigate the RelayInclude and RelayExclude string values in
  [HKCU\Software\Wine\Debug] if you're being overwhelmed by certain
  functions.  [...]

I suppose this is a registry entry, right?  (I normally don't use
Windows, so I'm not too acquainted with that.)  Perhaps one or two
sentences can be added to mention this, together with an explanation
which program should be used to change those settings.


    Werner


From xeros at irc.pl  Fri Aug  8 12:05:05 2008
From: xeros at irc.pl (Tomasz Czapiewski)
Date: Fri, 8 Aug 2008 19:05:05 +0200 (CEST)
Subject: Is Wine portable to ARM arch?
Message-ID: <Pine.LNX.4.64.0808081857250.14070@smetowo.telesat.com.pl>

I wonder if someone has done successfull port of Wine for 
mobile/PDA Linux distributions on hardware with ARM processors.
Is it possible?
If no then are there any plans for multiplatform code in Wine?
There are many Linux users of such hardware (like Neo FreeRunner etc.) 
which would like to use Windows applications on their portable 
ARM-based devices.

Kind Regards,
Tom


From jjmckenzie51 at earthlink.net  Fri Aug  8 12:39:03 2008
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Fri, 8 Aug 2008 10:39:03 -0700 (GMT-07:00)
Subject: Is Wine portable to ARM arch?
Message-ID: <1444329.1218217143464.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>

Tomasz Czapiewski <xeros at irc.pl> on Aug 8, 2008 10:05 AM (PNT) wrote about Is Wine portable to ARM arch?
>
>I wonder if someone has done successfull port of Wine for 
>mobile/PDA Linux distributions on hardware with ARM processors.
No.
>Is it possible?
Very likely but you run into the following:
1.  Windows programs are written for the x86 processor.  Is there an x86 emulator for the ARM arch?
2.  Windows programs are mostly written for a minimum of a 640 by 480 pixel display.  I know of very few devices that run at that, or higher, resolution.
3.  Are the ARM processors 'strong' enough to run both a x86 emulator AND Wine AND provide acceptable performance of many Windows programs.
>If no then are there any plans for multiplatform code in Wine?
NO!  Even MacOSX specific code is not allowed
>There are many Linux users of such hardware (like Neo FreeRunner etc.) 
>which would like to use Windows applications on their portable 
>ARM-based devices.
Don't know.  Most functions are provided by other systems.  I know that Windows CE (aka Portable Windows) does exist for some handheld devices.  The key is to get folks to write software for that platform.  My point three above shows why Wine is written, mostly, for x86 devices.  It would be nice to see Wine ported to other platforms.  Technically, this is possible, however would it provide satisfactory performance as well is key to user satisfaction.

James McKenzie



From theosib at gmail.com  Fri Aug  8 12:48:34 2008
From: theosib at gmail.com (Timothy Normand Miller)
Date: Fri, 8 Aug 2008 13:48:34 -0400
Subject: Is Wine portable to ARM arch?
In-Reply-To: <1444329.1218217143464.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
References: <1444329.1218217143464.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
Message-ID: <9871ee5f0808081048j1097590wc09d1cc1269c284e@mail.gmail.com>

On Fri, Aug 8, 2008 at 1:39 PM, James Mckenzie
<jjmckenzie51 at earthlink.net> wrote:

>>If no then are there any plans for multiplatform code in Wine?
> NO!  Even MacOSX specific code is not allowed

Is there an FAQ that explains why this is so?


-- 
Timothy Normand Miller
http://www.cse.ohio-state.edu/~millerti
Open Graphics Project


From galt280 at gmail.com  Fri Aug  8 12:55:44 2008
From: galt280 at gmail.com (Gal Topper)
Date: Fri, 8 Aug 2008 20:55:44 +0300
Subject: Is Wine portable to ARM arch?
In-Reply-To: <Pine.LNX.4.64.0808081857250.14070@smetowo.telesat.com.pl>
References: <Pine.LNX.4.64.0808081857250.14070@smetowo.telesat.com.pl>
Message-ID: <163937790808081055h2bdf92a3wdd9c0841b0ee5795@mail.gmail.com>

http://www.winehq.org/site/docs/wine-faq/index#WHAT-DO-I-NEED-IN-ORDER-TO-USE-WINE

Not an answer specific to ARM, but this section of the FAQ describes
the situation with respect to running Windows applications on non-x86
platforms using Wine.

-Gal

On Fri, Aug 8, 2008 at 8:05 PM, Tomasz Czapiewski <xeros at irc.pl> wrote:
> I wonder if someone has done successfull port of Wine for
> mobile/PDA Linux distributions on hardware with ARM processors.
> Is it possible?
> If no then are there any plans for multiplatform code in Wine?
> There are many Linux users of such hardware (like Neo FreeRunner etc.)
> which would like to use Windows applications on their portable
> ARM-based devices.
>
> Kind Regards,
> Tom
>
>
>


From thestig at google.com  Fri Aug  8 12:58:12 2008
From: thestig at google.com (Lei Zhang)
Date: Fri, 8 Aug 2008 10:58:12 -0700
Subject: Is Wine portable to ARM arch?
In-Reply-To: <1444329.1218217143464.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
References: <1444329.1218217143464.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
Message-ID: <558b2f5c0808081058q44482703geb04f11170c70666@mail.gmail.com>

On Fri, Aug 8, 2008 at 10:39 AM, James Mckenzie
<jjmckenzie51 at earthlink.net> wrote:
> NO!  Even MacOSX specific code is not allowed

grep -rI __APPLE__ wine-git/ | wc -l
returns 68.


From juan.lang at gmail.com  Fri Aug  8 12:58:22 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Fri, 8 Aug 2008 10:58:22 -0700
Subject: Is Wine portable to ARM arch?
In-Reply-To: <9871ee5f0808081048j1097590wc09d1cc1269c284e@mail.gmail.com>
References: <1444329.1218217143464.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
	<9871ee5f0808081048j1097590wc09d1cc1269c284e@mail.gmail.com>
Message-ID: <3a768c550808081058m61eabea8m5054a234d2473ed9@mail.gmail.com>

>>>If no then are there any plans for multiplatform code in Wine?
>> NO!  Even MacOSX specific code is not allowed
>
> Is there an FAQ that explains why this is so?

I don't think this statement is accurate.  The problem is
"multiplatform" is ambiguous.  If a "platform" is an operating system,
multiplatform code is certainly allowed in Wine, though portable code
is preferred to OS-specific code whenever possible.  If a "platform"
is a CPU, then with the exception of x86, assembly is not allowed, as
there are so few non-x86 Windows binaries that this is essentially
worthless.  Similarly, the goal of Wine is _not_ to emulate the x86
CPU, so such emulation code is likewise not allowed in Wine.
--Juan


From stefan at codeweavers.com  Fri Aug  8 13:05:24 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Fri, 8 Aug 2008 13:05:24 -0500
Subject: Is Wine portable to ARM arch?
In-Reply-To: <1444329.1218217143464.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
References: <1444329.1218217143464.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
Message-ID: <00a601c8f981$5503f800$ff0be800$@com>


> Very likely but you run into the following:
> 1.  Windows programs are written for the x86 processor.  Is there an
> x86 emulator for the ARM arch?
You could run wince / windows mobile apps which are often ARM native.

> >If no then are there any plans for multiplatform code in Wine?
> NO!  Even MacOSX specific code is not allowed
Actually we have quite a bit of that. dlls/winecoreaudio.drv, using a few
macos specific opengl extensions in wined3d, etc. The important thing is
that it is properly abstracted and not an #ifdef orgy.




From wine-devel at kievinfo.com  Fri Aug  8 13:15:37 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Fri, 08 Aug 2008 12:15:37 -0600
Subject: Is Wine portable to ARM arch?
In-Reply-To: <Pine.LNX.4.64.0808081857250.14070@smetowo.telesat.com.pl>
References: <Pine.LNX.4.64.0808081857250.14070@smetowo.telesat.com.pl>
Message-ID: <489C8D49.5020206@kievinfo.com>

Tomasz Czapiewski wrote:
> There are many Linux users of such hardware (like Neo FreeRunner etc.) 
> which would like to use Windows applications on their portable 
> ARM-based devices.
Wine does not emulate CPU. You will not be able to run native windows 
programs without recompiling them as winelib.

Vitaliy


From bunglehead at gmail.com  Fri Aug  8 13:18:38 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Fri, 08 Aug 2008 22:18:38 +0400
Subject: taskmgr [try 3]: Converted some functions and variables to Unicode
	[1/12]
In-Reply-To: <489BF975.8010000@mail.ru>
References: <489BF975.8010000@mail.ru>
Message-ID: <489C8DFE.7060408@gmail.com>

Vladimir Pankratov wrote:

> -                GetLastErrorText(strErrorText, 260);
> +                GetLastErrorText(wstrErrorText, sizeof(wstrErrorText)/sizeof(WCHAR));

The same as of try2. You changed argument type in patch 1/12 but 
function GetLastErrorText will change later in 12/12.
So patches in series aren't not independent now cause after applying 
first you'll get broken GetLastErrorText call till you
applied the last (12th). Changing call and a function should be placed 
in a single path.


From jjmckenzie51 at earthlink.net  Fri Aug  8 13:19:53 2008
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Fri, 8 Aug 2008 11:19:53 -0700 (GMT-07:00)
Subject: Is Wine portable to ARM arch?
Message-ID: <6338752.1218219593802.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>

Lei Zhang <thestig at google.com> on Aug 8, 2008 10:58 AM (PNT) wrote about Is Wine portable to ARM arch?
>
>On Fri, Aug 8, 2008 at 10:39 AM, James Mckenzie
><jjmckenzie51 at earthlink.net> wrote:
>> NO!  Even MacOSX specific code is not allowed
>
>grep -rI __APPLE__ wine-git/ | wc -l
>returns 68.

Correct, there is code that will only be used on when the system is an Apple (Mac).  However, Mac specific code, such as ObjC code is not allowed per Alexandre.

James McKenzie



From juan.lang at gmail.com  Fri Aug  8 13:24:57 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Fri, 8 Aug 2008 11:24:57 -0700
Subject: Is Wine portable to ARM arch?
In-Reply-To: <6338752.1218219593802.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
References: <6338752.1218219593802.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
Message-ID: <3a768c550808081124y752b72c1p7a26482778ac5d3a@mail.gmail.com>

> Correct, there is code that will only be used on when the system is an Apple (Mac).  However, Mac specific code, such as ObjC code is not allowed per Alexandre.

Huh?  This statement is nonsensical.  You mean objective C is not
allowed in Wine.  Neither is C++.  It happens that the only platform
on which there might be some reason to write objective C is the Mac,
but it's got nothing to do with the Mac, and it's also beside the
point of the original question.
--Juan


From theosib at gmail.com  Fri Aug  8 13:42:54 2008
From: theosib at gmail.com (Timothy Normand Miller)
Date: Fri, 8 Aug 2008 14:42:54 -0400
Subject: Is Wine portable to ARM arch?
In-Reply-To: <3a768c550808081124y752b72c1p7a26482778ac5d3a@mail.gmail.com>
References: <6338752.1218219593802.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
	<3a768c550808081124y752b72c1p7a26482778ac5d3a@mail.gmail.com>
Message-ID: <9871ee5f0808081142t430682boa9fdfc3fbd02835e@mail.gmail.com>

On Fri, Aug 8, 2008 at 2:24 PM, Juan Lang <juan.lang at gmail.com> wrote:
>> Correct, there is code that will only be used on when the system is an Apple (Mac).  However, Mac specific code, such as ObjC code is not allowed per Alexandre.
>
> Huh?  This statement is nonsensical.  You mean objective C is not
> allowed in Wine.  Neither is C++.  It happens that the only platform
> on which there might be some reason to write objective C is the Mac,
> but it's got nothing to do with the Mac, and it's also beside the
> point of the original question.
> --Juan

Actually, THIS is what I really wanted to read about in a FAQ.


-- 
Timothy Normand Miller
http://www.cse.ohio-state.edu/~millerti
Open Graphics Project


From juan.lang at gmail.com  Fri Aug  8 13:47:15 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Fri, 8 Aug 2008 11:47:15 -0700
Subject: Is Wine portable to ARM arch?
In-Reply-To: <9871ee5f0808081142t430682boa9fdfc3fbd02835e@mail.gmail.com>
References: <6338752.1218219593802.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
	<3a768c550808081124y752b72c1p7a26482778ac5d3a@mail.gmail.com>
	<9871ee5f0808081142t430682boa9fdfc3fbd02835e@mail.gmail.com>
Message-ID: <3a768c550808081147j1e54113eh6a8fae304ee8244e@mail.gmail.com>

> Actually, THIS is what I really wanted to read about in a FAQ.

Ah :)  Fortunately, the Developers' Faq is on the wiki, so feel free
to add to it:
http://wiki.winehq.org/DeveloperFaq
--Juan


From mah at jump-ing.de  Fri Aug  8 14:16:58 2008
From: mah at jump-ing.de (Markus Hitter)
Date: Fri, 8 Aug 2008 21:16:58 +0200
Subject: Is Wine portable to ARM arch?
In-Reply-To: <3a768c550808081124y752b72c1p7a26482778ac5d3a@mail.gmail.com>
References: <6338752.1218219593802.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
	<3a768c550808081124y752b72c1p7a26482778ac5d3a@mail.gmail.com>
Message-ID: <D6797E62-DCB1-4FF5-BD03-9FDE21B47653@jump-ing.de>


Am 08.08.2008 um 20:24 schrieb Juan Lang:

> It happens that the only platform
> on which there might be some reason to write objective C is the Mac

At the risk of getting even more off topic, Objective-C is one of  
gcc's dialects and works on Linux and *BSD just as fine as on Mac OS X.


MarKus

- - - - - - - - - - - - - - - - - - -
Dipl. Ing. Markus Hitter
http://www.jump-ing.de/






From xeros at irc.pl  Fri Aug  8 14:31:47 2008
From: xeros at irc.pl (Tomasz Czapiewski)
Date: Fri, 8 Aug 2008 21:31:47 +0200 (CEST)
Subject: Is Wine portable to ARM arch?
In-Reply-To: <1444329.1218217143464.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
References: <1444329.1218217143464.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
Message-ID: <Pine.LNX.4.64.0808082117490.14070@smetowo.telesat.com.pl>

On Fri, 8 Aug 2008, James Mckenzie wrote:

> Tomasz Czapiewski <xeros at irc.pl> on Aug 8, 2008 10:05 AM (PNT) wrote about Is Wine portable to ARM arch?
>>
>> I wonder if someone has done successfull port of Wine for
>> mobile/PDA Linux distributions on hardware with ARM processors.
> No.
>> Is it possible?
> Very likely but you run into the following:
> 1.  Windows programs are written for the x86 processor.  Is there an x86 emulator for the ARM arch?

That's the problem I thought about. So it would be needed something like 
qemu-i386 or sth. for userspace emulation.

> 2.  Windows programs are mostly written for a minimum of a 640 by 480 pixel display.  I know of very few devices that run at that, or higher, resolution.

I'm talking about devices with 480x640/640x480 (Neo 1973/FreeRunner) and 
bigger display (800x480... like Nokia N810 etc.).

> 3.  Are the ARM processors 'strong' enough to run both a x86 emulator AND Wine AND provide acceptable performance of many Windows programs.

My intention was not to run Windows games but simple programs (like 
Mikrotik WinBox etc.) and ARM processors clocked at 400-600MHz could be 
enough such basic emulation.

>> If no then are there any plans for multiplatform code in Wine?
> NO!  Even MacOSX specific code is not allowed
>> There are many Linux users of such hardware (like Neo FreeRunner etc.)
>> which would like to use Windows applications on their portable
>> ARM-based devices.
> Don't know.  Most functions are provided by other systems.  I know that Windows CE (aka Portable Windows) does exist for some handheld devices.  The key is to get folks to write software for that platform.  My point three above shows why Wine is written, mostly, for x86 devices.  It would be nice to see Wine ported to other platforms.  Technically, this is possible, however would it provide satisfactory performance as well is key to user satisfaction.
>
> James McKenzie
>

Thank you very much for comprehensive answers.

Tomasz Czapiewski


From juan.lang at gmail.com  Fri Aug  8 14:21:25 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Fri, 8 Aug 2008 12:21:25 -0700
Subject: Is Wine portable to ARM arch?
In-Reply-To: <D6797E62-DCB1-4FF5-BD03-9FDE21B47653@jump-ing.de>
References: <6338752.1218219593802.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
	<3a768c550808081124y752b72c1p7a26482778ac5d3a@mail.gmail.com>
	<D6797E62-DCB1-4FF5-BD03-9FDE21B47653@jump-ing.de>
Message-ID: <3a768c550808081221v1db512cdoc858186af250d92d@mail.gmail.com>

> At the risk of getting even more off topic, Objective-C is one of gcc's
> dialects and works on Linux and *BSD just as fine as on Mac OS X.

Yes, I know, and so is C++.  Nevertheless, neither is allowed in
Wine's source.  I can argue rationale if you like, e.g. we don't want
to restrict ourselves to gcc, but my opinion doesn't mean much, as
it's Alexandre's decision.
--Juan


From hverbeet at gmail.com  Fri Aug  8 14:43:59 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Fri, 8 Aug 2008 21:43:59 +0200
Subject: Is Wine portable to ARM arch?
In-Reply-To: <00a601c8f981$5503f800$ff0be800$@com>
References: <1444329.1218217143464.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
	<00a601c8f981$5503f800$ff0be800$@com>
Message-ID: <d658b69e0808081243y22d4c606s855d3244f519cf40@mail.gmail.com>

2008/8/8 Stefan D?singer <stefan at codeweavers.com>:
>
>> Very likely but you run into the following:
>> 1.  Windows programs are written for the x86 processor.  Is there an
>> x86 emulator for the ARM arch?
> You could run wince / windows mobile apps which are often ARM native.
>
Unfortunately WinCE isn't completely compatible with win32, so I doubt
that'll work without quite a bit of extra effort.

2008/8/8 Juan Lang <juan.lang at gmail.com>:
>> At the risk of getting even more off topic, Objective-C is one of gcc's
>> dialects and works on Linux and *BSD just as fine as on Mac OS X.
>
> Yes, I know, and so is C++.  Nevertheless, neither is allowed in
And so is Fortran, for that matter :-)


From bunglehead at gmail.com  Sat Aug  9 03:49:55 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sat, 09 Aug 2008 12:49:55 +0400
Subject: taskmgr [try 4]: Converted some functions and variables to Unicode
	[1/7]
In-Reply-To: <489D50FB.8060004@mail.ru>
References: <489D50FB.8060004@mail.ru>
Message-ID: <489D5A33.7070208@gmail.com>

Vladimir Pankratov wrote:

>  static void TaskManager_OnMenuSelect(HWND hWnd, UINT nItemID, UINT nFlags, HMENU hSysMenu)
>  {
> -    TCHAR str[100];
> +    WCHAR wstr[256];
> +    WCHAR wszEmptyStr[] = {' ',0};
>  
> -    _tcscpy(str, TEXT(""));
> -    if (LoadString(hInst, nItemID, str, 100)) {
> -        /* load appropriate string */
> -        LPTSTR lpsz = str;
> -        /* first newline terminates actual string */
> -        lpsz = _tcschr(lpsz, '\n');
> -        if (lpsz != NULL)
> -            *lpsz = '\0';
> -    }
> -    SendMessage(hStatusWnd, SB_SETTEXT, 0, (LPARAM)str);
> +    strcpyW(wstr, wszEmptyStr);
> +    LoadStringW(hInst, nItemID, wstr, sizeof(wstr)/sizeof(WCHAR));
> +    SendMessageW(hStatusWnd, SB_SETTEXTW, 0, (LPARAM)wstr);
>  }
>  
>  static void TaskManager_OnViewUpdateSpeedHigh(void)
You really need a single space string passed as message parameter?
If not  - WCHAR wszEmptyStr[] = {0} - should be enough. And maybe it's 
better to initialize wstr to empty instead of using another variable.


From martin.profittlich at gmx.de  Sat Aug  9 04:01:51 2008
From: martin.profittlich at gmx.de (Martin Profittlich)
Date: Sat, 09 Aug 2008 11:01:51 +0200
Subject: Make RegisterDeviceNotificationW behave
	likeRegisterDeviceNotificationA 
Message-ID: <20080809090151.275070@gmx.net>

Dmitry Timoshkov wrote:

>"Zachary Goldberg" <zgold550 at gmail.com> wrote:
>
>> Your patch is more likely to be accepted if it comes with a test which
>> works on windows, didnt pass in wine before but passes now and
>> demonstrates why the new behavior is correct.
> 
> There is no need for a test since that's not really an implementation
> but just a better stub which follows existing code.

So is there anything I should do now? Or just wait to see what happens?

As for writing a test, I don't think that's possible. The affected apps don't crash inside that function but shortly afterwards. It's just that the crash is affected by the result of RegisterDeviceNotificationW.

Wouldn't it also be more consistent, if *A and *W did the same thing?

Martin


-- 
GMX Kostenlose Spiele: Einfach online spielen und Spa? haben mit Pastry Passion!
http://games.entertainment.gmx.net/de/entertainment/games/free/puzzle/6169196


From wine.dev at web.de  Sat Aug  9 06:57:31 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Sat, 09 Aug 2008 13:57:31 +0200
Subject: [1/11] ole32 : basic inprocess handler implentation
In-Reply-To: <1686757677.2397021218116742177.JavaMail.root@spooler1-g27.priv.proxad.net>
References: <1686757677.2397021218116742177.JavaMail.root@spooler1-g27.priv.proxad.net>
Message-ID: <1218283051.5665.47.camel@p4.lan>

On Do, 2008-08-07 at 15:45 +0200, f.dorin at free.fr wrote:
> This patch modifies the Makefile.in file to include some new file to be compile

- You must use your real name

- Wine must compile after every Patch.
  You need to add the changes for Makefile.in, when you add a file

- Why do you need to use sed for winuser.h?
  When the input for widl is correct and the output of widl is wrong,
  then widl must be fixed instead.

- You forgot the License-Header in the new files. Wine is LGPL.
  -- quote --
  2.1 of the License, or (at your option) any later version.
  -- quote --

- The subject is not very precise. You should use the description,
  that is already in your Mail. Example for [4/11]:
  "Main core file for inprocess handler implementation"

- Some Patches are large, please try to split it.

- Some lines in your Patches are very long, please try to split them.

- Do not use C++ style comments

- Wine is using 4 Space for indention.
  The only exception is to stay with the indention of File,
  when you touch that File

- No Idea, if the change in 8/11 is acceptable, but you should a comment
  in the code, when you make such a change.

- A Hack, to workaround a bug in widl will not be accepted.
  Widl must be fixed instead.

- Unrelated to the fact, that the Hack in 10/11 will not be accepted,
  you must make sure, not add spaces at the end of a Line.

- When you change the imlementation, that fix a test, then both changes
  must be in the same Patch


Thanks for helping Wine


-- 
 
By by ... Detlef




From juan.lang at gmail.com  Sat Aug  9 07:38:31 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sat, 9 Aug 2008 05:38:31 -0700
Subject: Make RegisterDeviceNotificationW behave
	likeRegisterDeviceNotificationA
In-Reply-To: <20080809090151.275070@gmx.net>
References: <20080809090151.275070@gmx.net>
Message-ID: <3a768c550808090538t62aed1fep2b6321647a801b4f@mail.gmail.com>

> So is there anything I should do now? Or just wait to see what happens?

Wait, as Alexandre's on vacation until the 18th.  He'll probably
commit this after he gets back, but if you notice a bunch of things
getting committed and yours did not and did not get any feedback from
him, you can ask again.
--Juan


From wine.dev at web.de  Sat Aug  9 08:04:09 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Sat, 09 Aug 2008 15:04:09 +0200
Subject: debugging applications Re: Networking problems with IDU
	Verwaltung software
In-Reply-To: <20080808.165150.238609056.wl@gnu.org>
References: <20080808.003319.208573175.wl@gnu.org>
	<668868.37247.qm@web23106.mail.ird.yahoo.com>
	<20080808.165150.238609056.wl@gnu.org>
Message-ID: <1218287050.5665.57.camel@p4.lan>

On Fr, 2008-08-08 at 16:51 +0200, Werner LEMBERG wrote:
> 
>   Investigate the RelayInclude and RelayExclude string values in
>   [HKCU\Software\Wine\Debug] if you're being overwhelmed by certain
>   functions.  [...]
> 
> I suppose this is a registry entry, right? 

Yes. HKCU (or HCU) is: HKEY_CURRENT_USER

> Perhaps one or two sentences can be added to mention this, 
> together with an explanation
> which program should be used to change those settings.

You change the registry with: regedit
(wine provide an own implementation)

Patches are welcome.
The source of the website is managed with git:
http://source.winehq.org/git/website.git
(templates/en/*)

Thanks for helping Wine


-- 
 
By by ... Detlef




From wine.dev at web.de  Sat Aug  9 08:18:17 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Sat, 09 Aug 2008 15:18:17 +0200
Subject: DIB engine status
In-Reply-To: <20080801115648.GB24893@merlot.physics.ox.ac.uk>
References: <20080801115648.GB24893@merlot.physics.ox.ac.uk>
Message-ID: <1218287897.5665.71.camel@p4.lan>

On Fr, 2008-08-01 at 12:56 +0100, Huw Davies wrote:
> Hi folks,
> 
> Here's an update on the DIB engine that I've been working on for the
> last few months.  This work has been made possible by the generosity
> of Google - so thanks go to them and of course to Dan.
> 
> You can find the code at http://repo.or.cz/w/wine/dibeng-hd.git

Thanks for picking up the dib-engine issue.

> What needs to be done
> =====================
> - Lots more...

The first thing, i like to see is a Design in the correct way:
Inside gdi32 while using Eng* and friends.
(Needed by Printer drivers, and any Display driver including mirror /
remote display drivers)

IMHO, every other attemp to implement a DIB-Engine is a waste of time.

Marcel did some work last Year during SoC with the correct API
(Eng* and friends) but also in the wrong location (he used wineddi.drv)


-- 
 
By by ... Detlef




From jjmckenzie51 at earthlink.net  Sat Aug  9 19:05:40 2008
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Sat, 9 Aug 2008 17:05:40 -0700 (GMT-07:00)
Subject: Question:  Why are EM_FORMATRANGE Tests 'To Do'
Message-ID: <23614063.1218326740541.JavaMail.root@elwamui-polski.atl.sa.earthlink.net>

Title states it all.  I would like to compile tests to run against WindowsXP to see if the test will function.  Could I un'to-do' this test and compile it with MinGW?

Thank you.

James McKenzie



From juan.lang at gmail.com  Sat Aug  9 20:41:19 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sat, 9 Aug 2008 18:41:19 -0700
Subject: Question: Why are EM_FORMATRANGE Tests 'To Do'
In-Reply-To: <23614063.1218326740541.JavaMail.root@elwamui-polski.atl.sa.earthlink.net>
References: <23614063.1218326740541.JavaMail.root@elwamui-polski.atl.sa.earthlink.net>
Message-ID: <3a768c550808091841u5010db95uf2654a4de8b3275@mail.gmail.com>

Hi James,

> Title states it all.  I would like to compile tests to run against WindowsXP to see if the test will function.  Could I un'to-do' this test and compile it with MinGW?

todo_wine tests are always run, whether or not the todo_wine flag is
there.  The only difference is how the results are interpreted:  if
running on Wine (which the standalone tests assume they are not), the
test is assumed to fail, and an error reported if the test does not
fail as expected on Wine.  If not running on Wine, they run as normal.
--Juan


From jjmckenzie51 at earthlink.net  Sat Aug  9 22:15:35 2008
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Sat, 9 Aug 2008 20:15:35 -0700 (GMT-07:00)
Subject: Question: Why are EM_FORMATRANGE Tests 'To Do'
Message-ID: <9925939.1218338135804.JavaMail.root@mswamui-backed.atl.sa.earthlink.net>

Juan Lang <juan.lang at gmail.com> on Aug 9, 2008 6:41 PM wrote about Question: Why are EM_FORMATRANGE Tests 'To Do' in reply to James McKenzie's question on this subject.
>
>Hi James,
>
>> Title states it all.  I would like to compile tests to run against WindowsXP to see if the test will function.  Could I un'to-do' this test and compile it with MinGW?
>
>todo_wine tests are always run, whether or not the todo_wine flag is
>there.  The only difference is how the results are interpreted:  if
>running on Wine (which the standalone tests assume they are not), the
>test is assumed to fail, and an error reported if the test does not
>fail as expected on Wine.  If not running on Wine, they run as normal.

Thank you for the clarification.  Thus, I can run the pre-built executable on WindowsXP and there should be no richedit errors, correct?

James McKenzie




From dmitry at codeweavers.com  Sat Aug  9 22:21:11 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 10 Aug 2008 12:21:11 +0900
Subject: rpcrt4: [1/2] Improve stub for I_RpcBindingInqTransportType,
	with test
References: <1218316914.8457.1.camel@p4.lan>
Message-ID: <0709A9F5FBEF47FA8C7C537C407F195D@DMITRY>

Detlef Riekenberg <wine.dev at web.de> wrote:

> @@ -848,6 +848,10 @@ RPC_STATUS WINAPI I_RpcBindingInqTransportType( RPC_BINDING_HANDLE Binding, unsi
>  {
>  
>    FIXME( "(%p,%p): stub\n", Binding, Type);
> +
> +  /* NT: RPC_S_NO_CONTEXT_AVAILABLE, 9x: RPC_S_NO_CALL_ACTIVE */
> +  if (!Binding) return RPC_S_NO_CONTEXT_AVAILABLE;

According to your test this should be

if (!Binding || !Type) return RPC_S_NO_CONTEXT_AVAILABLE;

Also the comment doesn't belong here, it's ok to have in the test though.

-- 
Dmitry.


From juan.lang at gmail.com  Sat Aug  9 22:27:24 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sat, 9 Aug 2008 20:27:24 -0700
Subject: Question: Why are EM_FORMATRANGE Tests 'To Do'
In-Reply-To: <9925939.1218338135804.JavaMail.root@mswamui-backed.atl.sa.earthlink.net>
References: <9925939.1218338135804.JavaMail.root@mswamui-backed.atl.sa.earthlink.net>
Message-ID: <3a768c550808092027l715bc2d9ie6dac23d83c9d3c0@mail.gmail.com>

> Thank you for the clarification.  Thus, I can run the pre-built executable on WindowsXP and there should be no richedit errors, correct?

That's the theory :)  The test don't run without error on my XP system, so YMMV.
--Juan


From jjmckenzie51 at earthlink.net  Sat Aug  9 22:41:21 2008
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Sat, 9 Aug 2008 20:41:21 -0700 (GMT-07:00)
Subject: Question: Why are EM_FORMATRANGE Tests 'To Do'
Message-ID: <5392615.1218339681415.JavaMail.root@mswamui-backed.atl.sa.earthlink.net>

Juan Lang <juan.lang at gmail.com> on Aug 9, 2008 8:27 PM (PNT) wrote additionally in reply to Question: Why are EM_FORMATRANGE Tests 'To Do'
>
>> Thank you for the clarification.  Thus, I can run the pre-built executable on WindowsXP and there should be no richedit errors, correct?
>
>That's the theory :)  The test don't run without error on my XP system, so YMMV.

Then I should end up with errors on my WindowsXP system that match yours.  I don't have time tonight to do so, but my find time tomorrow to run them.

James McKenzie




From juan.lang at gmail.com  Sat Aug  9 22:50:08 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sat, 9 Aug 2008 20:50:08 -0700
Subject: Question: Why are EM_FORMATRANGE Tests 'To Do'
In-Reply-To: <5392615.1218339681415.JavaMail.root@mswamui-backed.atl.sa.earthlink.net>
References: <5392615.1218339681415.JavaMail.root@mswamui-backed.atl.sa.earthlink.net>
Message-ID: <3a768c550808092050j5d3a3effkd1cd3f63e9aee786@mail.gmail.com>

> Then I should end up with errors on my WindowsXP system that match yours.  I don't have time tonight to do so, but my find time tomorrow to run them.

Oops, I realized I should have been more clear.  I mean the tests in
general fail on my XP system.  I just ran the riched20 tests, though,
so you can compare:

editor.c:367: Test failed: 120 != 121
editor.c:1272:EM_STREAMOUT produced:
{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0
System;}}
\viewkind4\uc1\pard\b\f0\fs19 TestSomeText\par
}

editor.c:1528:EM_STREAMOUT produced:
{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0
System;}}
\viewkind4\uc1\pard\b\f0\fs19 TestSomeText\par
}

editor.c:2813:EM_SETTEXTEX is supported on this platform
editor.c:2088:Testing EM_REPLACESEL behavior with redraw=1
editor.c:2088:Testing EM_REPLACESEL behavior with redraw=0
editor: 825 tests executed (0 marked as todo, 1 failure), 0 skipped.

--Juan


From dank at kegel.com  Sat Aug  9 23:01:26 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 9 Aug 2008 21:01:26 -0700
Subject: Patchwatcher online
Message-ID: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>

For the moment, the results only go to a web page,
  http://kegel.com/wine/patchwatcher/results/
Most of the results there right now are just test messages
so you can see how it will look when real patches
with various problems are received.

The scripts are a bit ugly, so expect problems to linger
for the next week or so while I work out the kinks.


From dank at kegel.com  Sat Aug  9 23:22:40 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 9 Aug 2008 21:22:40 -0700
Subject: Patchwatcher online
In-Reply-To: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
Message-ID: <a71bd89a0808092122t99d7726j31305bca66736920@mail.gmail.com>

On Sat, Aug 9, 2008 at 9:01 PM, Dan Kegel <dank at kegel.com> wrote:
> For the moment, the results only go to a web page,
>  http://kegel.com/wine/patchwatcher/results/
> Most of the results there right now are just test messages
> so you can see how it will look when real patches
> with various problems are received.
>
> The scripts are a bit ugly, so expect problems to linger
> for the next week or so while I work out the kinks.

I just noticed Ambroz actually came through with the chroot:
http://article.gmane.org/gmane.comp.emulators.wine.devel/62314

I had already moved to using a separate userid, and
switched to a very low-privilege way of uploading results,
so my security story is probably ok for a little while,
but I'll try to integrate the chroot one of these days soon for
even more protection.


From kai.blin at gmail.com  Sun Aug 10 02:16:32 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Sun, 10 Aug 2008 09:16:32 +0200
Subject: [PATCH] AcceptEx Impelementation
In-Reply-To: <81fd805b0808040029m56821adepe4c7c98cc81c8ecc@mail.gmail.com>
References: <81fd805b0808040029m56821adepe4c7c98cc81c8ecc@mail.gmail.com>
Message-ID: <200808100916.36894.kai.blin@gmail.com>

Hi Scott,

I didn't see a reply to your AcceptEx patches yet, sorry if I missed it and 
you get this again. Please submit one patch per email only. 

I admittedly don't know much about the wineserver stuff, but I've noticed a 
couple of style issues in the winsock code:

The indentation common in socket.c is either a two-space indent or a 
four-space indent. Please don't add new code with an eight-space indent.

Also, the common convention for ifs is
if (cond)
{
and not
if(cond){

Apart from those minor nitpicks, the code looks good.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080810/590c7ac7/attachment.pgp 

From robertshearman at gmail.com  Sun Aug 10 03:52:42 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Sun, 10 Aug 2008 09:52:42 +0100
Subject: rpcrt4: Dynamically load iphlpapi
In-Reply-To: <3a768c550808041750gb516ec4ye51f71cda082ae31@mail.gmail.com>
References: <3a768c550808041750gb516ec4ye51f71cda082ae31@mail.gmail.com>
Message-ID: <1096648c0808100152h6dfa16a1g4490aee8800570b4@mail.gmail.com>

2008/8/5 Juan Lang <juan.lang at gmail.com>:
> This has a similar motivation to the last patch I sent.  In rpcrt4's
> case, iphlpapi is needed at most once per process, so dynamically load
> it rather than keeping it around all the time.

> @@ -304,18 +304,23 @@ #define ADDRESS_BYTES_NEEDED 6
>
>  static RPC_STATUS RPC_UuidGetNodeAddress(BYTE *address)
>  {
> +    static const WCHAR iphlpapi[] = { 'i','p','h','l','p','a','p','i',0 };
>      int i;
>      DWORD status = RPC_S_OK;
>
>      ULONG buflen = sizeof(IP_ADAPTER_INFO);
>      PIP_ADAPTER_INFO adapter = HeapAlloc(GetProcessHeap(), 0, buflen);
> +    HMODULE lib = LoadLibraryW(iphlpapi);
> +    DWORD (WINAPI *pGetAdaptersInfo)(PIP_ADAPTER_INFO, PULONG) = NULL;

Hi Juan,

Why manually load iphlpapi here instead of using the automatic delayed
import mechanism like you used for ws2_32? I assume it was because you
reasoned that a hard dependency was unnecessary because the code has a
fallback path, but I think you needed to make this clear in the
changelog.

-- 
Rob Shearman


From dank at kegel.com  Sun Aug 10 11:34:02 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 10 Aug 2008 09:34:02 -0700
Subject: dplayx tests hanging
Message-ID: <a71bd89a0808100934w7aa8932cl24252edbf9fcf235@mail.gmail.com>

Hi Ismael,
have a look at
http://test.winehq.org/data/tests/dplayx:dplayx.html
Since your commits on the 4th of Aug, the dplayx tests have been hanging.
This is getting in the way of my regression testing.
Can you have a look?
Thanks,
Dan


From razielmine at gmail.com  Sun Aug 10 12:19:14 2008
From: razielmine at gmail.com (Ismael Barros)
Date: Sun, 10 Aug 2008 19:19:14 +0200
Subject: dplayx tests hanging
In-Reply-To: <a71bd89a0808100934w7aa8932cl24252edbf9fcf235@mail.gmail.com>
References: <a71bd89a0808100934w7aa8932cl24252edbf9fcf235@mail.gmail.com>
Message-ID: <82e274890808101019p6cf1ad8cnadcef7c2527470bf@mail.gmail.com>

On 8/10/08, Dan Kegel <dank at kegel.com> wrote:
> Hi Ismael,
> have a look at
> http://test.winehq.org/data/tests/dplayx:dplayx.html
> Since your commits on the 4th of Aug, the dplayx tests have been hanging.
> This is getting in the way of my regression testing.
> Can you have a look?
> Thanks,
> Dan
>

Are they really hanging or taking too long? Dplay is quite slow and
the tests are intensive so they take a lot of time. They take 7
minutes in my XP and some seconds in wine.

Anyway I'll try to see if there's any way of speeding them up, I'm
sorry for the hassle.
Maybe the best solution is to remove dplay tests until I've finished
implementing the library, as right now they are useful only for me,
and a problem for the rest.

Cheers
Ismael

-- 
...yet even then, we ran like the wind, whilst our laughter echoed,
under cerulean skies...


From dank at kegel.com  Sun Aug 10 12:25:40 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 10 Aug 2008 10:25:40 -0700
Subject: dplayx tests hanging
In-Reply-To: <82e274890808101019p6cf1ad8cnadcef7c2527470bf@mail.gmail.com>
References: <a71bd89a0808100934w7aa8932cl24252edbf9fcf235@mail.gmail.com>
	<82e274890808101019p6cf1ad8cnadcef7c2527470bf@mail.gmail.com>
Message-ID: <a71bd89a0808101025qe2596c7u4c03c7bce669bdf9@mail.gmail.com>

On Sun, Aug 10, 2008 at 10:19 AM, Ismael Barros <razielmine at gmail.com> wrote:
>> http://test.winehq.org/data/tests/dplayx:dplayx.html
>> Since your commits on the 4th of Aug, the dplayx tests have been hanging.
>
> Are they really hanging or taking too long? Dplay is quite slow and
> the tests are intensive so they take a lot of time. They take 7
> minutes in my XP and some seconds in wine.

7 minutes is unreasonable.   winetest has a timeout of 120 seconds.
You'd better shoot for having them run in under 60 seconds on XP.

In my case, they really were hanging, I waited 20 minutes on Wine.

> Anyway I'll try to see if there's any way of speeding them up, I'm
> sorry for the hassle.
> Maybe the best solution is to remove dplay tests until I've finished
> implementing the library, as right now they are useful only for me,
> and a problem for the rest.

That could well be.
- Dan


From robertshearman at gmail.com  Sun Aug 10 12:36:48 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Sun, 10 Aug 2008 18:36:48 +0100
Subject: [1/11] ole32 : basic inprocess handler implentation
In-Reply-To: <1686757677.2397021218116742177.JavaMail.root@spooler1-g27.priv.proxad.net>
References: <278136349.2392451218113849204.JavaMail.root@spooler1-g27.priv.proxad.net>
	<1686757677.2397021218116742177.JavaMail.root@spooler1-g27.priv.proxad.net>
Message-ID: <1096648c0808101036i30640ebbudb375237114fb15d@mail.gmail.com>

Hi Fran?ois,

I appreciate the work you've put into this and the other patches.
However, I have a few comments:

2008/8/7  <f.dorin at free.fr>:
> @@ -78,4 +83,11 @@ ole2nls.spec.o: ole2nls.spec version16.res
>  version16.res: version16.rc
>  	$(LDPATH) $(RC16) $(RC16FLAGS) -fo$@ $(SRCDIR)/version16.rc
>
> +objidl_p.c: ../../include/objidl.idl
> +	$(WIDL) -p ../../include/objidl.idl
> +
> +oleidl_p.c: ../../include/oleidl.idl
> +	$(WIDL) -p ../../include/oleidl.idl
> +	sed -i '14i#include "winuser.h"' oleidl_p.c
> +

Custom make rules, such as these, are discouraged as they are a pain
to maintain because they need to be changed all over the source tree
instead of just in Make.rules.in. In this case they should be
unnecessary as you can simply create IDL files in the ole32 directory
(c.f. dlls/oleaut32/oleaut32_oaidl.idl) that include each of these
(and in the second case, add the necessary include file).

Also, it's a moot point but I don't think "sed -i" is portable.

-- 
Rob Shearman

From razielmine at gmail.com  Sun Aug 10 12:41:38 2008
From: razielmine at gmail.com (Ismael Barros)
Date: Sun, 10 Aug 2008 19:41:38 +0200
Subject: dplayx tests hanging
In-Reply-To: <a71bd89a0808101025qe2596c7u4c03c7bce669bdf9@mail.gmail.com>
References: <a71bd89a0808100934w7aa8932cl24252edbf9fcf235@mail.gmail.com>
	<82e274890808101019p6cf1ad8cnadcef7c2527470bf@mail.gmail.com>
	<a71bd89a0808101025qe2596c7u4c03c7bce669bdf9@mail.gmail.com>
Message-ID: <82e274890808101041u1ed78be0tb621ab420dbd7d34@mail.gmail.com>

On 8/10/08, Dan Kegel <dank at kege.com> wrote:
> In my case, they really were hanging, I waited 20 minutes on Wine.

That's really weird, in wine most of the tests are skipped, and they
take around 5 seconds on my machine with the latest git head. Could
you provide a log with WINEDEBUG=+dplay?


From robertshearman at gmail.com  Sun Aug 10 12:57:12 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Sun, 10 Aug 2008 18:57:12 +0100
Subject: [6/11] ole32 : basic inprocess handler implentation
In-Reply-To: <791372482.2397211218116796205.JavaMail.root@spooler1-g27.priv.proxad.net>
References: <1870727895.2394051218114849362.JavaMail.root@spooler1-g27.priv.proxad.net>
	<791372482.2397211218116796205.JavaMail.root@spooler1-g27.priv.proxad.net>
Message-ID: <1096648c0808101057j41c1e99cjc94977c81099a45d@mail.gmail.com>

2008/8/7  <f.dorin at free.fr>:
> diff --git a/dlls/ole32/proxystub_obj.c b/dlls/ole32/proxystub_obj.c
> new file mode 100644
> index 0000000..c229ad2
> --- /dev/null
> +++ b/dlls/ole32/proxystub_obj.c
> ...
> +HRESULT __RPC_STUB IStorage_OpenStream_Stub(
> +    IStorage* This,
> +    LPCOLESTR pwcsName,
> +    unsigned long cbReserved1,
> +    byte *reserved1,
> +    DWORD grfMode,
> +    DWORD reserved2,
> +    IStream **ppstm)
> +{
> +  TRACE("(%p)->(%s, %d, %p, %x,  %x, %p)\n", This, debugstr_w(pwcsName), (int)cbReserved1, reserved1, grfMode, reserved2, ppstm);
> +  return IStorage_OpenStream(This, pwcsName, reserved1, grfMode, reserved2, ppstm);
> +}

These should go into usrmarshal.c. However, Dan Hipschman as already
done some work in this area so you might want to search for his
patches on generating proxy/stub code for oleidl.idl and objidl.idl so
that you don't do any more work than you have to.

-- 
Rob Shearman


From dsh at linux.ucla.edu  Sun Aug 10 14:11:46 2008
From: dsh at linux.ucla.edu (Dan Hipschman)
Date: Sun, 10 Aug 2008 12:11:46 -0700
Subject: [6/11] ole32 : basic inprocess handler implentation
In-Reply-To: <1096648c0808101057j41c1e99cjc94977c81099a45d@mail.gmail.com>
References: <1870727895.2394051218114849362.JavaMail.root@spooler1-g27.priv.proxad.net>
	<791372482.2397211218116796205.JavaMail.root@spooler1-g27.priv.proxad.net>
	<1096648c0808101057j41c1e99cjc94977c81099a45d@mail.gmail.com>
Message-ID: <20080810191146.GQ22846@linux.ucla.edu>

On Sun, Aug 10, 2008 at 06:57:12PM +0100, Rob Shearman wrote:
> These should go into usrmarshal.c. However, Dan Hipschman as already
> done some work in this area so you might want to search for his
> patches on generating proxy/stub code for oleidl.idl and objidl.idl so
> that you don't do any more work than you have to.

Check wine-patches/devel for Oct/Nov, 2007.  I never got the exception
handling stuff past Alexandre, but he recently committed his own version
for try/except.  I don't remember if we need try/finally as well, which
was always the harder part, but it's certainly possibly widl could
handle generating some more proxy code for Wine DLLs now.

Thanks for the patches,
Dan


From dank at kegel.com  Sun Aug 10 14:28:14 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 10 Aug 2008 12:28:14 -0700
Subject: dplayx tests hanging
In-Reply-To: <82e274890808101142t61036e9dya1c2dd0d7c16155@mail.gmail.com>
References: <a71bd89a0808100934w7aa8932cl24252edbf9fcf235@mail.gmail.com>
	<82e274890808101019p6cf1ad8cnadcef7c2527470bf@mail.gmail.com>
	<a71bd89a0808101025qe2596c7u4c03c7bce669bdf9@mail.gmail.com>
	<82e274890808101041u1ed78be0tb621ab420dbd7d34@mail.gmail.com>
	<a71bd89a0808101104u422c2124odf8c619ad13b320f@mail.gmail.com>
	<82e274890808101142t61036e9dya1c2dd0d7c16155@mail.gmail.com>
Message-ID: <a71bd89a0808101228i694766e6h1f7cf639f82e5131@mail.gmail.com>

On Sun, Aug 10, 2008 at 11:42 AM, Ismael Barros <razielmine at gmail.com> wrote:
> You probably have installed in your wine prefix a windows native
> dpwsockx.dll, and dplay gets that one instead of wine's builtin
> dpwsockx.

Seems to be (perhaps I did winetricks directx9).
Removing ~/.wine seems to have helped.

Don't know if that explains the two timeout reports on wine
at test.winehq.org, but it seems likely.

Sorry for not trying a clean .wine before writing.
- Dan


From juan.lang at gmail.com  Sun Aug 10 16:21:46 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sun, 10 Aug 2008 14:21:46 -0700
Subject: rpcrt4: Dynamically load iphlpapi
In-Reply-To: <1096648c0808100152h6dfa16a1g4490aee8800570b4@mail.gmail.com>
References: <3a768c550808041750gb516ec4ye51f71cda082ae31@mail.gmail.com>
	<1096648c0808100152h6dfa16a1g4490aee8800570b4@mail.gmail.com>
Message-ID: <3a768c550808101421qf9fb8fao8ee857276361c9b8@mail.gmail.com>

> Why manually load iphlpapi here instead of using the automatic delayed
> import mechanism like you used for ws2_32? I assume it was because you
> reasoned that a hard dependency was unnecessary because the code has a
> fallback path, but I think you needed to make this clear in the
> changelog.

I can try to make the changelog clearer, but that wasn't my
motivation.  As I mentioned in the email with the patch, iphlpapi is
only needed once per process by rpcrt4, so I manually load it so that
I can also unload it as soon as it's done.  This is in contrast to
ws2_32, where iphlpapi may be needed more than once.
--Juan


From msclrhd at googlemail.com  Fri Aug  8 12:58:44 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Fri, 8 Aug 2008 18:58:44 +0100
Subject: Is Wine portable to ARM arch?
In-Reply-To: <9871ee5f0808081048j1097590wc09d1cc1269c284e@mail.gmail.com>
References: <1444329.1218217143464.JavaMail.root@elwamui-ovcar.atl.sa.earthlink.net>
	<9871ee5f0808081048j1097590wc09d1cc1269c284e@mail.gmail.com>
Message-ID: <3f4fd2640808081058k2ad77fbsa096ced004a76076@mail.gmail.com>

2008/8/8 Timothy Normand Miller <theosib at gmail.com>:
> On Fri, Aug 8, 2008 at 1:39 PM, James Mckenzie
> <jjmckenzie51 at earthlink.net> wrote:
>
>>>If no then are there any plans for multiplatform code in Wine?
>> NO!  Even MacOSX specific code is not allowed
>
> Is there an FAQ that explains why this is so?

http://www.winehq.org/site/docs/winedev-guide/index, specifically
http://www.winehq.org/site/docs/winedev-guide/porting.

- Reece


From wl at gnu.org  Sat Aug  9 08:56:08 2008
From: wl at gnu.org (Werner LEMBERG)
Date: Sat, 09 Aug 2008 15:56:08 +0200 (CEST)
Subject: debugging applications Re: Networking problems with IDU
	Verwaltung software
In-Reply-To: <1218287050.5665.57.camel@p4.lan>
References: <668868.37247.qm@web23106.mail.ird.yahoo.com>
	<20080808.165150.238609056.wl@gnu.org>
	<1218287050.5665.57.camel@p4.lan>
Message-ID: <20080809.155608.212903287.wl@gnu.org>

> You change the registry with: regedit (wine provide an own
> implementation)
> 
> Patches are welcome.
>
> The source of the website is managed with git:
> http://source.winehq.org/git/website.git (templates/en/*)

No time for doing that.  However, here's a patch which improves the
wording a bit I hope.


     Werner


======================================================================


--- developer-cheatsheet.htm~	2008-08-09 15:51:58.000000000 +0200
+++ developer-cheatsheet.htm	2008-08-09 15:53:16.000000000 +0200
@@ -684,8 +684,10 @@
         calls between Wine DLLs: for instance, from GDI32 to
         KERNEL32. Investigate the RelayInclude and RelayExclude string
         values in [HKCU\Software\Wine\Debug] if you're being
-        overwhelmed by certain functions. A good initial value for
-        RelayExclude is:<p>
+        overwhelmed by certain functions. (&lsquo;HKCU&rsquo; stands
+        for the &lsquo;HKEY_CURRENT_USER&rsquo; tree in the Windows
+        registry; you can edit it with the command &lsquo;wine
+        regedit&rsquo;.) A good initial value for RelayExclude is:<p>
 
         <code> RtlEnterCriticalSection;RtlLeaveCriticalSection;_EnterSysLevel;_LeaveSysLevel;
         _CheckNotSysLevel;RtlAllocateHeap;RtlFreeHeap;LOCAL_Lock;LOCAL_Unlock 


From wine.dev at web.de  Sun Aug 10 17:13:33 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Mon, 11 Aug 2008 00:13:33 +0200
Subject: rpcrt4: [1/2] Improve stub for I_RpcBindingInqTransportType,
	with test
In-Reply-To: <0709A9F5FBEF47FA8C7C537C407F195D@DMITRY>
References: <1218316914.8457.1.camel@p4.lan>
	<0709A9F5FBEF47FA8C7C537C407F195D@DMITRY>
Message-ID: <1218406413.6639.81.camel@p4.lan>

On So, 2008-08-10 at 12:21 +0900, Dmitry Timoshkov wrote:

> > +  /* NT: RPC_S_NO_CONTEXT_AVAILABLE, 9x: RPC_S_NO_CALL_ACTIVE */
> > +  if (!Binding) return RPC_S_NO_CONTEXT_AVAILABLE;

> According to your test this should be
> if (!Binding || !Type) return RPC_S_NO_CONTEXT_AVAILABLE;

No, your asumption does not match the test.
My test show, that Windows does not care about Type, when Binding is
NULL:
=> Binding must be checked first and *Type is not touched.

For your code above, the test must create and use a valid binding with
"Type == NULL".

> Also the comment doesn't belong here, it's ok to have in the test
> though.
OK.


-- 
 
By by ... Detlef




From truiken at gmail.com  Sun Aug 10 18:52:49 2008
From: truiken at gmail.com (James Hawkins)
Date: Sun, 10 Aug 2008 18:52:49 -0500
Subject: [Bug 14810] WinHttp needs to be implemented
In-Reply-To: <E1KSKZA-0001uF-Na@wine.codeweavers.com>
References: <bug-14810-11@http.bugs.winehq.org/>
	<E1KSKZA-0001uF-Na@wine.codeweavers.com>
Message-ID: <22821af30808101652v17c4d9eaoaab1aaf82db857ee@mail.gmail.com>

On Sun, Aug 10, 2008 at 6:43 PM,  <wine-bugs at winehq.org> wrote:
> http://bugs.winehq.org/show_bug.cgi?id=14810
>
>
> --- Comment #4 from Erich Hoover <ehoover at mines.edu>  2008-08-10 18:43:16 ---
> This whole DLL has a total of 27 functions, 14 of which are currently exposed,
> and only 1 is "implemented".  I put some work into implementing enough of the
> DLL to get RA3 to authenticate and found that it needs 9 of the functions to
> operate properly.  I think it is reasonable to say that implementing the rest
> of the functions for WinHttp would not be too difficult.  I do not think that
> this particular issue is anywhere close to a broad-spectrum "Win32 API needs to
> be implemented".
>

Of course it's not the same scale as all of the Win32 API.  It was an
analogy illustrating why the bug is superfluous.  On the other hand,
you're vastly underestimating the amount of work needed to properly
implement winhttp.  You might want to chat with Zac Brown who is
working on implementing winhttp right now.  Also, please don't post in
closed bugs.

-- 
James Hawkins


From ehoover at mines.edu  Sun Aug 10 19:30:17 2008
From: ehoover at mines.edu (Erich Hoover)
Date: Sun, 10 Aug 2008 18:30:17 -0600
Subject: [Bug 14810] WinHttp needs to be implemented
In-Reply-To: <22821af30808101652v17c4d9eaoaab1aaf82db857ee@mail.gmail.com>
References: <bug-14810-11@http.bugs.winehq.org/>
	<E1KSKZA-0001uF-Na@wine.codeweavers.com>
	<22821af30808101652v17c4d9eaoaab1aaf82db857ee@mail.gmail.com>
Message-ID: <4c1ac96d0808101730k1adee4a6k3a4cbbb131092142@mail.gmail.com>

I am trying to argue that the bug does not warrant closure, wine-devel does
not seem like an appropriate venue for such a discussion.  I am quite
familiar with how much effort goes into properly implementing a full-fledged
library for working with HTTP, I have done it several times in several
languages.  I initiated that bug to serve as a starting point to say "we
need a minimal implementation", which I think was successfully illustrated.
I was not aware that someone was already working on something, otherwise I
would have contacted them in order to get a head start.

Honestly, I believe that this problem illustrates the need for these kind of
bugs - if I had found a bug for WinHttp in bugzilla assigned to Zac then I
could easily contact him.  I do not have time to monitor wine-devel in order
keep track of what everyone is working on so that I can keep from stepping
on people's toes.  Wine is not my full time job, and I think it is
unreasonable to expect people to keep track of this kind of off-the-tree
activity without some sort of database like bugzilla to keep track of who is
doing what.  As I'm sure other people do, I only have time to do work on
Wine when I'm on my vacation.

Erich Hoover
ehoover at mines.edu

On Sun, Aug 10, 2008 at 5:52 PM, James Hawkins <truiken at gmail.com> wrote:

> On Sun, Aug 10, 2008 at 6:43 PM,  <wine-bugs at winehq.org> wrote:
> > http://bugs.winehq.org/show_bug.cgi?id=14810
> >
> >
> > --- Comment #4 from Erich Hoover <ehoover at mines.edu>  2008-08-10
> 18:43:16 ---
> > This whole DLL has a total of 27 functions, 14 of which are currently
> exposed,
> > and only 1 is "implemented".  I put some work into implementing enough of
> the
> > DLL to get RA3 to authenticate and found that it needs 9 of the functions
> to
> > operate properly.  I think it is reasonable to say that implementing the
> rest
> > of the functions for WinHttp would not be too difficult.  I do not think
> that
> > this particular issue is anywhere close to a broad-spectrum "Win32 API
> needs to
> > be implemented".
> >
>
> Of course it's not the same scale as all of the Win32 API.  It was an
> analogy illustrating why the bug is superfluous.  On the other hand,
> you're vastly underestimating the amount of work needed to properly
> implement winhttp.  You might want to chat with Zac Brown who is
> working on implementing winhttp right now.  Also, please don't post in
> closed bugs.
>
> --
> James Hawkins
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080810/690a69e9/attachment.htm 

From truiken at gmail.com  Sun Aug 10 19:39:21 2008
From: truiken at gmail.com (James Hawkins)
Date: Sun, 10 Aug 2008 19:39:21 -0500
Subject: [Bug 14810] WinHttp needs to be implemented
In-Reply-To: <4c1ac96d0808101730k1adee4a6k3a4cbbb131092142@mail.gmail.com>
References: <bug-14810-11@http.bugs.winehq.org/>
	<E1KSKZA-0001uF-Na@wine.codeweavers.com>
	<22821af30808101652v17c4d9eaoaab1aaf82db857ee@mail.gmail.com>
	<4c1ac96d0808101730k1adee4a6k3a4cbbb131092142@mail.gmail.com>
Message-ID: <22821af30808101739xc8ee317hc383dd717cabcb4b@mail.gmail.com>

On Sun, Aug 10, 2008 at 7:30 PM, Erich Hoover <ehoover at mines.edu> wrote:
> I am trying to argue that the bug does not warrant closure, wine-devel does
> not seem like an appropriate venue for such a discussion.  I am quite
> familiar with how much effort goes into properly implementing a full-fledged
> library for working with HTTP, I have done it several times in several
> languages.  I initiated that bug to serve as a starting point to say "we
> need a minimal implementation", which I think was successfully illustrated.
> I was not aware that someone was already working on something, otherwise I
> would have contacted them in order to get a head start.
>
> Honestly, I believe that this problem illustrates the need for these kind of
> bugs - if I had found a bug for WinHttp in bugzilla assigned to Zac then I
> could easily contact him.  I do not have time to monitor wine-devel in order
> keep track of what everyone is working on so that I can keep from stepping
> on people's toes.  Wine is not my full time job, and I think it is
> unreasonable to expect people to keep track of this kind of off-the-tree
> activity without some sort of database like bugzilla to keep track of who is
> doing what.  As I'm sure other people do, I only have time to do work on
> Wine when I'm on my vacation.
>

Exactly.  You open a bug stating that 'Command & Conquere Red Alert 3
fails to authenticate' and then add in a bug comment that the problem
is because of missing required winhttp functionality.  Zac then sees
the bug report and adds his own comment stating whether he has time to
work on it or not plus any additional information he has to help
others that want to work on the bug.

There's really no point in arguing about policy.  We don't allow
metabugs, exactly because they serve no purpose and usually hinder the
development process.  My original suggestion was to open a new bug
report for the fact that C&C doesn't work, and that suggestion still
stands.  Please don't top-post on this mailing list.

-- 
James Hawkins


From juan.lang at gmail.com  Sun Aug 10 19:39:08 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sun, 10 Aug 2008 17:39:08 -0700
Subject: [Bug 14810] WinHttp needs to be implemented
In-Reply-To: <4c1ac96d0808101730k1adee4a6k3a4cbbb131092142@mail.gmail.com>
References: <bug-14810-11@http.bugs.winehq.org/>
	<E1KSKZA-0001uF-Na@wine.codeweavers.com>
	<22821af30808101652v17c4d9eaoaab1aaf82db857ee@mail.gmail.com>
	<4c1ac96d0808101730k1adee4a6k3a4cbbb131092142@mail.gmail.com>
Message-ID: <3a768c550808101739y15d5f3a9u7e67b999ef51fecc@mail.gmail.com>

> I am trying to argue that the bug does not warrant closure, wine-devel does
> not seem like an appropriate venue for such a discussion.

It depends on the bug.  The consensus seems to be that this bug is
invalid, and I'm inclined to agree.  A better bug would be something
about Command and Conquer Red Alert 3 Beta and how it fails.  The bug,
as you opened it, doesn't have enough details about the specific
failure you're trying to fix.

> Honestly, I believe that this problem illustrates the need for these kind of
> bugs - if I had found a bug for WinHttp in bugzilla assigned to Zac then I
> could easily contact him.  I do not have time to monitor wine-devel in order
> keep track of what everyone is working on so that I can keep from stepping
> on people's toes.

If not stepping on someone's toes is your wish, is it too much to ask
that you ask on wine-devel?  You don't have to read it on a regular
basis to post a question, and it's rather well known that Zac's been
working on WinHttp.  We could have pointed you in the right direction.
--Juan


From dsh at linux.ucla.edu  Sun Aug 10 20:20:48 2008
From: dsh at linux.ucla.edu (Dan Hipschman)
Date: Sun, 10 Aug 2008 18:20:48 -0700
Subject: [Bug 14810] WinHttp needs to be implemented
In-Reply-To: <4c1ac96d0808101730k1adee4a6k3a4cbbb131092142@mail.gmail.com>
References: <bug-14810-11@http.bugs.winehq.org/>
	<E1KSKZA-0001uF-Na@wine.codeweavers.com>
	<22821af30808101652v17c4d9eaoaab1aaf82db857ee@mail.gmail.com>
	<4c1ac96d0808101730k1adee4a6k3a4cbbb131092142@mail.gmail.com>
Message-ID: <20080811012048.GR22846@linux.ucla.edu>

On Sun, Aug 10, 2008 at 06:30:17PM -0600, Erich Hoover wrote:
> Honestly, I believe that this problem illustrates the need for these kind of
> bugs - if I had found a bug for WinHttp in bugzilla assigned to Zac then I
> could easily contact him.  I do not have time to monitor wine-devel in order
> keep track of what everyone is working on so that I can keep from stepping
> on people's toes.  Wine is not my full time job, and I think it is
> unreasonable to expect people to keep track of this kind of off-the-tree
> activity without some sort of database like bugzilla to keep track of who is
> doing what.  As I'm sure other people do, I only have time to do work on
> Wine when I'm on my vacation.

I agree with others in that bugs saying such and such DLL need to be
implemented are redundant.  Wine development is very app-driven in that
we focus on fixing particular apps instead of willy-nilly deciding to
work on DLL X today.  It gives priority to bugs which will help the most
people (depending on the popularity of the app), and makes it easier to
chart progess (M apps run well is a better metric than N DLLs are
implemented).

There are already some bugs in the tracker for winhttp (eg, 14381).  To
help out the most, please add bugs for the other apps you've mentioned
that fail to run (assuming they aren't already in bugzilla, I didn't
check).  You could also write test cases for winhttp.  This is a good
way to get people started on implementing it.  To see who is currently
active in a particular area, you can search the mailing lists, or look
at the git logs for the files, or check if there's a recent copyright on
any of them.  Bugs often don't get assigned to anybody.  Wine is
developed by a lot of otherwise unrelated people, so bugs usually just
get fixed by whoever happens to be interested in them.


From ehoover at mines.edu  Sun Aug 10 20:43:14 2008
From: ehoover at mines.edu (Erich Hoover)
Date: Sun, 10 Aug 2008 19:43:14 -0600
Subject: [Bug 14810] WinHttp needs to be implemented
In-Reply-To: <22821af30808101739xc8ee317hc383dd717cabcb4b@mail.gmail.com>
References: <bug-14810-11@http.bugs.winehq.org/>
	<E1KSKZA-0001uF-Na@wine.codeweavers.com>
	<22821af30808101652v17c4d9eaoaab1aaf82db857ee@mail.gmail.com>
	<4c1ac96d0808101730k1adee4a6k3a4cbbb131092142@mail.gmail.com>
	<22821af30808101739xc8ee317hc383dd717cabcb4b@mail.gmail.com>
Message-ID: <4c1ac96d0808101843x5549f4b5p75ddaf2a721920e0@mail.gmail.com>

On Sun, Aug 10, 2008 at 6:39 PM, James Hawkins <truiken at gmail.com> wrote:

> Exactly.  You open a bug stating that 'Command & Conquere Red Alert 3
> fails to authenticate' and then add in a bug comment that the problem
> is because of missing required winhttp functionality.  Zac then sees
> the bug report and adds his own comment stating whether he has time to
> work on it or not plus any additional information he has to help
> others that want to work on the bug.

I've submitted these kinds of bugs before and they have a tendency to get
closed for not having enough information.  Especially in this case, such a
bug is nearly useless:
1) The Red Alert 3 Beta is locked to a particular license key, which it
associates with a particular PC
2) I do not know what is missing until I implement things, since the entire
DLL is stubs
3) There's no guarantee that the relevant person will ever see the bug
report, Zac was not on the email list for this bug even though it targeted
the winhttp component (there are other bugs in this component and Zac has
not replied to any of them)

> There's really no point in arguing about policy. We don't allow
>
 metabugs, exactly because they serve no purpose and usually hinder the
> development process.

Of the policies posted on the Wine website I have never found anything
related to this discussion (http://wiki.winehq.org/Bugs comes closest, but
does not discuss the issue).  Even if there was such a policy posted, it is
reasonable to discuss re-evaluating it when policy is incongruous with
productivity.  Many open source projects use metabugs, even though I would
say the bug in question is not very "meta," so I'd say that there's a
certain amount of burden of proof necessary before it's accurate to say that
these bugs hinder the development process.

>  My original suggestion was to open a new bug
> report for the fact that C&C doesn't work, and that suggestion still
> stands.

I plan on it, obviously opening a bug that does not fullfil your guidelines
results in it being closed rather than clarified.  I find this behavior
particularly irritating, I'd much prefer to be told to re-title the bug (or
have it re-titled) to say something more specifically related to the
application in question.

>  Please don't top-post on this mailing list.

Sorry, I replied to all and didn't notice the mailing list was on there (and
I was not responding to a specific statement).

>
> --
> James Hawkins
>

Erich Hoover
ehoover at mines.edu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080810/b7ff5f27/attachment.htm 

From ehoover at mines.edu  Sun Aug 10 20:49:52 2008
From: ehoover at mines.edu (Erich Hoover)
Date: Sun, 10 Aug 2008 19:49:52 -0600
Subject: [Bug 14810] WinHttp needs to be implemented
In-Reply-To: <3a768c550808101739y15d5f3a9u7e67b999ef51fecc@mail.gmail.com>
References: <bug-14810-11@http.bugs.winehq.org/>
	<E1KSKZA-0001uF-Na@wine.codeweavers.com>
	<22821af30808101652v17c4d9eaoaab1aaf82db857ee@mail.gmail.com>
	<4c1ac96d0808101730k1adee4a6k3a4cbbb131092142@mail.gmail.com>
	<3a768c550808101739y15d5f3a9u7e67b999ef51fecc@mail.gmail.com>
Message-ID: <4c1ac96d0808101849x7dce89f7p1358d0d0a4ddfad0@mail.gmail.com>

On Sun, Aug 10, 2008 at 6:39 PM, Juan Lang <juan.lang at gmail.com> wrote:

> > I am trying to argue that the bug does not warrant closure, wine-devel
> does
> > not seem like an appropriate venue for such a discussion.
>
> It depends on the bug.  The consensus seems to be that this bug is
> invalid, and I'm inclined to agree.  A better bug would be something
> about Command and Conquer Red Alert 3 Beta and how it fails.  The bug,
> as you opened it, doesn't have enough details about the specific
> failure you're trying to fix.

At the time I opened the bug that would not have done any good, the only
thing I could have said at that time is that it failed on WinHttpOpen.
After minimally implementing things I could now have added a more complete
list if the bug were still open.

>
> > Honestly, I believe that this problem illustrates the need for these kind
> of
> > bugs - if I had found a bug for WinHttp in bugzilla assigned to Zac then
> I
> > could easily contact him.  I do not have time to monitor wine-devel in
> order
> > keep track of what everyone is working on so that I can keep from
> stepping
> > on people's toes.
>
> If not stepping on someone's toes is your wish, is it too much to ask
> that you ask on wine-devel?  You don't have to read it on a regular
> basis to post a question, and it's rather well known that Zac's been
> working on WinHttp.  We could have pointed you in the right direction.

While this is not a particularly efficient mechanism for solving these kinds
of problems, I can do that in the future.  Would you mind pointing me in the
direction of Zac's patches?

>
> --Juan
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080810/9910d1b8/attachment-0001.htm 

From juan.lang at gmail.com  Sun Aug 10 20:56:38 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sun, 10 Aug 2008 18:56:38 -0700
Subject: [Bug 14810] WinHttp needs to be implemented
In-Reply-To: <4c1ac96d0808101849x7dce89f7p1358d0d0a4ddfad0@mail.gmail.com>
References: <bug-14810-11@http.bugs.winehq.org/>
	<E1KSKZA-0001uF-Na@wine.codeweavers.com>
	<22821af30808101652v17c4d9eaoaab1aaf82db857ee@mail.gmail.com>
	<4c1ac96d0808101730k1adee4a6k3a4cbbb131092142@mail.gmail.com>
	<3a768c550808101739y15d5f3a9u7e67b999ef51fecc@mail.gmail.com>
	<4c1ac96d0808101849x7dce89f7p1358d0d0a4ddfad0@mail.gmail.com>
Message-ID: <3a768c550808101856l3d954d1fmc89132785ae8d49a@mail.gmail.com>

> At the time I opened the bug that would not have done any good, the only
> thing I could have said at that time is that it failed on WinHttpOpen.

That's not quite no good.  Just knowing that more than one app depends
on winhttp is often useful.

> Would you mind pointing me in the direction of Zac's patches?

Not at all.  You might try this series:
http://www.winehq.org/pipermail/wine-patches/2008-July/058088.html
--Juan


From ehoover at mines.edu  Sun Aug 10 21:04:40 2008
From: ehoover at mines.edu (Erich Hoover)
Date: Sun, 10 Aug 2008 20:04:40 -0600
Subject: [Bug 14810] WinHttp needs to be implemented
In-Reply-To: <20080811012048.GR22846@linux.ucla.edu>
References: <bug-14810-11@http.bugs.winehq.org/>
	<E1KSKZA-0001uF-Na@wine.codeweavers.com>
	<22821af30808101652v17c4d9eaoaab1aaf82db857ee@mail.gmail.com>
	<4c1ac96d0808101730k1adee4a6k3a4cbbb131092142@mail.gmail.com>
	<20080811012048.GR22846@linux.ucla.edu>
Message-ID: <4c1ac96d0808101904ieb7deb0obaa25cd1088e123f@mail.gmail.com>

On Sun, Aug 10, 2008 at 7:20 PM, Dan Hipschman <dsh at linux.ucla.edu> wrote:

> On Sun, Aug 10, 2008 at 06:30:17PM -0600, Erich Hoover wrote:
> > Honestly, I believe that this problem illustrates the need for these kind
> of
> > bugs - if I had found a bug for WinHttp in bugzilla assigned to Zac then
> I
> > could easily contact him.  I do not have time to monitor wine-devel in
> order
> > keep track of what everyone is working on so that I can keep from
> stepping
> > on people's toes.  Wine is not my full time job, and I think it is
> > unreasonable to expect people to keep track of this kind of off-the-tree
> > activity without some sort of database like bugzilla to keep track of who
> is
> > doing what.  As I'm sure other people do, I only have time to do work on
> > Wine when I'm on my vacation.
>
> I agree with others in that bugs saying such and such DLL need to be
> implemented are redundant.  Wine development is very app-driven in that
> we focus on fixing particular apps instead of willy-nilly deciding to
> work on DLL X today.  It gives priority to bugs which will help the most
> people (depending on the popularity of the app), and makes it easier to
> chart progess (M apps run well is a better metric than N DLLs are
> implemented).
>
I agree that the title of the bug indicated as such, I was not aware that
being generic like this was against some sort of unwritten policy.  However,
the comment specifically targeted the Red Alert 3 Beta as much as possible,
since it failed immediately after WinHttpOpen.

>
> There are already some bugs in the tracker for winhttp (eg, 14381).  To
> help out the most, please add bugs for the other apps you've mentioned
> that fail to run (assuming they aren't already in bugzilla, I didn't
> check).  You could also write test cases for winhttp.  This is a good
> way to get people started on implementing it.  To see who is currently
> active in a particular area, you can search the mailing lists, or look
> at the git logs for the files, or check if there's a recent copyright on
> any of them.  Bugs often don't get assigned to anybody.  Wine is
> developed by a lot of otherwise unrelated people, so bugs usually just
> get fixed by whoever happens to be interested in them.
>
The copyright on the winhttp "main.c" is in 2007 and is just stubs,
otherwise i would have more actively checked the mailing lists.  The other
bugs in bugzilla did not appear relevant, so I made a new one.  Since I'm
now aware that there's someone already interested in WinHttp, I plan on
doing what I can to help them get things working for RA3 so it will work by
the time it comes out.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080810/bfad6d76/attachment.htm 

From ehoover at mines.edu  Sun Aug 10 21:06:59 2008
From: ehoover at mines.edu (Erich Hoover)
Date: Sun, 10 Aug 2008 20:06:59 -0600
Subject: [Bug 14810] WinHttp needs to be implemented
In-Reply-To: <20080811012048.GR22846@linux.ucla.edu>
References: <bug-14810-11@http.bugs.winehq.org/>
	<E1KSKZA-0001uF-Na@wine.codeweavers.com>
	<22821af30808101652v17c4d9eaoaab1aaf82db857ee@mail.gmail.com>
	<4c1ac96d0808101730k1adee4a6k3a4cbbb131092142@mail.gmail.com>
	<20080811012048.GR22846@linux.ucla.edu>
Message-ID: <4c1ac96d0808101906s2f57403dp362ee50efe6d892c@mail.gmail.com>

On Sun, Aug 10, 2008 at 7:20 PM, Dan Hipschman <dsh at linux.ucla.edu> wrote:

> On Sun, Aug 10, 2008 at 06:30:17PM -0600, Erich Hoover wrote:
> > Honestly, I believe that this problem illustrates the need for these kind
> of
> > bugs - if I had found a bug for WinHttp in bugzilla assigned to Zac then
> I
> > could easily contact him.  I do not have time to monitor wine-devel in
> order
> > keep track of what everyone is working on so that I can keep from
> stepping
> > on people's toes.  Wine is not my full time job, and I think it is
> > unreasonable to expect people to keep track of this kind of off-the-tree
> > activity without some sort of database like bugzilla to keep track of who
> is
> > doing what.  As I'm sure other people do, I only have time to do work on
> > Wine when I'm on my vacation.
>
> I agree with others in that bugs saying such and such DLL need to be
> implemented are redundant.  Wine development is very app-driven in that
> we focus on fixing particular apps instead of willy-nilly deciding to
> work on DLL X today.  It gives priority to bugs which will help the most
> people (depending on the popularity of the app), and makes it easier to
> chart progess (M apps run well is a better metric than N DLLs are
> implemented).
>
I agree that the title of the bug indicated as such, I was not aware that
being generic like this was against some sort of unwritten policy.  However,
the comment specifically targeted the Red Alert 3 Beta as much as possible,
since it failed immediately after WinHttpOpen.

>
> There are already some bugs in the tracker for winhttp (eg, 14381).  To
> help out the most, please add bugs for the other apps you've mentioned
> that fail to run (assuming they aren't already in bugzilla, I didn't
> check).  You could also write test cases for winhttp.  This is a good
> way to get people started on implementing it.  To see who is currently
> active in a particular area, you can search the mailing lists, or look
> at the git logs for the files, or check if there's a recent copyright on
> any of them.  Bugs often don't get assigned to anybody.  Wine is
> developed by a lot of otherwise unrelated people, so bugs usually just
> get fixed by whoever happens to be interested in them.
>
The copyright on the winhttp "main.c" is in 2007 and is just stubs,
otherwise i would have more actively checked the mailing lists.  The other
bugs in bugzilla did not appear to necessarilly be relevant, so I made a new
one.  Since I'm now aware that there's someone already interested in
WinHttp, I plan on doing what I can to help them get things working for RA3
so it will work by the time it comes out.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080810/0244740f/attachment.htm 

From Winandy.Hubert at pt.lu  Mon Aug 11 04:01:54 2008
From: Winandy.Hubert at pt.lu (Winandy Hubert)
Date: Mon, 11 Aug 2008 11:01:54 +0200
Subject: [AppDB] db_filter_ui: Use first filter option as default
In-Reply-To: <200808080100.46994.alex@thehandofagony.com>
References: <200808080100.46994.alex@thehandofagony.com>
Message-ID: <48A00002.90401@pt.lu>

Alexander Nicolaysen S?rnes schrieb:
> Should be a little more user-friendly.
>
>
> Alexander N. S?rnes
>
>
>
> __________ NOD32 3344 (20080810) Information __________
>
> Diese E-Mail wurde vom NOD32 antivirus system gepr?ft
> http://www.nod32.com
>   
> ------------------------------------------------------------------------
>
> Kann Anhang nicht ?ffnen Danke Winandy Hubert
>
>
>
> __________ NOD32 3344 (20080810) Information __________
>
> Diese E-Mail wurde vom NOD32 antivirus system gepr?ft
> http://www.nod32.com



From stefan at codeweavers.com  Mon Aug 11 09:01:27 2008
From: stefan at codeweavers.com (=?UTF-8?Q?Stefan_D=C3=B6singer?=)
Date: Mon, 11 Aug 2008 09:01:27 -0500
Subject: [PATCH 03/10] ddraw/surface: Made IDirectDrawSurfaceImpl
	methods	non-static.
In-Reply-To: <1218403172.13374.27.camel@hermes2.karcher.local>
References: <1218403172.13374.27.camel@hermes2.karcher.local>
Message-ID: <001201c8fbba$bfd0a530$3f71ef90$@com>

I think you should put the things from surface_impl.h into ddraw_private.h

> -----Original Message-----
> From: wine-patches-bounces at winehq.org [mailto:wine-patches-
> bounces at winehq.org] On Behalf Of Michael Karcher
> Sent: Sunday, August 10, 2008 4:20 PM
> To: wine-patches at winehq.org
> Subject: [PATCH 03/10] ddraw/surface: Made IDirectDrawSurfaceImpl
> methods non-static.
> 
> This allows direct calls from surface_thunks.c. IMHO there is no point
> in letting the call from the thunk to the implementation go through the
> vtable again, unless we are going to use dynamic vtables.
> ---
>  dlls/ddraw/surface.c      |   85 +++++++++---------
>  dlls/ddraw/surface_impl.h |  207
> +++++++++++++++++++++++++++++++++++++++++++++
>  2 files changed, 250 insertions(+), 42 deletions(-)  create mode
> 100644 dlls/ddraw/surface_impl.h



From stefan at codeweavers.com  Mon Aug 11 09:19:48 2008
From: stefan at codeweavers.com (=?UTF-8?Q?Stefan_D=C3=B6singer?=)
Date: Mon, 11 Aug 2008 09:19:48 -0500
Subject: [PATCH 04/10] ddraw/dsurface_thunks: Add typesafe
	inline	conversion functions.
In-Reply-To: <1218403188.13374.29.camel@hermes2.karcher.local>
References: <1218403188.13374.29.camel@hermes2.karcher.local>
Message-ID: <002501c8fbbd$5014f2c0$f03ed840$@com>

I think it is better to replace the whole macros in ddcomimpl.h with inline functions. This is also what Alexandre asked for some time ago, but I was too lazy to implement it


> -----Original Message-----
> From: wine-patches-bounces at winehq.org [mailto:wine-patches-
> bounces at winehq.org] On Behalf Of Michael Karcher
> Sent: Sunday, August 10, 2008 4:20 PM
> To: wine-patches at winehq.org
> Subject: [PATCH 04/10] ddraw/dsurface_thunks: Add typesafe inline
> conversion functions.
> 
> These are going to replace the CONVERT/CONVERT_REV macros.
> ---
>  dlls/ddraw/surface_thunks.c |   54
> +++++++++++++++++++++++++++++++++++++++++++
>  1 files changed, 54 insertions(+), 0 deletions(-)



From robertshearman at gmail.com  Mon Aug 11 09:30:56 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Mon, 11 Aug 2008 15:30:56 +0100
Subject: rpcrt4: Dynamically load iphlpapi
In-Reply-To: <3a768c550808101421qf9fb8fao8ee857276361c9b8@mail.gmail.com>
References: <3a768c550808041750gb516ec4ye51f71cda082ae31@mail.gmail.com>
	<1096648c0808100152h6dfa16a1g4490aee8800570b4@mail.gmail.com>
	<3a768c550808101421qf9fb8fao8ee857276361c9b8@mail.gmail.com>
Message-ID: <1096648c0808110730m39937a9bw2cfa0c474ef5941b@mail.gmail.com>

2008/8/10 Juan Lang <juan.lang at gmail.com>:
>> Why manually load iphlpapi here instead of using the automatic delayed
>> import mechanism like you used for ws2_32? I assume it was because you
>> reasoned that a hard dependency was unnecessary because the code has a
>> fallback path, but I think you needed to make this clear in the
>> changelog.
>
> I can try to make the changelog clearer, but that wasn't my
> motivation.  As I mentioned in the email with the patch, iphlpapi is
> only needed once per process by rpcrt4, so I manually load it so that
> I can also unload it as soon as it's done.  This is in contrast to
> ws2_32, where iphlpapi may be needed more than once.

Ah, yes, I missed that part. The patch is fine with me.

-- 
Rob Shearman


From robertshearman at gmail.com  Mon Aug 11 09:39:00 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Mon, 11 Aug 2008 15:39:00 +0100
Subject: dplayx tests hanging
In-Reply-To: <82e274890808101019p6cf1ad8cnadcef7c2527470bf@mail.gmail.com>
References: <a71bd89a0808100934w7aa8932cl24252edbf9fcf235@mail.gmail.com>
	<82e274890808101019p6cf1ad8cnadcef7c2527470bf@mail.gmail.com>
Message-ID: <1096648c0808110739l15fb6ec0qf46b829527303478@mail.gmail.com>

2008/8/10 Ismael Barros <razielmine at gmail.com>:
> On 8/10/08, Dan Kegel <dank at kegel.com> wrote:
>> Hi Ismael,
>> have a look at
>> http://test.winehq.org/data/tests/dplayx:dplayx.html
>> Since your commits on the 4th of Aug, the dplayx tests have been hanging.
>> This is getting in the way of my regression testing.
>> Can you have a look?
>> Thanks,
>> Dan
>>
>
> Are they really hanging or taking too long? Dplay is quite slow and
> the tests are intensive so they take a lot of time. They take 7
> minutes in my XP and some seconds in wine.
>
> Anyway I'll try to see if there's any way of speeding them up, I'm
> sorry for the hassle.

Taking 7 minutes is too long, even if it is only on Windows. Perhaps
you could run each test that depends on network latency in a separate
thread. This could cause problems with the test output being printed
in a weird order as several tests will be running at once, but the
number of failures should typically be low and it should the tests to
complete faster.

> Maybe the best solution is to remove dplay tests until I've finished
> implementing the library, as right now they are useful only for me,
> and a problem for the rest.

Please keep them - having the tests running reliably on Windows before
implementing the functions they test is very useful as it ensures that
no one is going to introduce obviously incorrect code when
implementing the functions.

-- 
Rob Shearman


From stefan at codeweavers.com  Mon Aug 11 09:59:48 2008
From: stefan at codeweavers.com (=?UTF-8?Q?Stefan_D=C3=B6singer?=)
Date: Mon, 11 Aug 2008 09:59:48 -0500
Subject: [PATCH 04/10] ddraw/dsurface_thunks: Add
	typesafe	inline	conversion functions.
In-Reply-To: <1218466485.13374.51.camel@hermes2.karcher.local>
References: <1218403188.13374.29.camel@hermes2.karcher.local>	
	<002501c8fbbd$5014f2c0$f03ed840$@com>
	<1218466485.13374.51.camel@hermes2.karcher.local>
Message-ID: <002901c8fbc2$e64f19f0$b2ed4dd0$@com>

> Do you see a chance to get such a change committed?
It's hard to tell; I think you should ask Alexandre once he's back from vacation





From kai.blin at gmail.com  Mon Aug 11 10:14:52 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Mon, 11 Aug 2008 17:14:52 +0200
Subject: dplayx tests hanging
In-Reply-To: <a71bd89a0808100934w7aa8932cl24252edbf9fcf235@mail.gmail.com>
References: <a71bd89a0808100934w7aa8932cl24252edbf9fcf235@mail.gmail.com>
Message-ID: <200808111714.56209.kai.blin@gmail.com>

On Sunday 10 August 2008 18:34:02 Dan Kegel wrote:

> http://test.winehq.org/data/tests/dplayx:dplayx.html
> Since your commits on the 4th of Aug, the dplayx tests have been hanging.
> This is getting in the way of my regression testing.

I've toyed with the tests a little and the following tests took over 30s to 
finish:

test_Open() 49s
test_EnumSessions() 180s
test_CreatePlayer() 32s
test_GetPlayerAccount() 63s, also 1 test failure on XP

A bunch of other tests took > 20s, and test_GetPlayerAddress() had 7 failures.
Incidently, all tests that took over 20 seconds took around 23 seconds, which 
smells like some fixed timeout.

Ismael, can you look into the really slow tests and check what subtest is 
taking most of the time?

Cheers,
Kai


-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080811/7e6eee26/attachment.pgp 

From winehacker at gmail.com  Mon Aug 11 10:31:29 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Mon, 11 Aug 2008 11:31:29 -0400
Subject: Is Wine portable to ARM arch?
In-Reply-To: <Pine.LNX.4.64.0808081857250.14070@smetowo.telesat.com.pl>
References: <Pine.LNX.4.64.0808081857250.14070@smetowo.telesat.com.pl>
Message-ID: <19e31a080808110831m21a3cd76hdf4814de2bc28382@mail.gmail.com>

On Fri, Aug 8, 2008 at 1:05 PM, Tomasz Czapiewski <xeros at irc.pl> wrote:
> If no then are there any plans for multiplatform code in Wine?
> There are many Linux users of such hardware (like Neo FreeRunner etc.)
> which would like to use Windows applications on their portable
> ARM-based devices.

Sorry for the late reply to this. I expect you will see some arm
support patches coming to Wine for winebuild and friends soon as the
ReactOS guys have started working on an arm port. Its not to user mode
yet but once it is, the tools they use will need to be extended so
I'll make sure these get pushed back upstream.

Thanks
-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From kai.blin at gmail.com  Mon Aug 11 10:43:40 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Mon, 11 Aug 2008 17:43:40 +0200
Subject: dplayx tests hanging
In-Reply-To: <200808111714.56209.kai.blin@gmail.com>
References: <a71bd89a0808100934w7aa8932cl24252edbf9fcf235@mail.gmail.com>
	<200808111714.56209.kai.blin@gmail.com>
Message-ID: <200808111743.40933.kai.blin@gmail.com>

On Monday 11 August 2008 17:14:52 Kai Blin wrote:

> test_Open() 49s
> test_EnumSessions() 180s
> test_CreatePlayer() 32s
> test_GetPlayerAccount() 63s, also 1 test failure on XP

Skipping these four tests, the test completes in two minutes on my box, which 
still is a lot of time. They probably need to be split up more.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080811/016ba3f3/attachment.pgp 

From razielmine at gmail.com  Mon Aug 11 11:17:58 2008
From: razielmine at gmail.com (Ismael Barros)
Date: Mon, 11 Aug 2008 18:17:58 +0200
Subject: dplayx tests hanging
In-Reply-To: <200808111714.56209.kai.blin@gmail.com>
References: <a71bd89a0808100934w7aa8932cl24252edbf9fcf235@mail.gmail.com>
	<200808111714.56209.kai.blin@gmail.com>
Message-ID: <82e274890808110917r3625ea32mb1ab58d612ca59fb@mail.gmail.com>

On 8/11/08, Kai Blin <kai.blin at gmail.com> wrote:
> On Sunday 10 August 2008 18:34:02 Dan Kegel wrote:
>
>> http://test.winehq.org/data/tests/dplayx:dplayx.html
>> Since your commits on the 4th of Aug, the dplayx tests have been hanging.
>> This is getting in the way of my regression testing.
>
> I've toyed with the tests a little and the following tests took over 30s to
> finish:
>
> test_Open() 49s
> test_EnumSessions() 180s
> test_CreatePlayer() 32s
> test_GetPlayerAccount() 63s, also 1 test failure on XP
>
> A bunch of other tests took > 20s, and test_GetPlayerAddress() had 7
> failures.
> Incidently, all tests that took over 20 seconds took around 23 seconds,
> which
> smells like some fixed timeout.

That's probably the main problem, as there's no network latency (all
the messages are sent to localhost) or cpu intensive operation.
Actually the thread stuff is a very good idea, I'll take a look. I
already tried changing the default timeout for EnumSessions, and on XP
the whole test set changed from 7 to 4 minutes, but with a lot of
failures.

And thanks for the info, what did you use to time the tests? Also,
could you send me the log of the failed tests? They all work on my XP.


From dank at kegel.com  Mon Aug 11 11:45:28 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 11 Aug 2008 09:45:28 -0700
Subject: Patchwatcher online
In-Reply-To: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
Message-ID: <a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>

On Sat, Aug 9, 2008 at 9:01 PM, Dan Kegel <dank at kegel.com> wrote:
> For the moment, the results only go to a web page,
>  http://kegel.com/wine/patchwatcher/results/
> Most of the results there right now are just test messages
> so you can see how it will look when real patches
> with various problems are received.

The scripts now run conformance tests and report regressions.
It's pretty rough still - I haven't compensated for flaky tests properly yet.
And I'm running them on a slowish machine, so
it lags by twenty minutes or so.

The source is still at
  http://code.google.com/p/winezeug/source/browse/#svn/trunk/patchwatcher
if anyone else is curious, or wants to run it themselves.


From wine at mkarcher.dialup.fu-berlin.de  Mon Aug 11 12:13:25 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Mon, 11 Aug 2008 19:13:25 +0200
Subject: Patchwatcher online
In-Reply-To: <a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
Message-ID: <1218474805.13374.53.camel@hermes2.karcher.local>

Am Montag, den 11.08.2008, 09:45 -0700 schrieb Dan Kegel:
> The scripts now run conformance tests and report regressions.
Does "Ditto, but just the new error:"<end of output> mean that there are
no new errors?

Regards,
  Michael Karcher



From kai.blin at gmail.com  Mon Aug 11 12:35:29 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Mon, 11 Aug 2008 19:35:29 +0200
Subject: dplayx tests hanging
In-Reply-To: <82e274890808110917r3625ea32mb1ab58d612ca59fb@mail.gmail.com>
References: <a71bd89a0808100934w7aa8932cl24252edbf9fcf235@mail.gmail.com>
	<200808111714.56209.kai.blin@gmail.com>
	<82e274890808110917r3625ea32mb1ab58d612ca59fb@mail.gmail.com>
Message-ID: <200808111935.33545.kai.blin@gmail.com>

On Monday 11 August 2008 18:17:58 Ismael Barros wrote:
> On 8/11/08, Kai Blin <kai.blin at gmail.com> wrote:
> > On Sunday 10 August 2008 18:34:02 Dan Kegel wrote:
> >> http://test.winehq.org/data/tests/dplayx:dplayx.html
> >> Since your commits on the 4th of Aug, the dplayx tests have been
> >> hanging. This is getting in the way of my regression testing.
> >
> > I've toyed with the tests a little and the following tests took over 30s
> > to finish:
> >
> > test_Open() 49s
> > test_EnumSessions() 180s
> > test_CreatePlayer() 32s
> > test_GetPlayerAccount() 63s, also 1 test failure on XP
> >
> > A bunch of other tests took > 20s, and test_GetPlayerAddress() had 7
> > failures.
> > Incidently, all tests that took over 20 seconds took around 23 seconds,
> > which
> > smells like some fixed timeout.
>
> That's probably the main problem, as there's no network latency (all
> the messages are sent to localhost) or cpu intensive operation.
> Actually the thread stuff is a very good idea, I'll take a look. I
> already tried changing the default timeout for EnumSessions, and on XP
> the whole test set changed from 7 to 4 minutes, but with a lot of
> failures.

What kind of failures?

> And thanks for the info, what did you use to time the tests? Also,
> could you send me the log of the failed tests? They all work on my XP.

Henri pointed me at "timeit" from the Win2k3 ressource kit at 
http://www.microsoft.com/downloads/details.aspx?familyid=9d467a69-57ff-4ae7-96ee-b18c4790cffd&displaylang=en

I just ran one test at a time and noted the time the test ran. Attached is the 
output of the unmodified dplayx tests, running on a vanilla WinXP 
ProfessionalN SP2 box, without any extra dx runtime installed.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
dplayx.c:2635: Test failed: expected=DPERR_LOGONDENIED got=DPERR_TIMEOUT
dplayx.c:2906: Test failed: expected=136 got=142
dplayx.c:2912: Test failed: expected=136 got=142
dplayx.c:2917: Test failed: expected=136 got=142
dplayx.c:2928: Test failed: expected=136 got=142
dplayx.c:2802: Test failed: expected=136 got=142
dplayx.c:2797: Test failed: expected=12 got=14
dplayx.c:2797: Test failed: expected=24 got=28
dplayx: 873 tests executed (0 marked as todo, 8 failures), 0 skipped.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080811/2273a7c9/attachment.pgp 

From razielmine at gmail.com  Mon Aug 11 13:27:27 2008
From: razielmine at gmail.com (Ismael Barros)
Date: Mon, 11 Aug 2008 20:27:27 +0200
Subject: dplayx tests hanging
In-Reply-To: <200808111935.33545.kai.blin@gmail.com>
References: <a71bd89a0808100934w7aa8932cl24252edbf9fcf235@mail.gmail.com>
	<200808111714.56209.kai.blin@gmail.com>
	<82e274890808110917r3625ea32mb1ab58d612ca59fb@mail.gmail.com>
	<200808111935.33545.kai.blin@gmail.com>
Message-ID: <82e274890808111127r4f794510mfb3eada84f0480ea@mail.gmail.com>

On 8/11/08, Kai Blin <kai.blin at gmail.com> wrote:
> On Monday 11 August 2008 18:17:58 Ismael Barros wrote:
>> That's probably the main problem, as there's no network latency (all
>> the messages are sent to localhost) or cpu intensive operation.
>> Actually the thread stuff is a very good idea, I'll take a look. I
>> already tried changing the default timeout for EnumSessions, and on XP
>> the whole test set changed from 7 to 4 minutes, but with a lot of
>> failures.
>
> What kind of failures?

A lot of tests failed for no obvious reason. I can start trying bigger
timeouts to see if all the tests start working again, but it's
difficult to make sure that'll work on every system...

>> And thanks for the info, what did you use to time the tests? Also,
>> could you send me the log of the failed tests? They all work on my XP.
>
> Henri pointed me at "timeit" from the Win2k3 ressource kit at
> http://www.microsoft.com/downloads/details.aspx?familyid=9d467a69-57ff-4ae7-96ee-b18c4790cffd&displaylang=en
>
> I just ran one test at a time and noted the time the test ran. Attached is
> the

Godsend, I've been looking for a similar app but fallbacked to my
phone's chronometer.

> output of the unmodified dplayx tests, running on a vanilla WinXP
> ProfessionalN SP2 box, without any extra dx runtime installed.

My system is the same but with debug dx libraries.
I'll probably remove those tests, they are too intensive (checking the
size of received messages and suchlike), and it's funny that the
GetPlayerAccount() takes a minute, it's actually a stub because that
function only works with secure sessions and I still didn't manage to
get them working (and they probably aren't even important for the 99%
of the games)


From dank at kegel.com  Mon Aug 11 14:05:40 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 11 Aug 2008 12:05:40 -0700
Subject: Patchwatcher online
In-Reply-To: <1218474805.13374.53.camel@hermes2.karcher.local>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
Message-ID: <a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>

On Mon, Aug 11, 2008 at 10:13 AM, Michael Karcher
<wine at mkarcher.dialup.fu-berlin.de> wrote:
> Am Montag, den 11.08.2008, 09:45 -0700 schrieb Dan Kegel:
>> The scripts now run conformance tests and report regressions.
> Does "Ditto, but just the new error:"<end of output> mean that there are
> no new errors?

Yes.  Sorry, I'll tidy that up tonight, it really should say "no
regressions found".


From zac at zacbrown.org  Mon Aug 11 15:23:56 2008
From: zac at zacbrown.org (Zac Brown)
Date: Mon, 11 Aug 2008 13:23:56 -0700
Subject: Crashing tests for WinHttp
Message-ID: <48A09FDC.80006@zacbrown.org>

Hi all,

Dan Kegel pointed out to me a couple of tests for WinHttp were reported as 
crashing in Wine, build 520ab5c26170 (the latest).

Would the owners of machines "2000 wine-1.1.2" and "XP th" please shoot me an 
email. I'd like to see if I can reproduce the crash in wine.

For better reference, its the machines in the first and last column on this 
page: 
http://test.winehq.org/data/520ab5c261706f6118a85a82ba84213932ba76e7/#group_Wine:winhttp:winhttp

Thanks,

Zac



From dank at kegel.com  Mon Aug 11 15:51:32 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 11 Aug 2008 13:51:32 -0700
Subject: Patch formatting question: how picky should the robot be?
Message-ID: <a71bd89a0808111351v31e76d2bj653fdc45a7b2296f@mail.gmail.com>

So, git generates patches like this:

diff --git a/dlls/ddraw/tests/dsurface.c b/dlls/ddraw/tests/dsurface.c
index da66e2e..4569997 100644
--- a/dlls/ddraw/tests/dsurface.c
+++ b/dlls/ddraw/tests/dsurface.c

and that's the way we like it.

And sometimes people generate patches with cvs, like

http://winehq.org/pipermail/wine-patches/2008-August/059403.html

diff -u -3 -p -r1.57 vga.c
--- dlls/winedos/vga.c	14 Jul 2008 10:57:58 -0000	1.57
+++ dlls/winedos/vga.c	27 Jul 2008 23:13:08 -0000

(That even used to be the way we liked it.)
That's ok, too, isn't it?
If so, I'll make sure my patch robot can handle it.


But what about patches like

http://winehq.org/pipermail/wine-patches/2008-August/059404.html

--- dlls/appwiz.cpl/appwiz.rc	2008-07-26 09:24:56.000000000 +0900
+++ appwiz.rc	2008-07-28 09:48:00.000000000 +0900
...
--- /dev/null	2008-07-28 09:27:06.210506864 +0900
+++ Ko.rc	2008-07-28 09:48:00.000000000 +0900

The patch robot should probably complain about those, right?
- Dan


From zgold550 at gmail.com  Mon Aug 11 16:27:02 2008
From: zgold550 at gmail.com (Zachary Goldberg)
Date: Mon, 11 Aug 2008 17:27:02 -0400
Subject: Patch formatting question: how picky should the robot be?
In-Reply-To: <a71bd89a0808111351v31e76d2bj653fdc45a7b2296f@mail.gmail.com>
References: <a71bd89a0808111351v31e76d2bj653fdc45a7b2296f@mail.gmail.com>
Message-ID: <b050a5e70808111427s143583btf259f5f1dae27747@mail.gmail.com>

On Mon, Aug 11, 2008 at 4:51 PM, Dan Kegel <dank at kegel.com> wrote:
> So, git generates patches like this:
>
> diff --git a/dlls/ddraw/tests/dsurface.c b/dlls/ddraw/tests/dsurface.c
> index da66e2e..4569997 100644
> --- a/dlls/ddraw/tests/dsurface.c
> +++ b/dlls/ddraw/tests/dsurface.c
>
> and that's the way we like it.
>
> And sometimes people generate patches with cvs, like
>
> http://winehq.org/pipermail/wine-patches/2008-August/059403.html
>
> diff -u -3 -p -r1.57 vga.c
> --- dlls/winedos/vga.c  14 Jul 2008 10:57:58 -0000      1.57
> +++ dlls/winedos/vga.c  27 Jul 2008 23:13:08 -0000
>
> (That even used to be the way we liked it.)
> That's ok, too, isn't it?
> If so, I'll make sure my patch robot can handle it.
>
>
> But what about patches like
>
> http://winehq.org/pipermail/wine-patches/2008-August/059404.html
>
> --- dlls/appwiz.cpl/appwiz.rc   2008-07-26 09:24:56.000000000 +0900
> +++ appwiz.rc   2008-07-28 09:48:00.000000000 +0900
> ...
> --- /dev/null   2008-07-28 09:27:06.210506864 +0900
> +++ Ko.rc       2008-07-28 09:48:00.000000000 +0900
>
> The patch robot should probably complain about those, right?
> - Dan
>
>
>

Are there factors in this decision other than Alexandre's convenience?


From dank at kegel.com  Mon Aug 11 18:10:56 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 11 Aug 2008 16:10:56 -0700
Subject: Patch formatting question: how picky should the robot be?
In-Reply-To: <b050a5e70808111427s143583btf259f5f1dae27747@mail.gmail.com>
References: <a71bd89a0808111351v31e76d2bj653fdc45a7b2296f@mail.gmail.com>
	<b050a5e70808111427s143583btf259f5f1dae27747@mail.gmail.com>
Message-ID: <a71bd89a0808111610m4b50dc44h9d12726413d8043e@mail.gmail.com>

On Mon, Aug 11, 2008 at 2:27 PM, Zachary Goldberg <zgold550 at gmail.com> wrote:
> Are there factors in this decision other than Alexandre's convenience?

He's the main voice, but others might feel strongly one way
or the other, too.


From infyquest at gmail.com  Mon Aug 11 18:31:09 2008
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Mon, 11 Aug 2008 19:31:09 -0400
Subject: Patchwatcher online
In-Reply-To: <a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
Message-ID: <36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>

Hi,

I have one more concern.
Its regarding running of tests.
When running tests for the patch, I think we should just run the tests
of the dlls that are affected direct;y or indirectly by that change.
its running the tests for entire wine, which is very time consuming.
What will happen if we have patch barrage, like once when alexander
comes from vacation.
How much time will that take for verification of the entire patch tree
submitted then.

Just my $0.02

Thanks,
VJ

On Mon, Aug 11, 2008 at 3:05 PM, Dan Kegel <dank at kegel.com> wrote:
> On Mon, Aug 11, 2008 at 10:13 AM, Michael Karcher
> <wine at mkarcher.dialup.fu-berlin.de> wrote:
>> Am Montag, den 11.08.2008, 09:45 -0700 schrieb Dan Kegel:
>>> The scripts now run conformance tests and report regressions.
>> Does "Ditto, but just the new error:"<end of output> mean that there are
>> no new errors?
>
> Yes.  Sorry, I'll tidy that up tonight, it really should say "no
> regressions found".
>
>
>


From dank at kegel.com  Mon Aug 11 18:42:02 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 11 Aug 2008 16:42:02 -0700
Subject: Patchwatcher online
In-Reply-To: <36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
Message-ID: <a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>

On Mon, Aug 11, 2008 at 4:31 PM, Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
> When running tests for the patch, I think we should just run the tests
> of the dlls that are affected direct;y or indirectly by that change.
> its running the tests for entire wine, which is very time consuming.

True, but hey, it was easier to code.  And getting anything like this
working at all is pretty hard.  Figuring out which tests a give
patch affects is an extra challenge I'd rather not face just now.
Once it's up and working well we can refine it.

> What will happen if we have patch barrage, like once when alexander
> comes from vacation.

It'll fall behind some.  If need be, I can run it on a really fast machine.
- dan


From infyquest at gmail.com  Mon Aug 11 19:13:25 2008
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Mon, 11 Aug 2008 20:13:25 -0400
Subject: Patchwatcher online
In-Reply-To: <a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
Message-ID: <36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>

On Mon, Aug 11, 2008 at 7:42 PM, Dan Kegel <dank at kegel.com> wrote:
> On Mon, Aug 11, 2008 at 4:31 PM, Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
>> When running tests for the patch, I think we should just run the tests
>> of the dlls that are affected direct;y or indirectly by that change.
>> its running the tests for entire wine, which is very time consuming.
>
> True, but hey, it was easier to code.  And getting anything like this
> working at all is pretty hard.  Figuring out which tests a give
> patch affects is an extra challenge I'd rather not face just now.
> Once it's up and working well we can refine it.
Ok I was expressing my concern as it took around 2-3hrs to see my
patch in the patchwatcher.
Also as you you running the wine tests all for each patch are you
cleaning the .wine directory ( I am bit confused here)
>
>> What will happen if we have patch barrage, like once when alexander
>> comes from vacation.
>
> It'll fall behind some.  If need be, I can run it on a really fast machine.
It would better if we have a parallelized version of the tests also
run on a fast m/c.
Also can you improve the messages.
If there are errors, Its possible to only show the test data that
failed rather than the complete test run.
Also put it in a public repository with you as sole commiter.
So If we have any suggestions/improvements, can mail you with the
changes (We will not flood ur mail box ;) )

----
VJ
> - dan
>


From dank at kegel.com  Mon Aug 11 19:34:42 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 11 Aug 2008 17:34:42 -0700
Subject: Patchwatcher online
In-Reply-To: <36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
	<36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>
Message-ID: <a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>

Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
> Ok I was expressing my concern as it took around 2-3hrs to see my
> patch in the patchwatcher.

It's running on a 1GHz single core machine right now.
I'll probably put it on something rather faster.

> Also as you you running the wine tests all for each patch are you
> cleaning the .wine directory ( I am bit confused here)

No.  Probably should, but I'm not.

> It would better if we have a parallelized version of the tests also
> run on a fast m/c.

I do have a patch that enables parallel execution of conformance
tests, I hope Alexandre accepts it.   That will help on multicore
systems.  Beyond that, I could fairly easily use multiple machines,
e.g. assign all patches to machines based on md5sum.

> Also can you improve the messages.

Yes.  I already changed the success message to make more sense,
and added background colors of green and red for success and failure.

> If there are errors, Its possible to only show the test data that
> failed rather than the complete test run.

Yes.

> Also put it in a public repository with you as sole commiter.

Already there, see http://code.google.com/p/winezeug/

> So If we have any suggestions/improvements, can mail you with the
> changes (We will not flood ur mail box ;) )

Please do.
- Dan


From zgold550 at gmail.com  Mon Aug 11 20:12:21 2008
From: zgold550 at gmail.com (Zachary Goldberg)
Date: Mon, 11 Aug 2008 21:12:21 -0400
Subject: Patchwatcher online
In-Reply-To: <a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
	<36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>
	<a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
Message-ID: <b050a5e70808111812x693f87ber27037a5b10352530@mail.gmail.com>

On Mon, Aug 11, 2008 at 8:34 PM, Dan Kegel <dank at kegel.com> wrote:
> Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
>> Ok I was expressing my concern as it took around 2-3hrs to see my
>> patch in the patchwatcher.
>
> It's running on a 1GHz single core machine right now.
> I'll probably put it on something rather faster.
>
>> Also as you you running the wine tests all for each patch are you
>> cleaning the .wine directory ( I am bit confused here)
>
> No.  Probably should, but I'm not.
>
>> It would better if we have a parallelized version of the tests also
>> run on a fast m/c.
>
> I do have a patch that enables parallel execution of conformance
> tests, I hope Alexandre accepts it.   That will help on multicore
> systems.  Beyond that, I could fairly easily use multiple machines,
> e.g. assign all patches to machines based on md5sum.
>
>> Also can you improve the messages.
>
> Yes.  I already changed the success message to make more sense,
> and added background colors of green and red for success and failure.
>
>> If there are errors, Its possible to only show the test data that
>> failed rather than the complete test run.
>
> Yes.
>
>> Also put it in a public repository with you as sole commiter.
>
> Already there, see http://code.google.com/p/winezeug/
>
>> So If we have any suggestions/improvements, can mail you with the
>> changes (We will not flood ur mail box ;) )
>
> Please do.
> - Dan
>
>
>


Dan, how are you handling the case when Alexandre floods the list with
commits?  One way I can think of to avoid those patches is to ignore
any patches emailed by Alexandre but aren't written by him.  Its not
the worst thing in the world if the script doesn't skip commits, just
some wasted perf.


From infyquest at gmail.com  Mon Aug 11 20:13:28 2008
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Mon, 11 Aug 2008 21:13:28 -0400
Subject: Patchwatcher online
In-Reply-To: <a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
	<36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>
	<a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
Message-ID: <36bf289b0808111813y4ec6f31as40ebcbccd32694a0@mail.gmail.com>

On Mon, Aug 11, 2008 at 8:34 PM, Dan Kegel <dank at kegel.com> wrote:
> Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
>> Ok I was expressing my concern as it took around 2-3hrs to see my
>> patch in the patchwatcher.
>
> It's running on a 1GHz single core machine right now.
> I'll probably put it on something rather faster.
>
Something around 2GHz would be ok
>> Also as you you running the wine tests all for each patch are you
>> cleaning the .wine directory ( I am bit confused here)
>
> No.  Probably should, but I'm not.
I think you should do that, if there are some changes that involve
wineserver and some change to registry.
>
>> It would better if we have a parallelized version of the tests also
>> run on a fast m/c.
>
> I do have a patch that enables parallel execution of conformance
> tests, I hope Alexandre accepts it.   That will help on multicore
> systems.  Beyond that, I could fairly easily use multiple machines,
> e.g. assign all patches to machines based on md5sum.
Ok, it would be interesting how parallelization could affect wine :)
>
>> Also can you improve the messages.
>
> Yes.  I already changed the success message to make more sense,
> and added background colors of green and red for success and failure.
>
Also add Yellow for ignored patches.
For ignored patches /i would like to add a second pass, when have to
check if the patch is generated by git or not
if not patch is being ignored now, for that we need to process the
patch to see whether we can extract some info to send the correct
patch level.
>> If there are errors, Its possible to only show the test data that
>> failed rather than the complete test run.
>
> Yes.
>
>> Also put it in a public repository with you as sole commiter.
>
> Already there, see http://code.google.com/p/winezeug/
>
Thanks
>> So If we have any suggestions/improvements, can mail you with the
>> changes (We will not flood ur mail box ;) )
>
> Please do.
I will look into it now
----
VJ


From wine-devel at kievinfo.com  Mon Aug 11 21:16:02 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Mon, 11 Aug 2008 20:16:02 -0600
Subject: Patch formatting question: how picky should the robot be?
In-Reply-To: <a71bd89a0808111610m4b50dc44h9d12726413d8043e@mail.gmail.com>
References: <a71bd89a0808111351v31e76d2bj653fdc45a7b2296f@mail.gmail.com>	<b050a5e70808111427s143583btf259f5f1dae27747@mail.gmail.com>
	<a71bd89a0808111610m4b50dc44h9d12726413d8043e@mail.gmail.com>
Message-ID: <48A0F262.5060508@kievinfo.com>

Dan Kegel wrote:
> On Mon, Aug 11, 2008 at 2:27 PM, Zachary Goldberg <zgold550 at gmail.com> wrote:
>> Are there factors in this decision other than Alexandre's convenience?
> 
> He's the main voice, but others might feel strongly one way
> or the other, too.
> 
> 
It's been the rule for a long time when we were using cvs - always diff from 
  the top of the tree.

Detecting git patch is pretty straight forward. With other patches, if you 
can't find referenced file starting from the top of the tree - generate 
warning and drop the patch.

Vitaliy.


From dank at kegel.com  Mon Aug 11 21:59:51 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 11 Aug 2008 19:59:51 -0700
Subject: Patchwatcher online
In-Reply-To: <b050a5e70808111812x693f87ber27037a5b10352530@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
	<36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>
	<a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
	<b050a5e70808111812x693f87ber27037a5b10352530@mail.gmail.com>
Message-ID: <a71bd89a0808111959h34bf66c9l9585ce4597bb2bb1@mail.gmail.com>

Zachary Goldberg <zgold550 at gmail.com> wrote:
> [much quoted text]

Please trim the quotes down a bit when you reply...

> Dan, how are you handling the case when Alexandre floods the list with
> commits?

See refresh_tree(),
http://code.google.com/p/winezeug/source/browse/trunk/patchwatcher/patchwatcher.sh#105
After processing each patch (or patch series),
patchwatcher check for git commits.  If
it finds any, it recomputes the expected test failures.
This is slow, but it only happens once or twice a day, so it's ok.

> One way I can think of to avoid those patches is to ignore
> any patches emailed by Alexandre but aren't written by him.

Alexandre never emails any patches at all, he just commits them directly.
So patchwatcher will never give any feedback on his changes.
- Dan


From dank at kegel.com  Mon Aug 11 22:02:13 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 11 Aug 2008 20:02:13 -0700
Subject: Patchwatcher online
In-Reply-To: <36bf289b0808111813y4ec6f31as40ebcbccd32694a0@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
	<36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>
	<a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
	<36bf289b0808111813y4ec6f31as40ebcbccd32694a0@mail.gmail.com>
Message-ID: <a71bd89a0808112002u289456a2v8c218126e4b68665@mail.gmail.com>

Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
> Also add Yellow for ignored patches.

Let me think on that a bit.  Probably.

> For ignored patches /i would like to add a second pass, when have to
> check if the patch is generated by git or not
> if not patch is being ignored now, for that we need to process the
> patch to see whether we can extract some info to send the correct
> patch level.

Yes, I plan to add a little code to try to guess the right
argument to -p.
- Dan


From infyquest at gmail.com  Mon Aug 11 22:32:42 2008
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Mon, 11 Aug 2008 23:32:42 -0400
Subject: Patchwatcher online
In-Reply-To: <a71bd89a0808112002u289456a2v8c218126e4b68665@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
	<36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>
	<a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
	<36bf289b0808111813y4ec6f31as40ebcbccd32694a0@mail.gmail.com>
	<a71bd89a0808112002u289456a2v8c218126e4b68665@mail.gmail.com>
Message-ID: <36bf289b0808112032x70295732r633bd6b184997a0d@mail.gmail.com>

On Mon, Aug 11, 2008 at 11:02 PM, Dan Kegel <dank at kegel.com> wrote:
> Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
>> Also add Yellow for ignored patches.
>
> Let me think on that a bit.  Probably.
>
>> For ignored patches /i would like to add a second pass, when have to
>> check if the patch is generated by git or not
>> if not patch is being ignored now, for that we need to process the
>> patch to see whether we can extract some info to send the correct
>> patch level.
>
> Yes, I plan to add a little code to try to guess the right
> argument to -p.
Ahh... I forgot how to handle dependent patches, if they are not in a
patch series
Sorry, I always seem to get all kinda of weird ideas about how things
can  go wrong
----
VJ


From dank at kegel.com  Mon Aug 11 22:52:58 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 11 Aug 2008 20:52:58 -0700
Subject: Patchwatcher online
In-Reply-To: <36bf289b0808112032x70295732r633bd6b184997a0d@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
	<36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>
	<a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
	<36bf289b0808111813y4ec6f31as40ebcbccd32694a0@mail.gmail.com>
	<a71bd89a0808112002u289456a2v8c218126e4b68665@mail.gmail.com>
	<36bf289b0808112032x70295732r633bd6b184997a0d@mail.gmail.com>
Message-ID: <a71bd89a0808112052l175a0964r38bfeb5776573869@mail.gmail.com>

Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
> Ahh... I forgot how to handle dependent patches, if they are not in a
> patch series

I don't know if there's a good way to handle those.
Maybe just encourage people not to send them :-)


From dmitry at codeweavers.com  Mon Aug 11 22:59:19 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 12 Aug 2008 12:59:19 +0900
Subject: [advapi32] - Add stub for
	ConvertToAutoInheritPrivateObjectSecurity
References: <36bf289b0808111250j6cb897eav2092a253e8c5311f@mail.gmail.com>
Message-ID: <63932DC3796145BF88E04CF878E62873@DMITRY>

"Vijay Kiran Kamuju" <infyquest at gmail.com> wrote:

> +BOOL WINAPI ConvertToAutoInheritPrivateObjectSecurity(
> +        PSECURITY_DESCRIPTOR ParentDescriptor,
> +        PSECURITY_DESCRIPTOR CreatorDescriptor,
> +        PSECURITY_DESCRIPTOR* NewDescriptor,
> +        GUID* ObjectType,
> +        BOOL IsDirectoryObject,
> +        PGENERIC_MAPPING GenericMapping )
> +{
> +    FIXME("%p %p %p %p %d %p - stub\n", ParentDescriptor, CreatorDescriptor,
> +          NewDescriptor, ObjectType, IsDirectoryObject, GenericMapping);
> +
> +    return FALSE;
> +}

It would be better to not copy variable names from MSDN/PSDK and come up
with your own naming. Say, (parent, creator, new, type, is_directory, mapping)
would work.

> --- a/include/winbase.h
> +++ b/include/winbase.h
> @@ -1373,6 +1373,7 @@ WINBASEAPI HANDLE      WINAPI CreateNamedPipeW(LPCWSTR,DWORD,DWORD,DWORD,DWORD,D
>  #define                       CreateNamedPipe WINELIB_NAME_AW(CreateNamedPipe)
>  WINBASEAPI BOOL        WINAPI CreatePipe(PHANDLE,PHANDLE,LPSECURITY_ATTRIBUTES,DWORD);
>  WINADVAPI  BOOL        WINAPI 
> CreatePrivateObjectSecurity(PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR*,BOOL,HANDLE,PGENERIC_MAPPING);
> +WINADVAPI  BOOL        WINAPI 
> ConvertToAutoInheritPrivateObjectSecurity(PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR*,GUID*,BOOL,PGENERIC_MAPPING);
>  WINBASEAPI BOOL        WINAPI 
> CreateProcessA(LPCSTR,LPSTR,LPSECURITY_ATTRIBUTES,LPSECURITY_ATTRIBUTES,BOOL,DWORD,LPVOID,LPCSTR,LPSTARTUPINFOA,LPPROCESS_INFORMATION);
>  WINBASEAPI BOOL        WINAPI 
> CreateProcessW(LPCWSTR,LPWSTR,LPSECURITY_ATTRIBUTES,LPSECURITY_ATTRIBUTES,BOOL,DWORD,LPVOID,LPCWSTR,LPSTARTUPINFOW,LPPROCESS_INFORMATION);
>  #define                       CreateProcess WINELIB_NAME_AW(CreateProcess)

Please keep the entries alphabetically sorted.

-- 
Dmitry. 



From zgold550 at gmail.com  Mon Aug 11 23:04:53 2008
From: zgold550 at gmail.com (Zachary Goldberg)
Date: Tue, 12 Aug 2008 00:04:53 -0400
Subject: Patchwatcher online
In-Reply-To: <a71bd89a0808112052l175a0964r38bfeb5776573869@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
	<36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>
	<a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
	<36bf289b0808111813y4ec6f31as40ebcbccd32694a0@mail.gmail.com>
	<a71bd89a0808112002u289456a2v8c218126e4b68665@mail.gmail.com>
	<36bf289b0808112032x70295732r633bd6b184997a0d@mail.gmail.com>
	<a71bd89a0808112052l175a0964r38bfeb5776573869@mail.gmail.com>
Message-ID: <b050a5e70808112104m1c1196cakef0f37b8d3b4d7e5@mail.gmail.com>

On Mon, Aug 11, 2008 at 11:52 PM, Dan Kegel <dank at kegel.com> wrote:
> Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
>> Ahh... I forgot how to handle dependent patches, if they are not in a
>> patch series
>
> I don't know if there's a good way to handle those.
> Maybe just encourage people not to send them :-)
>
>
>

Policy is that all patches should be independent, no?


(Sorry about big quoting, gmail just compresses it so nicely)


From dmitry at codeweavers.com  Mon Aug 11 23:14:12 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 12 Aug 2008 13:14:12 +0900
Subject: Patchwatcher online
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com><a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com><36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com><a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com><36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com><a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com><36bf289b0808111813y4ec6f31as40ebcbccd32694a0@mail.gmail.com><a71bd89a0808112002u289456a2v8c218126e4b68665@mail.gmail.com><36bf289b0808112032x70295732r633bd6b184997a0d@mail.gmail.com><a71bd89a0808112052l175a0964r38bfeb5776573869@mail.gmail.com>
	<b050a5e70808112104m1c1196cakef0f37b8d3b4d7e5@mail.gmail.com>
Message-ID: <8AB24A0C77EE4206804262F71AF5C772@DMITRY>

"Zachary Goldberg" <zgold550 at gmail.com> wrote:

> Policy is that all patches should be independent, no?

There is no such a policy. Dependent patches are marked as
1/xx, 2/xx, ... xx/xx.

-- 
Dmitry.


From dank at kegel.com  Tue Aug 12 00:24:48 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 11 Aug 2008 22:24:48 -0700
Subject: Patchwatcher online
In-Reply-To: <8AB24A0C77EE4206804262F71AF5C772@DMITRY>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
	<36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>
	<a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
	<36bf289b0808111813y4ec6f31as40ebcbccd32694a0@mail.gmail.com>
	<a71bd89a0808112002u289456a2v8c218126e4b68665@mail.gmail.com>
	<36bf289b0808112032x70295732r633bd6b184997a0d@mail.gmail.com>
	<a71bd89a0808112052l175a0964r38bfeb5776573869@mail.gmail.com>
	<b050a5e70808112104m1c1196cakef0f37b8d3b4d7e5@mail.gmail.com>
	<8AB24A0C77EE4206804262F71AF5C772@DMITRY>
Message-ID: <a71bd89a0808112224j61a2b408ic3cc5cdf9ad7a656@mail.gmail.com>

Dmitry Timoshkov <dmitry at codeweavers.com> wrote:
> "Zachary Goldberg" <zgold550 at gmail.com> wrote:
>
>> Policy is that all patches should be independent, no?
>
> There is no such a policy. Dependent patches are marked as
> 1/xx, 2/xx, ... xx/xx.

That's a patch series, and patchwatcher handles that ok.

There's another kind of dependent patch, where somebody
says "This requires Harold's patch from yesterday".
Patchwatcher probably isn't going to handle that ever.


From dmitry at codeweavers.com  Tue Aug 12 00:43:53 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 12 Aug 2008 14:43:53 +0900
Subject: Patchwatcher online
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com><a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com><36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com><a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com><36bf289b0808111813y4ec6f31as40ebcbccd32694a0@mail.gmail.com><a71bd89a0808112002u289456a2v8c218126e4b68665@mail.gmail.com><36bf289b0808112032x70295732r633bd6b184997a0d@mail.gmail.com><a71bd89a0808112052l175a0964r38bfeb5776573869@mail.gmail.com><b050a5e70808112104m1c1196cakef0f37b8d3b4d7e5@mail.gmail.com><8AB24A0C77EE4206804262F71AF5C772@DMITRY>
	<a71bd89a0808112224j61a2b408ic3cc5cdf9ad7a656@mail.gmail.com>
Message-ID: <B6BA1850A4B34895B160E8FCDA2AC7FF@DMITRY>

"Dan Kegel" <dank at kegel.com> wrote:

> That's a patch series, and patchwatcher handles that ok.
> 
> There's another kind of dependent patch, where somebody
> says "This requires Harold's patch from yesterday".
> Patchwatcher probably isn't going to handle that ever.

Well, that happens not that often, so this can be safely ignored
for now I think.

-- 
Dmitry.


From paul.vriens.wine at gmail.com  Tue Aug 12 01:01:25 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Tue, 12 Aug 2008 08:01:25 +0200
Subject: Patchwatcher online
In-Reply-To: <a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>	<1218474805.13374.53.camel@hermes2.karcher.local>	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
Message-ID: <48A12735.1040408@gmail.com>

Dan Kegel wrote:
> On Mon, Aug 11, 2008 at 4:31 PM, Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
>> When running tests for the patch, I think we should just run the tests
>> of the dlls that are affected direct;y or indirectly by that change.
>> its running the tests for entire wine, which is very time consuming.
> 
> True, but hey, it was easier to code.  And getting anything like this
> working at all is pretty hard.  Figuring out which tests a give
> patch affects is an extra challenge I'd rather not face just now.
> Once it's up and working well we can refine it.

I'd argue that testing just the affected dll is correct. What about things like 
patches to ntdll/kernel32/advapi32 (and the likes). They could influence far 
more tests then just the ones for it's own dll.

-- 
Cheers,

Paul.


From truiken at gmail.com  Tue Aug 12 01:53:43 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 12 Aug 2008 01:53:43 -0500
Subject: Patchwatcher online
In-Reply-To: <48A12735.1040408@gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
	<48A12735.1040408@gmail.com>
Message-ID: <22821af30808112353q62b2c364o7c0f4a60534c79cb@mail.gmail.com>

On Tue, Aug 12, 2008 at 1:01 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> Dan Kegel wrote:
>> On Mon, Aug 11, 2008 at 4:31 PM, Vijay Kiran Kamuju <infyquest at gmail.com> wrote:
>>> When running tests for the patch, I think we should just run the tests
>>> of the dlls that are affected direct;y or indirectly by that change.
>>> its running the tests for entire wine, which is very time consuming.
>>
>> True, but hey, it was easier to code.  And getting anything like this
>> working at all is pretty hard.  Figuring out which tests a give
>> patch affects is an extra challenge I'd rather not face just now.
>> Once it's up and working well we can refine it.
>
> I'd argue that testing just the affected dll is correct. What about things like
> patches to ntdll/kernel32/advapi32 (and the likes). They could influence far
> more tests then just the ones for it's own dll.
>

Which is an argument for why you should test the entire tree for each
patch.  If a patch to ntdll makes tests in another dll fail, the patch
should be rejected just as if the ntdll tests failed.  This is how
Julliard's work flow goes, so the test bot should do the same.

-- 
James Hawkins


From dmitry at codeweavers.com  Tue Aug 12 04:26:39 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 12 Aug 2008 18:26:39 +0900
Subject: [TRY 2] Add tests for checking the parent notification for
	editcontrol
References: <200808121238.18844.shpigor@etersoft.ru>
Message-ID: <14805116D2DB47C7A864EDD84EC67D87@DMITRY>

"Ilya Shpigor" <shpigor at etersoft.ru> wrote:

> - /* why do we notify to es->hwndParent, and we send this one to GetParent()? */
> + /* All notifies are send to es->hwndParent
> +  * except the WM_CTLCOLORSTATIC and WM_CTLCOLOREDIT.
> +  * Its are send to the current parent.
> +  */
>          hbrush = (HBRUSH)SendMessageW(GetParent(es->hwndSelf), msg, (WPARAM)hdc, (LPARAM)es->hwndSelf);
>          if (!hbrush)
>              hbrush = (HBRUSH)DefWindowProcW(GetParent(es->hwndSelf), msg, (WPARAM)hdc, (LPARAM)es->hwndSelf);

My question regarding this part left unanswered. Are there the tests
confirming your statement in the comment? Also, please avoid adding
not related message tests. If you are trying to show which parent
receives the notification you need to create your own parent window
procs or somehow tell an existing one to mark the notifications, so that
it would be easy to distinguish the source of a notification.

-- 
Dmitry.


From dmitry at codeweavers.com  Tue Aug 12 06:56:09 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 12 Aug 2008 20:56:09 +0900
Subject: [TRY 3] Add tests for checking the parent notification for
	editcontrol
References: <200808121447.47186.shpigor@etersoft.ru>
Message-ID: <16133083A7414A82A7BA5B2FD3D05FAA@DMITRY>

"Ilya Shpigor" <shpigor at etersoft.ru> wrote:

What is the difference between wpParent1 and wpParent2 besides slightly
different indentation and 1 superfluous 'break' statement?

> > - /* why do we notify to es->hwndParent, and we send this one to GetParent()? */
> > + /* All notifies are send to es->hwndParent
> > + * except the WM_CTLCOLORSTATIC and WM_CTLCOLOREDIT.
> > + * Its are send to the current parent.
> > + */
> > hbrush = (HBRUSH)SendMessageW(GetParent(es->hwndSelf), msg, (WPARAM)hdc, (LPARAM)es->hwndSelf);
> > if (!hbrush)
> > hbrush = (HBRUSH)DefWindowProcW(GetParent(es->hwndSelf), msg, (WPARAM)hdc, (LPARAM)es->hwndSelf);
> 
> This tests confirming my statement in the comment. If we change 
> GetParent(es->hwndSelf) to es->hwndParent the tests will be failed.

I don't see the tests confirming the comment. Why are you adding the whole
new message handling code to edit.c (which complicates things a lot, and makes
it less clear what you are trying to do) while msg.c already has everything
required, and it already contains the edit message tests?

-- 
Dmitry.


From celticht32 at aol.com  Tue Aug 12 08:47:07 2008
From: celticht32 at aol.com (celticht32 at aol.com)
Date: Tue, 12 Aug 2008 09:47:07 -0400
Subject: patchwatcher online
Message-ID: <8CACA990B815414-300-B63@webmail-db06.sysops.aol.com>

couldn't you instead when the patchwatcher takes the patch it assigns it a patch # and require if there is a patch dependency? that the person put into a comment REQ_PATCH: 123456,15456, etc.. ? That way when a diff is done for the patch it would appear in the patch diff?

Then patchwatcher would make sure thats in the tree if its accepted and if that req. patch was not accepted then the new patch is automatically 
rejected?

Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080812/f5e5e993/attachment.htm 

From wine at mkarcher.dialup.fu-berlin.de  Tue Aug 12 09:04:51 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Tue, 12 Aug 2008 16:04:51 +0200
Subject: Patchwatcher online
In-Reply-To: <a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
	<36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>
	<a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
Message-ID: <1218549891.11412.6.camel@hermes2.karcher.local>

Am Montag, den 11.08.2008, 17:34 -0700 schrieb Dan Kegel:
> Yes.  I already changed the success message to make more sense,
> and added background colors of green and red for success and failure.
I dislike the implementation, while I like the idea. You now have:

a:visited { color: #FF0000; }
.fail { background color: #ff5050; }

At least on my laptop display, #ff5050 on #ff0000 is quite hard to read.

Regards,
  Michael Karcher



From dank at kegel.com  Tue Aug 12 10:24:02 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 12 Aug 2008 08:24:02 -0700
Subject: patchwatcher online
In-Reply-To: <8CACA990B815414-300-B63@webmail-db06.sysops.aol.com>
References: <8CACA990B815414-300-B63@webmail-db06.sysops.aol.com>
Message-ID: <a71bd89a0808120824x94d6c84q9435382c4a0809b0@mail.gmail.com>

On Tue, Aug 12, 2008 at 6:47 AM,  <celticht32 at aol.com> wrote:
> couldn't you instead when the patchwatcher takes the patch it assigns it a
> patch # and require if there is a patch dependency  that the person put into
> a comment REQ_PATCH: 123456,15456, etc.. ?

Yes, perhaps if patchwatcher catches on and becomes a
central part of Wine's workflow, that would be worth it.


From infyquest at gmail.com  Tue Aug 12 10:25:16 2008
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Tue, 12 Aug 2008 11:25:16 -0400
Subject: Patchwatcher online
In-Reply-To: <1218549891.11412.6.camel@hermes2.karcher.local>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
	<36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>
	<a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
	<1218549891.11412.6.camel@hermes2.karcher.local>
Message-ID: <36bf289b0808120825p7f388dadge89472d18d0f51da@mail.gmail.com>

>> Yes.  I already changed the success message to make more sense,
>> and added background colors of green and red for success and failure.
> I dislike the implementation, while I like the idea. You now have:
>
> a:visited { color: #FF0000; }
> .fail { background color: #ff5050; }
>
> At least on my laptop display, #ff5050 on #ff0000 is quite hard to read.
I think making the a:visited link for pass or fail to be balck is good enough.
I think this should do the trick.
.pass a:visited { color: #000000; }
.fail a:visited { color: #000000; }
>
---
VJ


From dank at kegel.com  Tue Aug 12 10:26:53 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 12 Aug 2008 08:26:53 -0700
Subject: Patchwatcher online
In-Reply-To: <1218549891.11412.6.camel@hermes2.karcher.local>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
	<36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>
	<a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
	<1218549891.11412.6.camel@hermes2.karcher.local>
Message-ID: <a71bd89a0808120826m5fe7390t943f297993b6a79b@mail.gmail.com>

Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> wrote:
>> Yes.  I already changed the success message to make more sense,
>> and added background colors of green and red for success and failure.
> I dislike the implementation, while I like the idea. You now have:
>
> a:visited { color: #FF0000; }
> .fail { background color: #ff5050; }
>
> At least on my laptop display, #ff5050 on #ff0000 is quite hard to read.

Yeah, I know.  I fiddled with the colors for a while, but not very effectively.
I'm partly color-blind, and am not really the best person to
work on the look of the reports page.  If somebody else would like
to get the colors right, I'd gladly accept patches.

Would using black for foreground uniformly be more acceptable?


From infyquest at gmail.com  Tue Aug 12 10:30:20 2008
From: infyquest at gmail.com (Vijay Kiran Kamuju)
Date: Tue, 12 Aug 2008 11:30:20 -0400
Subject: [advapi32] - Add stub for
	ConvertToAutoInheritPrivateObjectSecurity
In-Reply-To: <63932DC3796145BF88E04CF878E62873@DMITRY>
References: <36bf289b0808111250j6cb897eav2092a253e8c5311f@mail.gmail.com>
	<63932DC3796145BF88E04CF878E62873@DMITRY>
Message-ID: <36bf289b0808120830u6b60353fyd109c3d6e5ffd3ce@mail.gmail.com>

On Mon, Aug 11, 2008 at 11:59 PM, Dmitry Timoshkov
<dmitry at codeweavers.com> wrote:
> "Vijay Kiran Kamuju" <infyquest at gmail.com> wrote:
>
>> +BOOL WINAPI ConvertToAutoInheritPrivateObjectSecurity(
>> +        PSECURITY_DESCRIPTOR ParentDescriptor,
>> +        PSECURITY_DESCRIPTOR CreatorDescriptor,
>> +        PSECURITY_DESCRIPTOR* NewDescriptor,
>> +        GUID* ObjectType,
>> +        BOOL IsDirectoryObject,
>> +        PGENERIC_MAPPING GenericMapping )
>> +{
>> +    FIXME("%p %p %p %p %d %p - stub\n", ParentDescriptor,
>> CreatorDescriptor,
>> +          NewDescriptor, ObjectType, IsDirectoryObject, GenericMapping);
>> +
>> +    return FALSE;
>> +}
>
> It would be better to not copy variable names from MSDN/PSDK and come up
> with your own naming. Say, (parent, creator, new, type, is_directory,
> mapping)
> would work.
I just used the CreatePrivateObjectSecurity as an example, it used
MSDN/PSDK naming.
>
>> --- a/include/winbase.h
>> +++ b/include/winbase.h
>> @@ -1373,6 +1373,7 @@ WINBASEAPI HANDLE      WINAPI
>> CreateNamedPipeW(LPCWSTR,DWORD,DWORD,DWORD,DWORD,D
>>  #define                       CreateNamedPipe
>> WINELIB_NAME_AW(CreateNamedPipe)
>>  WINBASEAPI BOOL        WINAPI
>> CreatePipe(PHANDLE,PHANDLE,LPSECURITY_ATTRIBUTES,DWORD);
>>  WINADVAPI  BOOL        WINAPI
>> CreatePrivateObjectSecurity(PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR*,BOOL,HANDLE,PGENERIC_MAPPING);
>> +WINADVAPI  BOOL        WINAPI
>> ConvertToAutoInheritPrivateObjectSecurity(PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR*,GUID*,BOOL,PGENERIC_MAPPING);
>>  WINBASEAPI BOOL        WINAPI
>> CreateProcessA(LPCSTR,LPSTR,LPSECURITY_ATTRIBUTES,LPSECURITY_ATTRIBUTES,BOOL,DWORD,LPVOID,LPCSTR,LPSTARTUPINFOA,LPPROCESS_INFORMATION);
>>  WINBASEAPI BOOL        WINAPI
>> CreateProcessW(LPCWSTR,LPWSTR,LPSECURITY_ATTRIBUTES,LPSECURITY_ATTRIBUTES,BOOL,DWORD,LPVOID,LPCWSTR,LPSTARTUPINFOW,LPPROCESS_INFORMATION);
>>  #define                       CreateProcess
>> WINELIB_NAME_AW(CreateProcess)
>
> Please keep the entries alphabetically sorted.
Ok.
I will send another version with the changes soon.
>
---
VJ


From wine at mkarcher.dialup.fu-berlin.de  Tue Aug 12 11:03:30 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Tue, 12 Aug 2008 18:03:30 +0200
Subject: Patchwatcher online
In-Reply-To: <a71bd89a0808120826m5fe7390t943f297993b6a79b@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808110945s20f34984x4c69e75f965abf1a@mail.gmail.com>
	<1218474805.13374.53.camel@hermes2.karcher.local>
	<a71bd89a0808111205w27905a1audc121cb0771fa988@mail.gmail.com>
	<36bf289b0808111631o1e8eaa67wa91f315825133a67@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
	<36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>
	<a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
	<1218549891.11412.6.camel@hermes2.karcher.local>
	<a71bd89a0808120826m5fe7390t943f297993b6a79b@mail.gmail.com>
Message-ID: <1218557010.11412.18.camel@hermes2.karcher.local>

Am Dienstag, den 12.08.2008, 08:26 -0700 schrieb Dan Kegel:
> Yeah, I know.  I fiddled with the colors for a while, but not very effectively.
> I'm partly color-blind, and am not really the best person to
> work on the look of the reports page.  If somebody else would like
> to get the colors right, I'd gladly accept patches.
> 
> Would using black for foreground uniformly be more acceptable?
Looks better now.

UI suggestion: If tests fail, format the status column like this
instead:

  <a href="results/1.diff">5 regressions</a> in <a
href="results/1.log">tests</a>

where results/1.diff just contains the diff output that is currently
appended to the log file.

I have the impression that the whole table just is too wide. For me,
real name would definitely be shorter than e-mail address, but using?
Yet it would be even greater if my patches would get green. They seem to
fail afoul flaky tests, but you are already aware of that problem.
adresses might be advantageous because they are (a) unique and (b)
definitely ASCII charset. Also subjects might be shortened by removing
PATCH (I am sorry, but I didn't get git to number the series and not
output "PATCH", any hints welcome!) and cutting the subject after 40
characters.

Still, besides all the critique: Great work!

Regards,
  Michael Karcher

PS:? Yet patchwatcher would be even greater if my patches would get
green. They seem to fail afoul flaky tests, but you are already aware of
that problem.



From dank at kegel.com  Tue Aug 12 12:45:51 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 12 Aug 2008 10:45:51 -0700
Subject: patchwatcher online
In-Reply-To: <3f4fd2640808121029qc62ccf3o869ac0abe01ac238@mail.gmail.com>
References: <8CACA990B815414-300-B63@webmail-db06.sysops.aol.com>
	<a71bd89a0808120824x94d6c84q9435382c4a0809b0@mail.gmail.com>
	<3f4fd2640808121029qc62ccf3o869ac0abe01ac238@mail.gmail.com>
Message-ID: <a71bd89a0808121045o328fbf0fp5f4140550de80dbb@mail.gmail.com>

On Tue, Aug 12, 2008 at 10:29 AM, Reece Dunn <msclrhd at googlemail.com> wrote:
> I use GMail to do something similar - tag mail I send to wine-patches
> with a 'wine-tracking' label, as well as the 'wine-patches' label it
> gets from the mailing list filter I have. This allows me to see all
> active patches I currently have. Once Alexandre commits them, I
> manually remove the 'wine-tracking' label; similarly if there are
> comments on it that mean I need to provide a revised patch.

Potentially patchwatcher could monitor wine-devel for replies
to the patch.   The other patch monitoring systems out
there do something similar; see
http://bundlebuggy.aaronbentley.com/ and
http://patchwork.ozlabs.org/linuxppc/

> Where patchwatcher would be useful is to know whether Alexandre has
> looked at the patch yet (no more "dly" on #winehackers) and has
> rejected it - hopefully with comments as to why!

Yes, but that's harder than:

> It should also help catch the patches that do not apply, or cause
> regressions in the tests, which should help Alexandre.

which is my primary goal.

> It will also mean that patches are not lost in a flood
> (e.g. coming back off holiday).

Perhaps, if it becomes a real workflow application,
but resubmitting fresh patches is often required
anyway...
- Dan


From dank at kegel.com  Tue Aug 12 12:58:47 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 12 Aug 2008 10:58:47 -0700
Subject: Flaky tests are starting to get real annoying...
Message-ID: <a71bd89a0808121058k1217c0f3p9e64fff7cd69032a@mail.gmail.com>

So, one of the things one learns when writing a
patch robot is that flaky tests are very annoying.

Each time it gets a new git tree,
the robot does five baseline "make -k test" runs,
remembers the tests that fail, and doesn't penalize
patches for failing any of those tests.  See
http://code.google.com/p/winezeug/source/browse/trunk/patchwatcher/patchwatcher.sh#92

Annoyingly, that's not enough.  Some tests
stubbornly refuse to fail during the baseline test
runs.  So I added a second, manual blacklist
for those tests; see
http://code.google.com/p/winezeug/source/browse/trunk/patchwatcher/patchwatcher.sh#63
The list is currently
 user32:msg.c
 user32:input.c
 d3d9:visual.c
 ddraw:visual.c
 urlmon:protocol.c
 kernel32:thread.c
and will continue growing as I keep plugging away at getting the
patch robot happy.

Is anybody else seeing this kind of flakiness?
(If you're not, try running patchwatcher for a while :-)

FWIW, I'm running the tests on hardy with a fresh metacity
(as described in http://wiki.winehq.org/MakeTestFailures ).


From adam at tpetaccia.com  Tue Aug 12 15:39:03 2008
From: adam at tpetaccia.com (Adam Petaccia)
Date: Tue, 12 Aug 2008 16:39:03 -0400
Subject: Patchwatcher online
In-Reply-To: <a71bd89a0808112224j61a2b408ic3cc5cdf9ad7a656@mail.gmail.com>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808111642u5e82627ctbcda708b2b5734f9@mail.gmail.com>
	<36bf289b0808111713i754fb6afq40e94330082c343a@mail.gmail.com>
	<a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
	<36bf289b0808111813y4ec6f31as40ebcbccd32694a0@mail.gmail.com>
	<a71bd89a0808112002u289456a2v8c218126e4b68665@mail.gmail.com>
	<36bf289b0808112032x70295732r633bd6b184997a0d@mail.gmail.com>
	<a71bd89a0808112052l175a0964r38bfeb5776573869@mail.gmail.com>
	<b050a5e70808112104m1c1196cakef0f37b8d3b4d7e5@mail.gmail.com>
	<8AB24A0C77EE4206804262F71AF5C772@DMITRY>
	<a71bd89a0808112224j61a2b408ic3cc5cdf9ad7a656@mail.gmail.com>
Message-ID: <1218573543.6868.7.camel@belthazor-saved>

On Mon, 2008-08-11 at 22:24 -0700, Dan Kegel wrote:
> Dmitry Timoshkov <dmitry at codeweavers.com> wrote:
> > "Zachary Goldberg" <zgold550 at gmail.com> wrote:
> >
> >> Policy is that all patches should be independent, no?
> >
> > There is no such a policy. Dependent patches are marked as
> > 1/xx, 2/xx, ... xx/xx.
> 
> That's a patch series, and patchwatcher handles that ok.
> 
> There's another kind of dependent patch, where somebody
> says "This requires Harold's patch from yesterday".
> Patchwatcher probably isn't going to handle that ever.

What about checking for a string in the email like "patchwatchignore";
if for some reason the patch is known to cause a failure the e-mail
might read like:
	patchwatchignore
	This depends on Harald's patch from yesterday...
	[patch]

This also might be useful for patches which update comments or README
files, etc.



From dank at kegel.com  Tue Aug 12 15:50:34 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 12 Aug 2008 13:50:34 -0700
Subject: Patchwatcher online
In-Reply-To: <1218573543.6868.7.camel@belthazor-saved>
References: <a71bd89a0808092101u162e22dbjd14babf82a8fd06c@mail.gmail.com>
	<a71bd89a0808111734v15d3962fqad6de00dcf0efaff@mail.gmail.com>
	<36bf289b0808111813y4ec6f31as40ebcbccd32694a0@mail.gmail.com>
	<a71bd89a0808112002u289456a2v8c218126e4b68665@mail.gmail.com>
	<36bf289b0808112032x70295732r633bd6b184997a0d@mail.gmail.com>
	<a71bd89a0808112052l175a0964r38bfeb5776573869@mail.gmail.com>
	<b050a5e70808112104m1c1196cakef0f37b8d3b4d7e5@mail.gmail.com>
	<8AB24A0C77EE4206804262F71AF5C772@DMITRY>
	<a71bd89a0808112224j61a2b408ic3cc5cdf9ad7a656@mail.gmail.com>
	<1218573543.6868.7.camel@belthazor-saved>
Message-ID: <a71bd89a0808121350i2755a8dambdebb0890f8e0670@mail.gmail.com>

On Tue, Aug 12, 2008 at 1:39 PM, Adam Petaccia <adam at tpetaccia.com> wrote:
> What about checking for a string in the email like "patchwatchignore";
> if for some reason the patch is known to cause a failure the e-mail
> might read like:
>        patchwatchignore
>        This depends on Harald's patch from yesterday...
>        [patch]

If patchwatcher becomes a gatekeeper, we will add a bypass like that.

> This also might be useful for patches which update comments or README
> files, etc.

It's a lot easier to let the hardware run the tests, and as long as
the hardware is fast enough to not get backlogged, the payoff
for using the bypass for doc-only changes is small.


From msclrhd at googlemail.com  Tue Aug 12 12:29:27 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Tue, 12 Aug 2008 18:29:27 +0100
Subject: patchwatcher online
In-Reply-To: <a71bd89a0808120824x94d6c84q9435382c4a0809b0@mail.gmail.com>
References: <8CACA990B815414-300-B63@webmail-db06.sysops.aol.com>
	<a71bd89a0808120824x94d6c84q9435382c4a0809b0@mail.gmail.com>
Message-ID: <3f4fd2640808121029qc62ccf3o869ac0abe01ac238@mail.gmail.com>

2008/8/12 Dan Kegel <dank at kegel.com>:
> On Tue, Aug 12, 2008 at 6:47 AM,  <celticht32 at aol.com> wrote:
>> couldn't you instead when the patchwatcher takes the patch it assigns it a
>> patch # and require if there is a patch dependency  that the person put into
>> a comment REQ_PATCH: 123456,15456, etc.. ?
>
> Yes, perhaps if patchwatcher catches on and becomes a
> central part of Wine's workflow, that would be worth it.

I like the idea of patchwatcher.

I use GMail to do something similar - tag mail I send to wine-patches
with a 'wine-tracking' label, as well as the 'wine-patches' label it
gets from the mailing list filter I have. This allows me to see all
active patches I currently have. Once Alexandre commits them, I
manually remove the 'wine-tracking' label; similarly if there are
comments on it that mean I need to provide a revised patch.

Where patchwatcher would be useful is to know whether Alexandre has
looked at the patch yet (no more "dly" on #winehackers) and has
rejected it - hopefully with comments as to why!

It should also help catch the patches that do not apply, or cause
regressions in the tests, which should help Alexandre. It will also
mean that patches are not lost in a flood (e.g. coming back off
holiday).

So yeah, I like the idea.

- Reece


From wine at mkarcher.dialup.fu-berlin.de  Tue Aug 12 16:37:06 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Tue, 12 Aug 2008 23:37:06 +0200
Subject: Flaky tests are starting to get real annoying...
In-Reply-To: <a71bd89a0808121058k1217c0f3p9e64fff7cd69032a@mail.gmail.com>
References: <a71bd89a0808121058k1217c0f3p9e64fff7cd69032a@mail.gmail.com>
Message-ID: <1218577026.11412.36.camel@hermes2.karcher.local>

Am Dienstag, den 12.08.2008, 10:58 -0700 schrieb Dan Kegel:
> The list is currently
>  user32:msg.c
>  user32:input.c
Same problems here. Metacity 2.23.21, compiled myself.

>  d3d9:visual.c
>  ddraw:visual.c
The last two are really nasty. Take a look at ddraw/tests/visual.c:2624.
It makes a kind of "basic assurance test" whether it might be going to
work. If this basic test fails, the whole visual test is skipped. The
test passes only on my machine if it already fails the sanity check,
otherwise I get some failures. Usually rerunning make test after a
failed visual test runs into a sanity check failure. [That is on Intel
945 graphics hardware]

>  urlmon:protocol.c
>  kernel32:thread.c
I don't rember these, but I most test runs I did were around 1.0, and
these might have changed.

> Is anybody else seeing this kind of flakiness?
> (If you're not, try running patchwatcher for a while :-)
Yes, I do, see above.

Regards,
  Michael Karcher



From razielmine at gmail.com  Tue Aug 12 16:58:51 2008
From: razielmine at gmail.com (Ismael Barros)
Date: Tue, 12 Aug 2008 23:58:51 +0200
Subject: dplayx tests hanging
In-Reply-To: <82e274890808110917r3625ea32mb1ab58d612ca59fb@mail.gmail.com>
References: <a71bd89a0808100934w7aa8932cl24252edbf9fcf235@mail.gmail.com>
	<200808111714.56209.kai.blin@gmail.com>
	<82e274890808110917r3625ea32mb1ab58d612ca59fb@mail.gmail.com>
Message-ID: <82e274890808121458j300a74batf4347026243590d5@mail.gmail.com>

On 8/11/08, Ismael Barros <razielmine at gmail.com> wrote:
> Actually the thread stuff is a very good idea, I'll take a look.

I tried launching each tests in a new thread, but a lot of tests
failures arise, sometimes even with segfaults or deadlocks. Looks like
the original implementation of dplay doesn't like concurrency too
much.

The good news are that playing with the timeout value of EnumSessions
I already managed to cut the time of some tests in half.


-- 
...yet even then, we ran like the wind, whilst our laughter echoed,
under cerulean skies...


From wine-devel at kievinfo.com  Wed Aug 13 00:44:20 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Tue, 12 Aug 2008 23:44:20 -0600
Subject: What to do when size of the struct differs on 32 and 64 bit?
Message-ID: <48A274B4.9000905@kievinfo.com>

While debugging some force-feedback issues ran into an interesting problem. 
The size of one struct from include/linux differs between 32-bit and 64-bit. 
That wouldn't be a major problem except that size is the part of the ioctl() 
request. Which results in EINVAL.

In more details:
input.h:
#define EVIOCSFF _IOC(_IOC_WRITE, 'E', 0x80, sizeof(struct ff_effect))

The simple test program:

#include <linux/input.h>
#include <stdio.h>
int main(int argc, char * argv[])
{
     printf("sizeof(struct ff_effect) = %d EVIOCSFF=%#x\n", sizeof(struct 
ff_effect), EVIOCSFF);

     return 0;
}


$ gcc test_size.c -o test_size && ./test_size
sizeof(struct ff_effect) = 48 EVIOCSFF=0x40304580
$ gcc -m32 test_size.c -o test_size32 && ./test_size32
sizeof(struct ff_effect) = 44 EVIOCSFF=0x402c4580

The question is what do we do about it? I'm sure there are might be more 
cases like that.

Vitaliy


From paul.vriens.wine at gmail.com  Wed Aug 13 01:58:16 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 13 Aug 2008 08:58:16 +0200
Subject: imm32: Improve ImmGetCompositionString.
In-Reply-To: <48A1E89D.90304@codeweavers.com>
References: <48A1E89D.90304@codeweavers.com>
Message-ID: <48A28608.1060505@gmail.com>

Aric Stewart wrote:
> 
> It should return number of copied bytes. But it always returns required
> buffer size to receive all information.
> (originally by Kusanagi Kouichi (slash at ma.neweb.ne.jp) )
> ---
>  dlls/imm32/imm.c |  207 
> ++++++++++++++++++++++++++++++++++--------------------
>  1 files changed, 130 insertions(+), 77 deletions(-)
> 
> 
> 
> ------------------------------------------------------------------------
> 
> 
Shouldn't patches like these be accompanied by tests? It changes the behavior 
after all.

-- 
Cheers,

Paul.


From hverbeet at gmail.com  Wed Aug 13 02:07:17 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Wed, 13 Aug 2008 09:07:17 +0200
Subject: What to do when size of the struct differs on 32 and 64 bit?
In-Reply-To: <48A274B4.9000905@kievinfo.com>
References: <48A274B4.9000905@kievinfo.com>
Message-ID: <d658b69e0808130007m12cfb9me8181dab0e23c74b@mail.gmail.com>

2008/8/13 Vitaliy Margolen <wine-devel at kievinfo.com>:
> While debugging some force-feedback issues ran into an interesting problem.
> The size of one struct from include/linux differs between 32-bit and 64-bit.
> That wouldn't be a major problem except that size is the part of the ioctl()
> request. Which results in EINVAL.
>
Maybe I misunderstand the issue, but doesn't Wine currently always get
compiled for 32-bit? (Iow, we always get the 32-bit version of the
structure)


From hverbeet at gmail.com  Wed Aug 13 02:18:09 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Wed, 13 Aug 2008 09:18:09 +0200
Subject: Flaky tests are starting to get real annoying...
In-Reply-To: <a71bd89a0808121058k1217c0f3p9e64fff7cd69032a@mail.gmail.com>
References: <a71bd89a0808121058k1217c0f3p9e64fff7cd69032a@mail.gmail.com>
Message-ID: <d658b69e0808130018k265e6a83tc4056330404edd3f@mail.gmail.com>

2008/8/12 Dan Kegel <dank at kegel.com>:
>  d3d9:visual.c
What kind of failures are you seeing there, and with which drivers?
(The test should at least pass with recent Mesa versions as long as
the GLSL extensions are disabled)


From wine at mkarcher.dialup.fu-berlin.de  Wed Aug 13 03:02:51 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Wed, 13 Aug 2008 10:02:51 +0200
Subject: What to do when size of the struct differs on 32 and 64 bit?
In-Reply-To: <d658b69e0808130007m12cfb9me8181dab0e23c74b@mail.gmail.com>
References: <48A274B4.9000905@kievinfo.com>
	<d658b69e0808130007m12cfb9me8181dab0e23c74b@mail.gmail.com>
Message-ID: <1218614571.11412.39.camel@hermes2.karcher.local>

Am Mittwoch, den 13.08.2008, 09:07 +0200 schrieb H. Verbeet:
> Maybe I misunderstand the issue, but doesn't Wine currently always get
> compiled for 32-bit? (Iow, we always get the 32-bit version of the
> structure)
Yes, but if wine runs on a 64 bit kernel, the kernel does not handle the
request, as it only recognizes the 64 bit request, if I understood
Vitaliy correct. I consider that a kernel bug.

Regards,
  Michael Karcher



From hverbeet at gmail.com  Wed Aug 13 03:03:13 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Wed, 13 Aug 2008 10:03:13 +0200
Subject: What to do when size of the struct differs on 32 and 64 bit?
In-Reply-To: <1218614571.11412.39.camel@hermes2.karcher.local>
References: <48A274B4.9000905@kievinfo.com>
	<d658b69e0808130007m12cfb9me8181dab0e23c74b@mail.gmail.com>
	<1218614571.11412.39.camel@hermes2.karcher.local>
Message-ID: <d658b69e0808130103k4681a30fh944a7de6db19a020@mail.gmail.com>

2008/8/13 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> Yes, but if wine runs on a 64 bit kernel, the kernel does not handle the
> request, as it only recognizes the 64 bit request, if I understood
> Vitaliy correct. I consider that a kernel bug.
>
I'd say so, yeah.


From thacrazze at googlemail.com  Tue Aug 12 18:03:06 2008
From: thacrazze at googlemail.com (thacrazze)
Date: Wed, 13 Aug 2008 03:03:06 +0400
Subject: No GIT changes since 7 days?
Message-ID: <ea92a1830808121603k4b79982q5c8c8952841aa238@mail.gmail.com>

Hello,

why are no GIT changes since 7 days? Exists a right problem with Microsoft?

And what's with the planned 1.1.3?

Best regards,
thacrazze
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080813/5aa0e85b/attachment.htm 

From dmitry at codeweavers.com  Wed Aug 13 06:02:13 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Wed, 13 Aug 2008 20:02:13 +0900
Subject: What to do when size of the struct differs on 32 and 64 bit?
References: <48A274B4.9000905@kievinfo.com>
Message-ID: <8220275D16D14CC99F30DEED58B05AD7@DMITRY>

"Vitaliy Margolen" <wine-devel at kievinfo.com> wrote:

> While debugging some force-feedback issues ran into an interesting problem. 
> The size of one struct from include/linux differs between 32-bit and 64-bit. 
> That wouldn't be a major problem except that size is the part of the ioctl() 
> request. Which results in EINVAL.

64-bit kernel should take care of translating the parameters between native
64-bit and emulated 32-bit modes. If that's not the case that's a kernel
bug, and should be reported appropriately.

-- 
Dmitry.


From dmitry at codeweavers.com  Wed Aug 13 06:06:10 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Wed, 13 Aug 2008 20:06:10 +0900
Subject: No GIT changes since 7 days?
References: <ea92a1830808121603k4b79982q5c8c8952841aa238@mail.gmail.com>
Message-ID: <193ED2E7331143F495880891717747E9@DMITRY>

"thacrazze" <thacrazze at googlemail.com> wrote:

> why are no GIT changes since 7 days? Exists a right problem with Microsoft?
> 
> And what's with the planned 1.1.3?

http://www.winehq.org/pipermail/wine-devel/2008-August/068041.html

-- 
Dmitry.


From mihai.dontu at gmail.com  Wed Aug 13 06:07:41 2008
From: mihai.dontu at gmail.com (Mihai =?utf-8?q?Don=C8=9Bu?=)
Date: Wed, 13 Aug 2008 14:07:41 +0300
Subject: No GIT changes since 7 days?
In-Reply-To: <ea92a1830808121603k4b79982q5c8c8952841aa238@mail.gmail.com>
References: <ea92a1830808121603k4b79982q5c8c8952841aa238@mail.gmail.com>
Message-ID: <200808131407.42758.mihai.dontu@gmail.com>

On Wednesday 13 August 2008, thacrazze wrote:
> Hello,
>
> why are no GIT changes since 7 days? Exists a right problem with Microsoft?
>
> And what's with the planned 1.1.3?

It *might* have something to do with this:

On Tuesday 05 August 2008, Alexandre Julliard wrote:
> Folks,
>
> I'm leaving on vacation, so there won't be any commits for a while.  Of
> course thanks to git that shouldn't prevent you from filling my mailbox
> with patches... I'll be back on the 18th, and release 1.1.3 will thus be
> on the 22nd.

:)

-- 
Mihai Don?u
-------------- next part --------------
An embedded message was scrubbed...
From: Alexandre Julliard <julliard at winehq.org>
Subject: Vacation
Date: Tue, 05 Aug 2008 18:05:36 +0200
Size: 3044
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080813/69a935be/attachment.eml 

From dmitry at codeweavers.com  Wed Aug 13 07:03:18 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Wed, 13 Aug 2008 21:03:18 +0900
Subject: [TRY 4] Add tests for checking the parent notification for
	editcontrol
References: <200808131536.15667.shpigor@etersoft.ru>
Message-ID: <F78A1958B58049FAA96AFE8DE4B747E5@DMITRY>

"Ilya Shpigor" <shpigor at etersoft.ru> wrote:

> Best regards
> Ilya Shpigor.

This version of the patch hasn't changed anything since my previous
comments.

-- 
Dmitry.


From misterniceguy0 at gmail.com  Wed Aug 13 07:58:35 2008
From: misterniceguy0 at gmail.com (Mister Nice Guy)
Date: Wed, 13 Aug 2008 15:58:35 +0300
Subject: Storesonline,
	Ecommerce hosting solution - how to avoid mistakes that put your
	business at risk
Message-ID: <3b9f447d0808130558x49c9fe0co36ac379d29a41507@mail.gmail.com>

*Storesonline, Ecommerce hosting solution - how to avoid mistakes that put
your business at risk*

Building an e-business inevitably requires a dedicated ecommerce hosting
solution that can support the infrastructures. There are plenty of areas to
take care of. Depending on your business types, you will need to consider
the technical areas that support the e-business transactions. Then *
Storesonline* is the right fit for you. You also need to have strong
customer support from the website provider. Reputation and security are
critical factors which sustain your business. In order to avoid pitfalls due
to an inferior host, this article reveals the mentioned areas and helps you
determine the steps to proceed further. *Storesonline* does avoid these
pitfalls and it's working really well.

Unlike hosting an ordinary website, running an ecommerce website such as an
online store can demand a high technical focus. For instance, you may need a
shopping cart and a payment processor. Other than these, you may also wish
to have regular backup service, site monitoring or digital certificates that
can protect your valuable business. If so, you have to choose an ecommerce
web site hosting plan that fits your needs. But it is really dependent on
the business size. If you sell a few products, a simple ecommerce web
hosting will be sufficient. *Storesonline* can handle the smallest mom and
pop site to the biggest on the planet. However, for a business site of much
larger scale, you need to consider the server usage and bandwidth. In such
case, a fast and stable server with bigger memories may be necessary.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080813/d985fc57/attachment.htm 

From marcus at rennboot.schule.loc  Wed Aug 13 08:31:40 2008
From: marcus at rennboot.schule.loc (Marcus Meissner)
Date: Wed, 13 Aug 2008 15:31:40 +0200
Subject: What to do when size of the struct differs on 32 and 64 bit?
In-Reply-To: <48A274B4.9000905@kievinfo.com>
References: <48A274B4.9000905@kievinfo.com>
Message-ID: <20080813133140.GA3489@rennboot.schule.loc>

On Tue, Aug 12, 2008 at 11:44:20PM -0600, Vitaliy Margolen wrote:
> While debugging some force-feedback issues ran into an interesting problem. 
> The size of one struct from include/linux differs between 32-bit and 64-bit. 
> That wouldn't be a major problem except that size is the part of the ioctl() 
> request. Which results in EINVAL.
> 
> In more details:
> input.h:
> #define EVIOCSFF _IOC(_IOC_WRITE, 'E', 0x80, sizeof(struct ff_effect))
> 
> The simple test program:
> 
> #include <linux/input.h>
> #include <stdio.h>
> int main(int argc, char * argv[])
> {
>      printf("sizeof(struct ff_effect) = %d EVIOCSFF=%#x\n", sizeof(struct 
> ff_effect), EVIOCSFF);
> 
>      return 0;
> }
> 
> 
> $ gcc test_size.c -o test_size && ./test_size
> sizeof(struct ff_effect) = 48 EVIOCSFF=0x40304580
> $ gcc -m32 test_size.c -o test_size32 && ./test_size32
> sizeof(struct ff_effect) = 44 EVIOCSFF=0x402c4580
> 
> The question is what do we do about it? I'm sure there are might be more 
> cases like that.

The kernel is supposed to handle this transparently.

I would report this to the kernel developers, mention "32bit compatibility"
or so.

Ciao, Marcus


From dank at kegel.com  Wed Aug 13 12:42:18 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 13 Aug 2008 10:42:18 -0700
Subject: Patchwatcher status
Message-ID: <a71bd89a0808131042h3d6b1biecfede9e678e1e28@mail.gmail.com>

Patchwatcher is online and giving reasonably good
feedback on the patch stream.  The bug that caused
every patch to be marked 'failed tests' is fixed, and
the blacklist is expanded enough that false regressions
seem to be rare.

There are still bugs:
1. the dashboard shows no status column for
http://kegel.com/wine/patchwatcher/results/32.txt
even though
http://kegel.com/wine/patchwatcher/results/32.log
exists and shows that there was some strange problem
in applying the patch.
2. The most recent patch shows up as 'queued' but
the link to the patch doesn't work.

Results are at
  http://kegel.com/wine/patchwatcher/results/
and source code is at
  http://winezeug.googlecode.com

Next steps:
- add timeout to handle hanging tests (every day or two
I have to kill some test or other).   There's no
portable way to do this from wine/test.h that
works in Win9x, so I'll probably set WINETEST_WRAPPER
to run the tests via a wrapper that implements the timeout.

- distribute across multiple machines by splitting into master
(which watches the patch stream) and slaves (which execute tests).
I will probably use http and ftp for this so the slaves can
be remote.

- support multiple architectures (anybody want to run
the slaves on MacOSX for me?)

- improve the web page to have error counts and perhaps
separate links to the build and test logs

- merge the chroot support (though this will need porting to
run on MacOSX)

- add valgrind as the next step after running tests

- improve the web page generator to show current status
(e.g. show the results from "make test" before starting valgrind)


From adam at tpetaccia.com  Wed Aug 13 12:54:17 2008
From: adam at tpetaccia.com (Adam Petaccia)
Date: Wed, 13 Aug 2008 13:54:17 -0400
Subject: .NET program crashes involving stubbed functions
Message-ID: <1218650057.6516.25.camel@belthazor-saved>

Its customary to make a function return NotImplemented in Gdiplus, if
its just a dummy function that does nothing and returns. But .NET seems
to check for this and throw an exception, crashing the program anyway. 

See bug http://bugs.winehq.org/show_bug.cgi?id=12951 for details, but
originally a program crashed because GdipNewPrivateFontCollection was
just a stub. After the function was created, it still crashes because it
returns "NotImplemented", rather than "Ok". IIRC, we return
"NotImplemented" for some debugging reason, but if the goal of Wine is
to run Windows applications, should we just go ahead and return "Ok" so
that .NET apps don't freak out?

Of course in a perfect world, we wouldn't have to fake a return code,
but until that time comes do people have opinions one way or another?



From adam at tpetaccia.com  Wed Aug 13 13:59:58 2008
From: adam at tpetaccia.com (Adam Petaccia)
Date: Wed, 13 Aug 2008 14:59:58 -0400
Subject: .NET program crashes involving stubbed functions
In-Reply-To: <3f4fd2640808131132k279b9d30u2ed5e9bbc649b226@mail.gmail.com>
References: <1218650057.6516.25.camel@belthazor-saved>
	<3f4fd2640808131132k279b9d30u2ed5e9bbc649b226@mail.gmail.com>
Message-ID: <1218653998.6516.31.camel@belthazor-saved>

On Wed, 2008-08-13 at 19:32 +0100, Reece Dunn wrote:
> 2008/8/13 Adam Petaccia <adam at tpetaccia.com>:
> > Its customary to make a function return NotImplemented in Gdiplus, if
> > its just a dummy function that does nothing and returns. But .NET seems
> > to check for this and throw an exception, crashing the program anyway.
> >
> > See bug http://bugs.winehq.org/show_bug.cgi?id=12951 for details, but
> > originally a program crashed because GdipNewPrivateFontCollection was
> > just a stub. After the function was created, it still crashes because it
> > returns "NotImplemented", rather than "Ok". IIRC, we return
> > "NotImplemented" for some debugging reason, but if the goal of Wine is
> > to run Windows applications, should we just go ahead and return "Ok" so
> > that .NET apps don't freak out?
> >
> > Of course in a perfect world, we wouldn't have to fake a return code,
> > but until that time comes do people have opinions one way or another?
> 
> The problem with returning Ok is that it implies that the function
> succeeded in what it is intended to do. As a result, the application
> will continue and in this case expect to be able to use the private
> font collection. To prevent the application crashing, it is likely
> that several functions will need to be implemented.
> 
> Also note that the reporter of the bug mentions that they installed
> mono. This means that using MS.NET may lead to different behaviour. It
> also means that it should be possible to see how the
> GdipNewPrivateFontCollection call is being used by mono and the data
> that it returns.
> 
> So to summarise, I suspect this will require more than simply
> returning Ok.
Most likely in this particular case you would be correct. But the whole
reason we have stubs is so that (C/C++) programs don't crash, but try to
move on, possibly with impaired functionality, but (at least with mono)
this does absolutely zero good as the program terminates anyway, but
this time for a different reason. 

On a side note, I thought Wine's preferred .NET was mono anyway.

> 
> - Reece



From dank at kegel.com  Wed Aug 13 19:19:17 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 13 Aug 2008 17:19:17 -0700
Subject: [appwiz.cpl]New Korean Resource
Message-ID: <a71bd89a0808131719p4c7fcf6cw339bbf89453c5dd7@mail.gmail.com>

Hi Hwang,

Thank you for helping localize Wine in Korean!

According to our automated patch checker,
http://kegel.com/wine/patchwatcher/results/
your patches did not apply easily.  You should
probably repost them with all filenames as if
you were one level above the wine tree.  e.g.
instead of


--- dlls/appwiz.cpl/appwiz.rc	2008-07-26 09:24:56.000000000 +0900
+++ appwiz.rc	2008-07-28 09:48:00.000000000 +0900

you'd want

--- a/dlls/appwiz.cpl/appwiz.rc	2008-07-26 09:24:56.000000000 +0900
+++ b/dlls/appwiz.cpl/appwiz.rc	2008-07-28 09:48:00.000000000 +0900

and instead of

--- /dev/null	2008-07-28 09:27:06.210506864 +0900
+++ Ko.rc	2008-07-28 09:48:00.000000000 +0900

you'd want

--- /dev/null	2008-07-28 09:27:06.210506864 +0900
+++ b/dlls/appwiz.cpl/Ko.rc	2008-07-28 09:48:00.000000000 +0900

The best way to generate patches is by using something like
  git diff
or
  git format-patch
as described at http://www.winehq.org/site/sending_patches
as that always gets the directories right.

Can you regenerate your patches properly,
verify that your patches apply cleanly when in the top level of wine
using the -p1 flag, e.g.
  cd ~/wine-git
  patch -p1 < ~/foo.patch
and then resend the fixed patches?

Thanks,
Dan


From dmitry at codeweavers.com  Wed Aug 13 22:09:24 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 14 Aug 2008 12:09:24 +0900
Subject: user32: test what FindWindow when window isn't found
References: <b6bb06270808131503v21720e73qdbf4fe4e82b877b@mail.gmail.com>
Message-ID: <5F5C6D30CB10422E97227430A16BF05D@DMITRY>

"Austin English" <austinenglish at gmail.com> wrote:

> -    /* test FindWindow behavior */
> +    SetLastError(0xdeadbeef);
> +    HWND hWnd = FindWindow("SomeWindowThatDoesNotExist", NULL);
> +    if(hWnd) {
> +      printf("hWnd not NULL");
> +    }
> +    else {
> +
> +     todo_wine
> +     ok(GetLastError() == ERROR_FILE_NOT_FOUND, "ERROR_FILE_NOT_FOUND, got %d\n", GetLastError());
> +    }

Why did you remove the comment? Introducing 'hWnd' variable is not needed,
there is one already called 'found', besides declaring variables in the code
is not allowed in Wine. It would be much simpler to add the last error test
to 2 existing FindWindowExA calls instead of introducing something looking
as foreign code (in indentation, braces usage and spaces).

-- 
Dmitry.


From felix at compsoc.nuigalway.ie  Thu Aug 14 04:49:47 2008
From: felix at compsoc.nuigalway.ie (Darragh Bailey)
Date: Thu, 14 Aug 2008 10:49:47 +0100
Subject: Patchwatcher status
In-Reply-To: <a71bd89a0808131042h3d6b1biecfede9e678e1e28@mail.gmail.com>
References: <a71bd89a0808131042h3d6b1biecfede9e678e1e28@mail.gmail.com>
Message-ID: <20080814094947.GA5139@riviera.nuigalway.ie>

Have you considered using some of the tools out there for automated
builds and looking to integrate patchwatcher to extend them to suit your
purpose.

A number of the features you suggest below are most likely already
implemented within existing automated builds.

I currently use buildbot at work for managing builds, and it looks like
that it could handle many of your tasks if patchwatcher could be
integrated into it.

On Wed, Aug 13, 2008 at 10:42:18AM -0700, Dan Kegel wrote:
> Next steps:
> - add timeout to handle hanging tests (every day or two
> I have to kill some test or other).   There's no
> portable way to do this from wine/test.h that
> works in Win9x, so I'll probably set WINETEST_WRAPPER
> to run the tests via a wrapper that implements the timeout.
Buildbot supports configuable timeouts.

> - distribute across multiple machines by splitting into master
> (which watches the patch stream) and slaves (which execute tests).
> I will probably use http and ftp for this so the slaves can
> be remote.
Also has master slave architecture, and they are also looking to support
load balancing in the future.

> - support multiple architectures (anybody want to run
> the slaves on MacOSX for me?)
Uses python for communications, so only the individual steps need to be
cross platform, think configure, make depend and make.

> - improve the web page to have error counts and perhaps
> separate links to the build and test logs
That's seems more project specific than buildbot, but who knows, it
might be implementable in a generic way to suit buildbot.

> - merge the chroot support (though this will need porting to
> run on MacOSX)
Would have to be added as a custom step

> - add valgrind as the next step after running tests
Supports individual steps

> - improve the web page generator to show current status
> (e.g. show the results from "make test" before starting valgrind)
Generates separate logs for each step

website is:
http://buildbot.net/trac

-- 
Darragh

"Nothing is foolproof to a sufficiently talented fool."


From fgouget at free.fr  Thu Aug 14 07:25:26 2008
From: fgouget at free.fr (Francois Gouget)
Date: Thu, 14 Aug 2008 14:25:26 +0200 (CEST)
Subject: Storesonline, Ecommerce hosting solution - how to avoid mistakes
	that put your business at risk
In-Reply-To: <3b9f447d0808130558x49c9fe0co36ac379d29a41507@mail.gmail.com>
References: <3b9f447d0808130558x49c9fe0co36ac379d29a41507@mail.gmail.com>
Message-ID: <alpine.DEB.1.10.0808141424200.25579@amboise.dolphin>


How did this spam go through?
Moderating mistake or should Mister Nice Guy's?subscription be 
cancelled?


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
            "Lotto: A tax on people who are bad at math." -- unknown
          "Windows: Microsoft's tax on computer illiterates." -- WE7U

From stefan at codeweavers.com  Thu Aug 14 09:37:04 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Thu, 14 Aug 2008 09:37:04 -0500
Subject: Patchwatcher status
In-Reply-To: <a71bd89a0808131042h3d6b1biecfede9e678e1e28@mail.gmail.com>
References: <a71bd89a0808131042h3d6b1biecfede9e678e1e28@mail.gmail.com>
Message-ID: <004b01c8fe1b$38e51b10$aaaf5130$@com>

> Patchwatcher is online and giving reasonably good
> feedback on the patch stream.  The bug that caused
> every patch to be marked 'failed tests' is fixed, and
> the blacklist is expanded enough that false regressions
> seem to be rare.
You mentioned sporadic test failures in the d3d9:visual and ddraw:visual
tests earlier, but I did not have time to look at it back then. Can you send
me logs of the failures and successes?

I am afraid that the d3d9 failure is a driver bug; I don't know yet what is
up with the ddraw test failure




From dank at kegel.com  Thu Aug 14 09:38:40 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 14 Aug 2008 07:38:40 -0700
Subject: Patchwatcher status
In-Reply-To: <20080814094947.GA5139@riviera.nuigalway.ie>
References: <a71bd89a0808131042h3d6b1biecfede9e678e1e28@mail.gmail.com>
	<20080814094947.GA5139@riviera.nuigalway.ie>
Message-ID: <a71bd89a0808140738t5342e33bp39ad1c6092d0521e@mail.gmail.com>

On Thu, Aug 14, 2008 at 2:49 AM, Darragh Bailey
<felix at compsoc.nuigalway.ie> wrote:
> I currently use buildbot at work for managing builds, and it looks like
> that it could handle many of your tasks if patchwatcher could be
> integrated into it.

Good idea.  Even Mozilla, home of http://www.mozilla.org/tinderbox.html,
uses it for everything but SeaMonkey: https://wiki.mozilla.org/Buildbot
It looks like buildbot has a new feature (try --diff) that does almost
what we want.
It doesn't handle patch series, so we would have to
concatenate patch series into one big patch to fit for now.
They even have mailwatcher thingies, but they're for watching
commit messages rather than potential patches.  So we'd have to
clone and mutate one of those a bit and hook it into try --diff (well,
we could keep using my mailwatcher, but that wouldn't be the buildbot way).

Also, its timeout is a coarse-grained one, but we also need a timeout
for individual tests.   That's ok, it's not hard to add into runtests.

On the downside, they don't seem to have anything like the report page
I have, so we'd need to add that to buildbot.

What to do, what to do... how about this: are there any python users
on the list who would be willing to help adapt buildbot to our needs?
I don't think I can handle it alone, I'm pretty busy.
Maybe I should focus on getting valgrind hooked into my existing
patchwatcher while somebody else looks at buildbot.  I'll join
the buildbot mailing list and chat with those guys a bit to see
where they think the patchwatcher functionality could fit in.
- Dan


From dank at kegel.com  Thu Aug 14 09:41:15 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 14 Aug 2008 07:41:15 -0700
Subject: Flaky tests are starting to get real annoying...
In-Reply-To: <d658b69e0808130018k265e6a83tc4056330404edd3f@mail.gmail.com>
References: <a71bd89a0808121058k1217c0f3p9e64fff7cd69032a@mail.gmail.com>
	<d658b69e0808130018k265e6a83tc4056330404edd3f@mail.gmail.com>
Message-ID: <a71bd89a0808140741nc1c04a6yb5ca1202e42aa7b3@mail.gmail.com>

On Wed, Aug 13, 2008 at 12:18 AM, H. Verbeet <hverbeet at gmail.com> wrote:
>>  d3d9:visual.c
> What kind of failures are you seeing there, and with which drivers?
> (The test should at least pass with recent Mesa versions as long as
> the GLSL extensions are disabled)

I guess this is http://bugs.winehq.org/show_bug.cgi?id=10221

Here's the hardware and software (same as in that bug):
$ lspci | grep -i vga
00:10.0 VGA compatible controller: nVidia Corporation GeForce
7100/nForce 630i (rev a2)
$ cat /proc/driver/nvidia/version
NVRM version: NVIDIA UNIX x86 Kernel Module  169.12  Thu Feb 14
17:53:07 PST 2008

I tried updating my nvidia driver, but it was a disaster; I may just have to
wait until Intrepid comes out, since I failed the nvidia driver
installation IQ test.

To repeat the failure, try

#!/bin/sh
set -e
set -x
while true
do
  rm *.ok
  make test
done

in dlls/ddraw/tests.  That fails in well under an hour for me with

../../../tools/runtest -q -P wine -M ddraw.dll -T ../../.. -p ddraw_test.exe.so
visual.c && touch visual.ok
fixme:win:EnumDisplayDevicesW ((null),0,0x32ed78,0x00000000), stub!
fixme:d3d:WineD3D_ChoosePixelFormat Add OpenGL context recreation support to Set
DepthStencilSurface
fixme:d3d_draw:drawPrimitive Using software emulation because manual fog coordin
ates are provided
fixme:d3d:WineD3D_ChoosePixelFormat Add OpenGL context recreation support to Set
DepthStencilSurface
visual.c:1194: Test failed: Got color 00efebe7, expected 00000080 or near
visual.c:1200: Test failed: Got color 00efebe7, expected 000000ff or near
...
make: *** [visual.ok] Error 26

Annoyingly, this happens quite often under patchwatcher.


From dank at kegel.com  Thu Aug 14 09:43:04 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 14 Aug 2008 07:43:04 -0700
Subject: Patchwatcher status
In-Reply-To: <004b01c8fe1b$38e51b10$aaaf5130$@com>
References: <a71bd89a0808131042h3d6b1biecfede9e678e1e28@mail.gmail.com>
	<004b01c8fe1b$38e51b10$aaaf5130$@com>
Message-ID: <a71bd89a0808140743r6e27f692t888c0f2e5c0d4ee@mail.gmail.com>

On Thu, Aug 14, 2008 at 7:37 AM, Stefan D?singer <stefan at codeweavers.com> wrote:
> You mentioned sporadic test failures in the d3d9:visual and ddraw:visual
> tests earlier, but I did not have time to look at it back then. Can you send
> me logs of the failures and successes?
>
> I am afraid that the d3d9 failure is a driver bug; I don't know yet what is
> up with the ddraw test failure

Sure, I just replied in another thread about that.  See also
http://bugs.winehq.org/show_bug.cgi?id=10221


From hverbeet at gmail.com  Thu Aug 14 10:40:27 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Thu, 14 Aug 2008 17:40:27 +0200
Subject: Flaky tests are starting to get real annoying...
In-Reply-To: <a71bd89a0808140741nc1c04a6yb5ca1202e42aa7b3@mail.gmail.com>
References: <a71bd89a0808121058k1217c0f3p9e64fff7cd69032a@mail.gmail.com>
	<d658b69e0808130018k265e6a83tc4056330404edd3f@mail.gmail.com>
	<a71bd89a0808140741nc1c04a6yb5ca1202e42aa7b3@mail.gmail.com>
Message-ID: <d658b69e0808140840l53b9070bn5a5437d1900da950@mail.gmail.com>

The d3d9 one is probably a driver bug, not sure about the ddraw one.
If it's much of an issue, it might be worth to run the tests using
Mesa instead.


From stefan at codeweavers.com  Thu Aug 14 10:53:42 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Thu, 14 Aug 2008 10:53:42 -0500
Subject: Flaky tests are starting to get real annoying...
In-Reply-To: <a71bd89a0808140741nc1c04a6yb5ca1202e42aa7b3@mail.gmail.com>
References: <a71bd89a0808121058k1217c0f3p9e64fff7cd69032a@mail.gmail.com>	<d658b69e0808130018k265e6a83tc4056330404edd3f@mail.gmail.com>
	<a71bd89a0808140741nc1c04a6yb5ca1202e42aa7b3@mail.gmail.com>
Message-ID: <004f01c8fe25$ed50a6f0$c7f1f4d0$@com>

> I guess this is http://bugs.winehq.org/show_bug.cgi?id=10221
Ya, as Henri said this is most likely a driver bug and we can't do anything
against it.

> ../../../tools/runtest -q -P wine -M ddraw.dll -T ../../.. -p
> ddraw_test.exe.so
> visual.c && touch visual.ok
> fixme:win:EnumDisplayDevicesW ((null),0,0x32ed78,0x00000000), stub!
> fixme:d3d:WineD3D_ChoosePixelFormat Add OpenGL context recreation
> support to Set
> DepthStencilSurface
> fixme:d3d_draw:drawPrimitive Using software emulation because manual
> fog coordin
> ates are provided
> fixme:d3d:WineD3D_ChoosePixelFormat Add OpenGL context recreation
> support to Set
> DepthStencilSurface
> visual.c:1194: Test failed: Got color 00efebe7, expected 00000080 or
> near
> visual.c:1200: Test failed: Got color 00efebe7, expected 000000ff or
> near
I have run the tests in valgrind, and there's a crash somewhere. Could be
related




From austinenglish at gmail.com  Thu Aug 14 10:58:53 2008
From: austinenglish at gmail.com (Austin English)
Date: Thu, 14 Aug 2008 10:58:53 -0500
Subject: user32: test what FindWindow when window isn't found
In-Reply-To: <5F5C6D30CB10422E97227430A16BF05D@DMITRY>
References: <b6bb06270808131503v21720e73qdbf4fe4e82b877b@mail.gmail.com>
	<5F5C6D30CB10422E97227430A16BF05D@DMITRY>
Message-ID: <b6bb06270808140858n624960f1sf646c5143a1541a8@mail.gmail.com>

On Wed, Aug 13, 2008 at 10:09 PM, Dmitry Timoshkov
<dmitry at codeweavers.com> wrote:
> "Austin English" <austinenglish at gmail.com> wrote:
>
>> -    /* test FindWindow behavior */
>> +    SetLastError(0xdeadbeef);
>> +    HWND hWnd = FindWindow("SomeWindowThatDoesNotExist", NULL);
>> +    if(hWnd) {
>> +      printf("hWnd not NULL");
>> +    }
>> +    else {
>> +
>> +     todo_wine
>> +     ok(GetLastError() == ERROR_FILE_NOT_FOUND, "ERROR_FILE_NOT_FOUND,
>> got %d\n", GetLastError());
>> +    }
>
> Why did you remove the comment? Introducing 'hWnd' variable is not needed,
> there is one already called 'found', besides declaring variables in the code
> is not allowed in Wine. It would be much simpler to add the last error test
> to 2 existing FindWindowExA calls instead of introducing something looking
> as foreign code (in indentation, braces usage and spaces).
>
> --
> Dmitry.
>

Thanks for the comments! Here's an updated patch. Passes in Win2K.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0001-user32-test-what-FindWindow-does-when-window-isn-t-fo.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080814/c97eabb5/attachment.txt 

From juan.lang at gmail.com  Thu Aug 14 11:07:45 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 14 Aug 2008 09:07:45 -0700
Subject: user32: test what FindWindow when window isn't found
In-Reply-To: <b6bb06270808140858n624960f1sf646c5143a1541a8@mail.gmail.com>
References: <b6bb06270808131503v21720e73qdbf4fe4e82b877b@mail.gmail.com>
	<5F5C6D30CB10422E97227430A16BF05D@DMITRY>
	<b6bb06270808140858n624960f1sf646c5143a1541a8@mail.gmail.com>
Message-ID: <3a768c550808140907q7bfeac03t446f01451d228d62@mail.gmail.com>

Hi Austin,

+    found = FindWindow("SomeWindowThatDoesNotExist", NULL);
+    if(found) {
+      printf("found not NULL");
+    }

Please don't use printf in the tests.  If you must log something, use
trace, but I don't think it's that useful in this case, since we
really expect it not to be found.
--Juan


From dmitry at codeweavers.com  Thu Aug 14 11:12:01 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Fri, 15 Aug 2008 01:12:01 +0900
Subject: user32: test what FindWindow when window isn't found
References: <b6bb06270808131503v21720e73qdbf4fe4e82b877b@mail.gmail.com><5F5C6D30CB10422E97227430A16BF05D@DMITRY>
	<b6bb06270808140858n624960f1sf646c5143a1541a8@mail.gmail.com>
Message-ID: <74376140B8B54C63AF677BEA8D836877@DMITRY>

"Austin English" <austinenglish at gmail.com> wrote:

> Thanks for the comments! Here's an updated patch. Passes in Win2K.

This still doesn't look ok to me (missing SetLastError beforehand,
indentation, spacing, braces). There is no need to add a new test,
just add the SetLastError(0xdeadbeef) call before an existing
FindWindowExA call which is expected to fail and check last error
value later on.

-- 
Dmitry.


From stefan at codeweavers.com  Thu Aug 14 13:19:17 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Thu, 14 Aug 2008 13:19:17 -0500
Subject: Flaky tests are starting to get real annoying...
In-Reply-To: <004f01c8fe25$ed50a6f0$c7f1f4d0$@com>
References: <a71bd89a0808121058k1217c0f3p9e64fff7cd69032a@mail.gmail.com>	<d658b69e0808130018k265e6a83tc4056330404edd3f@mail.gmail.com>
	<a71bd89a0808140741nc1c04a6yb5ca1202e42aa7b3@mail.gmail.com>
	<004f01c8fe25$ed50a6f0$c7f1f4d0$@com>
Message-ID: <006501c8fe3a$43e4b740$cbae25c0$@com>

> > visual.c:1194: Test failed: Got color 00efebe7, expected 00000080 or
> > near
> > visual.c:1200: Test failed: Got color 00efebe7, expected 000000ff or
> > near
> I have run the tests in valgrind, and there's a crash somewhere. Could
> be
> related
It seems that the tests crash in the libglcore.so if run under valgrind(jump
to an invalid location). The crash occurs in a glSecondaryColor3ubEXT call;
The crash in the call doesn't make sense, because right before that a call
with the same parameters succeeds, and it is the 2nd vertex in a triangle,
so drawing shouldn't commence yet.

The ddraw visual test performs 3 independent tests: One using direct3d 7,
one using direct3d 1, and one using direct3d 3. The crash occurs in the d3d1
test. If I comment out the d3d7 test, the d3d1 test works, and the crash
occurs in the d3d3 test. After the d3d7 test the device, window etc are
destroyed, and a new ones are created. So they should be isolated.

My guess is that something breaks in the driver when creating or releasing
contexts. I can't tell if it is our fault or the driver's though. As far as
I can see both the window and the context are really destroyed, so there's
no refcounting bug hidden somewhere.

In order to work around the issue, we could put them into separate files;
The issue is worth investigating though, but I have no idea what could be
going on here.





From huw at codeweavers.com  Thu Aug 14 18:54:19 2008
From: huw at codeweavers.com (Huw Davies)
Date: Fri, 15 Aug 2008 00:54:19 +0100
Subject: wininet: default to keep-alive when the server is HTTP/1.1, not
	when it isn't
In-Reply-To: <1218739801.6376.8.camel@vincent>
References: <1218739801.6376.8.camel@vincent>
Message-ID: <48A4C5AB.20803@codeweavers.com>

Vincent Povirk wrote:
> This is a fix to a problem I introduced in
> fd5b97bc4d12adc69085b739061c56e9107f8d1f. The expression that checked
> the HTTP version was true for HTTP/1.0 servers, and I treated it as if
> it were true for HTTP/1.1 servers. That means we defaulted to keep-alive
> for HTTP/1.0 servers only, the exact opposite of what we want.

This was a problem with the old code too, but what happens when we get
HTTP > 1.1 ?

Huw.



From hans at meelstraat.net  Fri Aug 15 02:03:52 2008
From: hans at meelstraat.net (Hans Leidekker)
Date: Fri, 15 Aug 2008 09:03:52 +0200
Subject: wininet: default to keep-alive when the server is HTTP/1.1,
	not when it isn't
In-Reply-To: <48A4C5AB.20803@codeweavers.com>
References: <1218739801.6376.8.camel@vincent> <48A4C5AB.20803@codeweavers.com>
Message-ID: <200808150903.52518.hans@meelstraat.net>

On Friday 15 August 2008 01:54:19 Huw Davies wrote:

> Vincent Povirk wrote:
> > This is a fix to a problem I introduced in
> > fd5b97bc4d12adc69085b739061c56e9107f8d1f. The expression that checked
> > the HTTP version was true for HTTP/1.0 servers, and I treated it as if
> > it were true for HTTP/1.1 servers. That means we defaulted to keep-alive
> > for HTTP/1.0 servers only, the exact opposite of what we want.
>
> This was a problem with the old code too, but what happens when we get
> HTTP > 1.1 ?

Yes, the keep-alive default will most likely be part of newer protocol
versions so we should change the code to match that, i.e. keep the
connection open unless the protocol version is 1.0 (perhaps even <= 1.0)
or if there's an explicit 'Connection: Close' header.

 -Hans



From polesapart at gmail.com  Fri Aug 15 05:50:09 2008
From: polesapart at gmail.com (Matt J)
Date: Fri, 15 Aug 2008 22:50:09 +1200
Subject: Unwanted WM_CTLCOLORSTATIC notification
Message-ID: <738913aa0808150350p6e1861b4qaa1f2d77e8b714c2@mail.gmail.com>

Hi,

I've been trying to debug a problem with Adobe Indesign CS where the
application crashes while creating the file open dialog box.  Now I believe
(not 100% sure) I have tracked down the problem to a spurious
WM_CTLCOLORSTATIC notification.  This notification is generated when the
application invokes WM_SETTEXT to change the caption of a 'group box'
control control in the dialog box.

To verify this I coded up a small test case, which I have attached to the
email. This basically creates a new dialog box and when it receives it
WM_INITDIALOG notification it calls SendDlgItemMessage to send a WM_SETTEXT
message to set the text of a 'group box' control on the dialog. As it runs
it logs the notifications that it receives.

On windows we see the following:

  Message: 0x00000030 (48)
  Message: 0x00000110 (272)
  WM INITDIALOG
  Message: 0x00000127 (295)
  Message: 0x00000128 (296)
  Message: 0x00000018 (24)
  Message: 0x00000046 (70)
  ...

Under wine we see:

  Message: 0x00000030 (48)
  Message: 0x00000110 (272)
  WM INITDIALOG
  Message: 0x00000138 (312)
  Message: 0x00000018 (24)
  Message: 0x00000046 (70)
  ...


Of primary interest to me here is the WM_CTLCOLORSTATIC notification
(0x00000138) that is generated only under wine.  Also of interest is that
WM_CHANGEUISTATE (0x00000127) and WM_UPDATEUISTATE (0x00000128)
notifications are received under windows but not wine.

This is my first foray into debugging wine, so I may be totally off track
here, but I do believe that the WM_CTLCOLORSTATIC notification is what is
causing InDesign to crash.  So, I am wondering if someone with more
experience here can give some advice about rectifying this problem.

If I can provide any more info about the problem, please let me know.

Regards,
Matt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080815/67faa3bb/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: DlgTest.zip
Type: application/zip
Size: 7665 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080815/67faa3bb/attachment.zip 

From dank at kegel.com  Fri Aug 15 07:40:28 2008
From: dank at kegel.com (Dan Kegel)
Date: Fri, 15 Aug 2008 05:40:28 -0700
Subject: Unwanted WM_CTLCOLORSTATIC notification
Message-ID: <a71bd89a0808150540x68e37dc9v76863efcb103e221@mail.gmail.com>

Matt wrote:
> I've been trying to debug a problem with Adobe Indesign CS where the
> application crashes while creating the file open dialog box.  Now I believe
> (not 100% sure) I have tracked down the problem to a spurious
> WM_CTLCOLORSTATIC notification.

Thanks for looking into this.  This is a key app needed by many
schools and companies, but we haven't had enough time to
give it the attention it deserves.

Please file a bug report at http://bugs.winehq.org
including all the info needed to reproduce the
bug (ideally with a trial version; you can find download
URLs at http://wiki.winehq.org/AdobeIndesign
And attach your test case source there.

If you want to go a little further, rewrite your test case
in plain C instead of C++ (should be easy).

And if you want to go even further, integrate it into
our existing message tests,
http://source.winehq.org/source/dlls/user32/tests/msg.c
which already do have some tests for WM_CTLCOLORSTATIC.

One note of caution: the user32/msg.c tests don't all pass
on Wine, see
http://wiki.winehq.org/MakeTestFailures
and
http://test.winehq.org/data/520ab5c261706f6118a85a82ba84213932ba76e7/#group_Wine:user32:msg
- Dan


From hverbeet at gmail.com  Fri Aug 15 08:23:40 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Fri, 15 Aug 2008 15:23:40 +0200
Subject: #1 winhttp: Add a handle management implementation.
In-Reply-To: <200808151441.37346.hans@codeweavers.com>
References: <200808151441.37346.hans@codeweavers.com>
Message-ID: <d658b69e0808150623j257713c6pd5b45d35a651c433@mail.gmail.com>

2008/8/15 Hans Leidekker <hans at meelstraat.net>:
>
> +HINTERNET alloc_handle( object_header_t *hdr )
> +{
> +    object_header_t **p;
> +    ULONG_PTR handle = 0, num;
> +
> +    list_init( &hdr->children );
> +
> +    EnterCriticalSection( &handle_cs );
> +    if (!max_handles)
> +    {
> +        num = HANDLE_CHUNK_SIZE;
> +        if (!(p = heap_alloc_zero( sizeof(ULONG_PTR) * num ))) goto end;
> +        handles = p;
> +        max_handles = num;
> +    }
> +    if (max_handles == next_handle)
> +    {
> +        num = max_handles + HANDLE_CHUNK_SIZE;
> +        if (!(p = heap_realloc_zero( handles, sizeof(ULONG_PTR) * num ))) goto end;
> +        handles = p;
> +        max_handles = num;
> +    }
> +    handle = next_handle;
> +    if (handles[handle]) ERR("handle isn't free but should be\n");
> +
> +    handles[handle] = addref_object( hdr );
> +    while (handles[next_handle] && (next_handle < max_handles)) next_handle++;
> +
> +end:
> +    LeaveCriticalSection( &handle_cs );
> +    return hdr->handle = (HINTERNET)(handle + 1);
> +}

Not necessarily wrong, but the common way to implement tables like
this is to grow the table by some percentage of the original size, and
keep a list of free handles.


From hans at meelstraat.net  Fri Aug 15 08:26:29 2008
From: hans at meelstraat.net (Hans Leidekker)
Date: Fri, 15 Aug 2008 15:26:29 +0200
Subject: #1 winhttp: Add a handle management implementation.
In-Reply-To: <200808151441.37346.hans@codeweavers.com>
References: <200808151441.37346.hans@codeweavers.com>
Message-ID: <200808151526.29779.hans@meelstraat.net>

On Friday 15 August 2008 14:41:36 Hans Leidekker wrote:

Sorry for the From address confusion. The CodeWeavers mail server
accused me of relaying but I found out now that it's because I forgot
to enable authenticated SMTP.

 -Hans



From hans at codeweavers.com  Fri Aug 15 08:46:38 2008
From: hans at codeweavers.com (Hans Leidekker)
Date: Fri, 15 Aug 2008 15:46:38 +0200
Subject: #1 winhttp: Add a handle management implementation.
In-Reply-To: <d658b69e0808150623j257713c6pd5b45d35a651c433@mail.gmail.com>
References: <200808151441.37346.hans@codeweavers.com>
	<d658b69e0808150623j257713c6pd5b45d35a651c433@mail.gmail.com>
Message-ID: <200808151546.38884.hans@codeweavers.com>

On Friday 15 August 2008 15:23:40 H. Verbeet wrote:

> Not necessarily wrong, but the common way to implement tables like
> this is to grow the table by some percentage of the original size, and
> keep a list of free handles.

Good point. I'll fix that when we have the basics of this dll covered.

 -Hans



From msclrhd at googlemail.com  Wed Aug 13 13:32:57 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Wed, 13 Aug 2008 19:32:57 +0100
Subject: .NET program crashes involving stubbed functions
In-Reply-To: <1218650057.6516.25.camel@belthazor-saved>
References: <1218650057.6516.25.camel@belthazor-saved>
Message-ID: <3f4fd2640808131132k279b9d30u2ed5e9bbc649b226@mail.gmail.com>

2008/8/13 Adam Petaccia <adam at tpetaccia.com>:
> Its customary to make a function return NotImplemented in Gdiplus, if
> its just a dummy function that does nothing and returns. But .NET seems
> to check for this and throw an exception, crashing the program anyway.
>
> See bug http://bugs.winehq.org/show_bug.cgi?id=12951 for details, but
> originally a program crashed because GdipNewPrivateFontCollection was
> just a stub. After the function was created, it still crashes because it
> returns "NotImplemented", rather than "Ok". IIRC, we return
> "NotImplemented" for some debugging reason, but if the goal of Wine is
> to run Windows applications, should we just go ahead and return "Ok" so
> that .NET apps don't freak out?
>
> Of course in a perfect world, we wouldn't have to fake a return code,
> but until that time comes do people have opinions one way or another?

The problem with returning Ok is that it implies that the function
succeeded in what it is intended to do. As a result, the application
will continue and in this case expect to be able to use the private
font collection. To prevent the application crashing, it is likely
that several functions will need to be implemented.

Also note that the reporter of the bug mentions that they installed
mono. This means that using MS.NET may lead to different behaviour. It
also means that it should be possible to see how the
GdipNewPrivateFontCollection call is being used by mono and the data
that it returns.

So to summarise, I suspect this will require more than simply returning Ok.

- Reece


From bunglehead at gmail.com  Fri Aug 15 11:25:35 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Fri, 15 Aug 2008 20:25:35 +0400
Subject: [winmm] Implement stub for midiConnect and midiDisconnect.
In-Reply-To: <48A5AB5E.4040307@wanadoo.fr>
References: <48A5AB5E.4040307@wanadoo.fr>
Message-ID: <48A5ADFF.8040609@gmail.com>

Christian Costa wrote:
> Hi,
>
> This fixes bug 11142 & 11182.
>
> Bye,
> Christian
>
> Changelog:
> Implement stub for midiConnect and midiDisconnect.
>
Usually some error code returned for plain stubs like these. Does it 
block these bugs?



From jjmckenzie51 at earthlink.net  Fri Aug 15 12:14:55 2008
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Fri, 15 Aug 2008 10:14:55 -0700 (GMT-07:00)
Subject: .NET program crashes involving stubbed functions
Message-ID: <30329129.1218820495736.JavaMail.root@elwamui-muscovy.atl.sa.earthlink.net>

Reece Dunn <msclrhd at googlemail.com> on Aug 13, 2008 11:32 AM wrote about .NET program crashes involving stubbed functions
>
>2008/8/13 Adam Petaccia <adam at tpetaccia.com>:
>> Its customary to make a function return NotImplemented in Gdiplus, if
>> its just a dummy function that does nothing and returns. But .NET seems
>> to check for this and throw an exception, crashing the program anyway.
>>
>> See bug http://bugs.winehq.org/show_bug.cgi?id=12951 for details, but
>> originally a program crashed because GdipNewPrivateFontCollection was
>> just a stub. After the function was created, it still crashes because it
>> returns "NotImplemented", rather than "Ok". IIRC, we return
>> "NotImplemented" for some debugging reason, but if the goal of Wine is
>> to run Windows applications, should we just go ahead and return "Ok" so
>> that .NET apps don't freak out?
>>
>> Of course in a perfect world, we wouldn't have to fake a return code,
>> but until that time comes do people have opinions one way or another?
>
>The problem with returning Ok is that it implies that the function
>succeeded in what it is intended to do. As a result, the application
>will continue and in this case expect to be able to use the private
>font collection. To prevent the application crashing, it is likely
>that several functions will need to be implemented.
>
>Also note that the reporter of the bug mentions that they installed
>mono. This means that using MS.NET may lead to different behaviour. It
>also means that it should be possible to see how the
>GdipNewPrivateFontCollection call is being used by mono and the data
>that it returns.

Is there a method of resolving this using functions provided by Mono or will
this require additional tools?
>
>So to summarise, I suspect this will require more than simply returning Ok.
>
I agree.  There should be more responses than just OK.

James McKenzie



From polesapart at gmail.com  Fri Aug 15 18:25:29 2008
From: polesapart at gmail.com (Matt J)
Date: Sat, 16 Aug 2008 11:25:29 +1200
Subject: Unwanted WM_CTLCOLORSTATIC notification
In-Reply-To: <a71bd89a0808150540x68e37dc9v76863efcb103e221@mail.gmail.com>
References: <a71bd89a0808150540x68e37dc9v76863efcb103e221@mail.gmail.com>
Message-ID: <738913aa0808151625m7a23023ewac035be0ad2a2c88@mail.gmail.com>

Hi Dan,

Thanks for your reply.

I have filed a bug report (*Bug
14879<http://bugs.winehq.org/show_bug.cgi?id=14879>
*) which includes the test case rewritten in plain C and able to be compiled
with winegcc.

I will look into this further later on, but right now its weekend :).

Cheers,
Matt


On Sat, Aug 16, 2008 at 12:40 AM, Dan Kegel <dank at kegel.com> wrote:

> Matt wrote:
> > I've been trying to debug a problem with Adobe Indesign CS where the
> > application crashes while creating the file open dialog box.  Now I
> believe
> > (not 100% sure) I have tracked down the problem to a spurious
> > WM_CTLCOLORSTATIC notification.
>
> Thanks for looking into this.  This is a key app needed by many
> schools and companies, but we haven't had enough time to
> give it the attention it deserves.
>
> Please file a bug report at http://bugs.winehq.org
> including all the info needed to reproduce the
> bug (ideally with a trial version; you can find download
> URLs at http://wiki.winehq.org/AdobeIndesign
> And attach your test case source there.
>
> If you want to go a little further, rewrite your test case
> in plain C instead of C++ (should be easy).
>
> And if you want to go even further, integrate it into
> our existing message tests,
> http://source.winehq.org/source/dlls/user32/tests/msg.c
> which already do have some tests for WM_CTLCOLORSTATIC.
>
> One note of caution: the user32/msg.c tests don't all pass
> on Wine, see
> http://wiki.winehq.org/MakeTestFailures
> and
>
> http://test.winehq.org/data/520ab5c261706f6118a85a82ba84213932ba76e7/#group_Wine:user32:msg
> - Dan
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080816/2cee4987/attachment.htm 

From dank at kegel.com  Fri Aug 15 22:10:21 2008
From: dank at kegel.com (Dan Kegel)
Date: Fri, 15 Aug 2008 20:10:21 -0700
Subject: New kernel development guide might be good model for Wine...
Message-ID: <a71bd89a0808152010m137f8099hb70ee14bdb89ddfe@mail.gmail.com>

This guide seems rather well written:
http://ldn.linuxfoundation.org/how-participate-linux-community
Wine could probably use something similar.


From jacek at codeweavers.com  Sat Aug 16 05:18:10 2008
From: jacek at codeweavers.com (Jacek Caban)
Date: Sat, 16 Aug 2008 12:18:10 +0200
Subject: [1/2] mshtml: Changed get_typeinfo to help support IDispatch
In-Reply-To: <g869be$mli$1@ger.gmane.org>
References: <g869be$mli$1@ger.gmane.org>
Message-ID: <48A6A962.8010107@codeweavers.com>

Alistair Leslie-Hughes wrote:
> Hi,
>
> Changelog:
>     mshtml: Changed get_typeinfo to help support IDispatch
 > Subject: [PATCH] Changed get_typeinfo to AddRef the COM pointer


get_typeinfo is an internal function so it's fine to not AddRef as long 
as we guarantee that we hold the reference (and we do) so there is no 
point to add unneeded AddRef here.


Jacek


From jacek at codeweavers.com  Sat Aug 16 05:20:42 2008
From: jacek at codeweavers.com (Jacek Caban)
Date: Sat, 16 Aug 2008 12:20:42 +0200
Subject: [2/2] mshtml: Implement IDispatch for IHTMLElement
In-Reply-To: <g869bk$mli$2@ger.gmane.org>
References: <g869bk$mli$2@ger.gmane.org>
Message-ID: <48A6A9FA.9030905@codeweavers.com>

Alistair Leslie-Hughes wrote:
> Hi,
>
> Changelog:
>     mshtml: Implement IDispatch for IHTMLElement

You should forward these calls to IDispatchEx implementation. See 
htmlselect.c for example.


Jacek


From leslie_alistair at hotmail.com  Sat Aug 16 05:50:58 2008
From: leslie_alistair at hotmail.com (leslie_alistair at hotmail.com)
Date: Sat, 16 Aug 2008 20:50:58 +1000
Subject: [1/2] mshtml: Changed get_typeinfo to help support IDispatch
In-Reply-To: <g869be$mli$1@ger.gmane.org> <48A6A962.8010107@codeweavers.com>
References: <g869be$mli$1@ger.gmane.org> <48A6A962.8010107@codeweavers.com>
Message-ID: <BAY117-DS8F0200D981C7248E75BC3936C0@phx.gbl>

--------------------------------------------------
From: "Jacek Caban" <jacek at codeweavers.com>
Sent: Saturday, August 16, 2008 8:18 PM
To: <wine-devel at winehq.org>
Cc: "Alistair Leslie-Hughes" <leslie_alistair at hotmail.com>
Subject: Re: [1/2] mshtml: Changed get_typeinfo to help support IDispatch

> Alistair Leslie-Hughes wrote:
>> Hi,
>>
>> Changelog:
>>     mshtml: Changed get_typeinfo to help support IDispatch
> > Subject: [PATCH] Changed get_typeinfo to AddRef the COM pointer
>
>
> get_typeinfo is an internal function so it's fine to not AddRef as long as 
> we guarantee that we hold the reference (and we do) so there is no point 
> to add unneeded AddRef here.
>
I based the msxml get_typeinfo on the mshtml implementation, and it was 
initial rejected due to the missing AddRef's.  So before I started 
Implementing more of the IDispatch functions, I thought this was the right 
thing todo.

Best Regards
 Alistair Leslie-Hughes 



From dank at kegel.com  Sat Aug 16 10:13:51 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 16 Aug 2008 08:13:51 -0700
Subject: winmm: remove misleading message
Message-ID: <a71bd89a0808160813p1e2f72d8n90804ea85e8e8dc1@mail.gmail.com>

Jeff wrote:
> Remove a message suggesting that Wine should be pointed at a windows installation.
>
> -	    FIXME("Couldn't load driver for type %s.\n"
> -		  "If you don't have a windows installation accessible from Wine,\n"
> -		  "you perhaps forgot to create a [mci] section in system.ini\n",
> +	    FIXME("Couldn't load driver for type %s.\n",

The [mci] section in system.ini advice is still valid and usful, I think.
You probably just want to remove the middle line.
- Dan


From wine at mkarcher.dialup.fu-berlin.de  Sat Aug 16 12:33:55 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sat, 16 Aug 2008 19:33:55 +0200
Subject: kernel32: Tiny improvement to the GetVolumePathNameW stub
In-Reply-To: <855846.42300.qm@web23203.mail.ird.yahoo.com>
References: <855846.42300.qm@web23203.mail.ird.yahoo.com>
Message-ID: <1218908035.19678.27.camel@hermes2.karcher.local>

Am Samstag, den 16.08.2008, 17:12 +0000 schrieb Louis. Lenders:
> Hi,  this fixes Adobe Lightroom 2.0 start up bug, mentioned in 
> http://bugs.winehq.org/show_bug.cgi?id=8224#c4
> 
> as long wine doesn't handle with volume mount points, it's probably
> safe to satisfy most apps.

The idea of your patch looks right to me. But (1) please don't use
memcmp to compare wide characters, especially, don't use memcmp with a
count of one, as it only compares one half the the wide character. use
  filename[1] == ':' && filename[2] == '\\'
instead. (2) Please check that filename really has at least 3 characters
before accessing it. (3)Please check the size of the output buffer
before copying anything into it.

Finally, the chance of getting this patch accepted raises if you
accompany the implementation with an API test. Another point to increase
the chances of getting that patch committed is to implement the corner
cases (at least the empty string) explained on MSDN, also backed up by
an API test. Please also note the documented behaviour for the case of
the output buffer being short by one byte.

Regards,
  Michael Karcher




From titan.costa at wanadoo.fr  Sat Aug 16 13:49:56 2008
From: titan.costa at wanadoo.fr (Christian Costa)
Date: Sat, 16 Aug 2008 20:49:56 +0200
Subject: [winmm] Implement stub for midiConnect and midiDisconnect.
In-Reply-To: <48A5ADFF.8040609@gmail.com>
References: <48A5AB5E.4040307@wanadoo.fr> <48A5ADFF.8040609@gmail.com>
Message-ID: <48A72154.7060502@wanadoo.fr>

I did some more testing and returning an error seems ok.
I will send an updated patch.

Nikolay Sivov a ?crit :
> Christian Costa wrote:
>   
>> Hi,
>>
>> This fixes bug 11142 & 11182.
>>
>> Bye,
>> Christian
>>
>> Changelog:
>> Implement stub for midiConnect and midiDisconnect.
>>
>>     
> Usually some error code returned for plain stubs like these. Does it 
> block these bugs?
>
>
>
>
>
>   




From wine at mkarcher.dialup.fu-berlin.de  Sat Aug 16 15:40:02 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sat, 16 Aug 2008 22:40:02 +0200
Subject: kernel32: Tiny improvement to the GetVolumePathNameW stub (try 2)
In-Reply-To: <14058.14952.qm@web23208.mail.ird.yahoo.com>
References: <14058.14952.qm@web23208.mail.ird.yahoo.com>
Message-ID: <1218919203.19678.60.camel@hermes2.karcher.local>

Am Samstag, den 16.08.2008, 19:09 +0000 schrieb Louis. Lenders:

> Hi Michael, thanks for your comments. I've added some simple sanity
> checks from your first suggestions.
It looks much better now, but you still access filename[1] before you
even know that filename is not an empty string. In that case,
filename[1] is past the end of the array, and you must not access it.
Your check for strlenW comes too late. The minimal fix would be to put
the strlenW
call before the character comparisons, but it would be even smarter to
either
 a) check that filename[0] is not 0, and check the next characters in
    order. So if any of these characters, short circuit evaluation
    prevents access of later characters,
or
 b) just implement the special case for the empty string and catch
    this case before you access filename[1] and filename[2].

Please think about what "sizeof(volumepathname)" will return. The
condition "sizeof(volumepathname) > 3" is *always* true. You should
check buflen at that point.

> As for the other suggestions, i'm sure that if this function ever gets
> implemented all these checks and tests are needed, but as i said, a
> bit of google for fixme:GetVolumePath shows the common way (the very
> few) apps call this function is with filename="c:\blabla\bla", so for
> now , in my opinion, i don't think it's worth the effort.

As long as there are no junctions in wine, your implementation is
correct for paths it can handle. So I would suggest to make the FIXME a
TRACE and add a FIXME("Can't handle path %s\n",debugstr_w(filename));
below the case you handle.

While googling for GetVolumeFileNameW, I stumbled across
 http://www.winehq.org/pipermail/wine-patches/2006-June/027228.html
This patch obviously has not been applied. That is not really
surprising, as it contains an extra hunk on an unrelated include file at
the end, and also ignores buflen, but it does contain the correct logic
for testing whether filename is a fully qualified local part, it
contains the GetVolumeFileNameA implementation that forwards to
GetVolumeFileNameW and contains at least one basic test.

I would suggest to polish that patch a bit and submit the extra goodies
from it also (you might use your GetPathNameW implementation after
fixing the points raised above; these implementations are mostly
equivalent). With polishing, I mean the following changes:
 - Test buflen in GetVolumeFileNameW (important)
 - The test "!filename[2]" is redundant (should be removed)
 (or just use your fixed version instead of the last two)
 - In the test: There is no need to allocate volumepath on the heap.
   char volumepath[16] (too bad you can't use constants in C for array
   dimensions!) would also do. Also, an ok(ret,"Error...") should
   precede the if(ret) block, the else part killed. If you expect
   something, always test it with an ok statement; do not sprinkle
   ok(FALSE) later in the code.

Regards,
  Michael Karcher



From dank at kegel.com  Sat Aug 16 18:25:17 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 16 Aug 2008 16:25:17 -0700
Subject: kernel32: Tiny improvement to the GetVolumePathNameW stub (try 2)
Message-ID: <a71bd89a0808161625o38789c1dne3ac319178f77c51@mail.gmail.com>

"Louis. Lenders" <xerox_xerox2000 at yahoo.co.uk> wrote:
>  i'm sure that if this function ever gets implemented all these checks and tests are needed, but as i said, a bit of google for fixme:GetVolumePath shows the common way (the very few) apps call this function is with filename="c:\blabla\bla", so for now , in my opinion, i don't think it's worth the effort.

A simple test would be very easy and would help
convince Alexandre to apply your patch.

IMHO you should go drink a little bit of the
koolaid at http://en.wikipedia.org/wiki/Test-driven_development
Check it out; It even *sounds* like Wine development philosophy:
...
> By focusing on writing only the code necessary to pass tests, designs can be cleaner and clearer than is often achieved by other methods[3]. In Test-Driven Development by Example Kent Beck also suggests the principle "Fake it, till you make it".

- Dan


From wine at mkarcher.dialup.fu-berlin.de  Sun Aug 17 02:12:33 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sun, 17 Aug 2008 09:12:33 +0200
Subject: kernel32: Tiny improvement to the GetVolumePathNameW stub (try 3)
In-Reply-To: <419472.98802.qm@web23203.mail.ird.yahoo.com>
References: <419472.98802.qm@web23203.mail.ird.yahoo.com>
Message-ID: <1218957153.18015.0.camel@hermes2.karcher.local>

Am Samstag, den 16.08.2008, 23:56 +0000 schrieb Louis. Lenders:
> Hi Michael, thanks again for the comment, i moved the check for the
> stringlength to the front, and removed the wrong check for the
> bufferlength (oops).
Looks quite good now, but somehow the "return TRUE;" line got lost.

Regards,
  Michael Karcher



From dank at kegel.com  Sun Aug 17 10:29:57 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 17 Aug 2008 08:29:57 -0700
Subject: Patchwatcher status
Message-ID: <a71bd89a0808170829o75bf353ey5fc3bd8a331d26e1@mail.gmail.com>

Patchwatcher falsely complained that
 [2/17] richedit: Removed assumption about the order of rtf indent
didn't apply because the regexp I used to detect
the end of a patch series falsely matched the
first patch in a series of 1x patches.  Here's the fix:

--- patchwatcher.sh     (revision 150)
+++ patchwatcher.sh     (working copy)
@@ -283,7 +283,7 @@
            cat $PATCHES/$NEXT.log
         fi
         # Use a regexp with a back reference to detect last patch in
a series and break out
-        if egrep -q 'Subject:.*[0-9]+/[0-9]+' $PATCHES/$NEXT.txt && !
egrep -q 'Subject:.*([0-9]+)/\1' $PATCHES/$NEXT.txt
+        if egrep -q 'Subject:.*[0-9]+/[0-9]+' $PATCHES/$NEXT.txt && !
egrep -q 'Subject:.*([0-9]+)/\1[^0-9]' $PATCHES/$NEXT.txt
         then
             echo In middle of patch series, not wiping tree
             NEXT=`expr $NEXT + 1`

And it falsely complained that various of adam at tpetaccia.com's
patches failed because it didn't handle the case of multiple
patch series sent by the same author back to back and mixed
together by email delays.  Here's a fix:

--- get-patches.pl      (revision 150)
+++ get-patches.pl      (working copy)
@@ -147,7 +147,7 @@
        $series_num_patches = $num_patches;
     }

-    if ($series_sender ne $sender) {
+    if ($series_sender ne $sender || $series_num_patches != $num_patches) {
         #print "Ignoring series for now, will try later; sender
$sender, num_patches $num_patches, subject
".$header->get('Subject')."\n";
         # can't handle multiple series at once just yet, let it sit
         return;

That still won't handle the case of two patch series of the same length
being sent back to back by the same author, but that's
ambiguous enough that even humans might be confused,
so it should tide us over until I rewrite the patch series
detector to handle incomplete series better.

I'm on vacation so I can't apply these patches to the running instance,
I'll do it on tuesday.
- Dan


From kai.blin at gmail.com  Sun Aug 17 15:40:07 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Sun, 17 Aug 2008 22:40:07 +0200
Subject: Patchwatcher status
In-Reply-To: <a71bd89a0808140738t5342e33bp39ad1c6092d0521e@mail.gmail.com>
References: <a71bd89a0808131042h3d6b1biecfede9e678e1e28@mail.gmail.com>
	<20080814094947.GA5139@riviera.nuigalway.ie>
	<a71bd89a0808140738t5342e33bp39ad1c6092d0521e@mail.gmail.com>
Message-ID: <200808172240.10403.kai.blin@gmail.com>

On Thursday 14 August 2008 16:38:40 Dan Kegel wrote:

> What to do, what to do... how about this: are there any python users
> on the list who would be willing to help adapt buildbot to our needs?

I've subscribed to the buildbot list as well, and I'll start looking over the 
code once I figured out which VCS to install to get the latest greatest 
buildbot code. I wish people out there could just agree on which VCS is best 
and use git. ;)

If I get the api docs right, the best option seems to be to subclass their 
mailwatcher to trigger the try --diff. The hardest part will be getting the 
patch series logic to work or possibly keeping track of the regression tests. 
On the plus side, it should be possible to run buildslave instances on win32, 
so perhaps there's a decent way to build and run the tests on win32 native 
right away as well.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080817/3b9468dc/attachment.pgp 

From jjmckenzie51 at earthlink.net  Sun Aug 17 17:09:55 2008
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Sun, 17 Aug 2008 15:09:55 -0700
Subject: rpcrt4: Remove unreachable code in EmbeddedComplexSize.
In-Reply-To: <1096648c0808171033r4880b242je4acacf4e49c4ba8@mail.gmail.com>
References: <1096648c0808171033r4880b242je4acacf4e49c4ba8@mail.gmail.com>
Message-ID: <48A8A1B3.6000709@earthlink.net>

Rob Shearman wrote:
> RPC_FC_ERROR_STATUS_T has a value of 0x10 and therefore isn't a
> possible value of "flags_type & 0xf" in the switch statement.
>   
Rob:

This may be a really stupid question, but is it possible to generate
this condition?

James McKenzie



From juan.lang at gmail.com  Sun Aug 17 17:20:37 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Sun, 17 Aug 2008 15:20:37 -0700
Subject: rpcrt4: Remove unreachable code in EmbeddedComplexSize.
In-Reply-To: <48A8A1B3.6000709@earthlink.net>
References: <1096648c0808171033r4880b242je4acacf4e49c4ba8@mail.gmail.com>
	<48A8A1B3.6000709@earthlink.net>
Message-ID: <3a768c550808171520k6aebf385r3380217701e17794@mail.gmail.com>

Hi James,

>> RPC_FC_ERROR_STATUS_T has a value of 0x10 and therefore isn't a
>> possible value of "flags_type & 0xf" in the switch statement.
>
> This may be a really stupid question, but is it possible to generate
> this condition?

No, it isn't possible.  0xf & (any value) will never produce any value
larger than 0xf.  0x10 > 0xf.
--Juan


From jjmckenzie51 at earthlink.net  Sun Aug 17 18:04:18 2008
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Sun, 17 Aug 2008 16:04:18 -0700
Subject: .NET program crashes involving stubbed functions
In-Reply-To: <1218653998.6516.31.camel@belthazor-saved>
References: <1218650057.6516.25.camel@belthazor-saved>	<3f4fd2640808131132k279b9d30u2ed5e9bbc649b226@mail.gmail.com>
	<1218653998.6516.31.camel@belthazor-saved>
Message-ID: <48A8AE72.8010907@earthlink.net>

Adam Petaccia wrote:
> On Wed, 2008-08-13 at 19:32 +0100, Reece Dunn wrote:
>   
>> 2008/8/13 Adam Petaccia <adam at tpetaccia.com>:
>>     
>>> Its customary to make a function return NotImplemented in Gdiplus, if
>>> its just a dummy function that does nothing and returns. But .NET seems
>>> to check for this and throw an exception, crashing the program anyway.
>>>
>>> See bug http://bugs.winehq.org/show_bug.cgi?id=12951 for details, but
>>> originally a program crashed because GdipNewPrivateFontCollection was
>>> just a stub. After the function was created, it still crashes because it
>>> returns "NotImplemented", rather than "Ok". IIRC, we return
>>> "NotImplemented" for some debugging reason, but if the goal of Wine is
>>> to run Windows applications, should we just go ahead and return "Ok" so
>>> that .NET apps don't freak out?
>>>
>>> Of course in a perfect world, we wouldn't have to fake a return code,
>>> but until that time comes do people have opinions one way or another?
>>>       
>> The problem with returning Ok is that it implies that the function
>> succeeded in what it is intended to do. As a result, the application
>> will continue and in this case expect to be able to use the private
>> font collection. To prevent the application crashing, it is likely
>> that several functions will need to be implemented.
>>
>> Also note that the reporter of the bug mentions that they installed
>> mono. This means that using MS.NET may lead to different behaviour. It
>> also means that it should be possible to see how the
>> GdipNewPrivateFontCollection call is being used by mono and the data
>> that it returns.
>>
>> So to summarise, I suspect this will require more than simply
>> returning Ok.
>>     
> Most likely in this particular case you would be correct. But the whole
> reason we have stubs is so that (C/C++) programs don't crash, but try to
> move on, possibly with impaired functionality, but (at least with mono)
> this does absolutely zero good as the program terminates anyway, but
> this time for a different reason. 
>   
What actually happens with Mono? 
> On a side note, I thought Wine's preferred .NET was mono anyway.
>
>   
No, we are trying to implement .NET as some programs will not work with
Mono, either.  It looks like your program is one of them.

James McKenzie



From jjmckenzie51 at earthlink.net  Sun Aug 17 18:06:56 2008
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Sun, 17 Aug 2008 16:06:56 -0700
Subject: rpcrt4: Remove unreachable code in EmbeddedComplexSize.
In-Reply-To: <3a768c550808171520k6aebf385r3380217701e17794@mail.gmail.com>
References: <1096648c0808171033r4880b242je4acacf4e49c4ba8@mail.gmail.com>	
	<48A8A1B3.6000709@earthlink.net>
	<3a768c550808171520k6aebf385r3380217701e17794@mail.gmail.com>
Message-ID: <48A8AF10.1090901@earthlink.net>

Juan Lang wrote:
> Hi James,
>
>   
>>> RPC_FC_ERROR_STATUS_T has a value of 0x10 and therefore isn't a
>>> possible value of "flags_type & 0xf" in the switch statement.
>>>       
>> This may be a really stupid question, but is it possible to generate
>> this condition?
>>     
>
> No, it isn't possible.  0xf & (any value) will never produce any value
> larger than 0xf.  0x10 > 0xf.
>   
Juan:

I meant is it possible to receive a RPC_FC_ERROR_STATUS_T  (0x010) in
the original data before it is anded with 0x0f.  If this is possible,
further changes may be needed.

James McKenzie



From hongbo_ni at hotmail.com  Sun Aug 17 23:45:25 2008
From: hongbo_ni at hotmail.com (Hongbo Ni)
Date: Mon, 18 Aug 2008 14:45:25 +1000
Subject: New kernel development guide might be good model for Wine...
In-Reply-To: <a71bd89a0808152010m137f8099hb70ee14bdb89ddfe@mail.gmail.com>
References: <a71bd89a0808152010m137f8099hb70ee14bdb89ddfe@mail.gmail.com>
Message-ID: <BAY118-W1088BA11A95A63403AE189946E0@phx.gbl>


"Dan Kegel" <dank at kegel.com>  wrote:

> This guide seems rather well written:
> http://ldn.linuxfoundation.org/how-participate-linux-community
> Wine could probably use something similar.

YES, the Wine development speed can be greatly improved if similar
development process is adepted, specially the 'Chain of Commands'.

I am sure that Alexandre has done a great job as the Wine maintainer,
but he may be stressed out when he come back from his holiday as there
are pile of patches awaiting him to review and commit.


Hongbo Ni 




_________________________________________________________________
Win a Nokia E51 with mobile Hotmail SMS alerts? 
http://www.livelife.ninemsn.com.au/compIntro.aspx?compId=4589
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080818/8820333e/attachment.htm 

From hongbo_ni at hotmail.com  Sun Aug 17 23:50:54 2008
From: hongbo_ni at hotmail.com (Hongbo Ni)
Date: Mon, 18 Aug 2008 14:50:54 +1000
Subject: No subject
Message-ID: <BAY118-W359DD5A295510698653682946E0@phx.gbl>


Sorry my previous email got wrong format.

"Dan Kegel"  wrote: 
> This guide seems rather well written:
> http://ldn.linuxfoundation.org/how-participate-linux-community
> Wine could probably use something similar. 

YES, the Wine development speed can be greatly improved if similar
development process is adepted, specially the 'Chain of Commands'. 

I am sure that Alexandre has done a great job as the Wine maintainer,
but he may be stressed out when he comes back from his holiday as there
are pile of patches awaiting him to review and commit.  

Hongbo Ni 

_________________________________________________________________
Win a Nokia E51 with mobile Hotmail SMS alerts? 
http://www.livelife.ninemsn.com.au/compIntro.aspx?compId=4589

From truiken at gmail.com  Sun Aug 17 23:57:05 2008
From: truiken at gmail.com (James Hawkins)
Date: Sun, 17 Aug 2008 23:57:05 -0500
Subject: New kernel development guide might be good model for Wine...
In-Reply-To: <BAY118-W1088BA11A95A63403AE189946E0@phx.gbl>
References: <a71bd89a0808152010m137f8099hb70ee14bdb89ddfe@mail.gmail.com>
	<BAY118-W1088BA11A95A63403AE189946E0@phx.gbl>
Message-ID: <22821af30808172157j30125f01ge872b011596adcd5@mail.gmail.com>

On Sun, Aug 17, 2008 at 11:45 PM, Hongbo Ni <hongbo_ni at hotmail.com> wrote:
> "Dan Kegel" > wrote: > This guide seems rather well written: >
> http://ldn.linuxfoundation.org/how-participate-linux-community > Wine could
> probably use something similar. YES, the Wine development speed can be
> greatly improved if similar development process is adepted, specially the
> 'Chain of Commands'. I am sure that Alexandre has done a great job as the
> Wine maintainer, but he may be stressed out when he come back from his
> holiday as there are pile of patches awaiting him to review and commit.
> Hongbo Ni
>

I don't believe that was Dan's intention when he referred to that
document.  Dan is saying that the overall format of the document is
helpful, and we should write our own version of it that matches the
Wine development process.

We can always use more help, but for the developers we do have, we're
developing at a speedy pace.  Also, Julliard hasn't had trouble
scaling with the pace of development so far.  We just need to write
down this process in words in order to reduce the learning curve that
keeps developers away from successful Wine development.

-- 
James Hawkins


From ghosler at redhat.com  Mon Aug 18 00:02:52 2008
From: ghosler at redhat.com (Gregory Hosler)
Date: Mon, 18 Aug 2008 13:02:52 +0800
Subject: How to use wine to load windows dll files ?
Message-ID: <48A9027C.2040405@redhat.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi All,

I'm a developer of an open source project that needs to load some windows dlls
for conversion routines.

Specifically, I'm the lead developer of GyachI

	https://sourceforge.net/projects/gyachi/

a Yahoo Messenger client.

In GyachI, in order to support speech in chat rooms, we make use of the window
dll codec files (supplied by the end user) to do the necessary codec
compression/decompression.

At the present moment, we copied mplayer's method of loading the dll files. That
is to say that we have some very old wine code in our source tree. It works, but
as and when a user runs GyachI on a box with wine installed, then GyachI will
run against the installed wine libraries instead of the inbuilt wine code (not
sure how, but this seems to be the case, from several reports).

Since the code that we're using is all wine code, and in fact it is in the wine
libraries, I would like to purge the wine code out of our project tree, and just
compile/link against the necessary wine header files / wine libraries. To that
extent, I have been able to remove the wine code from a build tree, and using
the wine header files, I can get my code to compile. However, when I go to link,
I get a number of undefined symbols.

Some of the undefined symbols (at link time) are:

	undefined reference to `CloseDriver'
	undefined reference to `CodecAlloc'
	undefined reference to `CodecRelease'
	undefined reference to `export_names'
	undefined reference to `GetProcAddress'
	undefined reference to `HeapAlloc'
	undefined reference to `HeapFree'
	undefined reference to `OpenDriverA'
	undefined reference to `SendDriverMessage'
	undefined reference to `__vprintf'

Upon investigation, I've discovered that many of the routines that I'm linking
against are not in libwine.so, but instead, they are in other libraries. e.g.
/usr/lib/wine/user32.dll.so, /usr/lib/wine/winmm.dll.so, and a few others.


I would like to know how to link to and make use of these routines in the
respective wine libraries. I'm willing to write any stub code that might need to
be written, but I cannot find any documentation of what needs to be done.

Any suggestions, pointers, links, urls, etc., would be most appreciated. Code
samples (e.g. from other projects doing what I'm trying to do) would also be
much appreciated. :)

Many thanks, and best rgds,

- -Greg

- --
+---------------------------------------------------------------------+

Please also check the log file at "/dev/null" for additional information.
                (from /var/log/Xorg.setup.log)

| Greg Hosler                                   ghosler at redhat.com    |
+---------------------------------------------------------------------+
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.7 (GNU/Linux)
Comment: Using GnuPG with Fedora - http://enigmail.mozdev.org

iD8DBQFIqQJ6404fl/0CV/QRAivBAJ0c66W7ePiItK8ZvNnZ/1nLErSWKwCfRRD7
PbePRptt6e8mEEefwRx2YsE=
=euK4
-----END PGP SIGNATURE-----


From wine-devel at kievinfo.com  Mon Aug 18 00:27:41 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 17 Aug 2008 23:27:41 -0600
Subject: How to use wine to load windows dll files ?
In-Reply-To: <48A9027C.2040405@redhat.com>
References: <48A9027C.2040405@redhat.com>
Message-ID: <48A9084D.8050209@kievinfo.com>

Gregory Hosler wrote:
> Upon investigation, I've discovered that many of the routines that I'm linking
> against are not in libwine.so, but instead, they are in other libraries. e.g.
> /usr/lib/wine/user32.dll.so, /usr/lib/wine/winmm.dll.so, and a few others.
> 
> 
> I would like to know how to link to and make use of these routines in the
> respective wine libraries. I'm willing to write any stub code that might need to
> be written, but I cannot find any documentation of what needs to be done.
> 
This topic keeps coming back every other week. The simple answer - no you
can't link your native Linux program against Wine "libraries" and expect it
to work.

The long answer - Wine is not just set of libraries but an environment that
have to be setup for windows applications (and Wine itself) to run properly.
 This includes "kernel"(wineserver), memory layout, files, registry, user
objects, gdi, on and on and on.

If you need only one small part from Wine - just take the code and adapt it.
This is what mplayer did.

Vitaliy.


From robertshearman at gmail.com  Mon Aug 18 01:22:18 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Mon, 18 Aug 2008 07:22:18 +0100
Subject: rpcrt4: Remove unreachable code in EmbeddedComplexSize.
In-Reply-To: <48A8AF10.1090901@earthlink.net>
References: <1096648c0808171033r4880b242je4acacf4e49c4ba8@mail.gmail.com>
	<48A8A1B3.6000709@earthlink.net>
	<3a768c550808171520k6aebf385r3380217701e17794@mail.gmail.com>
	<48A8AF10.1090901@earthlink.net>
Message-ID: <1096648c0808172322q63daf89aic5b5353d116e795a@mail.gmail.com>

2008/8/18 James McKenzie <jjmckenzie51 at earthlink.net>:
> Juan Lang wrote:
>> Hi James,
>>
>>
>>>> RPC_FC_ERROR_STATUS_T has a value of 0x10 and therefore isn't a
>>>> possible value of "flags_type & 0xf" in the switch statement.
>>>>
>>> This may be a really stupid question, but is it possible to generate
>>> this condition?
>>>
>>
>> No, it isn't possible.  0xf & (any value) will never produce any value
>> larger than 0xf.  0x10 > 0xf.
>>
> Juan:
>
> I meant is it possible to receive a RPC_FC_ERROR_STATUS_T  (0x010) in
> the original data before it is anded with 0x0f.  If this is possible,
> further changes may be needed.

This data comes from the IDL compiler. The format is specified here:
http://msdn.microsoft.com/en-us/library/aa379131(VS.85).aspx.

If the IDL compiler tries to put RPC_FC_ERROR_STATUS_T into the type
nibble then it is buggy. MIDL refuses to do so:

.\test.idl(66) : error MIDL2072 : inapplicable attribute : [range] [
Type 'error_status_t' ( Parameter 'l' ) ]

-- 
Rob Shearman


From wine.dev at web.de  Mon Aug 18 02:30:32 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Mon, 18 Aug 2008 09:30:32 +0200
Subject: ntdll/file: Add sub-second resolution to NtQueryInformationFile
In-Reply-To: <1218992624.18015.22.camel@hermes2.karcher.local>
References: <1218992624.18015.22.camel@hermes2.karcher.local>
Message-ID: <1219044632.5626.19.camel@p4.lan>

On So, 2008-08-17 at 19:03 +0200, Michael Karcher wrote:
> ---
>  configure           |  303
> +++++++++++++++++++++++++++++++++++++++++++++++++++

You should never include autogenerated code in a Patch.
This will reduce the risk, that your Patch does not apply
after a different Patch was commited.


-- 
 
By by ... Detlef




From bunglehead at gmail.com  Mon Aug 18 02:38:29 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Mon, 18 Aug 2008 11:38:29 +0400
Subject: [Gdiplus 1/5] Tests for PrivateFontCollection
In-Reply-To: <1218943752.6823.128.camel@belthazor-saved>
References: <1218943752.6823.128.camel@belthazor-saved>
Message-ID: <48A926F5.8070202@gmail.com>

Adam Petaccia wrote:
> ---
>  dlls/gdiplus/tests/font.c |   81 +++++++++++++++++++++++++++++++++++++++++++++
>  1 files changed, 81 insertions(+), 0 deletions(-)
>
> diff --git a/dlls/gdiplus/tests/font.c b/dlls/gdiplus/tests/font.c
> index 3d30a86..b19f0aa 100644
> --- a/dlls/gdiplus/tests/font.c
> +++ b/dlls/gdiplus/tests/font.c
> @@ -28,6 +28,7 @@ static const WCHAR arial[] = {'A','r','i','a','l','\0'};
>  static const WCHAR nonexistent[] = {'T','h','i','s','F','o','n','t','s','h','o','u','l','d','N','o','t','E','x','i','s','t','\0'};
>  static const WCHAR MSSansSerif[] = {'M','S',' ','S','a','n','s',' ','S','e','r','i','f','\0'};
>  static const WCHAR MicrosoftSansSerif[] = {'M','i','c','r','o','s','o','f','t',' ','S','a','n','s',' ','S','e','r','i','f','\0'};
> +static const WCHAR Tahoma[] = {'T','a','h','o','m','a','\0'};
>  static const WCHAR TimesNewRoman[] = {'T','i','m','e','s',' ','N','e','w',' ','R','o','m','a','n','\0'};
>  static const WCHAR CourierNew[] = {'C','o','u','r','i','e','r',' ','N','e','w','\0'};
>  
> @@ -333,6 +334,85 @@ monospace:
>      expect (Ok, stat);
>  }
>  
> +static void test_fontcollections(void)
> +{
> +    const static WCHAR tahomafilename[] = {'C',':','\\','W','I','N','D','O','W','S','\\','F','o','n','t','s','\\','T','a','h','o','m','a','.','t','t','f','\0'};
> +    const static WCHAR timesNRfilename[] = {'C',':','\\','W','I','N','D','O','W','S','\\','F','o','n','t','s','\\','T','i','m','e','s','.','t','t','f','\0'};
> +    const static WCHAR badFileName[] = {'C',':','\\','W','I','N','D','O','W','S','\\','F','o','n','t','s','\\','S','h','o','u','l','d','n','o','t','e','x','i','s','t','.','t','t','f','\0'};
> +
> +    static WCHAR familyName[LF_FACESIZE];
> +    GpStatus stat;
> +    GpFontCollection* PrivateFontCollection;
> +    GpFontFamily** fontFamily;
> +    INT expected = 0, count = 0, i;
> +    BOOL hastahoma, hastimesnr;
> +
> +    stat = GdipNewPrivateFontCollection(&PrivateFontCollection);
> +todo_wine
> +    expect(Ok, stat);
> +    stat = GdipPrivateAddFontFile(PrivateFontCollection, NULL);
> +    expect(InvalidParameter, stat);
> +todo_wine{
> +    stat = GdipPrivateAddFontFile(PrivateFontCollection, badFileName);
> +    expect(FileNotFound, stat);
> +
> +    stat = GdipPrivateAddFontFile(PrivateFontCollection, tahomafilename);
> +    if (stat == Ok)
> +    {
> +        expected++;
> +        hastahoma = TRUE;
> +    }
> +
> +    stat = GdipPrivateAddFontFile(PrivateFontCollection, timesNRfilename);
> +    if (stat == Ok)
> +    {
> +        expected++;
> +        hastimesnr = TRUE;
> +    }
> +
> +    stat = GdipGetFontCollectionFamilyCount(PrivateFontCollection, &count);
> +    expect(Ok, stat);
> +    expect(expected, count);
> +
> +    expected = count;
> +
> +    /* Test retrieving of installed fonts */
> +    fontFamily = GdipAlloc(sizeof(GpFontFamily*) * count);
> +    stat = GdipGetFontCollectionFamilyList(PrivateFontCollection, count,
> +            fontFamily, &count);
> +    expect(Ok, stat);
> +    expect(expected, count);
> +    if (stat == Ok)
> +    {
> +        i = 0;
> +        if (hastahoma)
> +        {
> +            GdipGetFamilyName(fontFamily[i], familyName, LANG_NEUTRAL);
> +            ok(lstrcmpiW(familyName, Tahoma) == 0, "Expected Tahoma, got %s\n",
> +                    debugstr_w(familyName));
> +            i++;
> +        }
> +
> +        if (hastimesnr)
> +        {
> +            GdipGetFamilyName(fontFamily[i], familyName, LANG_NEUTRAL);
> +            ok(lstrcmpiW(familyName, TimesNewRoman) == 0, "Expected Times New "
> +                "Roman, got %s\n", debugstr_w(familyName));
> +            i++;
>   
This i++ is redundant, isn't it?
> +        }
> +    }
> +
> +    for (i = 0; i < count; i++)
> +    {
> +        stat = GdipDeleteFontFamily(fontFamily[i]);
> +        expect(Ok, stat);
> +    }
> +}
> +
> +    stat = GdipDeletePrivateFontCollection(&PrivateFontCollection);
> +    expect(Ok, stat);
> +}
> +
>  START_TEST(font)
>  {
>      struct GdiplusStartupInput gdiplusStartupInput;
> @@ -350,6 +430,7 @@ START_TEST(font)
>      test_fontfamily();
>      test_fontfamily_properties();
>      test_getgenerics();
> +    test_fontcollections();
>  
>      GdiplusShutdown(gdiplusToken);
>  }
>   



From wine at mkarcher.dialup.fu-berlin.de  Mon Aug 18 02:41:51 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Mon, 18 Aug 2008 09:41:51 +0200
Subject: ntdll/file: Add sub-second resolution to NtQueryInformationFile
In-Reply-To: <1219044632.5626.19.camel@p4.lan>
References: <1218992624.18015.22.camel@hermes2.karcher.local>
	<1219044632.5626.19.camel@p4.lan>
Message-ID: <1219045311.4654.2.camel@hermes2.karcher.local>

Am Montag, den 18.08.2008, 09:30 +0200 schrieb Detlef Riekenberg:
> On So, 2008-08-17 at 19:03 +0200, Michael Karcher wrote:
> > ---
> >  configure           |  303
> > +++++++++++++++++++++++++++++++++++++++++++++++++++
> 
> You should never include autogenerated code in a Patch.
> This will reduce the risk, that your Patch does not apply
> after a different Patch was commited.

I feel the same, but I thought that configure is not in the
toplevel .gitignore on some purpose I don't understand. If I should not
include that file into the patch, shouldn't the generated .gitignore be
fixed? (This also applies to include/config.h.in)

Regards,
  Michael Karcher



From dmitry at codeweavers.com  Mon Aug 18 02:50:05 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Mon, 18 Aug 2008 16:50:05 +0900
Subject: ntdll/file: Add sub-second resolution to NtQueryInformationFile
References: <1218992624.18015.22.camel@hermes2.karcher.local>
	<1219044632.5626.19.camel@p4.lan>
Message-ID: <29C05AE4EEAF48E8B04C4E16DFE67E2C@DMITRY>

"Detlef Riekenberg" wine.dev at web.de wrote:

> On So, 2008-08-17 at 19:03 +0200, Michael Karcher wrote:
>> ---
>>  configure           |  303
>> +++++++++++++++++++++++++++++++++++++++++++++++++++
> 
> You should never include autogenerated code in a Patch.
> This will reduce the risk, that your Patch does not apply
> after a different Patch was commited.

Btw, how does patchwatcher handle that? Does it detect that in the case
of changing config.h.in, dlls/Makefile.in, server/protocol.def it needs
to regenerate the files by running autoconf, tools/make_requests, or
tools/make_makefiles?

-- 
Dmitry.


From mah at jump-ing.de  Mon Aug 18 03:44:20 2008
From: mah at jump-ing.de (Markus Hitter)
Date: Mon, 18 Aug 2008 10:44:20 +0200
Subject: New kernel development guide might be good model for Wine...
In-Reply-To: <22821af30808172157j30125f01ge872b011596adcd5@mail.gmail.com>
References: <a71bd89a0808152010m137f8099hb70ee14bdb89ddfe@mail.gmail.com>
	<BAY118-W1088BA11A95A63403AE189946E0@phx.gbl>
	<22821af30808172157j30125f01ge872b011596adcd5@mail.gmail.com>
Message-ID: <2FC252EA-44B7-49D7-AA2A-A40214BA695E@jump-ing.de>


Am 18.08.2008 um 06:57 schrieb James Hawkins:

> Also, Julliard hasn't had trouble scaling with the pace of  
> development so far.

I'd be not so sure about this. So far I've filed four bugs and sent  
two patches. Bugs get little or no attention, patches obviously  
rushed through unnoticed.

Good thing is, with patchwatcher we have a tool for listing open  
patches now, allowing to monitor their status. At least I hope so.


MarKus

- - - - - - - - - - - - - - - - - - -
Dipl. Ing. Markus Hitter
http://www.jump-ing.de/






From mstefani at redhat.com  Mon Aug 18 04:25:33 2008
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Mon, 18 Aug 2008 11:25:33 +0200
Subject: New kernel development guide might be good model for Wine...
In-Reply-To: <2FC252EA-44B7-49D7-AA2A-A40214BA695E@jump-ing.de>
References: <a71bd89a0808152010m137f8099hb70ee14bdb89ddfe@mail.gmail.com>	<BAY118-W1088BA11A95A63403AE189946E0@phx.gbl>	<22821af30808172157j30125f01ge872b011596adcd5@mail.gmail.com>
	<2FC252EA-44B7-49D7-AA2A-A40214BA695E@jump-ing.de>
Message-ID: <48A9400D.9070705@redhat.com>

Markus Hitter wrote:
> Am 18.08.2008 um 06:57 schrieb James Hawkins:
> 
>> Also, Julliard hasn't had trouble scaling with the pace of  
>> development so far.
> 
> I'd be not so sure about this. So far I've filed four bugs and sent  
> two patches. Bugs get little or no attention, patches obviously  
> rushed through unnoticed.
Bugs are NOT Alexandre's responsibility. There are other people doing
the bugzilla triaging and those guys are always on a lookout for help.
Even reviewing the patches is not only Alexandre's job. Everybody can
and should do that but please try to be polite. For some parts of Wine
Alexandre already relies on the "maintainers" of that code to bless the
patch; wined3d is probably the most prominent example.

So yes, Alexandre scales pretty well with committing 100 patches a day.
He doesn't scale at replying to trivially "wrong" patches but everybody
can reply to those and actually they should do that.

> Good thing is, with patchwatcher we have a tool for listing open  
> patches now, allowing to monitor their status. At least I hope so.
That's the good part for the developers to see the trivial reasons why
their patch was rejected. That will relieve Alexandre from repeating the
same boring reasons why a patch was rejected.

bye
	michael


From huw at codeweavers.com  Mon Aug 18 04:47:37 2008
From: huw at codeweavers.com (Huw Davies)
Date: Mon, 18 Aug 2008 10:47:37 +0100
Subject: [Gdiplus] Implement GdipCloneImage
In-Reply-To: <1218943602.6823.75.camel@belthazor-saved>
References: <1218943602.6823.75.camel@belthazor-saved>
Message-ID: <20080818094737.GA29050@merlot.physics.ox.ac.uk>

On Sat, Aug 16, 2008 at 11:26:42PM -0400, Adam Petaccia wrote:
> This seems like the right thing to do, but OleLoadImage fails.
> Comments welcome.
> ---
>  dlls/gdiplus/image.c       |   42 ++++++++++++++++++++++++++++++++++++++++--
>  dlls/gdiplus/tests/image.c |    2 +-
>  2 files changed, 41 insertions(+), 3 deletions(-)
> 
> diff --git a/dlls/gdiplus/image.c b/dlls/gdiplus/image.c
> index 197665d..a74003f 100644
> --- a/dlls/gdiplus/image.c
> +++ b/dlls/gdiplus/image.c
> @@ -242,11 +242,49 @@ GpStatus WINGDIPAPI GdipBitmapUnlockBits(GpBitmap* bitmap,
>  
>  GpStatus WINGDIPAPI GdipCloneImage(GpImage *image, GpImage **cloneImage)
>  {

> +    hr = OleLoadPicture(stream, size, FALSE, &IID_IPicture,
> +            (LPVOID*)(*cloneImage)->picture);

This can't be right.  You need to pass the address of the interface
ptr.

Huw.
-- 
Huw Davies
huw at codeweavers.com


From bunglehead at gmail.com  Mon Aug 18 05:10:52 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Mon, 18 Aug 2008 14:10:52 +0400
Subject: [Gdiplus 8/9] Implement GdipGetFontHeight
In-Reply-To: <1218943747.6823.124.camel@belthazor-saved>
References: <1218943747.6823.124.camel@belthazor-saved>
Message-ID: <48A94AAC.3030705@gmail.com>

Adam Petaccia wrote:
> ---
>  dlls/gdiplus/font.c       |   18 ++++++++++++++++++
>  dlls/gdiplus/gdiplus.spec |    2 +-
>  include/gdiplusflat.h     |    2 ++
>  3 files changed, 21 insertions(+), 1 deletions(-)
>
> diff --git a/dlls/gdiplus/font.c b/dlls/gdiplus/font.c
> index 0c78bd5..5e1a14e 100644
> --- a/dlls/gdiplus/font.c
> +++ b/dlls/gdiplus/font.c
> @@ -387,6 +387,24 @@ GpStatus WINGDIPAPI GdipCloneFont(GpFont *font, GpFont **cloneFont)
>  }
>  
>  /*******************************************************************************
> + * GdipGetFontHeight [GDIPLUS.@]
> + */
> +GpStatus WINGDIPAPI GdipGetFontHeight(GDIPCONST GpFont *font,
> +        GDIPCONST GpGraphics *graphics, REAL *height)
> +{
> +    REAL dpi;
> +    GpStatus stat;
> +
> +    TRACE("%p %p %p\n", font, graphics, height);
> +
> +    stat = GdipGetDpiX(graphics, &dpi);
>   
Is it normal that you use GdipGetDpiX and not GdipGetDpiY? I'm not much 
familiar with fonts so treat it like a
question. It seems to me that height is measured using another axis.
> +    if (stat != Ok)
> +        return stat;
> +
> +    return GdipGetFontHeightGivenDPI(font, dpi, height);
> +}
> +
> +/*******************************************************************************
>   * GdipGetFontHeightGivenDPI [GDIPLUS.@]
>   * PARAMS
>   *  font        [I] Font to retrieve DPI from
> diff --git a/dlls/gdiplus/gdiplus.spec b/dlls/gdiplus/gdiplus.spec
> index f1ad0d4..e37eeec 100644
> --- a/dlls/gdiplus/gdiplus.spec
> +++ b/dlls/gdiplus/gdiplus.spec
> @@ -267,7 +267,7 @@
>  @ stdcall GdipGetFamilyName(ptr ptr long)
>  @ stdcall GdipGetFontCollectionFamilyCount(ptr ptr)
>  @ stdcall GdipGetFontCollectionFamilyList(ptr long ptr ptr)
> -@ stub GdipGetFontHeight
> +@ stdcall GdipGetFontHeight(ptr ptr ptr)
>  @ stdcall GdipGetFontHeightGivenDPI(ptr long ptr)
>  @ stdcall GdipGetFontSize(ptr ptr)
>  @ stdcall GdipGetFontStyle(ptr ptr)
> diff --git a/include/gdiplusflat.h b/include/gdiplusflat.h
> index 17fae9c..f650e24 100644
> --- a/include/gdiplusflat.h
> +++ b/include/gdiplusflat.h
> @@ -425,6 +425,8 @@ GpStatus WINGDIPAPI GdipGetFamily(GpFont*, GpFontFamily**);
>  GpStatus WINGDIPAPI GdipGetFontUnit(GpFont*, Unit*);
>  GpStatus WINGDIPAPI GdipGetFontSize(GpFont*, REAL*);
>  GpStatus WINGDIPAPI GdipGetFontStyle(GpFont*, INT*);
> +GpStatus WINGDIPAPI GdipGetFontHeight(GDIPCONST GpFont*, GDIPCONST GpGraphics*,
> +        REAL*);
>  GpStatus WINGDIPAPI GdipGetFontHeightGivenDPI(GDIPCONST GpFont*, REAL, REAL*);
>  
>  GpStatus WINGDIPAPI GdipCreateFontFamilyFromName(GDIPCONST WCHAR*,
>   



From mah at jump-ing.de  Mon Aug 18 07:40:36 2008
From: mah at jump-ing.de (Markus Hitter)
Date: Mon, 18 Aug 2008 14:40:36 +0200
Subject: New kernel development guide might be good model for Wine...
In-Reply-To: <48A9400D.9070705@redhat.com>
References: <a71bd89a0808152010m137f8099hb70ee14bdb89ddfe@mail.gmail.com>	<BAY118-W1088BA11A95A63403AE189946E0@phx.gbl>	<22821af30808172157j30125f01ge872b011596adcd5@mail.gmail.com>
	<2FC252EA-44B7-49D7-AA2A-A40214BA695E@jump-ing.de>
	<48A9400D.9070705@redhat.com>
Message-ID: <09A19565-686D-4168-99E1-7E919D49D152@jump-ing.de>


Am 18.08.2008 um 11:25 schrieb Michael Stefaniuc:

> He [Alexandre] doesn't scale at replying to trivially "wrong"  
> patches but everybody
> can reply to those and actually they should do that.


Unfortunately, a developer can't review his patches himself and if  
the patch reviewing group is to busy to even drop a line "formatted  
wrongly" or "functionality not needed" it's unlikely new developers  
will ever pick up working for Wine. For now I've stopped my work as I  
haven't even an idea wether my patches will be applied some day,  
wether they were considered obsolete (they're small) or wether they  
are considered as wrong in some way. Worsely, there's no obvious way  
to learn how to do better as I followed the patch sending HowTo  
closely already.

I'll try again in a few weeks, as suggested in the HowTo, and clutter  
Alexandre's mailbox even more.


MarKus

- - - - - - - - - - - - - - - - - - -
Dipl. Ing. Markus Hitter
http://www.jump-ing.de/






From wine at mkarcher.dialup.fu-berlin.de  Mon Aug 18 08:09:08 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Mon, 18 Aug 2008 15:09:08 +0200
Subject: Better reflect the current state of DrawIconEx
In-Reply-To: <6159D9BE-E3B6-4A84-BE8C-9C73F8A4EAEA@jump-ing.de>
References: <6159D9BE-E3B6-4A84-BE8C-9C73F8A4EAEA@jump-ing.de>
Message-ID: <1219064948.4654.11.camel@hermes2.karcher.local>

You indirectly asked for review of your patches. The comments below
might be reasons your patch did not get accepted. Best way to handle
ignored patches is to look over the patch again, and if one does not see
something that can be improved, just ask on wine-devel or (even better)
the IRC channel whether anyone can see something wrong with that patch.

Am Montag, den 21.07.2008, 21:17 +0200 schrieb Markus Hitter:
> diff --git a/dlls/user32/cursoricon.c b/dlls/user32/cursoricon.c
> index a1ba570..eca9bfb 100644
> --- a/dlls/user32/cursoricon.c
> +++ b/dlls/user32/cursoricon.c
> @@ -1979,7 +1979,9 @@ BOOL WINAPI DrawIconEx( HDC hdc, INT x0, INT  
> y0, HICON hIcon,
>       if (istep)
>           FIXME_(icon)("Ignoring istep=%d\n", istep);
>       if (flags & DI_COMPAT)
> -        FIXME_(icon)("Ignoring flag DI_COMPAT\n");
> +        FIXME_(icon)("DI_COMPAT flag unimplemented (before NT4.0)\n");
As this flag is ignored on newer windows versions, you might think about
removing that check altogether instead of just changing the message.

> +    if (flags & DI_NOMIRROR)
> +        FIXME_(icon)("DI_NOMIRROR flag unimplemented (XP or later)\n");
As a wine user, I don't care which windows versions implement this flag.
What I do care about is whether the program requested some functionality
from wine it can't handle. So I would just show a message that says
"DI_NOMIRROR flag unimplemented", and skip the version information.

Regards,
  Michael Karcher



From wine at mkarcher.dialup.fu-berlin.de  Mon Aug 18 08:13:48 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Mon, 18 Aug 2008 15:13:48 +0200
Subject: Add TRACEs to NtCreateFile returns
In-Reply-To: <A80A4471-F9A3-46DE-82B5-DA17D3CE31F0@jump-ing.de>
References: <A80A4471-F9A3-46DE-82B5-DA17D3CE31F0@jump-ing.de>
Message-ID: <1219065228.4654.17.camel@hermes2.karcher.local>

Another review.

Am Sonntag, den 20.07.2008, 22:42 +0200 schrieb Markus Hitter:
> Similar to NtReadFile and NtWriteFile, NtCreateFile should trace  
> return values on request. Providing the file handle allows to map  
> read/write requests to the corresponding file name.
Seems very sensible. Your implementation looks OK, except for me not
being sure whether status codes are usually printed decimal or
hexadecimal. Please check.

> Additionally, wrap a overly long line.
Please don't put a style change and a functionality change that are
independent into the same patch. Usual convention is to leave style of
code parts one does not touch alone. If you really feel like that line
should be changed, submit it as seperate patch.

Regards,
  Michael Karcher




From robertshearman at gmail.com  Mon Aug 18 08:47:57 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Mon, 18 Aug 2008 14:47:57 +0100
Subject: Add TRACEs to NtCreateFile returns
In-Reply-To: <1219065228.4654.17.camel@hermes2.karcher.local>
References: <A80A4471-F9A3-46DE-82B5-DA17D3CE31F0@jump-ing.de>
	<1219065228.4654.17.camel@hermes2.karcher.local>
Message-ID: <1096648c0808180647x520b729bnd7bdae0861c1b6ca@mail.gmail.com>

2008/8/18 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> Another review.
>
> Am Sonntag, den 20.07.2008, 22:42 +0200 schrieb Markus Hitter:
>> Similar to NtReadFile and NtWriteFile, NtCreateFile should trace
>> return values on request. Providing the file handle allows to map
>> read/write requests to the corresponding file name.
> Seems very sensible. Your implementation looks OK, except for me not
> being sure whether status codes are usually printed decimal or
> hexadecimal. Please check.

Yes, variables should be dumped in the same format as the constants
that are put into them so that you can grep the headers for them
instead of having to put them into a calculator to convert them first.
In this case, the status values are in include/ntstatus.h and are in
hexadecimal format and so the TRACE format should match this.

Additionally, the common format for dumping return values is, for
example, "trace:ntdll:NtReadFile -- 0xc0000005" or
"trace:ntdll:NtReadFile returning 0xc0000005" not
"trace:ntdll:NtReadFile = 0xc0000005".

-- 
Rob Shearman


From winehacker at gmail.com  Mon Aug 18 12:11:55 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Mon, 18 Aug 2008 13:11:55 -0400
Subject: winetricks: add ie6 verb
Message-ID: <19e31a080808181011r5fdaa473qf98203531a7a8343@mail.gmail.com>

This might be of use to someone wanting to compare Wine IE gecko
rendering to IE6 without having to use a bigger hack like ies4linux. I
am sending here rather than privately to Dan as I don't expect it to
be merged to winetricks mainline

Changelog: Add ie6 verb and support IE6

<rant>
I doubt Dan will merge it (no disrespect intended, I am not trying to
single him out) because it might be viewed as 'lacking sense taste'
whatever that is supposed to mean, see

http://www.winehq.org/pipermail/wine-devel/2008-July/067109.html

regarding a script for Media player and codecs. I don't see what could
be poor taste if Wine is going to have to reimplement this stuff
anyway, to provide support for it in winetricks so developers can
compare native verses builtin. All the better if some users find it of
use too. I would see something like Office being added as crossing the
line Dan has drawn for winetricks being a developer tool rather than a
user tool but that is not really my point in any case.

We've been accused in private by other that Bordeaux will not, or does
not contribut back to Wine, leeches off of Winehq in a Transgaming
like style, etc. Even though 90% of my patches and ideas (however
small they are) have been rejected and even with IE being a nice part
of the revenue stream, I've decide to give the hack back in all of its
glory. We are committed to maintain NO "proprietary advantages" and
seeing everything that runs on Bordeaux work out of the box on the
next Wine stable release. We don't have the development staff or
funding yet to fully ramp up and be as active as we would like to be
but here is another token of our commitment.
</rant>

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo
-------------- next part --------------
A non-text attachment was scrubbed...
Name: winetricks-ie.diff
Type: text/x-diff
Size: 3562 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080818/9433b40e/attachment.diff 

From truiken at gmail.com  Mon Aug 18 12:53:56 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 18 Aug 2008 12:53:56 -0500
Subject: New kernel development guide might be good model for Wine...
In-Reply-To: <09A19565-686D-4168-99E1-7E919D49D152@jump-ing.de>
References: <a71bd89a0808152010m137f8099hb70ee14bdb89ddfe@mail.gmail.com>
	<BAY118-W1088BA11A95A63403AE189946E0@phx.gbl>
	<22821af30808172157j30125f01ge872b011596adcd5@mail.gmail.com>
	<2FC252EA-44B7-49D7-AA2A-A40214BA695E@jump-ing.de>
	<48A9400D.9070705@redhat.com>
	<09A19565-686D-4168-99E1-7E919D49D152@jump-ing.de>
Message-ID: <22821af30808181053g1ce2314fn5b3a8e61e39dc7b8@mail.gmail.com>

On Mon, Aug 18, 2008 at 7:40 AM, Markus Hitter <mah at jump-ing.de> wrote:
>
> Am 18.08.2008 um 11:25 schrieb Michael Stefaniuc:
>
>> He [Alexandre] doesn't scale at replying to trivially "wrong"
>> patches but everybody
>> can reply to those and actually they should do that.
>
>
> Unfortunately, a developer can't review his patches himself and if
> the patch reviewing group is to busy to even drop a line "formatted
> wrongly" or "functionality not needed" it's unlikely new developers
> will ever pick up working for Wine. For now I've stopped my work as I
> haven't even an idea wether my patches will be applied some day,
> wether they were considered obsolete (they're small) or wether they
> are considered as wrong in some way. Worsely, there's no obvious way
> to learn how to do better as I followed the patch sending HowTo
> closely already.
>

Why can't a developer review his own patch?  If your patch is not
committed, the first thing you should do is look the patch over for
obvious mistakes.  That is the main reason why a patch is dropped.  If
you've made sure you're patch is clean, then you can ask on wine-devel
or IRC why your patch was rejected.  It's your patch and it's your
responsibility to put in the amount of work required to get it
accepted.  It's the same process for everyone.

-- 
James Hawkins


From wine at mkarcher.dialup.fu-berlin.de  Mon Aug 18 13:31:28 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Mon, 18 Aug 2008 20:31:28 +0200
Subject: shlwapi: add some more tests for UrlUnEscape
In-Reply-To: <135804.34183.qm@web23206.mail.ird.yahoo.com>
References: <135804.34183.qm@web23206.mail.ird.yahoo.com>
Message-ID: <1219084288.4654.25.camel@hermes2.karcher.local>

Am Montag, den 18.08.2008, 08:46 +0000 schrieb Louis. Lenders:
> hi, tests show that UrlUnEscape still converts the url-string if the
> bufferpointer is set to NULL, and the 
> URL_UNESCAPE_INPLACE is set. Test passes fine with native shlwapi, and
> in wine after applying the previous sent patch :
> http://www.winehq.org/pipermail/wine-patches/attachments/20080814/d5feb31b/attachment.txt

Please resend the patch including the testcase, instead of sending a
testcase alone. This puts test & fix into the same entry in git history,
so that a later review of the changes is eased by having the appropriate
testcase directly at hand. Patches including testcases also have a
higher chance of getting committed.

Regards,
  Michael Karcher




From kai.blin at gmail.com  Mon Aug 18 15:18:38 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Mon, 18 Aug 2008 22:18:38 +0200
Subject: ntdll/file: Add sub-second resolution to NtQueryInformationFile
In-Reply-To: <29C05AE4EEAF48E8B04C4E16DFE67E2C@DMITRY>
References: <1218992624.18015.22.camel@hermes2.karcher.local>
	<1219044632.5626.19.camel@p4.lan>
	<29C05AE4EEAF48E8B04C4E16DFE67E2C@DMITRY>
Message-ID: <200808182218.42218.kai.blin@gmail.com>

On Monday 18 August 2008 09:50:05 Dmitry Timoshkov wrote:
> "Detlef Riekenberg" wine.dev at web.de wrote:
> > On So, 2008-08-17 at 19:03 +0200, Michael Karcher wrote:
> >> ---
> >>  configure           |  303
> >> +++++++++++++++++++++++++++++++++++++++++++++++++++
> >
> > You should never include autogenerated code in a Patch.
> > This will reduce the risk, that your Patch does not apply
> > after a different Patch was commited.
>
> Btw, how does patchwatcher handle that? Does it detect that in the case
> of changing config.h.in, dlls/Makefile.in, server/protocol.def it needs
> to regenerate the files by running autoconf, tools/make_requests, or
> tools/make_makefiles?

Not at all.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080818/886c86b2/attachment.pgp 

From slindeneau at gmail.com  Mon Aug 18 15:35:54 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Tue, 19 Aug 2008 05:35:54 +0900
Subject: [PATCH] AcceptEx Impelementation
In-Reply-To: <200808100916.36894.kai.blin@gmail.com>
References: <81fd805b0808040029m56821adepe4c7c98cc81c8ecc@mail.gmail.com>
	<200808100916.36894.kai.blin@gmail.com>
Message-ID: <81fd805b0808181335h6af0f9d8va26c5f42c8f0ea79@mail.gmail.com>

Date: Mon, 4 Aug 2008 05:20:43 -0700
From: "Dan Kegel" <dank at kegel.com>
>2) port some existing accept() conformance tests from ws2_32/tests/sock.c
>to use AcceptEx(), add a bit to check the special new features,
>and make sure they pass on Windows.

On Sun, Aug 10, 2008 at 4:16 PM, Kai Blin <kai.blin at gmail.com> wrote:
>
> The indentation common in socket.c is either a two-space indent or a
> four-space indent. Please don't add new code with an eight-space indent.
>
> Also, the common convention for ifs is
> if (cond)
> {
> and not
> if(cond){

Thanks guys. I only work on this stuff every so often so I apologize
for the slow replies.  I think I've made the changes kai suggested and
I have been working on the Tests that Dan wants.... but for the life
of me I can't get some parts of it to work.... Theres just too much
code (and repeated code) to sift through. The conformance tests break
the AcceptEx code as it is written, (as far as I know) and thus I know
the code isn't correct (and i Don't have any windows machines to test
the code on)...  I will resubmit the patches again in a couple of days
if I can figure out what is wrong.

If anyone can tell me how to check to see if there are connections
pending on a sockets listen backlog (in the wineserver) and how to
post that information into the wineserver main poll loop, im all ears.
The wineserver isn't correctly posting these events.
~Scott


From wine at mkarcher.dialup.fu-berlin.de  Mon Aug 18 16:33:36 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Mon, 18 Aug 2008 23:33:36 +0200
Subject: shlwapi: add some more tests for UrlUnEscape
In-Reply-To: <1219084288.4654.25.camel@hermes2.karcher.local>
References: <135804.34183.qm@web23206.mail.ird.yahoo.com>
	<1219084288.4654.25.camel@hermes2.karcher.local>
Message-ID: <1219095216.4654.35.camel@hermes2.karcher.local>

Am Montag, den 18.08.2008, 20:31 +0200 schrieb Michael Karcher:
> Am Montag, den 18.08.2008, 08:46 +0000 schrieb Louis. Lenders:
> > hi, tests show that UrlUnEscape still converts the url-string if the
> > bufferpointer is set to NULL, and the 
> > URL_UNESCAPE_INPLACE is set. Test passes fine with native shlwapi, and
> > in wine after applying the previous sent patch :
> > http://www.winehq.org/pipermail/wine-patches/attachments/20080814/d5feb31b/attachment.txt
> Please resend the patch including the testcase,
Another point: Please do not link attachments directly but put there the
URL to your mail, so gets access to the whole message. It will further
help Wine developers to quote the subject too, so they might remember
the patch without clicking the link at all. In this case, it might look
like this:

previously sent patch: "shlwapi: If the URL_UNESCAPE_INPLACE is set,
UrlUnEscape should not fail if pcchUnescaped buffer is
NULL" (http://www.winehq.org/pipermail/wine-patches/2008-August/059445.html)

Regards,
  Michael Karcher

PS: Please don't be offended by this kind of critique. I appreciate the
work you do for Wine, and would like your patches to go in, so I am
trying to give hints to you how to make your patcher easier to review to
raise chances of getting your patches committed.




From mah at jump-ing.de  Mon Aug 18 17:31:42 2008
From: mah at jump-ing.de (Markus Hitter)
Date: Tue, 19 Aug 2008 00:31:42 +0200
Subject: New kernel development guide might be good model for Wine...
In-Reply-To: <22821af30808181053g1ce2314fn5b3a8e61e39dc7b8@mail.gmail.com>
References: <a71bd89a0808152010m137f8099hb70ee14bdb89ddfe@mail.gmail.com>
	<BAY118-W1088BA11A95A63403AE189946E0@phx.gbl>
	<22821af30808172157j30125f01ge872b011596adcd5@mail.gmail.com>
	<2FC252EA-44B7-49D7-AA2A-A40214BA695E@jump-ing.de>
	<48A9400D.9070705@redhat.com>
	<09A19565-686D-4168-99E1-7E919D49D152@jump-ing.de>
	<22821af30808181053g1ce2314fn5b3a8e61e39dc7b8@mail.gmail.com>
Message-ID: <0120E841-C3E7-466D-8E2E-76F9D97F33EB@jump-ing.de>


Am 18.08.2008 um 19:53 schrieb James Hawkins:

> Why can't a developer review his own patch? If your patch is not  
> committed, the first thing you should do is look the patch over for  
> obvious mistakes.

Obviously, some people here are used to receive more random diffs  
instead of carefully crafted patches. If there are obvious (to me)  
mistakes in a patch, I wouldn't even consider sending it.

> then you can ask on wine-devel or IRC why your patch was rejected.


... or not even noticed. Thanks for the explanations, I'll take home  
"Wine developers don't care to be asked more than once". Thanks to  
Michael for reviewing my lines.


MarKus

- - - - - - - - - - - - - - - - - - -
Dipl. Ing. Markus Hitter
http://www.jump-ing.de/






From truiken at gmail.com  Mon Aug 18 17:41:11 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 18 Aug 2008 17:41:11 -0500
Subject: New kernel development guide might be good model for Wine...
In-Reply-To: <0120E841-C3E7-466D-8E2E-76F9D97F33EB@jump-ing.de>
References: <a71bd89a0808152010m137f8099hb70ee14bdb89ddfe@mail.gmail.com>
	<BAY118-W1088BA11A95A63403AE189946E0@phx.gbl>
	<22821af30808172157j30125f01ge872b011596adcd5@mail.gmail.com>
	<2FC252EA-44B7-49D7-AA2A-A40214BA695E@jump-ing.de>
	<48A9400D.9070705@redhat.com>
	<09A19565-686D-4168-99E1-7E919D49D152@jump-ing.de>
	<22821af30808181053g1ce2314fn5b3a8e61e39dc7b8@mail.gmail.com>
	<0120E841-C3E7-466D-8E2E-76F9D97F33EB@jump-ing.de>
Message-ID: <22821af30808181541q66be987cxeade6b9a8b673cfb@mail.gmail.com>

On Mon, Aug 18, 2008 at 5:31 PM, Markus Hitter <mah at jump-ing.de> wrote:
>
> Am 18.08.2008 um 19:53 schrieb James Hawkins:
>
>> Why can't a developer review his own patch? If your patch is not
>> committed, the first thing you should do is look the patch over for obvious
>> mistakes.
>
> Obviously, some people here are used to receive more random diffs instead of
> carefully crafted patches. If there are obvious (to me) mistakes in a patch,
> I wouldn't even consider sending it.
>

Of course you wouldn't, but then when the patch doesn't get committed,
you should look back at it and really think outside the box about what
could possibly be wrong with the patch.  I'm pretty sure there are
very few developers, if any, who send in a patch knowing it's wrong
and expect it to get committed.

>> then you can ask on wine-devel or IRC why your patch was rejected.
>
>
> ... or not even noticed. Thanks for the explanations, I'll take home "Wine
> developers don't care to be asked more than once". Thanks to Michael for
> reviewing my lines.
>

You assume it wasn't noticed.  I can guarantee that's not the case.
Give Alexandre a bit more credit than that.  I'm not really sure what
you're trying to get at with "developers don't like to be asked more
than once" or where you even got that.  It is the responsibility of no
one else but yourself to make sure a patch gets committed.  If you
don't want to make take those extra steps to make that happen, don't
complain to us that the process is at fault.  We all have patches that
seem to disappear in the cracks, but then we make that extra effort
and either figure out what is wrong with it on our own, or ask the
community or Alexandre what the problem is.

-- 
James Hawkins


From dank at kegel.com  Mon Aug 18 19:15:47 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 18 Aug 2008 17:15:47 -0700
Subject: [PATCH] AcceptEx Impelementation
In-Reply-To: <81fd805b0808181335h6af0f9d8va26c5f42c8f0ea79@mail.gmail.com>
References: <81fd805b0808040029m56821adepe4c7c98cc81c8ecc@mail.gmail.com>
	<200808100916.36894.kai.blin@gmail.com>
	<81fd805b0808181335h6af0f9d8va26c5f42c8f0ea79@mail.gmail.com>
Message-ID: <a71bd89a0808181715q4a8edef2ya6ae785b40717d25@mail.gmail.com>

Scott Lindeneau <slindeneau at gmail.com> wrote:
> i Don't have any windows machines to test the code on

That's a real problem.   You can't be sure the tests you're
writing are good unless they pass on a windows machine.

That said, simple tests are better than no tests,
and if you can find somebody to run your tests for
you on windows, that's good enough.  Just don't
post them to wine-patches until they pass on Windows.

> If anyone can tell me how to check to see if there are connections
> pending on a sockets listen backlog (in the wineserver) and how to
> post that information into the wineserver main poll loop, im all ears.

Can't you just see if accept() or moral equivalent grabs
a connection?
- Dan


From dank at kegel.com  Mon Aug 18 19:36:02 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 18 Aug 2008 17:36:02 -0700
Subject: patchwatcher and changes to configure.h.in [was: re: ntdll/file: Add
	sub-second resolution to NtQueryInformationFile]
Message-ID: <a71bd89a0808181736v374303bds2ab503427617b161@mail.gmail.com>

>> Btw, how does patchwatcher handle that?
>> Does it detect that in the case of changing config.h.in,
>> dlls/Makefile.in, server/protocol.def it needs
>> to regenerate the files by running autoconf,
>> tools/make_requests, or tools/make_makefiles?
>
> Not at all.

Patches gratefully accepted.

Status:
- posted note about two bugs in patch series handling, will fix tomorrow
- "time baseline_tests" doesn't work (limitation of time cmd),
need to fix borkage there.  Sloppy.
- Austin sent in a patch to install gecko
- I'm close to having valgrind integration, but haven't
looked at how to make it fast enough yet.
- user32:monitor.c:262: Test failed: Failed to reset default resolution
is happening lately; should probably restart X server between runs


From hongbo_ni at hotmail.com  Mon Aug 18 19:55:56 2008
From: hongbo_ni at hotmail.com (Hongbo Ni)
Date: Tue, 19 Aug 2008 10:55:56 +1000
Subject: [TRY2]user32: load hook DLL using LoadLibraryExW with altered
	search path
In-Reply-To: <C2FFF8B1721A4B40827676625E0DBF5B@DMITRY>
References: <E1KRLdE-0005Nz-6k@wine.codeweavers.com>
	<C2FFF8B1721A4B40827676625E0DBF5B@DMITRY>
Message-ID: <BAY118-W3188F825096C02A24BFF1194690@phx.gbl>


Hi, Can anyone please tell me what's wrong with my one line patch to problem:

http://www.winehq.org/pipermail/wine-patches/2008-August/059294.html

I have created bug #14784 and have attached stand alone window test program
http://bugs.winehq.org/attachment.cgi?id=15327

Juan Lang has confirm the test on windows. 

As discussed by Dmitry Timoshkov, it's not possible to created such test case in wine
since such test involves extra DLLs and another process.
http://www.winehq.org/pipermail/wine-devel/2008-August/068031.html

Regards
Hongbo Ni
_________________________________________________________________
Shout your Messenger buddies to the movies
http://www.livelife.ninemsn.com.au/compIntro.aspx?compId=4590 

From hongbo_ni at hotmail.com  Mon Aug 18 20:43:36 2008
From: hongbo_ni at hotmail.com (Hongbo Ni)
Date: Tue, 19 Aug 2008 11:43:36 +1000
Subject: [TRY4]user32/tests: add tests for creating subclassed builtin-class
	windows
Message-ID: <BAY118-W27F5976673086AC6BAD2AB94690@phx.gbl>


Hello All,

I  am adding tests to test the unicodeness of builtin class window created after the class is globally 
subclassed. http://www.winehq.org/pipermail/wine-patches/2008-August/059354.html

It tests the following builtin classes:

Edit, Button, Static, ComboBox, ComboLBox, ListBox, #32770 (dialog), 
ScrollBar,  Message, #32768 (menu), #32769 (desktop), #32772 (icon title), 
DDEMLEvent, #32771 (task switch)

For classes that have text, wine behave different when the class is subclassed using a
Unicode procudure. Todo_wine has been added.

Thanks to Dmitry Timoshkov, I also added some tests before the builin class is subclassed.
It turns out CreateWindowExW can not create window for class DDEMLEvent and #32771.
Marked with todo_wine.

The test passed for me on Windows XP, Vista and one Wine. Dmitry Timoshkov also
confirmed pass on Windows XP and Vista.

How can I improve those tests ?

Hongbo Ni
_________________________________________________________________
It's simple! Sell your car for just $40 at CarPoint.com.au
http://a.ninemsn.com.au/b.aspx?URL=http%3A%2F%2Fsecure%2Dau%2Eimrworldwide%2Ecom%2Fcgi%2Dbin%2Fa%2Fci%5F450304%2Fet%5F2%2Fcg%5F801459%2Fpi%5F1004813%2Fai%5F859641&_t=762955845&_r=tig_OCT07&_m=EXT

From dmitry at codeweavers.com  Mon Aug 18 23:04:50 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 19 Aug 2008 13:04:50 +0900
Subject: kernel32: Test the file access and share modes of CreateFile
References: <22821af30808182052o4277a36fh12a6bfe811409c20@mail.gmail.com>
Message-ID: <810B0FC960084BE08ADFE58B11E1E126@DMITRY>

"James Hawkins" <jhawkins at codeweavers.com> wrote:

> Changelog:
> * Test the file access and share modes of CreateFile.

Of course, the more tests - the better, but isn't that a duplicate of
existing test_file_sharing()? Besides win9x will require fixing it
all over the place...

-- 
Dmitry.


From jhawkins at codeweavers.com  Mon Aug 18 23:11:17 2008
From: jhawkins at codeweavers.com (James Hawkins)
Date: Mon, 18 Aug 2008 23:11:17 -0500
Subject: kernel32: Test the file access and share modes of CreateFile
In-Reply-To: <810B0FC960084BE08ADFE58B11E1E126@DMITRY>
References: <22821af30808182052o4277a36fh12a6bfe811409c20@mail.gmail.com>
	<810B0FC960084BE08ADFE58B11E1E126@DMITRY>
Message-ID: <22821af30808182111k89da6bdwdee869b65cf560e2@mail.gmail.com>

On Mon, Aug 18, 2008 at 11:04 PM, Dmitry Timoshkov
<dmitry at codeweavers.com> wrote:
> "James Hawkins" <jhawkins at codeweavers.com> wrote:
>
>> Changelog:
>> * Test the file access and share modes of CreateFile.
>
> Of course, the more tests - the better, but isn't that a duplicate of
> existing test_file_sharing()? Besides win9x will require fixing it
> all over the place...
>

Ah, yes.  I missed the existing tests.  This patch can be dropped, and
none of the other patches depend on this one.  It was mostly an
exercise on my part to prove a theory.

-- 
James Hawkins


From dmitry at codeweavers.com  Mon Aug 18 23:25:24 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Tue, 19 Aug 2008 13:25:24 +0900
Subject: ole32 [2/2] (msi [9.5/13]): Storage sharing should be implemented
	inole32, not the lower-level file API
References: <22821af30808182107l1f2e5358h777bcb2fc969daed@mail.gmail.com>
Message-ID: <BB06F51D280F48CAAD45F8C6A0702B92@DMITRY>

"James Hawkins" <jhawkins at codeweavers.com> wrote:

> -    { FALSE, ERROR_SHARING_VIOLATION, FALSE },
> -    { TRUE, ERROR_SUCCESS, TRUE }
> +    { TRUE, ERROR_SUCCESS },
> +    { TRUE, ERROR_SUCCESS },
> +    { TRUE, ERROR_SUCCESS },
> +    { TRUE, ERROR_SUCCESS },
> +    { FALSE, ERROR_SHARING_VIOLATION },
> +    { FALSE, ERROR_SHARING_VIOLATION },
> +    { FALSE, ERROR_SHARING_VIOLATION },
> +    { TRUE, ERROR_SUCCESS },
> +    { FALSE, ERROR_SHARING_VIOLATION },
> +    { FALSE, ERROR_SHARING_VIOLATION },
> +    { FALSE, ERROR_SHARING_VIOLATION },
> +    { TRUE, ERROR_SUCCESS },
> +    { FALSE, ERROR_SHARING_VIOLATION },
> +    { FALSE, ERROR_SHARING_VIOLATION },
> +    { FALSE, ERROR_SHARING_VIOLATION },
> +    { TRUE, ERROR_SUCCESS }
>  };

You forgot to remove 'BOOL todo;' from struct access_res definition.
Also making the arrays of structures 'static const' while you are at it
won't hurt (same for other similar tests).

-- 
Dmitry.


From kai.blin at gmail.com  Tue Aug 19 01:40:32 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Tue, 19 Aug 2008 08:40:32 +0200
Subject: patchwatcher and changes to configure.h.in [was: re: ntdll/file:
	Add sub-second resolution to NtQueryInformationFile]
In-Reply-To: <a71bd89a0808181736v374303bds2ab503427617b161@mail.gmail.com>
References: <a71bd89a0808181736v374303bds2ab503427617b161@mail.gmail.com>
Message-ID: <200808190840.44879.kai.blin@gmail.com>

On Tuesday 19 August 2008 02:36:02 Dan Kegel wrote:
> >> Btw, how does patchwatcher handle that?
> > Not at all.
>
> Patches gratefully accepted.

Whoops, I just realized this came across rather rude. Sorry for that. I'm 
currently trying to get the basic features of the patchwatcher to work in 
buildbot and know how hard this stuff is.

I'm actually glad for you pioneering in this area, allowing me to steal^Wuse 
ideas for integration into buildbot.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080819/824d233b/attachment.pgp 

From robertshearman at gmail.com  Tue Aug 19 01:57:06 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 19 Aug 2008 07:57:06 +0100
Subject: Raising exception for SC_RPC_HANDLE being NULL
In-Reply-To: <BAY121-W34851BD8D6E7E8D9005096D06E0@phx.gbl>
References: <BAY121-W34851BD8D6E7E8D9005096D06E0@phx.gbl>
Message-ID: <1096648c0808182357m4a23ad37ta62a4e7e029ad039@mail.gmail.com>

2008/8/18 Michael Martin <martinmnet at hotmail.com>:
>
> In widl code generated for services an
> exception is raised for null string with RPC_X_NULL_REF_POINTER
> In windows calls made to for example CreateService with all NULL's
> checks are made on the handle being null and its checked first before null strings.
>
> Windows documentation on RPC_X_ exceptions say that
> RPC_X_SS_IN_NULL_CONTEXT is raised for null handles.
>
> suggested patch
>
> Index: widl/client.c
> ===================================================================
> --- widl/client.c    (trunk)
> +++ widl/client.c    (working copy)
> @@ -67,6 +67,15 @@
>             indent--;
>             print_client("}\n\n");
>         }
> +        else if ((var->type->name) && (strncmp(var->type->name,"SC_RPC_HANDLE", 13)==0))

How on earth do you think it is the right fix to hard-code a services
type into widl? Did you not notice that SC_RPC_LOCK also needs the
right treatment and that renaming SC_RPC_HANDLE to XXXFOOBAR shouldn't
make any difference to the generated code?

The correct fix is to check for context handles and the output the below code.

> +        {
> +            print_client("if (!%s)\n",var->name);
> +            print_client("{\n");
> +            indent++;
> +            print_client("RpcRaiseException(RPC_X_SS_IN_NULL_CONTEXT);\n");
> +            indent--;
> +            print_client("}\n\n");
> +        }
>     }
>  }

-- 
Rob Shearman


From paul.vriens.wine at gmail.com  Tue Aug 19 03:35:42 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Tue, 19 Aug 2008 10:35:42 +0200
Subject: Patchwatcher status
In-Reply-To: <a71bd89a0808170829o75bf353ey5fc3bd8a331d26e1@mail.gmail.com>
References: <a71bd89a0808170829o75bf353ey5fc3bd8a331d26e1@mail.gmail.com>
Message-ID: <48AA85DE.6010408@gmail.com>

Dan Kegel wrote:
> Patchwatcher falsely complained that
>  [2/17] richedit: Removed assumption about the order of rtf indent
> didn't apply because the regexp I used to detect
> the end of a patch series falsely matched the
> first patch in a series of 1x patches.  Here's the fix:
> 
> --- patchwatcher.sh     (revision 150)
> +++ patchwatcher.sh     (working copy)
> @@ -283,7 +283,7 @@
>             cat $PATCHES/$NEXT.log
>          fi
>          # Use a regexp with a back reference to detect last patch in
> a series and break out
> -        if egrep -q 'Subject:.*[0-9]+/[0-9]+' $PATCHES/$NEXT.txt && !
> egrep -q 'Subject:.*([0-9]+)/\1' $PATCHES/$NEXT.txt
> +        if egrep -q 'Subject:.*[0-9]+/[0-9]+' $PATCHES/$NEXT.txt && !
> egrep -q 'Subject:.*([0-9]+)/\1[^0-9]' $PATCHES/$NEXT.txt
>          then
>              echo In middle of patch series, not wiping tree
>              NEXT=`expr $NEXT + 1`
> 
> And it falsely complained that various of adam at tpetaccia.com's
> patches failed because it didn't handle the case of multiple
> patch series sent by the same author back to back and mixed
> together by email delays.  Here's a fix:
> 
> --- get-patches.pl      (revision 150)
> +++ get-patches.pl      (working copy)
> @@ -147,7 +147,7 @@
>         $series_num_patches = $num_patches;
>      }
> 
> -    if ($series_sender ne $sender) {
> +    if ($series_sender ne $sender || $series_num_patches != $num_patches) {
>          #print "Ignoring series for now, will try later; sender
> $sender, num_patches $num_patches, subject
> ".$header->get('Subject')."\n";
>          # can't handle multiple series at once just yet, let it sit
>          return;
> 
> That still won't handle the case of two patch series of the same length
> being sent back to back by the same author, but that's
> ambiguous enough that even humans might be confused,
> so it should tide us over until I rewrite the patch series
> detector to handle incomplete series better.
> 
> I'm on vacation so I can't apply these patches to the running instance,
> I'll do it on tuesday.
> - Dan
> 
> 
Hi Dan,

Looks like there is something (else?) wrong with checking the patch series.

None of the last patch series (by Juan, James, Rob, Stefan to name a 
few) are shown on the results page.

Cheers,

Paul.


From dank at kegel.com  Tue Aug 19 05:53:47 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 19 Aug 2008 03:53:47 -0700
Subject: Patchwatcher status
In-Reply-To: <48AA85DE.6010408@gmail.com>
References: <a71bd89a0808170829o75bf353ey5fc3bd8a331d26e1@mail.gmail.com>
	<48AA85DE.6010408@gmail.com>
Message-ID: <a71bd89a0808190353o2d336611o51d0fcb006fff3e8@mail.gmail.com>

On Tue, Aug 19, 2008 at 1:35 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
> Looks like there is something (else?) wrong with checking the patch series.
>
> None of the last patch series (by Juan, James, Rob, Stefan to name a few)
> are shown on the results page.

Thanks for pointing that out.
It got confused by some of the debris from the earlier bug,
and was waiting for an imaginary patch to round out a series.
This is a known problem: if somebody sends a incomplete
patch series, series processing gets stuck while patchwatcher
waits for the rest of the series to show up.
The real fix will be to make get-patches.pl smarter, and handle
several overlapping patch series.  Until then, I'll try adding a
timeout (say, if a patch is older than two days, I'll discard it).
- Dan

p.s.
Rather than unswizzling the patches
mixed up by the patch series bug, I just moved the old results to
http://kegel.com/wine/patchwatcher/results.old/
and started over.  Sorry, I probably should have been more graceful about that.
We probably need to split up results by git revision or month,
or it'll get unwieldy.  Month, probably, to match the mailing list
archives?  So there's probably at least one more disruption coming.

p.p.s.
I fixed one more little bug just now: patches created
by svn should now be recognized as needing -p0.
- Dan


From mah at jump-ing.de  Tue Aug 19 06:13:30 2008
From: mah at jump-ing.de (Markus Hitter)
Date: Tue, 19 Aug 2008 13:13:30 +0200
Subject: New kernel development guide might be good model for Wine...
In-Reply-To: <22821af30808181541q66be987cxeade6b9a8b673cfb@mail.gmail.com>
References: <a71bd89a0808152010m137f8099hb70ee14bdb89ddfe@mail.gmail.com>
	<BAY118-W1088BA11A95A63403AE189946E0@phx.gbl>
	<22821af30808172157j30125f01ge872b011596adcd5@mail.gmail.com>
	<2FC252EA-44B7-49D7-AA2A-A40214BA695E@jump-ing.de>
	<48A9400D.9070705@redhat.com>
	<09A19565-686D-4168-99E1-7E919D49D152@jump-ing.de>
	<22821af30808181053g1ce2314fn5b3a8e61e39dc7b8@mail.gmail.com>
	<0120E841-C3E7-466D-8E2E-76F9D97F33EB@jump-ing.de>
	<22821af30808181541q66be987cxeade6b9a8b673cfb@mail.gmail.com>
Message-ID: <4F7EE012-3767-4BA2-AED0-38A8113811F9@jump-ing.de>


Am 19.08.2008 um 00:41 schrieb James Hawkins:

> when the patch doesn't get committed, you should look back at it  
> and really think
> outside the box about what could possibly be wrong with the patch.

Essentially, you ask to change code on unfounded guesses (I did the  
best to my knowledge in the first place already) and to commit into a  
black hole until some unknown, not communicating person is satisfied  
to her/his taste.

> You assume it wasn't noticed.  I can guarantee that's not the case.

So, what did the reviewing person then? Sitting there smiling "Heh,  
look, he could have done better, but, ha-ha, I won't tell him"? I  
hope this wasn't the case.

> Give Alexandre a bit more credit than that.

I'm fine with Alexandre personally but not so sure about Wine's  
current patch receiving process.

That said I'm perfectly fine if Wine people consider this process as  
being effective. There's no law enforcing Wine to accept what I've sent.

> [...] or ask the community or Alexandre what the problem is.


Correct. Communication is a plus.


MarKus

- - - - - - - - - - - - - - - - - - -
Dipl. Ing. Markus Hitter
http://www.jump-ing.de/






From paul.vriens.wine at gmail.com  Tue Aug 19 07:42:51 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Tue, 19 Aug 2008 14:42:51 +0200
Subject: Patchwatcher status
In-Reply-To: <a71bd89a0808190353o2d336611o51d0fcb006fff3e8@mail.gmail.com>
References: <a71bd89a0808170829o75bf353ey5fc3bd8a331d26e1@mail.gmail.com>	
	<48AA85DE.6010408@gmail.com>
	<a71bd89a0808190353o2d336611o51d0fcb006fff3e8@mail.gmail.com>
Message-ID: <48AABFCB.1070708@gmail.com>

Dan Kegel wrote:
> On Tue, Aug 19, 2008 at 1:35 AM, Paul Vriens <paul.vriens.wine at gmail.com> wrote:
>> Looks like there is something (else?) wrong with checking the patch series.
>>
>> None of the last patch series (by Juan, James, Rob, Stefan to name a few)
>> are shown on the results page.
> 
> Thanks for pointing that out.
> It got confused by some of the debris from the earlier bug,
> and was waiting for an imaginary patch to round out a series.
> This is a known problem: if somebody sends a incomplete
> patch series, series processing gets stuck while patchwatcher
> waits for the rest of the series to show up.
> The real fix will be to make get-patches.pl smarter, and handle
> several overlapping patch series.  Until then, I'll try adding a
> timeout (say, if a patch is older than two days, I'll discard it).
> - Dan
> 
> p.s.
> Rather than unswizzling the patches
> mixed up by the patch series bug, I just moved the old results to
> http://kegel.com/wine/patchwatcher/results.old/
> and started over.  Sorry, I probably should have been more graceful about that.
> We probably need to split up results by git revision or month,
> or it'll get unwieldy.  Month, probably, to match the mailing list
> archives?  So there's probably at least one more disruption coming.
> 
> p.p.s.
> I fixed one more little bug just now: patches created
> by svn should now be recognized as needing -p0.
> - Dan

Hi Dan,

The patch series are now on the results page but every patch/test fails 
with these same message "d3d9:device.c:829: Test failed: Screen height 
is 1024"

Cheers,

Paul.


From stefan at codeweavers.com  Tue Aug 19 09:28:08 2008
From: stefan at codeweavers.com (=?UTF-8?Q?Stefan_D=C3=B6singer?=)
Date: Tue, 19 Aug 2008 09:28:08 -0500
Subject: dinput: Add mouse warp override config option (resend)
In-Reply-To: <48AA1F65.4010600@kievinfo.com>
References: <48AA1F65.4010600@kievinfo.com>
Message-ID: <020301c90207$cdabba20$69032e60$@com>

Just for the record, I think we really want this patch. XInput 2 is currently under development, so we cannot fix the issue properly right now. Even if we have XI2, there will still be old X servers around for ages.


> -----Original Message-----
> From: wine-patches-bounces at winehq.org [mailto:wine-patches-
> bounces at winehq.org] On Behalf Of Vitaliy Margolen
> Sent: Monday, August 18, 2008 8:18 PM
> To: wine-patches at winehq.org
> Subject: dinput: Add mouse warp override config option (resend)
> 
> 
> Set [HKCU\Software\Wine\DirectInput] (or application specific key)
> "MouseWarpOverride" to:
> "force"   - always warp
> "disable" - newer warp
> "anything else" - warp when needed - current behavior (default)
> ---
>   dlls/dinput/mouse.c |   39 ++++++++++++++++++++++++++++++++++-----
>   1 files changed, 34 insertions(+), 5 deletions(-)




From wine-devel at kievinfo.com  Tue Aug 19 10:03:40 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Tue, 19 Aug 2008 09:03:40 -0600
Subject: dinput: Add mouse warp override config option (resend)
In-Reply-To: <020301c90207$cdabba20$69032e60$@com>
References: <48AA1F65.4010600@kievinfo.com>
	<020301c90207$cdabba20$69032e60$@com>
Message-ID: <48AAE0CC.4050200@kievinfo.com>

Stefan D?singer wrote:
> Just for the record, I think we really want this patch. XInput 2 is
> currently under development, so we cannot fix the issue properly right
> now. Even if we have XI2, there will still be old X servers around for
> ages.
> 

That's assuming XI2 will be able to send actual mouse (other devices)
movements to requesting applications. Right now nothing can (DGA doesn't
count it's not available anymore).

Vitaliy.


From andrew.talbot at talbotville.com  Tue Aug 19 11:38:18 2008
From: andrew.talbot at talbotville.com (Andrew Talbot)
Date: Tue, 19 Aug 2008 17:38:18 +0100
Subject: Incidental patch cleaning?
Message-ID: <200808191738.18855.andrew.talbot@talbotville.com>

Hi,

Is it possible to sneak in a bit of patch cleaning within the new software? It would be useful to incidentally remove any trailing white space that happens to exist within the scope of a patch.

-- 
Andy.


From stefan at codeweavers.com  Tue Aug 19 11:39:49 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Tue, 19 Aug 2008 11:39:49 -0500
Subject: dinput: Add mouse warp override config option (resend)
In-Reply-To: <48AAE0CC.4050200@kievinfo.com>
References: <48AA1F65.4010600@kievinfo.com>
	<020301c90207$cdabba20$69032e60$@com>
	<48AAE0CC.4050200@kievinfo.com>
Message-ID: <005a01c9021a$32bc5b60$98351220$@com>

> That's assuming XI2 will be able to send actual mouse (other devices)
> movements to requesting applications. Right now nothing can (DGA
> doesn't
> count it's not available anymore).
Can you get in contact with the Xorg mailing list on that issue? As far as I
understand the XI2 plans raw input processing is planned and a high
priority(not only for wine, but also to layer DGA emulation on top of it). I
barely know the details, and since you worked on this it would be very
helpful if you talked to the Xorg guys




From robertshearman at gmail.com  Tue Aug 19 12:13:21 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 19 Aug 2008 18:13:21 +0100
Subject: Incidental patch cleaning?
In-Reply-To: <200808191738.18855.andrew.talbot@talbotville.com>
References: <200808191738.18855.andrew.talbot@talbotville.com>
Message-ID: <1096648c0808191013y5e6f2cehfa469c73040320d1@mail.gmail.com>

Hi Andrew,

2008/8/19 Andrew Talbot <andrew.talbot at talbotville.com>:
> Hi,
>
> Is it possible to sneak in a bit of patch cleaning within the new software? It would be useful to incidentally remove any trailing white space that happens to exist within the scope of a patch.

Patchwatcher currently only looks at patches going to the mailing list
and Alexandre still gets the patches from the mailing list. To do as
you suggest would mean making Patchwatcher a filter before the mailing
list and make it change the patches. I don't think this is a good idea
because then what a developer sends isn't necessarily exactly the same
as what everyone else receives.

Besides, I think the git tools allow filtering of trailing whitespace
for patches being applied and I think Alexandre does this.

-- 
Rob Shearman


From dank at kegel.com  Tue Aug 19 12:25:51 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 19 Aug 2008 10:25:51 -0700
Subject: msvcmaker: fix project file generation under MinGW32
Message-ID: <a71bd89a0808191025v38eb90f1r4897ea779bbf8f48@mail.gmail.com>

Hi Hongbo,
it looks like your patch failed to apply because you did not
preserve whitespace exactly.  Your patch uses all spaces
for the context, but the file contains tabs, so it does not match,
and patch fails.
- Dan


---------- Forwarded message ----------
From:  <patchwatcher at kegel.com>
Date: Tue, Aug 19, 2008 at 10:16 AM
Subject: Patchwatcher: failed to apply: msvcmaker: fix project file
generation under MinGW32
To: dank at kegel.com


Hi!  This is the experimental automated wine patchwatcher thingy.
The latest git sources were built and tested with your patch
"msvcmaker: fix project file generation under MinGW32"
Result: the patch failed to apply.

You can retrieve the full build results at
 http://kegel.com/wine/patchwatcher/results/3.log
and see the patch as parsed at
 http://kegel.com/wine/patchwatcher/results/3.txt
See
 http://kegel.com/wine/patchwatcher/results
for more info.


From eric.pouech at orange.fr  Tue Aug 19 12:36:14 2008
From: eric.pouech at orange.fr (Eric Pouech)
Date: Tue, 19 Aug 2008 19:36:14 +0200
Subject: winmm: Test opening the same device twice
In-Reply-To: <48AA9331.10103@gmail.com>
References: <48AA9331.10103@gmail.com>
Message-ID: <48AB048E.3080307@orange.fr>

Maarten Lankhorst a ?crit :
> Behavioral test to show that wine winmm needs fixing.
> ---
> ------------------------------------------------------------------------
>
>
this likely is going to fail on old boxes
there's no requirement on MS side that a PCM renderer has to be opened twice
so having it as a test is wrong
some old cards with OSS as a driver forbid the card to be opened twice 
(especially in different processes). IIRC, there was a bit of support in 
the OSS driver (not sure about the ALSA one) to allow > 1 opening in the 
same process (and also opening one handle for sound capture and another 
one for sound rendering).
but this didn't provide support for mixing the output from the two 
different handles, which is likely what part of what you're trying to do 
assumes (especially for dsound plus standard winmm output)

the only way out is to have the Linux (or Unix) driver handle several 
opening including the mixing of the two streams
if the driver doesn't provide this flexibility, I don't see a point of 
implementing it in Wine

A+

-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)




From dank at kegel.com  Tue Aug 19 14:07:24 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 19 Aug 2008 12:07:24 -0700
Subject: patchwatcher and changes to configure.h.in [was: re: ntdll/file:
	Add sub-second resolution to NtQueryInformationFile]
In-Reply-To: <a71bd89a0808181736v374303bds2ab503427617b161@mail.gmail.com>
References: <a71bd89a0808181736v374303bds2ab503427617b161@mail.gmail.com>
Message-ID: <a71bd89a0808191207u30882e03hc04134ca746d5471@mail.gmail.com>

Kai wrote:
>> >> Btw, how does patchwatcher handle that?
>> > Not at all.
>
>Whoops, I just realized this came across rather rude

Nah, that was fine.  (Although "it doesn't yet" might have been
clearer.)

> I'm currently trying to get the basic features of the
> patchwatcher to work in buildbot and know how hard this stuff is.

I was totally jazzed when I saw you were doing that.  Good luck!

> I'm actually glad for you pioneering in this area, allowing me to
> steal^Wuse ideas for integration into buildbot.

Yeah, I hope it's a useful prototype for you.
My gut feeling is that it might be a while before you catch up,
but I hope I'm wrong.
I'd love to see you pass me before I have to add support
for distributed build slaves to patchwatcher!
- Dan


From wine-devel at kievinfo.com  Tue Aug 19 15:34:59 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Tue, 19 Aug 2008 14:34:59 -0600
Subject: dinput: Add mouse warp override config option (resend)
In-Reply-To: <005a01c9021a$32bc5b60$98351220$@com>
References: <48AA1F65.4010600@kievinfo.com>
	<020301c90207$cdabba20$69032e60$@com>
	<48AAE0CC.4050200@kievinfo.com>
	<005a01c9021a$32bc5b60$98351220$@com>
Message-ID: <48AB2E73.6030607@kievinfo.com>

Stefan D?singer wrote:
>> That's assuming XI2 will be able to send actual mouse (other devices)
>> movements to requesting applications. Right now nothing can (DGA
>> doesn't
>> count it's not available anymore).
> Can you get in contact with the Xorg mailing list on that issue? As far as I
> understand the XI2 plans raw input processing is planned and a high
> priority(not only for wine, but also to layer DGA emulation on top of it). I
> barely know the details, and since you worked on this it would be very
> helpful if you talked to the Xorg guys
> 
> 
Which mailing list? Why don't you cc this message there as well?

Vitaliy.


From thunderbird2k at gmx.net  Tue Aug 19 16:09:55 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Tue, 19 Aug 2008 23:09:55 +0200
Subject: dinput: Add mouse warp override config option (resend)
In-Reply-To: <48AB2E73.6030607@kievinfo.com>
References: <48AA1F65.4010600@kievinfo.com>
	<020301c90207$cdabba20$69032e60$@com>	<48AAE0CC.4050200@kievinfo.com>
	<005a01c9021a$32bc5b60$98351220$@com> <48AB2E73.6030607@kievinfo.com>
Message-ID: <20080819210955.203100@gmx.net>

Hi,

Two days ago I spoke with xorg devs (Peter Hutterer / Daniel Stone) in #xorg-devel. In short Xorg 7.5 (guess that will be out during spring next year) will feature Xinput2. Xinput2 is on the drawing table now and one of its features will be relative mouse movement. It is an important feature which I believe they also need for mouse tablets. They aren't yet sure on how it will work but one of the ideas is to extend the current events with relative mouse coordinates OR to add an ability to receive one of both.

In the current Xorg (7.3) it is possible to open the core pointer / keyboard as Xinput devices. Though you can't receive events from them. They said that the originating devices do generate events and that using DEVICE_CORE you can match them to the core devices or something like that.

They aren't very happy with the Xorg 7.3 code (the core pointer / keyboard stuff) and recommend to use the current GIT version or to wait for Xorg 7.4.

I don't know any experience with input on X, so I don't know if the current code is already enough for Wine but I fear we need to wait for Xinput2.

Regards,
Roderick 

> Stefan D?singer wrote:
> >> That's assuming XI2 will be able to send actual mouse (other devices)
> >> movements to requesting applications. Right now nothing can (DGA
> >> doesn't
> >> count it's not available anymore).
> > Can you get in contact with the Xorg mailing list on that issue? As far
> as I
> > understand the XI2 plans raw input processing is planned and a high
> > priority(not only for wine, but also to layer DGA emulation on top of
> it). I
> > barely know the details, and since you worked on this it would be very
> > helpful if you talked to the Xorg guys
> > 
> > 
> Which mailing list? Why don't you cc this message there as well?
> 
> Vitaliy.
> 

-- 
Ist Ihr Browser Vista-kompatibel? Jetzt die neuesten 
Browser-Versionen downloaden: http://www.gmx.net/de/go/browser


From reif at earthlink.net  Tue Aug 19 16:22:14 2008
From: reif at earthlink.net (Robert Reif)
Date: Tue, 19 Aug 2008 17:22:14 -0400
Subject: winmm: Test opening the same device twice
In-Reply-To: <48AB048E.3080307@orange.fr>
References: <48AA9331.10103@gmail.com> <48AB048E.3080307@orange.fr>
Message-ID: <48AB3986.5030800@earthlink.net>

Eric Pouech wrote:
> Maarten Lankhorst a ?crit :
>   
>> Behavioral test to show that wine winmm needs fixing.
>> ---
>> ------------------------------------------------------------------------
>>
>>
>>     
> this likely is going to fail on old boxes
> there's no requirement on MS side that a PCM renderer has to be opened twice
> so having it as a test is wrong
> some old cards with OSS as a driver forbid the card to be opened twice 
> (especially in different processes). IIRC, there was a bit of support in 
> the OSS driver (not sure about the ALSA one) to allow > 1 opening in the 
> same process (and also opening one handle for sound capture and another 
> one for sound rendering).
> but this didn't provide support for mixing the output from the two 
> different handles, which is likely what part of what you're trying to do 
> assumes (especially for dsound plus standard winmm output)
>
> the only way out is to have the Linux (or Unix) driver handle several 
> opening including the mixing of the two streams
> if the driver doesn't provide this flexibility, I don't see a point of 
> implementing it in Wine
>
> A+
>
>   
It will also probably fail on all Windows versions prior to 98SE.

Real OSS (not ALSA emulation) supports multiple opens on hardware
with hardware mixing (SB Live! and Audigy using the Audigy driver).


From alex at thehandofagony.com  Tue Aug 19 16:35:05 2008
From: alex at thehandofagony.com (Alexander Nicolaysen =?iso-8859-1?q?S=F8rnes?=)
Date: Tue, 19 Aug 2008 23:35:05 +0200
Subject: Translating kernel32/nls/winerr_eng
Message-ID: <200808192335.06322.alex@thehandofagony.com>

Hello,

I'm translating the winerr messages to Norwegian, but I'm not completely sure 
about the LanguageNames line.  Should the code be the same as the language ID 
(0x414)?
LanguageNames=(NOR=0x414:winerr)
This seems to be the case for English, but not French & German.



Alexander N. S?rnes


From wine-devel at kievinfo.com  Tue Aug 19 16:46:11 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Tue, 19 Aug 2008 15:46:11 -0600
Subject: dinput: Add mouse warp override config option (resend)
In-Reply-To: <20080819210955.203100@gmx.net>
References: <48AA1F65.4010600@kievinfo.com>	<020301c90207$cdabba20$69032e60$@com>	<48AAE0CC.4050200@kievinfo.com>	<005a01c9021a$32bc5b60$98351220$@com>
	<48AB2E73.6030607@kievinfo.com> <20080819210955.203100@gmx.net>
Message-ID: <48AB3F23.6090408@kievinfo.com>

Roderick Colenbrander wrote:
> Hi,
> 
> Two days ago I spoke with xorg devs (Peter Hutterer / Daniel Stone) in
#xorg-devel. In short Xorg 7.5 (guess that will be out during spring next
year) will feature Xinput2. Xinput2 is on the drawing table now and one of
its features will be relative mouse movement. It is an important feature
which I believe they also need for mouse tablets. They aren't yet sure on
how it will work but one of the ideas is to extend the current events with
relative mouse coordinates OR to add an ability to receive one of both.
> 
> In the current Xorg (7.3) it is possible to open the core pointer /
keyboard as Xinput devices. Though you can't receive events from them. They
said that the originating devices do generate events and that using
DEVICE_CORE you can match them to the core devices or something like that.
> 
> They aren't very happy with the Xorg 7.3 code (the core pointer /
> keyboard
stuff) and recommend to use the current GIT version or to wait for Xorg 7.4.
> 
> I don't know any experience with input on X, so I don't know if the
current code is already enough for Wine but I fear we need to wait for Xinput2.
> 
> Regards,
> Roderick 
> 
>> Stefan D?singer wrote:
>>>> That's assuming XI2 will be able to send actual mouse (other devices)
>>>> movements to requesting applications. Right now nothing can (DGA
>>>> doesn't
>>>> count it's not available anymore).
>>> Can you get in contact with the Xorg mailing list on that issue? As far
>> as I
>>> understand the XI2 plans raw input processing is planned and a high
>>> priority(not only for wine, but also to layer DGA emulation on top of
>> it). I
>>> barely know the details, and since you worked on this it would be very
>>> helpful if you talked to the Xorg guys
>>>
>>>
>> Which mailing list? Why don't you cc this message there as well?
>>
>> Vitaliy.
>>
> 

I've played with older version. And I don't think there are anything new in
the new version other then ability to open core devices. Which is impossible
in the older versions.
However they still generate events with absolute coordinates. While device
query says it's in relative mode...

Honestly I don't care absolute or relative - as long as events:
1. Produce events from the _device_ (not pointer)
2. Don't get stuck in the corder (see #1)

Vitaliy


From dank at kegel.com  Tue Aug 19 16:54:16 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 19 Aug 2008 14:54:16 -0700
Subject: Avoiding charset corruption when sending patches
Message-ID: <a71bd89a0808191454u4163c844if406028a87662d4@mail.gmail.com>

Short story:

Patches that touch non-Latin1 .rc files might need to be sent
as attached non-text files rather than inline or as .txt files,
to avoid charset corruption.

Some examples:
http://winehq.org/pipermail/wine-patches/2008-August/059095.html
might suffer corruption (I can't tell offhand).

http://winehq.org/pipermail/wine-patches/2008-August/059405.html
looks safe, though.

Long story:

Patchwatcher was converting patches to utf-8,
causing the patch
	[1/3] wined3d: Move creating a texture id from PreLoad to BindTexture
to not apply.  Thanks to Henri Verbeet for diagnosing the problem.

The patchwatcher web page may need some surgery
to deal with this.   Currently it uses a single .txt file for the
email message and the patch, which probably tempts
the web server and browser to do charset conversions.
I will probably switch the suffix to .bin to discourage this.

Even longer story:

So, what character set is the Wine source tree encoded with?
It looks like a mixture:

1. in general, .c and .h files are encoded in Latin-1 aka iso8859-1.

2. include/*.h are encoded in ASCII and are not allowed to have
non-ascii chars; see http://bugs.winehq.org/show_bug.cgi?id=5420

3. *_XX.rc (or XX.rc) are in the character set
that Windows defaults to for language XX,
unless changed by a #pragma code_page... in the .rc file.
http://wiki.winehq.org/Developers-Hints#head-ef42a958e4f633dbd4a0ae42649fa02a4d1827fd

Which brings us to the question:
since email clients love changing charsets of text messages,
how can we avoid corrupting patches when sending them via email?
It kind of looks like patches to .rc files
must be attached rather than inline, and should
be attached as .patch, .diff, or .bin files so they are
marked with the mime type application/octet-stream
which should inhibit all charset conversions.
(Attaching as .txt might tempt mail clients to perform
charset conversions on them.)
- Dan


From kai.blin at gmail.com  Tue Aug 19 17:00:32 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Wed, 20 Aug 2008 00:00:32 +0200
Subject: Incidental patch cleaning?
In-Reply-To: <200808191738.18855.andrew.talbot@talbotville.com>
References: <200808191738.18855.andrew.talbot@talbotville.com>
Message-ID: <200808200000.32523.kai.blin@gmail.com>

On Tuesday 19 August 2008 18:38:18 Andrew Talbot wrote:
> Hi,
>
> Is it possible to sneak in a bit of patch cleaning within the new software?
> It would be useful to incidentally remove any trailing white space that
> happens to exist within the scope of a patch.

While I wouldn't mind issuing a warning for patches that add whitespace 
errors, I'm against any "automagical" fix-ups for patches. I don't mind 
Alexandre changing little issues, even though that'll break git-rebase, but I 
wouldn't trust a program to do the same.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080820/c0292eae/attachment-0001.pgp 

From m.b.lankhorst at gmail.com  Tue Aug 19 18:14:10 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Wed, 20 Aug 2008 01:14:10 +0200
Subject: Summer of code evaluations
Message-ID: <48AB53C2.2090400@gmail.com>

Hi all,

As you may know yesterday was the pens down for summer of code 2008 
Students are still allowed to write code, but it won't count for the 
mentors evaluation any more.

I would like to request from the mentors to fill in the final evaluation 
form and from the students to give a final write up: What went well? Did 
you meet the goals you set? Did you have fun? Is there anything we can 
do to make wines summer of code better and do you feel like you've 
become part of the wine community?

I also believe that students will have to fill in a final evaluation 
form as well, so get writing. ;-)

Cheers,
Maarten.


From galt280 at gmail.com  Wed Aug 20 02:30:37 2008
From: galt280 at gmail.com (Gal Topper)
Date: Wed, 20 Aug 2008 03:30:37 -0400
Subject: Summer of code evaluations
In-Reply-To: <48AB53C2.2090400@gmail.com>
References: <48AB53C2.2090400@gmail.com>
Message-ID: <163937790808200030s2775a3b1hce2c6a6ccd6b51c@mail.gmail.com>

Hi everyone,



I'm glad to say that my project to implement PrintDlgEx* went very
well, as I've implemented almost everything by the deadline, and have
test cases for every meaningful non-interactive scenario, AFAICT. The
only feature that I have not had time to implement and test is the
lpCallback member (see here:
http://msdn.microsoft.com/en-us/library/ms646844(VS.85).aspx ), which
is tricky due to the COM involved, and to the fact that there is
nothing to test against. The only application that I know of that uses
it is Windows Address Book, which does not work in Wine. The up side
of this situation is of course that no application is affected by the
stubbing of this feature, at least for now.

The list of applications that benefit from this new implementation
includes mostly Microsoft software, such as IE6 (and probably IE7, for
anyone who can get it running in Wine), Paint, and (Microsoft's)
Notepad. Bibleworks has also been reported to require this function.

Plans for now and beyond: Get all this SoC code committed into trunk,
then stick around for whatever maintenance that may be needed, and
hopefully find another piece of the codebase that I would like to work
on.

Overall, this summer of code has been a great learning opportunity for
me and a great a experience.

Thank you!

-Gal


On Tue, Aug 19, 2008 at 7:14 PM, Maarten Lankhorst
<m.b.lankhorst at gmail.com> wrote:
> Hi all,
>
> As you may know yesterday was the pens down for summer of code 2008
> Students are still allowed to write code, but it won't count for the
> mentors evaluation any more.
>
> I would like to request from the mentors to fill in the final evaluation
> form and from the students to give a final write up: What went well? Did
> you meet the goals you set? Did you have fun? Is there anything we can
> do to make wines summer of code better and do you feel like you've
> become part of the wine community?
>
> I also believe that students will have to fill in a final evaluation
> form as well, so get writing. ;-)
>
> Cheers,
> Maarten.
>
>
>


From julliard at winehq.org  Wed Aug 20 05:41:58 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 20 Aug 2008 12:41:58 +0200
Subject: [PATCH 2/5] mstask: Implemented (Set|Get)ApplicationName.
	(Revision)
In-Reply-To: <20080819215954.GB17859@teop> (Roy Shea's message of "Tue, 19 Aug
	2008 14:59:54 -0700")
References: <20080819215954.GB17859@teop>
Message-ID: <873al06k95.fsf@wine.dyndns.org>

Roy Shea <royshea at gmail.com> writes:

> @@ -323,16 +324,62 @@ static HRESULT WINAPI MSTASK_ITask_SetApplicationName(
>          ITask* iface,
>          LPCWSTR pwszApplicationName)
>  {
> -    FIXME("(%p, %s): stub\n", iface, debugstr_w(pwszApplicationName));
> -    return E_NOTIMPL;
> +    DWORD n;
> +    TaskImpl *This = (TaskImpl *)iface;
> +
> +    TRACE("(%p, %s)\n", iface, debugstr_w(pwszApplicationName));
> +
> +    HeapFree(GetProcessHeap(), 0, This->applicationName);
> +    This->applicationName = NULL;

You need to preserve the previous value on error.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Aug 20 05:46:38 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 20 Aug 2008 12:46:38 +0200
Subject: 1/3 dpnet: Add basic DirectPlay8Peer implementation
In-Reply-To: <200808181826.00675.alex@thehandofagony.com> ("Alexander
	Nicolaysen =?utf-8?Q?S=C3=B8rnes=22's?= message of "Mon, 18 Aug 2008
	18:26:00 +0200")
References: <200808181826.00675.alex@thehandofagony.com>
Message-ID: <87vdxw55gx.fsf@wine.dyndns.org>

Alexander Nicolaysen S?rnes <alex at thehandofagony.com> writes:

> +static HRESULT WINAPI IDirectPlay8PeerImpl_Initialize(PDIRECTPLAY8PEER iface, PVOID CONST pvUserContext, CONST PFNDPNMESSAGEHANDLER pfn, CONST DWORD dwFlags)
> +{
> +    FIXME("(%p)->(%p,%p,%x): stub\n", iface, pvUserContext, pfn, dwFlags);
> +
> +    return DPN_OK;
> +}
> +
> +static HRESULT WINAPI IDirectPlay8PeerImpl_EnumServiceProviders(PDIRECTPLAY8PEER iface, CONST GUID *CONST pguidServiceProvider, CONST GUID *CONST pguidApplication, DPN_SERVICE_PROVIDER_INFO *CONST pSPInfoBuffer, DWORD *CONST pcbEnumData, DWORD *CONST pcReturned, CONST DWORD dwFlags)
> +{
> +    FIXME("(%p)->(%p,%p,%p,%p,%p,%x): stub\n", iface, pguidServiceProvider, pguidApplication, pSPInfoBuffer, pcbEnumData, pcReturned, dwFlags);
> +    return DPN_OK;
> +}

Returning OK from stubs is usually not a good idea.

> +static const IDirectPlay8PeerVtbl DirectPlay8Peer_Vtbl =
> +{
> +    IDirectPlay8PeerImpl_QueryInterface,
> +    IDirectPlay8PeerImpl_AddRef,
> +    IDirectPlay8PeerImpl_Release,
> +    IDirectPlay8PeerImpl_Initialize,
> +    IDirectPlay8PeerImpl_EnumServiceProviders
> +};

You can't initialize a vtbl partially, you need to stub all the functions.

-- 
Alexandre Julliard
julliard at winehq.org


From mstefani at redhat.com  Wed Aug 20 06:21:53 2008
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Wed, 20 Aug 2008 13:21:53 +0200
Subject: Avoiding charset corruption when sending patches
In-Reply-To: <a71bd89a0808191454u4163c844if406028a87662d4@mail.gmail.com>
References: <a71bd89a0808191454u4163c844if406028a87662d4@mail.gmail.com>
Message-ID: <48ABFE51.8020803@redhat.com>

Hello Dan,

Dan Kegel wrote:
> Even longer story:
> 
> So, what character set is the Wine source tree encoded with?
> It looks like a mixture:
> 
> 1. in general, .c and .h files are encoded in Latin-1 aka iso8859-1.
> 
> 2. include/*.h are encoded in ASCII and are not allowed to have
> non-ascii chars; see http://bugs.winehq.org/show_bug.cgi?id=5420
> 
> 3. *_XX.rc (or XX.rc) are in the character set
> that Windows defaults to for language XX,
> unless changed by a #pragma code_page... in the .rc file.
> http://wiki.winehq.org/Developers-Hints#head-ef42a958e4f633dbd4a0ae42649fa02a4d1827fd
> 
> Which brings us to the question:
> since email clients love changing charsets of text messages,
> how can we avoid corrupting patches when sending them via email?
> It kind of looks like patches to .rc files
> must be attached rather than inline, and should
> be attached as .patch, .diff, or .bin files so they are
> marked with the mime type application/octet-stream
> which should inhibit all charset conversions.
> (Attaching as .txt might tempt mail clients to perform
> charset conversions on them.)
in the beginning I have tried to send my patches to the .rc files with
their native encoding. That doesn't work if you have a patch that spans
multiple language .rc files with different encodings. So I moved to tell
mutt to set the encoding to latin-1 but _not_ convert the encoding of
the text (mutt sucks at auto detecting the encoding and kept detecting
utf-8). Why latin-1? latin-1 is 8bit clean in regards to git; the patch
might look garbled in the mail client but git-am will apply the patch
just fine. For utf-8 git will check the patch if it really is valid
utf-8 and barf out if not.

bye
	michael

-- 
Michael Stefaniuc                           Tel.: +49-711-96437-199
Consulting Communications Engineer          Fax.: +49-711-96437-111
--------------------------------------------------------------------
Reg. Adresse: Red Hat GmbH, Otto-Hahn-Strasse 20, 85609 Dornach bei Muenchen
Handelsregister: Amtsgericht Muenchen HRB 153243
Gesch?ftsf?hrer: Brendan Lane, Charlie Peters, Michael Cunningham,
                 Werner Knoblich


From julliard at winehq.org  Wed Aug 20 06:54:18 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 20 Aug 2008 13:54:18 +0200
Subject: msxml3: Add ISAXContentHandler_endPrefix event (1/9) [try2]
In-Reply-To: <200808051331.53477.piotr.caban@gmail.com> (Piotr Caban's message
	of "Tue, 5 Aug 2008 13:31:53 +0200")
References: <200808051331.53477.piotr.caban@gmail.com>
Message-ID: <87od3n6gwl.fsf@wine.dyndns.org>

Piotr Caban <piotr.caban at gmail.com> writes:

> @@ -117,6 +120,29 @@ static inline saxattributes *impl_from_ISAXAttributes( ISAXAttributes *iface )
>  }
>  
>  
> +static HRESULT namespacePush(saxlocator *locator, int ns)
> +{
> +    if(locator->nsStackLast>=locator->nsStackSize)
> +    {
> +        int *new_stack;
> +
> +        locator->nsStackSize *= 2;
> +        new_stack = HeapReAlloc(GetProcessHeap(), 0,
> +                locator->nsStack, locator->nsStackSize);
> +        if(!new_stack) return E_OUTOFMEMORY;
> +        locator->nsStack = new_stack;

You need to preserve nsStackSize on error too.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Aug 20 07:29:10 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 20 Aug 2008 14:29:10 +0200
Subject: gdi32/tests/bitmap: Fix win9x detection
In-Reply-To: <1218885782.19678.3.camel@hermes2.karcher.local> (Michael
	Karcher's message of "Sat, 16 Aug 2008 13:23:02 +0200")
References: <1218885782.19678.3.camel@hermes2.karcher.local>
Message-ID: <87k5eb6fah.fsf@wine.dyndns.org>

Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> writes:

> In commit 48bb687dfb00b00f789b688459ad5d0ec77a617b, win9x detection was
> changed to use the desktop window instead of a private EDIT window as
> target for GetWindowLongW. GetWindowLongW(GetDesktopWindow(),GWLP_WNDPROC)
> fails on wine (and probably on WinNT as well, as the counts on
> test.winehq.org indicate).
>
> I am unsure about this patch, as I don't know whether is_win9x now
> gets true if one has a Windows 98 system with the Microsoft Layer
> for Unicode installed.

The right way is to get rid of the check, especially since the
GetWindowLongW behavior is irrelevant to what the test is doing. It
should be using something like broken() instead.

-- 
Alexandre Julliard
julliard at winehq.org


From slindeneau at gmail.com  Wed Aug 20 07:48:16 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Wed, 20 Aug 2008 21:48:16 +0900
Subject: [PATCH] AcceptEx Impelementation
In-Reply-To: <a71bd89a0808181715q4a8edef2ya6ae785b40717d25@mail.gmail.com>
References: <81fd805b0808040029m56821adepe4c7c98cc81c8ecc@mail.gmail.com>
	<200808100916.36894.kai.blin@gmail.com>
	<81fd805b0808181335h6af0f9d8va26c5f42c8f0ea79@mail.gmail.com>
	<a71bd89a0808181715q4a8edef2ya6ae785b40717d25@mail.gmail.com>
Message-ID: <81fd805b0808200548q1e12ec04j51d3b77955f3fffe@mail.gmail.com>

On Tue, Aug 19, 2008 at 9:15 AM, Dan Kegel <dank at kegel.com> wrote:
> Scott Lindeneau <slindeneau at gmail.com> wrote:
>> i Don't have any windows machines to test the code on
>
> That's a real problem.   You can't be sure the tests you're
> writing are good unless they pass on a windows machine.

Is an emulated environment using qemu good enough?

> Can't you just see if accept() or moral equivalent grabs
> a connection?
> - Dan
>

That's a good idea, but I think the wineserver already knows about it,
and its clobbering that information somewhere accidentally. (Also, it
means further complicating the accept function in the wineserver...
and complicated things make life hard for the next person who has to
tinker with it. If it's the only way to do it, I will do it.)
- Scott


From julliard at winehq.org  Wed Aug 20 08:03:47 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 20 Aug 2008 15:03:47 +0200
Subject: [9/10] WineD3D: Update the overlay when the destination was drawn
	to
In-Reply-To: <000401c9021b$70659d90$5130d8b0$@com> ("Stefan =?utf-8?Q?D?=
	=?utf-8?Q?=C3=B6singer=22's?=
	message of "Tue, 19 Aug 2008 11:48:31 -0500")
References: <000401c9021b$70659d90$5130d8b0$@com>
Message-ID: <87d4k36dos.fsf@wine.dyndns.org>

Stefan D?singer <stefan at codeweavers.com> writes:

> @@ -4550,13 +4558,22 @@ static WINED3DSURFTYPE WINAPI IWineD3DSurfaceImpl_GetImplType(IWineD3DSurface *i
>  static HRESULT WINAPI IWineD3DSurfaceImpl_DrawOverlay(IWineD3DSurface *iface) {
>      IWineD3DSurfaceImpl *This = (IWineD3DSurfaceImpl *) iface;
>      HRESULT hr;
> +    static BOOL recursive = FALSE;

That static looks very suspicious. It should either be stored in the
object or use some sort of locking.

-- 
Alexandre Julliard
julliard at winehq.org


From alex at thehandofagony.com  Wed Aug 20 08:23:56 2008
From: alex at thehandofagony.com (Alexander Nicolaysen =?utf-8?q?S=C3=B8rnes?=)
Date: Wed, 20 Aug 2008 15:23:56 +0200
Subject: 1/3 dpnet: Add basic DirectPlay8Peer implementation
In-Reply-To: <87vdxw55gx.fsf@wine.dyndns.org>
References: <200808181826.00675.alex@thehandofagony.com>
	<87vdxw55gx.fsf@wine.dyndns.org>
Message-ID: <200808201523.56156.alex@thehandofagony.com>

Thanks for the review!  I've sent a new patch

P? Onsdag 20 august 2008 , 12:46:38 skrev du:
> Alexander Nicolaysen S?rnes <alex at thehandofagony.com> writes:
> > +static HRESULT WINAPI IDirectPlay8PeerImpl_Initialize(PDIRECTPLAY8PEER
> > iface, PVOID CONST pvUserContext, CONST PFNDPNMESSAGEHANDLER pfn, CONST
> > DWORD dwFlags) +{
> > +    FIXME("(%p)->(%p,%p,%x): stub\n", iface, pvUserContext, pfn,
> > dwFlags); +
> > +    return DPN_OK;
> > +}
> > +
> > +static HRESULT WINAPI
> > IDirectPlay8PeerImpl_EnumServiceProviders(PDIRECTPLAY8PEER iface, CONST
> > GUID *CONST pguidServiceProvider, CONST GUID *CONST pguidApplication,
> > DPN_SERVICE_PROVIDER_INFO *CONST pSPInfoBuffer, DWORD *CONST pcbEnumData,
> > DWORD *CONST pcReturned, CONST DWORD dwFlags) +{
> > +    FIXME("(%p)->(%p,%p,%p,%p,%p,%x): stub\n", iface,
> > pguidServiceProvider, pguidApplication, pSPInfoBuffer, pcbEnumData,
> > pcReturned, dwFlags); +    return DPN_OK;
> > +}
>
> Returning OK from stubs is usually not a good idea.
>

ok

> > +static const IDirectPlay8PeerVtbl DirectPlay8Peer_Vtbl =
> > +{
> > +    IDirectPlay8PeerImpl_QueryInterface,
> > +    IDirectPlay8PeerImpl_AddRef,
> > +    IDirectPlay8PeerImpl_Release,
> > +    IDirectPlay8PeerImpl_Initialize,
> > +    IDirectPlay8PeerImpl_EnumServiceProviders
> > +};
>
> You can't initialize a vtbl partially, you need to stub all the functions.

Ok.  I thought it was ok since the rest was added in the patchset.



From owen at owenrudge.net  Wed Aug 20 08:24:02 2008
From: owen at owenrudge.net (Owen Rudge)
Date: Wed, 20 Aug 2008 14:24:02 +0100
Subject: Summer of code evaluations
References: <48AB53C2.2090400@gmail.com>
Message-ID: <34D4672813344B7E898A05F4219A2663@lan.owenrudge.net>

Hi all,

> I would like to request from the mentors to fill in the final evaluation
> form and from the students to give a final write up: What went well? Did
> you meet the goals you set? Did you have fun? Is there anything we can
> do to make wines summer of code better and do you feel like you've
> become part of the wine community?

I'd say my project has gone quite well. I've completed the main objectives 
of my project, including fixing the shell namespace implementation of 
Control Panel, improving the built-in control panel, and working on some new 
control panels to improve Wine's configuration options (Add/Remove Programs, 
plus a new Desktop control panel that I'm just tidying up ready to submit 
this week). While I will have university-related things to carry on with in 
September, I'm not intending to disappear completely - I'm hoping to split 
off and tidy up the multimedia settings in winecfg to its own control panel, 
too, and then tidy up winecfg a bit, making it more logical by restricting 
it to panels that are specific to Wine itself. So hopefully you'll still see 
me around a bit. :-)

Overall, I rather enjoyed Summer of Code, and learnt a lot about how to go 
about getting things done in an open source environment. Thanks to all, 
particularly my mentor Juan, for help and support along the way!

Cheers,

-- 
Owen Rudge
http://www.owenrudge.net/ 



From stefan at codeweavers.com  Wed Aug 20 09:08:49 2008
From: stefan at codeweavers.com (=?UTF-8?Q?Stefan_D=C3=B6singer?=)
Date: Wed, 20 Aug 2008 09:08:49 -0500
Subject: [9/10] WineD3D: Update the overlay when the destination was drawn
	to
In-Reply-To: <87d4k36dos.fsf@wine.dyndns.org>
References: <000401c9021b$70659d90$5130d8b0$@com>
	<87d4k36dos.fsf@wine.dyndns.org>
Message-ID: <013101c902ce$44fdebe0$cef9c3a0$@com>

> > +    static BOOL recursive = FALSE;
> 
> That static looks very suspicious. It should either be stored in the
> object or use some sort of locking.
Well, there is locking, it is done by the client library(ddraw, d3d8, d3d9). Still storing this in the object is a good idea I think




From austinenglish at gmail.com  Wed Aug 20 10:02:28 2008
From: austinenglish at gmail.com (Austin English)
Date: Wed, 20 Aug 2008 10:02:28 -0500
Subject: [PATCH] AcceptEx Impelementation
In-Reply-To: <81fd805b0808200548q1e12ec04j51d3b77955f3fffe@mail.gmail.com>
References: <81fd805b0808040029m56821adepe4c7c98cc81c8ecc@mail.gmail.com>
	<200808100916.36894.kai.blin@gmail.com>
	<81fd805b0808181335h6af0f9d8va26c5f42c8f0ea79@mail.gmail.com>
	<a71bd89a0808181715q4a8edef2ya6ae785b40717d25@mail.gmail.com>
	<81fd805b0808200548q1e12ec04j51d3b77955f3fffe@mail.gmail.com>
Message-ID: <b6bb06270808200802u7277abdbh9dce4333cd948877@mail.gmail.com>

On Wed, Aug 20, 2008 at 7:48 AM, Scott Lindeneau <slindeneau at gmail.com> wrote:
> On Tue, Aug 19, 2008 at 9:15 AM, Dan Kegel <dank at kegel.com> wrote:
>> Scott Lindeneau <slindeneau at gmail.com> wrote:
>>> i Don't have any windows machines to test the code on
>>
>> That's a real problem.   You can't be sure the tests you're
>> writing are good unless they pass on a windows machine.
>
> Is an emulated environment using qemu good enough?
>

Yes, or send a request for someone to test to wine-devel.


From dank at kegel.com  Wed Aug 20 10:50:51 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 20 Aug 2008 08:50:51 -0700
Subject: [PATCH] AcceptEx Impelementation
In-Reply-To: <81fd805b0808200548q1e12ec04j51d3b77955f3fffe@mail.gmail.com>
References: <81fd805b0808040029m56821adepe4c7c98cc81c8ecc@mail.gmail.com>
	<200808100916.36894.kai.blin@gmail.com>
	<81fd805b0808181335h6af0f9d8va26c5f42c8f0ea79@mail.gmail.com>
	<a71bd89a0808181715q4a8edef2ya6ae785b40717d25@mail.gmail.com>
	<81fd805b0808200548q1e12ec04j51d3b77955f3fffe@mail.gmail.com>
Message-ID: <a71bd89a0808200850s1d3d69bbv1b09c84d4097c084@mail.gmail.com>

Scott Lindeneau <slindeneau at gmail.com> wrote:
> Is an emulated environment using qemu good enough?

Yes, for networking stuff it'd be just fine.


>>>If anyone can tell me how to check to see if there are connections
>>>pending on a sockets listen backlog (in the wineserver) and how to
>>>post that information into the wineserver main poll loop, im all ears.
>>>The wineserver isn't correctly posting these events.
>>
>> Can't you just see if accept() or moral equivalent grabs
>> a connection?
>
> That's a good idea, but I think the wineserver already knows about it,
> and its clobbering that information somewhere accidentally. (Also, it
> means further complicating the accept function in the wineserver...

??  Not sure what you're talking about there.  Your tests
should not try to get at any hidden Wine info.  They
should simply use plain old Windows networking calls
that should not complicate the wineserver.
- Dan


From slindeneau at gmail.com  Wed Aug 20 11:56:02 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Thu, 21 Aug 2008 01:56:02 +0900
Subject: [PATCH] AcceptEx Impelementation
In-Reply-To: <a71bd89a0808200850s1d3d69bbv1b09c84d4097c084@mail.gmail.com>
References: <81fd805b0808040029m56821adepe4c7c98cc81c8ecc@mail.gmail.com>
	<200808100916.36894.kai.blin@gmail.com>
	<81fd805b0808181335h6af0f9d8va26c5f42c8f0ea79@mail.gmail.com>
	<a71bd89a0808181715q4a8edef2ya6ae785b40717d25@mail.gmail.com>
	<81fd805b0808200548q1e12ec04j51d3b77955f3fffe@mail.gmail.com>
	<a71bd89a0808200850s1d3d69bbv1b09c84d4097c084@mail.gmail.com>
Message-ID: <81fd805b0808200956v4ea0913ep80207c595d3b2817@mail.gmail.com>

> ??  Not sure what you're talking about there.  Your tests
> should not try to get at any hidden Wine info.  They
> should simply use plain old Windows networking calls
> that should not complicate the wineserver.
> - Dan

Ah. My apologies. My question was related to writing the
implementation of acceptex. I have recently solved the problem and the
question is now moot. The problem was related to a bug in the
wineserver async implementation that appeared when a file descriptor
handled its own polling events (like sockets) and garbage collection.
Fixing the bug fixes the problem i was having earlier. Should I
include those fixes in a separate patch or can I incorporate them into
the acceptex patch? (Correct AcceptEx implementation relies on it).


From juan.lang at gmail.com  Wed Aug 20 11:59:34 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Wed, 20 Aug 2008 09:59:34 -0700
Subject: [PATCH] AcceptEx Impelementation
In-Reply-To: <81fd805b0808200956v4ea0913ep80207c595d3b2817@mail.gmail.com>
References: <81fd805b0808040029m56821adepe4c7c98cc81c8ecc@mail.gmail.com>
	<200808100916.36894.kai.blin@gmail.com>
	<81fd805b0808181335h6af0f9d8va26c5f42c8f0ea79@mail.gmail.com>
	<a71bd89a0808181715q4a8edef2ya6ae785b40717d25@mail.gmail.com>
	<81fd805b0808200548q1e12ec04j51d3b77955f3fffe@mail.gmail.com>
	<a71bd89a0808200850s1d3d69bbv1b09c84d4097c084@mail.gmail.com>
	<81fd805b0808200956v4ea0913ep80207c595d3b2817@mail.gmail.com>
Message-ID: <3a768c550808200959i6cc9315dva53f702eb685f96c@mail.gmail.com>

> Ah. My apologies. My question was related to writing the
> implementation of acceptex. I have recently solved the problem and the
> question is now moot. The problem was related to a bug in the
> wineserver async implementation that appeared when a file descriptor
> handled its own polling events (like sockets) and garbage collection.
> Fixing the bug fixes the problem i was having earlier. Should I
> include those fixes in a separate patch or can I incorporate them into
> the acceptex patch? (Correct AcceptEx implementation relies on it).

Those fixes should be a separate patch, perhaps one in a series of patches.
--Juan


From dank at kegel.com  Wed Aug 20 12:05:49 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 20 Aug 2008 10:05:49 -0700
Subject: [PATCH] AcceptEx Impelementation
In-Reply-To: <81fd805b0808200956v4ea0913ep80207c595d3b2817@mail.gmail.com>
References: <81fd805b0808040029m56821adepe4c7c98cc81c8ecc@mail.gmail.com>
	<200808100916.36894.kai.blin@gmail.com>
	<81fd805b0808181335h6af0f9d8va26c5f42c8f0ea79@mail.gmail.com>
	<a71bd89a0808181715q4a8edef2ya6ae785b40717d25@mail.gmail.com>
	<81fd805b0808200548q1e12ec04j51d3b77955f3fffe@mail.gmail.com>
	<a71bd89a0808200850s1d3d69bbv1b09c84d4097c084@mail.gmail.com>
	<81fd805b0808200956v4ea0913ep80207c595d3b2817@mail.gmail.com>
Message-ID: <a71bd89a0808201005j40b9f8cdxe8726a2f34e456a1@mail.gmail.com>

Scott Lindeneau <slindeneau at gmail.com> wrote:
> The problem was related to a bug in the
> wineserver async implementation that appeared when a file descriptor
> handled its own polling events (like sockets) and garbage collection.
> Fixing the bug fixes the problem i was having earlier. Should I
> include those fixes in a separate patch or can I incorporate them into
> the acceptex patch? (Correct AcceptEx implementation relies on it).

If you can write a conformance test to expose the bug,
then please send that and a patch for the fix, e.g.
as the first two patches in a series:
  1/4 async test
  2/4 async fix
  3/4 acceptex test
  4/4 acceptex fix
If no separate test is possible, just fold it in to the AcceptEx patches.
Thanks!
- Dan


From slindeneau at gmail.com  Wed Aug 20 12:18:44 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Thu, 21 Aug 2008 02:18:44 +0900
Subject: [PATCH] AcceptEx Impelementation
In-Reply-To: <a71bd89a0808201005j40b9f8cdxe8726a2f34e456a1@mail.gmail.com>
References: <81fd805b0808040029m56821adepe4c7c98cc81c8ecc@mail.gmail.com>
	<200808100916.36894.kai.blin@gmail.com>
	<81fd805b0808181335h6af0f9d8va26c5f42c8f0ea79@mail.gmail.com>
	<a71bd89a0808181715q4a8edef2ya6ae785b40717d25@mail.gmail.com>
	<81fd805b0808200548q1e12ec04j51d3b77955f3fffe@mail.gmail.com>
	<a71bd89a0808200850s1d3d69bbv1b09c84d4097c084@mail.gmail.com>
	<81fd805b0808200956v4ea0913ep80207c595d3b2817@mail.gmail.com>
	<a71bd89a0808201005j40b9f8cdxe8726a2f34e456a1@mail.gmail.com>
Message-ID: <81fd805b0808201018h21f1cedby82fbe9620594ee22@mail.gmail.com>

The async bug was revealed as I was writing the acceptex tests. The
only observable effect was a thread hanging because it never gets
notified. I don't know how/where to write conformance tests for the
wineserver core.
> If you can write a conformance test to expose the bug,
> then please send that and a patch for the fix, e.g.
> as the first two patches in a series:
>  1/4 async test
>  2/4 async fix
>  3/4 acceptex test
>  4/4 acceptex fix
> If no separate test is possible, just fold it in to the AcceptEx patches.
> Thanks!
> - Dan
>


From slindeneau at gmail.com  Wed Aug 20 12:23:21 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Thu, 21 Aug 2008 02:23:21 +0900
Subject: Running a conformance test on windows before submitting to
	wine-patches.
Message-ID: <81fd805b0808201023j44e6e6bg1e685303d0ebb2cc@mail.gmail.com>

I would like to submit the following AcceptEx conformance test to
wine-patches, but I don't have a windows box (and i haven't got qemu
setup(correctly) yet). Would someone run this and let me know how/if
it failes (or succeeds... it should succeed).

Thanks
- Scott
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0001-AcceptEx-Conformance-Tests.-Simple.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080821/5b8ddd7b/attachment.txt 

From austinenglish at gmail.com  Wed Aug 20 12:29:39 2008
From: austinenglish at gmail.com (Austin English)
Date: Wed, 20 Aug 2008 12:29:39 -0500
Subject: Running a conformance test on windows before submitting to
	wine-patches.
In-Reply-To: <81fd805b0808201023j44e6e6bg1e685303d0ebb2cc@mail.gmail.com>
References: <81fd805b0808201023j44e6e6bg1e685303d0ebb2cc@mail.gmail.com>
Message-ID: <b6bb06270808201029l4cadaa40h49cfd887e8cd0e3d@mail.gmail.com>

On Wed, Aug 20, 2008 at 12:23 PM, Scott Lindeneau <slindeneau at gmail.com> wrote:
> I would like to submit the following AcceptEx conformance test to
> wine-patches, but I don't have a windows box (and i haven't got qemu
> setup(correctly) yet). Would someone run this and let me know how/if
> it failes (or succeeds... it should succeed).
>
> Thanks
> - Scott
>
>
>
>

Does it depend on another patch:

austin at SERVER1:~/wine-git/dlls/ws2_32/tests$ make crosstest
i586-mingw32msvc-gcc protocol.cross.o sock.cross.o
testlist.cross.o -o ws2_32_crosstest.exe -L../../../dlls
-L../../../dlls/ws2_32 -L../../../dlls/kernel32 -lws2_32 -lkernel32
sock.cross.o: In function
`overlapped_server':/home/austin/wine-git/dlls/ws2_32/tests/sock.c:633:
undefined reference to `_AcceptEx at 32'
:/home/austin/wine-git/dlls/ws2_32/tests/sock.c:677: undefined
reference to `_GetAcceptExSockaddrs at 32'
collect2: ld returned 1 exit status
make: *** [ws2_32_crosstest.exe] Error 1


From eric.pouech at orange.fr  Wed Aug 20 12:30:44 2008
From: eric.pouech at orange.fr (Eric Pouech)
Date: Wed, 20 Aug 2008 19:30:44 +0200
Subject: Alexander Nicolaysen =?UTF-8?B?U8O4cm5lcyA6IHJlZ2VkaXQ6IENvbg==?=
	=?UTF-8?B?dmVydCBwcmludGluZyZoZWxwIHRvIHVuaWNvZGUu?=
In-Reply-To: <E1KVnVP-0007fD-Qr@wine.codeweavers.com>
References: <E1KVnVP-0007fD-Qr@wine.codeweavers.com>
Message-ID: <48AC54C4.4060107@orange.fr>

Alexandre Julliard a ?crit :
> Module: wine
> Branch: master
> Commit: 5cb8bccf462790338677dac3bfb394df8f4da020
> URL:    http://source.winehq.org/git/wine.git/?a=commit;h=5cb8bccf462790338677dac3bfb394df8f4da020
>
> Author: Alexander Nicolaysen S?rnes <alex at thehandofagony.com>
> Date:   Sun Aug 10 12:43:06 2008 +0200
>
> regedit: Convert printing&help to unicode.
>
> ---
>
>  programs/regedit/framewnd.c |   25 +++++++++++++++++--------
>  1 files changed, 17 insertions(+), 8 deletions(-)
>
> @@ -671,8 +671,11 @@ static BOOL _CmdWndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
>      case ID_REGISTRY_DISCONNECTNETWORKREGISTRY:
>          break;
>      case ID_REGISTRY_PRINT:
> -        PrintRegistryHive(hWnd, _T(""));
> +    {
> +        const WCHAR empty = 0;
> +        PrintRegistryHive(hWnd, empty);
>          break;
> +    }
>   
this looks very wrong to me

-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)




From eric.pouech at orange.fr  Wed Aug 20 12:33:22 2008
From: eric.pouech at orange.fr (Eric Pouech)
Date: Wed, 20 Aug 2008 19:33:22 +0200
Subject: crypt32(4/7): Add tests for CMSG_CMS_SIGNER_INFO_PARAM
In-Reply-To: <3a768c550808200641h2f897c45j350b4cf0a1a267e5@mail.gmail.com>
References: <3a768c550808200641h2f897c45j350b4cf0a1a267e5@mail.gmail.com>
Message-ID: <48AC5562.8070902@orange.fr>

Juan Lang a ?crit :

> --Juan
> ------------------------------------------------------------------------
>
> From 7eaf8a741cc4ff2035491f36ba9b8f7c5d650458 Mon Sep 17 00:00:00 2001
> From: Juan Lang <juan.lang at gmail.com>
> Date: Mon, 18 Aug 2008 13:09:24 -0700
> Subject: [PATCH] Add tests for CMSG_CMS_SIGNER_INFO_PARAM
>
> ---
>  dlls/crypt32/tests/msg.c |  135 ++++++++++++++++++++++++++++++++++++++++++++++
>  1 files changed, 135 insertions(+), 0 deletions(-)
>
> diff --git a/dlls/crypt32/tests/msg.c b/dlls/crypt32/tests/msg.c
> index 86ce6b1..ce4affd 100644
> --- a/dlls/crypt32/tests/msg.c
> +++ b/dlls/crypt32/tests/msg.c
> @@ -2265,9 +2265,56 @@ static void compare_signer_info(const CMSG_SIGNER_INFO *got,
>      /* FIXME: check more things */
>  }
>  
> +static void compare_cms_signer_info(const CMSG_CMS_SIGNER_INFO *got,
> + const CMSG_CMS_SIGNER_INFO *expected)
> +{
> +    ok(got->dwVersion == expected->dwVersion, "Expected version %d, got %d\n",
> +     expected->dwVersion, got->dwVersion);
> +    ok(got->SignerId.dwIdChoice == expected->SignerId.dwIdChoice,
> +     "Expected id choice %d, got %d\n", expected->SignerId.dwIdChoice,
> +     got->SignerId.dwIdChoice);
> +    if (got->SignerId.dwIdChoice == expected->SignerId.dwIdChoice)
> +    {
> +        if (got->SignerId.dwIdChoice == CERT_ID_ISSUER_SERIAL_NUMBER)
> +        {
> +            ok(got->SignerId.IssuerSerialNumber.Issuer.cbData ==
> +             expected->SignerId.IssuerSerialNumber.Issuer.cbData,
> +             "Expected issuer size %d, got %d\n",
> +             expected->SignerId.IssuerSerialNumber.Issuer.cbData,
> +             got->SignerId.IssuerSerialNumber.Issuer.cbData);
> +            ok(!memcmp(got->SignerId.IssuerSerialNumber.Issuer.pbData,
> +             got->SignerId.IssuerSerialNumber.Issuer.pbData,
shouldn't it be expected->SignerId.IssuerSerialNumber.Issuer.pbData,
> +             got->SignerId.IssuerSerialNumber.Issuer.cbData),
> +             "Unexpected issuer\n");
> +            ok(got->SignerId.IssuerSerialNumber.SerialNumber.cbData ==
> +             expected->SignerId.IssuerSerialNumber.SerialNumber.cbData,
> +             "Expected serial number size %d, got %d\n",
> +             expected->SignerId.IssuerSerialNumber.SerialNumber.cbData,
> +             got->SignerId.IssuerSerialNumber.SerialNumber.cbData);
> +            ok(!memcmp(got->SignerId.IssuerSerialNumber.SerialNumber.pbData,
> +             got->SignerId.IssuerSerialNumber.SerialNumber.pbData,
ditto ?
> +             got->SignerId.IssuerSerialNumber.SerialNumber.cbData),
> +             "Unexpected serial number\n");
> +        }
> +        else
> +        {
> +            ok(got->SignerId.KeyId.cbData == expected->SignerId.KeyId.cbData,
> +             "expected key id size %d, got %d\n",
> +             expected->SignerId.KeyId.cbData, got->SignerId.KeyId.cbData);
> +            ok(!memcmp(expected->SignerId.KeyId.pbData,
> +             got->SignerId.KeyId.pbData, got->SignerId.KeyId.cbData),
> +             "unexpected key id\n");
> +        }
> +    }
> +    /* FIXME: check more things */
> +}
> +
>  static const BYTE signedWithCertAndCrlComputedHash[] = {
>  0x08,0xd6,0xc0,0x5a,0x21,0x51,0x2a,0x79,0xa1,0xdf,0xeb,0x9d,0x2a,0x8f,0x26,
>  0x2f };
> +static BYTE keyIdIssuer[] = {
> +0x30,0x13,0x31,0x11,0x30,0x0f,0x06,0x0a,0x2b,0x06,0x01,0x04,0x01,0x82,0x37,
> +0x0a,0x07,0x01,0x04,0x01,0x01 };
>  
>  static void test_decode_msg_get_param(void)
>  {
> @@ -2354,6 +2401,32 @@ static void test_decode_msg_get_param(void)
>          compare_signer_info((CMSG_SIGNER_INFO *)buf, &signer);
>          CryptMemFree(buf);
>      }
> +    /* Getting the CMS signer info of a PKCS7 message is possible. */
> +    size = 0;
> +    ret = CryptMsgGetParam(msg, CMSG_CMS_SIGNER_INFO_PARAM, 0, NULL, &size);
> +    todo_wine
> +    ok(ret, "CryptMsgGetParam failed: %08x\n", GetLastError());
> +    if (ret)
> +        buf = CryptMemAlloc(size);
> +    else
> +        buf = NULL;
> +    if (buf)
> +    {
> +        CMSG_CMS_SIGNER_INFO signer = { 0 };
> +
> +        signer.dwVersion = 1;
> +        signer.SignerId.dwIdChoice = CERT_ID_ISSUER_SERIAL_NUMBER;
> +        signer.SignerId.IssuerSerialNumber.Issuer.cbData =
> +         sizeof(encodedCommonName);
> +        signer.SignerId.IssuerSerialNumber.Issuer.pbData = encodedCommonName;
> +        signer.SignerId.IssuerSerialNumber.SerialNumber.cbData =
> +         sizeof(serialNum);
> +        signer.SignerId.IssuerSerialNumber.SerialNumber.pbData = serialNum;
> +        signer.HashAlgorithm.pszObjId = oid_rsa_md5;
> +        CryptMsgGetParam(msg, CMSG_CMS_SIGNER_INFO_PARAM, 0, buf, &size);
> +        compare_cms_signer_info((CMSG_CMS_SIGNER_INFO *)buf, &signer);
> +        CryptMemFree(buf);
> +    }
>      /* index is ignored when getting signer count */
>      size = sizeof(value);
>      ret = CryptMsgGetParam(msg, CMSG_SIGNER_COUNT_PARAM, 1, &value, &size);
> @@ -2383,6 +2456,68 @@ static void test_decode_msg_get_param(void)
>       CMSG_COMPUTED_HASH_PARAM, signedWithCertAndCrlComputedHash,
>       sizeof(signedWithCertAndCrlComputedHash));
>      CryptMsgClose(msg);
> +
> +    msg = CryptMsgOpenToDecode(PKCS_7_ASN_ENCODING, 0, 0, 0, NULL, NULL);
> +    ret = CryptMsgUpdate(msg, signedKeyIdEmptyContent,
> +     sizeof(signedKeyIdEmptyContent), TRUE);
> +    ok(ret, "CryptMsgUpdate failed: %08x\n", GetLastError());
> +    size = sizeof(value);
> +    ret = CryptMsgGetParam(msg, CMSG_SIGNER_COUNT_PARAM, 0, &value, &size);
> +    ok(ret, "CryptMsgGetParam failed: %08x\n", GetLastError());
> +    ok(value == 1, "Expected 1 signer, got %d\n", value);
> +    /* Getting the regular (non-CMS) signer info from a CMS message is also
> +     * possible..
> +     */
> +    size = 0;
> +    ret = CryptMsgGetParam(msg, CMSG_SIGNER_INFO_PARAM, 0, NULL, &size);
> +    todo_wine
> +    ok(ret, "CryptMsgGetParam failed: %08x\n", GetLastError());
> +    if (ret)
> +        buf = CryptMemAlloc(size);
> +    else
> +        buf = NULL;
> +    if (buf)
> +    {
> +        CMSG_SIGNER_INFO signer;
> +        BYTE zero = 0;
> +
> +        /* and here's the little oddity:  for a CMS message using the key id
> +         * variant of a SignerId, retrieving the CMSG_SIGNER_INFO param yields
> +         * a signer with a zero (not empty) serial number, and whose issuer is
> +         * an RDN with OID szOID_KEYID_RDN, value type CERT_RDN_OCTET_STRING,
> +         * and value of the key id.
> +         */
> +        signer.dwVersion = CMSG_SIGNED_DATA_V3;
> +        signer.Issuer.cbData = sizeof(keyIdIssuer);
> +        signer.Issuer.pbData = keyIdIssuer;
> +        signer.SerialNumber.cbData = 1;
> +        signer.SerialNumber.pbData = &zero;
> +        CryptMsgGetParam(msg, CMSG_SIGNER_INFO_PARAM, 0, buf, &size);
> +        compare_signer_info((CMSG_SIGNER_INFO *)buf, &signer);
> +        CryptMemFree(buf);
> +    }
> +    size = 0;
> +    ret = CryptMsgGetParam(msg, CMSG_CMS_SIGNER_INFO_PARAM, 0, NULL, &size);
> +    todo_wine
> +    ok(ret, "CryptMsgGetParam failed: %08x\n", GetLastError());
> +    if (ret)
> +        buf = CryptMemAlloc(size);
> +    else
> +        buf = NULL;
> +    if (buf)
> +    {
> +        CMSG_CMS_SIGNER_INFO signer = { 0 };
> +
> +        signer.dwVersion = CMSG_SIGNED_DATA_V3;
> +        signer.SignerId.dwIdChoice = CERT_ID_KEY_IDENTIFIER;
> +        signer.SignerId.KeyId.cbData = sizeof(serialNum);
> +        signer.SignerId.KeyId.pbData = (BYTE *)serialNum;
> +        signer.HashAlgorithm.pszObjId = oid_rsa_md5;
> +        CryptMsgGetParam(msg, CMSG_CMS_SIGNER_INFO_PARAM, 0, buf, &size);
> +        compare_cms_signer_info((CMSG_CMS_SIGNER_INFO *)buf, &signer);
> +        CryptMemFree(buf);
> +    }
> +    CryptMsgClose(msg);
>  }
>  
>  static void test_decode_msg(void)
> -- 1.5.2.2
> ------------------------------------------------------------------------
>
>

-- 1.5.2.2

------------------------------------------------------------------------




-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)




From juan.lang at gmail.com  Wed Aug 20 12:44:08 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Wed, 20 Aug 2008 10:44:08 -0700
Subject: crypt32(4/7): Add tests for CMSG_CMS_SIGNER_INFO_PARAM
In-Reply-To: <48AC5562.8070902@orange.fr>
References: <3a768c550808200641h2f897c45j350b4cf0a1a267e5@mail.gmail.com>
	<48AC5562.8070902@orange.fr>
Message-ID: <3a768c550808201044k74ec1cb8yfc6b50c6df09f318@mail.gmail.com>

Hi Eric,

>> +            ok(!memcmp(got->SignerId.IssuerSerialNumber.Issuer.pbData,
>> +             got->SignerId.IssuerSerialNumber.Issuer.pbData,
> shouldn't it be expected->SignerId.IssuerSerialNumber.Issuer.pbData,

Yes, certainly.  Thanks for spotting these, I sent a new patch.
--Juan


From slindeneau at gmail.com  Wed Aug 20 12:46:48 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Thu, 21 Aug 2008 02:46:48 +0900
Subject: Running a conformance test on windows before submitting to
	wine-patches.
In-Reply-To: <b6bb06270808201036x7b9b41a5v32de54d0ab3e3775@mail.gmail.com>
References: <81fd805b0808201023j44e6e6bg1e685303d0ebb2cc@mail.gmail.com>
	<b6bb06270808201029l4cadaa40h49cfd887e8cd0e3d@mail.gmail.com>
	<81fd805b0808201034x64cd3f59pd0f84f004868c6b9@mail.gmail.com>
	<b6bb06270808201036x7b9b41a5v32de54d0ab3e3775@mail.gmail.com>
Message-ID: <81fd805b0808201046y3e661f45ted38573f563d398f@mail.gmail.com>

It did. I wrote the test using a different set of patches which let it
compile with wine. I will look up how to cross compile it and do that
next time. Sorry for the inconvenience.

On Thu, Aug 21, 2008 at 2:36 AM, Austin English <austinenglish at gmail.com> wrote:
> On Wed, Aug 20, 2008 at 12:34 PM, Scott Lindeneau <slindeneau at gmail.com> wrote:
>> I don't think so? I've never written a conformance test before. I did
>> implement AcceptEx in wine, but it shouldn't need that patch to
>> compile for windows should it? Or maybe I need to load it into memory
>> instead of just calling it first... Terribly sorry. I'm making myself
>> a nuisance. I will try writing it using the windows WSAIoctl call to
>> load it into memory first. MSDN does say I need that.
>>
>> -Scott
>>
>>
>> On Thu, Aug 21, 2008 at 2:29 AM, Austin English <austinenglish at gmail.com> wrote:
>>> On Wed, Aug 20, 2008 at 12:23 PM, Scott Lindeneau <slindeneau at gmail.com> wrote:
>>>> I would like to submit the following AcceptEx conformance test to
>>>> wine-patches, but I don't have a windows box (and i haven't got qemu
>>>> setup(correctly) yet). Would someone run this and let me know how/if
>>>> it failes (or succeeds... it should succeed).
>>>>
>>>> Thanks
>>>> - Scott
>>>>
>>>>
>>>>
>>>>
>>>
>>> Does it depend on another patch:
>>>
>>> austin at SERVER1:~/wine-git/dlls/ws2_32/tests$ make crosstest
>>> i586-mingw32msvc-gcc protocol.cross.o sock.cross.o
>>> testlist.cross.o -o ws2_32_crosstest.exe -L../../../dlls
>>> -L../../../dlls/ws2_32 -L../../../dlls/kernel32 -lws2_32 -lkernel32
>>> sock.cross.o: In function
>>> `overlapped_server':/home/austin/wine-git/dlls/ws2_32/tests/sock.c:633:
>>> undefined reference to `_AcceptEx at 32'
>>> :/home/austin/wine-git/dlls/ws2_32/tests/sock.c:677: undefined
>>> reference to `_GetAcceptExSockaddrs at 32'
>>> collect2: ld returned 1 exit status
>>> make: *** [ws2_32_crosstest.exe] Error 1
>>>
>>
>
> Please bottom post on wine-devel.
>
> In the future, sending a compiled exe is helpful, saves time. Does it
> even past make test for you?
>
>
> austin at SERVER1:~/wine-git/dlls/ws2_32/tests$ make test
> ccache gcc -c -I. -I. -I../../../include -I../../../include
> -D_REENTRANT -fPIC -Wall -pipe -fno-strict-aliasing
> -Wdeclaration-after-statement -Wwrite-strings -Wpointer-arith  -g -O2
> -o protocol.o protocol.c
> ccache gcc -c -I. -I. -I../../../include -I../../../include
> -D_REENTRANT -fPIC -Wall -pipe -fno-strict-aliasing
> -Wdeclaration-after-statement -Wwrite-strings -Wpointer-arith  -g -O2
> -o sock.o sock.c
> sock.c: In function ?overlapped_server?:
> sock.c:670: warning: pointer targets in passing argument 3 of
> ?GetOverlappedResult? differ in signedness
> ccache gcc -c -I. -I. -I../../../include -I../../../include
> -D_REENTRANT -fPIC -Wall -pipe -fno-strict-aliasing
> -Wdeclaration-after-statement -Wwrite-strings -Wpointer-arith  -g -O2
> -o testlist.o testlist.c
> ../../../tools/winegcc/winegcc -B../../../tools/winebuild -mconsole
> protocol.o sock.o    testlist.o  -o ws2_32_test.exe.so
> ../../../libs/port/libwine_port.a -lws2_32 -lkernel32
> sock.o: In function `overlapped_server':
> /home/austin/wine-git/dlls/ws2_32/tests/sock.c:633: undefined
> reference to `AcceptEx'
> /home/austin/wine-git/dlls/ws2_32/tests/sock.c:677: undefined
> reference to `GetAcceptExSockaddrs'
> collect2: ld returned 1 exit status
> winegcc: ccache failed
> make: *** [ws2_32_test.exe.so] Error 2
>

From alex at thehandofagony.com  Wed Aug 20 12:55:24 2008
From: alex at thehandofagony.com (Alexander Nicolaysen =?utf-8?q?S=C3=B8rnes?=)
Date: Wed, 20 Aug 2008 19:55:24 +0200
Subject: Alexander Nicolaysen
	=?utf-8?q?S=C3=B8rnes_=3A_regedit=3A_Convert_printing=26help_to?=
	=?utf-8?q?_unicode=2E?=
In-Reply-To: <48AC54C4.4060107@orange.fr>
References: <E1KVnVP-0007fD-Qr@wine.codeweavers.com>
	<48AC54C4.4060107@orange.fr>
Message-ID: <200808201955.24474.alex@thehandofagony.com>

P? Onsdag 20 august 2008 , 19:30:44 skrev Eric Pouech:
> Alexandre Julliard a ?crit :
> > Module: wine
> > Branch: master
> > Commit: 5cb8bccf462790338677dac3bfb394df8f4da020
> > URL:   
> > http://source.winehq.org/git/wine.git/?a=commit;h=5cb8bccf462790338677dac
> >3bfb394df8f4da020
> >
> > Author: Alexander Nicolaysen S?rnes <alex at thehandofagony.com>
> > Date:   Sun Aug 10 12:43:06 2008 +0200
> >
> > regedit: Convert printing&help to unicode.
> >
> > ---
> >
> >  programs/regedit/framewnd.c |   25 +++++++++++++++++--------
> >  1 files changed, 17 insertions(+), 8 deletions(-)
> >
> > @@ -671,8 +671,11 @@ static BOOL _CmdWndProc(HWND hWnd, UINT message,
> > WPARAM wParam, LPARAM lParam) case ID_REGISTRY_DISCONNECTNETWORKREGISTRY:
> >          break;
> >      case ID_REGISTRY_PRINT:
> > -        PrintRegistryHive(hWnd, _T(""));
> > +    {
> > +        const WCHAR empty = 0;
> > +        PrintRegistryHive(hWnd, empty);
> >          break;
> > +    }
>
> this looks very wrong to me

Prinitng isn't actually implemented in regedit; I just changed the little bit 
of code that was there.  Is it wrong to do
> > +        const WCHAR empty = 0;
> > +        PrintRegistryHive(hWnd, empty);

to send an empty string?

Thanks for reviewing the changes!


Alexander N. S?rnes


From wine at mkarcher.dialup.fu-berlin.de  Wed Aug 20 13:09:40 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Wed, 20 Aug 2008 20:09:40 +0200
Subject: Alexander Nicolaysen =?ISO-8859-1?Q?S=F8rnes?= : regedit:
	Convert printing&help to unicode.
In-Reply-To: <200808201955.24474.alex@thehandofagony.com>
References: <E1KVnVP-0007fD-Qr@wine.codeweavers.com>
	<48AC54C4.4060107@orange.fr>
	<200808201955.24474.alex@thehandofagony.com>
Message-ID: <1219255780.12918.32.camel@hermes2.karcher.local>

Am Mittwoch, den 20.08.2008, 19:55 +0200 schrieb Alexander Nicolaysen
S?rnes:
> > > +        const WCHAR empty = 0;
> > > +        PrintRegistryHive(hWnd, empty);
> 
> to send an empty string?

It is. This sends a NULL pointer (empty is 0, converted to a pointer is
a NULL pointer). You mean "&empty".

Regards,
  Michael Karcher



From eric.pouech at orange.fr  Wed Aug 20 13:09:40 2008
From: eric.pouech at orange.fr (Eric Pouech)
Date: Wed, 20 Aug 2008 20:09:40 +0200
Subject: Alexander Nicolaysen =?UTF-8?B?U8O4cm5lcyA6IHJlZ2VkaXQ6IENvbg==?=
	=?UTF-8?B?dmVydCBwcmludGluZyZoZWxwIHRvIHVuaWNvZGUu?=
In-Reply-To: <200808201955.24474.alex@thehandofagony.com>
References: <E1KVnVP-0007fD-Qr@wine.codeweavers.com>
	<48AC54C4.4060107@orange.fr>
	<200808201955.24474.alex@thehandofagony.com>
Message-ID: <48AC5DE4.70504@orange.fr>

Alexander Nicolaysen S?rnes a ?crit :
> P? Onsdag 20 august 2008 , 19:30:44 skrev Eric Pouech:
>   
>> Alexandre Julliard a ?crit :
>>     
>>> Module: wine
>>> Branch: master
>>> Commit: 5cb8bccf462790338677dac3bfb394df8f4da020
>>> URL:   
>>> http://source.winehq.org/git/wine.git/?a=commit;h=5cb8bccf462790338677dac
>>> 3bfb394df8f4da020
>>>
>>> Author: Alexander Nicolaysen S?rnes <alex at thehandofagony.com>
>>> Date:   Sun Aug 10 12:43:06 2008 +0200
>>>
>>> regedit: Convert printing&help to unicode.
>>>
>>> ---
>>>
>>>  programs/regedit/framewnd.c |   25 +++++++++++++++++--------
>>>  1 files changed, 17 insertions(+), 8 deletions(-)
>>>
>>> @@ -671,8 +671,11 @@ static BOOL _CmdWndProc(HWND hWnd, UINT message,
>>> WPARAM wParam, LPARAM lParam) case ID_REGISTRY_DISCONNECTNETWORKREGISTRY:
>>>          break;
>>>      case ID_REGISTRY_PRINT:
>>> -        PrintRegistryHive(hWnd, _T(""));
>>> +    {
>>> +        const WCHAR empty = 0;
>>> +        PrintRegistryHive(hWnd, empty);
>>>          break;
>>> +    }
>>>       
>> this looks very wrong to me
>>     
>
> Prinitng isn't actually implemented in regedit; I just changed the little bit 
> of code that was there.  Is it wrong to do
>   
>>> +        const WCHAR empty = 0;
>>> +        PrintRegistryHive(hWnd, empty);
>>>       
>
> to send an empty string?
>
> Thanks for reviewing the changes!
>
>
> Alexander N. S?rnes
>
>
>   
the code should be PrintRegistryHive(hWnd, &empty);
A+

-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)




From dank at kegel.com  Wed Aug 20 13:48:21 2008
From: dank at kegel.com (dank at kegel.com)
Date: Wed, 20 Aug 2008 14:48:21 -0400 (EDT)
Subject: d3dx9: Implementation of D3DXGetDeclLength  
Message-ID: <43835.76.94.199.31.1219258101.squirrel@webmail5.pair.com>

http://kegel.com/wine/patchwatcher/results/ says you
forgot to include the new file
  include/d3dx9mesh.h
this time; you included it in
http://www.winehq.org/pipermail/wine-patches/2008-August/059261.html
but some how dropped it when you resent?


From slindeneau at gmail.com  Wed Aug 20 14:25:07 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Thu, 21 Aug 2008 04:25:07 +0900
Subject: Running a conformance test on windows before submitting to
	wine-patches.
In-Reply-To: <81fd805b0808201057v3bd3335wc970a2941ffa554b@mail.gmail.com>
References: <81fd805b0808201023j44e6e6bg1e685303d0ebb2cc@mail.gmail.com>
	<b6bb06270808201029l4cadaa40h49cfd887e8cd0e3d@mail.gmail.com>
	<81fd805b0808201034x64cd3f59pd0f84f004868c6b9@mail.gmail.com>
	<b6bb06270808201036x7b9b41a5v32de54d0ab3e3775@mail.gmail.com>
	<81fd805b0808201046y3e661f45ted38573f563d398f@mail.gmail.com>
	<b6bb06270808201048o69751d49j30d532be07705707@mail.gmail.com>
	<81fd805b0808201057v3bd3335wc970a2941ffa554b@mail.gmail.com>
Message-ID: <81fd805b0808201225k3c73a3e3p8b20ee7db76a7582@mail.gmail.com>

Sorry about not knowing how to cross compile before. Here is the
patch(gmail doesn't let me attach exe's... I will look into this).
Please try this. Tell me if I am doing something wrong (again).

-Scott
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0001-AcceptEx-Conformance-tests.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080821/18166046/attachment-0001.txt 

From austinenglish at gmail.com  Wed Aug 20 14:42:02 2008
From: austinenglish at gmail.com (Austin English)
Date: Wed, 20 Aug 2008 14:42:02 -0500
Subject: Running a conformance test on windows before submitting to
	wine-patches.
In-Reply-To: <81fd805b0808201225k3c73a3e3p8b20ee7db76a7582@mail.gmail.com>
References: <81fd805b0808201023j44e6e6bg1e685303d0ebb2cc@mail.gmail.com>
	<b6bb06270808201029l4cadaa40h49cfd887e8cd0e3d@mail.gmail.com>
	<81fd805b0808201034x64cd3f59pd0f84f004868c6b9@mail.gmail.com>
	<b6bb06270808201036x7b9b41a5v32de54d0ab3e3775@mail.gmail.com>
	<81fd805b0808201046y3e661f45ted38573f563d398f@mail.gmail.com>
	<b6bb06270808201048o69751d49j30d532be07705707@mail.gmail.com>
	<81fd805b0808201057v3bd3335wc970a2941ffa554b@mail.gmail.com>
	<81fd805b0808201225k3c73a3e3p8b20ee7db76a7582@mail.gmail.com>
Message-ID: <b6bb06270808201242p4fe33852yafb57a812b9eb7ba@mail.gmail.com>

On Wed, Aug 20, 2008 at 2:25 PM, Scott Lindeneau <slindeneau at gmail.com> wrote:
> Sorry about not knowing how to cross compile before. Here is the
> patch(gmail doesn't let me attach exe's... I will look into this).
> Please try this. Tell me if I am doing something wrong (again).
>
> -Scott
>

Got some warnings, might check into that.
austin at SERVER1:~/wine-git/dlls/ws2_32/tests$ make crosstest
i586-mingw32msvc-gcc -c -I. -I. -I../../../include -I../../../include
  -g -O2 -o protocol.cross.o protocol.c
i586-mingw32msvc-gcc -c -I. -I. -I../../../include -I../../../include
  -g -O2 -o sock.cross.o sock.c
sock.c: In function `overlapped_server':
sock.c:636: warning: assignment makes integer from pointer without a cast
sock.c:636: warning: comparison between pointer and integer
sock.c:636: warning: comparison between pointer and integer
sock.c:646: warning: assignment makes integer from pointer without a cast
sock.c:646: warning: comparison between pointer and integer
sock.c:646: warning: comparison between pointer and integer
../../../tools/make_ctests -o testlist.c protocol.c sock.c
i586-mingw32msvc-gcc -c -I. -I. -I../../../include -I../../../include
  -g -O2 -o testlist.cross.o testlist.c
i586-mingw32msvc-gcc protocol.cross.o sock.cross.o
testlist.cross.o -o ws2_32_crosstest.exe -L../../../dlls
-L../../../dlls/ws2_32 -L../../../dlls/kernel32 -lws2_32 -lkernel32

Passes for me in 2k (That test failure you see was already there, but
it's a different function anyway).

-Austin
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: result.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080820/025050f3/attachment.txt 

From slindeneau at gmail.com  Wed Aug 20 14:48:47 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Thu, 21 Aug 2008 04:48:47 +0900
Subject: Running a conformance test on windows before submitting to
	wine-patches.
In-Reply-To: <b6bb06270808201242p4fe33852yafb57a812b9eb7ba@mail.gmail.com>
References: <81fd805b0808201023j44e6e6bg1e685303d0ebb2cc@mail.gmail.com>
	<b6bb06270808201029l4cadaa40h49cfd887e8cd0e3d@mail.gmail.com>
	<81fd805b0808201034x64cd3f59pd0f84f004868c6b9@mail.gmail.com>
	<b6bb06270808201036x7b9b41a5v32de54d0ab3e3775@mail.gmail.com>
	<81fd805b0808201046y3e661f45ted38573f563d398f@mail.gmail.com>
	<b6bb06270808201048o69751d49j30d532be07705707@mail.gmail.com>
	<81fd805b0808201057v3bd3335wc970a2941ffa554b@mail.gmail.com>
	<81fd805b0808201225k3c73a3e3p8b20ee7db76a7582@mail.gmail.com>
	<b6bb06270808201242p4fe33852yafb57a812b9eb7ba@mail.gmail.com>
Message-ID: <81fd805b0808201248i4ad93d6cre3c52d26f8c420ba@mail.gmail.com>

Thanks. I'll typecast the warnings out or write a new macro for wsa_ok

-Scott

On Thu, Aug 21, 2008 at 4:42 AM, Austin English <austinenglish at gmail.com> wrote:
> On Wed, Aug 20, 2008 at 2:25 PM, Scott Lindeneau <slindeneau at gmail.com> wrote:
>> Sorry about not knowing how to cross compile before. Here is the
>> patch(gmail doesn't let me attach exe's... I will look into this).
>> Please try this. Tell me if I am doing something wrong (again).
>>
>> -Scott
>>
>
> Got some warnings, might check into that.
> austin at SERVER1:~/wine-git/dlls/ws2_32/tests$ make crosstest
> i586-mingw32msvc-gcc -c -I. -I. -I../../../include -I../../../include
>  -g -O2 -o protocol.cross.o protocol.c
> i586-mingw32msvc-gcc -c -I. -I. -I../../../include -I../../../include
>  -g -O2 -o sock.cross.o sock.c
> sock.c: In function `overlapped_server':
> sock.c:636: warning: assignment makes integer from pointer without a cast
> sock.c:636: warning: comparison between pointer and integer
> sock.c:636: warning: comparison between pointer and integer
> sock.c:646: warning: assignment makes integer from pointer without a cast
> sock.c:646: warning: comparison between pointer and integer
> sock.c:646: warning: comparison between pointer and integer
> ../../../tools/make_ctests -o testlist.c protocol.c sock.c
> i586-mingw32msvc-gcc -c -I. -I. -I../../../include -I../../../include
>  -g -O2 -o testlist.cross.o testlist.c
> i586-mingw32msvc-gcc protocol.cross.o sock.cross.o
> testlist.cross.o -o ws2_32_crosstest.exe -L../../../dlls
> -L../../../dlls/ws2_32 -L../../../dlls/kernel32 -lws2_32 -lkernel32
>
> Passes for me in 2k (That test failure you see was already there, but
> it's a different function anyway).
>
> -Austin
>


From dsh at linux.ucla.edu  Wed Aug 20 15:48:40 2008
From: dsh at linux.ucla.edu (Dan Hipschman)
Date: Wed, 20 Aug 2008 13:48:40 -0700
Subject: Running a conformance test on windows before submitting to
	wine-patches.
In-Reply-To: <81fd805b0808201225k3c73a3e3p8b20ee7db76a7582@mail.gmail.com>
References: <81fd805b0808201023j44e6e6bg1e685303d0ebb2cc@mail.gmail.com>
	<b6bb06270808201029l4cadaa40h49cfd887e8cd0e3d@mail.gmail.com>
	<81fd805b0808201034x64cd3f59pd0f84f004868c6b9@mail.gmail.com>
	<b6bb06270808201036x7b9b41a5v32de54d0ab3e3775@mail.gmail.com>
	<81fd805b0808201046y3e661f45ted38573f563d398f@mail.gmail.com>
	<b6bb06270808201048o69751d49j30d532be07705707@mail.gmail.com>
	<81fd805b0808201057v3bd3335wc970a2941ffa554b@mail.gmail.com>
	<81fd805b0808201225k3c73a3e3p8b20ee7db76a7582@mail.gmail.com>
Message-ID: <20080820204840.GV22846@linux.ucla.edu>

On Thu, Aug 21, 2008 at 04:25:07AM +0900, Scott Lindeneau wrote:
> Sorry about not knowing how to cross compile before. Here is the
> patch(gmail doesn't let me attach exe's... I will look into this).
> Please try this. Tell me if I am doing something wrong (again).

Thanks for working on this.  Before you submit this to wine-patches, get
rid of the tabs so the indentation lines up.  It will get auto-rejected
for inconsistent indentation.  ;)


From slindeneau at gmail.com  Wed Aug 20 15:54:07 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Thu, 21 Aug 2008 05:54:07 +0900
Subject: Running a conformance test on windows before submitting to
	wine-patches.
In-Reply-To: <20080820204840.GV22846@linux.ucla.edu>
References: <81fd805b0808201023j44e6e6bg1e685303d0ebb2cc@mail.gmail.com>
	<b6bb06270808201029l4cadaa40h49cfd887e8cd0e3d@mail.gmail.com>
	<81fd805b0808201034x64cd3f59pd0f84f004868c6b9@mail.gmail.com>
	<b6bb06270808201036x7b9b41a5v32de54d0ab3e3775@mail.gmail.com>
	<81fd805b0808201046y3e661f45ted38573f563d398f@mail.gmail.com>
	<b6bb06270808201048o69751d49j30d532be07705707@mail.gmail.com>
	<81fd805b0808201057v3bd3335wc970a2941ffa554b@mail.gmail.com>
	<81fd805b0808201225k3c73a3e3p8b20ee7db76a7582@mail.gmail.com>
	<20080820204840.GV22846@linux.ucla.edu>
Message-ID: <81fd805b0808201354s4a32c74el727948c4d5d7a75d@mail.gmail.com>

Guh. Ill figure it out eventually I guess. Which tabs are you talking
about in particular? All of them?

On Thu, Aug 21, 2008 at 5:48 AM, Dan Hipschman <dsh at linux.ucla.edu> wrote:
> On Thu, Aug 21, 2008 at 04:25:07AM +0900, Scott Lindeneau wrote:
>> Sorry about not knowing how to cross compile before. Here is the
>> patch(gmail doesn't let me attach exe's... I will look into this).
>> Please try this. Tell me if I am doing something wrong (again).
>
> Thanks for working on this.  Before you submit this to wine-patches, get
> rid of the tabs so the indentation lines up.  It will get auto-rejected
> for inconsistent indentation.  ;)
>


From dsh at linux.ucla.edu  Wed Aug 20 16:18:22 2008
From: dsh at linux.ucla.edu (Dan Hipschman)
Date: Wed, 20 Aug 2008 14:18:22 -0700
Subject: Running a conformance test on windows before submitting to
	wine-patches.
In-Reply-To: <81fd805b0808201354s4a32c74el727948c4d5d7a75d@mail.gmail.com>
References: <81fd805b0808201023j44e6e6bg1e685303d0ebb2cc@mail.gmail.com>
	<b6bb06270808201029l4cadaa40h49cfd887e8cd0e3d@mail.gmail.com>
	<81fd805b0808201034x64cd3f59pd0f84f004868c6b9@mail.gmail.com>
	<b6bb06270808201036x7b9b41a5v32de54d0ab3e3775@mail.gmail.com>
	<81fd805b0808201046y3e661f45ted38573f563d398f@mail.gmail.com>
	<b6bb06270808201048o69751d49j30d532be07705707@mail.gmail.com>
	<81fd805b0808201057v3bd3335wc970a2941ffa554b@mail.gmail.com>
	<81fd805b0808201225k3c73a3e3p8b20ee7db76a7582@mail.gmail.com>
	<20080820204840.GV22846@linux.ucla.edu>
	<81fd805b0808201354s4a32c74el727948c4d5d7a75d@mail.gmail.com>
Message-ID: <20080820211822.GW22846@linux.ucla.edu>

On Thu, Aug 21, 2008 at 05:54:07AM +0900, Scott Lindeneau wrote:
> Guh. Ill figure it out eventually I guess. Which tabs are you talking
> about in particular? All of them?

Yes, just stick with spaces, and it seems the convention is four spaces
per indentation level.


From dank at kegel.com  Wed Aug 20 16:49:48 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 20 Aug 2008 14:49:48 -0700
Subject: AcceptEx patch series notes
Message-ID: <a71bd89a0808201449m2431c051n53ca896026244085@mail.gmail.com>

Hi Scott.  A few notes about your patch series.

There should be no forward references in the patches;
you can't have patch 1 depend on patch 2.

Also, don't send two versions of tests, one for Wine and
one for Windows; the same code has to work in both places.
You can't even use an ifdef, since the windows .exe has
to pass on wine.  You can use a runtime test, perhaps,
to skip some tests on Wine, but that's about it.


From alex at thehandofagony.com  Wed Aug 20 17:33:37 2008
From: alex at thehandofagony.com (Alexander Nicolaysen =?utf-8?q?S=C3=B8rnes?=)
Date: Thu, 21 Aug 2008 00:33:37 +0200
Subject: Alexander Nicolaysen
	=?utf-8?q?S=C3=B8rnes_=3A_regedit=3A_Convert_printing=26help_to?=
	=?utf-8?q?_unicode=2E?=
In-Reply-To: <48AC5DE4.70504@orange.fr>
References: <E1KVnVP-0007fD-Qr@wine.codeweavers.com>
	<200808201955.24474.alex@thehandofagony.com>
	<48AC5DE4.70504@orange.fr>
Message-ID: <200808210033.37668.alex@thehandofagony.com>

P? Onsdag 20 august 2008 , 20:09:40 skrev du:
> Alexander Nicolaysen S?rnes a ?crit :
> > P? Onsdag 20 august 2008 , 19:30:44 skrev Eric Pouech:
> >> Alexandre Julliard a ?crit :
> >>> Module: wine
> >>> Branch: master
> >>> Commit: 5cb8bccf462790338677dac3bfb394df8f4da020
> >>> URL:
> >>> http://source.winehq.org/git/wine.git/?a=commit;h=5cb8bccf462790338677d
> >>>ac 3bfb394df8f4da020
> >>>
> >>> Author: Alexander Nicolaysen S?rnes <alex at thehandofagony.com>
> >>> Date:   Sun Aug 10 12:43:06 2008 +0200
> >>>
> >>> regedit: Convert printing&help to unicode.
> >>>
> >>> ---
> >>>
> >>>  programs/regedit/framewnd.c |   25 +++++++++++++++++--------
> >>>  1 files changed, 17 insertions(+), 8 deletions(-)
> >>>
> >>> @@ -671,8 +671,11 @@ static BOOL _CmdWndProc(HWND hWnd, UINT message,
> >>> WPARAM wParam, LPARAM lParam) case
> >>> ID_REGISTRY_DISCONNECTNETWORKREGISTRY: break;
> >>>      case ID_REGISTRY_PRINT:
> >>> -        PrintRegistryHive(hWnd, _T(""));
> >>> +    {
> >>> +        const WCHAR empty = 0;
> >>> +        PrintRegistryHive(hWnd, empty);
> >>>          break;
> >>> +    }
> >>
> >> this looks very wrong to me
> >
> > Prinitng isn't actually implemented in regedit; I just changed the little
> > bit of code that was there.  Is it wrong to do
> >
> >>> +        const WCHAR empty = 0;
> >>> +        PrintRegistryHive(hWnd, empty);
> >
> > to send an empty string?
> >
> > Thanks for reviewing the changes!
> >
> >
> > Alexander N. S?rnes
>
> the code should be PrintRegistryHive(hWnd, &empty);
> A+


Oh, I feel so stupid!  That was what I intended to do.  Thanks again for 
noticing


From thestig at google.com  Wed Aug 20 19:36:56 2008
From: thestig at google.com (Lei Zhang)
Date: Wed, 20 Aug 2008 17:36:56 -0700
Subject: [PATCH] comctl32: Set listview focus on WM_LBUTTONUP instead of
	WM_LBUTTONDOWN.
In-Reply-To: <558b2f5c0808181608k4b9d5982r99b4fe5281f3e247@mail.gmail.com>
References: <558b2f5c0808181608k4b9d5982r99b4fe5281f3e247@mail.gmail.com>
Message-ID: <558b2f5c0808201736t2a72f0c3v6c77f666929b4aa6@mail.gmail.com>

On Mon, Aug 18, 2008 at 4:08 PM, Lei Zhang <thestig at google.com> wrote:
> Hi,
>
> This should fix bug 14908.
>

Any problems with this patch?


From dmitry at codeweavers.com  Wed Aug 20 20:04:04 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 21 Aug 2008 10:04:04 +0900
Subject: Running a conformance test on windows before submitting
	towine-patches.
References: <81fd805b0808201023j44e6e6bg1e685303d0ebb2cc@mail.gmail.com>
Message-ID: <480E1CB0A6AA48908066D3DEC21A96EB@DMITRY>

"Scott Lindeneau" <slindeneau at gmail.com> wrote:

> I would like to submit the following AcceptEx conformance test to
> wine-patches, but I don't have a windows box (and i haven't got qemu
> setup(correctly) yet). Would someone run this and let me know how/if
> it failes (or succeeds... it should succeed).

Please set the tab size in your editor to 8, and reformat your code.

-- 
Dmitry.


From dmitry at codeweavers.com  Wed Aug 20 22:34:37 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Thu, 21 Aug 2008 12:34:37 +0900
Subject: user32: fix error setting in FindWindow
References: <638770.48340.qm@web23207.mail.ird.yahoo.com>
Message-ID: <63EDC3B568CF477286B67D7850421C62@DMITRY>

"Louis. Lenders" <xerox_xerox2000 at yahoo.co.uk> wrote:

> @@ -1613,6 +1613,7 @@ HWND WINAPI FindWindowExW( HWND parent, HWND child, LPCWSTR className, LPCWSTR t
>   done:
>      HeapFree( GetProcessHeap(), 0, list );
>      HeapFree( GetProcessHeap(), 0, buffer );
> +    if(!retvalue) SetLastError(ERROR_FILE_NOT_FOUND);
>      return retvalue;
>  }

The prevailing indentation style in this file is to have a space after 'if',
i.e. use 'if (!retvalue)'.
 
>  HWND WINAPI FindWindowA( LPCSTR className, LPCSTR title )
>  {
>      HWND ret = FindWindowExA( 0, 0, className, title );
> -    if (!ret) SetLastError (ERROR_CANNOT_FIND_WND_CLASS);
>      return ret;
>  }

Changing the whole block to just

return FindWindowExA( 0, 0, className, title );

would be more logical.

-- 
Dmitry.


From msclrhd at googlemail.com  Tue Aug 19 06:36:08 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Tue, 19 Aug 2008 12:36:08 +0100
Subject: New kernel development guide might be good model for Wine...
In-Reply-To: <4F7EE012-3767-4BA2-AED0-38A8113811F9@jump-ing.de>
References: <a71bd89a0808152010m137f8099hb70ee14bdb89ddfe@mail.gmail.com>
	<BAY118-W1088BA11A95A63403AE189946E0@phx.gbl>
	<22821af30808172157j30125f01ge872b011596adcd5@mail.gmail.com>
	<2FC252EA-44B7-49D7-AA2A-A40214BA695E@jump-ing.de>
	<48A9400D.9070705@redhat.com>
	<09A19565-686D-4168-99E1-7E919D49D152@jump-ing.de>
	<22821af30808181053g1ce2314fn5b3a8e61e39dc7b8@mail.gmail.com>
	<0120E841-C3E7-466D-8E2E-76F9D97F33EB@jump-ing.de>
	<22821af30808181541q66be987cxeade6b9a8b673cfb@mail.gmail.com>
	<4F7EE012-3767-4BA2-AED0-38A8113811F9@jump-ing.de>
Message-ID: <3f4fd2640808190436q39a30e9l436581a5cac6656@mail.gmail.com>

2008/8/19 Markus Hitter <mah at jump-ing.de>:
>
> Am 19.08.2008 um 00:41 schrieb James Hawkins:
>
>> when the patch doesn't get committed, you should look back at it
>> and really think
>> outside the box about what could possibly be wrong with the patch.
>
> Essentially, you ask to change code on unfounded guesses (I did the
> best to my knowledge in the first place already) and to commit into a
> black hole until some unknown, not communicating person is satisfied
> to her/his taste.

I agree to a point. There are certain things you can check (e.g. do
the tests pass on Wine) that usually block a patch.

Other things it can be difficult to spot. Especially if you are not
used to the coding conventions, or Windows idiosyncracies.

>> You assume it wasn't noticed.  I can guarantee that's not the case.
>
> So, what did the reviewing person then? Sitting there smiling "Heh,
> look, he could have done better, but, ha-ha, I won't tell him"? I
> hope this wasn't the case.

This is why it is important to keep track of the patches you have sent.

>> Give Alexandre a bit more credit than that.
>
> I'm fine with Alexandre personally but not so sure about Wine's
> current patch receiving process.
>
> That said I'm perfectly fine if Wine people consider this process as
> being effective. There's no law enforcing Wine to accept what I've sent.

I think Alexandre does a fantastic job.

>> [...] or ask the community or Alexandre what the problem is.
>
> Correct. Communication is a plus.

Which is why it is important to ask why your patches have not been
committed. Whenever I have asked, I have got a good response.

I have found that this is easier to do on the IRC, but like with
everything it requires time and commitment.

- Reece


From hongboni at njstar.com  Tue Aug 19 19:30:52 2008
From: hongboni at njstar.com (Hongbo Ni)
Date: Wed, 20 Aug 2008 10:30:52 +1000
Subject: [NJS#80611] re: msvcmaker: fix project file generation
	under MinGW32
In-Reply-To: <a71bd89a0808191025v38eb90f1r4897ea779bbf8f48@mail.gmail.co
 m>
References: <a71bd89a0808191025v38eb90f1r4897ea779bbf8f48@mail.gmail.com>
Message-ID: <1219192244101532287@njxvm1.njstar.com>

At 03:25 AM 2008-08-20, Dan Kegel wrote:
>Hongbo, it looks like your patch failed to apply because you did not
>preserve whitespace exactly.  Your patch uses all spaces
>for the context, but the file contains tabs, so it does not match,
>and patch fails.

Thank you Dan, and thanks to Patchwatcher. 
I will fix it and resubmit.

Hongbo Ni


  Hongbo Ni <hongbo at njstar.com>
+----------------------------------------------------------------+
* NJStar Software Corp., P.O. Box 40, Epping NSW 2121, Australia.
* Tel:  +61-2-9869-1088  WebSite: http://www.njstar.com 
* Fax:  +61-2-9869-1099  Email:   http://njstar.com/contact/  
* eFax: +1-253-595-4788
+----------------------------------------------------------------+



From HongboNi at njstar.com  Wed Aug 20 20:20:48 2008
From: HongboNi at njstar.com (Hongbo Ni)
Date: Thu, 21 Aug 2008 11:20:48 +1000
Subject: user32: Fix hook_proc DLL loading using LoadLibraryExW instead
	of LoadLibraryW
Message-ID: <mailman.161.1219300887.4613.wine-devel@winehq.org>


>
>This patch fixes Bug 14784.
>
>As requested by Dmitry Timoshkov, I have created a standalone test case 
>for DLL injection via SetWindowHookEx. It has been attached in Bug 14784 
>with MSVC source code and compiled exe and dll.
>
>With LoadLibraryExW(module, NULL, LOAD_WITH_ALTERED_SEARCH_PATH), the 
>Wine will search any imported DLL first in the same directory as module, 
>then in the standard search path.
>
>LoadLibraryW(module) searches imported DLL(s) in the directory of current 
>process, which may not be the same process where the module is first 
>loaded. That is why that LoadLibraryW(module) fails to hook to another 
>process if the DLL containing the hook_proc links to another DLL(s) in 
>the same directory.
>
>---
> dlls/user32/hook.c |    2 +-
> 1 files changed, 1 insertions(+), 1 deletions(-)
>
>diff --git a/dlls/user32/hook.c b/dlls/user32/hook.c
>index 4354e05..638a302 100644
>--- a/dlls/user32/hook.c
>+++ b/dlls/user32/hook.c
>@@ -322,7 +322,7 @@ void *get_hook_proc( void *proc, const WCHAR *module )
>     {
>         TRACE( "loading %s\n", debugstr_w(module) );
>         /* FIXME: the library will never be freed */
>-        if (!(mod = LoadLibraryW(module))) return NULL;
>+        if (!(mod = LoadLibraryExW(module, NULL, LOAD_WITH_ALTERED_SEARCH_PATH))) return NULL;
>     }
>     return (char *)mod + (ULONG_PTR)proc;
> }
>-- 
Is there any problems with this patch?



  Hongbo Ni <hongbo at njstar.com>
+----------------------------------------------------------------+
* NJStar Software Corp., P.O. Box 40, Epping NSW 2121, Australia.
* Tel:  +61-2-9869-1088  WebSite: http://www.njstar.com 
* Fax:  +61-2-9869-1099  Email:   http://njstar.com/contact/  
* eFax: +1-253-595-4788
+----------------------------------------------------------------+



From hans at codeweavers.com  Thu Aug 21 02:36:33 2008
From: hans at codeweavers.com (Hans Leidekker)
Date: Thu, 21 Aug 2008 09:36:33 +0200
Subject: Unbreak dlls/winhttp  on FreeBSD (and likely other BSDs/Darwin)
In-Reply-To: <alpine.LSU.1.99.0808202032580.3773@acrux.dbai.tuwien.ac.at>
References: <alpine.LSU.1.99.0808202032580.3773@acrux.dbai.tuwien.ac.at>
Message-ID: <200808210936.34225.hans@codeweavers.com>

On Wednesday 20 August 2008 20:34:43 Gerald Pfeifer wrote:

> This minor change on top of Hans' contributions in the recent days
> unbreaks the build on FreeBSD (and likely other BSDs and possibly
> Darwin/MacOS).

Thanks. I didn't want to copy all of the ifdef blocks from wininet
because I can't verify which ones are actually needed. So I'm counting
on people like you to fix this up, and I'm sure I'll need your help
again :)

 -Hans



From stefan at codeweavers.com  Thu Aug 21 09:41:29 2008
From: stefan at codeweavers.com (=?UTF-8?Q?Stefan_D=C3=B6singer?=)
Date: Thu, 21 Aug 2008 09:41:29 -0500
Subject: Spore patch to fix UI and Part descriptions
In-Reply-To: <b594ca9d0808202349l5e00ebeck8c9ceb7aec4a623@mail.gmail.com>
References: <b594ca9d0808202349l5e00ebeck8c9ceb7aec4a623@mail.gmail.com>
Message-ID: <007f01c9039b$fffc0350$fff409f0$@com>

These changes may be correct, but they need a test. Take a look at dlls/d3d9/tests/device.c to see how the other tests look. I guess the changes are likely to be correct, but they have to be tested




From hverbeet at gmail.com  Thu Aug 21 09:51:01 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Thu, 21 Aug 2008 16:51:01 +0200
Subject: Spore patch to fix UI and Part descriptions
In-Reply-To: <007f01c9039b$fffc0350$fff409f0$@com>
References: <b594ca9d0808202349l5e00ebeck8c9ceb7aec4a623@mail.gmail.com>
	<007f01c9039b$fffc0350$fff409f0$@com>
Message-ID: <d658b69e0808210751v4e618be9lbc027987c5d67233@mail.gmail.com>

2008/8/21 Stefan D?singer <stefan at codeweavers.com>:
> These changes may be correct, but they need a test. Take a look at dlls/d3d9/tests/device.c to see how the other tests look. I guess the changes are likely to be correct, but they have to be tested
>
Not in its current form, there's a C++ comment and trailing spaces in
there, and the change in SetScissorRect() probably should test if the
rectangle is empty. Also, if it tests for empty rectangles, it should
probably also test for rectangles that are (partially) outside the
screen, etc.


From julliard at winehq.org  Thu Aug 21 10:26:24 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 21 Aug 2008 17:26:24 +0200
Subject: [PATCH] mstask: Task PersistFile AddRef, QueryInterface,
	and Release.
In-Reply-To: <20080821014300.GA20555@teop> (Roy Shea's message of "Wed, 20 Aug
	2008 18:43:00 -0700")
References: <20080821014300.GA20555@teop>
Message-ID: <873aky4cf3.fsf@wine.dyndns.org>

Roy Shea <royshea at gmail.com> writes:

> +    TaskImpl *This = (TaskImpl*)
> +        ((char*)(iface) - offsetof(TaskImpl, persistVtbl));

Please define an inline function for this like many other interfaces do.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Thu Aug 21 10:25:33 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 21 Aug 2008 17:25:33 +0200
Subject: dpnet: Add stubbed DirectPlay8Peer interface (try2)
In-Reply-To: <200808201522.40775.alex@thehandofagony.com> ("Alexander
	Nicolaysen =?utf-8?Q?S=C3=B8rnes=22's?= message of "Wed, 20 Aug 2008
	15:22:40 +0200")
References: <200808201522.40775.alex@thehandofagony.com>
Message-ID: <877iaa4cgi.fsf@wine.dyndns.org>

Alexander Nicolaysen S?rnes <alex at thehandofagony.com> writes:

>  HRESULT DPNET_CreateDirectPlay8Peer(LPCLASSFACTORY iface, LPUNKNOWN punkOuter, REFIID riid, LPVOID *ppobj) {
> -  WARN("(%p, %s, %p): stub.\n", punkOuter, debugstr_guid(riid), ppobj);
> -  return CLASS_E_CLASSNOTAVAILABLE;
> +    IDirectPlay8PeerImpl* Client;
> +
> +    Client = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(IDirectPlay8PeerImpl));
> +
> +    if(Client == NULL)
> +    {
> +        *ppobj = NULL;
> +        WARN("Not enough memory\n");
> +        return E_OUTOFMEMORY;
> +    }
> +
> +    Client->lpVtbl = &DirectPlay8Peer_Vtbl;
> +    return IDirectPlay8PeerImpl_QueryInterface((PDIRECTPLAY8PEER)Client, riid, ppobj);

You are leaking the object on error.

-- 
Alexandre Julliard
julliard at winehq.org


From slindeneau at gmail.com  Thu Aug 21 10:35:21 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Fri, 22 Aug 2008 00:35:21 +0900
Subject: WSAIoctl question.
Message-ID: <81fd805b0808210835l60070ed0u32e0d99a64d504b3@mail.gmail.com>

I noticed a patch that was submitted by John Griffiths on the 13th of
July that forwards functions by mwsock.c using the following code:
(commit: 2da98052d90591474c65bed853ca75e1da714823)
+static void get_fn(SOCKET s, GUID* guid, FARPROC* fn)
+{
+    FARPROC func;
+    DWORD len;
+    if (!WSAIoctl(s, SIO_GET_EXTENSION_FUNCTION_POINTER, guid, sizeof(*guid),
+                  &func, sizeof(func), &len, NULL, NULL))
+        *fn = func;
+}

But wine's WSAIoctl does not support the
SIO_GET_EXTENSION_FUNCTION_POINTER. I was wondering how this works and
what its for? Is it for using native libraries?


From dank at kegel.com  Thu Aug 21 11:07:39 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 21 Aug 2008 09:07:39 -0700
Subject: LinuxJournal poll: What do you use to run Windows applications on
	your Linux desktop?
Message-ID: <a71bd89a0808210907v264179d6i26d3a3291ba95b9d@mail.gmail.com>

Don't all go out and vote - we don't want to skew the results - but check out

http://www.linuxjournal.com/node/1007221/results

What do you use to run Windows applications on your Linux desktop?
August 19th, 2008 by LJ Staff
Cedega 1% (8 votes)
Crossover 4% (38 votes)
VirtualBox 22% (195 votes)
VMWare 14% (129 votes)
Wine 37% (333 votes)
Other 2% (21 votes)
I don't need or want to run Windows apps 19% (167 votes)

Wine comes out on top, but not yet majority.
- Dan


From meissner at suse.de  Thu Aug 21 11:23:47 2008
From: meissner at suse.de (Marcus Meissner)
Date: Thu, 21 Aug 2008 18:23:47 +0200
Subject: Spore patch to fix UI and Part descriptions
In-Reply-To: <b594ca9d0808202349l5e00ebeck8c9ceb7aec4a623@mail.gmail.com>
References: <b594ca9d0808202349l5e00ebeck8c9ceb7aec4a623@mail.gmail.com>
Message-ID: <20080821162347.GA10258@suse.de>

> 
> diff --git a/dlls/d3d9/device.c b/dlls/d3d9/device.c
> index ddeaca3..dfbf818 100644
> --- a/dlls/d3d9/device.c
> +++ b/dlls/d3d9/device.c
> @@ -746,7 +746,8 @@ static HRESULT  WINAPI  IDirect3DDevice9Impl_GetDepthStencilSurface(LPDIRECT3DDE
>          }
>      } else {
>          WARN("Call to IWineD3DDevice_GetDepthStencilSurface failed\n");
> -        *ppZStencilSurface = NULL;
> +        //*ppZStencilSurface = NULL;
> +        return D3DERR_INVALIDCALL;
>      }
>      LeaveCriticalSection(&d3d9_cs);

You might cause a locking problem here, returning with d3d9_cs held.

Ciao, Marcus


From truiken at gmail.com  Thu Aug 21 13:07:58 2008
From: truiken at gmail.com (James Hawkins)
Date: Thu, 21 Aug 2008 13:07:58 -0500
Subject: [1/6][PATCH]AcceptEx Conformance Test
In-Reply-To: <81fd805b0808211059r4d469febp951f44c11c86536d@mail.gmail.com>
References: <81fd805b0808211059r4d469febp951f44c11c86536d@mail.gmail.com>
Message-ID: <22821af30808211107h26d8e11drcff440d1157932f8@mail.gmail.com>

On Thu, Aug 21, 2008 at 12:59 PM, Scott Lindeneau <slindeneau at gmail.com> wrote:
> Simple overlapped server based on AcceptEx added to the test list
> using simple clients.
>

Tests must always 'pass'.  That is, the individual ok tests must all
pass, or if they fail you must wrap the failing tests in todo_wine
blocks.  Since your test was sent before the fixes and there are no
todo_wine's, I'm assuming some of these tests fail.

-- 
James Hawkins


From xerox_xerox2000 at yahoo.co.uk  Thu Aug 21 13:09:07 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis. Lenders)
Date: Thu, 21 Aug 2008 18:09:07 +0000 (GMT)
Subject: patches
Message-ID: <569853.32043.qm@web23206.mail.ird.yahoo.com>

Hi, apparently none of my patches is making it into git, nor did i recieve any response from Alexandre about what's wrong with them. I guess i'm kind of "blacklisted" because of my dxdiag patch from a few months ago, where i took some code from a directX tutorial ( i thought tutorials were free code, well they aren't apparently).

Anyway, there are i think some patches  that contain useful things to fix some bugs, so if anyone would like to pick them up, feel free (espesially the fix for the google lively download)


(@Alexandre: this is not a request from me to explain why the patches have been rejected.
 I don't want to be pissed off again by you like in your last mail; I may be a crappy coder, but i've been helping wine-users for a few years now, so i think i deserved a little more respect , than was reflected by that mail)


Send instant messages to your online friends http://uk.messenger.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080821/ab3186e6/attachment.htm 

From truiken at gmail.com  Thu Aug 21 13:16:50 2008
From: truiken at gmail.com (James Hawkins)
Date: Thu, 21 Aug 2008 13:16:50 -0500
Subject: activeds: add stub for ADsGetLastError
In-Reply-To: <234534.37143.qm@web23202.mail.ird.yahoo.com>
References: <234534.37143.qm@web23202.mail.ird.yahoo.com>
Message-ID: <22821af30808211116m2209a92cta5b876205188e008@mail.gmail.com>

On Tue, Aug 19, 2008 at 4:14 PM, Louis. Lenders
<xerox_xerox2000 at yahoo.co.uk> wrote:
> Fixes a crash in Dameware utilities
>

@@ -6,7 +6,7 @@
 8 stub ADsBuildVarArrayInt
 9 stdcall ADsOpenObject(wstr wstr wstr long ptr ptr)
 12 stub ADsSetLastError
-13 stub ADsGetLastError
+13 stdcall ADsGetLastError(ptr wstr long wstr long)


Both of those wstr parameters are out pointers so they should be ptr, not wstr.

 /*****************************************************
+ * ADsGetLastError    [ACTIVEDS.13]
+ */
+HRESULT WINAPI ADsGetLastError(LPDWORD pError, LPWSTR buffer, DWORD
buflen, LPWSTR bufname, DWORD bufnamelen)
+{
+    FIXME("(%p,%p,%d,%p,%d)stub\n", pError, buffer, buflen, bufname,
bufnamelen);
+    return E_POINTER;
+}

Returning E_POINTER seems pretty wrong.

-- 
James Hawkins


From julliard at winehq.org  Thu Aug 21 13:17:36 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 21 Aug 2008 20:17:36 +0200
Subject: [2/6][PATCH]Fixes an Async bug.
In-Reply-To: <81fd805b0808211059x5accbdc8n4091fb0fd18f2dff@mail.gmail.com>
	(Scott Lindeneau's message of "Fri, 22 Aug 2008 02:59:29 +0900")
References: <81fd805b0808211059x5accbdc8n4091fb0fd18f2dff@mail.gmail.com>
Message-ID: <87r68i2pxb.fsf@wine.dyndns.org>

"Scott Lindeneau" <slindeneau at gmail.com> writes:

> Fixes a bug in the async implementation. When checking for waiting
>  elements on a queue you need to check to see if ANY element is waiting,
>  not just the first element. When waking elements up you should ALERT an
>  element that is not already alerted. All other status messages should be
>  set. (This compensates for poll events that trigger other poll events
>  before garbage collection occurs and removes alerted elements from the
>  queues).

This is wrong, it will lead to busy waiting. We very much want the first
async to have been handled before we wake up for the next one.

-- 
Alexandre Julliard
julliard at winehq.org


From truiken at gmail.com  Thu Aug 21 13:20:45 2008
From: truiken at gmail.com (James Hawkins)
Date: Thu, 21 Aug 2008 13:20:45 -0500
Subject: shobjidl.idl: add Taskbarlist interface defenitions
In-Reply-To: <695366.72954.qm@web23202.mail.ird.yahoo.com>
References: <695366.72954.qm@web23202.mail.ird.yahoo.com>
Message-ID: <22821af30808211120o4b41b751sec055b69d3d98470@mail.gmail.com>

On Wed, Aug 20, 2008 at 3:24 AM, Louis. Lenders
<xerox_xerox2000 at yahoo.co.uk> wrote:
> Hi , this interface is needed to get governor if poker running
> (http://bugs.winehq.org/show_bug.cgi?id=14139). these first 3 patches is
> only preliminary stuff, the rest of the stuff i'll send later on.
>

The "I'll send the rest later" is a warning light.  You should further
develop this and send it all later so we know this is actually going
somewhere.

-- 
James Hawkins


From truiken at gmail.com  Thu Aug 21 13:26:41 2008
From: truiken at gmail.com (James Hawkins)
Date: Thu, 21 Aug 2008 13:26:41 -0500
Subject: kernel32: Tiny improvement to the GetVolumePathNameW stub (try 4)
In-Reply-To: <940020.82477.qm@web23207.mail.ird.yahoo.com>
References: <940020.82477.qm@web23207.mail.ird.yahoo.com>
Message-ID: <22821af30808211126o2e01101eu1a2f1d111ed8cc62@mail.gmail.com>

On Mon, Aug 18, 2008 at 4:18 AM, Louis. Lenders
<xerox_xerox2000 at yahoo.co.uk> wrote:
> (the return TRUE statement got lost from last patch, thanks Michael for
> noticing)
>
>
> Hi,  this fixes Adobe Lightroom 2.0 start up bug, mentioned in
> http://bugs.winehq.org/show_bug.cgi?id=8224#c4
>
> as long wine doesn't handle with volume mount points, it's probably safe to
> satisfy most apps.
>
> (A simple google for
> "fixme:volume:GetVolumePathNameW"
> revealed only about 3 apps , and "fixme:volume:GetVolumePathNameA" revealed
> zero hits, so for now the use of this api seems not really wide-spread, and
> no need to touch GetVolumePathNameA i guess)
>

+    /* As long as we don't handle volumemountpoints, and filename is
something like "X:\\blabla\\bla", it's probably safe to return "X:\"
for
+      now to keep some applications happy */
+

Please get rid of this comment.

+    if(strlenW(filename)>=3 && filename[1] == ':' && filename[2] ==
'\\' && buflen >3)
+    {
+         lstrcpynW(volumepathname,filename,4);
+         return TRUE;
+    }

You've handled *a* successful case, but what about the error case?
Also, you're copying 4 bytes of filename into volumepathname.  I don't
think you understand what lstrcpyn does.  Imagine this case:

volumepathname = "aaaaaaaa"
buflen = 8
filename = "C:\\file"

After the call to lstrcpyn:

volumepathname = "C:\\faaaa"

-- 
James Hawkins


From dank at kegel.com  Thu Aug 21 13:49:32 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 21 Aug 2008 11:49:32 -0700
Subject: [6/6][PATCH]Updates WSAIoctl in ws2_32 to return AcceptEx and
	GetAcceptExSockaddrs
Message-ID: <a71bd89a0808211149y6b47a51en9453ff91a054ff9b@mail.gmail.com>

slindeneau at gmail.com wrote:
> This patch will allow the patch [1/6] to successfully complete on wine
> and windows. Prior to this patch the conformance tests submitted in
> [1/6] of this series will fail on wine.

It's exciting to see such progress on AcceptEx!

But the wine project likes to have all tests passing after
each patch in a series.
If patch 1/6 adds tests that fail on Wine, they need
to be marked with todo_wine.  If patch 6/6 fixes
the problem in wine that caused those tests to fail,
it should also remove the todo_wine from the test.

Following this rule will help make sure your patches don't turn red on
http://kegel.com/wine/patchwatcher/results/


From xerox_xerox2000 at yahoo.co.uk  Thu Aug 21 14:13:50 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis. Lenders)
Date: Thu, 21 Aug 2008 19:13:50 +0000 (GMT)
Subject: activeds: add stub for ADsGetLastError
Message-ID: <576731.50377.qm@web23207.mail.ird.yahoo.com>

Thanks for reviewing the patch James
@@ -6,7 +6,7 @@
 8 stub ADsBuildVarArrayInt
 9 stdcall ADsOpenObject(wstr wstr wstr long ptr ptr)
 12 stub ADsSetLastError
-13 stub ADsGetLastError
+13 stdcall ADsGetLastError(ptr wstr long wstr long)


>Both of those wstr parameters are out pointers so they should be ptr, not wstr.

Didn't know that, so that has to be changed for sure

 /*****************************************************
+ * ADsGetLastError    [ACTIVEDS.13]
+ */
+HRESULT WINAPI ADsGetLastError(LPDWORD pError, LPWSTR buffer, DWORD
buflen, LPWSTR bufname, DWORD bufnamelen)
+{
+    FIXME("(%p,%p,%d,%p,%d)stub\n", pError, buffer, buflen, bufname,
bufnamelen);
+    return E_POINTER;
+}

>Returning E_POINTER seems pretty wrong.

In the documentation on http://msdn.microsoft.com/en-us/library/aa772183(VS.85).aspx
it is listed as one of the possible return values. Of course one could also return E_NOTIMPL or E_FAIL etc, but for a stub this seemed like a good choice to me as well, the application (Dameware) doesn't seem to bother what is returned, it starts up just fine

Send instant messages to your online friends http://uk.messenger.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080821/7282c26d/attachment.htm 

From truiken at gmail.com  Thu Aug 21 14:18:21 2008
From: truiken at gmail.com (James Hawkins)
Date: Thu, 21 Aug 2008 14:18:21 -0500
Subject: activeds: add stub for ADsGetLastError
In-Reply-To: <576731.50377.qm@web23207.mail.ird.yahoo.com>
References: <576731.50377.qm@web23207.mail.ird.yahoo.com>
Message-ID: <22821af30808211218j591457bej96f30615808edb37@mail.gmail.com>

On Thu, Aug 21, 2008 at 2:13 PM, Louis. Lenders
<xerox_xerox2000 at yahoo.co.uk> wrote:
> Thanks for reviewing the patch James
> @@ -6,7 +6,7 @@
>  8 stub ADsBuildVarArrayInt
>  9 stdcall ADsOpenObject(wstr wstr wstr long ptr ptr)
>  12 stub ADsSetLastError
> -13 stub ADsGetLastError
> +13 stdcall ADsGetLastError(ptr wstr long wstr long)
>
>
>>Both of those wstr parameters are out pointers so they should be ptr, not
>> wstr.
>
> Didn't know that, so that has to be changed for sure
>
>  /*****************************************************
> + * ADsGetLastError    [ACTIVEDS.13]
> + */
> +HRESULT WINAPI ADsGetLastError(LPDWORD pError, LPWSTR buffer, DWORD
> buflen, LPWSTR bufname, DWORD bufnamelen)
> +{
> +    FIXME("(%p,%p,%d,%p,%d)stub\n", pError, buffer, buflen, bufname,
> bufnamelen);
> +    return E_POINTER;
> +}
>
>>Returning E_POINTER
>  seems pretty wrong.
>
> In the documentation on
> http://msdn.microsoft.com/en-us/library/aa772183(VS.85).aspx
> it is listed as one of the possible return values. Of course one could also
> return E_NOTIMPL or E_FAIL etc, but for a stub this seemed like a good
> choice to me as well, the application (Dameware) doesn't seem to bother what
> is returned, it starts up just fine
>

Sure it's one of several possible return values, but not necessarily
appropriate for a stub function.  Both E_NOTIMPL and E_FAIL are better
choices.

-- 
James Hawkins


From xerox_xerox2000 at yahoo.co.uk  Thu Aug 21 14:26:38 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis. Lenders)
Date: Thu, 21 Aug 2008 19:26:38 +0000 (GMT)
Subject: shobjidl.idl: add Taskbarlist interface defenitions
Message-ID: <341299.13199.qm@web23202.mail.ird.yahoo.com>

>The "I'll send the rest later" is a warning light.  You should further develop this and send it all later so >we know this is actually going somewhere.

The whole patch, that lets Governor of Poker start i have attached to the bug http://bugs.winehq.org/attachment.cgi?id=15297
a few weeks ago. As i said before , it's enough to stub out interface calls like in that patch to let the game start
I discovered later I put the headers in the wrong (seperate ) header file, so i thought first to send in the definitions in the correct header.

I thought later on send the rest in small pieces

thanks again for the review


Send instant messages to your online friends http://uk.messenger.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080821/d09d9903/attachment.htm 

From xerox_xerox2000 at yahoo.co.uk  Thu Aug 21 14:46:59 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis. Lenders)
Date: Thu, 21 Aug 2008 19:46:59 +0000 (GMT)
Subject: kernel32: Tiny improvement to the GetVolumePathNameW stub (try 4)
Message-ID: <492820.76139.qm@web23203.mail.ird.yahoo.com>



>You've handled *a* successful case, but what about the error case?

As i said already in the mail with the patch, it might be *a* case, but this is the case 
that most apps will follow as far as i can see. Futhermore, when apps are really crashing 
into the other cases, it can be added later on i.m.o. For now they will just fall back to the current 
"implementation", returning "not implmented" then, so there will be no differnce with current behaviour.


+    {
+         lstrcpynW(volumepathname,filename,4);
+         return TRUE;
+    }


>Also, you're copying 4 bytes of filename into volumepathname.  I don't
>think you understand what lstrcpyn does.  Imagine this case:

volumepathname = "aaaaaaaa"
buflen = 8
filename = "C:\\file"

After the call to lstrcpyn:

volumepathname = "C:\\faaaa"



MSDN says volumepathname was a pointer to an "out" - string, so how would it become someting
like "aaaaaa", or am i overseeing something?


Send instant messages to your online friends http://uk.messenger.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080821/a969c2bd/attachment-0001.htm 

From truiken at gmail.com  Thu Aug 21 14:55:07 2008
From: truiken at gmail.com (James Hawkins)
Date: Thu, 21 Aug 2008 14:55:07 -0500
Subject: kernel32: Tiny improvement to the GetVolumePathNameW stub (try 4)
In-Reply-To: <492820.76139.qm@web23203.mail.ird.yahoo.com>
References: <492820.76139.qm@web23203.mail.ird.yahoo.com>
Message-ID: <22821af30808211255w696071a7wa77137b445ce0497@mail.gmail.com>

On Thu, Aug 21, 2008 at 2:46 PM, Louis. Lenders
<xerox_xerox2000 at yahoo.co.uk> wrote:
>
>
>>You've handled *a* successful case, but what about the error case?
>
> As i said already in the mail with the patch, it might be *a* case, but this
> is the case
> that most apps will follow as far as i can see. Futhermore, when apps are
> really crashing
> into the other cases, it can be added later on i.m.o. For now they will just
> fall back to the current
> "implementation", returning "not implmented" then, so there will be no
> differnce with current behaviour.
>

That whole paragraphs reads "hack now, fix later", which is definitely
not acceptable.

>
> +    {
> +         lstrcpynW(volumepathname,filename,4);
> +         return TRUE;
> +    }
>
>
>>Also, you're copying 4 bytes of filename into volumepathname.  I don't
>>think you understand what lstrcpyn does.  Imagine this case:
>
> volumepathname = "aaaaaaaa"
> buflen =
>  8
> filename = "C:\\file"
>
> After the call to lstrcpyn:
>
> volumepathname = "C:\\faaaa"
>
>
>
> MSDN says volumepathname was a pointer to an "out" - string, so how would it
> become someting
> like "aaaaaa", or am i overseeing something?
>

Yes you are overseeing something.  I think it would be a good idea if
you read up a bit more on C in your spare time.  I get the feeling you
don't quite have a grasp on the intricacies of the language,
particularly pointers and strings.

-- 
James Hawkins


From slindeneau at gmail.com  Thu Aug 21 14:55:20 2008
From: slindeneau at gmail.com (Scott Lindeneau)
Date: Fri, 22 Aug 2008 04:55:20 +0900
Subject: [6/6][PATCH]Updates WSAIoctl in ws2_32 to return AcceptEx and
	GetAcceptExSockaddrs
In-Reply-To: <a71bd89a0808211149y6b47a51en9453ff91a054ff9b@mail.gmail.com>
References: <a71bd89a0808211149y6b47a51en9453ff91a054ff9b@mail.gmail.com>
Message-ID: <81fd805b0808211255g285d9ce6hfe0cdb020b5ec826@mail.gmail.com>

Thanks. But Julliard has pointed out that my fix in patch [2/6] is
wrong, and it is. It works, but not for the right reason. I didn't
(and still don't) understand how everything in wineserver works
together very well. Without the patch [2/6] the conformance tests will
fail due to a thread race condition (which works by way of allegory
'by skipping the lock'. there isn't really a lock, but thats the
idea). In 'real life' situations the thread race condition is rare,
which is why the previous code 'works' for bug 9787.

> It's exciting to see such progress on AcceptEx!
>
> But the wine project likes to have all tests passing after
> each patch in a series.
> If patch 1/6 adds tests that fail on Wine, they need
> to be marked with todo_wine.  If patch 6/6 fixes
> the problem in wine that caused those tests to fail,
> it should also remove the todo_wine from the test.
>
> Following this rule will help make sure your patches don't turn red on
> http://kegel.com/wine/patchwatcher/results/
>


From xerox_xerox2000 at yahoo.co.uk  Thu Aug 21 15:59:55 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis. Lenders)
Date: Thu, 21 Aug 2008 20:59:55 +0000 (GMT)
Subject: kernel32: Tiny improvement to the GetVolumePathNameW stub (try 4)
Message-ID: <54640.47585.qm@web23206.mail.ird.yahoo.com>





----- Original Message ----
From: James Hawkins <truiken at gmail.com>
To: Louis. Lenders <xerox_xerox2000 at yahoo.co.uk>
Cc: wine-devel at winehq.org
Sent: Thursday, 21 August, 2008 3:55:07 PM
Subject: Re: kernel32: Tiny improvement to the GetVolumePathNameW stub (try 4)



>That whole paragraphs reads "hack now, fix later", which is definitely
>not acceptable.

Well, I would call it a "semi-stub", there's more of them scattered all over the wine-source. But  if opinions are it's too hackish, that's fine with me, I was only trying to help a user to get an app running 

>
> +    {
> +         lstrcpynW(volumepathname,filename,4);
> +         return TRUE;
> +    }
>
>
>>Also, you're copying 4 bytes of filename into volumepathname.  I don't
>>think you understand what lstrcpyn does.  Imagine this case:
>
> volumepathname = "aaaaaaaa"
> buflen =
>  8
> filename = "C:\\file"
>
> After the call to lstrcpyn:
>
> volumepathname = "C:\\faaaa"
>
>
>
> MSDN says volumepathname was a pointer to an "out" - string, so how would it
> become someting
> like "aaaaaa", or am i overseeing something?
>

Yes you are overseeing something.  I think it would be a good idea if
you read up a bit more on C in your spare time.  I get the feeling you
don't quite have a grasp on the intricacies of the language,
particularly pointers and strings.

What I meant is, why would an app set volumepathname to "aaaaaa", as it's the pointer where it expects to find the volumepoint, so on windows  this would be filled  by kernel32.dll, not by the app. Maybe you mean this could be the case after a second call to GetVolumePathName? Anyway, this is not the place to discuss a C-language course so I'll reread the docs. Thanks for the comments anyway.


Send instant messages to your online friends http://uk.messenger.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080821/a6c0bf00/attachment.htm 

From truiken at gmail.com  Thu Aug 21 16:12:08 2008
From: truiken at gmail.com (James Hawkins)
Date: Thu, 21 Aug 2008 16:12:08 -0500
Subject: kernel32: Tiny improvement to the GetVolumePathNameW stub (try 4)
In-Reply-To: <54640.47585.qm@web23206.mail.ird.yahoo.com>
References: <54640.47585.qm@web23206.mail.ird.yahoo.com>
Message-ID: <22821af30808211412q79c19485m39a6622f2c8a6b21@mail.gmail.com>

On Thu, Aug 21, 2008 at 3:59 PM, Louis. Lenders
<xerox_xerox2000 at yahoo.co.uk> wrote:
>
>
> ----- Original Message ----
> From: James Hawkins <truiken at gmail.com>
> To: Louis. Lenders <xerox_xerox2000 at yahoo.co.uk>
> Cc: wine-devel at winehq.org
> Sent: Thursday, 21 August, 2008 3:55:07 PM
> Subject: Re: kernel32: Tiny improvement to the GetVolumePathNameW stub (try
> 4)
>
>
>
>>That whole paragraphs reads "hack now, fix later", which is definitely
>>not acceptable.
>
> Well, I would call it a "semi-stub", there's more of them scattered all over
> the wine-source. But  if opinions are it's too hackish, that's fine with me,
> I was only trying to help a user to get an app running
>
>>
>> +    {
>> +        lstrcpynW(volumepathname,filename,4);
>> +        return TRUE;
>> +    }
>>
>>
>>>Also, you're copying 4 bytes of filename into volumepathname.  I don't
>>>think you understand what lstrcpyn does.  Imagine this case:
>>
>> volumepathname = "aaaaaaaa"
>> buflen =
>>  8
>> filename = "C:\\file"
>>
>> After the call to lstrcpyn:
>>
>> volumepathname = "C:\\faaaa"
>>
>>
>>
>> MSDN says volumepathname was a pointer to an "out" - string, so how would
>> it
>> become someting
>> like "aaaaaa", or am i overseeing something?
>>
>
> Yes you are overseeing something.  I think it would be a good idea if
> you read up a bit more on C in your spare time.  I get the feeling you
> don't quite have a grasp on the intricacies of the language,
> particularly pointers and strings.
>
> What I meant is, why would an app set volumepathname to "aaaaaa", as it's
> the pointer where it expects to find the volumepoint, so on windows  this
> would be filled  by kernel32.dll, not by the app. Maybe you mean this could
> be the case after a second call to GetVolumePathName? Anyway, this is not
> the place to discuss a C-language course so I'll reread the docs. Thanks for
> the comments anyway.
>

That's not the point, and you're missing the real problem which was
stated in my first email.  Your call to lstrcpyn is wrong, and I was
just showing you what will go wrong.  In no circumstances will that
call to lstrcpyn turn out correctly, even if the input buffer is
initialized to all zeros.

-- 
James Hawkins


From wine at mkarcher.dialup.fu-berlin.de  Thu Aug 21 16:35:10 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Thu, 21 Aug 2008 23:35:10 +0200
Subject: kernel32: Tiny improvement to the GetVolumePathNameW stub (try 4)
In-Reply-To: <22821af30808211126o2e01101eu1a2f1d111ed8cc62@mail.gmail.com>
References: <940020.82477.qm@web23207.mail.ird.yahoo.com>
	<22821af30808211126o2e01101eu1a2f1d111ed8cc62@mail.gmail.com>
Message-ID: <1219354510.9850.5.camel@hermes2.karcher.local>

Am Donnerstag, den 21.08.2008, 13:26 -0500 schrieb James Hawkins:
> Also, you're copying 4 bytes of filename into volumepathname.  I don't
> think you understand what lstrcpyn does.  Imagine this case:
> 
> volumepathname = "aaaaaaaa"
> buflen = 8
> filename = "C:\\file"
> 
> After the call to lstrcpyn:
> 
> volumepathname = "C:\\faaaa"

No, sorry. This is not a C language issue, like Louis Lenders flamed
you, but a Win32 API issue. Still he is right in this case, because
lstrcpyn is *not* like strncpy. lstrcpyn does, according to MSDN,
perfectly the right thing here. There is even an example on the MSDN
page, stating that
  lstrcpyn(dest,"abcdefghi",4)
puts "abc" into dest.

Regards,
  Michael Karcher



From piotr.caban at gmail.com  Thu Aug 21 16:54:43 2008
From: piotr.caban at gmail.com (Piotr Caban)
Date: Thu, 21 Aug 2008 23:54:43 +0200
Subject: Summer of code evaluations
In-Reply-To: <48AB53C2.2090400@gmail.com>
References: <48AB53C2.2090400@gmail.com>
Message-ID: <200808212354.43628.piotr.caban@gmail.com>

On Wednesday 20 of August 2008 01:14:10 Maarten Lankhorst wrote:
> I would like to request from the mentors to fill in the final evaluation
> form and from the students to give a final write up: What went well? Did
> you meet the goals you set? Did you have fun? Is there anything we can
> do to make wines summer of code better and do you feel like you've
> become part of the wine community?

I think that my Summer of Code worked well. My task was to implement SAX 
reader and fix other bugs from bugzilla. SAX reader is currently complet 
enough for apps that I've tested. I've fixed many bugs from bugzilla. My main 
problem was that I couldn't reproduce many bugs. Also there are many bugs 
that wait for retesting or are not actual.

Regards,
Piotr Caban


From hverbeet at gmail.com  Thu Aug 21 17:00:09 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Fri, 22 Aug 2008 00:00:09 +0200
Subject: wined3d/d3d9: Set the initial scissor rect to the window size
In-Reply-To: <48ADDD0E.2000103@web.de>
References: <48ADDD0E.2000103@web.de>
Message-ID: <d658b69e0808211500h1e5927ebjc2adce73a442d31e@mail.gmail.com>

2008/8/21 Rico Sch?ller <kgbricola at web.de>:
> +    /* Set the scissor rect values */
> +    scissor.left=0;
> +    scissor.right=ThisDevice->ddraw_width;
> +    scissor.top=0;
> +    scissor.bottom=ThisDevice->ddraw_height;
> +    IWineD3DDevice_SetScissorRect(device, &scissor);
> +
Are you sure you shouldn't be using the primary swapchain's backbuffer
dimensions?


From xixsimplicityxix at gmail.com  Thu Aug 21 17:35:26 2008
From: xixsimplicityxix at gmail.com (John Klehm)
Date: Thu, 21 Aug 2008 17:35:26 -0500
Subject: kernel32: Tiny improvement to the GetVolumePathNameW stub (try 4)
In-Reply-To: <1219354510.9850.5.camel@hermes2.karcher.local>
References: <940020.82477.qm@web23207.mail.ird.yahoo.com>
	<22821af30808211126o2e01101eu1a2f1d111ed8cc62@mail.gmail.com>
	<1219354510.9850.5.camel@hermes2.karcher.local>
Message-ID: <78a7dad00808211535s194c649cu32747b4b82af41a3@mail.gmail.com>

On Thu, Aug 21, 2008 at 4:35 PM, Michael Karcher
<wine at mkarcher.dialup.fu-berlin.de> wrote:
> page, stating that
>  lstrcpyn(dest,"abcdefghi",4)
> puts "abc" into dest.
>

Seems like Wine's version at least always null terminates it, so
"abc\0".  Just so anyone, who like me had to look it up, can see.

http://source.winehq.org/source/dlls/kernel32/string.c#L321

Cheers,
--John


From wine at mkarcher.dialup.fu-berlin.de  Thu Aug 21 17:40:44 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Fri, 22 Aug 2008 00:40:44 +0200
Subject: kernel32: Tiny improvement to the GetVolumePathNameW stub (try 4)
In-Reply-To: <78a7dad00808211535s194c649cu32747b4b82af41a3@mail.gmail.com>
References: <940020.82477.qm@web23207.mail.ird.yahoo.com>
	<22821af30808211126o2e01101eu1a2f1d111ed8cc62@mail.gmail.com>
	<1219354510.9850.5.camel@hermes2.karcher.local>
	<78a7dad00808211535s194c649cu32747b4b82af41a3@mail.gmail.com>
Message-ID: <1219358444.9850.13.camel@hermes2.karcher.local>

Am Donnerstag, den 21.08.2008, 17:35 -0500 schrieb John Klehm:
> On Thu, Aug 21, 2008 at 4:35 PM, Michael Karcher
> <wine at mkarcher.dialup.fu-berlin.de> wrote:
> > page, stating that
> >  lstrcpyn(dest,"abcdefghi",4)
> > puts "abc" into dest.
> Seems like Wine's version at least always null terminates it, so
> "abc\0".
Sorry if my words were unclear. With "abc" I meant the C language string
consisting of the letters 'a', 'b' and 'c', which by definition also has
a terminating NUL byte. lstrcpyn does *always* zero terminate the string
if the memory is accessible. According to MSDN it catches write faults
using SEH, and returns an error code. Only in this case the output could
be unterminated.

Regards,
  Michael Karcher




From dank at kegel.com  Thu Aug 21 19:01:52 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 21 Aug 2008 17:01:52 -0700
Subject: patches
Message-ID: <a71bd89a0808211701tdad01eh77fd2b7291f9721e@mail.gmail.com>

Louis wrote:
> Hi, apparently none of my patches is making it into git, nor did i recieve any response from Alexandre about what's wrong with them. I guess i'm kind of "blacklisted"

I don't think so.  LOTS of people, me included, have trouble getting
patches into git.  You just have to have patience, try
to figure out what needs improving, and keep at it.

Michael Karcher already gave you some good feedback:
http://winehq.org/pipermail/wine-devel/2008-August/068280.html
I don't think you've followed up on that yet.

And when in doubt, it never hurts to rediff and clean up your patch
series and resend.
Maintainers like Alexandre often get overwhelmed by
incoming email.  Linus Torvalds even said that he
simply deletes his inbox when it gets too full,
and that people who are serious about wanting their
patches in will resend.   This is probably true of Alexandre,
especially after he gets back from a two week vacation,
as he just did.

- Dan


From madewokherd+8cd9 at gmail.com  Thu Aug 21 20:00:51 2008
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Thu, 21 Aug 2008 20:00:51 -0500
Subject: [PATCH] shell32 - handle WM_CLOSE in the Control Panel window
	(fixed)
In-Reply-To: <19e31a080808211225m763e17e2i28c759b043c11208@mail.gmail.com>
References: <19e31a080808211225m763e17e2i28c759b043c11208@mail.gmail.com>
Message-ID: <ced95fe0808211800y4d4d859ep41b70a1c73067ae9@mail.gmail.com>

Why doesn't the WM_DESTROY case handle this properly? At first glance,
it appears to have code for stopping the running applets and quitting
from the main loop.

Calling ExitProcess from WM_CLOSE is anything but graceful.

Vincent Povirk



On Thu, Aug 21, 2008 at 2:25 PM, Steven Edwards <winehacker at gmail.com> wrote:
> This time without the TAB/space mixup
>
> Without this patch, if you have the Control Panel window open along
> with an applet and you try to close the Panel window, you get a very
> nice crash. This forces an exit with a little grace
>
> Changelog:
> shell32 - handle WM_CLOSE in the Control Panel window
>
> --
> Steven Edwards
>
> "There is one thing stronger than all the armies in the world, and
> that is an idea whose time has come." - Victor Hugo
>
>
>
>


From winehacker at gmail.com  Thu Aug 21 21:26:19 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Thu, 21 Aug 2008 22:26:19 -0400
Subject: [PATCH] shell32 - handle WM_CLOSE in the Control Panel window
	(fixed)
In-Reply-To: <ced95fe0808211800y4d4d859ep41b70a1c73067ae9@mail.gmail.com>
References: <19e31a080808211225m763e17e2i28c759b043c11208@mail.gmail.com>
	<ced95fe0808211800y4d4d859ep41b70a1c73067ae9@mail.gmail.com>
Message-ID: <19e31a080808211926k7d0739c0leb89ef280cd40722@mail.gmail.com>

On Thu, Aug 21, 2008 at 9:00 PM, Vincent Povirk
<madewokherd+8cd9 at gmail.com> wrote:
> Why doesn't the WM_DESTROY case handle this properly? At first glance,
> it appears to have code for stopping the running applets and quitting
> from the main loop.
>
> Calling ExitProcess from WM_CLOSE is anything but graceful.

I am not sure what the right answer is as I've never really tried to
fix this type of problem before, WM_DESTROY does not seem to do
something right, as even making WM_CLOSE fall through to it produces
the same crash. I spent some time trying to debug the problem but got
no where so I started just blindly adding PostQuitMessages and
ExitProcess calls around the areas in the backtrace until I found
something that got rid of the crash. Its easy to replicate, just run
control, open the appwiz.cpl and then close the control panel window
with the cpl applet still open.

Here is the backtrace

wine: Unhandled page fault on execute access to 0x7e50da00 at address
0x7e50da00 (thread 0009), starting debugger...
Unhandled exception: page fault on execute access to 0x7e50da00 in
32-bit code (0x7e50da00).
Register dump:
 CS:0023 SS:002b DS:002b ES:002b FS:0063 GS:006b
 EIP:7e50da00 ESP:0033b57c EBP:0033b5a8 EFLAGS:00010206(   - 00      - RIP1)
 EAX:7e50da00 EBX:7eba0574 ECX:00000000 EDX:7e50da00
 ESI:00000000 EDI:0001003a
Stack dump:
0x0033b57c:  7eb7d8da 0001003a 00000018 00000000
0x0033b58c:  00000000 7ebbfe80 7eba0574 0033b5a8
0x0033b59c:  7eba0574 00000000 0001003a 0033b5e8
0x0033b5ac:  7eb7f738 7e50da00 0001003a 00000018
0x0033b5bc:  00000000 00000000 00000000 0033b5d8
0x0033b5cc:  7eb6f120 7ebbfe80 7eba0574 7eb7f6db
Backtrace:
=>1 0x7e50da00 (0x0033b5a8)
  2 0x7eb7f738 call_dialog_proc+0x68(hwnd=<register EDI not in topmost
frame>, msg=0x18, wp=0x0, lp=0x0, result=0x33b618, arg=0x7e50da00)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:479] in user32
(0x0033b5e8)
  3 0x7eb82f5a WINPROC_CallDlgProcW+0x5a(func=0xffff0026,
hwnd=0x1003a, msg=0x18, wParam=<register EDI not in topmost frame>,
lParam=0x0) [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2394]
in user32 (0x0033b628)
  4 0x7eb0a2d5 DefDlgProcW+0x85(hwnd=<register ESI not in topmost
frame>, msg=0x18, wParam=0x0, lParam=0x0)
[/home/sedwards/source/wine-git/dlls/user32/defdlg.c:488] in user32
(0x0033b658)
  5 0x7eb7d8da WINPROC_wrapper+0x1a() in user32 (0x0033b688)
  6 0x7eb7dfce call_window_proc+0x6e(hwnd=<register EDI not in topmost
frame>, msg=0x18, wp=0x0, lp=0x0, result=0x33b76c, arg=0x7eb0a250)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
(0x0033b6c8)
  7 0x7eb842f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
topmost frame>, msg=0x18, wParam=0x0, lParam=0x0, result=0x33b76c,
unicode=0x1, mapping=0x1)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
(0x0033b708)
  8 0x7eb458ca call_window_proc+0xca(hwnd=<register ESI not in topmost
frame>, msg=0x18, wparam=0x0, lparam=0x0, unicode=0x1,
same_thread=0x1, mapping=0x1)
[/home/sedwards/source/wine-git/dlls/user32/message.c:1639] in user32
(0x0033b778)
  9 0x7eb48862 send_message+0x222(info=<register EDI not in topmost
frame>, res_ptr=0x33b814, unicode=<register ESI not in topmost frame>)
[/home/sedwards/source/wine-git/dlls/user32/message.c:2463] in user32
(0x0033b7d8)
  10 0x7eb48cda SendMessageW+0x4a(hwnd=0x1003a, msg=0x18, wparam=0x0,
lparam=0x0) [/home/sedwards/source/wine-git/dlls/user32/message.c:2586]
in user32 (0x0033b818)
  11 0x7eb7cd06 show_window+0x4d6(hwnd=0x1003a, cmd=<register ESI not
in topmost frame>)
[/home/sedwards/source/wine-git/dlls/user32/winpos.c:1046] in user32
(0x0033b888)
  12 0x7eb7ce4b ShowWindow+0x3b(hwnd=<register ESI not in topmost
frame>, cmd=0x0)
[/home/sedwards/source/wine-git/dlls/user32/winpos.c:1154] in user32
(0x0033b8a8)
  13 0x7eb724fc DestroyWindow+0x1bc(hwnd=0x1003a)
[/home/sedwards/source/wine-git/dlls/user32/win.c:1502] in user32
(0x0033b8e8)
  14 0x7ea4e49b PROPSHEET_CleanUp+0xcb(hwndDlg=<is not available>)
[/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:2720] in
comctl32 (0x0033b918)
  15 0x7ea51ef5 PROPSHEET_DialogProc+0x595(hwnd=0x1002e,
uMsg=<register ESI not in topmost frame>, wParam=0x0, lParam=0x0)
[/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:3534] in
comctl32 (0x0033bc48)
  16 0x7eb7d8da WINPROC_wrapper+0x1a() in user32 (0x0033bc78)
  17 0x7eb7f738 call_dialog_proc+0x68(hwnd=<register EDI not in
topmost frame>, msg=0x2, wp=0x0, lp=0x0, result=0x33bce8,
arg=0x7ea51960)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:479] in user32
(0x0033bcb8)
  18 0x7eb82f5a WINPROC_CallDlgProcW+0x5a(func=0xffff0025,
hwnd=0x1002e, msg=0x2, wParam=<register EDI not in topmost frame>,
lParam=0x0) [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2394]
in user32 (0x0033bcf8)
  19 0x7eb0a2d5 DefDlgProcW+0x85(hwnd=<register ESI not in topmost
frame>, msg=0x2, wParam=0x0, lParam=0x0)
[/home/sedwards/source/wine-git/dlls/user32/defdlg.c:488] in user32
(0x0033bd28)
  20 0x7eb7d8da WINPROC_wrapper+0x1a() in user32 (0x0033bd58)
  21 0x7eb7dfce call_window_proc+0x6e(hwnd=<register EDI not in
topmost frame>, msg=0x2, wp=0x0, lp=0x0, result=0x33be3c,
arg=0x7eb0a250)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
(0x0033bd98)
  22 0x7eb842f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
topmost frame>, msg=0x2, wParam=0x0, lParam=0x0, result=0x33be3c,
unicode=0x1, mapping=0x1002e)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
(0x0033bdd8)
  23 0x7eb458ca call_window_proc+0xca(hwnd=<register ESI not in
topmost frame>, msg=0x2, wparam=0x0, lparam=0x0, unicode=0x1,
same_thread=0x1, mapping=0x1002e)
[/home/sedwards/source/wine-git/dlls/user32/message.c:1639] in user32
(0x0033be48)
  24 0x7eb48862 send_message+0x222(info=<register EDI not in topmost
frame>, res_ptr=0x33bee4, unicode=<register ESI not in topmost frame>)
[/home/sedwards/source/wine-git/dlls/user32/message.c:2463] in user32
(0x0033bea8)
  25 0x7eb48cda SendMessageW+0x4a(hwnd=0x1002e, msg=0x2, wparam=0x0,
lparam=0x0) [/home/sedwards/source/wine-git/dlls/user32/message.c:2586]
in user32 (0x0033bee8)
  26 0x7eb71186 WIN_SendDestroyMsg+0x66(hwnd=<register ESI not in
topmost frame>)
[/home/sedwards/source/wine-git/dlls/user32/win.c:1436] in user32
(0x0033bf48)
  27 0x7eb72521 DestroyWindow+0x1e1(hwnd=0x1002e)
[/home/sedwards/source/wine-git/dlls/user32/win.c:1540] in user32
(0x0033bf88)
  28 0x7ea4f8a0 PROPSHEET_PropertySheet+0x2c0(psInfo=0x1381c0,
unicode=<is not available>)
[/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:2803] in
comctl32 (0x0033bfe8)
  29 0x7ea500cf PropertySheetW+0x1cf(lppsh=0x33d080)
[/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:2900] in
comctl32 (0x0033c058)
  30 0x7e50c930 (0x0033d0f8)
  31 0x7ed7e3cd Control_WndProc+0xa3d(hWnd=0x10026, wMsg=0x4e,
lParam1=0x3e8, lParam2=0x33e4a0)
[/home/sedwards/source/wine-git/dlls/shell32/control.c:501] in shell32
(0x0033e238)
  32 0x7eb7d8da WINPROC_wrapper+0x1a() in user32 (0x0033e268)
  33 0x7eb7dfce call_window_proc+0x6e(hwnd=<register EDI not in
topmost frame>, msg=0x4e, wp=0x3e8, lp=0x33e4a0, result=0x33e34c,
arg=0x7ed7d990)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
(0x0033e2a8)
  34 0x7eb842f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
topmost frame>, msg=0x4e, wParam=0x3e8, lParam=0x33e4a0,
result=0x33e34c, unicode=0x1, mapping=0x1)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
(0x0033e2e8)
  35 0x7eb458ca call_window_proc+0xca(hwnd=<register ESI not in
topmost frame>, msg=0x4e, wparam=0x3e8, lparam=0x33e4a0, unicode=0x1,
same_thread=0x1, mapping=0x1)
[/home/sedwards/source/wine-git/dlls/user32/message.c:1639] in user32
(0x0033e358)
  36 0x7eb48862 send_message+0x222(info=<register EDI not in topmost
frame>, res_ptr=0x33e3f4, unicode=<register ESI not in topmost frame>)
[/home/sedwards/source/wine-git/dlls/user32/message.c:2463] in user32
(0x0033e3b8)
  37 0x7eb48cda SendMessageW+0x4a(hwnd=0x10026, msg=0x4e,
wparam=0x3e8, lparam=0x33e4a0)
[/home/sedwards/source/wine-git/dlls/user32/message.c:2586] in user32
(0x0033e3f8)
  38 0x7ea2b89b notify_hdr+0x6b(infoPtr=<register EDI not in topmost
frame>, code=0xfffffffd, pnmh=<register ESI not in topmost frame>)
[/home/sedwards/source/wine-git/dlls/comctl32/listview.c:737] in
comctl32 (0x0033e428)
  39 0x7ea3364f notify_click+0x16f(infoPtr=0x1337e8, code=0xfffffffd,
lvht=0x33e578) [/home/sedwards/source/wine-git/dlls/comctl32/listview.c:806]
in comctl32 (0x0033e4d8)
  40 0x7ea33955 LISTVIEW_LButtonDblClk+0xa5(infoPtr=<register EDI not
in topmost frame>, wKey=<is not available>, x=0x28, y=0x15)
[/home/sedwards/source/wine-git/dlls/comctl32/listview.c:8557] in
comctl32 (0x0033e598)
  41 0x7ea3ecbe LISTVIEW_WindowProc+0x3de(hwnd=0x1002a, uMsg=0x203,
wParam=0x1, lParam=0x15)
[/home/sedwards/source/wine-git/dlls/comctl32/listview.c:9926] in
comctl32 (0x0033ee98)
  42 0x7eb7d8da WINPROC_wrapper+0x1a() in user32 (0x0033eec8)
  43 0x7eb7dfce call_window_proc+0x6e(hwnd=<register EDI not in
topmost frame>, msg=0x203, wp=0x1, lp=0x150028, result=0x33ef78,
arg=0x7ea3e8e0)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
(0x0033ef08)
  44 0x7eb842f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
topmost frame>, msg=0x203, wParam=0x1, lParam=0x150028,
result=0x33ef78, unicode=0x1, mapping=0x4)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
(0x0033ef48)
  45 0x7eb45186 DispatchMessageW+0x96(msg=<register EDI not in topmost
frame>) [/home/sedwards/source/wine-git/dlls/user32/message.c:3125] in
user32 (0x0033ef88)
  46 0x7ed7f177 Control_RunDLLW+0x3f7(hWnd=0x10020, hInst=0x0,
cmd=0x1326f0, nCmdShow=0x5)
[/home/sedwards/source/wine-git/dlls/shell32/control.c:620] in shell32
(0x0033fcc8)
  47 0x7ed7f76d Control_RunDLLA+0xfd(hWnd=0x10020, hInst=0x0,
cmd=0x7ee7eb43, nCmdShow=0x5)
[/home/sedwards/source/wine-git/dlls/shell32/control.c:825] in shell32
(0x0033fcf8)
  48 0x7ee7e5ea launch+0x3a(what=<register ESI not in topmost frame>)
[/home/sedwards/source/wine-git/programs/control/control.c:31] in
control (0x0033fd18)
  49 0x7ee7e665 WinMain+0x65(hInst=0x7ee70000, hPrev=0x0,
lpszCmdLine=0x110860, nCmdShow=0x1)
[/home/sedwards/source/wine-git/programs/control/control.c:70] in
control (0x0033fe58)
  50 0x7ee7e963 main+0xa3()
[/home/sedwards/source/wine-git/dlls/winecrt0/exe_main.c:48] in
control (0x0033fed8)
  51 0x7ee7e88b __wine_spec_exe_entry+0x5b(peb=0x7ffdf000)
[/home/sedwards/source/wine-git/dlls/winecrt0/exe_entry.c:36] in
control (0x0033ff08)
  52 0x7b877ef7 start_process+0xc7(arg=0x0)
[/home/sedwards/source/wine-git/dlls/kernel32/process.c:904] in
kernel32 (0x0033ffe8)


-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From madewokherd+8cd9 at gmail.com  Thu Aug 21 21:55:42 2008
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Thu, 21 Aug 2008 21:55:42 -0500
Subject: [PATCH] shell32 - handle WM_CLOSE in the Control Panel window
	(fixed)
In-Reply-To: <19e31a080808211926k7d0739c0leb89ef280cd40722@mail.gmail.com>
References: <19e31a080808211225m763e17e2i28c759b043c11208@mail.gmail.com>
	<ced95fe0808211800y4d4d859ep41b70a1c73067ae9@mail.gmail.com>
	<19e31a080808211926k7d0739c0leb89ef280cd40722@mail.gmail.com>
Message-ID: <ced95fe0808211955t3fe30492q2c0cf0b6c9fbb3aa@mail.gmail.com>

Commenting out FreeLibrary(applet->hModule); in Control_UnloadApplet
avoids the crash. The problem is that the applet's dialog still exists
when FreeLibrary is called. Since its dialog procedure was in the
freed library, the program crashes when that dialog gets a message.

I don't know what the proper fix is.

Vincent Povirk



On Thu, Aug 21, 2008 at 9:26 PM, Steven Edwards <winehacker at gmail.com> wrote:
> On Thu, Aug 21, 2008 at 9:00 PM, Vincent Povirk
> <madewokherd+8cd9 at gmail.com> wrote:
>> Why doesn't the WM_DESTROY case handle this properly? At first glance,
>> it appears to have code for stopping the running applets and quitting
>> from the main loop.
>>
>> Calling ExitProcess from WM_CLOSE is anything but graceful.
>
> I am not sure what the right answer is as I've never really tried to
> fix this type of problem before, WM_DESTROY does not seem to do
> something right, as even making WM_CLOSE fall through to it produces
> the same crash. I spent some time trying to debug the problem but got
> no where so I started just blindly adding PostQuitMessages and
> ExitProcess calls around the areas in the backtrace until I found
> something that got rid of the crash. Its easy to replicate, just run
> control, open the appwiz.cpl and then close the control panel window
> with the cpl applet still open.
>
> Here is the backtrace
>
> wine: Unhandled page fault on execute access to 0x7e50da00 at address
> 0x7e50da00 (thread 0009), starting debugger...
> Unhandled exception: page fault on execute access to 0x7e50da00 in
> 32-bit code (0x7e50da00).
> Register dump:
>  CS:0023 SS:002b DS:002b ES:002b FS:0063 GS:006b
>  EIP:7e50da00 ESP:0033b57c EBP:0033b5a8 EFLAGS:00010206(   - 00      - RIP1)
>  EAX:7e50da00 EBX:7eba0574 ECX:00000000 EDX:7e50da00
>  ESI:00000000 EDI:0001003a
> Stack dump:
> 0x0033b57c:  7eb7d8da 0001003a 00000018 00000000
> 0x0033b58c:  00000000 7ebbfe80 7eba0574 0033b5a8
> 0x0033b59c:  7eba0574 00000000 0001003a 0033b5e8
> 0x0033b5ac:  7eb7f738 7e50da00 0001003a 00000018
> 0x0033b5bc:  00000000 00000000 00000000 0033b5d8
> 0x0033b5cc:  7eb6f120 7ebbfe80 7eba0574 7eb7f6db
> Backtrace:
> =>1 0x7e50da00 (0x0033b5a8)
>  2 0x7eb7f738 call_dialog_proc+0x68(hwnd=<register EDI not in topmost
> frame>, msg=0x18, wp=0x0, lp=0x0, result=0x33b618, arg=0x7e50da00)
> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:479] in user32
> (0x0033b5e8)
>  3 0x7eb82f5a WINPROC_CallDlgProcW+0x5a(func=0xffff0026,
> hwnd=0x1003a, msg=0x18, wParam=<register EDI not in topmost frame>,
> lParam=0x0) [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2394]
> in user32 (0x0033b628)
>  4 0x7eb0a2d5 DefDlgProcW+0x85(hwnd=<register ESI not in topmost
> frame>, msg=0x18, wParam=0x0, lParam=0x0)
> [/home/sedwards/source/wine-git/dlls/user32/defdlg.c:488] in user32
> (0x0033b658)
>  5 0x7eb7d8da WINPROC_wrapper+0x1a() in user32 (0x0033b688)
>  6 0x7eb7dfce call_window_proc+0x6e(hwnd=<register EDI not in topmost
> frame>, msg=0x18, wp=0x0, lp=0x0, result=0x33b76c, arg=0x7eb0a250)
> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
> (0x0033b6c8)
>  7 0x7eb842f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
> topmost frame>, msg=0x18, wParam=0x0, lParam=0x0, result=0x33b76c,
> unicode=0x1, mapping=0x1)
> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
> (0x0033b708)
>  8 0x7eb458ca call_window_proc+0xca(hwnd=<register ESI not in topmost
> frame>, msg=0x18, wparam=0x0, lparam=0x0, unicode=0x1,
> same_thread=0x1, mapping=0x1)
> [/home/sedwards/source/wine-git/dlls/user32/message.c:1639] in user32
> (0x0033b778)
>  9 0x7eb48862 send_message+0x222(info=<register EDI not in topmost
> frame>, res_ptr=0x33b814, unicode=<register ESI not in topmost frame>)
> [/home/sedwards/source/wine-git/dlls/user32/message.c:2463] in user32
> (0x0033b7d8)
>  10 0x7eb48cda SendMessageW+0x4a(hwnd=0x1003a, msg=0x18, wparam=0x0,
> lparam=0x0) [/home/sedwards/source/wine-git/dlls/user32/message.c:2586]
> in user32 (0x0033b818)
>  11 0x7eb7cd06 show_window+0x4d6(hwnd=0x1003a, cmd=<register ESI not
> in topmost frame>)
> [/home/sedwards/source/wine-git/dlls/user32/winpos.c:1046] in user32
> (0x0033b888)
>  12 0x7eb7ce4b ShowWindow+0x3b(hwnd=<register ESI not in topmost
> frame>, cmd=0x0)
> [/home/sedwards/source/wine-git/dlls/user32/winpos.c:1154] in user32
> (0x0033b8a8)
>  13 0x7eb724fc DestroyWindow+0x1bc(hwnd=0x1003a)
> [/home/sedwards/source/wine-git/dlls/user32/win.c:1502] in user32
> (0x0033b8e8)
>  14 0x7ea4e49b PROPSHEET_CleanUp+0xcb(hwndDlg=<is not available>)
> [/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:2720] in
> comctl32 (0x0033b918)
>  15 0x7ea51ef5 PROPSHEET_DialogProc+0x595(hwnd=0x1002e,
> uMsg=<register ESI not in topmost frame>, wParam=0x0, lParam=0x0)
> [/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:3534] in
> comctl32 (0x0033bc48)
>  16 0x7eb7d8da WINPROC_wrapper+0x1a() in user32 (0x0033bc78)
>  17 0x7eb7f738 call_dialog_proc+0x68(hwnd=<register EDI not in
> topmost frame>, msg=0x2, wp=0x0, lp=0x0, result=0x33bce8,
> arg=0x7ea51960)
> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:479] in user32
> (0x0033bcb8)
>  18 0x7eb82f5a WINPROC_CallDlgProcW+0x5a(func=0xffff0025,
> hwnd=0x1002e, msg=0x2, wParam=<register EDI not in topmost frame>,
> lParam=0x0) [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2394]
> in user32 (0x0033bcf8)
>  19 0x7eb0a2d5 DefDlgProcW+0x85(hwnd=<register ESI not in topmost
> frame>, msg=0x2, wParam=0x0, lParam=0x0)
> [/home/sedwards/source/wine-git/dlls/user32/defdlg.c:488] in user32
> (0x0033bd28)
>  20 0x7eb7d8da WINPROC_wrapper+0x1a() in user32 (0x0033bd58)
>  21 0x7eb7dfce call_window_proc+0x6e(hwnd=<register EDI not in
> topmost frame>, msg=0x2, wp=0x0, lp=0x0, result=0x33be3c,
> arg=0x7eb0a250)
> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
> (0x0033bd98)
>  22 0x7eb842f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
> topmost frame>, msg=0x2, wParam=0x0, lParam=0x0, result=0x33be3c,
> unicode=0x1, mapping=0x1002e)
> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
> (0x0033bdd8)
>  23 0x7eb458ca call_window_proc+0xca(hwnd=<register ESI not in
> topmost frame>, msg=0x2, wparam=0x0, lparam=0x0, unicode=0x1,
> same_thread=0x1, mapping=0x1002e)
> [/home/sedwards/source/wine-git/dlls/user32/message.c:1639] in user32
> (0x0033be48)
>  24 0x7eb48862 send_message+0x222(info=<register EDI not in topmost
> frame>, res_ptr=0x33bee4, unicode=<register ESI not in topmost frame>)
> [/home/sedwards/source/wine-git/dlls/user32/message.c:2463] in user32
> (0x0033bea8)
>  25 0x7eb48cda SendMessageW+0x4a(hwnd=0x1002e, msg=0x2, wparam=0x0,
> lparam=0x0) [/home/sedwards/source/wine-git/dlls/user32/message.c:2586]
> in user32 (0x0033bee8)
>  26 0x7eb71186 WIN_SendDestroyMsg+0x66(hwnd=<register ESI not in
> topmost frame>)
> [/home/sedwards/source/wine-git/dlls/user32/win.c:1436] in user32
> (0x0033bf48)
>  27 0x7eb72521 DestroyWindow+0x1e1(hwnd=0x1002e)
> [/home/sedwards/source/wine-git/dlls/user32/win.c:1540] in user32
> (0x0033bf88)
>  28 0x7ea4f8a0 PROPSHEET_PropertySheet+0x2c0(psInfo=0x1381c0,
> unicode=<is not available>)
> [/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:2803] in
> comctl32 (0x0033bfe8)
>  29 0x7ea500cf PropertySheetW+0x1cf(lppsh=0x33d080)
> [/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:2900] in
> comctl32 (0x0033c058)
>  30 0x7e50c930 (0x0033d0f8)
>  31 0x7ed7e3cd Control_WndProc+0xa3d(hWnd=0x10026, wMsg=0x4e,
> lParam1=0x3e8, lParam2=0x33e4a0)
> [/home/sedwards/source/wine-git/dlls/shell32/control.c:501] in shell32
> (0x0033e238)
>  32 0x7eb7d8da WINPROC_wrapper+0x1a() in user32 (0x0033e268)
>  33 0x7eb7dfce call_window_proc+0x6e(hwnd=<register EDI not in
> topmost frame>, msg=0x4e, wp=0x3e8, lp=0x33e4a0, result=0x33e34c,
> arg=0x7ed7d990)
> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
> (0x0033e2a8)
>  34 0x7eb842f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
> topmost frame>, msg=0x4e, wParam=0x3e8, lParam=0x33e4a0,
> result=0x33e34c, unicode=0x1, mapping=0x1)
> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
> (0x0033e2e8)
>  35 0x7eb458ca call_window_proc+0xca(hwnd=<register ESI not in
> topmost frame>, msg=0x4e, wparam=0x3e8, lparam=0x33e4a0, unicode=0x1,
> same_thread=0x1, mapping=0x1)
> [/home/sedwards/source/wine-git/dlls/user32/message.c:1639] in user32
> (0x0033e358)
>  36 0x7eb48862 send_message+0x222(info=<register EDI not in topmost
> frame>, res_ptr=0x33e3f4, unicode=<register ESI not in topmost frame>)
> [/home/sedwards/source/wine-git/dlls/user32/message.c:2463] in user32
> (0x0033e3b8)
>  37 0x7eb48cda SendMessageW+0x4a(hwnd=0x10026, msg=0x4e,
> wparam=0x3e8, lparam=0x33e4a0)
> [/home/sedwards/source/wine-git/dlls/user32/message.c:2586] in user32
> (0x0033e3f8)
>  38 0x7ea2b89b notify_hdr+0x6b(infoPtr=<register EDI not in topmost
> frame>, code=0xfffffffd, pnmh=<register ESI not in topmost frame>)
> [/home/sedwards/source/wine-git/dlls/comctl32/listview.c:737] in
> comctl32 (0x0033e428)
>  39 0x7ea3364f notify_click+0x16f(infoPtr=0x1337e8, code=0xfffffffd,
> lvht=0x33e578) [/home/sedwards/source/wine-git/dlls/comctl32/listview.c:806]
> in comctl32 (0x0033e4d8)
>  40 0x7ea33955 LISTVIEW_LButtonDblClk+0xa5(infoPtr=<register EDI not
> in topmost frame>, wKey=<is not available>, x=0x28, y=0x15)
> [/home/sedwards/source/wine-git/dlls/comctl32/listview.c:8557] in
> comctl32 (0x0033e598)
>  41 0x7ea3ecbe LISTVIEW_WindowProc+0x3de(hwnd=0x1002a, uMsg=0x203,
> wParam=0x1, lParam=0x15)
> [/home/sedwards/source/wine-git/dlls/comctl32/listview.c:9926] in
> comctl32 (0x0033ee98)
>  42 0x7eb7d8da WINPROC_wrapper+0x1a() in user32 (0x0033eec8)
>  43 0x7eb7dfce call_window_proc+0x6e(hwnd=<register EDI not in
> topmost frame>, msg=0x203, wp=0x1, lp=0x150028, result=0x33ef78,
> arg=0x7ea3e8e0)
> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
> (0x0033ef08)
>  44 0x7eb842f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
> topmost frame>, msg=0x203, wParam=0x1, lParam=0x150028,
> result=0x33ef78, unicode=0x1, mapping=0x4)
> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
> (0x0033ef48)
>  45 0x7eb45186 DispatchMessageW+0x96(msg=<register EDI not in topmost
> frame>) [/home/sedwards/source/wine-git/dlls/user32/message.c:3125] in
> user32 (0x0033ef88)
>  46 0x7ed7f177 Control_RunDLLW+0x3f7(hWnd=0x10020, hInst=0x0,
> cmd=0x1326f0, nCmdShow=0x5)
> [/home/sedwards/source/wine-git/dlls/shell32/control.c:620] in shell32
> (0x0033fcc8)
>  47 0x7ed7f76d Control_RunDLLA+0xfd(hWnd=0x10020, hInst=0x0,
> cmd=0x7ee7eb43, nCmdShow=0x5)
> [/home/sedwards/source/wine-git/dlls/shell32/control.c:825] in shell32
> (0x0033fcf8)
>  48 0x7ee7e5ea launch+0x3a(what=<register ESI not in topmost frame>)
> [/home/sedwards/source/wine-git/programs/control/control.c:31] in
> control (0x0033fd18)
>  49 0x7ee7e665 WinMain+0x65(hInst=0x7ee70000, hPrev=0x0,
> lpszCmdLine=0x110860, nCmdShow=0x1)
> [/home/sedwards/source/wine-git/programs/control/control.c:70] in
> control (0x0033fe58)
>  50 0x7ee7e963 main+0xa3()
> [/home/sedwards/source/wine-git/dlls/winecrt0/exe_main.c:48] in
> control (0x0033fed8)
>  51 0x7ee7e88b __wine_spec_exe_entry+0x5b(peb=0x7ffdf000)
> [/home/sedwards/source/wine-git/dlls/winecrt0/exe_entry.c:36] in
> control (0x0033ff08)
>  52 0x7b877ef7 start_process+0xc7(arg=0x0)
> [/home/sedwards/source/wine-git/dlls/kernel32/process.c:904] in
> kernel32 (0x0033ffe8)
>
>
> --
> Steven Edwards
>
> "There is one thing stronger than all the armies in the world, and
> that is an idea whose time has come." - Victor Hugo
>
>
>


From andrewfenn at gmail.com  Thu Aug 21 22:08:29 2008
From: andrewfenn at gmail.com (Andrew Fenn)
Date: Fri, 22 Aug 2008 10:08:29 +0700
Subject: Spore patch to fix UI and Part descriptions
In-Reply-To: <007f01c9039b$fffc0350$fff409f0$@com>
References: <b594ca9d0808202349l5e00ebeck8c9ceb7aec4a623@mail.gmail.com>
	<007f01c9039b$fffc0350$fff409f0$@com>
Message-ID: <b594ca9d0808212008u35b59585y1bc0bddc87db8850@mail.gmail.com>

On Thu, Aug 21, 2008 at 9:41 PM, Stefan D?singer <stefan at codeweavers.com>wrote:

> These changes may be correct, but they need a test. Take a look at
> dlls/d3d9/tests/device.c to see how the other tests look. I guess the
> changes are likely to be correct, but they have to be tested



I'll add a test case and get back to you later then, thanks for the help.

On Thu, Aug 21, 2008 at 9:51 PM, H. Verbeet <hverbeet at gmail.com> wrote:

>
> Not in its current form, there's a C++ comment and trailing spaces in
> there, and the change in SetScissorRect() probably should test if the
> rectangle is empty. Also, if it tests for empty rectangles, it should
> probably also test for rectangles that are (partially) outside the
> screen, etc.


I'll change the code around and add the checking you mentioned.

Thanks for the info.

Regards,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080822/d7882c12/attachment-0001.htm 

From madewokherd+8cd9 at gmail.com  Thu Aug 21 22:08:45 2008
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Thu, 21 Aug 2008 22:08:45 -0500
Subject: [PATCH] shell32 - handle WM_CLOSE in the Control Panel window
	(fixed)
In-Reply-To: <ced95fe0808211955t3fe30492q2c0cf0b6c9fbb3aa@mail.gmail.com>
References: <19e31a080808211225m763e17e2i28c759b043c11208@mail.gmail.com>
	<ced95fe0808211800y4d4d859ep41b70a1c73067ae9@mail.gmail.com>
	<19e31a080808211926k7d0739c0leb89ef280cd40722@mail.gmail.com>
	<ced95fe0808211955t3fe30492q2c0cf0b6c9fbb3aa@mail.gmail.com>
Message-ID: <ced95fe0808212008o147b203v620d993d694dfa30@mail.gmail.com>

I think the proper fix is for appwiz.cpl to process the CPL_STOP and
CPL_EXIT messages (see
http://msdn.microsoft.com/en-us/library/aa454656.aspx)

Vincent Povirk



On Thu, Aug 21, 2008 at 9:55 PM, Vincent Povirk
<madewokherd+8cd9 at gmail.com> wrote:
> Commenting out FreeLibrary(applet->hModule); in Control_UnloadApplet
> avoids the crash. The problem is that the applet's dialog still exists
> when FreeLibrary is called. Since its dialog procedure was in the
> freed library, the program crashes when that dialog gets a message.
>
> I don't know what the proper fix is.
>
> Vincent Povirk
>
>
>
> On Thu, Aug 21, 2008 at 9:26 PM, Steven Edwards <winehacker at gmail.com> wrote:
>> On Thu, Aug 21, 2008 at 9:00 PM, Vincent Povirk
>> <madewokherd+8cd9 at gmail.com> wrote:
>>> Why doesn't the WM_DESTROY case handle this properly? At first glance,
>>> it appears to have code for stopping the running applets and quitting
>>> from the main loop.
>>>
>>> Calling ExitProcess from WM_CLOSE is anything but graceful.
>>
>> I am not sure what the right answer is as I've never really tried to
>> fix this type of problem before, WM_DESTROY does not seem to do
>> something right, as even making WM_CLOSE fall through to it produces
>> the same crash. I spent some time trying to debug the problem but got
>> no where so I started just blindly adding PostQuitMessages and
>> ExitProcess calls around the areas in the backtrace until I found
>> something that got rid of the crash. Its easy to replicate, just run
>> control, open the appwiz.cpl and then close the control panel window
>> with the cpl applet still open.
>>
>> Here is the backtrace
>>
>> wine: Unhandled page fault on execute access to 0x7e50da00 at address
>> 0x7e50da00 (thread 0009), starting debugger...
>> Unhandled exception: page fault on execute access to 0x7e50da00 in
>> 32-bit code (0x7e50da00).
>> Register dump:
>>  CS:0023 SS:002b DS:002b ES:002b FS:0063 GS:006b
>>  EIP:7e50da00 ESP:0033b57c EBP:0033b5a8 EFLAGS:00010206(   - 00      - RIP1)
>>  EAX:7e50da00 EBX:7eba0574 ECX:00000000 EDX:7e50da00
>>  ESI:00000000 EDI:0001003a
>> Stack dump:
>> 0x0033b57c:  7eb7d8da 0001003a 00000018 00000000
>> 0x0033b58c:  00000000 7ebbfe80 7eba0574 0033b5a8
>> 0x0033b59c:  7eba0574 00000000 0001003a 0033b5e8
>> 0x0033b5ac:  7eb7f738 7e50da00 0001003a 00000018
>> 0x0033b5bc:  00000000 00000000 00000000 0033b5d8
>> 0x0033b5cc:  7eb6f120 7ebbfe80 7eba0574 7eb7f6db
>> Backtrace:
>> =>1 0x7e50da00 (0x0033b5a8)
>>  2 0x7eb7f738 call_dialog_proc+0x68(hwnd=<register EDI not in topmost
>> frame>, msg=0x18, wp=0x0, lp=0x0, result=0x33b618, arg=0x7e50da00)
>> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:479] in user32
>> (0x0033b5e8)
>>  3 0x7eb82f5a WINPROC_CallDlgProcW+0x5a(func=0xffff0026,
>> hwnd=0x1003a, msg=0x18, wParam=<register EDI not in topmost frame>,
>> lParam=0x0) [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2394]
>> in user32 (0x0033b628)
>>  4 0x7eb0a2d5 DefDlgProcW+0x85(hwnd=<register ESI not in topmost
>> frame>, msg=0x18, wParam=0x0, lParam=0x0)
>> [/home/sedwards/source/wine-git/dlls/user32/defdlg.c:488] in user32
>> (0x0033b658)
>>  5 0x7eb7d8da WINPROC_wrapper+0x1a() in user32 (0x0033b688)
>>  6 0x7eb7dfce call_window_proc+0x6e(hwnd=<register EDI not in topmost
>> frame>, msg=0x18, wp=0x0, lp=0x0, result=0x33b76c, arg=0x7eb0a250)
>> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
>> (0x0033b6c8)
>>  7 0x7eb842f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
>> topmost frame>, msg=0x18, wParam=0x0, lParam=0x0, result=0x33b76c,
>> unicode=0x1, mapping=0x1)
>> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
>> (0x0033b708)
>>  8 0x7eb458ca call_window_proc+0xca(hwnd=<register ESI not in topmost
>> frame>, msg=0x18, wparam=0x0, lparam=0x0, unicode=0x1,
>> same_thread=0x1, mapping=0x1)
>> [/home/sedwards/source/wine-git/dlls/user32/message.c:1639] in user32
>> (0x0033b778)
>>  9 0x7eb48862 send_message+0x222(info=<register EDI not in topmost
>> frame>, res_ptr=0x33b814, unicode=<register ESI not in topmost frame>)
>> [/home/sedwards/source/wine-git/dlls/user32/message.c:2463] in user32
>> (0x0033b7d8)
>>  10 0x7eb48cda SendMessageW+0x4a(hwnd=0x1003a, msg=0x18, wparam=0x0,
>> lparam=0x0) [/home/sedwards/source/wine-git/dlls/user32/message.c:2586]
>> in user32 (0x0033b818)
>>  11 0x7eb7cd06 show_window+0x4d6(hwnd=0x1003a, cmd=<register ESI not
>> in topmost frame>)
>> [/home/sedwards/source/wine-git/dlls/user32/winpos.c:1046] in user32
>> (0x0033b888)
>>  12 0x7eb7ce4b ShowWindow+0x3b(hwnd=<register ESI not in topmost
>> frame>, cmd=0x0)
>> [/home/sedwards/source/wine-git/dlls/user32/winpos.c:1154] in user32
>> (0x0033b8a8)
>>  13 0x7eb724fc DestroyWindow+0x1bc(hwnd=0x1003a)
>> [/home/sedwards/source/wine-git/dlls/user32/win.c:1502] in user32
>> (0x0033b8e8)
>>  14 0x7ea4e49b PROPSHEET_CleanUp+0xcb(hwndDlg=<is not available>)
>> [/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:2720] in
>> comctl32 (0x0033b918)
>>  15 0x7ea51ef5 PROPSHEET_DialogProc+0x595(hwnd=0x1002e,
>> uMsg=<register ESI not in topmost frame>, wParam=0x0, lParam=0x0)
>> [/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:3534] in
>> comctl32 (0x0033bc48)
>>  16 0x7eb7d8da WINPROC_wrapper+0x1a() in user32 (0x0033bc78)
>>  17 0x7eb7f738 call_dialog_proc+0x68(hwnd=<register EDI not in
>> topmost frame>, msg=0x2, wp=0x0, lp=0x0, result=0x33bce8,
>> arg=0x7ea51960)
>> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:479] in user32
>> (0x0033bcb8)
>>  18 0x7eb82f5a WINPROC_CallDlgProcW+0x5a(func=0xffff0025,
>> hwnd=0x1002e, msg=0x2, wParam=<register EDI not in topmost frame>,
>> lParam=0x0) [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2394]
>> in user32 (0x0033bcf8)
>>  19 0x7eb0a2d5 DefDlgProcW+0x85(hwnd=<register ESI not in topmost
>> frame>, msg=0x2, wParam=0x0, lParam=0x0)
>> [/home/sedwards/source/wine-git/dlls/user32/defdlg.c:488] in user32
>> (0x0033bd28)
>>  20 0x7eb7d8da WINPROC_wrapper+0x1a() in user32 (0x0033bd58)
>>  21 0x7eb7dfce call_window_proc+0x6e(hwnd=<register EDI not in
>> topmost frame>, msg=0x2, wp=0x0, lp=0x0, result=0x33be3c,
>> arg=0x7eb0a250)
>> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
>> (0x0033bd98)
>>  22 0x7eb842f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
>> topmost frame>, msg=0x2, wParam=0x0, lParam=0x0, result=0x33be3c,
>> unicode=0x1, mapping=0x1002e)
>> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
>> (0x0033bdd8)
>>  23 0x7eb458ca call_window_proc+0xca(hwnd=<register ESI not in
>> topmost frame>, msg=0x2, wparam=0x0, lparam=0x0, unicode=0x1,
>> same_thread=0x1, mapping=0x1002e)
>> [/home/sedwards/source/wine-git/dlls/user32/message.c:1639] in user32
>> (0x0033be48)
>>  24 0x7eb48862 send_message+0x222(info=<register EDI not in topmost
>> frame>, res_ptr=0x33bee4, unicode=<register ESI not in topmost frame>)
>> [/home/sedwards/source/wine-git/dlls/user32/message.c:2463] in user32
>> (0x0033bea8)
>>  25 0x7eb48cda SendMessageW+0x4a(hwnd=0x1002e, msg=0x2, wparam=0x0,
>> lparam=0x0) [/home/sedwards/source/wine-git/dlls/user32/message.c:2586]
>> in user32 (0x0033bee8)
>>  26 0x7eb71186 WIN_SendDestroyMsg+0x66(hwnd=<register ESI not in
>> topmost frame>)
>> [/home/sedwards/source/wine-git/dlls/user32/win.c:1436] in user32
>> (0x0033bf48)
>>  27 0x7eb72521 DestroyWindow+0x1e1(hwnd=0x1002e)
>> [/home/sedwards/source/wine-git/dlls/user32/win.c:1540] in user32
>> (0x0033bf88)
>>  28 0x7ea4f8a0 PROPSHEET_PropertySheet+0x2c0(psInfo=0x1381c0,
>> unicode=<is not available>)
>> [/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:2803] in
>> comctl32 (0x0033bfe8)
>>  29 0x7ea500cf PropertySheetW+0x1cf(lppsh=0x33d080)
>> [/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:2900] in
>> comctl32 (0x0033c058)
>>  30 0x7e50c930 (0x0033d0f8)
>>  31 0x7ed7e3cd Control_WndProc+0xa3d(hWnd=0x10026, wMsg=0x4e,
>> lParam1=0x3e8, lParam2=0x33e4a0)
>> [/home/sedwards/source/wine-git/dlls/shell32/control.c:501] in shell32
>> (0x0033e238)
>>  32 0x7eb7d8da WINPROC_wrapper+0x1a() in user32 (0x0033e268)
>>  33 0x7eb7dfce call_window_proc+0x6e(hwnd=<register EDI not in
>> topmost frame>, msg=0x4e, wp=0x3e8, lp=0x33e4a0, result=0x33e34c,
>> arg=0x7ed7d990)
>> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
>> (0x0033e2a8)
>>  34 0x7eb842f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
>> topmost frame>, msg=0x4e, wParam=0x3e8, lParam=0x33e4a0,
>> result=0x33e34c, unicode=0x1, mapping=0x1)
>> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
>> (0x0033e2e8)
>>  35 0x7eb458ca call_window_proc+0xca(hwnd=<register ESI not in
>> topmost frame>, msg=0x4e, wparam=0x3e8, lparam=0x33e4a0, unicode=0x1,
>> same_thread=0x1, mapping=0x1)
>> [/home/sedwards/source/wine-git/dlls/user32/message.c:1639] in user32
>> (0x0033e358)
>>  36 0x7eb48862 send_message+0x222(info=<register EDI not in topmost
>> frame>, res_ptr=0x33e3f4, unicode=<register ESI not in topmost frame>)
>> [/home/sedwards/source/wine-git/dlls/user32/message.c:2463] in user32
>> (0x0033e3b8)
>>  37 0x7eb48cda SendMessageW+0x4a(hwnd=0x10026, msg=0x4e,
>> wparam=0x3e8, lparam=0x33e4a0)
>> [/home/sedwards/source/wine-git/dlls/user32/message.c:2586] in user32
>> (0x0033e3f8)
>>  38 0x7ea2b89b notify_hdr+0x6b(infoPtr=<register EDI not in topmost
>> frame>, code=0xfffffffd, pnmh=<register ESI not in topmost frame>)
>> [/home/sedwards/source/wine-git/dlls/comctl32/listview.c:737] in
>> comctl32 (0x0033e428)
>>  39 0x7ea3364f notify_click+0x16f(infoPtr=0x1337e8, code=0xfffffffd,
>> lvht=0x33e578) [/home/sedwards/source/wine-git/dlls/comctl32/listview.c:806]
>> in comctl32 (0x0033e4d8)
>>  40 0x7ea33955 LISTVIEW_LButtonDblClk+0xa5(infoPtr=<register EDI not
>> in topmost frame>, wKey=<is not available>, x=0x28, y=0x15)
>> [/home/sedwards/source/wine-git/dlls/comctl32/listview.c:8557] in
>> comctl32 (0x0033e598)
>>  41 0x7ea3ecbe LISTVIEW_WindowProc+0x3de(hwnd=0x1002a, uMsg=0x203,
>> wParam=0x1, lParam=0x15)
>> [/home/sedwards/source/wine-git/dlls/comctl32/listview.c:9926] in
>> comctl32 (0x0033ee98)
>>  42 0x7eb7d8da WINPROC_wrapper+0x1a() in user32 (0x0033eec8)
>>  43 0x7eb7dfce call_window_proc+0x6e(hwnd=<register EDI not in
>> topmost frame>, msg=0x203, wp=0x1, lp=0x150028, result=0x33ef78,
>> arg=0x7ea3e8e0)
>> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
>> (0x0033ef08)
>>  44 0x7eb842f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
>> topmost frame>, msg=0x203, wParam=0x1, lParam=0x150028,
>> result=0x33ef78, unicode=0x1, mapping=0x4)
>> [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
>> (0x0033ef48)
>>  45 0x7eb45186 DispatchMessageW+0x96(msg=<register EDI not in topmost
>> frame>) [/home/sedwards/source/wine-git/dlls/user32/message.c:3125] in
>> user32 (0x0033ef88)
>>  46 0x7ed7f177 Control_RunDLLW+0x3f7(hWnd=0x10020, hInst=0x0,
>> cmd=0x1326f0, nCmdShow=0x5)
>> [/home/sedwards/source/wine-git/dlls/shell32/control.c:620] in shell32
>> (0x0033fcc8)
>>  47 0x7ed7f76d Control_RunDLLA+0xfd(hWnd=0x10020, hInst=0x0,
>> cmd=0x7ee7eb43, nCmdShow=0x5)
>> [/home/sedwards/source/wine-git/dlls/shell32/control.c:825] in shell32
>> (0x0033fcf8)
>>  48 0x7ee7e5ea launch+0x3a(what=<register ESI not in topmost frame>)
>> [/home/sedwards/source/wine-git/programs/control/control.c:31] in
>> control (0x0033fd18)
>>  49 0x7ee7e665 WinMain+0x65(hInst=0x7ee70000, hPrev=0x0,
>> lpszCmdLine=0x110860, nCmdShow=0x1)
>> [/home/sedwards/source/wine-git/programs/control/control.c:70] in
>> control (0x0033fe58)
>>  50 0x7ee7e963 main+0xa3()
>> [/home/sedwards/source/wine-git/dlls/winecrt0/exe_main.c:48] in
>> control (0x0033fed8)
>>  51 0x7ee7e88b __wine_spec_exe_entry+0x5b(peb=0x7ffdf000)
>> [/home/sedwards/source/wine-git/dlls/winecrt0/exe_entry.c:36] in
>> control (0x0033ff08)
>>  52 0x7b877ef7 start_process+0xc7(arg=0x0)
>> [/home/sedwards/source/wine-git/dlls/kernel32/process.c:904] in
>> kernel32 (0x0033ffe8)
>>
>>
>> --
>> Steven Edwards
>>
>> "There is one thing stronger than all the armies in the world, and
>> that is an idea whose time has come." - Victor Hugo
>>
>>
>>
>


From jjmckenzie51 at earthlink.net  Thu Aug 21 22:44:51 2008
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Thu, 21 Aug 2008 20:44:51 -0700
Subject: [PATCH] shell32 - handle WM_CLOSE in the Control Panel window
	(fixed)
In-Reply-To: <ced95fe0808211800y4d4d859ep41b70a1c73067ae9@mail.gmail.com>
References: <19e31a080808211225m763e17e2i28c759b043c11208@mail.gmail.com>
	<ced95fe0808211800y4d4d859ep41b70a1c73067ae9@mail.gmail.com>
Message-ID: <48AE3633.6060807@earthlink.net>

Vincent Povirk wrote:
> Why doesn't the WM_DESTROY case handle this properly? At first glance,
> it appears to have code for stopping the running applets and quitting
> from the main loop.
>
>   
WM_CLOSE is different than WM_DESTROY.  This is a missing case that
needs to be handled whenever the Windows Manger receives this message. 
Good catch, Steven.

James McKenzie



From madewokherd+8cd9 at gmail.com  Thu Aug 21 22:49:30 2008
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Thu, 21 Aug 2008 22:49:30 -0500
Subject: [PATCH] shell32 - handle WM_CLOSE in the Control Panel window
	(fixed)
In-Reply-To: <48AE3633.6060807@earthlink.net>
References: <19e31a080808211225m763e17e2i28c759b043c11208@mail.gmail.com>
	<ced95fe0808211800y4d4d859ep41b70a1c73067ae9@mail.gmail.com>
	<48AE3633.6060807@earthlink.net>
Message-ID: <ced95fe0808212049j144db12bh65dec194f36a84bc@mail.gmail.com>

WM_CLOSE is already handled by the default window procedure,
DefWindowProcW, which calls DestroyWindow. It's only necessary to
override the default for WM_CLOSE if you want to prevent the window
from being destroyed.

Vincent Povirk



On Thu, Aug 21, 2008 at 10:44 PM, James McKenzie
<jjmckenzie51 at earthlink.net> wrote:
> Vincent Povirk wrote:
>> Why doesn't the WM_DESTROY case handle this properly? At first glance,
>> it appears to have code for stopping the running applets and quitting
>> from the main loop.
>>
>>
> WM_CLOSE is different than WM_DESTROY.  This is a missing case that
> needs to be handled whenever the Windows Manger receives this message.
> Good catch, Steven.
>
> James McKenzie
>
>


From winehacker at gmail.com  Fri Aug 22 00:31:08 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Fri, 22 Aug 2008 01:31:08 -0400
Subject: [PATCH] shell32 - handle WM_CLOSE in the Control Panel window
	(fixed)
In-Reply-To: <ced95fe0808212008o147b203v620d993d694dfa30@mail.gmail.com>
References: <19e31a080808211225m763e17e2i28c759b043c11208@mail.gmail.com>
	<ced95fe0808211800y4d4d859ep41b70a1c73067ae9@mail.gmail.com>
	<19e31a080808211926k7d0739c0leb89ef280cd40722@mail.gmail.com>
	<ced95fe0808211955t3fe30492q2c0cf0b6c9fbb3aa@mail.gmail.com>
	<ced95fe0808212008o147b203v620d993d694dfa30@mail.gmail.com>
Message-ID: <19e31a080808212231g149296f9g809b44d8f6ae4eff@mail.gmail.com>

On Thu, Aug 21, 2008 at 11:08 PM, Vincent Povirk
<madewokherd+8cd9 at gmail.com> wrote:
> I think the proper fix is for appwiz.cpl to process the CPL_STOP and
> CPL_EXIT messages (see
> http://msdn.microsoft.com/en-us/library/aa454656.aspx)

I still think there could be a bug as I have IE installed and I assume
the internet options dialog has the CPL_EXIT case and if I exit the
control panel with that applet loaded I get the following output

err:seh:setup_exception_record stack overflow 1176 bytes in thread
0017 eip 7bc78c4a esp 00240e98 stack 0x240000-0x241000-0x340000

I'm going to look tomorrow at adding the CPL_EXIT and CPL_STOP
messages to appwiz so we can get a better idea of what exactly is
going on.

Here is a backtrace from winedbg exiting the control panel with the
internet options dialog

=>1 0x7bc65f95 check_atl_thunk+0x65(rec=<is not available>,
context=0x33bff4)
[/home/sedwards/source/wine-git/dlls/ntdll/signal_i386.c:1030] in
ntdll (0x0033bfc4)
  2 0x7bc66114 raise_segv_exception+0xa4(rec=<register ESI not in
topmost frame>, context=<register EDI not in topmost frame>)
[/home/sedwards/source/wine-git/dlls/ntdll/signal_i386.c:1210] in
ntdll (0x0033bfe4)
  3 0xdeadbabe (0x0033c344)
  4 0x7eb74738 call_dialog_proc+0x68(hwnd=<register EDI not in topmost
frame>, msg=0x18, wp=0x0, lp=0x0, result=0x33c3b4, arg=0x11a0431)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:479] in user32
(0x0033c384)
  5 0x7eb77f5a WINPROC_CallDlgProcW+0x5a(func=0xffff0027,
hwnd=0x1003e, msg=0x18, wParam=<register EDI not in topmost frame>,
lParam=0x0) [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2394]
in user32 (0x0033c3c4)
  6 0x7eaff2d5 DefDlgProcW+0x85(hwnd=<register ESI not in topmost
frame>, msg=0x18, wParam=0x0, lParam=0x0)
[/home/sedwards/source/wine-git/dlls/user32/defdlg.c:488] in user32
(0x0033c3f4)
  7 0x7eb728da WINPROC_wrapper+0x1a() in user32 (0x0033c424)
  8 0x7eb72fce call_window_proc+0x6e(hwnd=<register EDI not in topmost
frame>, msg=0x18, wp=0x0, lp=0x0, result=0x33c508, arg=0x7eaff250)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
(0x0033c464)
  9 0x7eb792f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
topmost frame>, msg=0x18, wParam=0x0, lParam=0x0, result=0x33c508,
unicode=0x1, mapping=0x1)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
(0x0033c4a4)
  10 0x7eb3a8ca call_window_proc+0xca(hwnd=<register ESI not in
topmost frame>, msg=0x18, wparam=0x0, lparam=0x0, unicode=0x1,
same_thread=0x1, mapping=0x1)
[/home/sedwards/source/wine-git/dlls/user32/message.c:1639] in user32
(0x0033c514)
  11 0x7eb3d862 send_message+0x222(info=<register EDI not in topmost
frame>, res_ptr=0x33c5b0, unicode=<register ESI not in topmost frame>)
[/home/sedwards/source/wine-git/dlls/user32/message.c:2463] in user32
(0x0033c574)
  12 0x7eb3dcda SendMessageW+0x4a(hwnd=0x1003e, msg=0x18, wparam=0x0,
lparam=0x0) [/home/sedwards/source/wine-git/dlls/user32/message.c:2586]
in user32 (0x0033c5b4)
  13 0x7eb71d06 show_window+0x4d6(hwnd=0x1003e, cmd=<register ESI not
in topmost frame>)
[/home/sedwards/source/wine-git/dlls/user32/winpos.c:1046] in user32
(0x0033c624)
  14 0x7eb71e4b ShowWindow+0x3b(hwnd=<register ESI not in topmost
frame>, cmd=0x0)
[/home/sedwards/source/wine-git/dlls/user32/winpos.c:1154] in user32
(0x0033c644)
  15 0x7eb674fc DestroyWindow+0x1bc(hwnd=0x1003e)
[/home/sedwards/source/wine-git/dlls/user32/win.c:1502] in user32
(0x0033c684)
  16 0x7ea4349b PROPSHEET_CleanUp+0xcb(hwndDlg=<is not available>)
[/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:2720] in
comctl32 (0x0033c6b4)
  17 0x7ea46ef5 PROPSHEET_DialogProc+0x595(hwnd=0x10032,
uMsg=<register ESI not in topmost frame>, wParam=0x0, lParam=0x0)
[/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:3534] in
comctl32 (0x0033c9e4)
  18 0x7eb728da WINPROC_wrapper+0x1a() in user32 (0x0033ca14)
  19 0x7eb74738 call_dialog_proc+0x68(hwnd=<register EDI not in
topmost frame>, msg=0x2, wp=0x0, lp=0x0, result=0x33ca84,
arg=0x7ea46960)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:479] in user32
(0x0033ca54)
  20 0x7eb77f5a WINPROC_CallDlgProcW+0x5a(func=0xffff0026,
hwnd=0x10032, msg=0x2, wParam=<register EDI not in topmost frame>,
lParam=0x0) [/home/sedwards/source/wine-git/dlls/user32/winproc.c:2394]
in user32 (0x0033ca94)
  21 0x7eaff2d5 DefDlgProcW+0x85(hwnd=<register ESI not in topmost
frame>, msg=0x2, wParam=0x0, lParam=0x0)
[/home/sedwards/source/wine-git/dlls/user32/defdlg.c:488] in user32
(0x0033cac4)
  22 0x7eb728da WINPROC_wrapper+0x1a() in user32 (0x0033caf4)
  23 0x7eb72fce call_window_proc+0x6e(hwnd=<register EDI not in
topmost frame>, msg=0x2, wp=0x0, lp=0x0, result=0x33cbd8,
arg=0x7eaff250)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
(0x0033cb34)
  24 0x7eb792f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
topmost frame>, msg=0x2, wParam=0x0, lParam=0x0, result=0x33cbd8,
unicode=0x1, mapping=0x10032)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
(0x0033cb74)
  25 0x7eb3a8ca call_window_proc+0xca(hwnd=<register ESI not in
topmost frame>, msg=0x2, wparam=0x0, lparam=0x0, unicode=0x1,
same_thread=0x1, mapping=0x10032)
[/home/sedwards/source/wine-git/dlls/user32/message.c:1639] in user32
(0x0033cbe4)
  26 0x7eb3d862 send_message+0x222(info=<register EDI not in topmost
frame>, res_ptr=0x33cc80, unicode=<register ESI not in topmost frame>)
[/home/sedwards/source/wine-git/dlls/user32/message.c:2463] in user32
(0x0033cc44)
  27 0x7eb3dcda SendMessageW+0x4a(hwnd=0x10032, msg=0x2, wparam=0x0,
lparam=0x0) [/home/sedwards/source/wine-git/dlls/user32/message.c:2586]
in user32 (0x0033cc84)
  28 0x7eb66186 WIN_SendDestroyMsg+0x66(hwnd=<register ESI not in
topmost frame>)
[/home/sedwards/source/wine-git/dlls/user32/win.c:1436] in user32
(0x0033cce4)
  29 0x7eb67521 DestroyWindow+0x1e1(hwnd=0x10032)
[/home/sedwards/source/wine-git/dlls/user32/win.c:1540] in user32
(0x0033cd24)
  30 0x7ea448a0 PROPSHEET_PropertySheet+0x2c0(psInfo=0x141718,
unicode=<is not available>)
[/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:2803] in
comctl32 (0x0033cd84)
  31 0x7ea450cf PropertySheetW+0x1cf(lppsh=0x33cea4)
[/home/sedwards/source/wine-git/dlls/comctl32/propsheet.c:2900] in
comctl32 (0x0033cdf4)
  32 0x011aac70 (0x0033ce2c)
  33 0x011a32bd (0x0033cedc)
  34 0x011a06b0 (0x0033d0f8)
  35 0x7ed733cd Control_WndProc+0xa3d(hWnd=0x10026, wMsg=0x4e,
lParam1=0x3e8, lParam2=0x33e4a0)
[/home/sedwards/source/wine-git/dlls/shell32/control.c:501] in shell32
(0x0033e238)
  36 0x7eb728da WINPROC_wrapper+0x1a() in user32 (0x0033e268)
  37 0x7eb72fce call_window_proc+0x6e(hwnd=<register EDI not in
topmost frame>, msg=0x4e, wp=0x3e8, lp=0x33e4a0, result=0x33e34c,
arg=0x7ed72990)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
(0x0033e2a8)
  38 0x7eb792f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
topmost frame>, msg=0x4e, wParam=0x3e8, lParam=0x33e4a0,
result=0x33e34c, unicode=0x1, mapping=0x1)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
(0x0033e2e8)
  39 0x7eb3a8ca call_window_proc+0xca(hwnd=<register ESI not in
topmost frame>, msg=0x4e, wparam=0x3e8, lparam=0x33e4a0, unicode=0x1,
same_thread=0x1, mapping=0x1)
[/home/sedwards/source/wine-git/dlls/user32/message.c:1639] in user32
(0x0033e358)
  40 0x7eb3d862 send_message+0x222(info=<register EDI not in topmost
frame>, res_ptr=0x33e3f4, unicode=<register ESI not in topmost frame>)
[/home/sedwards/source/wine-git/dlls/user32/message.c:2463] in user32
(0x0033e3b8)
  41 0x7eb3dcda SendMessageW+0x4a(hwnd=0x10026, msg=0x4e,
wparam=0x3e8, lparam=0x33e4a0)
[/home/sedwards/source/wine-git/dlls/user32/message.c:2586] in user32
(0x0033e3f8)
  42 0x7ea2089b notify_hdr+0x6b(infoPtr=<register EDI not in topmost
frame>, code=0xfffffffd, pnmh=<register ESI not in topmost frame>)
[/home/sedwards/source/wine-git/dlls/comctl32/listview.c:737] in
comctl32 (0x0033e428)
  43 0x7ea2864f notify_click+0x16f(infoPtr=0x133560, code=0xfffffffd,
lvht=0x33e578) [/home/sedwards/source/wine-git/dlls/comctl32/listview.c:806]
in comctl32 (0x0033e4d8)
  44 0x7ea28955 LISTVIEW_LButtonDblClk+0xa5(infoPtr=<register EDI not
in topmost frame>, wKey=<is not available>, x=0x66, y=0x1f)
[/home/sedwards/source/wine-git/dlls/comctl32/listview.c:8557] in
comctl32 (0x0033e598)
  45 0x7ea33cbe LISTVIEW_WindowProc+0x3de(hwnd=0x1002a, uMsg=0x203,
wParam=0x1, lParam=0x1f)
[/home/sedwards/source/wine-git/dlls/comctl32/listview.c:9926] in
comctl32 (0x0033ee98)
  46 0x7eb728da WINPROC_wrapper+0x1a() in user32 (0x0033eec8)
  47 0x7eb72fce call_window_proc+0x6e(hwnd=<register EDI not in
topmost frame>, msg=0x203, wp=0x1, lp=0x1f0066, result=0x33ef78,
arg=0x7ea338e0)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:457] in user32
(0x0033ef08)
  48 0x7eb792f1 WINPROC_call_window+0xd1(hwnd=<register ESI not in
topmost frame>, msg=0x203, wParam=0x1, lParam=0x1f0066,
result=0x33ef78, unicode=0x1, mapping=0x4)
[/home/sedwards/source/wine-git/dlls/user32/winproc.c:2207] in user32
(0x0033ef48)
  49 0x7eb3a186 DispatchMessageW+0x96(msg=<register EDI not in topmost
frame>) [/home/sedwards/source/wine-git/dlls/user32/message.c:3125] in
user32 (0x0033ef88)
  50 0x7ed74177 Control_RunDLLW+0x3f7(hWnd=0x10020, hInst=0x0,
cmd=0x132408, nCmdShow=0x5)
[/home/sedwards/source/wine-git/dlls/shell32/control.c:620] in shell32
(0x0033fcc8)
  51 0x7ed7476d Control_RunDLLA+0xfd(hWnd=0x10020, hInst=0x0,
cmd=0x7ee73b43, nCmdShow=0x5)
[/home/sedwards/source/wine-git/dlls/shell32/control.c:825] in shell32
(0x0033fcf8)
  52 0x7ee735ea launch+0x3a(what=<register ESI not in topmost frame>)
[/home/sedwards/source/wine-git/programs/control/control.c:31] in
control (0x0033fd18)
  53 0x7ee73665 WinMain+0x65(hInst=0x7ee70000, hPrev=0x0,
lpszCmdLine=0x110b10, nCmdShow=0x1)
[/home/sedwards/source/wine-git/programs/control/control.c:70] in
control (0x0033fe58)
  54 0x7ee73963 main+0xa3()
[/home/sedwards/source/wine-git/dlls/winecrt0/exe_main.c:48] in
control (0x0033fed8)
  55 0x7ee7388b __wine_spec_exe_entry+0x5b(peb=0x7ffdf000)
[/home/sedwards/source/wine-git/dlls/winecrt0/exe_entry.c:36] in
control (0x0033ff08)
  56 0x7b877ef7 start_process+0xc7(arg=0x0)
[/home/sedwards/source/wine-git/dlls/kernel32/process.c:904] in
kernel32 (0x0033ffe8)


-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From meissner at suse.de  Fri Aug 22 02:59:39 2008
From: meissner at suse.de (Marcus Meissner)
Date: Fri, 22 Aug 2008 09:59:39 +0200
Subject: Spore patch to fix UI and Part descriptions
In-Reply-To: <b594ca9d0808220051i49e4cd29w65bb8cc3df9be6ea@mail.gmail.com>
References: <b594ca9d0808202349l5e00ebeck8c9ceb7aec4a623@mail.gmail.com>
	<007f01c9039b$fffc0350$fff409f0$@com>
	<d658b69e0808210751v4e618be9lbc027987c5d67233@mail.gmail.com>
	<b594ca9d0808220051i49e4cd29w65bb8cc3df9be6ea@mail.gmail.com>
Message-ID: <20080822075939.GA23398@suse.de>

On Fri, Aug 22, 2008 at 02:51:56PM +0700, Andrew Fenn wrote:
> I made a new patch this time including a test.
> 
> I put in some extra checking in SetScissorRect making sure that if
> rect was null or it was an invalid rectangle that it was returned as
> invalid as it should be.
> 
> I'm not able to do a test on windows so if anyone does one please let
> me know if there are any problems. Also please tell me if you spot any
> problems with this patch.
> 
> --- a/dlls/d3d9/device.c
> +++ b/dlls/d3d9/device.c
> @@ -746,7 +746,8 @@ static HRESULT  WINAPI  IDirect3DDevice9Impl_GetDepthStencilSurface(LPDIRECT3DDE
>          }
>      } else {
>          WARN("Call to IWineD3DDevice_GetDepthStencilSurface failed\n");
> -        *ppZStencilSurface = NULL;
> +        /* *ppZStencilSurface = NULL; */
> +        return D3DERR_NOTFOUND;
>      }
>      LeaveCriticalSection(&d3d9_cs);
>      return hr;

Again, you should likely add a LeaveCriticalSection(&d3d9_cs);
to the error return too.

Or just set hr = D3DERR_NOTFOUND; and fall through.

Ciao, Marcus


From julliard at winehq.org  Fri Aug 22 03:54:49 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 22 Aug 2008 10:54:49 +0200
Subject: user32: fix error setting in FindWindow (try 2)
In-Reply-To: <48562.34156.qm@web23208.mail.ird.yahoo.com> (Louis. Lenders's
	message of "Thu, 21 Aug 2008 06:30:45 +0000 (GMT)")
References: <48562.34156.qm@web23208.mail.ird.yahoo.com>
Message-ID: <87abf52zvq.fsf@wine.dyndns.org>

"Louis. Lenders" <xerox_xerox2000 at yahoo.co.uk> writes:

> diff --git a/dlls/user32/tests/win.c b/dlls/user32/tests/win.c
> index 1964e88..246347f 100644
> --- a/dlls/user32/tests/win.c
> +++ b/dlls/user32/tests/win.c
> @@ -4789,14 +4789,20 @@ static void test_hwnd_message(void)
>      SetLastError(0xdeadbeef);
>      found = FindWindowExA( GetDesktopWindow(), 0, 0, "message window" );
>      ok( found == 0, "found message window %p/%p\n", found, hwnd );
> -    todo_wine
> -        ok(GetLastError() == ERROR_FILE_NOT_FOUND, "ERROR_FILE_NOT_FOUND, got %d\n", GetLastError());
> +    ok(GetLastError() == ERROR_FILE_NOT_FOUND, "ERROR_FILE_NOT_FOUND, got %d\n", GetLastError());

Have you tried your test on Windows?  According to the test results
there isn't any Windows version that sets last error here.

-- 
Alexandre Julliard
julliard at winehq.org


From mstefani at redhat.com  Fri Aug 22 04:10:58 2008
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Fri, 22 Aug 2008 11:10:58 +0200
Subject: regedit 1/2: Convert key creation to unicode
In-Reply-To: <200808220047.52235.alex@thehandofagony.com>
References: <200808220047.52235.alex@thehandofagony.com>
Message-ID: <48AE82A2.6020804@redhat.com>

Alexander Nicolaysen S?rnes wrote:
> regedit 1/2: Convert key creation to unicode
Why do you add extra TCHARs then? You replace one or two with WCHAR and
then add a lot more TCHARs.


> From 2f56e158d55011ac4294d113f844c32fb998a2c2 Mon Sep 17 00:00:00 2001
> From: =?utf-8?q?Alexander=20Nicolaysen=20S=C3=B8rnes?= <alex at thehandofagony.com>
> Date: Thu, 21 Aug 2008 23:49:34 +0200
> Subject: [PATCH] regedit: Convert key creation to unicode
> 
> ---
>  programs/regedit/edit.c     |   14 +++++++-------
>  programs/regedit/framewnd.c |   13 +++++++++----
>  programs/regedit/main.h     |    4 ++--
>  programs/regedit/treeview.c |   14 +++++++++-----
>  4 files changed, 27 insertions(+), 18 deletions(-)

bye
	michael


From royshea at gmail.com  Fri Aug 22 05:35:56 2008
From: royshea at gmail.com (Roy Shea)
Date: Fri, 22 Aug 2008 03:35:56 -0700
Subject: [PATCH 1/2] mstask: Implemented CreateTrigger.
In-Reply-To: <20080821234549.GA29489@teop>
References: <20080821234549.GA29489@teop>
Message-ID: <bb6a273e0808220335m775058acp4c344254b7a25699@mail.gmail.com>

>  dlls/mstask/task.c       |    4 ++--
>  dlls/mstask/tests/task.c |    2 +-
>  2 files changed, 3 insertions(+), 3 deletions(-)

Please disregard this and the subsequent patch in the set.
Patchwatecher found a few incorrect todo_wine statements that I forgot
to remove.  A revised version of the two patches has been resubmitted.

Peace,
-Roy


From xerox_xerox2000 at yahoo.co.uk  Fri Aug 22 06:07:24 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis. Lenders)
Date: Fri, 22 Aug 2008 11:07:24 +0000 (GMT)
Subject: user32: fix error setting in FindWindow (try 2)
Message-ID: <840267.6494.qm@web23204.mail.ird.yahoo.com>





----- Original Message ----
From: Alexandre Julliard <julliard at winehq.org>
To: Louis. Lenders <xerox_xerox2000 at yahoo.co.uk>
Cc: wine-devel at winehq.org
Sent: Friday, 22 August, 2008 4:54:49 AM
Subject: Re: user32: fix error setting in FindWindow (try 2)

"Louis. Lenders" <xerox_xerox2000 at yahoo.co.uk> writes:

> diff --git a/dlls/user32/tests/win.c b/dlls/user32/tests/win.c
> index 1964e88..246347f 100644
> --- a/dlls/user32/tests/win.c
> +++ b/dlls/user32/tests/win.c
> @@ -4789,14 +4789,20 @@ static void test_hwnd_message(void)
>      SetLastError(0xdeadbeef);
>      found = FindWindowExA( GetDesktopWindow(), 0, 0, "message window" );
>      ok( found == 0, "found message window %p/%p\n", found, hwnd );
> -    todo_wine
> -        ok(GetLastError() == ERROR_FILE_NOT_FOUND, "ERROR_FILE_NOT_FOUND, got %d\n", GetLastError());
> +    ok(GetLastError() == ERROR_FILE_NOT_FOUND, "ERROR_FILE_NOT_FOUND, got %d\n", GetLastError());

>Have you tried your test on Windows?  According to the test results
>there isn't any Windows version that sets last error here.

If you're talking about the test above, that was a test written by someone else, i think it was committed on wednesday or so. I only take out the "todo_wine" there; 
i assumed that test passed on windows, as the patch was committed, but i now see on the test results page that it doesn't. 

I did run the test on windows yesterday ,  the whole console got spammed with lots of messages, and i guess i  overlooked something then ( i now see on the testpage that the failing test appears in the first lines of the spam, i only overlooked the last part in the console as i expected an eventually failing test there) 

As FindWindowEx apparently doesn't set an error, I'll have to recheck what FindWindow does on windows

Send instant messages to your online friends http://uk.messenger.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080822/1e691343/attachment.htm 

From maxime.bellenge at gmail.com  Fri Aug 22 06:37:25 2008
From: maxime.bellenge at gmail.com (=?ISO-8859-1?Q?Maxime_Belleng=E9?=)
Date: Fri, 22 Aug 2008 13:37:25 +0200
Subject: Regression with d3d: Remove IWineD3DDevice::SetHwnd.
In-Reply-To: <bb88a1ec0808220436o1cebc455l7095827e947a8da2@mail.gmail.com>
References: <bb88a1ec0808220436o1cebc455l7095827e947a8da2@mail.gmail.com>
Message-ID: <bb88a1ec0808220437x556ec0cdrbb0c9ee85d97647@mail.gmail.com>

Hi

This patch is causing a regression in the game Return to mysterious
Island. When the game start it crashes displaying the trace I added at
the end of the mail.
I'm not an expert at all with ddraw but as it crashes on a NULL
pointer, maybe there is an inconsistency between This->dest_window and
This->ddraw_window ith this patch.

Here is a link to the appdb page which contains a link to the demo of
the game. http://appdb.winehq.org/objectManager.php?sClass=version&iId=3361

Thanks

Maxime


34b37fe2411d83f1a6f3e11a7a1e4d28bd9b36ba is first bad commit
commit 34b37fe2411d83f1a6f3e11a7a1e4d28bd9b36ba
Author: Stefan D?singer <stefan at codeweavers.com>
Date:   Tue Aug 5 14:24:10 2008 -0500

   d3d: Remove IWineD3DDevice::SetHwnd.

:040000 040000 70726cbb30d4e915779d7f0897cd44227f549e3e
afda0b9ddba310280afcbe82a78ae4e2212f1801 M    dlls
:040000 040000 405e4687c093ec5c082507ce0195a7958799b4bf
fc8ba10a277dc8b364967673fb81eb08f0844897 M    include




err:wgl:internal_SetPixelFormat Invalid operation on root_window
err:d3d:CreateContext SetPixelFormat failed on HDC=0x2e8 for iPixelFormat=3
err:d3d:IWineD3DDeviceImpl_CreateAdditionalSwapChain Failed to create
a new context
fixme:ddraw:D3D7CB_CreateAdditionalSwapChain (0x19e2890) call to
IWineD3DDevice_CreateAdditionalSwapChain failed
wine: Unhandled page fault on read access to 0x00000014 at address
0x6113c944 (thread 0009), starting debugger...
Unhandled exception: page fault on read access to 0x00000014 in 32-bit
code (0x6113c944).
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_cmp (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_low (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_pow (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_mul_high (a)
fixme:dbghelp_dwarf:dwarf2_parse_variable Unsupported form for const
value srgb_sub_high (a)
Register dump:
 CS:0023 SS:002b DS:002b ES:002b FS:0063 GS:006b
 EIP:6113c944 ESP:0032ee38 EBP:0032ee50 EFLAGS:00210202(   - 00      - -RI1)
 EAX:6113c9a0 EBX:61232e98 ECX:00110048 EDX:00000002
 ESI:00000000 EDI:001379f8
Stack dump:
0x0032ee38:  00000000 6113c9a0 61233b70 61232e98
0x0032ee48:  001379f8 00000000 0032ef10 61165c7e
0x0032ee58:  001379f8 00000008 00000004 00000000
0x0032ee68:  7b88ef10 60721040 00000040 7bc63de1
0x0032ee78:  00000005 0032eeb8 0032eeb4 0032eeb0
0x0032ee88:  0032eeac 0032eea4 0032eea8 0032eea0
Backtrace:
=>1 0x6113c944 arbfp_free+0x34(iface=0x1379f8)
[/home/max/wine/wine/dlls/wined3d/arb_program_shader.c:2255] in
wined3d (0x0032ee50)
 2 0x61165c7e IWineD3DDeviceImpl_Init3D+0x25e(iface=<register ESI not
in topmost frame>, pPresentationParameters=0x32f068,
D3DCB_CreateAdditionalSwapChain=0x60987840)
[/home/max/wine/wine/dlls/wined3d/device.c:2258] in wined3d
(0x0032ef10)
 3 0x60989057 IDirectDrawImpl_CreateSurface+0xc47(iface=0x19e2890,
DDSD=0x32f12c, Surf=0xa11614, UnkOuter=(nil))
[/home/max/wine/wine/dlls/ddraw/ddraw.c:3292] in ddraw (0x0032f0c0)
 4 0x6098b29e IDirectDraw4Impl_CreateSurface+0x3e(This=<register ESI
not in topmost frame>, pSDesc=0x32f12c, ppSurface=<register EDI not in
topmost frame>, pUnkOuter=(nil))
[/home/max/wine/wine/dlls/ddraw/ddraw_thunks.c:500] in ddraw
(0x0032f0f0)
 5 0x0048c680 in rtmi (+0x8c680) (0x00000400)
 6 0x00000000 (0x00000000)
0x6113c944 arbfp_free+0x34
[/home/max/wine/wine/dlls/wined3d/arb_program_shader.c:2255] in
wined3d: movl    0x14(%esi),%eax
2255        hash_table_destroy(priv->fragment_shaders,
arbfp_free_ffpshader, &This->adapter->gl_info);
Modules:
Module    Address            Debug info    Name (82 modules)
PE      330000-  388000    Deferred        ijl15
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE      400000-  d7c000    Export          rtmi
PE    10000000-1008f000    Deferred        spr
ELF    6001f000-60155000    Deferred        libwine.so.1
ELF    60156000-6016b000    Deferred        libresolv.so.2
ELF    60322000-6032e000    Deferred        libnss_files.so.2
ELF    60612000-6075b000    Deferred        user32<elf>
 \-PE    60630000-6075b000    \               user32
ELF    6075b000-607f8000    Deferred        gdi32<elf>
 \-PE    60770000-607f8000    \               gdi32
ELF    607f8000-60849000    Deferred        advapi32<elf>
 \-PE    60800000-60849000    \               advapi32
ELF    60849000-608eb000    Deferred        ole32<elf>
 \-PE    60860000-608eb000    \               ole32
ELF    608eb000-60950000    Deferred        rpcrt4<elf>
 \-PE    60900000-60950000    \               rpcrt4
ELF    60950000-6096f000    Deferred        iphlpapi<elf>
 \-PE    60960000-6096f000    \               iphlpapi
ELF    6096f000-609c8000    Dwarf           ddraw<elf>
 \-PE    60980000-609c8000    \               ddraw
ELF    609c8000-60a00000    Deferred        dinput<elf>
 \-PE    609d0000-60a00000    \               dinput
ELF    60a00000-60a4a000    Deferred        dsound<elf>
 \-PE    60a10000-60a4a000    \               dsound
ELF    60a4a000-60adc000    Deferred        winmm<elf>
 \-PE    60a50000-60adc000    \               winmm
ELF    60adc000-60af5000    Deferred        version<elf>
 \-PE    60ae0000-60af5000    \               version
ELF    60af5000-60b09000    Deferred        lz32<elf>
 \-PE    60b00000-60b09000    \               lz32
ELF    60b09000-60b3e000    Deferred        winspool<elf>
 \-PE    60b10000-60b3e000    \               winspool
ELF    60c65000-60cfe000    Deferred        winex11<elf>
 \-PE    60c70000-60cfe000    \               winex11
ELF    60d0a000-60d18000    Deferred        libgcc_s.so.1
ELF    60d18000-60d1a000    Deferred        libnvidia-tls.so.1
ELF    60e52000-60e72000    Deferred        imm32<elf>
 \-PE    60e60000-60e72000    \               imm32
ELF    60e75000-60e7a000    Deferred        libxxf86vm.so.1
ELF    60e9c000-60ed1000    Deferred        winealsa<elf>
 \-PE    60ea0000-60ed1000    \               winealsa
ELF    60ed1000-60ee9000    Deferred        msacm32<elf>
 \-PE    60ee0000-60ee9000    \               msacm32
ELF    60eed000-60fcd000    Deferred        libasound.so.2
ELF    60fcd000-60ff4000    Deferred        msacm32<elf>
 \-PE    60fd0000-60ff4000    \               msacm32
ELF    60ff4000-61008000    Deferred        midimap<elf>
 \-PE    61000000-61008000    \               midimap
ELF    61119000-61235000    Dwarf           wined3d<elf>
 \-PE    61130000-61235000    \               wined3d
ELF    6125d000-612dd000    Deferred        opengl32<elf>
 \-PE    61270000-612dd000    \               opengl32
ELF    612f9000-6139e000    Deferred        libgl.so.1
ELF    6139e000-620de000    Deferred        libglcore.so.1
ELF    62aed000-62b13000    Deferred        dmusic<elf>
 \-PE    62af0000-62b13000    \               dmusic
ELF    7b800000-7b930000    Deferred        kernel32<elf>
 \-PE    7b820000-7b930000    \               kernel32
ELF    7bc00000-7bca5000    Deferred        ntdll<elf>
 \-PE    7bc10000-7bca5000    \               ntdll
ELF    7bf00000-7bf03000    Deferred        <wine-loader>
Threads:
process  tid      prio (all id:s are in hex)
00000008 (D) C:\Program Files\The Adventure Company\Retour sur l'?le
myst?rieuse\RtMI.exe
   00000028   15
   00000023    0
   00000009    0 <==
0000000c
   0000001d    0
   00000013    0
   00000012    0
   0000000e    0
   0000000d    0
0000000f
   00000015    0
   00000014    0
   00000011    0
   00000010    0
00000016
   00000017    0
Backtrace:
=>1 0x6113c944 arbfp_free+0x34(iface=0x1379f8)
[/home/max/wine/wine/dlls/wined3d/arb_program_shader.c:2255] in
wined3d (0x0032ee50)
 2 0x61165c7e IWineD3DDeviceImpl_Init3D+0x25e(iface=<register ESI not
in topmost frame>, pPresentationParameters=0x32f068,
D3DCB_CreateAdditionalSwapChain=0x60987840)
[/home/max/wine/wine/dlls/wined3d/device.c:2258] in wined3d
(0x0032ef10)
 3 0x60989057 IDirectDrawImpl_CreateSurface+0xc47(iface=0x19e2890,
DDSD=0x32f12c, Surf=0xa11614, UnkOuter=(nil))
[/home/max/wine/wine/dlls/ddraw/ddraw.c:3292] in ddraw (0x0032f0c0)
 4 0x6098b29e IDirectDraw4Impl_CreateSurface+0x3e(This=<register ESI
not in topmost frame>, pSDesc=0x32f12c, ppSurface=<register EDI not in
topmost frame>, pUnkOuter=(nil))
[/home/max/wine/wine/dlls/ddraw/ddraw_thunks.c:500] in ddraw
(0x0032f0f0)
 5 0x0048c680 in rtmi (+0x8c680) (0x00000400)
 6 0x00000000 (0x00000000)

From jjmckenzie51 at earthlink.net  Fri Aug 22 09:09:23 2008
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Fri, 22 Aug 2008 07:09:23 -0700 (GMT-07:00)
Subject: [PATCH] shell32 - handle WM_CLOSE in the Control Panel window
	(fixed)
Message-ID: <3507977.1219414163601.JavaMail.root@elwamui-hound.atl.sa.earthlink.net>

Vincent Povirk <madewokherd+8cd9 at gmail.com> at Aug 21, 2008 8:49 PM (MST) wrote about [PATCH] shell32 - handle WM_CLOSE in the Control Panel window (fixed)
>
>WM_CLOSE is already handled by the default window procedure,
>DefWindowProcW, which calls DestroyWindow. It's only necessary to
>override the default for WM_CLOSE if you want to prevent the window
>from being destroyed.
>
So what is the use of this case?  Is it to prevent DestroyWindow from being called or is it to insert additional code before DestroyWindow is called.  I'll have to git the current source and examine it further.  Thank you for advising of the original case, which I had not assumed was what happened on a WM_CLOSE message.

James McKenzie


From julliard at winehq.org  Fri Aug 22 09:11:14 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 22 Aug 2008 16:11:14 +0200
Subject: appwiz: fix some typos in the french resources
In-Reply-To: <5f9140a20808210959u5057e54ei95288fe24e3ffad1@mail.gmail.com>
	(David Adam's message of "Thu, 21 Aug 2008 18:59:16 +0200")
References: <5f9140a20808210959u5057e54ei95288fe24e3ffad1@mail.gmail.com>
Message-ID: <8763pt2l8d.fsf@wine.dyndns.org>

"David Adam" <david.adam.cnrs at gmail.com> writes:

> - CONTROL "Ce logiciel peut ?tre automatiquement d?sinstaller. Pour supprimer un programme ou modifier ses composants, s?lectionner le dans la liste, et cliquer sur Ajouter/Supprimer.", 1002, "STATIC", SS_LEFT | WS_CHILD | WS_VISIBLE | WS_GROUP, 40, 57, 270, 30
> + CONTROL "Ces logiciels peuvent ?tre automatiquement d?sinstaller. Pour supprimer un programme ou modifier ses composants, s?lectionner le dans la liste, et cliquer sur Ajouter/Supprimer.", 1002, "STATIC", SS_LEFT | WS_CHILD | WS_VISIBLE | WS_GROUP, 40, 57, 270, 30

While you're at it you should fix the grammar too...

-- 
Alexandre Julliard
julliard at winehq.org


From alex at thehandofagony.com  Fri Aug 22 09:22:34 2008
From: alex at thehandofagony.com (Alexander Nicolaysen =?utf-8?q?S=C3=B8rnes?=)
Date: Fri, 22 Aug 2008 16:22:34 +0200
Subject: regedit 1/2: Convert key creation to unicode
In-Reply-To: <48AE82A2.6020804@redhat.com>
References: <200808220047.52235.alex@thehandofagony.com>
	<48AE82A2.6020804@redhat.com>
Message-ID: <200808221622.34636.alex@thehandofagony.com>

> Alexander Nicolaysen S?rnes wrote:
> > regedit 1/2: Convert key creation to unicode
>
> Why do you add extra TCHARs then? You replace one or two with WCHAR and
> then add a lot more TCHARs.

Some of them are removed by patch 2/2, others were added to consistently store 
the treeview text in multi-byte chars (for now).  But looking at the treeview 
code I see that text is stored as unicode in any case; I guess I should have 
checked that beforehand. Thanks for pointing it out.



Alexander N. S?rnes


From stefan at codeweavers.com  Fri Aug 22 10:04:35 2008
From: stefan at codeweavers.com (=?UTF-8?Q?Stefan_D=C3=B6singer?=)
Date: Fri, 22 Aug 2008 10:04:35 -0500
Subject: Spore patch to fix UI and Part descriptions
In-Reply-To: <b594ca9d0808220051i49e4cd29w65bb8cc3df9be6ea@mail.gmail.com>
References: <b594ca9d0808202349l5e00ebeck8c9ceb7aec4a623@mail.gmail.com>	<007f01c9039b$fffc0350$fff409f0$@com>	<d658b69e0808210751v4e618be9lbc027987c5d67233@mail.gmail.com>
	<b594ca9d0808220051i49e4cd29w65bb8cc3df9be6ea@mail.gmail.com>
Message-ID: <01fd01c90468$642c6230$2c852690$@com>

> +    rect.right = 0;
> +    rect.top   = NULL;
> +    rect.left  = NULL;
> +    rect.bottom= 0;

NULL is (void *) 0, so this test is the same as the one above, except that the compiler may warn about an implicit cast from pointer to integer. Otherwise, this goes into the right direction.


> -----Original Message-----
> From: wine-patches-bounces at winehq.org [mailto:wine-patches-
> bounces at winehq.org] On Behalf Of Andrew Fenn
> Sent: Friday, August 22, 2008 2:52 AM
> To: H. Verbeet; Stefan D?singer
> Cc: wine-patches at winehq.org
> Subject: Re: Spore patch to fix UI and Part descriptions
> 
> I made a new patch this time including a test.
> 
> I put in some extra checking in SetScissorRect making sure that if rect
> was null or it was an invalid rectangle that it was returned as invalid
> as it should be.
> 
> I'm not able to do a test on windows so if anyone does one please let
> me know if there are any problems. Also please tell me if you spot any
> problems with this patch.
> 
> Thanks,
> Andrew



From dank at kegel.com  Fri Aug 22 12:57:03 2008
From: dank at kegel.com (Dan Kegel)
Date: Fri, 22 Aug 2008 10:57:03 -0700
Subject: Patchwatcher status
Message-ID: <a71bd89a0808221057s1862d3e3w6b47e4061221f079@mail.gmail.com>

I think I fixed the charset munging, so patches of non-english stretches
of code should work now.
That was the last big source of false failure reports, so
I'm going to enable email notification to people whose patches fail.

I'll probably clear the results page tonight to get rid of
all the bogus failure notices caused by the charset conversion bug.


From kgbricola at web.de  Fri Aug 22 13:08:31 2008
From: kgbricola at web.de (=?ISO-8859-1?Q?Rico_Sch=FCller?=)
Date: Fri, 22 Aug 2008 20:08:31 +0200
Subject: wined3d/d3d9: Set the initial scissor rect to the window size
In-Reply-To: <d658b69e0808211500h1e5927ebjc2adce73a442d31e@mail.gmail.com>
References: <48ADDD0E.2000103@web.de>
	<d658b69e0808211500h1e5927ebjc2adce73a442d31e@mail.gmail.com>
Message-ID: <48AF009F.7020709@web.de>

H. Verbeet schrieb:
> 2008/8/21 Rico Sch?ller <kgbricola at web.de>:
>   
>> +    /* Set the scissor rect values */
>> +    scissor.left=0;
>> +    scissor.right=ThisDevice->ddraw_width;
>> +    scissor.top=0;
>> +    scissor.bottom=ThisDevice->ddraw_height;
>> +    IWineD3DDevice_SetScissorRect(device, &scissor);
>> +
>>     
> Are you sure you shouldn't be using the primary swapchain's backbuffer
> dimensions?
>
>
>   
I'm not sure what exactly you mean. But the attached patch works for me 
(on wine and windows). Could you have a look at it, please. Probably I 
should improve the patch a bit.

Cheers
Rico
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: scissor6.diff
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080822/73f79e64/attachment.txt 

From hverbeet at gmail.com  Fri Aug 22 13:18:22 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 22 Aug 2008 20:18:22 +0200
Subject: wined3d/d3d9: Set the initial scissor rect to the window size
In-Reply-To: <48AF009F.7020709@web.de>
References: <48ADDD0E.2000103@web.de>
	<d658b69e0808211500h1e5927ebjc2adce73a442d31e@mail.gmail.com>
	<48AF009F.7020709@web.de>
Message-ID: <d658b69e0808221118y1718a452x9488fba008308c3@mail.gmail.com>

2008/8/22 Rico Sch?ller <kgbricola at web.de>:
> H. Verbeet schrieb:
>>
>> 2008/8/21 Rico Sch?ller <kgbricola at web.de>:
>>
>>>
>>> +    /* Set the scissor rect values */
>>> +    scissor.left=0;
>>> +    scissor.right=ThisDevice->ddraw_width;
>>> +    scissor.top=0;
>>> +    scissor.bottom=ThisDevice->ddraw_height;
>>> +    IWineD3DDevice_SetScissorRect(device, &scissor);
>>> +
>>>
>>
>> Are you sure you shouldn't be using the primary swapchain's backbuffer
>> dimensions?
>>
>>
>>
>
> I'm not sure what exactly you mean. But the attached patch works for me (on
> wine and windows). Could you have a look at it, please. Probably I should
> improve the patch a bit.
>
I'm not sure what that patch is supposed to do.

ddraw_width and ddraw_height are the width and height of the current
screen. For fullscreen applications that's the same as the backbuffer,
but for windowed applications the backbuffer is smaller. I think it
would make more sense for the initial scissor rect to be the size of
the backbuffer than the size of the screen. Also keep in mind that a
device might have multiple swapchains, not all of which might have the
same backbuffer dimensions.

From adam at tpetaccia.com  Fri Aug 22 13:41:27 2008
From: adam at tpetaccia.com (Adam Petaccia)
Date: Fri, 22 Aug 2008 14:41:27 -0400
Subject: Summer of code evaluations
In-Reply-To: <48AB53C2.2090400@gmail.com>
References: <48AB53C2.2090400@gmail.com>
Message-ID: <1219430487.19426.16.camel@belthazor-saved>

On Wed, 2008-08-20 at 01:14 +0200, Maarten Lankhorst wrote:
> Hi all,
> 
> As you may know yesterday was the pens down for summer of code 2008 
> Students are still allowed to write code, but it won't count for the 
> mentors evaluation any more.
I intend to clean up and make sure almost everything I've written can
get merged, it just may be a little slower now that school is starting.

> 
> I would like to request from the mentors to fill in the final evaluation 
> form and from the students to give a final write up: What went well? Did 
> you meet the goals you set? Did you have fun? Is there anything we can 
> do to make wines summer of code better and do you feel like you've 
> become part of the wine community?
I greatly enjoyed summer of code, and I would like to think that I
emerged a much better programmer than when I started, and yes, it was a
lot of fun. A lot of bugs I saw for Gdiplus were installer bugs, so
hopefully many more applications are installable under Wine -- but when
people discover that there may be even more bugs opened :-)

While it can be annoying to have a patchset rejected five times, it's
satisfying to fix myself it rather than see "based on a patch from...";
also I love the quality standards and peer-review that Wine has, as that
made the code a lot easier to work with, because just about everything
was in good shape when I got it, and I hope that the next person who
looks at Gdiplus will think so too.

I will try to stay a part of the Wine community, but now that Summer of
Code is done I have a lot fewer itches to scratch (Quicktime is my new
target, but I have no idea how long that will take with school).

All in all, its been a blast. I would like to thank my mentor, Lei for
helping me when I was completely stuck, Alexandre for dealing with me
over IRC when I ask "why?", and everyone else who's posted comments
saying "You can't do it like that".
> 
> I also believe that students will have to fill in a final evaluation 
> form as well, so get writing. ;-)
> 
> Cheers,
> Maarten.
> 
> 



From kgbricola at web.de  Fri Aug 22 13:46:52 2008
From: kgbricola at web.de (=?ISO-8859-15?Q?Rico_Sch=FCller?=)
Date: Fri, 22 Aug 2008 20:46:52 +0200
Subject: Spore patch to fix UI and Part descriptions
In-Reply-To: <b594ca9d0808220051i49e4cd29w65bb8cc3df9be6ea@mail.gmail.com>
References: <b594ca9d0808202349l5e00ebeck8c9ceb7aec4a623@mail.gmail.com>	<007f01c9039b$fffc0350$fff409f0$@com>	<d658b69e0808210751v4e618be9lbc027987c5d67233@mail.gmail.com>
	<b594ca9d0808220051i49e4cd29w65bb8cc3df9be6ea@mail.gmail.com>
Message-ID: <48AF099C.7000608@web.de>

Andrew Fenn schrieb:
> I made a new patch this time including a test.
>
> I put in some extra checking in SetScissorRect making sure that if
> rect was null or it was an invalid rectangle that it was returned as
> invalid as it should be.
>
> I'm not able to do a test on windows so if anyone does one please let
> me know if there are any problems. Also please tell me if you spot any
> problems with this patch.
>
> Thanks,
> Andrew
>   
> ------------------------------------------------------------------------
>
> +    RECT rect = {0, 0, 0, 0};
> +    hr = IDirect3DDevice9_SetScissorRect(device, &rect);
> +    ok(hr == D3DERR_INVALIDCALL, "Expected D3DERR_INVALIDCALL, got %08x\n",  hr);
Sorry that I led you in the wrong direction but these tests didn't pass 
on windows! Also please read the comment to the bug, where I attached my 
patch. My suggestion which I made there isn't true! The real background 
is that wine sets the default scissor rect to {0,0,0,0} but on windows 
it is set to another size, I have written a patch for that, but it looks 
like there is something incomplete (see 
http://www.winehq.org/pipermail/wine-patches/2008-August/059891.html ). 
When the game is starting it retrieves the initial value with 
GetScissorRect which is in wine the null-rect. And so nothing is 
rendered to the screen.

Cheers
Rico


From stefan at codeweavers.com  Fri Aug 22 15:06:58 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Fri, 22 Aug 2008 15:06:58 -0500
Subject: wined3d/d3d9: Set the initial scissor rect to the window size
In-Reply-To: <48AF009F.7020709@web.de>
References: <48ADDD0E.2000103@web.de>	<d658b69e0808211500h1e5927ebjc2adce73a442d31e@mail.gmail.com>
	<48AF009F.7020709@web.de>
Message-ID: <002c01c90492$a210b4f0$e6321ed0$@com>

> > Are you sure you shouldn't be using the primary swapchain's
> backbuffer
> > dimensions?
> I'm not sure what exactly you mean.
Something like this:

IWineD3DSwapChain *swapchain;
IWineD3DSurface *backbuffer;
D3DSURFACE_DESC desc;

IWineD3DDevice_GetSwapChain(device, 0, &swapchain)
IWineD3DSwapChain_GetBackBuffer(swapchain, &backbuffer);
IWineD3DSurface_GetSurfaceDesc(backbuffer, &desc);
IWineD3DSurface_Release(backbuffer);
IWineD3DSwapChain_Release(swapchain);

scissorrect = {0, 0, desc.Width, desc.Height};

Just pseudocode, please look up the exact names of the methods and members.
Maybe there's a IWineD3DDevice_GetBackBuffer method which spares you the
extra GetSwapChain call. Don't forget the release calls.

The difference between your original patch and this can be seen in Windowed
mode. I recommend to put the appropriate test into dlls/d3d9/tests/device.c
and create a Windowed device.




From kgbricola at web.de  Sat Aug 23 05:37:21 2008
From: kgbricola at web.de (=?ISO-8859-1?Q?Rico_Sch=FCller?=)
Date: Sat, 23 Aug 2008 12:37:21 +0200
Subject: wined3d/d3d9: Set the initial scissor rect to the window size
In-Reply-To: <002c01c90492$a210b4f0$e6321ed0$@com>
References: <48ADDD0E.2000103@web.de>	<d658b69e0808211500h1e5927ebjc2adce73a442d31e@mail.gmail.com>	<48AF009F.7020709@web.de>
	<002c01c90492$a210b4f0$e6321ed0$@com>
Message-ID: <48AFE861.8040509@web.de>

Stefan D?singer schrieb:
>>> Are you sure you shouldn't be using the primary swapchain's
>>>       
>> backbuffer
>>     
>>> dimensions?
>>>       
>> I'm not sure what exactly you mean.
>>     
> Something like this:
>
> IWineD3DSwapChain *swapchain;
> IWineD3DSurface *backbuffer;
> D3DSURFACE_DESC desc;
>
> IWineD3DDevice_GetSwapChain(device, 0, &swapchain)
> IWineD3DSwapChain_GetBackBuffer(swapchain, &backbuffer);
> IWineD3DSurface_GetSurfaceDesc(backbuffer, &desc);
> IWineD3DSurface_Release(backbuffer);
> IWineD3DSwapChain_Release(swapchain);
>
> scissorrect = {0, 0, desc.Width, desc.Height};
>
> Just pseudocode, please look up the exact names of the methods and members.
> Maybe there's a IWineD3DDevice_GetBackBuffer method which spares you the
> extra GetSwapChain call. Don't forget the release calls.
>
> The difference between your original patch and this can be seen in Windowed
> mode. I recommend to put the appropriate test into dlls/d3d9/tests/device.c
> and create a Windowed device.
>
>
>
>
>
>   
Here is the patch which checks the default scissorrect. I don't know if 
the resolutions are to big (1024x768). And I don't know if the stuff 
with the second swapchain (swapchain1) is correct. It produces this 
error in wine: "err:d3d:IWineD3DDeviceImpl_SetupFullscreenWindow 
(0x1e7370): Want to change the window parameters of HWND 0x20034, but 
another style is stored for restoration afterwards".

So comments are welcome.

Cheers
Rico

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: scissor_gut2.patch
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080823/93d87995/attachment.txt 

From hverbeet at gmail.com  Sat Aug 23 06:05:22 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sat, 23 Aug 2008 13:05:22 +0200
Subject: [10/10] WineD3D: Sort out some limit confusion
In-Reply-To: <000301c90499$5e662670$1b327350$@com>
References: <000301c90499$5e662670$1b327350$@com>
Message-ID: <d658b69e0808230405j6e2a0c5ai48830357a4d3595a@mail.gmail.com>

2008/8/22 Stefan D?singer <stefan at codeweavers.com>:
> +            glGetIntegerv(GL_MAX_TEXTURE_COORDS, &gl_max);
> +            gl_info->max_texture_coords = min(MAX_TEXTURES, gl_max);
> +            TRACE_(d3d_caps)("Max texture coords: %d\n", gl_info->max_texture_coords);
I don't know if this is intentional or not, but did you mean to use
gl_info->max_textures here?

> @@ -3172,7 +3172,7 @@ static void loadTexCoords(IWineD3DStateBlockImpl *stateblock, WineDirect3DVertex
>          return;
>      }
>
> -    for (textureNo = 0; textureNo < GL_LIMITS(texture_stages); ++textureNo) {
> +    for (textureNo = 0; textureNo < GL_LIMITS(texture_coords); ++textureNo) {
>          int coordIdx = stateblock->textureState[textureNo][WINED3DTSS_TEXCOORDINDEX];
>
>          mapped_stage = stateblock->wineD3DDevice->texUnitMap[textureNo];
Shouldn't that be testing mapped_stage against
GL_LIMITS(texture_coords) instead?

> -    if (GL_SUPPORT(NV_REGISTER_COMBINERS)) {
> -        /* The number of the mapped stages increases monotonically, so it's fine to use the last used one */
> -        for (textureNo = mapped_stage + 1; textureNo < GL_LIMITS(textures); ++textureNo) {
> -            GL_EXTCALL(glMultiTexCoord4fARB(GL_TEXTURE0_ARB + textureNo, 0, 0, 0, 1));
> -        }
> -    }
I'm probably missing something here, but why is it safe to remove that?

> @@ -420,7 +420,7 @@ static void drawStridedSlow(IWineD3DDevice *iface, WineDirect3DVertexStridedData
>          }
>
>          /* Texture coords --------------------------- */
> -        for (textureNo = 0; textureNo < GL_LIMITS(texture_stages); ++textureNo) {
> +        for (textureNo = 0; textureNo < GL_LIMITS(texture_coords); ++textureNo) {
>
>              if (!GL_SUPPORT(ARB_MULTITEXTURE) && textureNo > 0) {
>                  FIXME("Program using multiple concurrent textures which this opengl implementation doesn't support\n");
Similar to above, shouldn't this test texture_idx against
GL_LIMITS(texture_coords) instead of textureNo?

In the bigger picture, these various limits are pretty tricky to get
right, I wonder if it might make more sense to handle most of this
stuff in the tex unit map instead. That way we could be sure that if a
stage is mapped to a sampler that sampler is safe to use.

From hverbeet at gmail.com  Sat Aug 23 06:06:19 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sat, 23 Aug 2008 13:06:19 +0200
Subject: [10/10] WineD3D: Sort out some limit confusion
In-Reply-To: <d658b69e0808230405j6e2a0c5ai48830357a4d3595a@mail.gmail.com>
References: <000301c90499$5e662670$1b327350$@com>
	<d658b69e0808230405j6e2a0c5ai48830357a4d3595a@mail.gmail.com>
Message-ID: <d658b69e0808230406v84aa379uc8e5f9e3bf7111af@mail.gmail.com>

2008/8/23 Henri Verbeet <hverbeet at gmail.com>:
> 2008/8/22 Stefan D?singer <stefan at codeweavers.com>:
>> +            glGetIntegerv(GL_MAX_TEXTURE_COORDS, &gl_max);
>> +            gl_info->max_texture_coords = min(MAX_TEXTURES, gl_max);
>> +            TRACE_(d3d_caps)("Max texture coords: %d\n", gl_info->max_texture_coords);
> I don't know if this is intentional or not, but did you mean to use
> gl_info->max_textures here?
Just to clarify, "instead of MAX_TEXTURES".

From hverbeet at gmail.com  Sat Aug 23 06:28:07 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sat, 23 Aug 2008 13:28:07 +0200
Subject: wined3d/d3d9: Set the initial scissor rect to the window size
In-Reply-To: <48AFE861.8040509@web.de>
References: <48ADDD0E.2000103@web.de>
	<d658b69e0808211500h1e5927ebjc2adce73a442d31e@mail.gmail.com>
	<48AF009F.7020709@web.de> <002c01c90492$a210b4f0$e6321ed0$@com>
	<48AFE861.8040509@web.de>
Message-ID: <d658b69e0808230428t6ef4cb2dx73c63352d84665c@mail.gmail.com>

2008/8/23 Rico Sch?ller <kgbricola at web.de>:
> Here is the patch which checks the default scissorrect. I don't know if the
> resolutions are to big (1024x768). And I don't know if the stuff with the
> second swapchain (swapchain1) is correct. It produces this error in wine:
> "err:d3d:IWineD3DDeviceImpl_SetupFullscreenWindow (0x1e7370): Want to change
> the window parameters of HWND 0x20034, but another style is stored for
> restoration afterwards".
>
Devices like the Eee PC only support up to 800x480, but in that case
creating the device should simply fail, and skip the test, so in that
regard the test should be fine. The error that gets printed in
probably a flaw in our handling of multiple swapchains. As long as the
test doesn't fail because of it it's probably not a concern for now.
You should check the return values for CreateAdditionallSwapChain and
GetScissorRect though.

From dank at kegel.com  Sat Aug 23 07:05:47 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 23 Aug 2008 05:05:47 -0700
Subject: Fwd: Patchwatcher: failed regression tests: d3dx8: replace loops with
	explicit computations to make them faster [PATCH] d3dx8:
	replace loops by explicit computations
In-Reply-To: <E1KWjuQ-0000vE-8w@planet>
References: <E1KWjuQ-0000vE-8w@planet>
Message-ID: <a71bd89a0808230505r50dbf316qb9da07f07f37d56a@mail.gmail.com>

Patchwatcher notes that the conformance test fails here:

../../../tools/runtest -q -P wine -M d3dx8.dll -T ../../.. -p
d3dx8_test.exe.so math.c && touch math.ok
math.c:442: Test failed: Expected matrix=
(-0.214800,1.311600,0.475200,0.000000
 0.950400,-0.883600,0.924400,0.000000
 1.021200,0.193600,-1.358800,0.000000
 18.298500,-29.624001,15.683499,1.000000
)

Got matrix=
(-0.214800,1.311600,0.475200,0.000000
 0.950401,-0.883601,0.924400,0.000000
 1.021204,0.193593,-1.358803,0.000000
 18.298538,-29.624159,15.683425,1.000000)

Looks like rounding errors, but one way or another, you have to take
care of that.

Also: did you benchmark this change to verify it actually made
things faster?  Unrolling loops is no longer as sure-fire a win as
it used to be.  I'm inclined to prefer the more compact, clear
loop unless there's hard evidence it's > 1% slower.
- Dan


---------- Forwarded message ----------
From:  <patchwatcher at kegel.com>
Date: Fri, Aug 22, 2008 at 8:35 PM
Subject: Patchwatcher: failed regression tests: d3dx8: replace loops
with explicit computations to make them faster [PATCH] d3dx8: replace
loops by explicit computations
To: dank at kegel.com


Hi!  This is the experimental automated wine patchwatcher thingy.
The latest git sources were built and tested with your patch
"d3dx8: replace loops with explicit computations to make them faster
[PATCH] d3dx8: replace loops by explicit computations"
Result: the patch failed regression tests.

You can retrieve the full build results at
 http://kegel.com/wine/patchwatcher/results/264.log
and see the patch as parsed at
 http://kegel.com/wine/patchwatcher/results/264.txt
See
 http://kegel.com/wine/patchwatcher/results
for more info.


From kgbricola at web.de  Sat Aug 23 07:18:59 2008
From: kgbricola at web.de (=?UTF-8?B?UmljbyBTY2jDvGxsZXI=?=)
Date: Sat, 23 Aug 2008 14:18:59 +0200
Subject: wined3d/d3d9: Set the initial scissor rect to the window size
In-Reply-To: <d658b69e0808230428t6ef4cb2dx73c63352d84665c@mail.gmail.com>
References: <48ADDD0E.2000103@web.de>	
	<d658b69e0808211500h1e5927ebjc2adce73a442d31e@mail.gmail.com>	
	<48AF009F.7020709@web.de> <002c01c90492$a210b4f0$e6321ed0$@com>	
	<48AFE861.8040509@web.de>
	<d658b69e0808230428t6ef4cb2dx73c63352d84665c@mail.gmail.com>
Message-ID: <48B00033.6080105@web.de>

Henri Verbeet schrieb:
> 2008/8/23 Rico Sch?ller <kgbricola at web.de>:
>   
>> Here is the patch which checks the default scissorrect. I don't know if the
>> resolutions are to big (1024x768). And I don't know if the stuff with the
>> second swapchain (swapchain1) is correct. It produces this error in wine:
>> "err:d3d:IWineD3DDeviceImpl_SetupFullscreenWindow (0x1e7370): Want to change
>> the window parameters of HWND 0x20034, but another style is stored for
>> restoration afterwards".
>>
>>     
> Devices like the Eee PC only support up to 800x480, but in that case
> creating the device should simply fail, and skip the test, so in that
> regard the test should be fine. The error that gets printed in
> probably a flaw in our handling of multiple swapchains. As long as the
> test doesn't fail because of it it's probably not a concern for now.
> You should check the return values for CreateAdditionallSwapChain and
> GetScissorRect though.
>   
Thanks for the answer. I'll add a check for the return values.


From andrewfenn at gmail.com  Sat Aug 23 07:46:42 2008
From: andrewfenn at gmail.com (Andrew Fenn)
Date: Sat, 23 Aug 2008 19:46:42 +0700
Subject: Spore patch to fix UI and Part descriptions
In-Reply-To: <48AF099C.7000608@web.de>
References: <b594ca9d0808202349l5e00ebeck8c9ceb7aec4a623@mail.gmail.com>
	<007f01c9039b$fffc0350$fff409f0$@com>
	<d658b69e0808210751v4e618be9lbc027987c5d67233@mail.gmail.com>
	<b594ca9d0808220051i49e4cd29w65bb8cc3df9be6ea@mail.gmail.com>
	<48AF099C.7000608@web.de>
Message-ID: <b594ca9d0808230546o6dedf915rf119c1365f209048@mail.gmail.com>

I'm alittle confused, are you suggesting that if SetScissorRect
receives a null value that if should default to the window size? or do
you mean that perhaps GetScissorRect should call SetScissorRect and
return a correct value instead of null?

If I understand you correctly it sounds like another problem and I
think that checking should still be done on SetScissorRect as
currently there is no checking being done where as the documentation
states that D3DERR_INVALIDCALL is returned if SetScissorRect gets an
invalid or null rectangle.

I'm currently rewriting the tests and patch so I'll let you know when I am done.

PS: I just looked at wine's implementation of GetScissorRect and it
looks wrong as well. It should be returning D3DERR_INVALIDCALL if
there is no value and perhaps maybe if scissor test hasn't been
enabled.

On Sat, Aug 23, 2008 at 1:46 AM, Rico Sch?ller <kgbricola at web.de> wrote:
> Andrew Fenn schrieb:
>> I made a new patch this time including a test.
>>
>> I put in some extra checking in SetScissorRect making sure that if
>> rect was null or it was an invalid rectangle that it was returned as
>> invalid as it should be.
>>
>> I'm not able to do a test on windows so if anyone does one please let
>> me know if there are any problems. Also please tell me if you spot any
>> problems with this patch.
>>
>> Thanks,
>> Andrew
>>
>> ------------------------------------------------------------------------
>>
>> +    RECT rect = {0, 0, 0, 0};
>> +    hr = IDirect3DDevice9_SetScissorRect(device, &rect);
>> +    ok(hr == D3DERR_INVALIDCALL, "Expected D3DERR_INVALIDCALL, got %08x\n",  hr);
> Sorry that I led you in the wrong direction but these tests didn't pass
> on windows! Also please read the comment to the bug, where I attached my
> patch. My suggestion which I made there isn't true! The real background
> is that wine sets the default scissor rect to {0,0,0,0} but on windows
> it is set to another size, I have written a patch for that, but it looks
> like there is something incomplete (see
> http://www.winehq.org/pipermail/wine-patches/2008-August/059891.html ).
> When the game is starting it retrieves the initial value with
> GetScissorRect which is in wine the null-rect. And so nothing is
> rendered to the screen.
>
> Cheers
> Rico
>
>
>

From bunglehead at gmail.com  Sat Aug 23 08:28:46 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sat, 23 Aug 2008 17:28:46 +0400
Subject: Crosstest building question
Message-ID: <48B0108E.7060505@gmail.com>

I have a problem building crosstest for GDI+ call GdipFillClosedCurve2.

I've got the following:

graphics.cross.o: In function 
`func_graphics':/home/mrlarch/wine/dlls/gdiplus/tests/graphics.c:593: 
undefined reference to `_GdipFillClosedCurve2 at 24'
collect2: ld returned 1 exit status
make[2]: *** [gdiplus_crosstest.exe] Error 1
make[2]: Leaving directory `/home/mrlarch/wine/dlls/gdiplus/tests'
make[1]: *** [gdiplus/tests/__crosstest__] Error 2
make[1]: Leaving directory `/home/mrlarch/wine/dlls'
make: *** [dlls/__crosstest__] Error 2

This never happened with other calls yet.

Before this I've done 'make && make install' for library and make clean 
for 'tests' directory.
Actually in definition file I have now -- GdipFillClosedCurve2 at 20 @216.
I'm able to build ordinary (not cross) tests without any errors.

I think the question is why reference name differs from .def file?



From Stefan.Leichter at camline.com  Sat Aug 23 08:53:19 2008
From: Stefan.Leichter at camline.com (Stefan Leichter)
Date: Sat, 23 Aug 2008 15:53:19 +0200
Subject: Crosstest building question
In-Reply-To: <48B0108E.7060505@gmail.com>
References: <48B0108E.7060505@gmail.com>
Message-ID: <200808231553.19483.Stefan.Leichter@camline.com>

Am Saturday 23 August 2008 15:28 schrieb Nikolay Sivov:
> I have a problem building crosstest for GDI+ call GdipFillClosedCurve2.
>
> I've got the following:
>
> graphics.cross.o: In function
> `func_graphics':/home/mrlarch/wine/dlls/gdiplus/tests/graphics.c:593:
> undefined reference to `_GdipFillClosedCurve2 at 24'
> collect2: ld returned 1 exit status
> make[2]: *** [gdiplus_crosstest.exe] Error 1
> make[2]: Leaving directory `/home/mrlarch/wine/dlls/gdiplus/tests'
> make[1]: *** [gdiplus/tests/__crosstest__] Error 2
> make[1]: Leaving directory `/home/mrlarch/wine/dlls'
> make: *** [dlls/__crosstest__] Error 2
>
> This never happened with other calls yet.
>
> Before this I've done 'make && make install' for library and make clean
> for 'tests' directory.
> Actually in definition file I have now -- GdipFillClosedCurve2 at 20 @216.
> I'm able to build ordinary (not cross) tests without any errors.
>
> I think the question is why reference name differs from .def file?

Looks like there is an error in dlls/gdiplus/gdiplus.spec
You have to change the two line like listed below.

@ stdcall GdipFillClosedCurve2(ptr ptr ptr long long long)
@ stdcall GdipFillClosedCurve2I(ptr ptr ptr long long long)

Bye Stefan


From bunglehead at gmail.com  Sat Aug 23 08:59:15 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sat, 23 Aug 2008 17:59:15 +0400
Subject: Crosstest building question
In-Reply-To: <200808231553.19483.Stefan.Leichter@camline.com>
References: <48B0108E.7060505@gmail.com>
	<200808231553.19483.Stefan.Leichter@camline.com>
Message-ID: <48B017B3.7070808@gmail.com>

Stefan Leichter wrote:
> Am Saturday 23 August 2008 15:28 schrieb Nikolay Sivov:
>   
>> I have a problem building crosstest for GDI+ call GdipFillClosedCurve2.
>>
>> I've got the following:
>>
>> graphics.cross.o: In function
>> `func_graphics':/home/mrlarch/wine/dlls/gdiplus/tests/graphics.c:593:
>> undefined reference to `_GdipFillClosedCurve2 at 24'
>> collect2: ld returned 1 exit status
>> make[2]: *** [gdiplus_crosstest.exe] Error 1
>> make[2]: Leaving directory `/home/mrlarch/wine/dlls/gdiplus/tests'
>> make[1]: *** [gdiplus/tests/__crosstest__] Error 2
>> make[1]: Leaving directory `/home/mrlarch/wine/dlls'
>> make: *** [dlls/__crosstest__] Error 2
>>
>> This never happened with other calls yet.
>>
>> Before this I've done 'make && make install' for library and make clean
>> for 'tests' directory.
>> Actually in definition file I have now -- GdipFillClosedCurve2 at 20 @216.
>> I'm able to build ordinary (not cross) tests without any errors.
>>
>> I think the question is why reference name differs from .def file?
>>     
>
> Looks like there is an error in dlls/gdiplus/gdiplus.spec
> You have to change the two line like listed below.
>
> @ stdcall GdipFillClosedCurve2(ptr ptr ptr long long long)
> @ stdcall GdipFillClosedCurve2I(ptr ptr ptr long long long)
>
> Bye Stefan
>
>   
Thanks. Of course it is. I've looked twice at it and didn't spot. Thanks 
again.


From dank at kegel.com  Sat Aug 23 09:03:03 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 23 Aug 2008 07:03:03 -0700
Subject: New winetricks 20080823: add non-activex-plugin for flash, work
	around indeo installer bug;
	updated divx, liberation, kdewin, directx9, ffdshow.
Message-ID: <a71bd89a0808230703n5d523289n5da62e298e7008e4@mail.gmail.com>

Just a bunch of little updates and fixes.  Thanks to everyone who
pointed out the issues.

Online as always at
 http://kegel.com/wine/winetricks
or
 http://winezeug.googlecode.com

Changes since 20080710:

r164:
divx updated, change path and sha1sum to match.
Thanks to Graham Inggs for the nudge.

r163:
Update liberation to 1.04.  Thanks to Graham Inggs for the nudge.
Uses the probably-gnu-specific --strip option to tar to get
the fonts in the right place... but everybody's using gnu tar 1.15 or
later, right?

r162:
Update kdewin to 0.9.3-1.  Thanks to Graham Inggs for the nudge.

r161:
Register indeo codec harder; thanks to 414N for the tip.

r112:
Update directx9 to june 2008 release; thanks to Paul Drain for the tip.

r111:
Add non-activex flash plugin

r110:
Update ffdshow.  Update version.

r107:
Add a little error checking, and missing quotes in one spot.


From kgbricola at web.de  Sat Aug 23 09:18:54 2008
From: kgbricola at web.de (=?UTF-8?B?UmljbyBTY2jDvGxsZXI=?=)
Date: Sat, 23 Aug 2008 16:18:54 +0200
Subject: Spore patch to fix UI and Part descriptions
In-Reply-To: <b594ca9d0808230546o6dedf915rf119c1365f209048@mail.gmail.com>
References: <b594ca9d0808202349l5e00ebeck8c9ceb7aec4a623@mail.gmail.com>	
	<007f01c9039b$fffc0350$fff409f0$@com>	
	<d658b69e0808210751v4e618be9lbc027987c5d67233@mail.gmail.com>	
	<b594ca9d0808220051i49e4cd29w65bb8cc3df9be6ea@mail.gmail.com>	
	<48AF099C.7000608@web.de>
	<b594ca9d0808230546o6dedf915rf119c1365f209048@mail.gmail.com>
Message-ID: <48B01C4E.1030803@web.de>

Andrew Fenn schrieb:
> I'm alittle confused, are you suggesting that if SetScissorRect
> receives a null value that if should default to the window size? or do
> you mean that perhaps GetScissorRect should call SetScissorRect and
> return a correct value instead of null?
>   
No. {0,0,0,0} is a valid scissorrect. You could set it and get it. It is 
valid. Wines default scissorect is wrong, it has to be the size of the 
first swapchains backbuffer. I have a patch for this one. I'll send it 
later today.
> If I understand you correctly it sounds like another problem and I
> think that checking should still be done on SetScissorRect as
> currently there is no checking being done where as the documentation
> states that D3DERR_INVALIDCALL is returned if SetScissorRect gets an
> invalid or null rectangle.
>   
Probably, checking should be done for invalid scissorrect values.
> I'm currently rewriting the tests and patch so I'll let you know when I am done.
>
> PS: I just looked at wine's implementation of GetScissorRect and it
> looks wrong as well. It should be returning D3DERR_INVALIDCALL if
> there is no value and perhaps maybe if scissor test hasn't been
> enabled.
There is always a scissorrect value! I don't know if there is a chance 
to get a D3DERR_INVALIDCALL from the GetScissorRect-function.

Cheers
Rico


From dank at kegel.com  Sat Aug 23 09:50:46 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 23 Aug 2008 07:50:46 -0700
Subject: [Patch] 0001-Support-for-winscard.dll.patch
Message-ID: <a71bd89a0808230750g46d36c21tebc202836d0ddd52@mail.gmail.com>

Heiko wrote:
> This is my first patch using git and also for wine.
>
> Please check it and let me know which things can be made better.

Hi!  Welcome to Wine!

You probably need to include a better description,
and some conformance tests would help, too.
(They should do basic error checking at least,
and should skip checks that really need hardware
if the required hardware isn't present.)

Also, your patch failed to apply; see
http://kegel.com/wine/patchwatcher/results/

You can avoid the particular problem by not including a diff for 'configure'
in the patch; the diff for configure.ac suffices.

We have lots of pages (way too many) of advice for how to send
patches at winehq.org, but that bit of advice doesn't seem to
be in any of them yet :-(
http://www.winehq.org/site/sending_patches
http://wiki.winehq.org/DeveloperFaq
http://winehq.org/site/docs/winedev-guide/codingpractice

It does show up in
http://wiki.jswindle.com/index.php/Coding_Hints:Using_Diff

- Dan


From wine.dev at web.de  Sat Aug 23 10:02:37 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Sat, 23 Aug 2008 17:02:37 +0200
Subject: winetricks: add ie6 verb
In-Reply-To: <19e31a080808181011r5fdaa473qf98203531a7a8343@mail.gmail.com>
References: <19e31a080808181011r5fdaa473qf98203531a7a8343@mail.gmail.com>
Message-ID: <1219503757.5793.29.camel@p4.lan>

On Mo, 2008-08-18 at 13:11 -0400, Steven Edwards wrote:

> +load_ie6() {
Nice Idea.

> +    # Installing Core Fonts"
> +    load_corefonts
Which Font is required (please fill bug reports)
Which Font is optional?

> +    # Installing Richedit 2.0 Library"
> +    load_riched20
What is needed in the builtin version?
Please fill bug reports.

> +    # Installing Richedit 3.0 Library"
> +    load_riched30
> +    # Installing Microsoft Line Services"
> +    load_msls31
Hm. Not present in Wine yet.

> +
> +    # Change the override to the native so we are sure we use and
> register them
> +    override_dlls native,builtin
>  itircl itss mlang msimtf riched20 riched32 shdoclc shlwapi urlmon
Do you need the override for Installation or for running IE6?
What is needed in the builtin versions?
Please fill bug reports.

> +    # Remove the fake dlls from the existing WINEPREFIX
> +    mv $WINEPREFIX/drive_c/"Program Files"/"Internet
> Explorer"/iexplore.exe $WINEPREFIX/drive_c/"Program Files"/"Internet
> Explorer"/iexplore.exe.bak
That's wrong for every Language != english.
What you need is already there: "$programfilesdir_unix"

> +    # Work around DLL registration bug
> +    cd $WINEPREFIX/drive_c/windows/system32/
> +    for i in *.dll *.ocx; do regsvr32 /i $i; done
Which dll/ocx need this?
Is this a Wine bug (please fill bug reports) or an IE bug?
For most files in this directory, your code is wrong.
Your code depends on the case of the extensions.


-- 
By by ... Detlef




From dank at kegel.com  Sat Aug 23 10:23:07 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 23 Aug 2008 08:23:07 -0700
Subject: [Patch] 0001-Support-for-winscard.dll.patch
In-Reply-To: <a71bd89a0808230750g46d36c21tebc202836d0ddd52@mail.gmail.com>
References: <a71bd89a0808230750g46d36c21tebc202836d0ddd52@mail.gmail.com>
Message-ID: <a71bd89a0808230823p4eb05a13n6f4ac2f1f04847b7@mail.gmail.com>

On Sat, Aug 23, 2008 at 7:50 AM, Dan Kegel <dank at kegel.com> wrote:
> You can avoid the particular problem by not including a diff for 'configure'
> in the patch; the diff for configure.ac suffices.
>
> We have lots of pages (way too many) of advice for how to send
> patches at winehq.org, but that bit of advice doesn't seem to
> be in any of them yet :-(
> http://www.winehq.org/site/sending_patches
> http://wiki.winehq.org/DeveloperFaq
> http://winehq.org/site/docs/winedev-guide/codingpractice
>
> It does show up in
> http://wiki.jswindle.com/index.php/Coding_Hints:Using_Diff

and somewhat in
http://wiki.winehq.org/Developers-Hints#head-30a7f7f51ce0e42b4141749c9832bae9f7957260


From zgold550 at gmail.com  Sat Aug 23 10:30:02 2008
From: zgold550 at gmail.com (Zachary Goldberg)
Date: Sat, 23 Aug 2008 11:30:02 -0400
Subject: Patchwatcher: failed regression tests: d3dx8: replace loops with
	explicit computations to make them faster [PATCH] d3dx8:
	replace loops by explicit computations
In-Reply-To: <a71bd89a0808230505r50dbf316qb9da07f07f37d56a@mail.gmail.com>
References: <E1KWjuQ-0000vE-8w@planet>
	<a71bd89a0808230505r50dbf316qb9da07f07f37d56a@mail.gmail.com>
Message-ID: <b050a5e70808230830n79323c75hebb9c0b86c29609e@mail.gmail.com>

On Sat, Aug 23, 2008 at 8:05 AM, Dan Kegel <dank at kegel.com> wrote:
> Patchwatcher notes that the conformance test fails here:

> Also: did you benchmark this change to verify it actually made
> things faster?  Unrolling loops is no longer as sure-fire a win as
> it used to be.  I'm inclined to prefer the more compact, clear
> loop unless there's hard evidence it's > 1% slower.
> - Dan
>

I'de bet good money that GCC already unrolled those loops with -O2 and
greater.  I do agree with Dan though that doing a test on a standard
intel core machine and a k8 machine to see what reality looks like is
best.


From frechdachs69 at sofortsurf.de  Sat Aug 23 10:45:59 2008
From: frechdachs69 at sofortsurf.de (frechdachs69)
Date: Sat, 23 Aug 2008 17:45:59 +0200
Subject: [Patch] 0001-Support-for-winscard.dll.patch
In-Reply-To: <a71bd89a0808230750g46d36c21tebc202836d0ddd52@mail.gmail.com>
References: <a71bd89a0808230750g46d36c21tebc202836d0ddd52@mail.gmail.com>
Message-ID: <200808231745.59912.frechdachs69@sofortsurf.de>

Am Samstag, 23. August 2008 16:50:46 schrieb Dan Kegel:
> Heiko wrote:
> > This is my first patch using git and also for wine.
> >
> > Please check it and let me know which things can be made better.
>
> Hi!  Welcome to Wine!
>
> You probably need to include a better description,
> and some conformance tests would help, too.

As a first description: I am starting with winscard.dll support. I started 
with this change about two months ago but got distracted from further 
studying it so I have thought it might be better to offer the so far done 
stuff - to avoid getting it lost in the flow of time.

I am trying to prepare the winscard.dll stuff for an application written by 
me. Probably I can extract some smartcard-using code (after my application 
works) as a conformance test.

The first task to make my application run is being able to list the smartcard 
readers attached to the system. So far I only get the name of the smartcard 
reader. But I also need vendor, user friendly name, serial number, model and 
whether a smartcard is present. Still missing ...
This may be due to my patch or to things missing in or not understood in 
pcsc-lite - not clear so far.

> (They should do basic error checking at least,
> and should skip checks that really need hardware
> if the required hardware isn't present.)
>
> Also, your patch failed to apply; see
> http://kegel.com/wine/patchwatcher/results/
>
> You can avoid the particular problem by not including a diff for
> 'configure' in the patch; the diff for configure.ac suffices.

Okay. Shall I offer a new patch? How to do this then? Is this the only problem 
with the patch (syntactically)? To mention ... I am a git rookie ...

>
> We have lots of pages (way too many) of advice for how to send
> patches at winehq.org, but that bit of advice doesn't seem to
> be in any of them yet :-(
> http://www.winehq.org/site/sending_patches
> http://wiki.winehq.org/DeveloperFaq
> http://winehq.org/site/docs/winedev-guide/codingpractice
>
> It does show up in
> http://wiki.jswindle.com/index.php/Coding_Hints:Using_Diff
>

I am going to have a more thorough look into the links.

> - Dan

Thanks for your feedback.

Heiko



From dank at kegel.com  Sat Aug 23 11:06:20 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 23 Aug 2008 09:06:20 -0700
Subject: [Patch] 0001-Support-for-winscard.dll.patch
In-Reply-To: <200808231745.59912.frechdachs69@sofortsurf.de>
References: <a71bd89a0808230750g46d36c21tebc202836d0ddd52@mail.gmail.com>
	<200808231745.59912.frechdachs69@sofortsurf.de>
Message-ID: <a71bd89a0808230906k4063f4aeud380417cc0dbe14b@mail.gmail.com>

On Sat, Aug 23, 2008 at 8:45 AM, frechdachs69 <frechdachs69 at sofortsurf.de>
> I am trying to prepare the winscard.dll stuff for an application written by
> me. Probably I can extract some smartcard-using code (after my application
> works) as a conformance test.

It's a common misconception that tests should be
written after the code.   In Wine, it's best to write
them *before* the code, and get the tests working
on Windows.  You can even submit the tests first
before even starting on the code.   Incremental
development - improve the tests a bit, then fix the
code to pass the tests - is a good way to go.
Initial tests can be really trivial, just checking superficial
error behavior.
See also http://en.wikipedia.org/wiki/Test-driven_development
Believe it or not, this makes development go faster!

> The first task to make my application run is being able to list the smartcard
> readers attached to the system. So far I only get the name of the smartcard
> reader. But I also need vendor, user friendly name, serial number, model and
> whether a smartcard is present. Still missing ...
> This may be due to my patch or to things missing in or not understood in
> pcsc-lite - not clear so far.

That's good to know.  Next time you submit the patch,
include a three-line summary of the above, say.   Also
mention which functions you're improving, and how
complete they are.

> Okay. Shall I offer a new patch? How to do this then? Is this the only problem
> with the patch (syntactically)? To mention ... I am a git rookie ...

The subject line should have said something like
  winscard: implement first few functions
When you repost after improving a patch, append (try 2) to the subject, e.g.
  winscard: implement first few functions (try 2)

but I would include a couple tests when you resend; mark
them with todo_wine if they don't pass yet on Wine.
- Dan


From frechdachs69 at sofortsurf.de  Sat Aug 23 11:52:14 2008
From: frechdachs69 at sofortsurf.de (frechdachs69)
Date: Sat, 23 Aug 2008 18:52:14 +0200
Subject: [Patch] 0001-Support-for-winscard.dll.patch
In-Reply-To: <a71bd89a0808230906k4063f4aeud380417cc0dbe14b@mail.gmail.com>
References: <a71bd89a0808230750g46d36c21tebc202836d0ddd52@mail.gmail.com>
	<200808231745.59912.frechdachs69@sofortsurf.de>
	<a71bd89a0808230906k4063f4aeud380417cc0dbe14b@mail.gmail.com>
Message-ID: <200808231852.14521.frechdachs69@sofortsurf.de>

Am Samstag, 23. August 2008 18:06:20 schrieb Dan Kegel:
[snip]
> > Okay. Shall I offer a new patch? How to do this then? Is this the only
> > problem with the patch (syntactically)? To mention ... I am a git rookie
> > ...
>
> The subject line should have said something like
>   winscard: implement first few functions
> When you repost after improving a patch, append (try 2) to the subject,
> e.g. winscard: implement first few functions (try 2)
>
> but I would include a couple tests when you resend; mark
> them with todo_wine if they don't pass yet on Wine.
> - Dan

That will take some time since I just had a look at the pcsc-lite stuff ... 
and its completely missing the information I need in the CCID driver code. So 
for the special USB smartcard reader in use by me I have to ask the vendor 
how to retrieve the information ... or otherwise reverse engineer it by 
sniffing USB while getting these information.

Heiko


From k04jg02 at kzoo.edu  Sat Aug 23 13:27:27 2008
From: k04jg02 at kzoo.edu (Joseph Garvin)
Date: Sat, 23 Aug 2008 14:27:27 -0400
Subject: Using wine directdraw dll on windows?
Message-ID: <48B0568F.5050309@kzoo.edu>

Intel's windows vista graphics drivers are pretty terrible, and some 
older directdraw games won't run at all with them. I know that there was 
talk before about using wine's opengl-based direct3d implementation on 
windows, so I was curious if it was at all possible to do the same with 
directdraw. Ironically Worms Armageddon runs better on my laptop under 
wine than it does on my gf's under Vista.

Thanks,

Joe


From kgbricola at web.de  Sat Aug 23 13:31:13 2008
From: kgbricola at web.de (=?ISO-8859-15?Q?Rico_Sch=FCller?=)
Date: Sat, 23 Aug 2008 20:31:13 +0200
Subject: ddraw_test crashes on windows xp sp3 (blue screen)
Message-ID: <48B05771.2020801@web.de>

Hi,

the attached patch solves a hard crash on my ati mobility 9600/9700 
card. The code behind the c style comments let the application crash. 
The code between /* */ crash the hole system. Probably there have to be 
another check for supported cards/extensions.

Cheers
Rico
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ddraw2.patch
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080823/384e1696/attachment.txt 

From stefan at codeweavers.com  Sat Aug 23 13:50:58 2008
From: stefan at codeweavers.com (=?UTF-8?Q?Stefan_D=C3=B6singer?=)
Date: Sat, 23 Aug 2008 13:50:58 -0500
Subject: wined3d/d3d9: Set the initial scissor rect to the window size
In-Reply-To: <48B00033.6080105@web.de>
References: <48ADDD0E.2000103@web.de>	
	<d658b69e0808211500h1e5927ebjc2adce73a442d31e@mail.gmail.com>	
	<48AF009F.7020709@web.de> <002c01c90492$a210b4f0$e6321ed0$@com>	
	<48AFE861.8040509@web.de>
	<d658b69e0808230428t6ef4cb2dx73c63352d84665c@mail.gmail.com>
	<48B00033.6080105@web.de>
Message-ID: <006701c90551$2f284d30$8d78e790$@com>

I think you don't have to test a 2nd swapchain here. The initial scissor rectangle is set in CreateDevice, so an extra call to CreateAdditionalSwapchain afterwards shouldn't have any effect on this. I am mainly concerned by the open source drivers here which do not always like messing with OpenGL contexts too much. I am afraid we'll get complaints that the test crashes or even causes a kernel panic :-/.

Does "WINED3DSURFACE_DESC desc = {0};" set all the pointers in WINED3DSURFACEDESC to NULL? I am not sure about this. (At some point we may also want to de-pointerize WINED3DSURFACEDESC like we've done with the other structures)




From hverbeet at gmail.com  Sat Aug 23 13:54:51 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sat, 23 Aug 2008 20:54:51 +0200
Subject: wined3d/d3d9: Set the initial scissor rect to the window size
In-Reply-To: <006701c90551$2f284d30$8d78e790$@com>
References: <48ADDD0E.2000103@web.de>
	<d658b69e0808211500h1e5927ebjc2adce73a442d31e@mail.gmail.com>
	<48AF009F.7020709@web.de> <002c01c90492$a210b4f0$e6321ed0$@com>
	<48AFE861.8040509@web.de>
	<d658b69e0808230428t6ef4cb2dx73c63352d84665c@mail.gmail.com>
	<48B00033.6080105@web.de> <006701c90551$2f284d30$8d78e790$@com>
Message-ID: <d658b69e0808231154t1b604fafye8105676527f22a2@mail.gmail.com>

2008/8/23 Stefan D?singer <stefan at codeweavers.com>:
> Does "WINED3DSURFACE_DESC desc = {0};" set all the pointers in WINED3DSURFACEDESC to NULL? I am not sure about this. (At some point we may also want to de-pointerize WINED3DSURFACEDESC like we've done with the other structures)
>
It initializes the struct with zeroes.

From dank at kegel.com  Sat Aug 23 15:18:50 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 23 Aug 2008 13:18:50 -0700
Subject: Patchwatcher: failed regression tests: d3dx8: replace loops with
	explicit computations to make them faster [PATCH] d3dx8:
	replace loops by explicit computations
In-Reply-To: <a71bd89a0808230505r50dbf316qb9da07f07f37d56a@mail.gmail.com>
References: <E1KWjuQ-0000vE-8w@planet>
	<a71bd89a0808230505r50dbf316qb9da07f07f37d56a@mail.gmail.com>
Message-ID: <a71bd89a0808231318l59a987d6s25236193dbfb3b06@mail.gmail.com>

You can't just declare a patch series for
the last patch, as you seem to have done here:

d3dx8, test [patch 3/3] test the relative error instead of the
absolute one to avoid rounded errors

That confuses patchwatcher (and maybe even humans).

That patch should have come first, to avoid having the tree in broken state.
- Dan


On Sat, Aug 23, 2008 at 5:05 AM, Dan Kegel <dank at kegel.com> wrote:
> Patchwatcher notes that the conformance test fails here:
>
> ../../../tools/runtest -q -P wine -M d3dx8.dll -T ../../.. -p
> d3dx8_test.exe.so math.c && touch math.ok
> math.c:442: Test failed: Expected matrix=
> (-0.214800,1.311600,0.475200,0.000000
>  0.950400,-0.883600,0.924400,0.000000
>  1.021200,0.193600,-1.358800,0.000000
>  18.298500,-29.624001,15.683499,1.000000
> )
>
> Got matrix=
> (-0.214800,1.311600,0.475200,0.000000
>  0.950401,-0.883601,0.924400,0.000000
>  1.021204,0.193593,-1.358803,0.000000
>  18.298538,-29.624159,15.683425,1.000000)
>
> Looks like rounding errors, but one way or another, you have to take
> care of that.
>
> Also: did you benchmark this change to verify it actually made
> things faster?  Unrolling loops is no longer as sure-fire a win as
> it used to be.  I'm inclined to prefer the more compact, clear
> loop unless there's hard evidence it's > 1% slower.
> - Dan
>
>
> ---------- Forwarded message ----------
> From:  <patchwatcher at kegel.com>
> Date: Fri, Aug 22, 2008 at 8:35 PM
> Subject: Patchwatcher: failed regression tests: d3dx8: replace loops
> with explicit computations to make them faster [PATCH] d3dx8: replace
> loops by explicit computations
> To: dank at kegel.com
>
>
> Hi!  This is the experimental automated wine patchwatcher thingy.
> The latest git sources were built and tested with your patch
> "d3dx8: replace loops with explicit computations to make them faster
> [PATCH] d3dx8: replace loops by explicit computations"
> Result: the patch failed regression tests.
>
> You can retrieve the full build results at
>  http://kegel.com/wine/patchwatcher/results/264.log
> and see the patch as parsed at
>  http://kegel.com/wine/patchwatcher/results/264.txt
> See
>  http://kegel.com/wine/patchwatcher/results
> for more info.
>


From bunglehead at gmail.com  Sat Aug 23 16:14:21 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sun, 24 Aug 2008 01:14:21 +0400
Subject: About patchwatcher
Message-ID: <48B07DAD.60900@gmail.com>

Dan, am I right that Patchwatcher now runs a whole test suite for every 
patch?

I know that this situation is rather rare but still I think it make 
sense to run only
tests changed by patch if this patch contains only test changes. I could 
save some time
without any side effect.

Since all test stored in 'tests' directory for each module it's very 
easy to determine
that a patch brings changes only to this directory without affecting 
module itself.

What you think about this?


From hverbeet at gmail.com  Sat Aug 23 16:47:09 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sat, 23 Aug 2008 23:47:09 +0200
Subject: [1/2] wined3d: Support clipplanes with GLSL shaders
In-Reply-To: <200808232338.12461.der.fabe@gmx.net>
References: <200808232338.12461.der.fabe@gmx.net>
Message-ID: <d658b69e0808231447r21e35319m312242c4e6c0e2b@mail.gmail.com>

> @@ -248,11 +248,12 @@ typedef struct {
>      void (*shader_generate_vshader)(IWineD3DVertexShader *iface, SHADER_BUFFER *buffer);
>      void (*shader_get_caps)(WINED3DDEVTYPE devtype, WineD3D_GL_Info *gl_info, struct shader_caps *caps);
>      BOOL (*shader_conv_supported)(WINED3DFORMAT conv);
> +    DWORD shader_supported_clipplanes; /* bitmask of supported clipplanes */
>  } shader_backend_t;
You shouldn't abuse the call table like that, you should store that
flag in the private data instead.


From dank at kegel.com  Sat Aug 23 18:38:58 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 23 Aug 2008 16:38:58 -0700
Subject: About patchwatcher
In-Reply-To: <48B07DAD.60900@gmail.com>
References: <48B07DAD.60900@gmail.com>
Message-ID: <a71bd89a0808231638u7c494b52g2647fbc5554fa890@mail.gmail.com>

On Sat, Aug 23, 2008 at 2:14 PM, Nikolay Sivov <bunglehead at gmail.com> wrote:
> Dan, am I right that Patchwatcher now runs a whole test suite for every
> patch?

Yes.

> I know that this situation is rather rare but still I think it make sense to
> run only tests changed by patch if this patch contains only
> test changes. I could save some time without any side effect.

That's a fine idea.  It could come in handy when we start
valgrinding everything.   As you say, though, it's rare, so
it might be a while before it's a high priority.
- Dan


From stefan at codeweavers.com  Sat Aug 23 21:38:07 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Sat, 23 Aug 2008 21:38:07 -0500
Subject: Using wine directdraw dll on windows?
In-Reply-To: <48B0568F.5050309@kzoo.edu>
References: <48B0568F.5050309@kzoo.edu>
Message-ID: <001501c90592$7185ad80$54910880$@com>

> Intel's windows vista graphics drivers are pretty terrible, and some
> older directdraw games won't run at all with them. I know that there
> was
> talk before about using wine's opengl-based direct3d implementation on
> windows, so I was curious if it was at all possible to do the same with
> directdraw. Ironically Worms Armageddon runs better on my laptop under
> wine than it does on my gf's under Vista.
Our d3d implementation works pretty well on Windows(well, as good as it does
on Wine), with the exception of directdraw. The problem with ddraw is that
ddraw.dll needs wined3d.dll, which loads opengl32.dll, and Microsoft's
opengl32.dll loads ddraw.dll. Oops.

Currently we have no real attacking point to this issue.




From stefan at codeweavers.com  Sat Aug 23 22:07:54 2008
From: stefan at codeweavers.com (=?UTF-8?Q?Stefan_D=C3=B6singer?=)
Date: Sat, 23 Aug 2008 22:07:54 -0500
Subject: [10/10] WineD3D: Sort out some limit confusion
In-Reply-To: <d658b69e0808230405j6e2a0c5ai48830357a4d3595a@mail.gmail.com>
References: <000301c90499$5e662670$1b327350$@com>
	<d658b69e0808230405j6e2a0c5ai48830357a4d3595a@mail.gmail.com>
Message-ID: <001601c90596$9a4f2080$ceed6180$@com>

> 2008/8/22 Stefan D?singer <stefan at codeweavers.com>:
> > +            glGetIntegerv(GL_MAX_TEXTURE_COORDS, &gl_max);
> > +            gl_info->max_texture_coords = min(MAX_TEXTURES, gl_max);
> > +            TRACE_(d3d_caps)("Max texture coords: %d\n", gl_info-
> >max_texture_coords);
> I don't know if this is intentional or not, but did you mean to use
> gl_info->max_textures here?
No, I meant to clamp it by the constant MAX_TEXTURES(=8). gl_info->max_textures is wrong here because gl_info->max_textures could be 4, GL_MAX_TEXTURE_COORDS could be 8. If the application uses fixed function vertex processing and pixel shaders it can make use of all 8 texture coords in the vertex pipeline even though the fixed function fragment pipeline supports only 4 textures. Or we could use the arbfp code which isn't limited by gl_info->max_textures.

> > @@ -3172,7 +3172,7 @@ static void
> loadTexCoords(IWineD3DStateBlockImpl *stateblock, WineDirect3DVertex
> >          return;
> >      }
> >
> > -    for (textureNo = 0; textureNo < GL_LIMITS(texture_stages);
> ++textureNo) {
> > +    for (textureNo = 0; textureNo < GL_LIMITS(texture_coords);
> ++textureNo) {
> >          int coordIdx = stateblock-
> >textureState[textureNo][WINED3DTSS_TEXCOORDINDEX];
> >
> >          mapped_stage = stateblock->wineD3DDevice-
> >texUnitMap[textureNo];
> Shouldn't that be testing mapped_stage against
> GL_LIMITS(texture_coords) instead?
You mean instead of textureNo? I don't think so. A stage is always mapped to a lower one, so I think we cannot trigger an error here. Dealing with all supported texture units here spares the loop below.

> > -    if (GL_SUPPORT(NV_REGISTER_COMBINERS)) {
> > -        /* The number of the mapped stages increases monotonically,
> so it's fine to use the last used one */
> > -        for (textureNo = mapped_stage + 1; textureNo <
> GL_LIMITS(textures); ++textureNo) {
> > -            GL_EXTCALL(glMultiTexCoord4fARB(GL_TEXTURE0_ARB +
> textureNo, 0, 0, 0, 1));
> > -        }
> > -    }
> I'm probably missing something here, but why is it safe to remove that?
Because we have handled all supported texture units in the loop above. and supplied it with default coordinates if needed.

> In the bigger picture, these various limits are pretty tricky to get
> right, I wonder if it might make more sense to handle most of this
> stuff in the tex unit map instead. That way we could be sure that if a
> stage is mapped to a sampler that sampler is safe to use.
While this sounds nice I am afraid it won't work too well. Beyond specifying the new settings we have to do other things like unsetting unneeded states, etc, so I don't think we can keep the state mappings all in one place. My other concern is that different pipeline implementations need different limits.




From dmitry at codeweavers.com  Sat Aug 23 23:43:04 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 24 Aug 2008 13:43:04 +0900
Subject: kernel32/winerr: Add Russian translation
References: <48B04366.9040009@mail.ru>
Message-ID: <762C8B3D9A474F00A4FCEBCA3DC2EE52@DMITRY>

"Vladimir Pankratov" <scriptkid at mail.ru> wrote:

> Added Russian translation.
> 
> Changed files:
> dlls/kernel32/nls/winerr_rus.mc
> dlls/kernel32/kernel.rc
> dlls/kernel32/Makefile.in

Is there a reason you've used cp866 encoding instead of cp1251?
Also, this doesn't look like a translation, messages don't match
their english counterparts, how did you do that?

-- 
Dmitry.


From dmitry at codeweavers.com  Sat Aug 23 23:49:48 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 24 Aug 2008 13:49:48 +0900
Subject: winex11.drv: Fix buffer overflow bug in X11DRV_KeyEvent()
	andX11DRV_ToUnicodeEx()
References: <680e56870808231526k5ad343caq9dd4063daf367743@mail.gmail.com>
Message-ID: <28B826A9CD584FFDAB99AF8F17CB64E3@DMITRY>

"Muneyuki Noguchi" <nogu.dev at gmail.com> wrote:

> winex11.drv: Fix buffer overflow bug in X11DRV_KeyEvent() and
> X11DRV_ToUnicodeEx()

> +    Str = (char *)malloc(64);
> +    if (Str == NULL)
> +        ERR("Failed to allocate memory!\n");

Please don't use malloc() in Wine, use win32 Heap*** APIs instead.
Also, you need to properly handle memory allocation errors, not just
print an ERR.

-- 
Dmitry.


From hongbo at njstar.com  Sun Aug 24 03:21:34 2008
From: hongbo at njstar.com (Hongbo Ni)
Date: Sun, 24 Aug 2008 18:21:34 +1000
Subject: How should I name the Traditional Chinese resource file ?
Message-ID: <mailman.192.1219566117.4613.wine-devel@winehq.org>

Hi,

For Chinese language, there are simplified Chinese (zh_CN) and 
traditional Chinese (zh_TW) sublanguage.

Currently all the dlls have Chinese resource named with 
xxx_Cn.rc for simplified, and xxx_Zh.rc for traditional Chinese.

For all the programs such as notepage, simplified Chinese resource
is named Zh.rc (while it should be named Cn.rc inline with dlls), 
and there is no traditional Chinese resource.

I want to add traditional Chinese resources for all programs.
I have those options:

1. name it Zh_tw.rc, (but Alexandre seems not like it)
2. name it Tw.rc
3. rename all Zh.rc to Cn.rc, then name traditional as Zh.rc
4. just put both simplified and traditional Chinese in Zh.rc
   (not good as they are different encoding).

My question is how should I name it ? 

Hongbo Ni



From hverbeet at gmail.com  Sun Aug 24 05:40:41 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sun, 24 Aug 2008 12:40:41 +0200
Subject: [10/10] WineD3D: Sort out some limit confusion
In-Reply-To: <001601c90596$9a4f2080$ceed6180$@com>
References: <000301c90499$5e662670$1b327350$@com>
	<d658b69e0808230405j6e2a0c5ai48830357a4d3595a@mail.gmail.com>
	<001601c90596$9a4f2080$ceed6180$@com>
Message-ID: <d658b69e0808240340wc8bca08se6c778c45701e58d@mail.gmail.com>

2008/8/24 Stefan D?singer <stefan at codeweavers.com>:
> No, I meant to clamp it by the constant MAX_TEXTURES(=8). gl_info->max_textures is wrong here because gl_info->max_textures could be 4, GL_MAX_TEXTURE_COORDS could be 8. If the application uses fixed function vertex processing and pixel shaders it can make use of all 8 texture coords in the vertex pipeline even though the fixed function fragment pipeline supports only 4 textures. Or we could use the arbfp code which isn't limited by gl_info->max_textures.

Ok, I wasn't sure. Wrt arbfp though, it should report 8 for
max_textures in that case, because that's how much simultaneous
textures d3d can address. max_textures, max_texture_stages, etc. are
the limits for what our d3d implementation can do, not GL.

> You mean instead of textureNo? I don't think so. A stage is always mapped to a lower one, so I think we cannot trigger an error here. Dealing with all supported texture units here spares the loop below.

You probably can't trigger an error, but you might miss coordinates
for a high texture stage that's mapped to a lower texture unit. I also
don't think we should rely on details of how stages are mapped to
units if we can avoid it.

>> > -    if (GL_SUPPORT(NV_REGISTER_COMBINERS)) {
>> > -        /* The number of the mapped stages increases monotonically,
>> so it's fine to use the last used one */
>> > -        for (textureNo = mapped_stage + 1; textureNo <
>> GL_LIMITS(textures); ++textureNo) {
>> > -            GL_EXTCALL(glMultiTexCoord4fARB(GL_TEXTURE0_ARB +
>> textureNo, 0, 0, 0, 1));
>> > -        }
>> > -    }
>> I'm probably missing something here, but why is it safe to remove that?
> Because we have handled all supported texture units in the loop above. and supplied it with default coordinates if needed.

Except that we haven't. We've looped through the first
max_texture_coords texture stages, but there's not guarantee that
those stages also touch the first max_texture_coords units. In fact,
unless you're using a 1:1 mapping, it's guaranteed they don't.


>> In the bigger picture, these various limits are pretty tricky to get
>> right, I wonder if it might make more sense to handle most of this
>> stuff in the tex unit map instead. That way we could be sure that if a
>> stage is mapped to a sampler that sampler is safe to use.
> While this sounds nice I am afraid it won't work too well. Beyond specifying the new settings we have to do other things like unsetting unneeded states, etc, so I don't think we can keep the state mappings all in one place. My other concern is that different pipeline implementations need different limits.
>

If you can guarantee that a texture unit isn't mapped when it isn't
used, you can just walk through the rev_tex_unit_map and find the
corresponding texture stage. That makes much more sense from GL's
point of view.

From dmitry at codeweavers.com  Sun Aug 24 06:15:26 2008
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sun, 24 Aug 2008 20:15:26 +0900
Subject: [Take 2] winex11.drv: Fix buffer overflow bug in
	X11DRV_KeyEvent()and X11DRV_ToUnicodeEx()
References: <680e56870808240113s2b2d2286k8d63d329c6aa52ef@mail.gmail.com>
Message-ID: <735595AB4306422CA3C8E3930EDFCCB3@DMITRY>

"Muneyuki Noguchi" <nogu.dev at gmail.com> wrote:

> Changes from the previous patch:
> - Add a new variable STRSIZE.

A define would be better IMO, or just use 64 directly, 2 places don't
justify the introduction of it.

> - Use HeapAlloc() and HeapFree() instead of malloc() and free().

I'd suggest to have an initial buffer of 64 bytes allocated on the stack,
and allocate a larger buffer only if required. That improves performance.

> - Return from a function when (re)allocation failed.

You have to call wine_tsx11_unlock() when needed on exit.

-- 
Dmitry.


From alexd4 at inbox.lv  Sun Aug 24 07:01:01 2008
From: alexd4 at inbox.lv (Alexander Dorofeyev)
Date: Sun, 24 Aug 2008 15:01:01 +0300
Subject: ddraw_test crashes on windows xp sp3 (blue screen)
In-Reply-To: <48B05771.2020801@web.de>
References: <48B05771.2020801@web.de>
Message-ID: <48B14D7D.7050206@inbox.lv>

Rico Sch?ller wrote:
> Hi,
> 
> the attached patch solves a hard crash on my ati mobility 9600/9700 
> card. The code behind the c style comments let the application crash. 
> The code between /* */ crash the hole system. Probably there have to be 
> another check for supported cards/extensions.

This is a broken driver. Try to report to ati. There is a bugzilla entry for this:

http://bugs.winehq.org/show_bug.cgi?id=13608

As for fixing this in Wine, the only device flag that i know to be relevant in 
that case (cubemap support) is already checked. Even if it wasn't, what 
CreateSurface normally does in response to trying to do something that is 
unsupported is returning an error. Crashing the system absolutely isn't a legit 
response in any case. I guess anything else than DDSCAPS2_CUBEMAP_ALLFACES hits 
some bug in the driver. It does not seem to occur on nvidia cards.

Crashing on ati cards is bad, of course, as it is quite widespread. So if ati is 
not responsive on this issue, maybe we need to get rid of the test. Or somehow 
skip in on ati cards.


From hverbeet at gmail.com  Sun Aug 24 10:37:09 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sun, 24 Aug 2008 17:37:09 +0200
Subject: [try 2][2/2]wined3d: Support first clipplane with ARB shaders
In-Reply-To: <200808241714.12161.der.fabe@gmx.net>
References: <200808241714.12161.der.fabe@gmx.net>
Message-ID: <d658b69e0808240837o36a72546re3a02000070d2eba@mail.gmail.com>

2008/8/24 Fabian Bieler <der.fabe at gmx.net>:
> +    if (use_vs(stateblock->wineD3DDevice) && (enable ^ supported_by_shader_backend) & enable) {
Did you mean to write
    if (use_vs(stateblock->wineD3DDevice) && (enable &
~supported_by_shader_backend)) {
there?


From dank at kegel.com  Sun Aug 24 11:38:08 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 24 Aug 2008 09:38:08 -0700
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
Message-ID: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>

Patchwatcher now regenerates configure and makefiles
after each patch, so it can handle patches that change
configure.ac.

I have enabled email notification to authors of patches
that don't build.

The script now forwards patches that pass all tests to the mailing list
http://groups.google.com/group/wine-patches-filtered
so potentially Alexandre could start looking only at that
list (though it probably only has two nines of reliability at
this point, as patchwatcher doesn't handle every case yet,
e.g. it doesn't handle partial resends of patch series).


From stefan at codeweavers.com  Sun Aug 24 11:48:25 2008
From: stefan at codeweavers.com (=?UTF-8?Q?Stefan_D=C3=B6singer?=)
Date: Sun, 24 Aug 2008 11:48:25 -0500
Subject: [10/10] WineD3D: Sort out some limit confusion
In-Reply-To: <d658b69e0808240340wc8bca08se6c778c45701e58d@mail.gmail.com>
References: <000301c90499$5e662670$1b327350$@com>	
	<d658b69e0808230405j6e2a0c5ai48830357a4d3595a@mail.gmail.com>	
	<001601c90596$9a4f2080$ceed6180$@com>
	<d658b69e0808240340wc8bca08se6c778c45701e58d@mail.gmail.com>
Message-ID: <004401c90609$3ac410d0$b04c3270$@com>

> Ok, I wasn't sure. Wrt arbfp though, it should report 8 for
> max_textures in that case, because that's how much simultaneous
> textures d3d can address. max_textures, max_texture_stages, etc. are
> the limits for what our d3d implementation can do, not GL.
No, I don't think so. Even if we're using ARBfp, calling a glEnable(GL_TEXTURE_2D) in texture unit 5 is not valid on e.g. nvidia cards. So we can't put the arbfp limit into the glinfo->max_textures member.

In some places, e.g. the texture unit mapping code, we want to use the pipeline implementation limit instead of the opengl fixed function limit. I have a different patch doing that.

I'll look at your other points later today, I don't have a quick answer for them right now.




From dank at kegel.com  Sun Aug 24 11:49:06 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 24 Aug 2008 09:49:06 -0700
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
In-Reply-To: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
Message-ID: <a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>

On Sun, Aug 24, 2008 at 9:38 AM, Dan Kegel <dank at kegel.com> wrote:
> The script now forwards patches that pass all tests to the mailing list
> http://groups.google.com/group/wine-patches-filtered
> so potentially Alexandre could start looking only at that
> list

Hmm.  At the moment, patchwatcher will forward parts
of a patch series even if some of the series fails;
it should probably only forward a patch series if there
are no failures in any of its members.


From hverbeet at gmail.com  Sun Aug 24 12:10:34 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sun, 24 Aug 2008 19:10:34 +0200
Subject: [10/10] WineD3D: Sort out some limit confusion
In-Reply-To: <004401c90609$3ac410d0$b04c3270$@com>
References: <000301c90499$5e662670$1b327350$@com>
	<d658b69e0808230405j6e2a0c5ai48830357a4d3595a@mail.gmail.com>
	<001601c90596$9a4f2080$ceed6180$@com>
	<d658b69e0808240340wc8bca08se6c778c45701e58d@mail.gmail.com>
	<004401c90609$3ac410d0$b04c3270$@com>
Message-ID: <d658b69e0808241010s56419eeavd302f2dfdaa88c06@mail.gmail.com>

2008/8/24 Stefan D?singer <stefan at codeweavers.com>:
>> Ok, I wasn't sure. Wrt arbfp though, it should report 8 for
>> max_textures in that case, because that's how much simultaneous
>> textures d3d can address. max_textures, max_texture_stages, etc. are
>> the limits for what our d3d implementation can do, not GL.
> No, I don't think so. Even if we're using ARBfp, calling a glEnable(GL_TEXTURE_2D) in texture unit 5 is not valid on e.g. nvidia cards.
Sure, but there should be no reason to make that call either. In
pretty much every place GL_LIMITS(textures) is used, it would either
need to be replaced with the fragment pipe implementation based limit
or not be executed at all (eg. code that calls glTexEnvf or creates
dummy textures really doesn't need to be executed when using arbfp).
The only possible exception is SetupForBlit(), but I'm tempted to say
we shouldn't be using that either when shaders are available. It's a
pretty minor point though, and I'm not necessarily opposed to a
separate fragment pipe based limit.

From hverbeet at gmail.com  Sun Aug 24 13:15:53 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sun, 24 Aug 2008 20:15:53 +0200
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
In-Reply-To: <a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
	<a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>
Message-ID: <d658b69e0808241115n45f2a4b6h3ed818823471ee9b@mail.gmail.com>

2008/8/24 Dan Kegel <dank at kegel.com>:
> On Sun, Aug 24, 2008 at 9:38 AM, Dan Kegel <dank at kegel.com> wrote:
>> The script now forwards patches that pass all tests to the mailing list
>> http://groups.google.com/group/wine-patches-filtered
>> so potentially Alexandre could start looking only at that
>> list
>
> Hmm.  At the moment, patchwatcher will forward parts
> of a patch series even if some of the series fails;
> it should probably only forward a patch series if there
> are no failures in any of its members.
>
Depends, often if a patch in a series fails the earlier patches can
still be applied. Also, that a patch is part of a series doesn't
necessarily mean it depends on the previous patches, sending patches
as a series is just the easiest thing to do when you've got multiple
patches.


From stefan at codeweavers.com  Sun Aug 24 13:44:45 2008
From: stefan at codeweavers.com (=?UTF-8?Q?Stefan_D=C3=B6singer?=)
Date: Sun, 24 Aug 2008 13:44:45 -0500
Subject: [10/10] WineD3D: Sort out some limit confusion
In-Reply-To: <d658b69e0808241010s56419eeavd302f2dfdaa88c06@mail.gmail.com>
References: <000301c90499$5e662670$1b327350$@com>	
	<d658b69e0808230405j6e2a0c5ai48830357a4d3595a@mail.gmail.com>	
	<001601c90596$9a4f2080$ceed6180$@com>	
	<d658b69e0808240340wc8bca08se6c778c45701e58d@mail.gmail.com>	
	<004401c90609$3ac410d0$b04c3270$@com>
	<d658b69e0808241010s56419eeavd302f2dfdaa88c06@mail.gmail.com>
Message-ID: <001801c90619$7aa802f0$6ff808d0$@com>

> Sure, but there should be no reason to make that call either. In
> pretty much every place GL_LIMITS(textures) is used, it would either
> need to be replaced with the fragment pipe implementation based limit
> or not be executed at all (eg. code that calls glTexEnvf or creates
> dummy textures really doesn't need to be executed when using arbfp).
> The only possible exception is SetupForBlit(), but I'm tempted to say
> we shouldn't be using that either when shaders are available. It's a
> pretty minor point though, and I'm not necessarily opposed to a
> separate fragment pipe based limit.
Yes, we can eliminate those calls, and currently SetupForBlit and the dummy textures are the only remaining cases. However, I prefer to keep all the limits in the structures, since replacing them based on the pipeline implementation will be messy.

In the end I think "Why is this code reading the wrong limit" is easier to debug than "Why does this limit contain the wrong value"




From celticht32 at aol.com  Sun Aug 24 14:56:54 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Sun, 24 Aug 2008 15:56:54 -0400
Subject: Drawprim
In-Reply-To: <001801c90619$7aa802f0$6ff808d0$@com>
References: <000301c90499$5e662670$1b327350$@com>		<d658b69e0808230405j6e2a0c5ai48830357a4d3595a@mail.gmail.com>		<001601c90596$9a4f2080$ceed6180$@com>		<d658b69e0808240340wc8bca08se6c778c45701e58d@mail.gmail.com>		<004401c90609$3ac410d0$b04c3270$@com>	<d658b69e0808241010s56419eeavd302f2dfdaa88c06@mail.gmail.com>
	<001801c90619$7aa802f0$6ff808d0$@com>
Message-ID: <48B1BD06.90501@aol.com>

 >Hmm. Does the application use a fixed function texture coordinate 
 >specified with D3DECLUSAGE_FLOAT4?

 > It should be simple to support this. Essentially the "int coordsToUse
 > = sd->u.s.texCoords[coordIdx].dwType + 1" is wrong, this needs a
 > better mapping:

 > decltype:                   coordsToUse:
 > D3DDECLTYPE_FLOAT1          1
 > D3DDECLTYPE_FLOAT2          2
 > D3DDECLTYPE_FLOAT3          3
 > D3DDECLTYPE_FLOAT4          4
 > D3DDECLTYPE_D3DCOLOR        4
 > D3DDECLTYPE_UBYTE4          4
 > D3DDECLTYPE_SHORT2          2
 > D3DDECLTYPE_SHORT4          4
 > D3DDECLTYPE_UBYTE4N         4
 > D3DDECLTYPE_SHORT2N         2
 > D3DDECLTYPE_SHORT4N         4
 > D3DDECLTYPE_USHORT2N        2
 > D3DDECLTYPE_USHORT4N        4
 > D3DDECLTYPE_UDEC3           ???
 > D3DDECLTYPE_DEC3N           ???
 > D3DDECLTYPE_FLOAT16_2       2
 > D3DDECLTYPE_FLOAT16_4       4

 > Also the function calls below shouldn't be selected based on a
 > switch-case statement, but rather on the declaration itself. q, r, t
 > and s should be read in a different way too. The system used for
 > providing other parameters like diffuse_funcs sounds sane here,
 > although some extra care is needed to keep working without
 > GL_ARB_multitexture support.

 > Also I strongly recommend writing a test here. Generally, fixed
 > function attributes with non-standard data types are spooky on
 >  Windows, so the real problem may be somewhere else.

I could not answer that it uses a drawprim float 4 before it calls 
drawprim with the 7 parm.  I started to work on a better fix for this 
rather than  the one where I just added  the extra values in. But the 
extra values seemed to solve it. While I am not sure its behavior on 
windows calling the same call (whatever that call is).

Correct in some cases the vertex is a short or a byte that must be 
normalized. However I am assuming or assumed that that is done by the 
application calling the API and not the actual API itself. This 
assumption seems to work but not 100% sure as I don't know how it works 
on windows.

The DEC 3 and DEC3N specify 3 variables q,r,t with the 4th being I think 
the link said a 1. The N specifies if the values are normalized.

Chris


From hverbeet at gmail.com  Sun Aug 24 16:23:29 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Sun, 24 Aug 2008 23:23:29 +0200
Subject: d3dx9: Add stubs for D3DXCreateEffectxx and
	D3DXCreateEffectFromFilexx
In-Reply-To: <975825.67640.qm@web26106.mail.ukl.yahoo.com>
References: <975825.67640.qm@web26106.mail.ukl.yahoo.com>
Message-ID: <d658b69e0808241423l36e4a193ge6ae10e566e3b7aa@mail.gmail.com>

2008/8/24 Busquets P?rez Luis C. <luiscar2001 at yahoo.es>:
>
Why are you adding stubs for these? I don't think having a stub
implementation is useful here.

From scott at open-vote.org  Sun Aug 24 16:56:46 2008
From: scott at open-vote.org (Scott Ritchie)
Date: Sun, 24 Aug 2008 14:56:46 -0700
Subject: New steam survey statistics?
Message-ID: <48B1D91E.6010904@open-vote.org>

When we last heard from Valve a year ago, Wine had about a .4% share of
the steam user base.  It would be interesting to see how this has
changed since then - in that time, we've both released Wine 1.0 and
likely seen Linux adoption increase a great deal.  Linux had doubled its
desktop marketshare the year preceding the last survey, I wouldn't be
surprised to see Wine usage at around 1% on steam now.


Thanks,
Scott Ritchie


From razielmine at gmail.com  Sun Aug 24 16:56:06 2008
From: razielmine at gmail.com (Ismael Barros)
Date: Sun, 24 Aug 2008 23:56:06 +0200
Subject: Summer of code evaluations
In-Reply-To: <48AB53C2.2090400@gmail.com>
References: <48AB53C2.2090400@gmail.com>
Message-ID: <82e274890808241456s12065262rb8ad862b5efe1a@mail.gmail.com>

On Wed, Aug 20, 2008 at 1:14 AM, Maarten Lankhorst
<m.b.lankhorst at gmail.com> wrote:
> I would like to request from the mentors to fill in the final evaluation
> form and from the students to give a final write up: What went well? Did
> you meet the goals you set? Did you have fun? Is there anything we can
> do to make wines summer of code better and do you feel like you've
> become part of the wine community?

My project didn't go bad, but I was only able to complete around 40%
of what I expected to do in the begining, it turned out to be bigger
than I thought. I'll try to finish it, but I probably won't be able to
start working on it again until mid-september (exams, other projects
abbandoned due to GSoC, etc), and then my progress will be much
slower.

I really enjoyed this SoC, I was able to update my skills and learn to
work in a big project. Thanks to kblin and to all the people who
reviewed my code and bothered to suggest improvements :)

Cheers


From hverbeet at gmail.com  Sun Aug 24 17:06:29 2008
From: hverbeet at gmail.com (Henri Verbeet)
Date: Mon, 25 Aug 2008 00:06:29 +0200
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
In-Reply-To: <a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
	<a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>
Message-ID: <d658b69e0808241506n3a189a7cob0cfe53d16c743be@mail.gmail.com>

Something else... I sometimes reply to patches, and right now that
seems to cause patchwatcher to complain that my mail doesn't contain a
patch. Would it be possible to do something about that? I suppose
patchwatcher could ignore replies without patch.


From truiken at gmail.com  Sun Aug 24 17:10:31 2008
From: truiken at gmail.com (James Hawkins)
Date: Sun, 24 Aug 2008 17:10:31 -0500
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
In-Reply-To: <d658b69e0808241506n3a189a7cob0cfe53d16c743be@mail.gmail.com>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
	<a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>
	<d658b69e0808241506n3a189a7cob0cfe53d16c743be@mail.gmail.com>
Message-ID: <22821af30808241510x20e7bfbbudf73f82974ab6d2a@mail.gmail.com>

On Sun, Aug 24, 2008 at 5:06 PM, Henri Verbeet <hverbeet at gmail.com> wrote:
> Something else... I sometimes reply to patches, and right now that
> seems to cause patchwatcher to complain that my mail doesn't contain a
> patch. Would it be possible to do something about that? I suppose
> patchwatcher could ignore replies without patch.
>

Is your reply sent to wine-patches?  Any replies to a patch should be
sent to wine-devel unless you're sending another patch.

-- 
James Hawkins


From tony.wasserka at freenet.de  Sun Aug 24 17:14:05 2008
From: tony.wasserka at freenet.de (tony.wasserka at freenet.de)
Date: Mon, 25 Aug 2008 00:14:05 +0200
Subject: d3dx9: Add stubs for D3DXCreateEffectxx and
	D3DXCreateEffectFromFilexx
Message-ID: <c010f89f61a4306537f63b2cda3037e9@email.freenet.de>

Hi,
There were quite a number of minor issues in you code:

In Makefile.in:
> C_SRCS = \
> 	d3dx9_36_main.c \
>+        effect.c \
> 	font.c \
Use tabs here, please, as the intendation switches here on other
computers.

In effect.c:
+ * modify it under the terms of the GNU Lesser General Public
+ GetCurre* License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
I guess that was a paste at the wrong position ;-)

> +HRESULT D3DXCreateEffectEx(
You missed the WINAPI for that one.

In d3dx9effect.h:
I haven't looked too much into the whole effect stuff, but this thing
looks like Unicode isn't supported here (only LPCSTRs are used). Are you
sure about that?

>+#endif //__D3DX9EFFECT_H__
This is C code, use /* */, please.


As David already said, you should split the patch into smaller chunks.
Also, you need to convert a D3DXCreateEffect call into a
D3DXCreateEffectEx call, look at font.c to see how it's done for
D3DXCreateFont. This applies to the D3DXCreateEffectFromFile calls, too.

Best regards,
   Tony



Unbegrenzter Speicher, Top-Spamschutz, 120 SMS und eigene
E-MailDomain
inkl.
http://office.freenet.de/dienste/emailoffice/produktuebersicht/power/mail/index.html



From wine at eternaldusk.com  Sun Aug 24 17:38:40 2008
From: wine at eternaldusk.com (Evil Jay)
Date: Sun, 24 Aug 2008 17:38:40 -0500
Subject: New steam survey statistics?
In-Reply-To: <48B1D91E.6010904@open-vote.org>
References: <48B1D91E.6010904@open-vote.org>
Message-ID: <48B1E2F0.9050904@eternaldusk.com>

I too would be interested in seeing the numbers, but I'm not sure you're
going to see the correlation you expect, Scott.

While Linux adoption may have grown, Valve has probably been selling
just as many, if not more games to customers who already owned Windows
but had never used Steam. 

I suppose it could say something about the number of Linux users that
have a proclivity for gaming - which might be great to tell company X: 
"Hey, port your game to Linux - we know for sure that there are at least
Y number of gamers out there and you'll have very little competition for
their business if you hurry!".

-J



Scott Ritchie wrote:
> When we last heard from Valve a year ago, Wine had about a .4% share of
> the steam user base.  It would be interesting to see how this has
> changed since then - in that time, we've both released Wine 1.0 and
> likely seen Linux adoption increase a great deal.  Linux had doubled its
> desktop marketshare the year preceding the last survey, I wouldn't be
> surprised to see Wine usage at around 1% on steam now.
>
>
> Thanks,
> Scott Ritchie
>
>
>
>
>   



From truiken at gmail.com  Sun Aug 24 18:31:44 2008
From: truiken at gmail.com (James Hawkins)
Date: Sun, 24 Aug 2008 18:31:44 -0500
Subject: Add TRACEs to NtCreateFile returns (second try)
In-Reply-To: <8698375D-D8C9-4A19-A4DB-54603DFC26C7@jump-ing.de>
References: <8698375D-D8C9-4A19-A4DB-54603DFC26C7@jump-ing.de>
Message-ID: <22821af30808241631n373a3206x2d64cc6a7df5ffcf@mail.gmail.com>

2008/8/24 Markus Hitter <mah at jump-ing.de>:
>

+    if (!attr || !attr->ObjectName)
+    {
+        TRACE("returning STATUS_INVALID_PARAMETER\n");
+        return STATUS_INVALID_PARAMETER;
+    }


These are all very useless TRACES, except for possibly the returned
handle value.  You should be able to look at the traced parameters and
see if there is an invalid parameter.  As a side note of something I
just noticed, the check for NULL attr will never be true because we'll
crash in the TRACE when we dereference attr.

-- 
James Hawkins


From mah at jump-ing.de  Mon Aug 25 03:12:49 2008
From: mah at jump-ing.de (Markus Hitter)
Date: Mon, 25 Aug 2008 10:12:49 +0200
Subject: Add TRACEs to NtCreateFile returns (second try)
In-Reply-To: <22821af30808241631n373a3206x2d64cc6a7df5ffcf@mail.gmail.com>
References: <8698375D-D8C9-4A19-A4DB-54603DFC26C7@jump-ing.de>
	<22821af30808241631n373a3206x2d64cc6a7df5ffcf@mail.gmail.com>
Message-ID: <F18EC709-65B6-4F7A-A812-92AA62F2131D@jump-ing.de>


Am 25.08.2008 um 01:31 schrieb James Hawkins:

> 2008/8/24 Markus Hitter <mah at jump-ing.de>:
>>
>
> +    if (!attr || !attr->ObjectName)
> +    {
> +        TRACE("returning STATUS_INVALID_PARAMETER\n");
> +        return STATUS_INVALID_PARAMETER;
> +    }
>
>
> These are all very useless TRACES, except for possibly the returned
> handle value.

Well, the idea is to TRACE() something for all possible return  
values. Michael Karcher, Rob Shearman and me obviously consider them  
as useful:

<http://thread.gmane.org/gmane.comp.emulators.wine.patches/54527/>

> As a side note of something I just noticed, the check for NULL attr  
> will never be true because we'll crash in the TRACE when we  
> dereference attr.

In case of (attr == NULL), same as (!attr), the code right to the ||  
shouldn't be reached, so no dereferencing should take place, then.  
TRACE()/printf() is capable of handling 0/NULL/nil values as well.

BTW., the TRACE() in the code you cited doesn't dereference anything  
and for the other parts of the patch, dereferencing only takes place  
where the current code dereferences anyways.


MarKus

- - - - - - - - - - - - - - - - - - -
Dipl. Ing. Markus Hitter
http://www.jump-ing.de/






From gerald at pfeifer.com  Sun Aug 24 05:18:52 2008
From: gerald at pfeifer.com (Gerald Pfeifer)
Date: Sun, 24 Aug 2008 12:18:52 +0200 (CEST)
Subject: Unbreak dlls/winhttp  on FreeBSD (and likely other
 BSDs/Darwin)
In-Reply-To: <200808210936.34225.hans@codeweavers.com>
References: <alpine.LSU.1.99.0808202032580.3773@acrux.dbai.tuwien.ac.at>
	<200808210936.34225.hans@codeweavers.com>
Message-ID: <alpine.LSU.1.99.0808241217210.3773@acrux.dbai.tuwien.ac.at>

On Thu, 21 Aug 2008, Hans Leidekker wrote:
> Thanks. I didn't want to copy all of the ifdef blocks from wininet
> because I can't verify which ones are actually needed. So I'm counting
> on people like you to fix this up, and I'm sure I'll need your help
> again :)

You're welcome. :-)  Wine build have been surprisingly stable on FreeBSD 
the last two or so years, after being broken on a nearly weekly base a bit 
longer ago, so no worries.

Gerald


From david.adam.cnrs at gmail.com  Sun Aug 24 06:09:16 2008
From: david.adam.cnrs at gmail.com (David Adam)
Date: Sun, 24 Aug 2008 13:09:16 +0200
Subject: d3dx8: Implementation of D3DXGetFVFVertexSize with tests try 2
In-Reply-To: <192657.52148.qm@web26108.mail.ukl.yahoo.com>
References: <192657.52148.qm@web26108.mail.ukl.yahoo.com>
Message-ID: <5f9140a20808240409i395b5687haef09d40eb10db9e@mail.gmail.com>

Hello,

could you keep the style of the file, please?

For instance

for (.....)
{
 xxxxxxxx
}

instead of


for (.....) {
 xxxxxxxx
}

The same for the if condition and the switch condition?

David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080824/22e5e470/attachment-0001.htm 

From luiscar2001 at yahoo.es  Sun Aug 24 12:36:26 2008
From: luiscar2001 at yahoo.es (=?iso-8859-1?Q?Busquets_P=E9rez_Luis_C=2E?=)
Date: Sun, 24 Aug 2008 17:36:26 +0000 (GMT)
Subject: d3dx9: Effects
Message-ID: <603827.37170.qm@web26105.mail.ukl.yahoo.com>

What is wrong with the attached patch?

__________________________________________________
Correo Yahoo!
Espacio para todos tus mensajes, antivirus y antispam ?gratis! 
Reg?strate ya - http://correo.yahoo.es 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: D3DXCreateEffectxx.patch
Type: text/x-patch
Size: 23525 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080824/ce5d9568/attachment-0001.bin 

From david.adam.cnrs at gmail.com  Sun Aug 24 15:15:23 2008
From: david.adam.cnrs at gmail.com (David Adam)
Date: Sun, 24 Aug 2008 22:15:23 +0200
Subject: d3dx9: Add stubs for D3DXCreateEffectxx and
	D3DXCreateEffectFromFilexx
In-Reply-To: <975825.67640.qm@web26106.mail.ukl.yahoo.com>
References: <975825.67640.qm@web26106.mail.ukl.yahoo.com>
Message-ID: <5f9140a20808241315n4e103fb1y519cd98864ba828e@mail.gmail.com>

Hello,

A few remarks:

1) this patch is too huge
You need to split it in several patches. I advice you to do a patch for
- d3dx9effect.h
-an another one for d3dx9shader.h
-an another one for D3DXCreateEffect
-an another one for D3DXCreateEffectExW and D3DXCreateEffectExW

2) for the patch D3DXCreateEffect
you need to stub not only this function but also, all the methods coming
with this function

David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080824/9db80d01/attachment.htm 

From mounir.idrassi at idrix.net  Mon Aug 25 03:56:25 2008
From: mounir.idrassi at idrix.net (Mounir IDRASSI)
Date: Mon, 25 Aug 2008 10:56:25 +0200 (CEST)
Subject: [Patch] 0001-Support-for-winscard.dll.patch
Message-ID: <6d67379875547e20f0d2f821d6786733.squirrel@ssl3.ovh.net>

Hi All,

I have just been informed by one of my contacts that this discussion about
Winscard has started.
As the original author of Winscard for Wine, I'd like to inform you that I
have already posted a fully functional Winscard patch for Wine on April
2007. Here is the link to it :

http://www.winehq.org/pipermail/wine-devel/2007-April/056432.html

Afterwards, my complete patch was not accepted because I was relying on
the fact that alignment of the Winscard structures coming from the WIN32
world is the same as the alignment expected by pcsclite on the system on
which Wine is running. My assumption is true for Linux 32Bit but I clearly
can't guarantee that on other platforms.

Anyway, my implementation is running production systems on two of my
customers under Linux 32bit (Ubuntu, CCID readers) and it has been tested
by many users who contacted me directly to provide them with the full
featured winscard version. For that, I distribute the winscard binary for
32-bit Linux systems under the following link :

http://www.idrix.fr/Root/SCard4Wine/winscard.tar.gz

I think it would be more efficient if your effort can benefit from my
patch and all the experience I have put on it. The source from my side has
evolved a little bit but it remains close to the original posting. I hope
there will room for collaboration of this to provide a maximum number of
Wine users with smart cards functionalities.

Cheers,
--
Mounir IDRASSI
IDRIX
http://www.idrix.fr





From stefan at codeweavers.com  Mon Aug 25 09:04:06 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Mon, 25 Aug 2008 09:04:06 -0500
Subject: [try 3][1/2]wined3d: Support clipplanes with GLSL shaders
In-Reply-To: <200808251324.43043.der.fabe@gmx.net>
References: <200808251324.43043.der.fabe@gmx.net>
Message-ID: <000001c906bb$70819000$5184b000$@com>

+    if(gl_info->max_glsl_varyings > 32)
+        gl_info->max_glsl_varyings -= 4;
+    if(!apple && gl_info->gl_vendor == VENDOR_ATI &&
gl_info->max_glsl_varyings == 40) {
+        WARN("Hardcoded 32 varyings instead of 44 to avoid crashing the ATI
driver\n");
+        gl_info->max_glsl_varyings -= 4;
+    }
This will give you 36 varyings, not 32. Is this intentional?


> -----Original Message-----
> From: wine-patches-bounces at winehq.org [mailto:wine-patches-
> bounces at winehq.org] On Behalf Of Fabian Bieler
> Sent: Monday, August 25, 2008 6:25 AM
> To: wine-patches at winehq.org
> Subject: [try 3][1/2]wined3d: Support clipplanes with GLSL shaders
> 




From kai.blin at gmail.com  Mon Aug 25 09:29:55 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Mon, 25 Aug 2008 16:29:55 +0200
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
In-Reply-To: <d658b69e0808241506n3a189a7cob0cfe53d16c743be@mail.gmail.com>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
	<a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>
	<d658b69e0808241506n3a189a7cob0cfe53d16c743be@mail.gmail.com>
Message-ID: <200808251629.59022.kai.blin@gmail.com>

On Monday 25 August 2008 00:06:29 Henri Verbeet wrote:
> Something else... I sometimes reply to patches, and right now that
> seems to cause patchwatcher to complain that my mail doesn't contain a
> patch. Would it be possible to do something about that?

I've got to agree with James on that one. Replies to patches should contain a 
patch or be to wine-devel. Patchwatcher helps to remind people on a policy 
here. This will also help people who forgot to attach a patch to their email, 
so I think it's a good idea to not ignore emails without patches.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080825/c2312e0a/attachment.pgp 

From frechdachs69 at sofortsurf.de  Mon Aug 25 10:09:22 2008
From: frechdachs69 at sofortsurf.de (frechdachs69)
Date: Mon, 25 Aug 2008 17:09:22 +0200
Subject: [Patch] 0001-Support-for-winscard.dll.patch
In-Reply-To: <6d67379875547e20f0d2f821d6786733.squirrel@ssl3.ovh.net>
References: <6d67379875547e20f0d2f821d6786733.squirrel@ssl3.ovh.net>
Message-ID: <200808251709.23801.frechdachs69@sofortsurf.de>

Thanks ... I am going to have a deep look into your sources.

Regards
Heiko

Am Montag, 25. August 2008 10:56:25 schrieb Mounir IDRASSI:
> Hi All,
>
> I have just been informed by one of my contacts that this discussion about
> Winscard has started.
> As the original author of Winscard for Wine, I'd like to inform you that I
> have already posted a fully functional Winscard patch for Wine on April
> 2007. Here is the link to it :
>
> http://www.winehq.org/pipermail/wine-devel/2007-April/056432.html
>
> Afterwards, my complete patch was not accepted because I was relying on
> the fact that alignment of the Winscard structures coming from the WIN32
> world is the same as the alignment expected by pcsclite on the system on
> which Wine is running. My assumption is true for Linux 32Bit but I clearly
> can't guarantee that on other platforms.
>
> Anyway, my implementation is running production systems on two of my
> customers under Linux 32bit (Ubuntu, CCID readers) and it has been tested
> by many users who contacted me directly to provide them with the full
> featured winscard version. For that, I distribute the winscard binary for
> 32-bit Linux systems under the following link :
>
> http://www.idrix.fr/Root/SCard4Wine/winscard.tar.gz
>
> I think it would be more efficient if your effort can benefit from my
> patch and all the experience I have put on it. The source from my side has
> evolved a little bit but it remains close to the original posting. I hope
> there will room for collaboration of this to provide a maximum number of
> Wine users with smart cards functionalities.
>
> Cheers,
> --
> Mounir IDRASSI
> IDRIX
> http://www.idrix.fr




From julliard at winehq.org  Mon Aug 25 10:47:02 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 25 Aug 2008 17:47:02 +0200
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
In-Reply-To: <200808251629.59022.kai.blin@gmail.com> (Kai Blin's message of
	"Mon, 25 Aug 2008 16:29:55 +0200")
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
	<a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>
	<d658b69e0808241506n3a189a7cob0cfe53d16c743be@mail.gmail.com>
	<200808251629.59022.kai.blin@gmail.com>
Message-ID: <87skst6qrt.fsf@wine.dyndns.org>

Kai Blin <kai.blin at gmail.com> writes:

> On Monday 25 August 2008 00:06:29 Henri Verbeet wrote:
>> Something else... I sometimes reply to patches, and right now that
>> seems to cause patchwatcher to complain that my mail doesn't contain a
>> patch. Would it be possible to do something about that?
>
> I've got to agree with James on that one. Replies to patches should contain a 
> patch or be to wine-devel. Patchwatcher helps to remind people on a policy 
> here. This will also help people who forgot to attach a patch to their email, 
> so I think it's a good idea to not ignore emails without patches.

Even better patchwatcher should watch for replies on wine-devel, and
link the reply to the patch and mark the patch as needing further action
on the submitter's part.

-- 
Alexandre Julliard
julliard at winehq.org


From paul.vriens.wine at gmail.com  Mon Aug 25 10:52:09 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Mon, 25 Aug 2008 17:52:09 +0200
Subject: Patchwatcher status: regenerates configure,	notifies authors
	on failure, filtered patches mailing list
In-Reply-To: <87skst6qrt.fsf@wine.dyndns.org>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>	<a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>	<d658b69e0808241506n3a189a7cob0cfe53d16c743be@mail.gmail.com>	<200808251629.59022.kai.blin@gmail.com>
	<87skst6qrt.fsf@wine.dyndns.org>
Message-ID: <48B2D529.3060200@gmail.com>

Alexandre Julliard wrote:
> Kai Blin <kai.blin at gmail.com> writes:
> 
>> On Monday 25 August 2008 00:06:29 Henri Verbeet wrote:
>>> Something else... I sometimes reply to patches, and right now that
>>> seems to cause patchwatcher to complain that my mail doesn't contain a
>>> patch. Would it be possible to do something about that?
>> I've got to agree with James on that one. Replies to patches should contain a 
>> patch or be to wine-devel. Patchwatcher helps to remind people on a policy 
>> here. This will also help people who forgot to attach a patch to their email, 
>> so I think it's a good idea to not ignore emails without patches.
> 
> Even better patchwatcher should watch for replies on wine-devel, and
> link the reply to the patch and mark the patch as needing further action
> on the submitter's part.
> 
Nice way of blocking a patch ;-).

-- 
Cheers,

Paul.


From truiken at gmail.com  Mon Aug 25 10:58:04 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 25 Aug 2008 10:58:04 -0500
Subject: Add TRACEs to NtCreateFile returns (second try)
In-Reply-To: <F18EC709-65B6-4F7A-A812-92AA62F2131D@jump-ing.de>
References: <8698375D-D8C9-4A19-A4DB-54603DFC26C7@jump-ing.de>
	<22821af30808241631n373a3206x2d64cc6a7df5ffcf@mail.gmail.com>
	<F18EC709-65B6-4F7A-A812-92AA62F2131D@jump-ing.de>
Message-ID: <22821af30808250858s5af39a6o4c65c34676251120@mail.gmail.com>

On Mon, Aug 25, 2008 at 3:12 AM, Markus Hitter <mah at jump-ing.de> wrote:
>
> Am 25.08.2008 um 01:31 schrieb James Hawkins:
>
>> 2008/8/24 Markus Hitter <mah at jump-ing.de>:
>>>
>>
>> +    if (!attr || !attr->ObjectName)
>> +    {
>> +        TRACE("returning STATUS_INVALID_PARAMETER\n");
>> +        return STATUS_INVALID_PARAMETER;
>> +    }
>>
>>
>> These are all very useless TRACES, except for possibly the returned
>> handle value.
>
> Well, the idea is to TRACE() something for all possible return values.
> Michael Karcher, Rob Shearman and me obviously consider them as useful:
>
> <http://thread.gmane.org/gmane.comp.emulators.wine.patches/54527/>
>

I doubt Rob was agreeing with the above trace.  He merely clarified
how you should print variable values and returned handles.

>> As a side note of something I just noticed, the check for NULL attr will
>> never be true because we'll crash in the TRACE when we dereference attr.
>
> In case of (attr == NULL), same as (!attr), the code right to the ||
> shouldn't be reached, so no dereferencing should take place, then.
> TRACE()/printf() is capable of handling 0/NULL/nil values as well.
>

No, take a look at the TRACE again.  If attr is NULL, you'll crash in
the TRACE.  Neither TRACE nor printf handle NULL strings; debugstr_a/w
is what handles NULL strings, but that's beside the point I'm making,
as we're talking about attr being NULL, not attr->ObjectName.

> BTW., the TRACE() in the code you cited doesn't dereference anything and for
> the other parts of the patch, dereferencing only takes place where the
> current code dereferences anyways.
>

Thus why I said "as a side note."  It had nothing to do with your patch.

-- 
James Hawkins


From scott at open-vote.org  Mon Aug 25 11:21:13 2008
From: scott at open-vote.org (Scott Ritchie)
Date: Mon, 25 Aug 2008 09:21:13 -0700
Subject: New steam survey statistics?
In-Reply-To: <48B1E2F0.9050904@eternaldusk.com>
References: <48B1D91E.6010904@open-vote.org> <48B1E2F0.9050904@eternaldusk.com>
Message-ID: <48B2DBF9.4040207@open-vote.org>

Evil Jay wrote:
> I too would be interested in seeing the numbers, but I'm not sure you're
> going to see the correlation you expect, Scott.
> 
> While Linux adoption may have grown, Valve has probably been selling
> just as many, if not more games to customers who already owned Windows
> but had never used Steam. 

A priori, I don't think there's any reason to expect a decrease in
Wine's steam marketshare unless there's something that's made it
relatively worse compared with a Windows install.  The release of
BioShock over steam, for instance, was such a reason since it didn't
work on Wine, but that happened before the previous survey.  New video
cards not having (good) Linux drivers would be a similar reason, but as
I understand it the newer video cards have better Linux drivers these
days than the old ones.

On the other hand, we've seen some serious relative improvements to Wine
- Wine 1.0, Crossover Games, new distro releases, increased Linux
desktop marketshare.  Maybe 1% is too high, but I'm certainly not
expecting a decrease.

Thanks,
Scott Ritchie


From juan.lang at gmail.com  Mon Aug 25 11:47:40 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 25 Aug 2008 09:47:40 -0700
Subject: cryptnet: Sign-compare warning fix (try 2)
Message-ID: <3a768c550808250947w7b717186oe828ee30864bfc92@mail.gmail.com>

Hi Andy,

+            LONG last_error;

             ret = CryptGetObjectUrl(URL_OID_CERTIFICATE_CRL_DIST_POINT,
              rgpvContext[i], 0, NULL, &cbUrlArray, NULL, NULL, NULL);
-            if (!ret && GetLastError() == CRYPT_E_NOT_FOUND)
+            last_error = GetLastError();
+            if (!ret && last_error == CRYPT_E_NOT_FOUND)

I don't get it.  How does using a temporary LONG rather than
GetLastError directly remove the warning?  Either the compiler was
wrong about the first warning, or it's wrong about not warning about
this form.  I don't see the utility of this patch.  Furthermore, any
patches that remove warnings due to sign mismatches between
GetLastError and an error in winerror.h reflect an error on
Microsoft's part, not on Wine's, so I don't see the point of removing
them.
--Juan


From alfred at valvesoftware.com  Mon Aug 25 12:14:42 2008
From: alfred at valvesoftware.com (Alfred Reynolds)
Date: Mon, 25 Aug 2008 10:14:42 -0700
Subject: New steam survey statistics?
In-Reply-To: <48B2DBF9.4040207@open-vote.org>
References: <48B1D91E.6010904@open-vote.org> <48B1E2F0.9050904@eternaldusk.com>
	<48B2DBF9.4040207@open-vote.org>
Message-ID: <BC2A76AABABF8741A8ADEE62DB1350F805A04CDB@exchange2.valvesoftware.com>

We recently switched our survey system from a monolithic bi-yearly
survey to a monthly rolling survey with a subset of the userbase each
month, so we can get a continuous view of changes in hardware amongst
our users.

We have 2 months of good data to date, Wine usage has increased from
0.33 to 0.36% over that month, but given the small number of Wine
responses any increase would be in the margins of error. So Wine usage
looks steady since last year amongst the Steam usebase as a whole.

As always the Steam Survey is an opt-in system so usual reporting biases
could apply.

- Alfred

> -----Original Message-----
> From: wine-devel-bounces at winehq.org [mailto:wine-devel-
> bounces at winehq.org] On Behalf Of Scott Ritchie
> Sent: Monday, August 25, 2008 9:21 AM
> To: Evil Jay
> Cc: Wine Devel
> Subject: Re: New steam survey statistics?
> 
> Evil Jay wrote:
> > I too would be interested in seeing the numbers, but I'm not sure
> you're
> > going to see the correlation you expect, Scott.
> >
> > While Linux adoption may have grown, Valve has probably been selling
> > just as many, if not more games to customers who already owned
> Windows
> > but had never used Steam.
> 
> A priori, I don't think there's any reason to expect a decrease in
> Wine's steam marketshare unless there's something that's made it
> relatively worse compared with a Windows install.  The release of
> BioShock over steam, for instance, was such a reason since it didn't
> work on Wine, but that happened before the previous survey.  New video
> cards not having (good) Linux drivers would be a similar reason, but
as
> I understand it the newer video cards have better Linux drivers these
> days than the old ones.
> 
> On the other hand, we've seen some serious relative improvements to
> Wine
> - Wine 1.0, Crossover Games, new distro releases, increased Linux
> desktop marketshare.  Maybe 1% is too high, but I'm certainly not
> expecting a decrease.
> 
> Thanks,
> Scott Ritchie
> 



From Andrew.Talbot at talbotville.com  Mon Aug 25 12:26:04 2008
From: Andrew.Talbot at talbotville.com (Andrew Talbot)
Date: Mon, 25 Aug 2008 18:26:04 +0100
Subject: cryptnet: Sign-compare warning fix (try 2)
References: <3a768c550808250947w7b717186oe828ee30864bfc92@mail.gmail.com>
Message-ID: <g8upvd$21t$1@ger.gmane.org>

Juan Lang wrote:

> Hi Andy,
> 
> +            LONG last_error;
> 
>              ret = CryptGetObjectUrl(URL_OID_CERTIFICATE_CRL_DIST_POINT,
>               rgpvContext[i], 0, NULL, &cbUrlArray, NULL, NULL, NULL);
> -            if (!ret && GetLastError() == CRYPT_E_NOT_FOUND)
> +            last_error = GetLastError();
> +            if (!ret && last_error == CRYPT_E_NOT_FOUND)
> 
> I don't get it.  How does using a temporary LONG rather than
> GetLastError directly remove the warning?  Either the compiler was
> wrong about the first warning, or it's wrong about not warning about
> this form.  I don't see the utility of this patch.  Furthermore, any
> patches that remove warnings due to sign mismatches between
> GetLastError and an error in winerror.h reflect an error on
> Microsoft's part, not on Wine's, so I don't see the point of removing
> them.
> --Juan

Hi Juan,

An error code like CRYPT_E_NOT_FOUND is, in essence, a LONG (signed).
Whereas GetLastError() returns a DWORD (unsigned, which does seem
inappropriate to me). So the compiler is correct to warn about the original
code. In the case of the assignment to the temporary, the compiler
automatically coerces the right-hand side to suit the left. Let me attempt
to illustrate with the following code.

    signed char i, j, k;

    i = j + k;

In the above code, j and k would first be automatically promoted to intS
(integer promotion), then they would be added together, the result being an
int. Finally, this result would be coerced back into being a signed char
again: no cast required. (It's up to the programmer to avoid overflow).
Thus, one can avoid a cast by using an assignment.

Regarding whether there is a point in removing such errors: I suppose, if we
want to apply -Wsign-compare for the whole codebase and have zero warnings
during a build, then I don't think we have any choice.

-- 
Andy.




From juan.lang at gmail.com  Mon Aug 25 12:31:44 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 25 Aug 2008 10:31:44 -0700
Subject: cryptnet: Sign-compare warning fix (try 2)
In-Reply-To: <g8upvd$21t$1@ger.gmane.org>
References: <3a768c550808250947w7b717186oe828ee30864bfc92@mail.gmail.com>
	<g8upvd$21t$1@ger.gmane.org>
Message-ID: <3a768c550808251031k365a85b9mdc236bfb0e410ff1@mail.gmail.com>

Hi Andy,

> An error code like CRYPT_E_NOT_FOUND is, in essence, a LONG (signed).
> Whereas GetLastError() returns a DWORD (unsigned, which does seem
> inappropriate to me).

Yes, I know what the value of CRYPT_E_NOT_FOUND is, and what the type
of GetLastError is.  My point is, Microsoft confused signed and
unsigned types for their last error values.  We have to live with it.

> Regarding whether there is a point in removing such errors: I suppose, if we
> want to apply -Wsign-compare for the whole codebase and have zero warnings
> during a build, then I don't think we have any choice.

I don't think the cost of adding silly casts or temporaries to avoid
giving a warning on a common code idiom is worth it.
--Juan


From dank at kegel.com  Mon Aug 25 12:35:23 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 25 Aug 2008 10:35:23 -0700
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
In-Reply-To: <87skst6qrt.fsf@wine.dyndns.org>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
	<a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>
	<d658b69e0808241506n3a189a7cob0cfe53d16c743be@mail.gmail.com>
	<200808251629.59022.kai.blin@gmail.com>
	<87skst6qrt.fsf@wine.dyndns.org>
Message-ID: <a71bd89a0808251035v28417eedhb7932a369896fa7f@mail.gmail.com>

On Mon, Aug 25, 2008 at 8:47 AM, Alexandre Julliard <julliard at winehq.org> wrote:
> patchwatcher should watch for replies on wine-devel, and
> link the reply to the patch

Yes.   The other similar patchwatching systems I found do this,
and ours should, too.

> and mark the patch as needing further action on the submitter's part.

Even if the message says "Great job!"?
- Dan


From julliard at winehq.org  Mon Aug 25 13:00:41 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 25 Aug 2008 20:00:41 +0200
Subject: How should I name the Traditional Chinese resource file ?
In-Reply-To: <E1KXArT-0001kZ-31@wine.codeweavers.com> (Hongbo Ni's message of
	"Sun, 24 Aug 2008 18:21:34 +1000")
References: <E1KXArT-0001kZ-31@wine.codeweavers.com>
Message-ID: <87k5e56kl2.fsf@wine.dyndns.org>

Hongbo Ni <hongbo at njstar.com> writes:

> 1. name it Zh_tw.rc, (but Alexandre seems not like it)
> 2. name it Tw.rc
> 3. rename all Zh.rc to Cn.rc, then name traditional as Zh.rc
> 4. just put both simplified and traditional Chinese in Zh.rc
>    (not good as they are different encoding).
>
> My question is how should I name it ? 

The best solution is 4, we try to use a single file per language. If
encoding is an issue you can convert the file to utf-8.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Mon Aug 25 13:08:29 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 25 Aug 2008 20:08:29 +0200
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
In-Reply-To: <a71bd89a0808251035v28417eedhb7932a369896fa7f@mail.gmail.com>
	(Dan Kegel's message of "Mon, 25 Aug 2008 10:35:23 -0700")
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
	<a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>
	<d658b69e0808241506n3a189a7cob0cfe53d16c743be@mail.gmail.com>
	<200808251629.59022.kai.blin@gmail.com>
	<87skst6qrt.fsf@wine.dyndns.org>
	<a71bd89a0808251035v28417eedhb7932a369896fa7f@mail.gmail.com>
Message-ID: <87fxot6k82.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> On Mon, Aug 25, 2008 at 8:47 AM, Alexandre Julliard <julliard at winehq.org> wrote:
>> patchwatcher should watch for replies on wine-devel, and
>> link the reply to the patch
>
> Yes.   The other similar patchwatching systems I found do this,
> and ours should, too.
>
>> and mark the patch as needing further action on the submitter's part.
>
> Even if the message says "Great job!"?

Sure, that's not the usual case. In most cases when a patch gets a reply
it's because it will need changes. There could of course be a way for a
submitter to mark the patch as still valid, but the first action should
be to take the patch off the list of committable patches.

-- 
Alexandre Julliard
julliard at winehq.org


From ken at codeweavers.com  Mon Aug 25 13:11:34 2008
From: ken at codeweavers.com (Ken Thomases)
Date: Mon, 25 Aug 2008 13:11:34 -0500
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
In-Reply-To: <87fxot6k82.fsf@wine.dyndns.org>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
	<a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>
	<d658b69e0808241506n3a189a7cob0cfe53d16c743be@mail.gmail.com>
	<200808251629.59022.kai.blin@gmail.com>
	<87skst6qrt.fsf@wine.dyndns.org>
	<a71bd89a0808251035v28417eedhb7932a369896fa7f@mail.gmail.com>
	<87fxot6k82.fsf@wine.dyndns.org>
Message-ID: <B4923C1D-9204-49A9-BBAA-68302B8EE78C@codeweavers.com>

On Aug 25, 2008, at 1:08 PM, Alexandre Julliard wrote:

> "Dan Kegel" <dank at kegel.com> writes:
>
>> On Mon, Aug 25, 2008 at 8:47 AM, Alexandre Julliard  
>> <julliard at winehq.org> wrote:
>>> patchwatcher should watch for replies on wine-devel, and
>>> link the reply to the patch
>>
>> Yes.   The other similar patchwatching systems I found do this,
>> and ours should, too.
>>
>>> and mark the patch as needing further action on the submitter's  
>>> part.
>>
>> Even if the message says "Great job!"?
>
> Sure, that's not the usual case. In most cases when a patch gets a  
> reply
> it's because it will need changes. There could of course be a way  
> for a
> submitter to mark the patch as still valid, but the first action  
> should
> be to take the patch off the list of committable patches.

Perhaps replies meant to approve of a patch could include a special  
textual directive to indicate that patchwatcher shouldn't block the  
patch.  Something like:

#patchwatcher approve

Such a directive would only be recognized if it's alone on a line.

-Ken



From tony.wasserka at freenet.de  Mon Aug 25 13:29:13 2008
From: tony.wasserka at freenet.de (tony.wasserka at freenet.de)
Date: Mon, 25 Aug 2008 20:29:13 +0200
Subject: [3/3] d3dx9: Begin Implementation of ID3DXEffect
	and	D3DXCreateEffectEx
Message-ID: <0d46a128b15ebd702a6581777811afc0@email.freenet.de>

Hi,
> +HRESULT WINAPI D3DXCreateEffectEx(LPDIRECT3DDEVICE9 pdevice, LPCVOID
psrcdata, UINT srcdatalen, D3DXMACRO *pdefines,
> +  LPD3DXINCLUDE pinclude,  LPCSTR pskipconstants,  DWORD flags, 
LPD3DXEFFECTPOOL ppool,  LPD3DXEFFECT * ppeffect,
> +  LPD3DXBUFFER * ppcompilationerrors)
> +{
> +    ID3DXEffectImpl *This;
> +    This=(ID3DXEffectImpl *)malloc(sizeof(ID3DXEffectImpl));
> +    This->lpVtbl=&ID3DXEffect_Vtbl;
> +    This->device=pdevice;
> +    return D3D_OK;
> +}
> +
Don't use malloc for windows functions, use HeapAlloc for that.
Also, you should do some error checking to make sure that the memory was
allocated successfully, or this code will segfault.
You forgot to assign the ppeffect pointer to This, i.e. *ppeffect=This.
you'll need to check that ppeffect isn't NULL first, of course.
At least ID3DXBaseEffectImpl_AddRef/Release/QueryInterface (well,
actually only Release) need to be implemented in the same patch as the
interface leaks memory otherwise (one more unnecessary valgrind error).
Last thing, you need to AddRef the device when creating another
reference to it, and Release it on ID3DXBaseEffectImpl_Release. (Though
a device pointer isn't even neccessary yet, so you could also leave it
away)

Best regards,
 Tony




Heute schon ge"freeMail"t?
Jetzt kostenlose E-Mail-Adresse
sichern!
http://email.freenet.de/dienste/emailoffice/produktuebersicht/basic/mail/index.html?pid=6831



From Andrew.Talbot at talbotville.com  Mon Aug 25 13:36:30 2008
From: Andrew.Talbot at talbotville.com (Andrew Talbot)
Date: Mon, 25 Aug 2008 19:36:30 +0100
Subject: cryptnet: Sign-compare warning fix (try 2)
References: <3a768c550808250947w7b717186oe828ee30864bfc92@mail.gmail.com>
	<g8upvd$21t$1@ger.gmane.org>
	<3a768c550808251031k365a85b9mdc236bfb0e410ff1@mail.gmail.com>
Message-ID: <g8uu3e$ih3$1@ger.gmane.org>

Juan Lang wrote:

> Yes, I know what the value of CRYPT_E_NOT_FOUND is, and what the type
> of GetLastError is.  My point is, Microsoft confused signed and
> unsigned types for their last error values.  We have to live with it.
> 

Indeed. (And sorry, I didn't mean to sound patronizing.)

> I don't think the cost of adding silly casts or temporaries to avoid
> giving a warning on a common code idiom is worth it.

That's the trouble with some warnings: some instances you want to fix and
some you know you can safely ignore. I presumed that we were aiming to turn
this warning on permanently, but that may not be the intention, and maybe
the downside you highlight makes doing so not worthwhile.

-- 
Andy.




From juan.lang at gmail.com  Mon Aug 25 13:44:21 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 25 Aug 2008 11:44:21 -0700
Subject: cryptnet: Sign-compare warning fix (try 2)
In-Reply-To: <g8uu3e$ih3$1@ger.gmane.org>
References: <3a768c550808250947w7b717186oe828ee30864bfc92@mail.gmail.com>
	<g8upvd$21t$1@ger.gmane.org>
	<3a768c550808251031k365a85b9mdc236bfb0e410ff1@mail.gmail.com>
	<g8uu3e$ih3$1@ger.gmane.org>
Message-ID: <3a768c550808251144saa8bd00mcc09d87ae95fb89b@mail.gmail.com>

> That's the trouble with some warnings: some instances you want to fix and
> some you know you can safely ignore. I presumed that we were aiming to turn
> this warning on permanently, but that may not be the intention, and maybe
> the downside you highlight makes doing so not worthwhile.

Turning on -Wsign-compare may be useful, but I don't think combining
it with -Werror is.  This is the trouble with warnings in general:
they may or may not point out a real bug.  Fixing the bugs is useful,
but fixing non-bugs really isn't, unless the code is somehow improved
as a result.  Making code look worse to remove a warning is clearly
not useful.
--Juan


From truiken at gmail.com  Mon Aug 25 13:46:51 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 25 Aug 2008 13:46:51 -0500
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
In-Reply-To: <B4923C1D-9204-49A9-BBAA-68302B8EE78C@codeweavers.com>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
	<a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>
	<d658b69e0808241506n3a189a7cob0cfe53d16c743be@mail.gmail.com>
	<200808251629.59022.kai.blin@gmail.com>
	<87skst6qrt.fsf@wine.dyndns.org>
	<a71bd89a0808251035v28417eedhb7932a369896fa7f@mail.gmail.com>
	<87fxot6k82.fsf@wine.dyndns.org>
	<B4923C1D-9204-49A9-BBAA-68302B8EE78C@codeweavers.com>
Message-ID: <22821af30808251146i16d15f00s75ac63523c75126a@mail.gmail.com>

On Mon, Aug 25, 2008 at 1:11 PM, Ken Thomases <ken at codeweavers.com> wrote:
> On Aug 25, 2008, at 1:08 PM, Alexandre Julliard wrote:
>
>> "Dan Kegel" <dank at kegel.com> writes:
>>
>>> On Mon, Aug 25, 2008 at 8:47 AM, Alexandre Julliard
>>> <julliard at winehq.org> wrote:
>>>> patchwatcher should watch for replies on wine-devel, and
>>>> link the reply to the patch
>>>
>>> Yes.   The other similar patchwatching systems I found do this,
>>> and ours should, too.
>>>
>>>> and mark the patch as needing further action on the submitter's
>>>> part.
>>>
>>> Even if the message says "Great job!"?
>>
>> Sure, that's not the usual case. In most cases when a patch gets a
>> reply
>> it's because it will need changes. There could of course be a way
>> for a
>> submitter to mark the patch as still valid, but the first action
>> should
>> be to take the patch off the list of committable patches.
>
> Perhaps replies meant to approve of a patch could include a special
> textual directive to indicate that patchwatcher shouldn't block the
> patch.  Something like:
>
> #patchwatcher approve
>
> Such a directive would only be recognized if it's alone on a line.
>

The usual positive reply is 'ACK'.  I believe it would be simplest to
grep the reply message for ACK to see if a reply is positive.

-- 
James Hawkins


From chmorgan at gmail.com  Mon Aug 25 14:15:41 2008
From: chmorgan at gmail.com (Chris Morgan)
Date: Mon, 25 Aug 2008 15:15:41 -0400
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
In-Reply-To: <22821af30808251146i16d15f00s75ac63523c75126a@mail.gmail.com>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
	<a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>
	<d658b69e0808241506n3a189a7cob0cfe53d16c743be@mail.gmail.com>
	<200808251629.59022.kai.blin@gmail.com>
	<87skst6qrt.fsf@wine.dyndns.org>
	<a71bd89a0808251035v28417eedhb7932a369896fa7f@mail.gmail.com>
	<87fxot6k82.fsf@wine.dyndns.org>
	<B4923C1D-9204-49A9-BBAA-68302B8EE78C@codeweavers.com>
	<22821af30808251146i16d15f00s75ac63523c75126a@mail.gmail.com>
Message-ID: <f3f1b91a0808251215l3bf968a8j1a7997d2d92389a9@mail.gmail.com>

On Mon, Aug 25, 2008 at 2:46 PM, James Hawkins <truiken at gmail.com> wrote:
> On Mon, Aug 25, 2008 at 1:11 PM, Ken Thomases <ken at codeweavers.com> wrote:
>> On Aug 25, 2008, at 1:08 PM, Alexandre Julliard wrote:
>>
>>> "Dan Kegel" <dank at kegel.com> writes:
>>>
>>>> On Mon, Aug 25, 2008 at 8:47 AM, Alexandre Julliard
>>>> <julliard at winehq.org> wrote:
>>>>> patchwatcher should watch for replies on wine-devel, and
>>>>> link the reply to the patch
>>>>
>>>> Yes.   The other similar patchwatching systems I found do this,
>>>> and ours should, too.
>>>>
>>>>> and mark the patch as needing further action on the submitter's
>>>>> part.
>>>>
>>>> Even if the message says "Great job!"?
>>>
>>> Sure, that's not the usual case. In most cases when a patch gets a
>>> reply
>>> it's because it will need changes. There could of course be a way
>>> for a
>>> submitter to mark the patch as still valid, but the first action
>>> should
>>> be to take the patch off the list of committable patches.
>>
>> Perhaps replies meant to approve of a patch could include a special
>> textual directive to indicate that patchwatcher shouldn't block the
>> patch.  Something like:
>>
>> #patchwatcher approve
>>
>> Such a directive would only be recognized if it's alone on a line.
>>
>
> The usual positive reply is 'ACK'.  I believe it would be simplest to
> grep the reply message for ACK to see if a reply is positive.
>
> --
> James Hawkins
>

It might be useful if the patch emails themselves contained the
patchwatcher documentation. If the mail server could append some
instructions onto the patch email we could add some simple directions
on how to reply to the patch with an ack etc.

Chris


From mah at jump-ing.de  Mon Aug 25 14:29:53 2008
From: mah at jump-ing.de (Markus Hitter)
Date: Mon, 25 Aug 2008 21:29:53 +0200
Subject: Add TRACEs to NtCreateFile returns (second try)
In-Reply-To: <22821af30808250858s5af39a6o4c65c34676251120@mail.gmail.com>
References: <8698375D-D8C9-4A19-A4DB-54603DFC26C7@jump-ing.de>
	<22821af30808241631n373a3206x2d64cc6a7df5ffcf@mail.gmail.com>
	<F18EC709-65B6-4F7A-A812-92AA62F2131D@jump-ing.de>
	<22821af30808250858s5af39a6o4c65c34676251120@mail.gmail.com>
Message-ID: <161327AA-4566-490C-AE65-529F5DA4C8A6@jump-ing.de>


Am 25.08.2008 um 17:58 schrieb James Hawkins:

> On Mon, Aug 25, 2008 at 3:12 AM, Markus Hitter <mah at jump-ing.de>  
> wrote:
>>
>> Am 25.08.2008 um 01:31 schrieb James Hawkins:
>>
>>> 2008/8/24 Markus Hitter <mah at jump-ing.de>:
>>>
>>> -    if (!attr || !attr->ObjectName) return  
>>> STATUS_INVALID_PARAMETER;
>>> +    if (!attr || !attr->ObjectName)
>>> +    {
>>> +        TRACE("returning STATUS_INVALID_PARAMETER\n");
>>> +        return STATUS_INVALID_PARAMETER;
>>> +    }
>
> If attr is NULL, you'll crash in the TRACE.

Pardon. If attr is NULL, the TRACE() isn't even reached.

As I obviously can't follow you how the additional TRACE() makes the  
code more fragile, please go ahead and post a short sample code  
showing how the above snippet is done right. Thanks.


Markus


P.S.: I took the freedom and extended your patch citation slightly.

- - - - - - - - - - - - - - - - - - -
Dipl. Ing. Markus Hitter
http://www.jump-ing.de/






From truiken at gmail.com  Mon Aug 25 14:39:20 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 25 Aug 2008 14:39:20 -0500
Subject: Add TRACEs to NtCreateFile returns (second try)
In-Reply-To: <161327AA-4566-490C-AE65-529F5DA4C8A6@jump-ing.de>
References: <8698375D-D8C9-4A19-A4DB-54603DFC26C7@jump-ing.de>
	<22821af30808241631n373a3206x2d64cc6a7df5ffcf@mail.gmail.com>
	<F18EC709-65B6-4F7A-A812-92AA62F2131D@jump-ing.de>
	<22821af30808250858s5af39a6o4c65c34676251120@mail.gmail.com>
	<161327AA-4566-490C-AE65-529F5DA4C8A6@jump-ing.de>
Message-ID: <22821af30808251239r3d7fe38eo439d8bfbcbb55b63@mail.gmail.com>

On Mon, Aug 25, 2008 at 2:29 PM, Markus Hitter <mah at jump-ing.de> wrote:
>
> Am 25.08.2008 um 17:58 schrieb James Hawkins:
>
>> On Mon, Aug 25, 2008 at 3:12 AM, Markus Hitter <mah at jump-ing.de> wrote:
>>>
>>> Am 25.08.2008 um 01:31 schrieb James Hawkins:
>>>
>>>> 2008/8/24 Markus Hitter <mah at jump-ing.de>:
>>>>
>>>> -    if (!attr || !attr->ObjectName) return STATUS_INVALID_PARAMETER;
>>>> +    if (!attr || !attr->ObjectName)
>>>> +    {
>>>> +        TRACE("returning STATUS_INVALID_PARAMETER\n");
>>>> +        return STATUS_INVALID_PARAMETER;
>>>> +    }
>>
>> If attr is NULL, you'll crash in the TRACE.
>
> Pardon. If attr is NULL, the TRACE() isn't even reached.
>

Have you even gone back to look at the code?  Do you know what a side
note is?  I've said it twice now that I wasn't talking about your
patch.  As the code stands now, regardless of your patch, the check
for NULL attr on line 154 of dlls/kernel32/file.c will never be hit
because we will crash in the TRACE on line 148 of
dlls/kernel32/file.c.

> As I obviously can't follow you how the additional TRACE() makes the code
> more fragile, please go ahead and post a short sample code showing how the
> above snippet is done right. Thanks.
>

The added TRACE has nothing to do with the fragility of the code.  My
comment still stands that the added TRACE is absolutely superfluous.

-- 
James Hawkins


From k04jg02 at kzoo.edu  Mon Aug 25 15:06:24 2008
From: k04jg02 at kzoo.edu (Joseph Garvin)
Date: Mon, 25 Aug 2008 16:06:24 -0400
Subject: Using wine directdraw dll on windows?
In-Reply-To: <001501c90592$7185ad80$54910880$@com>
References: <48B0568F.5050309@kzoo.edu> <001501c90592$7185ad80$54910880$@com>
Message-ID: <48B310C0.2060004@kzoo.edu>

Stefan D?singer wrote:
>> Our d3d implementation works pretty well on Windows(well, as good as it does
>> on Wine), with the exception of directdraw. The problem with ddraw is that
>> ddraw.dll needs wined3d.dll, which loads opengl32.dll, and Microsoft's
>> opengl32.dll loads ddraw.dll. Oops.
>>
>> Currently we have no real attacking point to this issue.
>>     
Is there any good reason for the windows opengl32.dll to be loading 
ddraw.dll? Might it load it without actually using it? Seems odd that 
the 3D acceleration API would want to hook into the legacy 2D one.


From scott at open-vote.org  Mon Aug 25 15:12:24 2008
From: scott at open-vote.org (Scott Ritchie)
Date: Mon, 25 Aug 2008 13:12:24 -0700
Subject: New steam survey statistics?
In-Reply-To: <BC2A76AABABF8741A8ADEE62DB1350F805A04CDB@exchange2.valvesoftware.com>
References: <48B1D91E.6010904@open-vote.org> <48B1E2F0.9050904@eternaldusk.com>
	<48B2DBF9.4040207@open-vote.org>
	<BC2A76AABABF8741A8ADEE62DB1350F805A04CDB@exchange2.valvesoftware.com>
Message-ID: <48B31228.8070800@open-vote.org>

Yeah, it would not surprise me if Wine users are much less likely to
follow the survey for whatever reason.

Thanks,
Scott Ritchie

Alfred Reynolds wrote:
> We recently switched our survey system from a monolithic bi-yearly
> survey to a monthly rolling survey with a subset of the userbase each
> month, so we can get a continuous view of changes in hardware amongst
> our users.
> 
> We have 2 months of good data to date, Wine usage has increased from
> 0.33 to 0.36% over that month, but given the small number of Wine
> responses any increase would be in the margins of error. So Wine usage
> looks steady since last year amongst the Steam usebase as a whole.
> 
> As always the Steam Survey is an opt-in system so usual reporting biases
> could apply.
> 
> - Alfred
> 
>> -----Original Message-----
>> From: wine-devel-bounces at winehq.org [mailto:wine-devel-
>> bounces at winehq.org] On Behalf Of Scott Ritchie
>> Sent: Monday, August 25, 2008 9:21 AM
>> To: Evil Jay
>> Cc: Wine Devel
>> Subject: Re: New steam survey statistics?
>>
>> Evil Jay wrote:
>>> I too would be interested in seeing the numbers, but I'm not sure
>> you're
>>> going to see the correlation you expect, Scott.
>>>
>>> While Linux adoption may have grown, Valve has probably been selling
>>> just as many, if not more games to customers who already owned
>> Windows
>>> but had never used Steam.
>> A priori, I don't think there's any reason to expect a decrease in
>> Wine's steam marketshare unless there's something that's made it
>> relatively worse compared with a Windows install.  The release of
>> BioShock over steam, for instance, was such a reason since it didn't
>> work on Wine, but that happened before the previous survey.  New video
>> cards not having (good) Linux drivers would be a similar reason, but
> as
>> I understand it the newer video cards have better Linux drivers these
>> days than the old ones.
>>
>> On the other hand, we've seen some serious relative improvements to
>> Wine
>> - Wine 1.0, Crossover Games, new distro releases, increased Linux
>> desktop marketshare.  Maybe 1% is too high, but I'm certainly not
>> expecting a decrease.
>>
>> Thanks,
>> Scott Ritchie
>>
> 



From sparr0 at gmail.com  Mon Aug 25 15:26:56 2008
From: sparr0 at gmail.com (Sparr)
Date: Mon, 25 Aug 2008 16:26:56 -0400
Subject: New steam survey statistics?
In-Reply-To: <48B31228.8070800@open-vote.org>
References: <48B1D91E.6010904@open-vote.org> <48B1E2F0.9050904@eternaldusk.com>
	<48B2DBF9.4040207@open-vote.org>
	<BC2A76AABABF8741A8ADEE62DB1350F805A04CDB@exchange2.valvesoftware.com>
	<48B31228.8070800@open-vote.org>
Message-ID: <811b48bd0808251326k3eb91e9eq1e83f16783d69dbd@mail.gmail.com>

I considered not submitting the survey because it misdetected my CPU
as 1GHz (it's an Athlon 64 3400ishiforgotexactly).

On Mon, Aug 25, 2008 at 4:12 PM, Scott Ritchie <scott at open-vote.org> wrote:
> Yeah, it would not surprise me if Wine users are much less likely to
> follow the survey for whatever reason.


From thunderbird2k at gmx.net  Mon Aug 25 15:42:59 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Mon, 25 Aug 2008 22:42:59 +0200
Subject: Using wine directdraw dll on windows?
In-Reply-To: <48B310C0.2060004@kzoo.edu>
References: <48B0568F.5050309@kzoo.edu> <001501c90592$7185ad80$54910880$@com>
	<48B310C0.2060004@kzoo.edu>
Message-ID: <20080825204259.96790@gmx.net>

> Stefan D?singer wrote:
> >> Our d3d implementation works pretty well on Windows(well, as good as it
> does
> >> on Wine), with the exception of directdraw. The problem with ddraw is
> that
> >> ddraw.dll needs wined3d.dll, which loads opengl32.dll, and Microsoft's
> >> opengl32.dll loads ddraw.dll. Oops.
> >>
> >> Currently we have no real attacking point to this issue.
> >>     
> Is there any good reason for the windows opengl32.dll to be loading 
> ddraw.dll? Might it load it without actually using it? Seems odd that 
> the 3D acceleration API would want to hook into the legacy 2D one.
> 

The software opengl32 renderer is implemented using directdraw these days and that causes the issues when I experimented with wine's ddraw on windows a while ago. It is possible to work around this (if you declare the number of adapters to 1 before wined3d loads opengl32.dll) from what I remember. It is able to load the functions then but when making GL calls it crashed. Perhaps my radeon9000 drivers had a bug.

Roderick
-- 
Ist Ihr Browser Vista-kompatibel? Jetzt die neuesten 
Browser-Versionen downloaden: http://www.gmx.net/de/go/browser


From kai.blin at gmail.com  Mon Aug 25 16:05:03 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Mon, 25 Aug 2008 23:05:03 +0200
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
In-Reply-To: <22821af30808251146i16d15f00s75ac63523c75126a@mail.gmail.com>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
	<B4923C1D-9204-49A9-BBAA-68302B8EE78C@codeweavers.com>
	<22821af30808251146i16d15f00s75ac63523c75126a@mail.gmail.com>
Message-ID: <200808252305.08700.kai.blin@gmail.com>

On Monday 25 August 2008 20:46:51 James Hawkins wrote:
> On Mon, Aug 25, 2008 at 1:11 PM, Ken Thomases <ken at codeweavers.com> wrote:
> >
> > #patchwatcher approve
> >
> > Such a directive would only be recognized if it's alone on a line.
>
> The usual positive reply is 'ACK'.  I believe it would be simplest to
> grep the reply message for ACK to see if a reply is positive.

Dunno, I find myself replying to patches that fix bugs I worked on myself or 
that were in my code with things like "good catch". I agree with Alexandre 
that cases like that are seldom enough that we can probably ignore them.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080825/3d70420f/attachment.pgp 

From dank at kegel.com  Mon Aug 25 16:20:40 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 25 Aug 2008 14:20:40 -0700
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
In-Reply-To: <200808252305.08700.kai.blin@gmail.com>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
	<B4923C1D-9204-49A9-BBAA-68302B8EE78C@codeweavers.com>
	<22821af30808251146i16d15f00s75ac63523c75126a@mail.gmail.com>
	<200808252305.08700.kai.blin@gmail.com>
Message-ID: <a71bd89a0808251420x4935a27dua0fa0bd78c2bc77d@mail.gmail.com>

On Mon, Aug 25, 2008 at 2:05 PM, Kai Blin <kai.blin at gmail.com> wrote:
>> > #patchwatcher approve
>> >
>> > Such a directive would only be recognized if it's alone on a line.
>>
>> The usual positive reply is 'ACK'.  I believe it would be simplest to
>> grep the reply message for ACK to see if a reply is positive.
>
> Dunno, I find myself replying to patches that fix bugs I worked on myself or
> that were in my code with things like "good catch". I agree with Alexandre
> that cases like that are seldom enough that we can probably ignore them.

Around where I work, LGTM (looks good to me) is the reply that
denotes approval.  And then there's the Apache convention of +1.
Anyway, I'll recognize one or more of those if and when I get around
to adding a wine-devel listener.   Might be a couple weeks.
- Dan


From kai.blin at gmail.com  Mon Aug 25 16:32:55 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Mon, 25 Aug 2008 23:32:55 +0200
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
In-Reply-To: <a71bd89a0808251420x4935a27dua0fa0bd78c2bc77d@mail.gmail.com>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
	<200808252305.08700.kai.blin@gmail.com>
	<a71bd89a0808251420x4935a27dua0fa0bd78c2bc77d@mail.gmail.com>
Message-ID: <200808252332.56526.kai.blin@gmail.com>

On Monday 25 August 2008 23:20:40 Dan Kegel wrote:

> Around where I work, LGTM (looks good to me) is the reply that
> denotes approval.  And then there's the Apache convention of +1.
> Anyway, I'll recognize one or more of those if and when I get around
> to adding a wine-devel listener.   Might be a couple weeks.

Hm, it's getting harder and harder to keep up with this in buildbot. :)

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080825/72ddcb0e/attachment-0001.pgp 

From robertshearman at gmail.com  Mon Aug 25 16:41:01 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Mon, 25 Aug 2008 22:41:01 +0100
Subject: winex11.drv: Fix buffer overflow bug in X11DRV_KeyEvent()
	andX11DRV_ToUnicodeEx()
In-Reply-To: <28B826A9CD584FFDAB99AF8F17CB64E3@DMITRY>
References: <680e56870808231526k5ad343caq9dd4063daf367743@mail.gmail.com>
	<28B826A9CD584FFDAB99AF8F17CB64E3@DMITRY>
Message-ID: <1096648c0808251441s6a929d8bi496552f11e6a6fda@mail.gmail.com>

2008/8/24 Dmitry Timoshkov <dmitry at codeweavers.com>:
> "Muneyuki Noguchi" <nogu.dev at gmail.com> wrote:
>
>> winex11.drv: Fix buffer overflow bug in X11DRV_KeyEvent() and
>> X11DRV_ToUnicodeEx()
>
>> +    Str = (char *)malloc(64);
>> +    if (Str == NULL)
>> +        ERR("Failed to allocate memory!\n");
>
> Please don't use malloc() in Wine, use win32 Heap*** APIs instead.
> Also, you need to properly handle memory allocation errors, not just
> print an ERR.

> @@ -1352,7 +1353,7 @@ static void update_lock_state(BYTE vkey, WORD scan, DWORD time)
>  void X11DRV_KeyEvent( HWND hwnd, XEvent *xev )
>  {
>      XKeyEvent *event = &xev->xkey;
> -    char Str[24];
> +    char *Str;
>      KeySym keysym = 0;
>      WORD vkey = 0, bScan;
>      DWORD dwFlags;
> @@ -1364,19 +1365,29 @@ void X11DRV_KeyEvent( HWND hwnd, XEvent *xev )
>      TRACE_(key)("type %d, window %lx, state 0x%04x, keycode 0x%04x\n",
>  		event->type, event->window, event->state, event->keycode);
>
> +    Str = (char *)malloc(64);
> +    if (Str == NULL)
> +        ERR("Failed to allocate memory!\n");
>      wine_tsx11_lock();
>      /* Clients should pass only KeyPress events to XmbLookupString */
>      if (xic && event->type == KeyPress)
> +    {
>          ascii_chars = XmbLookupString(xic, event, Str, sizeof(Str), &keysym, &status);

In addition to the comments Dmitry has, sizeof(Str) no longer makes
sense now that Str has been made into a pointer. You also need to
update the other call to XmbLookupString in the patch.

-- 
Rob Shearman


From scott at open-vote.org  Mon Aug 25 16:58:17 2008
From: scott at open-vote.org (Scott Ritchie)
Date: Mon, 25 Aug 2008 14:58:17 -0700
Subject: Patchwatcher status: regenerates configure,	notifies authors
	on failure, filtered patches mailing list
In-Reply-To: <22821af30808241510x20e7bfbbudf73f82974ab6d2a@mail.gmail.com>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>	<a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>	<d658b69e0808241506n3a189a7cob0cfe53d16c743be@mail.gmail.com>
	<22821af30808241510x20e7bfbbudf73f82974ab6d2a@mail.gmail.com>
Message-ID: <48B32AF9.1000209@open-vote.org>

James Hawkins wrote:
> On Sun, Aug 24, 2008 at 5:06 PM, Henri Verbeet <hverbeet at gmail.com> wrote:
>> Something else... I sometimes reply to patches, and right now that
>> seems to cause patchwatcher to complain that my mail doesn't contain a
>> patch. Would it be possible to do something about that? I suppose
>> patchwatcher could ignore replies without patch.
>>
> 
> Is your reply sent to wine-patches?  Any replies to a patch should be
> sent to wine-devel unless you're sending another patch.
> 

Shouldn't wine-patches have it's reply-to field set to wine-devel then?

Thanks,
Scott Ritchie


From truiken at gmail.com  Mon Aug 25 17:03:22 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 25 Aug 2008 17:03:22 -0500
Subject: Patchwatcher status: regenerates configure,
	notifies authors on failure, filtered patches mailing list
In-Reply-To: <48B32AF9.1000209@open-vote.org>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
	<a71bd89a0808240949i65434ef9o64aa0d8610df19ce@mail.gmail.com>
	<d658b69e0808241506n3a189a7cob0cfe53d16c743be@mail.gmail.com>
	<22821af30808241510x20e7bfbbudf73f82974ab6d2a@mail.gmail.com>
	<48B32AF9.1000209@open-vote.org>
Message-ID: <22821af30808251503x7a79bb0cy5df3d824ac51f154@mail.gmail.com>

On Mon, Aug 25, 2008 at 4:58 PM, Scott Ritchie <scott at open-vote.org> wrote:
> James Hawkins wrote:
>> On Sun, Aug 24, 2008 at 5:06 PM, Henri Verbeet <hverbeet at gmail.com> wrote:
>>> Something else... I sometimes reply to patches, and right now that
>>> seems to cause patchwatcher to complain that my mail doesn't contain a
>>> patch. Would it be possible to do something about that? I suppose
>>> patchwatcher could ignore replies without patch.
>>>
>>
>> Is your reply sent to wine-patches?  Any replies to a patch should be
>> sent to wine-devel unless you're sending another patch.
>>
>
> Shouldn't wine-patches have it's reply-to field set to wine-devel then?
>

It is, but for some reason wine-patches is CC'ed instead of the patch
sender when you reply-all.

-- 
James Hawkins


From mah at jump-ing.de  Mon Aug 25 18:14:02 2008
From: mah at jump-ing.de (Markus Hitter)
Date: Tue, 26 Aug 2008 01:14:02 +0200
Subject: Add TRACEs to NtCreateFile returns (second try)
In-Reply-To: <22821af30808251239r3d7fe38eo439d8bfbcbb55b63@mail.gmail.com>
References: <8698375D-D8C9-4A19-A4DB-54603DFC26C7@jump-ing.de>
	<22821af30808241631n373a3206x2d64cc6a7df5ffcf@mail.gmail.com>
	<F18EC709-65B6-4F7A-A812-92AA62F2131D@jump-ing.de>
	<22821af30808250858s5af39a6o4c65c34676251120@mail.gmail.com>
	<161327AA-4566-490C-AE65-529F5DA4C8A6@jump-ing.de>
	<22821af30808251239r3d7fe38eo439d8bfbcbb55b63@mail.gmail.com>
Message-ID: <999EDED0-0966-46C7-9CF0-EE84E67576E0@jump-ing.de>


Am 25.08.2008 um 21:39 schrieb James Hawkins:

> As the code stands now, regardless of your patch, the check for  
> NULL attr on line 154 of dlls/kernel32/file.c will never be hit  
> because we will crash in the TRACE on line 148 of dlls/kernel32/ 
> file.c.

Now I got it. You aren't talking about the TRACE() you cited, but a  
different one. Thanks for the line numbers, applied to dlls/ntdll/ 
file.c they make sense.

So, why not fix this? Please push the patch trough Wine's patch  
accepting mechanism yourself, I'm currently somewhat sick of it.

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0003-Fix-a-possible-NULL-dereferencing.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080826/daef49e6/attachment.txt 
-------------- next part --------------



> My comment still stands that the added TRACE is absolutely  
> superfluous.

Makes 2 pro, 1 neutral. Do whatever you want with it.


MarKus

- - - - - - - - - - - - - - - - - - -
Dipl. Ing. Markus Hitter
http://www.jump-ing.de/





From juan.lang at gmail.com  Mon Aug 25 18:33:35 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 25 Aug 2008 16:33:35 -0700
Subject: Add TRACEs to NtCreateFile returns (second try)
In-Reply-To: <999EDED0-0966-46C7-9CF0-EE84E67576E0@jump-ing.de>
References: <8698375D-D8C9-4A19-A4DB-54603DFC26C7@jump-ing.de>
	<22821af30808241631n373a3206x2d64cc6a7df5ffcf@mail.gmail.com>
	<F18EC709-65B6-4F7A-A812-92AA62F2131D@jump-ing.de>
	<22821af30808250858s5af39a6o4c65c34676251120@mail.gmail.com>
	<161327AA-4566-490C-AE65-529F5DA4C8A6@jump-ing.de>
	<22821af30808251239r3d7fe38eo439d8bfbcbb55b63@mail.gmail.com>
	<999EDED0-0966-46C7-9CF0-EE84E67576E0@jump-ing.de>
Message-ID: <3a768c550808251633s37198fa5o8fa3f6c08478930f@mail.gmail.com>

> So, why not fix this? Please push the patch trough Wine's patch accepting
> mechanism yourself, I'm currently somewhat sick of it.

It seems your tolerance for reworking patches is rather low.  You must
be willing to rework patches until they're correct to have many
committed around here.  I've probably had more patches rejected than
you've sent so far, so I know whereof I speak ;-)

>> My comment still stands that the added TRACE is absolutely superfluous.
>
> Makes 2 pro, 1 neutral. Do whatever you want with it.

James is the wrong target for this comment, and voting is irrelevant.
The burden is always on you to convince AJ that your patch is correct.

Since you're new-ish around here, I had a look.

-    if (!attr || !attr->ObjectName) return STATUS_INVALID_PARAMETER;
+    if (!attr || !attr->ObjectName)
+    {
+        TRACE("returning STATUS_INVALID_PARAMETER\n");
+        return STATUS_INVALID_PARAMETER;
+    }

I agree with James that this is superfluous, or at least that it
doesn't match the style of dlls/ntdll/file.c:  when error is
encountered, e.g. in NtReadFile line 568, it's returned directly.

     if (attr->RootDirectory)
     {
         FIXME( "RootDirectory %p not supported\n", attr->RootDirectory );
+        TRACE("returning STATUS_OBJECT_NAME_NOT_FOUND\n");

Adding a trace after a fixme is clearly superfluous.

-        if (io->u.Status == STATUS_SUCCESS) io->Information = FILE_OPENED;
+        if (io->u.Status == STATUS_SUCCESS)
+        {
+            io->Information = FILE_OPENED;
+            TRACE("returning STATUS_SUCCESS, handle %p\n", *handle);
+        }
+        else
+            TRACE("returning 0x%08x\n", io->u.Status);
         return io->u.Status;

Since the return is done regardless if the status, why do you trace a
different value depending on the status?  One trace just before the
return should suffice.  Same with the remaining returns:  a single
trace just before the return should suffice.

Please try to minimize the changes you're making, pay attention to the
style of the file you're changing, and be receptive to comments you
get from other developers.
--Juan


From jjmckenzie51 at earthlink.net  Mon Aug 25 20:42:06 2008
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Mon, 25 Aug 2008 18:42:06 -0700
Subject: Patchwatcher status: regenerates configure,	notifies authors
	on failure, filtered patches mailing list
In-Reply-To: <a71bd89a0808251420x4935a27dua0fa0bd78c2bc77d@mail.gmail.com>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>	<B4923C1D-9204-49A9-BBAA-68302B8EE78C@codeweavers.com>	<22821af30808251146i16d15f00s75ac63523c75126a@mail.gmail.com>	<200808252305.08700.kai.blin@gmail.com>
	<a71bd89a0808251420x4935a27dua0fa0bd78c2bc77d@mail.gmail.com>
Message-ID: <48B35F6E.5030608@earthlink.net>

Dan Kegel wrote:
> On Mon, Aug 25, 2008 at 2:05 PM, Kai Blin <kai.blin at gmail.com> wrote:
>   
>>>> #patchwatcher approve
>>>>
>>>> Such a directive would only be recognized if it's alone on a line.
>>>>         
>>> The usual positive reply is 'ACK'.  I believe it would be simplest to
>>> grep the reply message for ACK to see if a reply is positive.
>>>       
>> Dunno, I find myself replying to patches that fix bugs I worked on myself or
>> that were in my code with things like "good catch". I agree with Alexandre
>> that cases like that are seldom enough that we can probably ignore them.
>>     
>
> Around where I work, LGTM (looks good to me) is the reply that
> denotes approval.  And then there's the Apache convention of +1.
> Anyway, I'll recognize one or more of those if and when I get around
> to adding a wine-devel listener.   Might be a couple weeks.
>
>   
Dan:

Thank you for adding this. 

James McKenzie



From blahboybang at gmail.com  Mon Aug 25 21:41:08 2008
From: blahboybang at gmail.com (Michael Reiley)
Date: Mon, 25 Aug 2008 19:41:08 -0700
Subject: ddraw error in Tibia (wine told me to post here)
Message-ID: <1219718468.27064.4.camel@fp-ubuntu-laptop>

There's some progress on the MMORPG Tibia since the last wine version,
but now there's a new error. before you tell me "This list is for
discussions regarding Wine development. It is not for bug reports or
user support questions", I'd like to tell you
"err:ddraw:IDirectDrawImpl_QueryInterface  (0x13b5d0) You may want to
contact wine-devel for help"

Assuming wine knows what it's talking about, I'm going to post the error
log here and see what all of you have to say.

fuzzypig at fp-ubuntu-laptop:~/.wine/drive_c/Program Files/Tibia$ wine
Tibia.exe engine 0
fixme:win:EnumDisplayDevicesW ((null),0,0x32e468,0x00000000), stub!
err:ddraw:IDirectDrawImpl_QueryInterface (0x13b5d0) The App is
requesting a D3D device, but a non-OpenGL surface type was choosen.
Prepare for trouble!
err:ddraw:IDirectDrawImpl_QueryInterface  (0x13b5d0) You may want to
contact wine-devel for help
err:ddraw:IDirectDrawSurfaceImpl_QueryInterface No interface
fixme:d3d:WineD3D_ChoosePixelFormat Add OpenGL context recreation
support to SetDepthStencilSurface
fixme:d3d:CreateContext >>>>>>>>>>>>>>>>> GL_INVALID_OPERATION (0x502)
from glClearColor @ context.c / 514
fixme:d3d_shader:state_texfactor_arbfp >>>>>>>>>>>>>>>>> GL_INVALID_ENUM
(0x500) from glProgramEnvParameter4fvARB(GL_FRAGMENT_PROGRAM_ARB,
ARB_FFP_CONST_TFACTOR, col) @ arb_program_shader.c / 2327
fixme:d3d_shader:set_bumpmat_arbfp >>>>>>>>>>>>>>>>> GL_INVALID_ENUM
(0x500) from glProgramEnvParameter4fvARB(GL_FRAGMENT_PROGRAM_ARB,
ARB_FFP_CONST_BUMPMAT(stage), &mat[0][0]) @ arb_program_shader.c / 2361
fixme:d3d_shader:set_bumpmat_arbfp >>>>>>>>>>>>>>>>> GL_INVALID_ENUM
(0x500) from glProgramEnvParameter4fvARB(GL_FRAGMENT_PROGRAM_ARB,
ARB_FFP_CONST_BUMPMAT(stage), &mat[0][0]) @ arb_program_shader.c / 2361
fixme:d3d_shader:set_bumpmat_arbfp >>>>>>>>>>>>>>>>> GL_INVALID_ENUM
(0x500) from glProgramEnvParameter4fvARB(GL_FRAGMENT_PROGRAM_ARB,
ARB_FFP_CONST_BUMPMAT(stage), &mat[0][0]) @ arb_program_shader.c / 2361
fixme:d3d_shader:set_bumpmat_arbfp >>>>>>>>>>>>>>>>> GL_INVALID_ENUM
(0x500) from glProgramEnvParameter4fvARB(GL_FRAGMENT_PROGRAM_ARB,
ARB_FFP_CONST_BUMPMAT(stage), &mat[0][0]) @ arb_program_shader.c / 2361
fixme:d3d_shader:set_bumpmat_arbfp >>>>>>>>>>>>>>>>> GL_INVALID_ENUM
(0x500) from glProgramEnvParameter4fvARB(GL_FRAGMENT_PROGRAM_ARB,
ARB_FFP_CONST_BUMPMAT(stage), &mat[0][0]) @ arb_program_shader.c / 2361

Happy trails!
~Michael Reiley



From winehacker at gmail.com  Tue Aug 26 01:01:34 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Tue, 26 Aug 2008 02:01:34 -0400
Subject: winetricks: add ie6 verb
In-Reply-To: <1219503757.5793.29.camel@p4.lan>
References: <19e31a080808181011r5fdaa473qf98203531a7a8343@mail.gmail.com>
	<1219503757.5793.29.camel@p4.lan>
Message-ID: <19e31a080808252301s14d2a306p8162994f9ab1d9c5@mail.gmail.com>

On Sat, Aug 23, 2008 at 11:02 AM, Detlef Riekenberg <wine.dev at web.de> wrote:
> Nice Idea.

Thanks, Dan has said he agrees with it from a development perspective
and ies4linux already lets enough people do it for free so adding it
to winetricks should not hurt major corporate contributors like
CodeWeavers too much. He just wants me to strip it down and clean it
up as you suggested and I am working on it. I just have a few other
minor projects to finish out first and hope to get back to it in a
week or two.

>> +    # Installing Core Fonts"
>> +    load_corefonts
> Which Font is required (please fill bug reports)
> Which Font is optional?

I believe they are all optional. It just looks like crap rendering a
lot of sites without them. I'll remove them and leave it up to someone
else to submit patches and bug reports regarding them.

>> +    # Installing Richedit 2.0 Library"
>> +    load_riched20
> What is needed in the builtin version?
> Please fill bug reports.

I don't recall now, I'll retest.

>> +    # Installing Richedit 3.0 Library"
>> +    load_riched30
>> +    # Installing Microsoft Line Services"
>> +    load_msls31
> Hm. Not present in Wine yet.

And totally undocumented save a few obscure references to Unicode text
rendering of certain Asian locale symbols and equations I found in the
richedit specs. Also I don't think its really needed, I suspect if a
third party would reverse and document it for us, we could get by on
just stubbing and returning something sane...unless your trying to
rendering some sort of Japanesse math problem rather than standard
numbering.

>> +
>> +    # Change the override to the native so we are sure we use and
>> register them
>> +    override_dlls native,builtin
>>  itircl itss mlang msimtf riched20 riched32 shdoclc shlwapi urlmon
> Do you need the override for Installation or for running IE6?
> What is needed in the builtin versions?
> Please fill bug reports.

I think I can strip this down also.

>> +    # Remove the fake dlls from the existing WINEPREFIX
>> +    mv $WINEPREFIX/drive_c/"Program Files"/"Internet
>> Explorer"/iexplore.exe $WINEPREFIX/drive_c/"Program Files"/"Internet
>> Explorer"/iexplore.exe.bak
> That's wrong for every Language != english.
> What you need is already there: "$programfilesdir_unix"

Great! I'll do that

>> +    # Work around DLL registration bug
>> +    cd $WINEPREFIX/drive_c/windows/system32/
>> +    for i in *.dll *.ocx; do regsvr32 /i $i; done
> Which dll/ocx need this?
> Is this a Wine bug (please fill bug reports) or an IE bug?

I think its both. There needs to be a way to trigger a fake reboot so
IE can register its dlls but I don't think they are getting added to
the RunOnce key. I'll need to look in to this a bit more also. For
siome reason wineboot was not working for me and I just ripped the
solution that appdb had.

> For most files in this directory, your code is wrong.
> Your code depends on the case of the extensions.

Hmm what would be the proper command line? I am not that great at
shell scripting and just ripped that example out of appdb.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From kai.blin at gmail.com  Tue Aug 26 01:44:07 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Tue, 26 Aug 2008 08:44:07 +0200
Subject: Patchwatcher status: regenerates configure,
	=?iso-8859-1?q?=09notifies_authors_on?= failure,
	filtered patches mailing list
In-Reply-To: <48B32AF9.1000209@open-vote.org>
References: <a71bd89a0808240938j5b3154f1w284c6fbcbcdfa307@mail.gmail.com>
	<22821af30808241510x20e7bfbbudf73f82974ab6d2a@mail.gmail.com>
	<48B32AF9.1000209@open-vote.org>
Message-ID: <200808260844.16919.kai.blin@gmail.com>

On Monday 25 August 2008 23:58:17 Scott Ritchie wrote:
> James Hawkins wrote:
> > On Sun, Aug 24, 2008 at 5:06 PM, Henri Verbeet <hverbeet at gmail.com> wrote:
> >> Something else... I sometimes reply to patches, and right now that
> >> seems to cause patchwatcher to complain that my mail doesn't contain a
> >> patch. Would it be possible to do something about that? I suppose
> >> patchwatcher could ignore replies without patch.
> >
> > Is your reply sent to wine-patches?  Any replies to a patch should be
> > sent to wine-devel unless you're sending another patch.
>
> Shouldn't wine-patches have it's reply-to field set to wine-devel then?

It has.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080826/2db06951/attachment-0001.pgp 

From julliard at winehq.org  Tue Aug 26 02:39:36 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 26 Aug 2008 09:39:36 +0200
Subject: [NJS#80597] Re: How should I name the Traditional Chinese
	resource file ?
In-Reply-To: <1219713681101516668@njxvm1.njstar.com> (Hongbo Ni's message of
	"Tue, 26 Aug 2008 11:21:00 +1000")
References: <E1KXArT-0001kZ-31@wine.codeweavers.com>
	<87k5e56kl2.fsf@wine.dyndns.org>
	<1219713681101516668@njxvm1.njstar.com>
Message-ID: <873aks6x8n.fsf@wine.dyndns.org>

Hongbo Ni <hongboni at njstar.com> writes:

> Thanks for your answer. But UTF-8 does not work for Chinese resource file.
> /tools/wrc requires the Chinese strings in codepage 936(GB) or 950(big5).

You have to add a #pragma codepage, look at how this is done in other
files.

-- 
Alexandre Julliard
julliard at winehq.org


