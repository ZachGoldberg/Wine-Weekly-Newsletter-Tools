From dank at kegel.com  Thu Jan  1 04:23:26 2009
From: dank at kegel.com (Dan Kegel)
Date: Thu, 1 Jan 2009 02:23:26 -0800
Subject: Drumming up qa publicity for sketchup on wine via Digg
Message-ID: <a71bd89a0901010223v6ac8e09atd80cffcc5a6f11c1@mail.gmail.com>

Sketchup seems to be working pretty well, so I just posted
http://digg.com/linux_unix/Google_Sketchup_7_working_in_Wine_1_1_11
to see if I could attract some real sketchup users
to find more bugs.

If folks agree that's a good idea, they can support it
by digging it so it can show up on the front page.

Thanks,
Dan


From hans at meelstraat.net  Thu Jan  1 04:28:29 2009
From: hans at meelstraat.net (Hans Leidekker)
Date: Thu, 1 Jan 2009 11:28:29 +0100
Subject: Commit stats
Message-ID: <200901011128.30356.hans@meelstraat.net>


$ for year in {2002..2008}; do \
  count=$( git log | grep ^Date: | grep $year | wc -l ); \
  echo "Number of commits in $year: $count"; \
  done
Number of commits in 2002: 3094
Number of commits in 2003: 3283
Number of commits in 2004: 3851
Number of commits in 2005: 6006
Number of commits in 2006: 8431
Number of commits in 2007: 9532
Number of commits in 2008: 11292

 -Hans


From wine at mkarcher.dialup.fu-berlin.de  Thu Jan  1 04:51:51 2009
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Thu, 01 Jan 2009 11:51:51 +0100
Subject: Shell32 proxies/stubs
Message-ID: <1230807111.540.128.camel@hermes2.karcher.local>

Hello developers,

this is just to let you know where the 3 standalone patches and three
patch series I just posted to wine-devel are going: Having proxies for
the COM objects of shell32.dll in actxprxy.dll, just as Windows XP and
Vista does.

It started with me wanting a guinea pig object that is apartment
threaded and has proxies/stubs and present on every Windows installation
to test a strange corner case in ole32. Looking around in my XP, I
decided to use the MyComputer object that is already used in the ole32
testcase. Then I found out that Windows has them, but Wine misses them
and thought to myself: Hey, this is just COM, adding a proxy should be
just adding some lines to Makefile.in and widl does the rest. It turned
out to be a quite fun project that revealed problems and/or missing
features at nearly every component involved.

The things I sent up to now fix most of the things below the proxies.
What is still unsent is a three-patch-series to actxprxy to really add
the proxies, and testcases for the remoting. While the shelllink
testcase passes on my system even with remote calls, the shlfolder
testsuite does not work correctly yet, revealing even more issues with
ole32/widl I'm currently attacking.

Regards,
  Michael Karcher



From thunderbird2k at gmx.net  Thu Jan  1 05:15:14 2009
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Thu, 01 Jan 2009 12:15:14 +0100
Subject: Drumming up qa publicity for sketchup on wine via Digg
In-Reply-To: <a71bd89a0901010223v6ac8e09atd80cffcc5a6f11c1@mail.gmail.com>
References: <a71bd89a0901010223v6ac8e09atd80cffcc5a6f11c1@mail.gmail.com>
Message-ID: <20090101111514.318350@gmx.net>

> Sketchup seems to be working pretty well, so I just posted
> http://digg.com/linux_unix/Google_Sketchup_7_working_in_Wine_1_1_11
> to see if I could attract some real sketchup users
> to find more bugs.
> 
> If folks agree that's a good idea, they can support it
> by digging it so it can show up on the front page.
> 
> Thanks,
> Dan
> 

It doesn't require opengl hacks in the form of registry settings like previous Sketchup versions?

Roderick
-- 
Sensationsangebot verl?ngert: GMX FreeDSL - Telefonanschluss + DSL 
f?r nur 16,37 Euro/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K1308T4569a


From paul.vriens.wine at gmail.com  Thu Jan  1 06:44:06 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Thu, 01 Jan 2009 13:44:06 +0100
Subject: Commit stats
In-Reply-To: <200901011128.30356.hans@meelstraat.net>
References: <200901011128.30356.hans@meelstraat.net>
Message-ID: <495CBA96.3060304@gmail.com>

Hans Leidekker wrote:
> $ for year in {2002..2008}; do \
>   count=$( git log | grep ^Date: | grep $year | wc -l ); \
>   echo "Number of commits in $year: $count"; \
>   done
> Number of commits in 2002: 3094
> Number of commits in 2003: 3283
> Number of commits in 2004: 3851
> Number of commits in 2005: 6006
> Number of commits in 2006: 8431
> Number of commits in 2007: 9532
> Number of commits in 2008: 11292
> 
>  -Hans
> 
> 
I had a look at these stats as I'm (still) playing around with gitstat 
in combination with Wine. The numbers didn't match up so I had a closer 
look. 'git log' shows the author date and not the commit date.

So maybe this one is more correct?

$ for year in {2002..2008}; do \
   count=$(git log --pretty='format:%cd' | grep $year | wc -l ); \
   echo "Number of commits in $year: $count"; \
   done
Number of commits in 2002: 3094
Number of commits in 2003: 3283
Number of commits in 2004: 3851
Number of commits in 2005: 6006
Number of commits in 2006: 8404
Number of commits in 2007: 9540
Number of commits in 2008: 11307

Oh and btw, Happy New Year to all !

-- 
Cheers,

Paul.


From eric.pouech at orange.fr  Thu Jan  1 06:59:35 2009
From: eric.pouech at orange.fr (Eric Pouech)
Date: Thu, 01 Jan 2009 13:59:35 +0100
Subject: Commit stats
In-Reply-To: <200901011128.30356.hans@meelstraat.net>
References: <200901011128.30356.hans@meelstraat.net>
Message-ID: <495CBE37.3000007@orange.fr>

Hans Leidekker a ?crit :
> $ for year in {2002..2008}; do \
>   count=$( git log | grep ^Date: | grep $year | wc -l ); \
>   echo "Number of commits in $year: $count"; \
>   done
> Number of commits in 2002: 3094
> Number of commits in 2003: 3283
> Number of commits in 2004: 3851
> Number of commits in 2005: 6006
> Number of commits in 2006: 8431
> Number of commits in 2007: 9532
> Number of commits in 2008: 11292
>
>  -Hans
>
>
>
>
>   
digging a bit deeper:
for year in {2002..2008}; do \
count=$( git log | grep -2 -e "^Date.*$year" | grep ^Author: | sed -e 
's/<.*>//' | LC_ALL=C sort -u -f | wc -l ); \
echo "Number of committers $count in year: $year"; \
done
Number of committers 185 in year: 2002
Number of committers 166 in year: 2003
Number of committers 183 in year: 2004
Number of committers 211 in year: 2005
Number of committers 197 in year: 2006
Number of committers 217 in year: 2007
Number of committers 234 in year: 2008

of course, this doesn't take into account the different names used by 
the same person (ie there is for example a "frangois gouget" in the 
committers' list...)
but this gives a good idea of the variation
A+

-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)




From alanfeld at gmail.com  Thu Jan  1 07:27:45 2009
From: alanfeld at gmail.com (Alan Feldman)
Date: Thu, 1 Jan 2009 08:27:45 -0500
Subject: Contribution to the Toolbar common control
In-Reply-To: <b6bb06270812311813m4ab87687k9b27a3fb92d6ff70@mail.gmail.com>
References: <d10b3b400812310149j3fcfadc0t379984da4d9e644b@mail.gmail.com>
	<b6bb06270812310645k3f8f3c8cs68c111842945c505@mail.gmail.com>
	<d10b3b400812311653k46b070bu46af40c60b3c6523@mail.gmail.com>
	<b6bb06270812311813m4ab87687k9b27a3fb92d6ff70@mail.gmail.com>
Message-ID: <d10b3b400901010527wb7a51eduf60a85c381d4dcde@mail.gmail.com>

:-)

Happy New Year to all,

  Alan Feldman


On Wed, Dec 31, 2008 at 9:13 PM, Austin English <austinenglish at gmail.com> wrote:
> On Wed, Dec 31, 2008 at 6:53 PM, Alan Feldman <alanfeld at gmail.com> wrote:
>> Ouch Austin. But thanks Ricardo for explaining to Austin that I wasn't
>> actually contributing "code" and I also didn't use any reverse
>> engineering to come up with that discovery.
>
> Didn't mean for it come off as harsh. I know that wasn't code, but I'm
> not sure how much he can contribute, having seen the disassembly.
>
> That said, the information is appreciated, and hopefully someone can
> put it to use.
>
> Thanks for helping wine!
> --
> -Austin
>


From dank at kegel.com  Thu Jan  1 10:14:49 2009
From: dank at kegel.com (Dan Kegel)
Date: Thu, 1 Jan 2009 08:14:49 -0800
Subject: Drumming up qa publicity for sketchup on wine via Digg
In-Reply-To: <20090101111514.318350@gmx.net>
References: <a71bd89a0901010223v6ac8e09atd80cffcc5a6f11c1@mail.gmail.com>
	<20090101111514.318350@gmx.net>
Message-ID: <a71bd89a0901010814r543df0b3j45814c382272b26c@mail.gmail.com>

On Thu, Jan 1, 2009 at 3:15 AM, Roderick Colenbrander
<thunderbird2k at gmx.net> wrote:
>> Sketchup seems to be working pretty well, so I just posted
>> http://digg.com/linux_unix/Google_Sketchup_7_working_in_Wine_1_1_11
>> to see if I could attract some real sketchup users
>> to find more bugs.
>
> It doesn't require opengl hacks in the form of registry settings like previous Sketchup versions?

Not on my computers, usually, at least.
(I still document the HW_OK hack in the howto for people who need it,
but I don't know which cards need it anymore.)
- Dan


From lkcl at lkcl.net  Thu Jan  1 11:42:02 2009
From: lkcl at lkcl.net (Luke Kenneth Casson Leighton)
Date: Thu, 1 Jan 2009 17:42:02 +0000
Subject: question on how to do language bindings to MSHTML's COM interface
Message-ID: <ced5f0f60901010942x92ffa2eo68cdb12e65f36784@mail.gmail.com>

folks, hi,
i have a rather intriguing issue i'd like to look at, which takes
quite a bit of explaining as to why i'd like to go about it - if
people are interested i can answer that, but for now i'll leave it at
this:
how, under linux, would i go about making an application that made
_use_ of MSHTML.DLL's functionality, via its COM / DCE/RPC / MSRPC
interface?
in other words, if you are familiar with gecko / XUL, how would i go
about making a gecko / XUL style of application, using MSHTML as the
basis, and, once that was achieved, would it stand a chance of
successfully running under vanilla windows, using MS's own version of
MSHTML?
yes i _am_ fully aware that, underneath, according to the wiki page on
mshtml's implementation, mshtml underneath uses Gecko - but i don't
_want_ to use the Gecko / XUL interface (mostly because it already
exists!  i don't like challenges that have already been done :)
specifically, i'd _really_ like to have python bindings to the COM
bindings to MSHTML - all under linux.
so there are some _really_ weird esoteric "sub-questions" involved, such as:
"what are the chances of porting pywin32 - specifically pywin32's COM
bindings - to linux, thanks to widl and friends"?
see http://sourceforge.net/projects/pywin32
many thanks for any advice and information.
l.


From robertshearman at gmail.com  Thu Jan  1 12:53:00 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Thu, 1 Jan 2009 18:53:00 +0000
Subject: [oleaut 1/3] include: add [unique] attributes to
	IPropertyBag::RemoteRead args
In-Reply-To: <1230805818.540.89.camel@hermes2.karcher.local>
References: <1230805818.540.89.camel@hermes2.karcher.local>
Message-ID: <1096648c0901011053s4acaa225sb883f569ce98750c@mail.gmail.com>

2009/1/1 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> diff --git a/include/oaidl.idl b/include/oaidl.idl
> index 1cc166a..4ee3b43 100644
> --- a/include/oaidl.idl
> +++ b/include/oaidl.idl
> @@ -1620,9 +1620,9 @@ interface IPropertyBag : IUnknown
>    HRESULT RemoteRead(
>      [in] LPCOLESTR pszPropName,
>      [out] VARIANT *pVar,
> -    [in] IErrorLog *pErrorLog,
> +    [in, unique] IErrorLog *pErrorLog,
>      [in] DWORD varType,
> -    [in] IUnknown *pUnkObj);
> +    [in, unique] IUnknown *pUnkObj);

In the PSDK only pErrorLog is a unique pointer. However, I believe you
are making this change to avoid getting RPC_X_NULL_REF_POINTER
exceptions when a NULL pErrorLog parameter is passed into
IPropertyBag_Read, but MIDL ignores the pointer type for interface
pointers and never outputs a NULL reference pointer check for them. So
widl just needs to be fixed.

>
>    HRESULT Write(
>      [in] LPCOLESTR pszPropName,


-- 
Rob Shearman


From robertshearman at gmail.com  Thu Jan  1 12:54:40 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Thu, 1 Jan 2009 18:54:40 +0000
Subject: [oleaut 2/3] include: Add [unique] attribute to
	IPersistPropertyBag::Load arg
In-Reply-To: <1230805798.540.85.camel@hermes2.karcher.local>
References: <1230805798.540.85.camel@hermes2.karcher.local>
Message-ID: <1096648c0901011054j2414047cxcda226494baed800@mail.gmail.com>

2009/1/1 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> diff --git a/include/ocidl.idl b/include/ocidl.idl
> index c40d155..d4979d7 100644
> --- a/include/ocidl.idl
> +++ b/include/ocidl.idl
> @@ -927,7 +927,7 @@ interface IPersistPropertyBag : IPersist
>
>      HRESULT Load(
>          [in] IPropertyBag *pPropBag,
> -        [in] IErrorLog *pErrorLog);
> +        [in,unique] IErrorLog *pErrorLog);
>
>      HRESULT Save(
>          [in] IPropertyBag *pPropBag,

Same goes for this change.

-- 
Rob Shearman


From robertshearman at gmail.com  Thu Jan  1 12:58:21 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Thu, 1 Jan 2009 18:58:21 +0000
Subject: [oleaut 3/3] oleaut32: Implement IPropertyBag::Read proxying
In-Reply-To: <1230805809.540.87.camel@hermes2.karcher.local>
References: <1230805809.540.87.camel@hermes2.karcher.local>
Message-ID: <1096648c0901011058h45687592g1e6680d39e8114a7@mail.gmail.com>

2009/1/1 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> +  hr = IPropertyBag_RemoteRead_Proxy(This, pszPropName, &outVariant, pErrorLog,
> +                                       V_VT(pVar), pUnk);
> +  if(SUCCEEDED(hr))
> +    hr = VariantCopy(pVar, &outVariant);
> +
> +  return hr;

You're leaking the memory in outVariant here, since VariantCopy does a
deep copy of all of the data. Is there a reason you don't just pass
pVar into IPropertyBag_RemoteRead_Proxy?

-- 
Rob Shearman


From wine at mkarcher.dialup.fu-berlin.de  Thu Jan  1 13:05:16 2009
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Thu, 01 Jan 2009 20:05:16 +0100
Subject: [oleaut 3/3] oleaut32: Implement IPropertyBag::Read proxying
In-Reply-To: <1096648c0901011058h45687592g1e6680d39e8114a7@mail.gmail.com>
References: <1230805809.540.87.camel@hermes2.karcher.local>
	<1096648c0901011058h45687592g1e6680d39e8114a7@mail.gmail.com>
Message-ID: <1230836716.540.139.camel@hermes2.karcher.local>

Am Donnerstag, den 01.01.2009, 18:58 +0000 schrieb Rob Shearman:
> 2009/1/1 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> > +  hr = IPropertyBag_RemoteRead_Proxy(This, pszPropName, &outVariant, pErrorLog,
> > +                                       V_VT(pVar), pUnk);
> > +  if(SUCCEEDED(hr))
> > +    hr = VariantCopy(pVar, &outVariant);
> > +
> > +  return hr;
> 
> You're leaking the memory in outVariant here, since VariantCopy does a
> deep copy of all of the data. Is there a reason you don't just pass
> pVar into IPropertyBag_RemoteRead_Proxy?
Yes. I want outVariant to be unmodified in the case of error. But that
might be wrong. Even if I pass pVar into IPropertyBag_RemoteRead_Proxy,
i have to take care of leaking, I think, as RemoteRead takes the variant
pointer as an out-only parameter, so I would have to VariantClear
outVariant before. But you are right that this might be the better
solution.

Thanks for reviewing my patches.

Regards,
  Michael Karcher



From robertshearman at gmail.com  Thu Jan  1 13:09:04 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Thu, 1 Jan 2009 19:09:04 +0000
Subject: [shell32 5/6] include: Add remotable stubs for
	non-default-marshallable shobjidl calls.
In-Reply-To: <1230807520.540.132.camel@hermes2.karcher.local>
References: <1230807520.540.132.camel@hermes2.karcher.local>
Message-ID: <1096648c0901011109l7e0c191fqd0dcf692831a7286@mail.gmail.com>

2009/1/1 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> diff --git a/include/shobjidl.idl b/include/shobjidl.idl
> index a647798..c36f4ce 100644
> --- a/include/shobjidl.idl
> +++ b/include/shobjidl.idl
> @@ -452,6 +452,9 @@ interface IShellView : IOleWindow
>          [in] LPFNSVADDPROPSHEETPAGE pfn,
>          [in] LPARAM lparam);
>
> +    [call_as(AddPropertySheetPages)]
> +    HRESULT RemoteAddPropertySheetPages();
> +
>      HRESULT SaveViewState();
>      HRESULT SelectItem(
>          [in] LPCITEMIDLIST pidlItem,
> @@ -582,6 +585,9 @@ cpp_quote("#endif")
>          [in] LPARAM lParam,
>          [in] LRESULT *pret);
>
> +    [call_as(SendControlMsg)]
> +    HRESULT RemoteSendControlMsg();
> +
>      HRESULT QueryActiveShellView( [out] IShellView **ppshv );
>      HRESULT OnViewWindowActive( [in] IShellView *pshv );
>
> @@ -590,6 +596,8 @@ cpp_quote("#endif")
>          [in] LPTBBUTTONSB lpButtons,
>          [in] UINT nButtons,
>          [in] UINT uFlags);
> +    [call_as(SetToolbarItems)]
> +    HRESULT RemoteSetToolbarItems();

These shouldn't be necessary. What is it that you're trying to fix?

>  }
>
>
> @@ -1441,9 +1449,12 @@ interface IAutoCompleteDropDown : IUnknown
>  {
>  cpp_quote("#define ACDD_VISIBLE   0x0001")
>
> -    HRESULT GetDropDownStatus(
> +    [local] HRESULT GetDropDownStatus(
>          [out] DWORD *pdwFlags,
> -        [out, string] LPWSTR *ppwszString);
> +        [out] LPWSTR *ppwszString);
> +
> +    [call_as(GetDropDownStatus)]
> +    HRESULT RemoteGetDropDownStatus();

This isn't correct. IAutoCompleteDropDown::GetDropDownStatus should be
remoted as is.

>
>      HRESULT ResetEnumerator();
>  }


-- 
Rob Shearman


From wine at mkarcher.dialup.fu-berlin.de  Thu Jan  1 13:13:17 2009
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Thu, 01 Jan 2009 20:13:17 +0100
Subject: [oleaut 1/3] include: add [unique] attributes to
	IPropertyBag::RemoteRead args
In-Reply-To: <1096648c0901011053s4acaa225sb883f569ce98750c@mail.gmail.com>
References: <1230805818.540.89.camel@hermes2.karcher.local>
	<1096648c0901011053s4acaa225sb883f569ce98750c@mail.gmail.com>
Message-ID: <1230837197.540.146.camel@hermes2.karcher.local>

Am Donnerstag, den 01.01.2009, 18:53 +0000 schrieb Rob Shearman:
> 2009/1/1 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> > diff --git a/include/oaidl.idl b/include/oaidl.idl
> > index 1cc166a..4ee3b43 100644
> > --- a/include/oaidl.idl
> > +++ b/include/oaidl.idl
> > @@ -1620,9 +1620,9 @@ interface IPropertyBag : IUnknown
> >    HRESULT RemoteRead(
> >      [in] LPCOLESTR pszPropName,
> >      [out] VARIANT *pVar,
> > -    [in] IErrorLog *pErrorLog,
> > +    [in, unique] IErrorLog *pErrorLog,
> >      [in] DWORD varType,
> > -    [in] IUnknown *pUnkObj);
> > +    [in, unique] IUnknown *pUnkObj);
> 
> In the PSDK only pErrorLog is a unique pointer. However, I believe you
> are making this change to avoid getting RPC_X_NULL_REF_POINTER
> exceptions when a NULL pErrorLog parameter is passed into
> IPropertyBag_Read,
Exactly. Seems like I have to get hold of a copy of the psdk. Shouldn't
be a problem. And I already know that I may not cut'n'paste from there.

> but MIDL ignores the pointer type for interface
> pointers and never outputs a NULL reference pointer check for them. So
> widl just needs to be fixed.
Is it OK for me to look at the output of MIDL? The proxy source code
files probably contain lots Microsoft boilerplate code, so I didn't dare
to do such a thing yet.

Regards,
  Michael Karcher



From robertshearman at gmail.com  Thu Jan  1 13:15:28 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Thu, 1 Jan 2009 19:15:28 +0000
Subject: [oleaut 3/3] oleaut32: Implement IPropertyBag::Read proxying
In-Reply-To: <1230836716.540.139.camel@hermes2.karcher.local>
References: <1230805809.540.87.camel@hermes2.karcher.local>
	<1096648c0901011058h45687592g1e6680d39e8114a7@mail.gmail.com>
	<1230836716.540.139.camel@hermes2.karcher.local>
Message-ID: <1096648c0901011115v7a8f05bapc8a3f0b02d3e66f5@mail.gmail.com>

2009/1/1 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> Am Donnerstag, den 01.01.2009, 18:58 +0000 schrieb Rob Shearman:
>> 2009/1/1 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
>> > +  hr = IPropertyBag_RemoteRead_Proxy(This, pszPropName, &outVariant, pErrorLog,
>> > +                                       V_VT(pVar), pUnk);
>> > +  if(SUCCEEDED(hr))
>> > +    hr = VariantCopy(pVar, &outVariant);
>> > +
>> > +  return hr;
>>
>> You're leaking the memory in outVariant here, since VariantCopy does a
>> deep copy of all of the data. Is there a reason you don't just pass
>> pVar into IPropertyBag_RemoteRead_Proxy?
> Yes. I want outVariant to be unmodified in the case of error. But that
> might be wrong. Even if I pass pVar into IPropertyBag_RemoteRead_Proxy,
> i have to take care of leaking, I think, as RemoteRead takes the variant
> pointer as an out-only parameter, so I would have to VariantClear
> outVariant before. But you are right that this might be the better
> solution.

According to NDR marshalling rules, even if a parameter is marked as
[out]-only memory is still re-used so you don't have to clear the
VARIANT before passing it into IPropertyBag_RemoteRead_Proxy. For this
reason, if you don't decide to pass pVar straight into
IPropertyBag_RemoteRead_Proxy you still have to do VariantInit on
outVariant before passing it into IPropertyBag_RemoteRead_Proxy.

-- 
Rob Shearman


From robertshearman at gmail.com  Thu Jan  1 13:19:40 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Thu, 1 Jan 2009 19:19:40 +0000
Subject: [oleaut 1/3] include: add [unique] attributes to
	IPropertyBag::RemoteRead args
In-Reply-To: <1230837197.540.146.camel@hermes2.karcher.local>
References: <1230805818.540.89.camel@hermes2.karcher.local>
	<1096648c0901011053s4acaa225sb883f569ce98750c@mail.gmail.com>
	<1230837197.540.146.camel@hermes2.karcher.local>
Message-ID: <1096648c0901011119p6a36940ejebc3203c8caa263a@mail.gmail.com>

2009/1/1 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> Am Donnerstag, den 01.01.2009, 18:53 +0000 schrieb Rob Shearman:
>> but MIDL ignores the pointer type for interface
>> pointers and never outputs a NULL reference pointer check for them. So
>> widl just needs to be fixed.
> Is it OK for me to look at the output of MIDL?

I believe so.

> The proxy source code
> files probably contain lots Microsoft boilerplate code, so I didn't dare
> to do such a thing yet.

-- 
Rob Shearman


From wine at mkarcher.dialup.fu-berlin.de  Thu Jan  1 13:21:22 2009
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Thu, 01 Jan 2009 20:21:22 +0100
Subject: [shell32 5/6] include: Add remotable stubs for
	non-default-marshallable shobjidl calls.
In-Reply-To: <1096648c0901011109l7e0c191fqd0dcf692831a7286@mail.gmail.com>
References: <1230807520.540.132.camel@hermes2.karcher.local>
	<1096648c0901011109l7e0c191fqd0dcf692831a7286@mail.gmail.com>
Message-ID: <1230837682.540.154.camel@hermes2.karcher.local>

Am Donnerstag, den 01.01.2009, 19:09 +0000 schrieb Rob Shearman:
> 2009/1/1 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> > +    [call_as(AddPropertySheetPages)]
> > +    HRESULT RemoteAddPropertySheetPages();
[...]
> > +    [call_as(SendControlMsg)]
> > +    HRESULT RemoteSendControlMsg();
> > +
[...]
> > +    [call_as(SetToolbarItems)]
> > +    HRESULT RemoteSetToolbarItems();
> These shouldn't be necessary. What is it that you're trying to fix?
Widl outputting vtable slot number mismatch errors when a local function
is present without a remote function being present also. But if I might
take a guess from my last experiences here: This is a widl bug that
should be fixed...

> > -    HRESULT GetDropDownStatus(
> > +    [local] HRESULT GetDropDownStatus(
> >          [out] DWORD *pdwFlags,
> > -        [out, string] LPWSTR *ppwszString);
> > +        [out] LPWSTR *ppwszString);
> > +
> > +    [call_as(GetDropDownStatus)]
> > +    HRESULT RemoteGetDropDownStatus();
> 
> This isn't correct. IAutoCompleteDropDown::GetDropDownStatus should be
> remoted as is.
How does that work? ppwszString is a NULL-pointer-terminated array of
strings. Does the [string] flag work for pointer arrays too? MSDN
doesn't say so.

Regards,
  Michael Karcher



From robertshearman at gmail.com  Thu Jan  1 14:43:17 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Thu, 1 Jan 2009 20:43:17 +0000
Subject: [shell32 5/6] include: Add remotable stubs for
	non-default-marshallable shobjidl calls.
In-Reply-To: <1230837682.540.154.camel@hermes2.karcher.local>
References: <1230807520.540.132.camel@hermes2.karcher.local>
	<1096648c0901011109l7e0c191fqd0dcf692831a7286@mail.gmail.com>
	<1230837682.540.154.camel@hermes2.karcher.local>
Message-ID: <1096648c0901011243k30ccb903t7cd09fa1dd8dd569@mail.gmail.com>

2009/1/1 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> Am Donnerstag, den 01.01.2009, 19:09 +0000 schrieb Rob Shearman:
>> 2009/1/1 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
>> > +    [call_as(AddPropertySheetPages)]
>> > +    HRESULT RemoteAddPropertySheetPages();
> [...]
>> > +    [call_as(SendControlMsg)]
>> > +    HRESULT RemoteSendControlMsg();
>> > +
> [...]
>> > +    [call_as(SetToolbarItems)]
>> > +    HRESULT RemoteSetToolbarItems();
>> These shouldn't be necessary. What is it that you're trying to fix?
> Widl outputting vtable slot number mismatch errors when a local function
> is present without a remote function being present also. But if I might
> take a guess from my last experiences here: This is a widl bug that
> should be fixed...

I'm afraid so.

>> > -    HRESULT GetDropDownStatus(
>> > +    [local] HRESULT GetDropDownStatus(
>> >          [out] DWORD *pdwFlags,
>> > -        [out, string] LPWSTR *ppwszString);
>> > +        [out] LPWSTR *ppwszString);
>> > +
>> > +    [call_as(GetDropDownStatus)]
>> > +    HRESULT RemoteGetDropDownStatus();
>>
>> This isn't correct. IAutoCompleteDropDown::GetDropDownStatus should be
>> remoted as is.
> How does that work? ppwszString is a NULL-pointer-terminated array of
> strings.

MSDN says that this function actually just returns one string, not a
NULL-pointer-terminated array of strings, so this should just work.

> Does the [string] flag work for pointer arrays too? MSDN
> doesn't say so.

No, the [string] attribute in this case in redundant and it should
apply to the first pointer in the parameter. I'm guessing by the
change that you had to make that widl doesn't handle this too well...

-- 
Rob Shearman


From robertshearman at gmail.com  Thu Jan  1 14:46:18 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Thu, 1 Jan 2009 20:46:18 +0000
Subject: ole32: Add HICON user marshalling stubs
In-Reply-To: <1230807383.540.130.camel@hermes2.karcher.local>
References: <1230807383.540.130.camel@hermes2.karcher.local>
Message-ID: <1096648c0901011246k67dfaa71q236b1ecde10da9bf@mail.gmail.com>

2009/1/1 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> diff --git a/dlls/ole32/ole32.spec b/dlls/ole32/ole32.spec
> index 79376ac..f7db2b0 100644
> --- a/dlls/ole32/ole32.spec
> +++ b/dlls/ole32/ole32.spec
> @@ -122,6 +122,10 @@
>  @ stdcall HBITMAP_UserMarshal(ptr ptr ptr)
>  @ stdcall HBITMAP_UserSize(ptr long ptr)
>  @ stdcall HBITMAP_UserUnmarshal(ptr ptr ptr)
> +@ stdcall HICON_UserFree(ptr ptr)
> +@ stdcall HICON_UserMarshal(ptr ptr ptr)
> +@ stdcall HICON_UserSize(ptr long ptr)
> +@ stdcall HICON_UserUnmarshal(ptr ptr ptr)
>  @ stub HBRUSH_UserFree
>  @ stub HBRUSH_UserMarshal
>  @ stub HBRUSH_UserSize

The functions should be added in the correct place so that the list of
functions remains sorted.

-- 
Rob Shearman


From wine at mkarcher.dialup.fu-berlin.de  Thu Jan  1 14:48:00 2009
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Thu, 01 Jan 2009 21:48:00 +0100
Subject: widl: print error on [out, string] without size_is
In-Reply-To: <1230805346.540.59.camel@hermes2.karcher.local>
References: <1230805346.540.59.camel@hermes2.karcher.local>
Message-ID: <1230842880.540.156.camel@hermes2.karcher.local>

Am Donnerstag, den 01.01.2009, 11:22 +0100 schrieb Michael Karcher:
> The old behaviour was to emit a half-complete C statement without
> any error message.
This patch is bad. Please ignore.

Regards,
  Michael Karcher



From wine at mkarcher.dialup.fu-berlin.de  Thu Jan  1 14:56:01 2009
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Thu, 01 Jan 2009 21:56:01 +0100
Subject: [shell32 5/6] include: Add remotable stubs for
	non-default-marshallable shobjidl calls.
In-Reply-To: <1096648c0901011243k30ccb903t7cd09fa1dd8dd569@mail.gmail.com>
References: <1230807520.540.132.camel@hermes2.karcher.local>
	<1096648c0901011109l7e0c191fqd0dcf692831a7286@mail.gmail.com>
	<1230837682.540.154.camel@hermes2.karcher.local>
	<1096648c0901011243k30ccb903t7cd09fa1dd8dd569@mail.gmail.com>
Message-ID: <1230843362.540.162.camel@hermes2.karcher.local>

Am Donnerstag, den 01.01.2009, 20:43 +0000 schrieb Rob Shearman:
> >> > -    HRESULT GetDropDownStatus(
> >> > +    [local] HRESULT GetDropDownStatus(
> >> >          [out] DWORD *pdwFlags,
> >> > -        [out, string] LPWSTR *ppwszString);
> >> > +        [out] LPWSTR *ppwszString);
> >> > +
> >> > +    [call_as(GetDropDownStatus)]
> >> > +    HRESULT RemoteGetDropDownStatus();
> >>
> >> This isn't correct. IAutoCompleteDropDown::GetDropDownStatus should be
> >> remoted as is.
> > How does that work? ppwszString is a NULL-pointer-terminated array of
> > strings.
> MSDN says that this function actually just returns one string, not a
> NULL-pointer-terminated array of strings, so this should just work.
Oh, thanks for opening my eyes!

And, thanks again for taking your time to review my patches. Your work
is really appreciated!

> No, the [string] attribute in this case in redundant and it should
> apply to the first pointer in the parameter.
Now, that makes sense.

> I'm guessing by the
> change that you had to make that widl doesn't handle this too well...
Seems so. I don't want to hurt anyone, but I somehow get the impression
that the quality of widl is somewhere around works-for-me.

Regards,
  Michael Karcher



From dank at kegel.com  Thu Jan  1 16:45:54 2009
From: dank at kegel.com (Dan Kegel)
Date: Thu, 1 Jan 2009 14:45:54 -0800
Subject: Ubuntu popcon trivia
Message-ID: <a71bd89a0901011445l445bab2p31e82c558c1626d8@mail.gmail.com>

Did you know that almost as many people have Wine
installed as have Sun's Java 6 installed?

wget http://popcon.ubuntu.com/by_inst.gz
gunzip by_inst.gz
awk '/wine |sun-java6-jre/' by_inst | head

rank  name              inst        vote    old      recent old-files
1208  sun-java6-jre   390519   68179 313376  7354  1610 (Matthias
Klose)
1321  wine               338377  42513 282338 13460    66 (Scott
Ritchie)

The highest 'inst' value in the file is 871814, so
it looks like about 39% of machines subscribed
to popcon have wine installed.


From kde at graph-ix.net  Thu Jan  1 17:41:14 2009
From: kde at graph-ix.net (Markus)
Date: Thu, 1 Jan 2009 18:41:14 -0500
Subject: Status of dxdiagn?
In-Reply-To: <a71bd89a0812272128w3f51454cuc7eeab9a015c836@mail.gmail.com>
References: <a71bd89a0812272128w3f51454cuc7eeab9a015c836@mail.gmail.com>
Message-ID: <200901011841.14313.kde@graph-ix.net>

Hi Dan,

I have not worked on dxdiagn for a few months due to a lack of time. As far as 
missing functionality is concerned, I have only investigated properties 
related to the display container. I suspect that many games are trying to read 
the b3DAccelerationExists and/or b3DAccelerationEnabled properties in it to 
determine if 3D acceleration is available. However, compared to dx9, there are 
more than 45 other properties missing for this container alone, so there is 
still a lot of work left to be done.

In order to reach support for the two acceleration properties, I have just 
submitted an updated patch based on my code from mid-2008:
http://www.winehq.org/pipermail/wine-patches/2009-January/066929.html

I will try to re-submit the test case in the next days depending on my time.

Regarding an implementation of dxdiag.exe, it might be a good idea to first 
add all the missing properties to the dll, at least as stubs. Without them, 
there doesn't seem to be that much to retrieve and display with dxdiag.exe

Markus

On Sunday 28 December 2008 00:28:56 Dan Kegel wrote:
> Hi Markus,
> what's the status of dxdiagn these days?  I see a number
> of games that say they need a native copy:
> http://www.google.com/search?q=dxdiagn+site%3Aappdb.winehq.org
> Do you know what needs doing before we can get
> native dxdiag working,
> http://bugs.winehq.org/show_bug.cgi?id=1429 ?
>
> Also, how about your dxdiagn conformance test?
> http://www.winehq.org/pipermail/wine-patches/2008-May/055355.html
> I know it didn't do much, maybe you could have it check a
> few required properties?
>
> I ask because I'm looking around for a student project,
> and implementing dxdiag.exe came to mind; looking
> around a bit, I saw dxdiagn, and figured it might be nice
> to tie up some loose ends there, too.
> - Dan

-- 
Markus



From dank at kegel.com  Thu Jan  1 19:13:27 2009
From: dank at kegel.com (Dan Kegel)
Date: Thu, 1 Jan 2009 17:13:27 -0800
Subject: Status of dxdiagn?
In-Reply-To: <200901011841.14313.kde@graph-ix.net>
References: <a71bd89a0812272128w3f51454cuc7eeab9a015c836@mail.gmail.com>
	<200901011841.14313.kde@graph-ix.net>
Message-ID: <a71bd89a0901011713x5c889c55j17cdacec798f2744@mail.gmail.com>

On Thu, Jan 1, 2009 at 3:41 PM, Markus <kde at graph-ix.net> wrote:
> ... I suspect that many games are trying to read
> the b3DAccelerationExists and/or b3DAccelerationEnabled properties in it to
> determine if 3D acceleration is available. However, compared to dx9, there are
> more than 45 other properties missing for this container alone, so there is
> still a lot of work left to be done.
>
> In order to reach support for the two acceleration properties, I have just
> submitted an updated patch based on my code from mid-2008:
> http://www.winehq.org/pipermail/wine-patches/2009-January/066929.html
>
> I will try to re-submit the test case in the next days depending on my time.
>
> Regarding an implementation of dxdiag.exe, it might be a good idea to first
> add all the missing properties to the dll, at least as stubs. Without them,
> there doesn't seem to be that much to retrieve and display with dxdiag.exe

Thanks for the info and for refreshing your patches!

Are there any games that currently need native dxdiagn that we might fix?
I had a look, and only found two that seemed to need native dxdiagn:

World In Conflict is affected by this, right?
http://bugs.winehq.org/show_bug.cgi?id=11114
Is this problem addressed by your current patch?

I see Final Fantasy XI wants native dxdiagn; there's even a web
site *just for that one game on Wine* that mentions this!
http://www.wineffxi.org
- Dan


From dank at kegel.com  Thu Jan  1 21:35:51 2009
From: dank at kegel.com (Dan Kegel)
Date: Thu, 1 Jan 2009 19:35:51 -0800
Subject: Status of dxdiagn?
In-Reply-To: <a71bd89a0901011713x5c889c55j17cdacec798f2744@mail.gmail.com>
References: <a71bd89a0812272128w3f51454cuc7eeab9a015c836@mail.gmail.com>
	<200901011841.14313.kde@graph-ix.net>
	<a71bd89a0901011713x5c889c55j17cdacec798f2744@mail.gmail.com>
Message-ID: <a71bd89a0901011935x7fe602a6qa80c18c65e425c48@mail.gmail.com>

On Thu, Jan 1, 2009 at 5:13 PM, Dan Kegel <dank at kegel.com> wrote:
>> In order to reach support for the two acceleration properties, I have just
>> submitted an updated patch based on my code from mid-2008:
>> http://www.winehq.org/pipermail/wine-patches/2009-January/066929.html
>
> World In Conflict is affected by this, right?
> http://bugs.winehq.org/show_bug.cgi?id=11114

Looks like it (the demo, too).
I got the demo to start by dropping in a native dxdiagn and disabling d3dx10
as described in the full game's howto at
http://appdb.winehq.org/objectManager.php?sClass=version&iId=9237
Sadly, I get no video other than the cursor, and I haven't
the foggiest idea of how to quit the game, so I have to kill
it from another terminal.

This is promising, though.  The student could have the goal
of fixing dxdiagn so that wic's demo starts.

> Is this problem addressed by your current patch?

Guess not, I tried it, no joy (not surprising, it only implements
one of the ten or so properties the game queries).
- Dan


From max at veneto.com  Fri Jan  2 04:40:16 2009
From: max at veneto.com (Massimo Del Fedele)
Date: Fri, 02 Jan 2009 11:40:16 +0100
Subject: Testing DIB Engine (second part)
In-Reply-To: <f5d9424f0812232336x1656e83ega0d5058de0384b48@mail.gmail.com>
References: <girve8$t7k$1@ger.gmane.org>
	<f5d9424f0812232336x1656e83ega0d5058de0384b48@mail.gmail.com>
Message-ID: <gjkqug$rfb$1@ger.gmane.org>

I haven't still any clue if the way I started the DIB engine has the 
correct approach, I mean if I should follow this way with the hope to 
have it included in  main tree or not.... Can please somebody tell me 
something about ?

Ciao

Max



From thunderbird2k at gmx.net  Fri Jan  2 05:11:29 2009
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Fri, 02 Jan 2009 12:11:29 +0100
Subject: Testing DIB Engine (second part)
In-Reply-To: <gjkqug$rfb$1@ger.gmane.org>
References: <girve8$t7k$1@ger.gmane.org>
	<f5d9424f0812232336x1656e83ega0d5058de0384b48@mail.gmail.com>
	<gjkqug$rfb$1@ger.gmane.org>
Message-ID: <20090102111129.258640@gmx.net>


> I haven't still any clue if the way I started the DIB engine has the 
> correct approach, I mean if I should follow this way with the hope to 
> have it included in  main tree or not.... Can please somebody tell me 
> something about ?
> 
> Ciao
> 
> Max
> 

I would recommend you to visit #winehackers and start asking there. AJ is there too. I believe it was mentioned at WineConf that also Jesse his design wasn't good.

Roderick
-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger


From max at veneto.com  Fri Jan  2 05:28:54 2009
From: max at veneto.com (Massimo Del Fedele)
Date: Fri, 02 Jan 2009 12:28:54 +0100
Subject: Testing DIB Engine (second part)
In-Reply-To: <20090102111129.258640@gmx.net>
References: <girve8$t7k$1@ger.gmane.org>	<f5d9424f0812232336x1656e83ega0d5058de0384b48@mail.gmail.com>	<gjkqug$rfb$1@ger.gmane.org>
	<20090102111129.258640@gmx.net>
Message-ID: <gjktpm$3lk$1@ger.gmane.org>

Roderick Colenbrander ha scritto:
>> I haven't still any clue if the way I started the DIB engine has the 
>> correct approach, I mean if I should follow this way with the hope to 
>> have it included in  main tree or not.... Can please somebody tell me 
>> something about ?
>>
>> Ciao
>>
>> Max
>>
> 
> I would recommend you to visit #winehackers and start asking there. AJ is there too. I believe it was mentioned at WineConf that also Jesse his design wasn't good.
> 
> Roderick

Well, my design is a mix between Jesse's and Huw's ones, more the latter 
than the former. BTW, both designs are similars in concept.
Well.... I'll wait for some more suggestions :-)
Thank you for answer

Ciao

Max



From lkcl at lkcl.net  Fri Jan  2 09:34:16 2009
From: lkcl at lkcl.net (Luke Kenneth Casson Leighton)
Date: Fri, 2 Jan 2009 15:34:16 +0000
Subject: REALLY EXCITING! wine iexplore.exe http://pyjs.org/examples/
In-Reply-To: <ced5f0f60901010953l5d0d2f14l3b4d60a967ae9a5e@mail.gmail.com>
References: <ced5f0f60901010953l5d0d2f14l3b4d60a967ae9a5e@mail.gmail.com>
Message-ID: <ced5f0f60901020734u2bb906fye2aca5e1428ad1d5@mail.gmail.com>

aww folks - bless you :)  if all of these worked, then it means that
mshtml is coming along _really_ well!  i went through the kitchen sink
example, and it passed - everything - with flying colours.  the
library unit test - passes everything!  even the SVG canvas (in the
addons) works!

i was _just_ about to get _really_ excited, when i ran the JSONRPC
example, but awwwww, i got this:
fixme:mshtml:nsUploadChannel_SetUploadStream Unsupported aContentType
argument: "application/x-www-form-urlencoded"

darn, darn :)

if that had worked first time, it would have been _unbelievable_ - and
_so_ exciting.

i liked especially the way that internet explorer is detected as
Mozilla-compatible.  to support IE's javascript features _would_
perhaps bit a _little_ too much :)

but the real purpose of this message is to say WELL XXXXING DONE!

l.


From kde at graph-ix.net  Fri Jan  2 09:36:27 2009
From: kde at graph-ix.net (Markus)
Date: Fri, 2 Jan 2009 10:36:27 -0500
Subject: Status of dxdiagn?
In-Reply-To: <a71bd89a0901011935x7fe602a6qa80c18c65e425c48@mail.gmail.com>
References: <a71bd89a0812272128w3f51454cuc7eeab9a015c836@mail.gmail.com>
	<a71bd89a0901011713x5c889c55j17cdacec798f2744@mail.gmail.com>
	<a71bd89a0901011935x7fe602a6qa80c18c65e425c48@mail.gmail.com>
Message-ID: <200901021036.27809.kde@graph-ix.net>

On Thursday 01 January 2009 22:35:51 Dan Kegel wrote:
> On Thu, Jan 1, 2009 at 5:13 PM, Dan Kegel <dank at kegel.com> wrote:
> >> In order to reach support for the two acceleration properties, I have
> >> just submitted an updated patch based on my code from mid-2008:
> >> http://www.winehq.org/pipermail/wine-patches/2009-January/066929.html
> >
> > World In Conflict is affected by this, right?
> > http://bugs.winehq.org/show_bug.cgi?id=11114
>
> Looks like it (the demo, too).
Yes, World in Conflict is what I am trying to fix dxdiagn for. The 
szDeviceIdentifier property added by the above patch is a prerequisite to have 
the game continue checking for 3D capabilities of the system. If 
szDeviceIdentifier is not present, the check will already consider 3D not to 
be available.

> I got the demo to start by dropping in a native dxdiagn and disabling
> d3dx10 as described in the full game's howto at
> http://appdb.winehq.org/objectManager.php?sClass=version&iId=9237
> Sadly, I get no video other than the cursor, and I haven't
> the foggiest idea of how to quit the game, so I have to kill
> it from another terminal.
The game used to run very well with previous versions of Wine. I am seeing the 
black screen too with HEAD, so this is possibly an unrelated recent 
regression. As long as the game starts, you're ok in regard to dxdiagn.

> This is promising, though.  The student could have the goal
> of fixing dxdiagn so that wic's demo starts.
If my patch above is accepted, only the two b3D properties remain to be 
implemented and then WiC should start fine. I don't think that is big enough 
of a project.

-- 
Markus


From dank at kegel.com  Fri Jan  2 09:58:48 2009
From: dank at kegel.com (Dan Kegel)
Date: Fri, 2 Jan 2009 07:58:48 -0800
Subject: Status of dxdiagn?
In-Reply-To: <200901021036.27809.kde@graph-ix.net>
References: <a71bd89a0812272128w3f51454cuc7eeab9a015c836@mail.gmail.com>
	<a71bd89a0901011713x5c889c55j17cdacec798f2744@mail.gmail.com>
	<a71bd89a0901011935x7fe602a6qa80c18c65e425c48@mail.gmail.com>
	<200901021036.27809.kde@graph-ix.net>
Message-ID: <a71bd89a0901020758n641dad81o49590c3efe815aac@mail.gmail.com>

On Fri, Jan 2, 2009 at 7:36 AM, Markus <kde at graph-ix.net> wrote:
> If my patch above is accepted, only the two b3D properties remain to be
> implemented and then WiC should start fine. I don't think that is big enough
> of a project.

Got another game that needs dxdiagn fixes?

Or they could go ahead and do dxdiag on top of dxdiagn.


From scott at open-vote.org  Fri Jan  2 15:04:00 2009
From: scott at open-vote.org (Scott Ritchie)
Date: Fri, 02 Jan 2009 13:04:00 -0800
Subject: Ubuntu popcon trivia
In-Reply-To: <a71bd89a0901011445l445bab2p31e82c558c1626d8@mail.gmail.com>
References: <a71bd89a0901011445l445bab2p31e82c558c1626d8@mail.gmail.com>
Message-ID: <495E8140.9080601@open-vote.org>

Dan Kegel wrote:
> Did you know that almost as many people have Wine
> installed as have Sun's Java 6 installed?
> 
> wget http://popcon.ubuntu.com/by_inst.gz
> gunzip by_inst.gz
> awk '/wine |sun-java6-jre/' by_inst | head
> 
> rank  name              inst        vote    old      recent old-files
> 1208  sun-java6-jre   390519   68179 313376  7354  1610 (Matthias
> Klose)
> 1321  wine               338377  42513 282338 13460    66 (Scott
> Ritchie)
> 
> The highest 'inst' value in the file is 871814, so
> it looks like about 39% of machines subscribed
> to popcon have wine installed.
> 
> 

Whoa.  That's about 4 times as high as a few months ago, percentage-wise.


Thanks,
Scott Ritchie


From robertshearman at gmail.com  Fri Jan  2 15:09:17 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Fri, 2 Jan 2009 21:09:17 +0000
Subject: [4/5] wined3d: Convert some BOOLs to bitfields in struct
	IWineD3DDeviceImpl.
In-Reply-To: <495A2985.2070206@codeweavers.com>
References: <495A2985.2070206@codeweavers.com>
Message-ID: <1096648c0901021309pb82ac86oc6cd783d72e2db6d@mail.gmail.com>

2008/12/30 Henri Verbeet <hverbeet at codeweavers.com>:
>
>
> From f6e4f88407491db8bb53d22d526f69b9ff761aaf Mon Sep 17 00:00:00 2001
> From: Henri Verbeet <hverbeet at codeweavers.com>
> Date: Tue, 30 Dec 2008 14:56:49 +0100
> Subject: wined3d: Convert some BOOLs to bitfields in struct
> IWineD3DDeviceImpl.
>
> Also fills a 3 byte hole.
> ---
>  dlls/wined3d/device.c                |   17 +++++----------
>  dlls/wined3d/nvidia_texture_shader.c |    2 +-
>  dlls/wined3d/state.c                 |    4 +-
>  dlls/wined3d/wined3d_private.h       |   36
> ++++++++++++++++-----------------
>  4 files changed, 26 insertions(+), 33 deletions(-)

How many instances of this structure are likely to be in a process at
any one time? It seems to me as though as any memory savings gained by
making the BOOLs into bitfields will be taken up by increased code
size. There is also the risk that there will be a small performance
penalty for this and the other similar changes too.

These kinds of optimisations need to be backed up by benchmarks, for
both memory and performance.

-- 
Rob Shearman


From robertshearman at gmail.com  Fri Jan  2 15:17:51 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Fri, 2 Jan 2009 21:17:51 +0000
Subject: question on how to do language bindings to MSHTML's COM interface
In-Reply-To: <ced5f0f60901010942x92ffa2eo68cdb12e65f36784@mail.gmail.com>
References: <ced5f0f60901010942x92ffa2eo68cdb12e65f36784@mail.gmail.com>
Message-ID: <1096648c0901021317h13045d6ao28ceb1f5f61098be@mail.gmail.com>

2009/1/1 Luke Kenneth Casson Leighton <lkcl at lkcl.net>:
> folks, hi,
> i have a rather intriguing issue i'd like to look at, which takes
> quite a bit of explaining as to why i'd like to go about it - if
> people are interested i can answer that, but for now i'll leave it at
> this:
> how, under linux, would i go about making an application that made
> _use_ of MSHTML.DLL's functionality, via its COM / DCE/RPC / MSRPC
> interface?
> in other words, if you are familiar with gecko / XUL, how would i go
> about making a gecko / XUL style of application, using MSHTML as the
> basis, and, once that was achieved, would it stand a chance of
> successfully running under vanilla windows, using MS's own version of
> MSHTML?

There are a number of parts to your question:
1. Is it OK for the application to be a winelib one (i.e. invoked via
or linked to wine, rather than being "native")?
2. What language are you writing the application in?
3. Pretty much all interaction with mshtml happens through COM
interfaces, so which interfaces are you interested in?

> yes i _am_ fully aware that, underneath, according to the wiki page on
> mshtml's implementation, mshtml underneath uses Gecko - but i don't
> _want_ to use the Gecko / XUL interface (mostly because it already
> exists!  i don't like challenges that have already been done :)
> specifically, i'd _really_ like to have python bindings to the COM
> bindings to MSHTML - all under linux.
> so there are some _really_ weird esoteric "sub-questions" involved, such as:
> "what are the chances of porting pywin32 - specifically pywin32's COM
> bindings - to linux, thanks to widl and friends"?
> see http://sourceforge.net/projects/pywin32
> many thanks for any advice and information.

We already build a typelib for mshtml using widl and pywin32 can use
that to make bindings for use at runtime, so it "should" work, but I
fail to see the need for it at the moment.

At some point I'd like to see a Python output generator for widl so
that it can directly generate Python code that will communicate to a
remote process using DCE/RPC, but that comes second place to getting
the C generator as close to perfect as possible at the moment.

-- 
Rob Shearman


From hverbeet at gmail.com  Fri Jan  2 16:19:06 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Fri, 2 Jan 2009 23:19:06 +0100
Subject: [4/5] wined3d: Convert some BOOLs to bitfields in struct
	IWineD3DDeviceImpl.
In-Reply-To: <1096648c0901021309pb82ac86oc6cd783d72e2db6d@mail.gmail.com>
References: <495A2985.2070206@codeweavers.com>
	<1096648c0901021309pb82ac86oc6cd783d72e2db6d@mail.gmail.com>
Message-ID: <d658b69e0901021419p56a84f9h99c0822c41299373@mail.gmail.com>

2009/1/2 Rob Shearman <robertshearman at gmail.com>:
> How many instances of this structure are likely to be in a process at
> any one time? It seems to me as though as any memory savings gained by
> making the BOOLs into bitfields will be taken up by increased code
> size. There is also the risk that there will be a small performance
> penalty for this and the other similar changes too.
>
In a typical application there's only one instance of the device
struct, but the fields are accessed a lot. The patch isn't so much
about saving memory as it's about not wasting cachelines. The
SAVEDSTATES struct, which most of the other patches modify is used a
bit more, once for each stateblock. Note that that structure was
initially 5448 bytes large, using up 86 64-bit cachelines. It should
be possible to get that down to 3 or 4.

Code size increase should be insignificant for this patch, in case of
setting a flag you essentially replace a mov with an or, and testing
stays mostly the same. For the SAVEDSTATES patches a couple of extra
shifts are introduced, but I'm pretty sure those are worth it compared
to the saved cachelines.

> These kinds of optimisations need to be backed up by benchmarks, for
> both memory and performance.
>
I did of course run some benchmarks before sending these changes in.
3DMark03 shows a small but consistent improvement. The CSS stress test
doesn't get much more than a single fps improvement for the average
frame rate, but that one is mostly limited by shader constant loading
and sample size & rate conversion in dsound (ignoring sRGB texture
loading). I didn't notice any performance regressions in any
applications.


From marcus at jet.franken.de  Fri Jan  2 16:29:00 2009
From: marcus at jet.franken.de (Marcus Meissner)
Date: Fri, 2 Jan 2009 23:29:00 +0100
Subject: Build wine with gcc-4.3 and ssp
In-Reply-To: <50952.88.66.121.243.1230934492.squirrel@darbo.grandnagus.de>
References: <50952.88.66.121.243.1230934492.squirrel@darbo.grandnagus.de>
Message-ID: <20090102222900.GC28483@galeere.jet.franken.de>

On Fri, Jan 02, 2009 at 11:14:52PM +0100, Stefan Reimer wrote:
> Hi,
> to build wine using gcc 4.3 with enabled ssp (stack-smashing-protector)
> the following patch must be applied to loader/preloader.c
> 
> see gcc source ./gcc/config/i386/i386.c around line 24391
> 
> /* For 32-bit code we can save PIC register setup by using
>    __stack_chk_fail_local hidden function instead of calling
>    __stack_chk_fail directly.  64-bit code doesn't need to setup any PIC
> register, so it is better to call __stack_chk_fail directly.  */
> 
> Patch:
> 
> diff --git a/loader/preloader.c b/loader/preloader.c
> index 5fcb974..1143972 100644
> --- a/loader/preloader.c
> +++ b/loader/preloader.c
> @@ -163,6 +163,7 @@ void __bb_init_func(void) { return; }
> 
>  /* similar to the above but for -fstack-protector */
>  void *__stack_chk_guard = 0;
> +void __stack_chk_fail_local(void) { return; }
>  void __stack_chk_fail(void) { return; }
> 
>  /* data for setting up the glibc-style thread-local storage in %gs */

Hmm,

why does this work for me on openSUSE then?

The line:
gcc -c -I. -I. -I../include -I../include    -Wall -pipe -fno-strict-aliasing -Wdeclaration-after-statement -Wwrite-strings -W
type-limits -Wpointer-arith  -march=i586 -mtune=i686 -fmessage-length=0 -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funw
ind-tables -fasynchronous-unwind-tables -g  -o preloader.o preloader.c

works fine here. Are you passing in -fPIC?

Ciao, marcus


From wine-devel at kievinfo.com  Fri Jan  2 16:30:44 2009
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Fri, 02 Jan 2009 15:30:44 -0700
Subject: Implemented retrieval of szDeviceIdentifier property in dxdiagn
In-Reply-To: <200901011805.48189.kde@graph-ix.net>
References: <200901011805.48189.kde@graph-ix.net>
Message-ID: <495E9594.30208@kievinfo.com>

Markus wrote:

Few problems with your patch:

> +    IDirect3D9             *(WINAPI *pDirect3DCreate9)(UINT) = NULL;
> +    IDirect3D9             *pD3d = NULL;
No need to initialize something you'll assign to anyway.

> +    d3d9_handle = LoadLibraryA( "d3d9.dll" );
You need to unload it when you done.

> +    memset(&adapter_ident, 0, sizeof(adapter_ident));
No need to clear this structure.

> +        StringFromGUID2(&adapter_ident.DeviceIdentifier, adapter_ident_str, 39);
Why don't you put it directly into szIdentifierBuffer?

> +        memcpy( szIdentifierBuffer, adapter_ident_str, sizeof(adapter_ident_str) * sizeof(WCHAR) );
sizeof() gives size in bytes. You don't need to multiply it by sizeof(WCHAR).

> +    WCHAR                   deviceIdentBuffer[256];
First why 256 if all you need is 39? Second, why do you need it at all?
There is already "buffer" which is big enough.

> +    DXDiag_GetDisplayDeviceIdentifier( &deviceIdentBuffer );
You don't need to take a reference from array. It's already a pointer
(remove "&"). Any time you pass array like that you should also pass it's size.


Vitaliy.


From robertshearman at gmail.com  Fri Jan  2 17:44:36 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Fri, 2 Jan 2009 23:44:36 +0000
Subject: [shell32 5/6] include: Add remotable stubs for
	non-default-marshallable shobjidl calls.
In-Reply-To: <1230843362.540.162.camel@hermes2.karcher.local>
References: <1230807520.540.132.camel@hermes2.karcher.local>
	<1096648c0901011109l7e0c191fqd0dcf692831a7286@mail.gmail.com>
	<1230837682.540.154.camel@hermes2.karcher.local>
	<1096648c0901011243k30ccb903t7cd09fa1dd8dd569@mail.gmail.com>
	<1230843362.540.162.camel@hermes2.karcher.local>
Message-ID: <1096648c0901021544l1a2246bdy97c06a7cc75d56ce@mail.gmail.com>

2009/1/1 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> Am Donnerstag, den 01.01.2009, 20:43 +0000 schrieb Rob Shearman:
>> No, the [string] attribute in this case in redundant and it should
>> apply to the first pointer in the parameter.
> Now, that makes sense.
>
>> I'm guessing by the
>> change that you had to make that widl doesn't handle this too well...
> Seems so. I don't want to hurt anyone, but I somehow get the impression
> that the quality of widl is somewhere around works-for-me.

The trouble in this case was a corner case that was only tested by
some bad IDL. Corner cases are never easy to test for and the best way
of fixing bugs is to eliminate them as much as possible. To that end I
have some patches queued up that add more of an API to access the
parse tree to try to make the generator code more robust. In
particular, the C generator code could probably do with a function
like type_get_ndr_type that deals with the nuances of detecting
strings, user-types, context handles, interface pointers, etc and that
would likely have fixed several of the issues you reported.

In terms of testing, I want to find and fix these issues before users
(i.e. other developers, like you) find them. To that end, I think a
good test may be to run "widl -p" on as many of the files in include/
as possible and fix/log any issues that come up, and then to compile
each file. There should be no errors in either case, since errors
should be reported up front (i.e. even for just generating a header
file or a syntax check). I also plan to write a fuzzer for widl
someday - if anyone knows of a free fuzzer framework out there
somewhere then that would be useful.

-- 
Rob Shearman


From reif at earthlink.net  Fri Jan  2 18:01:02 2009
From: reif at earthlink.net (Robert Reif)
Date: Fri, 02 Jan 2009 19:01:02 -0500
Subject: [PATCH] oleaut32: PICTYPE_ICON returns EFAIL for get_hPal (try 2)
In-Reply-To: <660414.30849.qm@web56606.mail.re3.yahoo.com>
References: <660414.30849.qm@web56606.mail.re3.yahoo.com>
Message-ID: <495EAABE.4050903@earthlink.net>

Jon Griffiths wrote:
> Hi,
>
> Smaller patch with properly static-ified icon data.
>
> Cheers
> Jon
>
>
>       
> ------------------------------------------------------------------------
>
>
Did this patch get dropped for a reason?


From kde at graph-ix.net  Fri Jan  2 18:09:12 2009
From: kde at graph-ix.net (Markus)
Date: Fri, 2 Jan 2009 19:09:12 -0500
Subject: Status of dxdiagn?
In-Reply-To: <a71bd89a0901020758n641dad81o49590c3efe815aac@mail.gmail.com>
References: <a71bd89a0812272128w3f51454cuc7eeab9a015c836@mail.gmail.com>
	<200901021036.27809.kde@graph-ix.net>
	<a71bd89a0901020758n641dad81o49590c3efe815aac@mail.gmail.com>
Message-ID: <200901021909.12894.kde@graph-ix.net>

On Friday 02 January 2009 10:58:48 Dan Kegel wrote:
> Got another game that needs dxdiagn fixes?
Personally, I don't know of any other games that need dxdiagn fixes but I 
guess you already identified potential candidates earlier.

> Or they could go ahead and do dxdiag on top of dxdiagn.
That might be a good idea as it would simplify dxdiagn development by offering 
a GUI showing the retrieved values and those still missing.

-- 
Markus


From dank at kegel.com  Fri Jan  2 18:23:52 2009
From: dank at kegel.com (Dan Kegel)
Date: Fri, 2 Jan 2009 16:23:52 -0800
Subject: install-wine-deps.sh can now handle 32 bit wine on 64 bit systems
Message-ID: <a71bd89a0901021623m379ea929q6524e3f7059f8814@mail.gmail.com>

I just improved
http://code.google.com/p/winezeug/source/browse/trunk/install-wine-deps.sh
so it does all the futzing needed to build 32 bit wine on 64 bit systems
(although at the moment it only does this for Ubuntu Intrepid).

Because it puts the missing .so files in /usr/lib32, there's no need
to futz with LDPATH.

For example, after running the script, you can do either
  ./configure
  make
to build 64 bit wine, or
  ./configure --target=i686-unknown-gnu-linux
  make
to build 32 bit wine.  Easy beans!
- Dan


From truiken at gmail.com  Fri Jan  2 18:32:47 2009
From: truiken at gmail.com (James Hawkins)
Date: Fri, 2 Jan 2009 16:32:47 -0800
Subject: start.exe: don't use the NO_UI flag when invoked with /unix
In-Reply-To: <33F6268AA99B6C448F07F03B2B6497D31B07C1@taz.CodeWeavers.local>
References: <33F6268AA99B6C448F07F03B2B6497D31B07C1@taz.CodeWeavers.local>
Message-ID: <22821af30901021632j7490ed4au7e179f673c324704@mail.gmail.com>

On Fri, Jan 2, 2009 at 4:30 PM, Vincent Povirk <vincent at codeweavers.com> wrote:
> This makes it possible to get feedback when something goes wrong starting a non-exe file through a Linux gui.
>

Forgot the patch.

-- 
James Hawkins


From austinenglish at gmail.com  Fri Jan  2 18:33:01 2009
From: austinenglish at gmail.com (Austin English)
Date: Fri, 2 Jan 2009 18:33:01 -0600
Subject: start.exe: don't use the NO_UI flag when invoked with /unix
In-Reply-To: <33F6268AA99B6C448F07F03B2B6497D31B07C1@taz.CodeWeavers.local>
References: <33F6268AA99B6C448F07F03B2B6497D31B07C1@taz.CodeWeavers.local>
Message-ID: <b6bb06270901021633m4498ea5by293015c71058862a@mail.gmail.com>

On Fri, Jan 2, 2009 at 6:30 PM, Vincent Povirk <vincent at codeweavers.com> wrote:
> This makes it possible to get feedback when something goes wrong starting a non-exe file through a Linux gui.
>
>
>

You forgot the patch ;-).

-- 
-Austin


From jjmckenzie51 at earthlink.net  Fri Jan  2 21:14:34 2009
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Fri, 02 Jan 2009 20:14:34 -0700
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <76D80FEC-80EF-4E47-89A2-7CF21E3B50B2@free.fr>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
	<D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
	<76D80FEC-80EF-4E47-89A2-7CF21E3B50B2@free.fr>
Message-ID: <495ED81A.9080100@earthlink.net>

Emmanuel Maillard wrote:
> Hi,
>
> Le 4 juil. 08 ? 12:37, Adam Strzelecki a ?crit :
>
>   
>> Hi Emmanuel, hello Wine developers,
>>
>> Latest WineQuartz.drv patch is 0.9.58. Is there any change for more  
>> recent release? I tried this patch with 1.0-1 however it has too  
>> many conflicts.
>> It would be most convenient if you had just update http://repo.or.cz/w/wine/winequartzdrv.git 
>>  to match 1.1.0 somehow and include Quartz.
>>     
>
> I resolved conflicts for wine-1.0, but didn't take a look yet for  
> wine-1.1.0, i just know that's some changes in user32 and winex11.drv
> have to be update in winequartz.drv too.
>
> I will see this week end if i can find free time to make a new patch  
> for winequartz.drv and send it to SourceForge.
> (OpenGL is broken in winequartz.drv actually, because of a lack of  
> time to fix it)
>
>
>   
>> Since Wine passed 1.0 (woohoo!) maybe someone from the direction can  
>> revise Mac support? Even there're numerous Emmanuel efforts to  
>> provide Mac UI driver instead of X11, it will be always pushed  
>> aside, and sentenced to death, because it is not in official sources.
>>
>> I know Alexandre Julliard's decision about NOT taking any Objective- 
>> C sources (.m) into the Wine, but maybe this can be revised, anyway  
>> all .m rules will be only present on Mac platforms. Using Objective- 
>> C is only way to make fair support for Mac OS GUI, as those whole  
>> GUI system is objective.
>> Moreover then what's the point of keeping winex11.drv and all GUI  
>> driver infrastructure in Wine if nothing else but X11 is NOT  
>> accepted into official source?
>>
>> Forgive me what I say now, but I just it would be more fair if  
>> someone from Codeweavers just said that Wine's official support for  
>> Mac OS X is against their business with CrossOver and this is the  
>> real reason they reject winequartz.drv from Emmanuel Maillard.
>> Frankly I'd really pay for CrossOver or Wine, if it was what 1.0-1  
>> is but with native Mac UI, so each wine process has it's own dock  
>> icon, and no X11 is needed and native Mac font system.
>>
>> Regards,
>> -- 
>> Adam Strzelecki |: nanoant.com :|
>>
>>     
>
>
> Cheers
> Emmanuel
>
>   
Emmanuel:

What is the status of winequartz.drv?  It looks like your last patch was 
for 1.1.2.

James McKenzie



From dmitry at codeweavers.com  Fri Jan  2 23:37:53 2009
From: dmitry at codeweavers.com (Dmitry Timoshkov)
Date: Sat, 3 Jan 2009 13:37:53 +0800
Subject: richedit: Mask window id on WM_COMMAND notifications.
References: <5c6ee3b70901021136o193be4c2g11d21f1efe97b31a@mail.gmail.com>
Message-ID: <AD3579403BB6481091FD353592899B20@DMITRY>

"Dylan Smith" <dylan.ah.smith at gmail.com> wrote:

> -  SendMessageA(GetParent(hWnd), WM_COMMAND, (nCode<<16)|GetWindowLongW(hWnd, GWLP_ID), (LPARAM)hWnd);
> +  SendMessageA(GetParent(hWnd), WM_COMMAND, (nCode<<16)|(0xffff & GetWindowLongW(hWnd, GWLP_ID)), (LPARAM)hWnd);

MAKEWPARAM and LOWORD are supposed to be used here. Also, have you
tested what happens if real window id is larger than a 16-bit value,
or just a negative 16-bit one?

-- 
Dmitry.


From dylan.ah.smith at gmail.com  Sat Jan  3 00:10:32 2009
From: dylan.ah.smith at gmail.com (Dylan Smith)
Date: Sat, 3 Jan 2009 01:10:32 -0500
Subject: richedit: Mask window id on WM_COMMAND notifications.
In-Reply-To: <AD3579403BB6481091FD353592899B20@DMITRY>
References: <5c6ee3b70901021136o193be4c2g11d21f1efe97b31a@mail.gmail.com>
	<AD3579403BB6481091FD353592899B20@DMITRY>
Message-ID: <5c6ee3b70901022210y713f0a57ve362ce66f47d79e8@mail.gmail.com>

On Sat, Jan 3, 2009 at 12:37 AM, Dmitry Timoshkov <dmitry at codeweavers.com>wrote:

> "Dylan Smith" <dylan.ah.smith at gmail.com> wrote:
>
>  -  SendMessageA(GetParent(hWnd), WM_COMMAND,
>> (nCode<<16)|GetWindowLongW(hWnd, GWLP_ID), (LPARAM)hWnd);
>> +  SendMessageA(GetParent(hWnd), WM_COMMAND, (nCode<<16)|(0xffff &
>> GetWindowLongW(hWnd, GWLP_ID)), (LPARAM)hWnd);
>>
>
> MAKEWPARAM and LOWORD are supposed to be used here.


Alright, I'll change that before resending.


> Also, have you
> tested what happens if real window id is larger than a 16-bit value,
> or just a negative 16-bit one?
>

I was just running the test application provided in Bug 16349 and I found
while debugging that GetWindowLongW(hWnd, GWLP_ID) was returning 0x20034
which is larger than a 16-bit value.  That doesn't seem like a negative
16-bit value.

Besides that I know very little about what this value normally would be, and
don't know how I would test this in the test suite, since this doesn't
always occur (e.g. I got GetWindowLongW(hWnd, GWLP_ID)=0x7d1 when running
wine wordpad).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20090103/3ca29b89/attachment.htm 

From lkcl at lkcl.net  Sat Jan  3 04:18:15 2009
From: lkcl at lkcl.net (Luke Kenneth Casson Leighton)
Date: Sat, 3 Jan 2009 10:18:15 +0000
Subject: question on how to do language bindings to MSHTML's COM interface
In-Reply-To: <1096648c0901021317h13045d6ao28ceb1f5f61098be@mail.gmail.com>
References: <ced5f0f60901010942x92ffa2eo68cdb12e65f36784@mail.gmail.com>
	<1096648c0901021317h13045d6ao28ceb1f5f61098be@mail.gmail.com>
Message-ID: <ced5f0f60901030218k632a3cf9p7bd529c004b5c3bd@mail.gmail.com>

On Fri, Jan 2, 2009 at 9:17 PM, Rob Shearman <robertshearman at gmail.com> wrote:
> 2009/1/1 Luke Kenneth Casson Leighton <lkcl at lkcl.net>:
>> folks, hi,
>> i have a rather intriguing issue i'd like to look at, which takes
>> quite a bit of explaining as to why i'd like to go about it - if
>> people are interested i can answer that, but for now i'll leave it at
>> this:
>> how, under linux, would i go about making an application that made
>> _use_ of MSHTML.DLL's functionality, via its COM / DCE/RPC / MSRPC
>> interface?
>> in other words, if you are familiar with gecko / XUL, how would i go
>> about making a gecko / XUL style of application, using MSHTML as the
>> basis, and, once that was achieved, would it stand a chance of
>> successfully running under vanilla windows, using MS's own version of
>> MSHTML?
>
> There are a number of parts to your question:
> 1. Is it OK for the application to be a winelib one (i.e. invoked via
> or linked to wine, rather than being "native")?

 i'd much prefer native, as then two platforms would be supported
rather than one.

> 2. What language are you writing the application in?

 as little c as possible to get as quickly as possible into python.

> 3. Pretty much all interaction with mshtml happens through COM
> interfaces, so which interfaces are you interested in?

 i don't know (and would appreciate some pointers!) - i can define it
as follows: everything that will give me sufficient complete control
of the DOM such that i can duplicate - 100% - the XUL / Gecko project
- but through MSHTML _not_ XUL / Gecko (i.e. ignore the fact that
mshtml uses XUL / Gecko underneath).

 if you've seen Hulahop, that's what i'm ultimately after - running on
both linux and windows.

 also, if you've seen WebKit, i'm the person who's responsible for
webkit now having glib / gobject bindings to its DOM model, and i also
added python bindings to _those_ bindings, such that pywebkitgtk can
now be used to manipulate the DOM model.

 basically, i want to be able to do platform-independent "scripting"
on top of MSHTML, in exactly the same way that
pywebkitgtk allows platform-independent python scripting on top of
webkit, and in exactly the same way that hulahop allows
platform-independent python scripting on top of Gecko / XUL.

 that's the goal.

>> yes i _am_ fully aware that, underneath, according to the wiki page on
>> mshtml's implementation, mshtml underneath uses Gecko - but i don't
>> _want_ to use the Gecko / XUL interface (mostly because it already
>> exists!  i don't like challenges that have already been done :)
>> specifically, i'd _really_ like to have python bindings to the COM
>> bindings to MSHTML - all under linux.
>> so there are some _really_ weird esoteric "sub-questions" involved, such as:
>> "what are the chances of porting pywin32 - specifically pywin32's COM
>> bindings - to linux, thanks to widl and friends"?
>> see http://sourceforge.net/projects/pywin32
>> many thanks for any advice and information.
>
> We already build a typelib for mshtml using widl and pywin32 can use
> that to make bindings for use at runtime,

 _great_.

> so it "should" work,

 :)

> but I fail to see the need for it at the moment.

 now buried in that statement is a question and a half :)
 as you know, i don't really take on under-ambitious projects ha ha :)



> At some point I'd like to see a Python output generator for widl so
> that it can directly generate Python code that will communicate to a
> remote process using DCE/RPC,

 that would be _fantastic_.  it's something i've wanted to see happen
for about six years.  however, the lessons from my involvement in big
free software projects are that i will do significant work either for
my own personal benefit or if someone pays me money.  i've had enough
people spongeing off of my expertise, time and energy.

 so - if you find anyone who needs python dce/rpc, who's willing to
pay for it, you know where to reach me :)


> but that comes second place to getting
> the C generator as close to perfect as possible at the moment.

 tsk, tsk -  rob, rob, it's been _years_ since wine began the process
of duplicating FreeDCE, a BSD-licensed _freely available_ reference
implementation of DCE/RPC, which took only a few weeks of effort, back
in about 2000/2001, to turn it into MSRPC (adding support for [range]
and other minor details).

 as you're aware, i began the task of porting FreeDCE to win32 back in
2005.  it was successful: however i went a bit too far with the
removal of the dcethreads library (which was done with #define macros)
so that is easily reverted.  ncacn_ip_udp worked absolutely fine, and
without that screw-up, ncacn_ip_tcp would have been working too.  the
issue was, i believe, that removing the posix draft 4 semantics left
some thread-cancellation-blocking semantics (probably on select) that
were suuubtly different from posix final 7 semantics.

anyway.

 you should by now be able to rip out the 70,000 lines of
marshalling/unmarshalling from FreeDCE and drop it into wine: last
time i checked, every single function i looked at, the code that _was_
implemented in wine's DCE/RPC handling was near-identical to the same
lines of code in FreeDCE (except for the
CamelIsAtionOfFunctionAndVariableNames of course).

 that would at least give you a _big_ leap forward.

 l.


From lkcl at lkcl.net  Sat Jan  3 04:46:21 2009
From: lkcl at lkcl.net (Luke Kenneth Casson Leighton)
Date: Sat, 3 Jan 2009 10:46:21 +0000
Subject: question on how to do language bindings to MSHTML's COM interface
In-Reply-To: <1096648c0901021317h13045d6ao28ceb1f5f61098be@mail.gmail.com>
References: <ced5f0f60901010942x92ffa2eo68cdb12e65f36784@mail.gmail.com>
	<1096648c0901021317h13045d6ao28ceb1f5f61098be@mail.gmail.com>
Message-ID: <ced5f0f60901030246w79aa6994wd42f3dd9a8683375@mail.gmail.com>

 quick question: is there any progress on implementing COM, in wine,
or is it necessary to grab dcom98.exe and to find the headers and the
.libs from visual studio?  and have you seen these - IDL files defined
by wez, for DCOM?

http://freedce.cvs.sourceforge.net/viewvc/freedce/freedce/dcom/

l.

p.s. nice to hear from you again, rob :)

p.p.s. below is "background" behind where i'm coming from with the
python mshtml "thing".

>> so there are some _really_ weird esoteric "sub-questions" involved, such as:
>> "what are the chances of porting pywin32 - specifically pywin32's COM
>> bindings - to linux, thanks to widl and friends"?
>> see http://sourceforge.net/projects/pywin32
>> many thanks for any advice and information.
>
> We already build a typelib for mshtml using widl and pywin32 can use
> that to make bindings for use at runtime, so it "should" work, but I
> fail to see the need for it at the moment.

 you have to jump through a series of hoops to get there - being
honest i'm not that good at expressing some of my leaps of
multi-hoop-jumping but i'll try to give some pointers.

1) making python apps that rely on features of the win32 platform
possible under unix as well.  winreg and dcom are two that _really_
spring to mind.

 win32 developers are writing applications that use e.g. the registry.
 i tried compiling pywin32 on linux and _instantly_ ran into a
difficulty: import _winreg.

 so, i would have to go into the python 2.5 / 2.6 tarball and look at
a way of adding --enable-wine=yes and see what happens.

2) "ActiveScripting" of web pages - DOM manipulation through other
programming languages.

this is an _incredibly_ powerful concept that microsoft must have had
for what... ten to fifteen years, and nobody really noticed its
significance?? :)  the reason for _that_ is because the main available
programming languages were utterly dire (Visual Basic).

to give you an idea of how powerful scripted DOM manipulation is, i've
implemented a project called Pyjamas-Desktop - http://pyjd.org.  it's
a Desktop Widget Set UI framework.  thanks to webkit-glib and
pywebkitgtk, is actually _more_ feature-capable than PyQT4 and PyGTK2
put together!

i'd just... _really_ like to see Pyjamas-Desktop be capable of running
on top of MSHTML, on windows.  especially because then it would be
possible to _just_ install python (and pyjd) and, thanks to I.E. being
de-facto already _on_ windows, pyjd would just... _work_.

i wouldn't have to ask people to download a 30mb bundle of GTK.DLL,
CAIRO.DLL, PANGO.DLL, GDK.DLL, WEBKIT.DLL, ICU38.DLL plus supporting
infrastructure.   the "dll hell" burden, for gtk appplications on
win32, is _immense_.

btw whilst i use pyjamas-desktop as an example, anything that has
_remotely_ a subset of the features that pyjd covers would of course
benefit from the same features [that python bindings to mshtml.dll
would bring].  pyjd is a bit of a "path-finder" as it absolutely
_hammers_ the underlying DOM model technology.  [i had enormous
difficulty finding suitable technology: pykde didn't work; pygtk2 was
useless; pyqt4 was only slightly better - in the end i had to go for
webkit.]


From robertshearman at gmail.com  Sat Jan  3 05:43:09 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Sat, 3 Jan 2009 11:43:09 +0000
Subject: kernel32: implement CPU detection for OpenBSD
In-Reply-To: <b6bb06270901021741g2098d7fcg622de6ef6e839e2b@mail.gmail.com>
References: <b6bb06270901021741g2098d7fcg622de6ef6e839e2b@mail.gmail.com>
Message-ID: <1096648c0901030343q1b07aa84r6d1627e6a7912fc@mail.gmail.com>

2009/1/3 Austin English <austinenglish at gmail.com>:
> diff --git a/dlls/kernel32/cpu.c b/dlls/kernel32/cpu.c
> index 63ca277..10a8e87 100644
> --- a/dlls/kernel32/cpu.c
> +++ b/dlls/kernel32/cpu.c
> @@ -544,7 +544,7 @@ VOID WINAPI GetSystemInfo(
>  	}
>  	fclose (f);
>  	}
> -#elif defined (__NetBSD__)
> +#elif defined (__NetBSD__) || defined(__OpenBSD__)
>          {
>               int mib[2];
>               int value[2];

Why not just do something like the following:
#ifdef __OpenBSD___
size_t value[2];
#else
int value[2];
#endif

And then you wouldn't have to ifdef each sysctl call.

> @@ -557,31 +557,55 @@ VOID WINAPI GetSystemInfo(
>  #ifdef CPU_FPU_PRESENT
>               mib[1] = CPU_FPU_PRESENT;
>               value[1] = sizeof(int);
> -             if (sysctl(mib, 2, value, value+1, NULL, 0) >= 0)
> +#ifdef __OpenBSD__
> +             if (sysctl(mib, 2, value, (size_t *)(value+1), NULL, 0) >= 0) {
> +#else
> +             if (sysctl(mib, 2, value, value+1, NULL, 0) >= 0) {
> +#endif
...

-- 
Rob Shearman


From mikolaj at zalewski.pl  Sat Jan  3 05:49:34 2009
From: mikolaj at zalewski.pl (=?ISO-8859-2?Q?Miko=B3aj_Zalewski?=)
Date: Sat, 03 Jan 2009 12:49:34 +0100
Subject: winedbg: add a crash dialog for --auto mode (3rd try)
In-Reply-To: <494EC952.2040000@zalewski.pl>
References: <494EC952.2040000@zalewski.pl>
Message-ID: <495F50CE.3020007@zalewski.pl>

  Is there something wrong with this patch?


From julliard at winehq.org  Sat Jan  3 07:48:56 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Sat, 03 Jan 2009 14:48:56 +0100
Subject: [PATCH 2/3] fusion: Add tests for the IAssemblyEnum interface.
	[try4]
In-Reply-To: <22821af30901021514x56663b15w27effc6ca51ed6de@mail.gmail.com>
	(James Hawkins's message of "Fri, 2 Jan 2009 15:14:57 -0800")
References: <22821af30901021514x56663b15w27effc6ca51ed6de@mail.gmail.com>
Message-ID: <87d4f45wl3.fsf@wine.dyndns.org>

"James Hawkins" <truiken at gmail.com> writes:

> Now handling different ordering of directory listings.

It doesn't work here:

../../../tools/runtest -q -P wine -M fusion.dll -T ../../.. -p fusion_test.exe.so asmenum.c && touch asmenum.ok
asmenum.c:445: Test failed: Expected "wine, Version=1.0.1.2, Culture=neutral, PublicKeyToken=123456789abcdef0", got "wine, Version=1.0.1.2, Culture=neutral, PublicKeyToken=16a3fcd171e93a8d"
asmenum.c:479: Test failed: Expected "Wine, Version=1.0.1.2, Culture=neutral, PublicKeyToken=16a3fcd171e93a8d", got "Wine, Version=1.0.1.2, Culture=neutral, PublicKeyToken=123456789abcdef0"
asmenum.c:492: Test failed: Expected "Wine, Version=1.0.1.2, Culture=neutral, PublicKeyToken=123456789abcdef0", got "Wine, Version=1.0.1.2, Culture=neutral, PublicKeyToken=16a3fcd171e93a8d"
asmenum.c:573: Test failed: Expected "wine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16a3fcd171e93a8d", got "wine, Version=1.0.1.2, Culture=neutral, PublicKeyToken=123456789abcdef0"
asmenum.c:586: Test failed: Expected "wine, Version=1.0.1.2, Culture=neutral, PublicKeyToken=123456789abcdef0" or "wine, Version=1.0.1.2, Culture=neutral, PublicKeyToken=16a3fcd171e93a8d", got "wine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16a3fcd171e93a8d"
make: *** [asmenum.ok] Error 5

-- 
Alexandre Julliard
julliard at winehq.org


From keith.muir at blueyonder.co.uk  Sat Jan  3 08:58:22 2009
From: keith.muir at blueyonder.co.uk (Keith Muir)
Date: Sat, 03 Jan 2009 14:58:22 +0000
Subject: App Database Ratings
Message-ID: <495F7D0E.4050101@blueyonder.co.uk>


Recently read the thread on the poor quality of the ratings but changing 
the wording isn't going to have much of an effect. A properly structured 
questionnaire that then suggests a rating will. The problem with this is 
the amount of work required to overhaul the database in order to do it. 
That said the ratings are instead of being objective, which is what wine 
users and developers want, subjective and nearly useless.



From juan.lang at gmail.com  Sat Jan  3 11:09:57 2009
From: juan.lang at gmail.com (Juan Lang)
Date: Sat, 3 Jan 2009 09:09:57 -0800
Subject: shell32: add explorer toolbar bitmaps
Message-ID: <3a768c550901030909t6352f3a6y5b841f6c50ea2cbe@mail.gmail.com>

> so I just cutted icons from other toolbars' bitmaps;

Which other toolbars, specifically?  You can't grab copyrighted work, you know.
--Juan


From austinenglish at gmail.com  Sat Jan  3 11:11:34 2009
From: austinenglish at gmail.com (Austin English)
Date: Sat, 3 Jan 2009 11:11:34 -0600
Subject: Fwd: [Wine] Look for a Wine Expert to Possibly hire....
In-Reply-To: <1230977897.m2f.17475@forum.winehq.org>
References: <1230977897.m2f.17475@forum.winehq.org>
Message-ID: <b6bb06270901030911n136ad888oe2cc7f9ae5af395b@mail.gmail.com>

For those of you that don't read wine-users:


---------- Forwarded message ----------
From: BaseHead <wineforum-user at winehq.org>
Date: Sat, Jan 3, 2009 at 4:18 AM
Subject: [Wine]  Look for a Wine Expert to Possibly hire....
To: wine-users at winehq.org


Hey all!

We make a Sound FX Database Program called BaseHead for windows.
www.baseheadinc.com

we would love to make it run on OS X and Linux with Wine.
I did already get it up and running via Crossover which I saw is based
on WINE which bought me here.
It runs pretty chunky using Crossover tho.........8(

We are looking to possibly hire someone to make us an all in one
BaseHead/Wine Installer that is optimized to run under OS X and Linux
that is custom for us.

Basically we'd need someone that knows quite a bit about wine to tell
us what will works good and what doesn't and if it's even possible.
AND if we need to change certain coding to make it run better and what
pitfalls to avoid etc....

if anyone one is interested send me an email steve 'AT' baseheadinc 'DOT' com
or go to the site and use the contact forum

thx!!

Steve








-- 
-Austin


From andrey.turkin at gmail.com  Sat Jan  3 11:29:40 2009
From: andrey.turkin at gmail.com (Andrey Turkin)
Date: Sat, 03 Jan 2009 20:29:40 +0300
Subject: shell32: add explorer toolbar bitmaps
In-Reply-To: <3a768c550901030909t6352f3a6y5b841f6c50ea2cbe@mail.gmail.com>
References: <3a768c550901030909t6352f3a6y5b841f6c50ea2cbe@mail.gmail.com>
Message-ID: <495FA084.4080609@gmail.com>

Juan Lang wrote:
>> so I just cutted icons from other toolbars' bitmaps;
>>     
>
> Which other toolbars, specifically?  You can't grab copyrighted work, you know.
> --Juan
>
>   
Yeah, I know. All bitmaps were from Wine itself (comctl32 etc).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20090103/5568e9d0/attachment.htm 

From juan.lang at gmail.com  Sat Jan  3 11:36:38 2009
From: juan.lang at gmail.com (Juan Lang)
Date: Sat, 3 Jan 2009 09:36:38 -0800
Subject: shell32: add explorer toolbar bitmaps
In-Reply-To: <495FA084.4080609@gmail.com>
References: <3a768c550901030909t6352f3a6y5b841f6c50ea2cbe@mail.gmail.com>
	<495FA084.4080609@gmail.com>
Message-ID: <3a768c550901030936s52c3c926j256e0d576542650f@mail.gmail.com>

> Yeah, I know. All bitmaps were from Wine itself (comctl32 etc).

Thanks :)
--Juan


From wine-devel at continuity.cjb.net  Sat Jan  3 11:41:00 2009
From: wine-devel at continuity.cjb.net (M.Kiesel)
Date: Sat, 3 Jan 2009 18:41:00 +0100 (CET)
Subject: App Database Ratings
In-Reply-To: <495F7D0E.4050101@blueyonder.co.uk>
References: <495F7D0E.4050101@blueyonder.co.uk>
Message-ID: <alpine.DEB.1.10.0901031815210.25576@bluebox.conspiracy.net>

On Sat, 3 Jan 2009, Keith Muir wrote:

> Recently read the thread on the poor quality of the ratings but changing
> the wording isn't going to have much of an effect. A properly structured
> questionnaire that then suggests a rating will.

Something like a simple rule-based system (platinum = 
no_special_winecfg_settings && no_dll_overrides && ...) would probably not 
be a bad idea, yes. Then again, some subjectivity is perhaps not a bad 
idea, especially in case people start to give wrong information because 
the suggested rating doesn't match their expectations (for example, 
strictly speaking Prince of Persia SoT is Silver due to two very minor 
problems you only notice if you look hard while I bet for most people it's 
platinum currently). So the submitter should be able to adjust the overall 
rating manually in any case. (side note: A better visualization of the 
ratings would be cool - thumbs up/thumbs down etc. - as the "colors" used 
currently are far from optimal)

Additionally, showing some kind of skeleton for new ratings (putting some 
text into the now empty text fields when adding new test data) might be 
good. Since currently the structure is "what works/what does not work" 
first, this is difficult though. Using some aspect-driven structure 
(installer/video/audio/network/etc.) with works/does not work for each 
aspect might be better. Have to think about that a bit more though.

Also being able to update/reply to test data would be cool. I'm afraid all 
this points to using a wiki instead of a database really. ;-)

> The problem with this is the amount of work required to overhaul the 
> database in order to do it.

I don't see why old ratings couldn't just be kept...?

> That said the ratings are instead of being objective, which is what wine
> users and developers want, subjective and nearly useless.

While for statistical purposes AppDB is of limited use currently, for 
users it *is* very useful I think - however, reading through (multiple) 
AppDB ratings, howtos, bug reports, and comments per application is quite 
time consuming. Perhaps using a wiki-like approach at least for ratings, 
howtos, and links to bugs would be better. Probably not too easy to 
implement though ;-).

Regards


From austinenglish at gmail.com  Sat Jan  3 11:43:13 2009
From: austinenglish at gmail.com (Austin English)
Date: Sat, 3 Jan 2009 11:43:13 -0600
Subject: kernel32: implement CPU detection for OpenBSD
In-Reply-To: <1096648c0901030343q1b07aa84r6d1627e6a7912fc@mail.gmail.com>
References: <b6bb06270901021741g2098d7fcg622de6ef6e839e2b@mail.gmail.com>
	<1096648c0901030343q1b07aa84r6d1627e6a7912fc@mail.gmail.com>
Message-ID: <b6bb06270901030943m39ef57a7h4fcb415ce7045780@mail.gmail.com>

On Sat, Jan 3, 2009 at 5:43 AM, Rob Shearman <robertshearman at gmail.com> wrote:
> 2009/1/3 Austin English <austinenglish at gmail.com>:
>> diff --git a/dlls/kernel32/cpu.c b/dlls/kernel32/cpu.c
>> index 63ca277..10a8e87 100644
>> --- a/dlls/kernel32/cpu.c
>> +++ b/dlls/kernel32/cpu.c
>> @@ -544,7 +544,7 @@ VOID WINAPI GetSystemInfo(
>>       }
>>       fclose (f);
>>       }
>> -#elif defined (__NetBSD__)
>> +#elif defined (__NetBSD__) || defined(__OpenBSD__)
>>          {
>>               int mib[2];
>>               int value[2];
>
> Why not just do something like the following:
> #ifdef __OpenBSD___
> size_t value[2];
> #else
> int value[2];
> #endif
>
> And then you wouldn't have to ifdef each sysctl call.
>
>> @@ -557,31 +557,55 @@ VOID WINAPI GetSystemInfo(
>>  #ifdef CPU_FPU_PRESENT
>>               mib[1] = CPU_FPU_PRESENT;
>>               value[1] = sizeof(int);
>> -             if (sysctl(mib, 2, value, value+1, NULL, 0) >= 0)
>> +#ifdef __OpenBSD__
>> +             if (sysctl(mib, 2, value, (size_t *)(value+1), NULL, 0) >= 0) {
>> +#else
>> +             if (sysctl(mib, 2, value, value+1, NULL, 0) >= 0) {
>> +#endif
> ...
>
> --
> Rob Shearman
>

Good catch! It was late and I was working on getting patches from
their port in upstream. I'll work on a new one.

-- 
-Austin


From dank at kegel.com  Sat Jan  3 12:11:23 2009
From: dank at kegel.com (Dan Kegel)
Date: Sat, 3 Jan 2009 10:11:23 -0800
Subject: Packagers: consider not packaging wine-1.1.12, or cherrypicking fixes
Message-ID: <a71bd89a0901031011n7b1e1831q429290d90edd4c55@mail.gmail.com>

wine-1.1.12 has a couple regressions in it:
http://bugs.winehq.org/show_bug.cgi?id=16754
http://bugs.winehq.org/show_bug.cgi?id=16732
http://bugs.winehq.org/show_bug.cgi?id=16708

Please consider either cherrypicking the fixes,
or skipping wine-1.1.12.


From marcus at jet.franken.de  Sat Jan  3 12:35:38 2009
From: marcus at jet.franken.de (Marcus Meissner)
Date: Sat, 3 Jan 2009 19:35:38 +0100
Subject: Packagers: consider not packaging wine-1.1.12, or
	cherrypicking fixes
In-Reply-To: <a71bd89a0901031011n7b1e1831q429290d90edd4c55@mail.gmail.com>
References: <a71bd89a0901031011n7b1e1831q429290d90edd4c55@mail.gmail.com>
Message-ID: <20090103183538.GA22386@galeere.jet.franken.de>

On Sat, Jan 03, 2009 at 10:11:23AM -0800, Dan Kegel wrote:
> wine-1.1.12 has a couple regressions in it:
> http://bugs.winehq.org/show_bug.cgi?id=16754
> http://bugs.winehq.org/show_bug.cgi?id=16732
> http://bugs.winehq.org/show_bug.cgi?id=16708
> 
> Please consider either cherrypicking the fixes,
> or skipping wine-1.1.12.

I picked two fixes now, the third bug seems to be a dup of
the debugger fix.

d2c4ff23057c38547434d893272afd3e4e8a2b45
9087e5c55f35e091c5cb9ba381e0a5020d1fc0ad

openSUSE 1.1.12 builds rebuilding right as we speak ;)

Ciao, Marcus


From marcus at jet.franken.de  Sat Jan  3 13:02:41 2009
From: marcus at jet.franken.de (Marcus Meissner)
Date: Sat, 3 Jan 2009 20:02:41 +0100
Subject: Build wine with gcc-4.3 and ssp
In-Reply-To: <42853.88.66.124.205.1231008730.squirrel@darbo.grandnagus.de>
References: <42853.88.66.124.205.1231008730.squirrel@darbo.grandnagus.de>
Message-ID: <20090103190241.GB22386@galeere.jet.franken.de>

On Sat, Jan 03, 2009 at 07:52:10PM +0100, Stefan Reimer wrote:
> > On Fri, Jan 02, 2009 at 11:14:52PM +0100, Stefan Reimer wrote:
> I am using gentoo hardened:
> 
> gcc (Gentoo Hardened 4.3.2-r7 p1.5, ssp, fortify, pie-10.2.0) 4.3.2 glibc 2.8
> 
> Using gcc -v gives:
> 
>  /usr/libexec/gcc/x86_64-pc-linux-gnu/4.3.2/cc1 -quiet -v -I. -I.
> -I../include -I../include -imultilib 32 preloader.c -D_FORTIFY_SOURCE=2
> -fPIE -fstack-protector -fstack-protector-all -fno-strict-overflow -quiet
> -dumpbase preloader.c -m32 -march=athlon64 -auxbase-strip preloader.o -O2
> -Wall -Wdeclaration-after-statement -Wwrite-strings -Wtype-limits
> -Wpointer-arith -version -fno-strict-aliasing -o - |
> /usr/lib/gcc/x86_64-pc-linux-gnu/4.3.2/../../../../x86_64-pc-linux-gnu/bin/as
> -V -Qy --32 -o preloader.o -
> 
> The hardened gcc specs brings in -fPIE, which is similiar to -fPIC.
> 
> So YES I do ;-)
> 
> Is this a problem ?

-fPIE is a bit useless for the preloader (wine-preloader is actually loaded at a fixed
address), but it should not fail to build I guess.

Does Wine still work afterwards?

I don't see the patch hurting anything though.

Ciao, Marcus


From patrol at sinus.cz  Sat Jan  3 13:36:07 2009
From: patrol at sinus.cz (Pavel Troller)
Date: Sat, 3 Jan 2009 20:36:07 +0100
Subject: [PATCH] Compile fix on Linux 2.6.28 / x86
Message-ID: <20090103193607.GA8405@tangens.sinus.cz>

Hi!
  Due to changes in Linux kernel include file structure, the following patch
is necessary to compile wine with the 2.6.28 kernel:

--- wine/dlls/ntdll/serial.c.old	2009-01-03 19:31:17.000000000 +0100
+++ wine/dlls/ntdll/serial.c	2009-01-03 20:31:11.000000000 +0100
@@ -74,6 +74,10 @@
 #include "wine/debug.h"
 
 #ifdef HAVE_LINUX_SERIAL_H
+#include <linux/version.h>
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
+#include <asm/types.h>
+#endif
 #include <linux/serial.h>
 #endif

  With regards, Pavel Troller


From austinenglish at gmail.com  Sat Jan  3 13:39:18 2009
From: austinenglish at gmail.com (Austin English)
Date: Sat, 3 Jan 2009 13:39:18 -0600
Subject: [PATCH] Compile fix on Linux 2.6.28 / x86
In-Reply-To: <20090103193607.GA8405@tangens.sinus.cz>
References: <20090103193607.GA8405@tangens.sinus.cz>
Message-ID: <b6bb06270901031139u5d10ec6bvef0ae20fa6e03f83@mail.gmail.com>

On Sat, Jan 3, 2009 at 1:36 PM, Pavel Troller <patrol at sinus.cz> wrote:
> Hi!
>  Due to changes in Linux kernel include file structure, the following patch
> is necessary to compile wine with the 2.6.28 kernel:
>
> --- wine/dlls/ntdll/serial.c.old        2009-01-03 19:31:17.000000000 +0100
> +++ wine/dlls/ntdll/serial.c    2009-01-03 20:31:11.000000000 +0100
> @@ -74,6 +74,10 @@
>  #include "wine/debug.h"
>
>  #ifdef HAVE_LINUX_SERIAL_H
> +#include <linux/version.h>
> +#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
> +#include <asm/types.h>
> +#endif
>  #include <linux/serial.h>
>  #endif
>
>  With regards, Pavel Troller
>
>
>

Patches should be sent to wine-patches at winehq.org.

-- 
-Austin


From marcus at jet.franken.de  Sat Jan  3 13:42:02 2009
From: marcus at jet.franken.de (Marcus Meissner)
Date: Sat, 3 Jan 2009 20:42:02 +0100
Subject: [PATCH] Compile fix on Linux 2.6.28 / x86
In-Reply-To: <20090103193607.GA8405@tangens.sinus.cz>
References: <20090103193607.GA8405@tangens.sinus.cz>
Message-ID: <20090103194202.GC22386@galeere.jet.franken.de>

On Sat, Jan 03, 2009 at 08:36:07PM +0100, Pavel Troller wrote:
> Hi!
>   Due to changes in Linux kernel include file structure, the following patch
> is necessary to compile wine with the 2.6.28 kernel:
> 
> --- wine/dlls/ntdll/serial.c.old	2009-01-03 19:31:17.000000000 +0100
> +++ wine/dlls/ntdll/serial.c	2009-01-03 20:31:11.000000000 +0100
> @@ -74,6 +74,10 @@
>  #include "wine/debug.h"
>  
>  #ifdef HAVE_LINUX_SERIAL_H
> +#include <linux/version.h>
> +#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
> +#include <asm/types.h>
> +#endif
>  #include <linux/serial.h>
>  #endif

Better use #ifdef HAVE_ASM_TYPES_H here, its already been tested for.

Ciao, Marcus


From patrol at sinus.cz  Sat Jan  3 13:47:02 2009
From: patrol at sinus.cz (Pavel Troller)
Date: Sat, 3 Jan 2009 20:47:02 +0100
Subject: [PATCH] Compile fix on Linux 2.6.28 / x86
In-Reply-To: <20090103194202.GC22386@galeere.jet.franken.de>
References: <20090103193607.GA8405@tangens.sinus.cz>
	<20090103194202.GC22386@galeere.jet.franken.de>
Message-ID: <20090103194702.GA9309@tangens.sinus.cz>

> On Sat, Jan 03, 2009 at 08:36:07PM +0100, Pavel Troller wrote:
> > Hi!
> >   Due to changes in Linux kernel include file structure, the following patch
> > is necessary to compile wine with the 2.6.28 kernel:
> > 
> > --- wine/dlls/ntdll/serial.c.old	2009-01-03 19:31:17.000000000 +0100
> > +++ wine/dlls/ntdll/serial.c	2009-01-03 20:31:11.000000000 +0100
> > @@ -74,6 +74,10 @@
> >  #include "wine/debug.h"
> >  
> >  #ifdef HAVE_LINUX_SERIAL_H
> > +#include <linux/version.h>
> > +#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
> > +#include <asm/types.h>
> > +#endif
> >  #include <linux/serial.h>
> >  #endif
> 
> Better use #ifdef HAVE_ASM_TYPES_H here, its already been tested for.
> 
> Ciao, Marcus
> 
OK, redone and resent to wine-patches.
  With regards, Pavel Troller


From lkcl at lkcl.net  Sat Jan  3 14:15:03 2009
From: lkcl at lkcl.net (Luke Kenneth Casson Leighton)
Date: Sat, 3 Jan 2009 20:15:03 +0000
Subject: question on how to do language bindings to MSHTML's COM interface
In-Reply-To: <1096648c0901021317h13045d6ao28ceb1f5f61098be@mail.gmail.com>
References: <ced5f0f60901010942x92ffa2eo68cdb12e65f36784@mail.gmail.com>
	<1096648c0901021317h13045d6ao28ceb1f5f61098be@mail.gmail.com>
Message-ID: <ced5f0f60901031215i53f72d2aq359c674d64658eb@mail.gmail.com>

> There are a number of parts to your question:
> 1. Is it OK for the application to be a winelib one (i.e. invoked via
> or linked to wine, rather than being "native")?

i'm on the first step - getting python compiled. so i'm in the middle
of an experiment to compile python with wine, and it looks like i
_have_ to make it an "invoked via wine" one.  in fact, stunningly,
that actually succeeded!  using winegcc, a script called python and a
dll called python.exe.so were created.  of course, make install only
copied over the script not the .so duh.

the mistake i've made however is in not compiling with -DMS_WINDOWS.
the issue that i have is that there _is_ no Makefile or Makefile.in
for win32 python, there _is_ no configure script: it's all damn well
done with visual studio .proj files on a hard-coded basis argh.

i had the same difficulty i ran into when cross-compiling with a
mingw32 cross-compiler.

anyway - the first step is going reasonably well.  i'm running into a
bit of bother with python modules (.so extension) - i'll have to
investigate the .proj files a bit more because the only things being
built are _winreg.o, _md5.o and _not_ _winreg.so or _winreg.dll or
wine equivalent.  whoops.

but - this is the first step.  the next step would be to, i assume,
add mshtml as a module?  or perhaps see if someone's already done it,
somewhere, with windows.


From thunderbird2k at gmx.net  Sat Jan  3 16:43:00 2009
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Sat, 03 Jan 2009 23:43:00 +0100
Subject: shell32: add explorer toolbar bitmaps
In-Reply-To: <495FA084.4080609@gmail.com>
References: <3a768c550901030909t6352f3a6y5b841f6c50ea2cbe@mail.gmail.com>
	<495FA084.4080609@gmail.com>
Message-ID: <20090103224300.186660@gmx.net>

> Juan Lang wrote:
> >> so I just cutted icons from other toolbars' bitmaps;
> >>     
> >
> > Which other toolbars, specifically?  You can't grab copyrighted work,
> you know.
> > --Juan
> >
> >   
> Yeah, I know. All bitmaps were from Wine itself (comctl32 etc).

Why not use icons from the tango project? As I mentioned recently in a thread we (if we contact them) should be able to use icons from their project. The icons look very nice and can make wine look a lot better. Personally I don't like the current icons.

Roderick
-- 
Sensationsangebot verl?ngert: GMX FreeDSL - Telefonanschluss + DSL 
f?r nur 16,37 Euro/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K1308T4569a


From andrey.turkin at gmail.com  Sat Jan  3 17:07:06 2009
From: andrey.turkin at gmail.com (Andrey Turkin)
Date: Sun, 04 Jan 2009 02:07:06 +0300
Subject: shell32: add explorer toolbar bitmaps
In-Reply-To: <20090103224300.186660@gmx.net>
References: <3a768c550901030909t6352f3a6y5b841f6c50ea2cbe@mail.gmail.com>
	<495FA084.4080609@gmail.com> <20090103224300.186660@gmx.net>
Message-ID: <495FEF9A.6070106@gmail.com>

Roderick Colenbrander wrote:
>> Juan Lang wrote:
>>     
>>>> so I just cutted icons from other toolbars' bitmaps;
>>>>     
>>>>         
>>> Which other toolbars, specifically?  You can't grab copyrighted work,
>>>       
>> you know.
>>     
>>> --Juan
>>>
>>>   
>>>       
>> Yeah, I know. All bitmaps were from Wine itself (comctl32 etc).
>>     
>
> Why not use icons from the tango project? As I mentioned recently in a thread we (if we contact them) should be able to use icons from their project. The icons look very nice and can make wine look a lot better. Personally I don't like the current icons.
>
> Roderick
>   

I _love_ this idea, and icons look very nice, but here can be some legal
troubles. The icons are under Creative Commons - Share Alike 2.5
license. I'm not a lawyer and not sure if using (probably modified)
icons would be considered as "share alike" condition - they say "alter,
transform or build upon", but probably authors intent was that icons
must stay under CC Share-Alike license. See e.g.
http://lists.freedesktop.org/archives/tango-artists/2006-September/000681.html
. These "wars" between open source licenses make me sick.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20090104/ba291bb9/attachment.htm 

From truiken at gmail.com  Sat Jan  3 17:12:50 2009
From: truiken at gmail.com (James Hawkins)
Date: Sat, 3 Jan 2009 15:12:50 -0800
Subject: shell32: add explorer toolbar bitmaps
In-Reply-To: <495FEF9A.6070106@gmail.com>
References: <3a768c550901030909t6352f3a6y5b841f6c50ea2cbe@mail.gmail.com>
	<495FA084.4080609@gmail.com> <20090103224300.186660@gmx.net>
	<495FEF9A.6070106@gmail.com>
Message-ID: <22821af30901031512t27cc31edh20a57fdac743f44f@mail.gmail.com>

On Sat, Jan 3, 2009 at 3:07 PM, Andrey Turkin <andrey.turkin at gmail.com> wrote:
>
> I _love_ this idea, and icons look very nice, but here can be some legal
> troubles. The icons are under Creative Commons - Share Alike 2.5 license.
> I'm not a lawyer and not sure if using (probably modified) icons would be
> considered as "share alike" condition - they say "alter, transform or build
> upon", but probably authors intent was that icons must stay under CC
> Share-Alike license. See e.g.
> http://lists.freedesktop.org/archives/tango-artists/2006-September/000681.html
> . These "wars" between open source licenses make me sick.
>

http://winehq.org/pipermail/wine-devel/2008-December/071145.html

-- 
James Hawkins


From austinenglish at gmail.com  Sat Jan  3 17:13:46 2009
From: austinenglish at gmail.com (Austin English)
Date: Sat, 3 Jan 2009 17:13:46 -0600
Subject: shell32: add explorer toolbar bitmaps
In-Reply-To: <495FEF9A.6070106@gmail.com>
References: <3a768c550901030909t6352f3a6y5b841f6c50ea2cbe@mail.gmail.com>
	<495FA084.4080609@gmail.com> <20090103224300.186660@gmx.net>
	<495FEF9A.6070106@gmail.com>
Message-ID: <b6bb06270901031513m6b43c09dn1e6b126fd3d84a87@mail.gmail.com>

On Sat, Jan 3, 2009 at 5:07 PM, Andrey Turkin <andrey.turkin at gmail.com> wrote:
> Roderick Colenbrander wrote:
>
> Juan Lang wrote:
>
>
> so I just cutted icons from other toolbars' bitmaps;
>
>
>
> Which other toolbars, specifically?  You can't grab copyrighted work,
>
>
> you know.
>
>
> --Juan
>
>
>
>
> Yeah, I know. All bitmaps were from Wine itself (comctl32 etc).
>
>
> Why not use icons from the tango project? As I mentioned recently in a
> thread we (if we contact them) should be able to use icons from their
> project. The icons look very nice and can make wine look a lot better.
> Personally I don't like the current icons.
>
> Roderick
>
>
> I _love_ this idea, and icons look very nice, but here can be some legal
> troubles. The icons are under Creative Commons - Share Alike 2.5 license.
> I'm not a lawyer and not sure if using (probably modified) icons would be
> considered as "share alike" condition - they say "alter, transform or build
> upon", but probably authors intent was that icons must stay under CC
> Share-Alike license. See e.g.
> http://lists.freedesktop.org/archives/tango-artists/2006-September/000681.html
> . These "wars" between open source licenses make me sick.
>
>
>
>

Roderick asked them a while back, and they're willing to relicense
them under LGPL for wine use:
http://www.nabble.com/Re-:-RFC:-Wine-Icons-td20943769.html

-- 
-Austin


From andrey.turkin at gmail.com  Sat Jan  3 17:19:35 2009
From: andrey.turkin at gmail.com (Andrey Turkin)
Date: Sun, 04 Jan 2009 02:19:35 +0300
Subject: shell32: add explorer toolbar bitmaps
In-Reply-To: <22821af30901031512t27cc31edh20a57fdac743f44f@mail.gmail.com>
References: <3a768c550901030909t6352f3a6y5b841f6c50ea2cbe@mail.gmail.com>	
	<495FA084.4080609@gmail.com> <20090103224300.186660@gmx.net>	
	<495FEF9A.6070106@gmail.com>
	<22821af30901031512t27cc31edh20a57fdac743f44f@mail.gmail.com>
Message-ID: <495FF287.8080900@gmail.com>

James Hawkins wrote:
> On Sat, Jan 3, 2009 at 3:07 PM, Andrey Turkin <andrey.turkin at gmail.com> wrote:
>   
>> I _love_ this idea, and icons look very nice, but here can be some legal
>> troubles. The icons are under Creative Commons - Share Alike 2.5 license.
>> I'm not a lawyer and not sure if using (probably modified) icons would be
>> considered as "share alike" condition - they say "alter, transform or build
>> upon", but probably authors intent was that icons must stay under CC
>> Share-Alike license. See e.g.
>> http://lists.freedesktop.org/archives/tango-artists/2006-September/000681.html
>> . These "wars" between open source licenses make me sick.
>>
>>     
>
> http://winehq.org/pipermail/wine-devel/2008-December/071145.html
>
>   
That's great! Once they switch the license we definitely should use Tango.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20090104/0ba6db22/attachment.htm 

From austinenglish at gmail.com  Sat Jan  3 17:24:10 2009
From: austinenglish at gmail.com (Austin English)
Date: Sat, 3 Jan 2009 17:24:10 -0600
Subject: shell32: add explorer toolbar bitmaps
In-Reply-To: <495FF287.8080900@gmail.com>
References: <3a768c550901030909t6352f3a6y5b841f6c50ea2cbe@mail.gmail.com>
	<495FA084.4080609@gmail.com> <20090103224300.186660@gmx.net>
	<495FEF9A.6070106@gmail.com>
	<22821af30901031512t27cc31edh20a57fdac743f44f@mail.gmail.com>
	<495FF287.8080900@gmail.com>
Message-ID: <b6bb06270901031524n18bc9115o15214cbb2475cbc2@mail.gmail.com>

On Sat, Jan 3, 2009 at 5:19 PM, Andrey Turkin <andrey.turkin at gmail.com> wrote:
> James Hawkins wrote:
>
> On Sat, Jan 3, 2009 at 3:07 PM, Andrey Turkin <andrey.turkin at gmail.com>
> wrote:
>
>
> I _love_ this idea, and icons look very nice, but here can be some legal
> troubles. The icons are under Creative Commons - Share Alike 2.5 license.
> I'm not a lawyer and not sure if using (probably modified) icons would be
> considered as "share alike" condition - they say "alter, transform or build
> upon", but probably authors intent was that icons must stay under CC
> Share-Alike license. See e.g.
> http://lists.freedesktop.org/archives/tango-artists/2006-September/000681.html
> . These "wars" between open source licenses make me sick.
>
>
>
> http://winehq.org/pipermail/wine-devel/2008-December/071145.html
>
>
>
> That's great! Once they switch the license we definitely should use Tango.
>
>
>
>

You could still ask them to relicense the particular icons we need in
the meantime.

-- 
-Austin


From me at stefanreimer.de  Fri Jan  2 17:26:49 2009
From: me at stefanreimer.de (Stefan Reimer)
Date: Sat, 3 Jan 2009 00:26:49 +0100 (CET)
Subject: Build wine with gcc-4.3 and ssp
In-Reply-To: <20090102222900.GC28483@galeere.jet.franken.de>
References: <50952.88.66.121.243.1230934492.squirrel@darbo.grandnagus.de>
	<20090102222900.GC28483@galeere.jet.franken.de>
Message-ID: <44311.88.66.121.243.1230938809.squirrel@darbo.grandnagus.de>

> On Fri, Jan 02, 2009 at 11:14:52PM +0100, Stefan Reimer wrote:
>> Hi,
>> to build wine using gcc 4.3 with enabled ssp (stack-smashing-protector)
>> the following patch must be applied to loader/preloader.c
>>
>> see gcc source ./gcc/config/i386/i386.c around line 24391
>>
>> /* For 32-bit code we can save PIC register setup by using
>>    __stack_chk_fail_local hidden function instead of calling
>>    __stack_chk_fail directly.  64-bit code doesn't need to setup any PIC
>> register, so it is better to call __stack_chk_fail directly.  */
>>
>> Patch:
>>
>> diff --git a/loader/preloader.c b/loader/preloader.c
>> index 5fcb974..1143972 100644
>> --- a/loader/preloader.c
>> +++ b/loader/preloader.c
>> @@ -163,6 +163,7 @@ void __bb_init_func(void) { return; }
>>
>>  /* similar to the above but for -fstack-protector */
>>  void *__stack_chk_guard = 0;
>> +void __stack_chk_fail_local(void) { return; }
>>  void __stack_chk_fail(void) { return; }
>>
>>  /* data for setting up the glibc-style thread-local storage in %gs */
>
> Hmm,
>
> why does this work for me on openSUSE then?
>
> The line:
> gcc -c -I. -I. -I../include -I../include    -Wall -pipe
> -fno-strict-aliasing -Wdeclaration-after-statement -Wwrite-strings -W
> type-limits -Wpointer-arith  -march=i586 -mtune=i686 -fmessage-length=0
> -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funw
> ind-tables -fasynchronous-unwind-tables -g  -o preloader.o preloader.c
>
> works fine here. Are you passing in -fPIC?
>
> Ciao, marcus
>

Hi,
I am using gentoo hardened:

gcc (Gentoo Hardened 4.3.2-r7 p1.5, ssp, fortify, pie-10.2.0) 4.3.2
glibc 2.8

Using gcc -v gives:

 /usr/libexec/gcc/x86_64-pc-linux-gnu/4.3.2/cc1 -quiet -v -I. -I.
-I../include -I../include -imultilib 32 preloader.c -D_FORTIFY_SOURCE=2
-fPIE -fstack-protector -fstack-protector-all -fno-strict-overflow -quiet
-dumpbase preloader.c -m32 -march=athlon64 -auxbase-strip preloader.o -O2
-Wall -Wdeclaration-after-statement -Wwrite-strings -Wtype-limits
-Wpointer-arith -version -fno-strict-aliasing -o - |
/usr/lib/gcc/x86_64-pc-linux-gnu/4.3.2/../../../../x86_64-pc-linux-gnu/bin/as
-V -Qy --32 -o preloader.o -

The hardened gcc specs brings in -fPIE, which is similiar to -fPIC.

So YES I do ;-)

Is this a problem ?

Cyas
Stefan





From arrenlex at gmail.com  Fri Jan  2 18:01:18 2009
From: arrenlex at gmail.com (Arren Lex)
Date: Fri, 2 Jan 2009 17:01:18 -0700
Subject: Patch implementing riched20 : EM_PASTESPECIAL -- critique?
Message-ID: <87855ac60901021601r15533511qc599a4555c1c0e16@mail.gmail.com>

Hello, all;

Attached is a patch that implements the EM_PASTESPECIAL riched20
message, which pastes with a specified clipboard format --
http://msdn.microsoft.com/en-us/library/bb774214(VS.85).aspx

Because there is (apparently) no ANSI clipboard implemented, the
CF_TEXT clipboard format pastes garbage, so I have put in a workaround
which treats a CF_TEXT as a CF_UNICODETEXT call. It prints a fixme
when it does this, and when the ANSI clipboard is implemented the "if"
block can simply be taken out to start using it.

This patch was written to fix bug 14530 --
http://bugs.winehq.org/show_bug.cgi?id=14530

It is made against git commit bf25837eb7c08dc7faf13b886f6aed79a02506b8
(the tagging of 1.1.12) which is the latest at the time of writing.

This is my first ever patch, and I am not familiar with wine or
riched20 at all, so I would love to have some feedback about it before
I submit it to the patches list. Can anyone suggest improvements?

Thank you,
- Alexander Dorokhine
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: pastespecial-fix.patch.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20090102/fcd8168a/attachment-0001.txt 

From wineappdb at googlemail.com  Sat Jan  3 00:34:09 2009
From: wineappdb at googlemail.com (IneedAname)
Date: Sat, 3 Jan 2009 06:34:09 +0000
Subject: install-wine-deps.sh can now handle 32 bit wine on 64 bit systems
In-Reply-To: <a71bd89a0901021623m379ea929q6524e3f7059f8814@mail.gmail.com>
References: <a71bd89a0901021623m379ea929q6524e3f7059f8814@mail.gmail.com>
Message-ID: <20090103063409.54d74fc1@test-main>

On Fri, 2 Jan 2009 16:23:52 -0800
"Dan Kegel" <dank at kegel.com> wrote:

>   ./configure --target=i686-unknown-gnu-linux
What does that do? It's not listed in "./configure --help".
For building 64bit wine I have to pass "--enable-win64".
32bit wine builds with just "make".
I am running Ubuntu 8.04 with an AMD64 processor, I have done all the linking in /lib32 myself.


From luke.leighton at googlemail.com  Sat Jan  3 06:38:45 2009
From: luke.leighton at googlemail.com (Luke Kenneth Casson Leighton)
Date: Sat, 3 Jan 2009 12:38:45 +0000
Subject: libwine.so "incompatible"???
Message-ID: <ced5f0f60901030438t6fd9bc78s8aa40774cb3626f8@mail.gmail.com>

rob, anyone - any ideas?

                gcc -pthread -shared -o libpython2.5.so
Modules/_typesmodule.o Modules/getbuildinfo.o Parser/acceler.o
Parser/grammar1.o Parser/listnode.o Parser/node.o Parser/parser.o
Parser/parsetok.o Parser/bitset.o Parser/metagrammar.o
Parser/firstsets.o Parser/grammar.o Parser/pgen.o Parser/myreadline.o
Parser/tokenizer.o Objects/abstract.o Objects/boolobject.o
Objects/bufferobject.o Objects/cellobject.o Objects/classobject.o
Objects/cobject.o Objects/codeobject.o Objects/complexobject.o
Objects/descrobject.o Objects/enumobject.o Objects/exceptions.o
Objects/genobject.o Objects/fileobject.o Objects/floatobject.o
Objects/frameobject.o Objects/funcobject.o Objects/intobject.o
Objects/iterobject.o Objects/listobject.o Objects/longobject.o
Objects/dictobject.o Objects/methodobject.o Objects/moduleobject.o
Objects/object.o Objects/obmalloc.o Objects/rangeobject.o
Objects/setobject.o Objects/sliceobject.o Objects/stringobject.o
Objects/structseq.o Objects/tupleobject.o Objects/typeobject.o
Objects/weakrefobject.o Objects/unicodeobject.o Objects/unicodectype.o
Python/Python-ast.o Python/asdl.o Python/ast.o Python/bltinmodule.o
Python/ceval.o Python/compile.o Python/codecs.o Python/errors.o
Python/frozen.o Python/frozenmain.o Python/future.o Python/getargs.o
Python/getcompiler.o Python/getcopyright.o Python/getmtime.o
Python/getplatform.o Python/getversion.o Python/graminit.o
Python/import.o Python/importdl.o Python/marshal.o Python/modsupport.o
Python/mystrtoul.o Python/mysnprintf.o Python/pyarena.o Python/pyfpe.o
Python/pystate.o Python/pythonrun.o Python/structmember.o
Python/symtable.o Python/sysmodule.o Python/traceback.o
Python/getopt.o Python/pystrtod.o Python/dynload_shlib.o
Python/thread.o Modules/config.o Modules/getpath.o Modules/main.o
Modules/gcmodule.o  Modules/threadmodule.o  Modules/signalmodule.o
Modules/posixmodule.o  Modules/errnomodule.o  Modules/pwdmodule.o
Modules/_sre.o  Modules/_codecsmodule.o  Modules/zipimport.o
Modules/symtablemodule.o  Modules/xxsubtype.o -lpthread -ldl  -lutil
-lwine -lm; \
        fi
/usr/bin/ld: skipping incompatible
/usr/lib/gcc/x86_64-linux-gnu/4.3.2/../../../../lib/libwine.so when
searching for -lwine
/usr/bin/ld: skipping incompatible /usr/lib/../lib/libwine.so when
searching for -lwine
/usr/bin/ld: skipping incompatible
/usr/lib/gcc/x86_64-linux-gnu/4.3.2/../../../libwine.so when searching
for -lwine
/usr/bin/ld: skipping incompatible /usr/bin/../lib/libwine.so when
searching for -lwine
/usr/bin/ld: skipping incompatible /usr/lib64/libwine.so when
searching for -lwine
/usr/bin/ld: skipping incompatible /usr/lib/libwine.so when searching for -lwine
/usr/bin/ld: cannot find -lwine
collect2: ld returned 1 exit status


From luke.leighton at googlemail.com  Sat Jan  3 06:40:09 2009
From: luke.leighton at googlemail.com (Luke Kenneth Casson Leighton)
Date: Sat, 3 Jan 2009 12:40:09 +0000
Subject: libwine.so "incompatible"???
In-Reply-To: <ced5f0f60901030438t6fd9bc78s8aa40774cb3626f8@mail.gmail.com>
References: <ced5f0f60901030438t6fd9bc78s8aa40774cb3626f8@mail.gmail.com>
Message-ID: <ced5f0f60901030440o46362ab9id125f9acd482704a@mail.gmail.com>

http://www.winehq.org/pipermail/wine-devel/2007-January/053744.html

hold that thought.... :)

On Sat, Jan 3, 2009 at 12:38 PM, Luke Kenneth Casson Leighton
<luke.leighton at googlemail.com> wrote:
> rob, anyone - any ideas?
>
>                gcc -pthread -shared -o libpython2.5.so
> Modules/_typesmodule.o Modules/getbuildinfo.o Parser/acceler.o
> Parser/grammar1.o Parser/listnode.o Parser/node.o Parser/parser.o
> Parser/parsetok.o Parser/bitset.o Parser/metagrammar.o
> Parser/firstsets.o Parser/grammar.o Parser/pgen.o Parser/myreadline.o
> Parser/tokenizer.o Objects/abstract.o Objects/boolobject.o
> Objects/bufferobject.o Objects/cellobject.o Objects/classobject.o
> Objects/cobject.o Objects/codeobject.o Objects/complexobject.o
> Objects/descrobject.o Objects/enumobject.o Objects/exceptions.o
> Objects/genobject.o Objects/fileobject.o Objects/floatobject.o
> Objects/frameobject.o Objects/funcobject.o Objects/intobject.o
> Objects/iterobject.o Objects/listobject.o Objects/longobject.o
> Objects/dictobject.o Objects/methodobject.o Objects/moduleobject.o
> Objects/object.o Objects/obmalloc.o Objects/rangeobject.o
> Objects/setobject.o Objects/sliceobject.o Objects/stringobject.o
> Objects/structseq.o Objects/tupleobject.o Objects/typeobject.o
> Objects/weakrefobject.o Objects/unicodeobject.o Objects/unicodectype.o
> Python/Python-ast.o Python/asdl.o Python/ast.o Python/bltinmodule.o
> Python/ceval.o Python/compile.o Python/codecs.o Python/errors.o
> Python/frozen.o Python/frozenmain.o Python/future.o Python/getargs.o
> Python/getcompiler.o Python/getcopyright.o Python/getmtime.o
> Python/getplatform.o Python/getversion.o Python/graminit.o
> Python/import.o Python/importdl.o Python/marshal.o Python/modsupport.o
> Python/mystrtoul.o Python/mysnprintf.o Python/pyarena.o Python/pyfpe.o
> Python/pystate.o Python/pythonrun.o Python/structmember.o
> Python/symtable.o Python/sysmodule.o Python/traceback.o
> Python/getopt.o Python/pystrtod.o Python/dynload_shlib.o
> Python/thread.o Modules/config.o Modules/getpath.o Modules/main.o
> Modules/gcmodule.o  Modules/threadmodule.o  Modules/signalmodule.o
> Modules/posixmodule.o  Modules/errnomodule.o  Modules/pwdmodule.o
> Modules/_sre.o  Modules/_codecsmodule.o  Modules/zipimport.o
> Modules/symtablemodule.o  Modules/xxsubtype.o -lpthread -ldl  -lutil
> -lwine -lm; \
>        fi
> /usr/bin/ld: skipping incompatible
> /usr/lib/gcc/x86_64-linux-gnu/4.3.2/../../../../lib/libwine.so when
> searching for -lwine
> /usr/bin/ld: skipping incompatible /usr/lib/../lib/libwine.so when
> searching for -lwine
> /usr/bin/ld: skipping incompatible
> /usr/lib/gcc/x86_64-linux-gnu/4.3.2/../../../libwine.so when searching
> for -lwine
> /usr/bin/ld: skipping incompatible /usr/bin/../lib/libwine.so when
> searching for -lwine
> /usr/bin/ld: skipping incompatible /usr/lib64/libwine.so when
> searching for -lwine
> /usr/bin/ld: skipping incompatible /usr/lib/libwine.so when searching for -lwine
> /usr/bin/ld: cannot find -lwine
> collect2: ld returned 1 exit status
>


From luke.leighton at googlemail.com  Sat Jan  3 06:47:12 2009
From: luke.leighton at googlemail.com (Luke Kenneth Casson Leighton)
Date: Sat, 3 Jan 2009 12:47:12 +0000
Subject: libwine.so "incompatible"???
In-Reply-To: <ced5f0f60901030440o46362ab9id125f9acd482704a@mail.gmail.com>
References: <ced5f0f60901030438t6fd9bc78s8aa40774cb3626f8@mail.gmail.com>
	<ced5f0f60901030440o46362ab9id125f9acd482704a@mail.gmail.com>
Message-ID: <ced5f0f60901030447k1b0bac6yceb8effe5574f31@mail.gmail.com>

frick.

with -lwine -m32 at link time:

....... sre.o  Modules/_codecsmodule.o  Modules/zipimport.o
Modules/symtablemodule.o  Modules/xxsubtype.o -lpthread -ldl  -lutil
-lwine -m32 -lm; \
        fi
collect2: ld terminated with signal 11 [Segmentation fault]
/usr/bin/ld: i386:x86-64 architecture of input file
`Modules/_typesmodule.o' is incompatible with i386 output
/usr/bin/ld: i386:x86-64 architecture of input file
`Modules/getbuildinfo.o' is incompatible with i386 output
...
...
...


with       CFLAGS="$CFLAGS -m32"

gcc -pthread -c -fno-strict-aliasing -DNDEBUG -g -fwrapv -O3 -Wall
-Wstrict-prototypes   -I. -IInclude -I../Include  -fPIC
-I/usr/include/wine/windows -DPy_BUILD_CORE -o Modules/python.o
../Modules/python.c
In file included from ../Include/Python.h:57,
                 from ../Modules/python.c:3:
../Include/pyport.h:761:2: error: #error "LONG_BIT definition appears
wrong for platform (bad gcc/glibc config?)."
make: *** [Modules/python.o] Error 1


hmmm.... time to start compiling under the 32-bit dchroot environment...


On Sat, Jan 3, 2009 at 12:40 PM, Luke Kenneth Casson Leighton
<luke.leighton at googlemail.com> wrote:
> http://www.winehq.org/pipermail/wine-devel/2007-January/053744.html
>
> hold that thought.... :)
>
> On Sat, Jan 3, 2009 at 12:38 PM, Luke Kenneth Casson Leighton
> <luke.leighton at googlemail.com> wrote:
>> rob, anyone - any ideas?
>>
>>                gcc -pthread -shared -o libpython2.5.so
>> Modules/_typesmodule.o Modules/getbuildinfo.o Parser/acceler.o
>> Parser/grammar1.o Parser/listnode.o Parser/node.o Parser/parser.o
>> Parser/parsetok.o Parser/bitset.o Parser/metagrammar.o
>> Parser/firstsets.o Parser/grammar.o Parser/pgen.o Parser/myreadline.o
>> Parser/tokenizer.o Objects/abstract.o Objects/boolobject.o
>> Objects/bufferobject.o Objects/cellobject.o Objects/classobject.o
>> Objects/cobject.o Objects/codeobject.o Objects/complexobject.o
>> Objects/descrobject.o Objects/enumobject.o Objects/exceptions.o
>> Objects/genobject.o Objects/fileobject.o Objects/floatobject.o
>> Objects/frameobject.o Objects/funcobject.o Objects/intobject.o
>> Objects/iterobject.o Objects/listobject.o Objects/longobject.o
>> Objects/dictobject.o Objects/methodobject.o Objects/moduleobject.o
>> Objects/object.o Objects/obmalloc.o Objects/rangeobject.o
>> Objects/setobject.o Objects/sliceobject.o Objects/stringobject.o
>> Objects/structseq.o Objects/tupleobject.o Objects/typeobject.o
>> Objects/weakrefobject.o Objects/unicodeobject.o Objects/unicodectype.o
>> Python/Python-ast.o Python/asdl.o Python/ast.o Python/bltinmodule.o
>> Python/ceval.o Python/compile.o Python/codecs.o Python/errors.o
>> Python/frozen.o Python/frozenmain.o Python/future.o Python/getargs.o
>> Python/getcompiler.o Python/getcopyright.o Python/getmtime.o
>> Python/getplatform.o Python/getversion.o Python/graminit.o
>> Python/import.o Python/importdl.o Python/marshal.o Python/modsupport.o
>> Python/mystrtoul.o Python/mysnprintf.o Python/pyarena.o Python/pyfpe.o
>> Python/pystate.o Python/pythonrun.o Python/structmember.o
>> Python/symtable.o Python/sysmodule.o Python/traceback.o
>> Python/getopt.o Python/pystrtod.o Python/dynload_shlib.o
>> Python/thread.o Modules/config.o Modules/getpath.o Modules/main.o
>> Modules/gcmodule.o  Modules/threadmodule.o  Modules/signalmodule.o
>> Modules/posixmodule.o  Modules/errnomodule.o  Modules/pwdmodule.o
>> Modules/_sre.o  Modules/_codecsmodule.o  Modules/zipimport.o
>> Modules/symtablemodule.o  Modules/xxsubtype.o -lpthread -ldl  -lutil
>> -lwine -lm; \
>>        fi
>> /usr/bin/ld: skipping incompatible
>> /usr/lib/gcc/x86_64-linux-gnu/4.3.2/../../../../lib/libwine.so when
>> searching for -lwine
>> /usr/bin/ld: skipping incompatible /usr/lib/../lib/libwine.so when
>> searching for -lwine
>> /usr/bin/ld: skipping incompatible
>> /usr/lib/gcc/x86_64-linux-gnu/4.3.2/../../../libwine.so when searching
>> for -lwine
>> /usr/bin/ld: skipping incompatible /usr/bin/../lib/libwine.so when
>> searching for -lwine
>> /usr/bin/ld: skipping incompatible /usr/lib64/libwine.so when
>> searching for -lwine
>> /usr/bin/ld: skipping incompatible /usr/lib/libwine.so when searching for -lwine
>> /usr/bin/ld: cannot find -lwine
>> collect2: ld returned 1 exit status
>>
>


From me at stefanreimer.de  Sat Jan  3 11:44:44 2009
From: me at stefanreimer.de (Stefan Reimer)
Date: Sat, 3 Jan 2009 18:44:44 +0100 (CET)
Subject: Build wine with gcc-4.3 and ssp
In-Reply-To: <20090102222900.GC28483@galeere.jet.franken.de>
References: <50952.88.66.121.243.1230934492.squirrel@darbo.grandnagus.de>
	<20090102222900.GC28483@galeere.jet.franken.de>
Message-ID: <40488.88.66.124.205.1231004684.squirrel@darbo.grandnagus.de>

> On Fri, Jan 02, 2009 at 11:14:52PM +0100, Stefan Reimer wrote:
>> Hi,
>> to build wine using gcc 4.3 with enabled ssp (stack-smashing-protector)
>> the following patch must be applied to loader/preloader.c
>>
>> see gcc source ./gcc/config/i386/i386.c around line 24391
>>
>> /* For 32-bit code we can save PIC register setup by using
>>    __stack_chk_fail_local hidden function instead of calling
>>    __stack_chk_fail directly.  64-bit code doesn't need to setup any PIC
>> register, so it is better to call __stack_chk_fail directly.  */
>>
>> Patch:
>>
>> diff --git a/loader/preloader.c b/loader/preloader.c
>> index 5fcb974..1143972 100644
>> --- a/loader/preloader.c
>> +++ b/loader/preloader.c
>> @@ -163,6 +163,7 @@ void __bb_init_func(void) { return; }
>>
>>  /* similar to the above but for -fstack-protector */
>>  void *__stack_chk_guard = 0;
>> +void __stack_chk_fail_local(void) { return; }
>>  void __stack_chk_fail(void) { return; }
>>
>>  /* data for setting up the glibc-style thread-local storage in %gs */
>
> Hmm,
>
> why does this work for me on openSUSE then?
>
> The line:
> gcc -c -I. -I. -I../include -I../include    -Wall -pipe
> -fno-strict-aliasing -Wdeclaration-after-statement -Wwrite-strings -W
> type-limits -Wpointer-arith  -march=i586 -mtune=i686 -fmessage-length=0
> -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funw
> ind-tables -fasynchronous-unwind-tables -g  -o preloader.o preloader.c
>
> works fine here. Are you passing in -fPIC?
>
> Ciao, marcus
>
>
>
Hi,
I am using gentoo hardened:

gcc (Gentoo Hardened 4.3.2-r7 p1.5, ssp, fortify, pie-10.2.0) 4.3.2
glibc 2.8

Using gcc -v gives:

 /usr/libexec/gcc/x86_64-pc-linux-gnu/4.3.2/cc1 -quiet -v -I. -I.
-I../include -I../include -imultilib 32 preloader.c -D_FORTIFY_SOURCE=2
-fPIE -fstack-protector -fstack-protector-all -fno-strict-overflow -quiet
-dumpbase preloader.c -m32 -march=athlon64 -auxbase-strip preloader.o -O2
-Wall -Wdeclaration-after-statement -Wwrite-strings -Wtype-limits
-Wpointer-arith -version -fno-strict-aliasing -o - |
/usr/lib/gcc/x86_64-pc-linux-gnu/4.3.2/../../../../x86_64-pc-linux-gnu/bin/as
-V -Qy --32 -o preloader.o -

The hardened gcc specs brings in -fPIE, which is similiar to -fPIC.

So YES I do ;-)

Is this a problem ?

Cyas
Stefan





From me at stefanreimer.de  Sat Jan  3 12:52:10 2009
From: me at stefanreimer.de (Stefan Reimer)
Date: Sat, 3 Jan 2009 19:52:10 +0100 (CET)
Subject: Build wine with gcc-4.3 and ssp
Message-ID: <42853.88.66.124.205.1231008730.squirrel@darbo.grandnagus.de>

> On Fri, Jan 02, 2009 at 11:14:52PM +0100, Stefan Reimer wrote:
>> Hi,
>> to build wine using gcc 4.3 with enabled ssp (stack-smashing-protector)
the following patch must be applied to loader/preloader.c
>>
>> see gcc source ./gcc/config/i386/i386.c around line 24391
>>
>> /* For 32-bit code we can save PIC register setup by using
>>    __stack_chk_fail_local hidden function instead of calling
>>    __stack_chk_fail directly.  64-bit code doesn't need to setup any PIC
>> register, so it is better to call __stack_chk_fail directly.  */
>>
>> Patch:
>>
>> diff --git a/loader/preloader.c b/loader/preloader.c
>> index 5fcb974..1143972 100644
>> --- a/loader/preloader.c
>> +++ b/loader/preloader.c
>> @@ -163,6 +163,7 @@ void __bb_init_func(void) { return; }
>>
>>  /* similar to the above but for -fstack-protector */
>>  void *__stack_chk_guard = 0;
>> +void __stack_chk_fail_local(void) { return; }
>>  void __stack_chk_fail(void) { return; }
>>
>>  /* data for setting up the glibc-style thread-local storage in %gs */
>
> Hmm,
>
> why does this work for me on openSUSE then?
>
> The line:
> gcc -c -I. -I. -I../include -I../include    -Wall -pipe
> -fno-strict-aliasing -Wdeclaration-after-statement -Wwrite-strings -W
type-limits -Wpointer-arith  -march=i586 -mtune=i686 -fmessage-length=0
-O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funw
> ind-tables -fasynchronous-unwind-tables -g  -o preloader.o preloader.c
>
> works fine here. Are you passing in -fPIC?
>
> Ciao, marcus
>
>
>
Hi,
I am using gentoo hardened:

gcc (Gentoo Hardened 4.3.2-r7 p1.5, ssp, fortify, pie-10.2.0) 4.3.2 glibc 2.8

Using gcc -v gives:

 /usr/libexec/gcc/x86_64-pc-linux-gnu/4.3.2/cc1 -quiet -v -I. -I.
-I../include -I../include -imultilib 32 preloader.c -D_FORTIFY_SOURCE=2
-fPIE -fstack-protector -fstack-protector-all -fno-strict-overflow -quiet
-dumpbase preloader.c -m32 -march=athlon64 -auxbase-strip preloader.o -O2
-Wall -Wdeclaration-after-statement -Wwrite-strings -Wtype-limits
-Wpointer-arith -version -fno-strict-aliasing -o - |
/usr/lib/gcc/x86_64-pc-linux-gnu/4.3.2/../../../../x86_64-pc-linux-gnu/bin/as
-V -Qy --32 -o preloader.o -

The hardened gcc specs brings in -fPIE, which is similiar to -fPIC.

So YES I do ;-)

Is this a problem ?

Cyas
Stefan



From juan.lang at gmail.com  Sat Jan  3 18:02:21 2009
From: juan.lang at gmail.com (Juan Lang)
Date: Sat, 3 Jan 2009 16:02:21 -0800
Subject: shell32: add explorer toolbar bitmaps
In-Reply-To: <20090103224300.186660@gmx.net>
References: <3a768c550901030909t6352f3a6y5b841f6c50ea2cbe@mail.gmail.com>
	<495FA084.4080609@gmail.com> <20090103224300.186660@gmx.net>
Message-ID: <3a768c550901031602g58353796oca0f553e7728dc92@mail.gmail.com>

> Why not use icons from the tango project?

There's also the nuvola icon theme, which, conveniently, is already LGPL:
http://www.icon-king.com/projects/nuvola/
--Juan


From austinenglish at gmail.com  Sat Jan  3 18:13:58 2009
From: austinenglish at gmail.com (Austin English)
Date: Sat, 3 Jan 2009 18:13:58 -0600
Subject: REALLY EXCITING! wine iexplore.exe http://pyjs.org/examples/
In-Reply-To: <ced5f0f60901020734u2bb906fye2aca5e1428ad1d5@mail.gmail.com>
References: <ced5f0f60901010953l5d0d2f14l3b4d60a967ae9a5e@mail.gmail.com>
	<ced5f0f60901020734u2bb906fye2aca5e1428ad1d5@mail.gmail.com>
Message-ID: <b6bb06270901031613v576c241bw7814287d9f1ed2d1@mail.gmail.com>

On Fri, Jan 2, 2009 at 9:34 AM, Luke Kenneth Casson Leighton
<lkcl at lkcl.net> wrote:
> aww folks - bless you :)  if all of these worked, then it means that
> mshtml is coming along _really_ well!  i went through the kitchen sink
> example, and it passed - everything - with flying colours.  the
> library unit test - passes everything!  even the SVG canvas (in the
> addons) works!
>
> i was _just_ about to get _really_ excited, when i ran the JSONRPC
> example, but awwwww, i got this:
> fixme:mshtml:nsUploadChannel_SetUploadStream Unsupported aContentType
> argument: "application/x-www-form-urlencoded"
>
> darn, darn :)
>
> if that had worked first time, it would have been _unbelievable_ - and
> _so_ exciting.
>
> i liked especially the way that internet explorer is detected as
> Mozilla-compatible.  to support IE's javascript features _would_
> perhaps bit a _little_ too much :)
>
> but the real purpose of this message is to say WELL XXXXING DONE!
>
> l.
>
>
>

http://bugs.winehq.org/show_bug.cgi?id=16776

-- 
-Austin


From arrenlex at gmail.com  Sat Jan  3 18:27:00 2009
From: arrenlex at gmail.com (Arren Lex)
Date: Sat, 3 Jan 2009 17:27:00 -0700
Subject: Patch implementing riched20 : EM_PASTESPECIAL -- critique?
In-Reply-To: <87855ac60901021601r15533511qc599a4555c1c0e16@mail.gmail.com>
References: <87855ac60901021601r15533511qc599a4555c1c0e16@mail.gmail.com>
Message-ID: <87855ac60901031627l12c4b979v49727771b6c56a59@mail.gmail.com>

Sorry, here is a new version which doesn't totally ignore the lvalue
(gives fixme).

2009/1/2 Arren Lex <arrenlex at gmail.com>:
> Hello, all;
>
> Attached is a patch that implements the EM_PASTESPECIAL riched20
> message, which pastes with a specified clipboard format --
> http://msdn.microsoft.com/en-us/library/bb774214(VS.85).aspx
>
> Because there is (apparently) no ANSI clipboard implemented, the
> CF_TEXT clipboard format pastes garbage, so I have put in a workaround
> which treats a CF_TEXT as a CF_UNICODETEXT call. It prints a fixme
> when it does this, and when the ANSI clipboard is implemented the "if"
> block can simply be taken out to start using it.
>
> This patch was written to fix bug 14530 --
> http://bugs.winehq.org/show_bug.cgi?id=14530
>
> It is made against git commit bf25837eb7c08dc7faf13b886f6aed79a02506b8
> (the tagging of 1.1.12) which is the latest at the time of writing.
>
> This is my first ever patch, and I am not familiar with wine or
> riched20 at all, so I would love to have some feedback about it before
> I submit it to the patches list. Can anyone suggest improvements?
>
> Thank you,
> - Alexander Dorokhine
>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch2.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20090103/ad899c2a/attachment.txt 

From robertshearman at gmail.com  Sat Jan  3 18:30:38 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Sun, 4 Jan 2009 00:30:38 +0000
Subject: widl: fix handling of [local] functions without [call_as]
In-Reply-To: <1231024831.540.182.camel@hermes2.karcher.local>
References: <1231024831.540.182.camel@hermes2.karcher.local>
Message-ID: <1096648c0901031630gdd110e0tf19d261df01d0cb5@mail.gmail.com>

2009/1/3 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> @@ -548,8 +548,9 @@ static int write_proxy_methods(type_t *iface, int skip)
>    if (iface->funcs) LIST_FOR_EACH_ENTRY( cur, iface->funcs, const func_t, entry ) {
>      var_t *def = cur->def;
>      if (!is_callas(def->attrs)) {
> +      if (i != cur->idx ) error("widl internal error: method index mismatch");
>        if (i) fprintf(proxy, ",\n");
> -      if (skip) print_proxy( "0  /* %s_%s_Proxy */", iface->name, get_name(def));
> +      if (skip || is_local(def->attrs)) print_proxy( "0  /* %s_%s_Proxy */", iface->name, get_name(def));
>        else print_proxy( "%s_%s_Proxy", iface->name, get_name(def));
>        i++;
>      }

This will now cause methods with the [local] attribute and with a
matching [call_as] method to no longer be included in the function
table, which isn't what you want.

-- 
Rob Shearman


From thunderbird2k at gmx.net  Sat Jan  3 18:36:26 2009
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Sun, 04 Jan 2009 01:36:26 +0100
Subject: shell32: add explorer toolbar bitmaps
In-Reply-To: <b6bb06270901031524n18bc9115o15214cbb2475cbc2@mail.gmail.com>
References: <3a768c550901030909t6352f3a6y5b841f6c50ea2cbe@mail.gmail.com>
	<495FA084.4080609@gmail.com> <20090103224300.186660@gmx.net>
	<495FEF9A.6070106@gmail.com>
	<22821af30901031512t27cc31edh20a57fdac743f44f@mail.gmail.com>
	<495FF287.8080900@gmail.com>
	<b6bb06270901031524n18bc9115o15214cbb2475cbc2@mail.gmail.com>
Message-ID: <20090104003626.318820@gmx.net>


> On Sat, Jan 3, 2009 at 5:19 PM, Andrey Turkin <andrey.turkin at gmail.com>
> wrote:
> > James Hawkins wrote:
> >
> > On Sat, Jan 3, 2009 at 3:07 PM, Andrey Turkin <andrey.turkin at gmail.com>
> > wrote:
> >
> >
> > I _love_ this idea, and icons look very nice, but here can be some legal
> > troubles. The icons are under Creative Commons - Share Alike 2.5
> license.
> > I'm not a lawyer and not sure if using (probably modified) icons would
> be
> > considered as "share alike" condition - they say "alter, transform or
> build
> > upon", but probably authors intent was that icons must stay under CC
> > Share-Alike license. See e.g.
> >
> http://lists.freedesktop.org/archives/tango-artists/2006-September/000681.html
> > . These "wars" between open source licenses make me sick.
> >
> >
> >
> > http://winehq.org/pipermail/wine-devel/2008-December/071145.html
> >
> >
> >
> > That's great! Once they switch the license we definitely should use
> Tango.
> >
> >
> >
> >
> 
> You could still ask them to relicense the particular icons we need in
> the meantime.
> 
> -- 
> -Austin
> 

I completely agree with that. It sounded to me like the relicensing could take a while. On irc it really sounded like they wanted to help us out.

Roderick
-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger


From thunderbird2k at gmx.net  Sat Jan  3 18:38:24 2009
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Sun, 04 Jan 2009 01:38:24 +0100
Subject: shell32: add explorer toolbar bitmaps
In-Reply-To: <3a768c550901031602g58353796oca0f553e7728dc92@mail.gmail.com>
References: <3a768c550901030909t6352f3a6y5b841f6c50ea2cbe@mail.gmail.com>	
	<495FA084.4080609@gmail.com> <20090103224300.186660@gmx.net>
	<3a768c550901031602g58353796oca0f553e7728dc92@mail.gmail.com>
Message-ID: <20090104003824.318820@gmx.net>

> > Why not use icons from the tango project?
> 
> There's also the nuvola icon theme, which, conveniently, is already LGPL:
> http://www.icon-king.com/projects/nuvola/
> --Juan

I believe windows contains some generic icons build into shell32 and some other dlls but theme files can override them. If that is indeed the case we could just ship some wine icon themes (or use free win32 themes). Stock icons from e.g. pango or so would be nice for the generic ones.

Roderick
-- 
Sensationsangebot verl?ngert: GMX FreeDSL - Telefonanschluss + DSL 
f?r nur 16,37 Euro/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K1308T4569a


From wine at mkarcher.dialup.fu-berlin.de  Sat Jan  3 18:38:37 2009
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sun, 04 Jan 2009 01:38:37 +0100
Subject: widl: fix handling of [local] functions without [call_as]
In-Reply-To: <1096648c0901031630gdd110e0tf19d261df01d0cb5@mail.gmail.com>
References: <1231024831.540.182.camel@hermes2.karcher.local>
	<1096648c0901031630gdd110e0tf19d261df01d0cb5@mail.gmail.com>
Message-ID: <1231029517.540.192.camel@hermes2.karcher.local>

Am Sonntag, den 04.01.2009, 00:30 +0000 schrieb Rob Shearman:
> 2009/1/3 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> > @@ -548,8 +548,9 @@ static int write_proxy_methods(type_t *iface, int skip)
> >    if (iface->funcs) LIST_FOR_EACH_ENTRY( cur, iface->funcs, const func_t, entry ) {
> >      var_t *def = cur->def;
> >      if (!is_callas(def->attrs)) {
> > +      if (i != cur->idx ) error("widl internal error: method index mismatch");
> >        if (i) fprintf(proxy, ",\n");
> > -      if (skip) print_proxy( "0  /* %s_%s_Proxy */", iface->name, get_name(def));
> > +      if (skip || is_local(def->attrs)) print_proxy( "0  /* %s_%s_Proxy */", iface->name, get_name(def));
> >        else print_proxy( "%s_%s_Proxy", iface->name, get_name(def));
> >        i++;
> >      }
> This will now cause methods with the [local] attribute and with a
> matching [call_as] method to no longer be included in the function
> table, which isn't what you want.

Yeah, right. This patch is bad. Will resend a fixed version tomorrow.

Regards,
  Michael Karcher



From truiken at gmail.com  Sat Jan  3 18:54:49 2009
From: truiken at gmail.com (James Hawkins)
Date: Sat, 3 Jan 2009 16:54:49 -0800
Subject: include: Change RPC_STATUS from long to LONG for Win64
	compatibility.
In-Reply-To: <20090104004914.GH10613@redhat.com>
References: <20090104004914.GH10613@redhat.com>
Message-ID: <22821af30901031654v60de515flc9aa7c554988c369@mail.gmail.com>

On Sat, Jan 3, 2009 at 4:49 PM, Michael Stefaniuc <mstefani at redhat.de> wrote:
> Also fix the compiler warnings introduced by this change.
>
> diff --git a/dlls/advapi32/crypt.c b/dlls/advapi32/crypt.c
> index 5d0b15e..8ef0a5f 100644
> --- a/dlls/advapi32/crypt.c
> +++ b/dlls/advapi32/crypt.c
> @@ -305,7 +305,7 @@ static void CRYPT_CreateMachineGuid(void)
>                                     '%','0','2','x','%','0','2','x',
>                                     '%','0','2','x',0 };
>
> -                               pUuidCreate = GetProcAddress(lib, "UuidCreate");
> +                                pUuidCreate = (void *)GetProcAddress(lib, "UuidCreate");
>                                 rs = pUuidCreate(&uuid);
>                                 if (rs == S_OK)
>                                 {

Inadvertent change?

-- 
James Hawkins


From mstefani at redhat.com  Sat Jan  3 19:00:18 2009
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Sun, 04 Jan 2009 02:00:18 +0100
Subject: include: Change RPC_STATUS from long to LONG for Win64
	compatibility.
In-Reply-To: <22821af30901031654v60de515flc9aa7c554988c369@mail.gmail.com>
References: <20090104004914.GH10613@redhat.com>
	<22821af30901031654v60de515flc9aa7c554988c369@mail.gmail.com>
Message-ID: <49600A22.1080901@redhat.com>

James Hawkins wrote:
> On Sat, Jan 3, 2009 at 4:49 PM, Michael Stefaniuc <mstefani at redhat.de> wrote:
>> Also fix the compiler warnings introduced by this change.
>>
>> diff --git a/dlls/advapi32/crypt.c b/dlls/advapi32/crypt.c
>> index 5d0b15e..8ef0a5f 100644
>> --- a/dlls/advapi32/crypt.c
>> +++ b/dlls/advapi32/crypt.c
>> @@ -305,7 +305,7 @@ static void CRYPT_CreateMachineGuid(void)
>>                                     '%','0','2','x','%','0','2','x',
>>                                     '%','0','2','x',0 };
>>
>> -                               pUuidCreate = GetProcAddress(lib, "UuidCreate");
>> +                                pUuidCreate = (void *)GetProcAddress(lib, "UuidCreate");
>>                                 rs = pUuidCreate(&uuid);
>>                                 if (rs == S_OK)
>>                                 {
> 
> Inadvertent change?
Nope, the compiler really started complaining about that after I changed 
RPC_STATUS from long to LONG.
pUuidCreate is defined as
   RPC_STATUS (RPC_ENTRY *pUuidCreate)(UUID *);


bye
	michael


From wine-devel at kievinfo.com  Sat Jan  3 21:05:34 2009
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sat, 03 Jan 2009 20:05:34 -0700
Subject: Use of "patch" keyword in Bugzilla
Message-ID: <4960277E.7000804@kievinfo.com>

Moving this conversation to wine-devel.
>            What    |Removed                     |Added
> ----------------------------------------------------------------------------
>            Keywords|patch                       |
> 
>  ------- Comment  #7 From Vitaliy Margolen  2009-01-03 19:47:16  [reply] -------
> 
> Patch keyword is for patches attached to bugs only and not sent to
> wine-patches.
> 
> ------- Comment #8 From Austin English 2009-01-03 20:01:55 [reply] -------
> 
> (In reply to comment #7)
>> Patch keyword is for patches attached to bugs only and not sent to
>> wine-patches.
>> 
> 
> It's still useful, e.g., if patch is not accepted.

No it's not. The intension of that keyword was to fish all the patches out
of buzilla and resubmit them to wine-patches. Or serve as a base for someone
to improve upon. With mixing the two you make it nearly useless as most bugs
will have it eventually. Especially all fixed ones.

IMHO not even outright hacks should have "patch" keyword set. Yes they give
an idea of where the problem is. But they are nothing more then
investigation into the cause of the problem.

Vitaliy.


From austinenglish at gmail.com  Sat Jan  3 22:19:19 2009
From: austinenglish at gmail.com (Austin English)
Date: Sat, 3 Jan 2009 22:19:19 -0600
Subject: Use of "patch" keyword in Bugzilla
In-Reply-To: <4960277E.7000804@kievinfo.com>
References: <4960277E.7000804@kievinfo.com>
Message-ID: <b6bb06270901032019q7b8aaael4cd4dc06b33e65f0@mail.gmail.com>

On Sat, Jan 3, 2009 at 9:05 PM, Vitaliy Margolen
<wine-devel at kievinfo.com> wrote:
> Moving this conversation to wine-devel.
>>            What    |Removed                     |Added
>> ----------------------------------------------------------------------------
>>            Keywords|patch                       |
>>
>>  ------- Comment  #7 From Vitaliy Margolen  2009-01-03 19:47:16  [reply] -------
>>
>> Patch keyword is for patches attached to bugs only and not sent to
>> wine-patches.
>>
>> ------- Comment #8 From Austin English 2009-01-03 20:01:55 [reply] -------
>>
>> (In reply to comment #7)
>>> Patch keyword is for patches attached to bugs only and not sent to
>>> wine-patches.
>>>
>>
>> It's still useful, e.g., if patch is not accepted.
>
> No it's not. The intension of that keyword was to fish all the patches out
> of buzilla and resubmit them to wine-patches. Or serve as a base for someone
> to improve upon. With mixing the two you make it nearly useless as most bugs
> will have it eventually. Especially all fixed ones.

I'm not that worried about it, and if that's what consensus is, fine by me.

Keep in mind, however, that I doubt anyone is searching fixed bugs for
patches. By that same argument, we should obsolete any patches
attached to bugs once they're committed to git, even for fixed bugs.

-- 
-Austin


From mstefani at redhat.com  Sun Jan  4 07:11:33 2009
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Sun, 04 Jan 2009 14:11:33 +0100
Subject: long in IDL files?
Message-ID: <4960B585.8050308@redhat.com>

Hello guys,

i guess that we need to change long to LONG in IDL files too, right?
Or would that be something that widl could/should do automatically?

bye
	michael


From julliard at winehq.org  Sun Jan  4 10:43:50 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Sun, 04 Jan 2009 17:43:50 +0100
Subject: libs/wine/debug.c: enlcosed a 'write' function with 'if' to
	prevent gcc warnings. 'if' does nothing cause program exits
	right after the statement anyway. (bug # 16413)
In-Reply-To: <1231086255.15015.5.camel@toybox> (titon barua's message of "Sun, 
	04 Jan 2009 22:24:15 +0600")
References: <1231086255.15015.5.camel@toybox>
Message-ID: <873afz58e1.fsf@wine.dyndns.org>

titon barua <titanix88 at gmail.com> writes:

> @@ -177,7 +177,8 @@ static void debug_usage(void)
>          "Example: WINEDEBUG=+all,warn-heap\n"
>          "    turns on all messages except warning heap messages\n"
>          "Available message classes: err, warn, fixme, trace\n";
> -    write( 2, usage, sizeof(usage) - 1 );
> +    /* enclosed in 'if' statement to prevent gcc warnings */
> +    if (write( 2, usage, sizeof(usage) - 1 ));

Please don't do that sort of thing. That's much worse than the warning.

-- 
Alexandre Julliard
julliard at winehq.org


From joel at airwebreathe.org.uk  Sun Jan  4 10:47:35 2009
From: joel at airwebreathe.org.uk (Joel Holdsworth)
Date: Sun, 04 Jan 2009 16:47:35 +0000
Subject: shell32: add explorer toolbar bitmaps
In-Reply-To: <3a768c550901031602g58353796oca0f553e7728dc92@mail.gmail.com>
References: <3a768c550901030909t6352f3a6y5b841f6c50ea2cbe@mail.gmail.com>
	<495FA084.4080609@gmail.com> <20090103224300.186660@gmx.net>
	<3a768c550901031602g58353796oca0f553e7728dc92@mail.gmail.com>
Message-ID: <1231087655.6998.3.camel@joel-desktop>

Nuvola is good, but I think Tango looks a lot nicer if it could be
available, and I think it blends with different platforms better - it's
designed specifically with that in mind. Nuvola looks very KDEish and
very very blue; not as good as Tango IMHO.

Does anyone know how gnome manages to handle the CC licensing issue? -
given that gnome uses it everwhere?

On Sat, 2009-01-03 at 16:02 -0800, Juan Lang wrote:
> > Why not use icons from the tango project?
> 
> There's also the nuvola icon theme, which, conveniently, is already LGPL:
> http://www.icon-king.com/projects/nuvola/
> --Juan
> 
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3181 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20090104/1a18d5f8/attachment.bin 

From robertshearman at gmail.com  Sun Jan  4 11:08:37 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Sun, 4 Jan 2009 17:08:37 +0000
Subject: long in IDL files?
In-Reply-To: <4960B585.8050308@redhat.com>
References: <4960B585.8050308@redhat.com>
Message-ID: <1096648c0901040908r77c2b3a1y56518132f8e12405@mail.gmail.com>

2009/1/4 Michael Stefaniuc <mstefani at redhat.com>:
> Hello guys,
>
> i guess that we need to change long to LONG in IDL files too, right?
> Or would that be something that widl could/should do automatically?

long/unsigned long are explicitly defined by the DCE/RPC standard to
be 32-bit types. In an ideal world, I would change widl to generate
int16_t/uint16_t for short/unsigned short, int32_t/uint32_t for
long/unsigned long and int64_t/uint64_t for hyper/unsigned hyper
types, but the lack of stdint.h in the Windows world prevents this.

Therefore, the best solution that I see at the moment is to change the
"long" type in widl to output "int". This will allow the generated
code to work correctly on both 32-bit and 64-bit Linux and Windows
platforms (but not 16-bit platforms and possibly other platforms).

-- 
Rob Shearman


From julliard at winehq.org  Sun Jan  4 11:22:41 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Sun, 04 Jan 2009 18:22:41 +0100
Subject: long in IDL files?
In-Reply-To: <1096648c0901040908r77c2b3a1y56518132f8e12405@mail.gmail.com>
	(Rob Shearman's message of "Sun, 4 Jan 2009 17:08:37 +0000")
References: <4960B585.8050308@redhat.com>
	<1096648c0901040908r77c2b3a1y56518132f8e12405@mail.gmail.com>
Message-ID: <87vdsv3s0u.fsf@wine.dyndns.org>

"Rob Shearman" <robertshearman at gmail.com> writes:

> 2009/1/4 Michael Stefaniuc <mstefani at redhat.com>:
>> Hello guys,
>>
>> i guess that we need to change long to LONG in IDL files too, right?
>> Or would that be something that widl could/should do automatically?
>
> long/unsigned long are explicitly defined by the DCE/RPC standard to
> be 32-bit types. In an ideal world, I would change widl to generate
> int16_t/uint16_t for short/unsigned short, int32_t/uint32_t for
> long/unsigned long and int64_t/uint64_t for hyper/unsigned hyper
> types, but the lack of stdint.h in the Windows world prevents this.

You could probably use the explicitly-sized types from basetsd.h
instead, it should be included from all generated files.

-- 
Alexandre Julliard
julliard at winehq.org


From dank at kegel.com  Sun Jan  4 14:07:13 2009
From: dank at kegel.com (Dan Kegel)
Date: Sun, 4 Jan 2009 12:07:13 -0800
Subject: Linus Torvalds on Wine back in 1998
Message-ID: <a71bd89a0901041207q374e1bbfmb2ce8bef47d55b67@mail.gmail.com>

http://fringe.davesource.com/Fringe/Computers/Linux/Manifesto.txt

It's taken longer than he expected...

--- snip ---
WINE (the Linux
emulator for Windows) works to a fairly surprising degree. You can
run real Windows programs with it, but some of them don't look right,
and some of them just crash. But it has been making big progress in
the last year, and now you can actually run Word for Windows. It
doesn't work for everybody and there are known bugs, but it's almost
becoming usable. I doubt people will wake up and say, "Hey, let's get
rid of the shackles of Microsoft and switch to Linux and WINE." But
there are going to be more and more people who discover they really
want the networking abilities of Linux, or who run a web server on
it. WINE slowly expands the group of people who would find Linux or
some other operating system acceptable because they really don't care
about Microsoft per se; they care about a few programs.

In a few years WINE will be good enough that you can actually
consider running Linux instead of Windows. It won't take over 100% of
the market, but that's OK, too, because when you don't have one major
entity that owns most of the market, it's a much saner, competitive
environment. I think that'll happen, regardless of Linux.
--- snip ---


From mstefani at redhat.com  Sun Jan  4 16:03:42 2009
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Sun, 04 Jan 2009 23:03:42 +0100
Subject: long in IDL files?
In-Reply-To: <1096648c0901040908r77c2b3a1y56518132f8e12405@mail.gmail.com>
References: <4960B585.8050308@redhat.com>
	<1096648c0901040908r77c2b3a1y56518132f8e12405@mail.gmail.com>
Message-ID: <4961323E.1000906@redhat.com>

Rob Shearman wrote:
> 2009/1/4 Michael Stefaniuc <mstefani at redhat.com>:
>> Hello guys,
>>
>> i guess that we need to change long to LONG in IDL files too, right?
>> Or would that be something that widl could/should do automatically?
> 
> long/unsigned long are explicitly defined by the DCE/RPC standard to
> be 32-bit types. In an ideal world, I would change widl to generate
Didn't know that.

> int16_t/uint16_t for short/unsigned short, int32_t/uint32_t for
> long/unsigned long and int64_t/uint64_t for hyper/unsigned hyper
> types, but the lack of stdint.h in the Windows world prevents this.
> 
> Therefore, the best solution that I see at the moment is to change the
> "long" type in widl to output "int". This will allow the generated
> code to work correctly on both 32-bit and 64-bit Linux and Windows
> platforms (but not 16-bit platforms and possibly other platforms).
Whatever the solution is it means we can keep the idl files as is. Less 
work for me that way ;)

thanks
bye
	michael


From dank at kegel.com  Sun Jan  4 16:31:16 2009
From: dank at kegel.com (Dan Kegel)
Date: Sun, 4 Jan 2009 14:31:16 -0800
Subject: Patch implementing riched20 : EM_PASTESPECIAL -- critique?
Message-ID: <a71bd89a0901041431g2d93bfe9hfb845fe4a9493873@mail.gmail.com>

Hi, and welcome to Wine development!

Two notes on your patch:
1) does treating CF_TEXT as a CF_UNICODETEXT work?
2) you don't include a conformance test.  Conformance
tests are really, really helpful.  I bet you could write
one for this feature.   Please give it a shot, and make
sure the test passes on Windows.
- Dan


From dank at kegel.com  Sun Jan  4 16:33:44 2009
From: dank at kegel.com (Dan Kegel)
Date: Sun, 4 Jan 2009 14:33:44 -0800
Subject: install-wine-deps.sh can now handle 32 bit wine on 64 bit systems
In-Reply-To: <a71bd89a0901021623m379ea929q6524e3f7059f8814@mail.gmail.com>
References: <a71bd89a0901021623m379ea929q6524e3f7059f8814@mail.gmail.com>
Message-ID: <a71bd89a0901041433m47f36809yc379f9ac3c31cd55@mail.gmail.com>

INeedAnime wrote:
>>   ./configure --target=i686-unknown-gnu-linux
> What does that do? It's not listed in "./configure --help".

It was a thinko.  I put the correct instructions up at
http://wiki.winehq.org/Wine64

- Dan


From arrenlex at gmail.com  Sun Jan  4 16:50:36 2009
From: arrenlex at gmail.com (Arren Lex)
Date: Sun, 4 Jan 2009 15:50:36 -0700
Subject: Patch implementing riched20 : EM_PASTESPECIAL -- critique?
In-Reply-To: <a71bd89a0901041431g2d93bfe9hfb845fe4a9493873@mail.gmail.com>
References: <a71bd89a0901041431g2d93bfe9hfb845fe4a9493873@mail.gmail.com>
Message-ID: <87855ac60901041450y727d75c9gfa809be75495e6a3@mail.gmail.com>

Thank you for your reply!

Yes, this workaround works. I was testing on EASy68k, the only program
I know that uses EM_PASTESPECIAL, and it was invoking CF_TEXT and
pasting garbage (question marks and plusses, but the same length as
the source text). When I treated them as CF_UNICODE, it pasted
perfectly.

I have started trying to write a conformance test for this feature,
but it's difficult because I am not sure what clipboard formats
actually have implementations. From looking at editor.c it seems to me
only rich text and unicode are supported. The full list of possible
clipboard formats, of course, is vast (
http://msdn.microsoft.com/en-us/library/ms649013(VS.85).aspx#_win32_Standard_Clipboard_Formats
). When issuing an EM_PASTESPECIAL, the user could specify any of
them. Does someone familiar with the riched20 code know what formats
are currently supported in it?

Also, EM_PASTESPECIAL supports the REPASTESPECIAL structure (
http://msdn.microsoft.com/en-us/library/bb787948(VS.85).aspx ) which I
don't know how to even begin to approach, as I'm not sure how the
pasting code works and what these fields actually do. What does the
"aspect" do? Where does it currently get its "aspect" from by default?

It should be easy to write a test for the functionality I implemented
-- it would be very similar to the WM_PASTE test that's in there
already. However, it wouldn't reflect the full capability of the
message, and if it did, it would be very hard for me to write and it
wouldn't pass (on wine).

If someone from riched could give a nudge in the right direction on
these issues, it would be super awesome. :)

- Alex

2009/1/4 Dan Kegel <dank at kegel.com>:
> Hi, and welcome to Wine development!
>
> Two notes on your patch:
> 1) does treating CF_TEXT as a CF_UNICODETEXT work?
> 2) you don't include a conformance test.  Conformance
> tests are really, really helpful.  I bet you could write
> one for this feature.   Please give it a shot, and make
> sure the test passes on Windows.
> - Dan
>


From wine-devel at kievinfo.com  Sun Jan  4 16:55:14 2009
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 04 Jan 2009 15:55:14 -0700
Subject: dlls/dinput/effect_linuxinput.c: Check return value of 'write'.
	(bug # 16413)
In-Reply-To: <1231099904.15015.26.camel@toybox>
References: <1231099904.15015.26.camel@toybox>
Message-ID: <49613E52.8020501@kievinfo.com>

titon barua wrote:
> ---
>      /* we don't care about the success or failure of this call */
> -    write(*(This->fd), &event, sizeof(event));
> +    /* print errors if they occur */
> +    if (write(*(This->fd), &event, sizeof(event)) == -1) perror ( NULL );
What's the point of your patch? What part of the comment isn't clear to you?
Also don't use perror. Wine has ERR(), WARN(), TRACE() macros for that.

Vitaliy



From me at stefanreimer.de  Sat Jan  3 18:24:05 2009
From: me at stefanreimer.de (Stefan Reimer)
Date: Sun, 4 Jan 2009 01:24:05 +0100 (CET)
Subject: Build wine with gcc-4.3 and ssp
In-Reply-To: <20090103190241.GB22386@galeere.jet.franken.de>
References: <42853.88.66.124.205.1231008730.squirrel@darbo.grandnagus.de>
	<20090103190241.GB22386@galeere.jet.franken.de>
Message-ID: <54814.88.66.124.205.1231028645.squirrel@darbo.grandnagus.de>

> On Sat, Jan 03, 2009 at 07:52:10PM +0100, Stefan Reimer wrote:
>> > On Fri, Jan 02, 2009 at 11:14:52PM +0100, Stefan Reimer wrote:
>> I am using gentoo hardened:
>>
>> gcc (Gentoo Hardened 4.3.2-r7 p1.5, ssp, fortify, pie-10.2.0) 4.3.2
>> glibc 2.8
>>
>> Using gcc -v gives:
>>
>>  /usr/libexec/gcc/x86_64-pc-linux-gnu/4.3.2/cc1 -quiet -v -I. -I.
>> -I../include -I../include -imultilib 32 preloader.c -D_FORTIFY_SOURCE=2
>> -fPIE -fstack-protector -fstack-protector-all -fno-strict-overflow
>> -quiet
>> -dumpbase preloader.c -m32 -march=athlon64 -auxbase-strip preloader.o
>> -O2
>> -Wall -Wdeclaration-after-statement -Wwrite-strings -Wtype-limits
>> -Wpointer-arith -version -fno-strict-aliasing -o - |
>> /usr/lib/gcc/x86_64-pc-linux-gnu/4.3.2/../../../../x86_64-pc-linux-gnu/bin/as
>> -V -Qy --32 -o preloader.o -
>>
>> The hardened gcc specs brings in -fPIE, which is similiar to -fPIC.
>>
>> So YES I do ;-)
>>
>> Is this a problem ?
>
> -fPIE is a bit useless for the preloader (wine-preloader is actually
> loaded at a fixed
> address), but it should not fail to build I guess.
>
> Does Wine still work afterwards?
>
> I don't see the patch hurting anything though.
>
> Ciao, Marcus
>

Hi,
-fPIE is introduced by using the gentoo hardened profile and is applied
everywhere possible. I think wine should be able to be build with -fPIE,
despite not improving security be any means.

Wine works like a charm btw.

Sry for the double postings!

Cyas
Stefan




From me at stefanreimer.de  Sun Jan  4 12:23:35 2009
From: me at stefanreimer.de (Stefan Reimer)
Date: Sun, 4 Jan 2009 19:23:35 +0100 (CET)
Subject: Build wine with gcc-4.3 and ssp
Message-ID: <49823.88.65.242.31.1231093415.squirrel@darbo.grandnagus.de>

> On Sat, Jan 03, 2009 at 07:52:10PM +0100, Stefan Reimer wrote:
>> > On Fri, Jan 02, 2009 at 11:14:52PM +0100, Stefan Reimer wrote:
>> I am using gentoo hardened:
>>
>> gcc (Gentoo Hardened 4.3.2-r7 p1.5, ssp, fortify, pie-10.2.0) 4.3.2
glibc 2.8
>>
>> Using gcc -v gives:
>>
>>  /usr/libexec/gcc/x86_64-pc-linux-gnu/4.3.2/cc1 -quiet -v -I. -I.
>> -I../include -I../include -imultilib 32 preloader.c -D_FORTIFY_SOURCE=2
-fPIE -fstack-protector -fstack-protector-all -fno-strict-overflow
-quiet
>> -dumpbase preloader.c -m32 -march=athlon64 -auxbase-strip preloader.o -O2
>> -Wall -Wdeclaration-after-statement -Wwrite-strings -Wtype-limits
-Wpointer-arith -version -fno-strict-aliasing -o - |
>> /usr/lib/gcc/x86_64-pc-linux-gnu/4.3.2/../../../../x86_64-pc-linux-gnu/bin/as
-V -Qy --32 -o preloader.o -
>>
>> The hardened gcc specs brings in -fPIE, which is similiar to -fPIC.
>>
>> So YES I do ;-)
>>
>> Is this a problem ?
>
> -fPIE is a bit useless for the preloader (wine-preloader is actually
loaded at a fixed
> address), but it should not fail to build I guess.
>
> Does Wine still work afterwards?
>
> I don't see the patch hurting anything though.
>
> Ciao, Marcus
>

Hi,
-fPIE is introduced by using the gentoo hardened profile and is applied
everywhere possible. I think wine should be able to be build with -fPIE,
despite not improving security be any means.

Wine works like a charm btw.

Sry for the double postings!

Cyas
Stefan






From dfs at sdsd  Sun Jan  4 16:54:00 2009
From: dfs at sdsd (Vitaliy)
Date: Sun, 04 Jan 2009 15:54:00 -0700
Subject: dlls/dinput/effect_linuxinput.c: Check return value of 'write'.
	(bug # 16413)
In-Reply-To: <1231099904.15015.26.camel@toybox>
References: <1231099904.15015.26.camel@toybox>
Message-ID: <49613E08.7040804@sdsd>

titon barua wrote:
> ---
>      /* we don't care about the success or failure of this call */
> -    write(*(This->fd), &event, sizeof(event));
> +    /* print errors if they occur */
> +    if (write(*(This->fd), &event, sizeof(event)) == -1) perror ( NULL );
What's the point of your patch? What part of the comment isn't clear to you?
Also don't use perror. Wine has ERR(), WARN(), TRACE() macros for that.

Vitaliy


From austinenglish at gmail.com  Sun Jan  4 20:49:43 2009
From: austinenglish at gmail.com (Austin English)
Date: Sun, 4 Jan 2009 20:49:43 -0600
Subject: dlls/dinput/effect_linuxinput.c: Check return value of 'write'.
	(bug # 16413)
In-Reply-To: <49613E52.8020501@kievinfo.com>
References: <1231099904.15015.26.camel@toybox> <49613E52.8020501@kievinfo.com>
Message-ID: <b6bb06270901041849o3248013fy8edb99bfb1e136b6@mail.gmail.com>

On Sun, Jan 4, 2009 at 4:55 PM, Vitaliy Margolen
<wine-devel at kievinfo.com> wrote:
> titon barua wrote:
>> ---
>>      /* we don't care about the success or failure of this call */
>> -    write(*(This->fd), &event, sizeof(event));
>> +    /* print errors if they occur */
>> +    if (write(*(This->fd), &event, sizeof(event)) == -1) perror ( NULL );
> What's the point of your patch? What part of the comment isn't clear to you?
> Also don't use perror. Wine has ERR(), WARN(), TRACE() macros for that.
>
> Vitaliy
>
>
>
>

GCC is complaining about the ignored return value.

-- 
-Austin


From dank at kegel.com  Sun Jan  4 21:06:19 2009
From: dank at kegel.com (Dan Kegel)
Date: Sun, 4 Jan 2009 19:06:19 -0800
Subject: dlls/dinput/effect_linuxinput.c: Check return value of 'write'.
	(bug # 16413)
Message-ID: <a71bd89a0901041906w601666d4me815918c9231771@mail.gmail.com>

Vitaliy Margolen wrote:
>> titon barua wrote:
>>> -    write(*(This->fd), &event, sizeof(event));
>>> +    if (write(*(This->fd), &event, sizeof(event)) == -1) perror ( NULL );
>> What's the point of your patch? What part of the comment isn't clear to you?
>
>GCC is complaining about the ignored return value.

As Alexandre implied in
http://www.winehq.org/pipermail/wine-devel/2009-January/071769.html
one should not fix these warnings casually.
A real fix probably involves actually handing
the error rather than printing a warning.

The last thing we need is an army of people
papering over compiler warnings.
- Dan


From jjmckenzie51 at earthlink.net  Sun Jan  4 21:57:14 2009
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Sun, 04 Jan 2009 20:57:14 -0700
Subject: dlls/dinput/effect_linuxinput.c: Check return value of 'write'.
	(bug # 16413)
In-Reply-To: <49613E52.8020501@kievinfo.com>
References: <1231099904.15015.26.camel@toybox> <49613E52.8020501@kievinfo.com>
Message-ID: <4961851A.9020404@earthlink.net>

Vitaliy Margolen wrote:
> titon barua wrote:
>   
>> ---
>>      /* we don't care about the success or failure of this call */
>> -    write(*(This->fd), &event, sizeof(event));
>> +    /* print errors if they occur */
>> +    if (write(*(This->fd), &event, sizeof(event)) == -1) perror ( NULL );
>>     
> What's the point of your patch? What part of the comment isn't clear to you?
> Also don't use perror. Wine has ERR(), WARN(), TRACE() macros for that.
>   
How about this:

Titon, this code does not need to be 'fixed' as it works the way it is 
supposed to.

Please remove this code and resubmit.

I was uncertain of what Titon was trying to fix so I looked up perror 
and it is not needed at this point and introduces uncertainty into the code.

James McKenzie



From titanix88 at gmail.com  Sun Jan  4 23:06:38 2009
From: titanix88 at gmail.com (titon barua)
Date: Mon, 05 Jan 2009 11:06:38 +0600
Subject: dlls/dinput/effect_linuxinput.c: Check return value of
	'write'. (bug # 16413)
In-Reply-To: <b6bb06270901041849o3248013fy8edb99bfb1e136b6@mail.gmail.com>
References: <1231099904.15015.26.camel@toybox> <49613E52.8020501@kievinfo.com>
	<b6bb06270901041849o3248013fy8edb99bfb1e136b6@mail.gmail.com>
Message-ID: <1231131998.22522.5.camel@toybox>

On Sun, 2009-01-04 at 20:49 -0600, Austin English wrote:
> On Sun, Jan 4, 2009 at 4:55 PM, Vitaliy Margolen
> <wine-devel at kievinfo.com> wrote:
> > titon barua wrote:
> >> ---
> >>      /* we don't care about the success or failure of this call */
> >> -    write(*(This->fd), &event, sizeof(event));
> >> +    /* print errors if they occur */
> >> +    if (write(*(This->fd), &event, sizeof(event)) == -1) perror ( NULL );
> > What's the point of your patch? What part of the comment isn't clear to you?
> > Also don't use perror. Wine has ERR(), WARN(), TRACE() macros for that.
> >
> > Vitaliy
> >
> >
> >
> >
> 
> GCC is complaining about the ignored return value.
> 
As the code says /* we dont care */ but gcc prints warnings, is it ok
with just 
"if (write(*(This->fd), &event, sizeof(event)));"

Gcc wont complain and the code is as before?



From Paul.Hampson at Pobox.com  Mon Jan  5 00:33:35 2009
From: Paul.Hampson at Pobox.com (Paul TBBle Hampson)
Date: Mon, 5 Jan 2009 17:33:35 +1100
Subject: MaxVertexBlendMatrices, multi-matrix vertex blending and D3DX
Message-ID: <20090105063335.GA3817@keitarou.watson.bubblesworth.net>

This is a bit of an old topic, but it relates to two active bugs, 8357
(affecting Everquest) and 14608 (affecting Warhammer Online)

The rough summary of the situation is that these two games use d3dx9_30
and d3dx9_34 respectively, and at least the former uses
ConvertToIndexedBlendedMesh.

Anyway, they both show an odd behaviour where if the device caps report
MaxVertexBlendMatrices <= 2 (or <2 maybe) then the d3dx apparently
generates odd behaviour and unrecognised vertex entries, the upshot
being that the character's vertices all end up on the ground at the
model's world transform.

If MaxVertexBlendMatrices is > 2 then the vertices come out fine, and
everything seems to work.

A d3d trace from Warhammer Online indicates that D3DRS_VERTEXBLEND is
only ever set to 0 (only tested up to the character select screen, which
is the first screen where the bug is visible) both with and without
the patch.

From what I understand from here and on MSDN, indexed multimatrix
blending in the fixed function pipeline is generally emulated except on
certain older ATI Radeon cards, so I guess that D3DX
ConvertToIndexedBlended actually ends up emulating the index blending
without actually using the D3DRS_VERTEXBLEND renderstates.

The current workaround is to patch Wine to report MaxVertexBlendMatrices
4, but that will cause bad behaviour in programs that do use the
multimatrix vertex blending, as I understand.

Anyway, what I'm wondering is would it be worth throwing together a
patch that implements the multimatrix blending in drawStridedSlow for
cards that don't support ARB_VERTEX_BLEND (ie all of them under Linux)

If this is sensible, any pointers towards the right thing to do would be
greatly appreciated, this isn't an area I'm massively experienced in.

The only other option I'm aware of is to await the shader-based fixed
function pipeline replacement which might contain an implementation of
the D3DRS_VERTEXBLEND renderstates.

The last time I'm aware of this being discussed was [1], in February
last year.

[1] http://www.winehq.org/pipermail/wine-devel/2008-February/062433.html

-- 
-----------------------------------------------------------
Paul "TBBle" Hampson, B.Sc, LPI, MCSE
Very-later-year Asian Studies student, ANU
The Boss, Bubblesworth Pty Ltd (ABN: 51 095 284 361)
Paul.Hampson at Pobox.com

Of course Pacman didn't influence us as kids. If it did,
we'd be running around in darkened rooms, popping pills and
listening to repetitive music.
 -- Kristian Wilson, Nintendo, Inc, 1989

License: http://creativecommons.org/licenses/by/2.5/au/
-----------------------------------------------------------
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20090105/7119853a/attachment.pgp 

From stefan at codeweavers.com  Mon Jan  5 01:33:24 2009
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Mon, 5 Jan 2009 08:33:24 +0100
Subject: MaxVertexBlendMatrices, multi-matrix vertex blending and D3DX
In-Reply-To: <20090105063335.GA3817@keitarou.watson.bubblesworth.net>
References: <20090105063335.GA3817@keitarou.watson.bubblesworth.net>
Message-ID: <001e01c96f07$e5a1a500$b0e4ef00$@com>

> The only other option I'm aware of is to await the shader-based fixed
> function pipeline replacement which might contain an implementation of
> the D3DRS_VERTEXBLEND renderstates.
I worked on a pipeline replacement using GL_ARB_vertex_program a few months
ago but hit some roadblocks, so I never finished it. The main problem was
that the performance was awful. Even in apps like 3Dmark 2000, which are hit
rather badly by drawStridedSlow it resulted in a net slowdown. I am pretty
sure my code can be optimized(the lighting code is *awful*), but it
certainly complicates things if I have to be really picky wrt performance
from the start to avoid causing regressions.




From robertshearman at gmail.com  Mon Jan  5 04:27:41 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Mon, 5 Jan 2009 10:27:41 +0000
Subject: widl: use base pointer type instead of default if not overwritten.
In-Reply-To: <1231093354.540.203.camel@hermes2.karcher.local>
References: <1231093354.540.203.camel@hermes2.karcher.local>
Message-ID: <1096648c0901050227s3f54c322ned38490ee7d03b11@mail.gmail.com>

2009/1/4 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> diff --git a/tools/widl/proxy.c b/tools/widl/proxy.c
> index f0e3f1d..0e5cbaf 100644
> --- a/tools/widl/proxy.c
> +++ b/tools/widl/proxy.c
> @@ -185,6 +185,11 @@ int needs_null_check(const var_t *v)
>
>      if (type)
>      {
> +      if (type->type == RPC_FC_FP ||
> +          type->type == RPC_FC_OP ||
> +          type->type == RPC_FC_UP)
> +        return 0;
> +
>        attrs = type->attrs;
>        type = type->ref;
>      }

Looks good, although we should always use the type set in the type
object, rather than trying to guess from the attributes. I plan to
clean this up in the near future so you don't need to change the patch
unless you want to.

-- 
Rob Shearman


From robertshearman at gmail.com  Mon Jan  5 04:30:43 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Mon, 5 Jan 2009 10:30:43 +0000
Subject: widl: Make to interfaces RPC_FC_OP instead of RPC_FC_RP
In-Reply-To: <1231093371.540.205.camel@hermes2.karcher.local>
References: <1231093371.540.205.camel@hermes2.karcher.local>
Message-ID: <1096648c0901050230v7c7e525cj97c164d1c0099abe@mail.gmail.com>

2009/1/4 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> This eliminates the wrong null pointer check for pointers to interfaces.

This isn't correct. Object pointers are generated, I believe, in the
case where we have an [in, out] unique pointer, since if the pointer
has been set to NULL the previous memory needs to be freed (on the
client side).

The correct fix for the problem you see is to implement (yet another)
check in cant_be_null.

-- 
Rob Shearman


From titanix88 at gmail.com  Mon Jan  5 05:45:44 2009
From: titanix88 at gmail.com (titon barua)
Date: Mon, 05 Jan 2009 17:45:44 +0600
Subject: dlls/dinput/effect_linuxinput.c: Check return value of
	'write'. (bug # 16413)
In-Reply-To: <1231141656.540.208.camel@hermes2.karcher.local>
References: <1231099904.15015.26.camel@toybox> <49613E52.8020501@kievinfo.com>
	<b6bb06270901041849o3248013fy8edb99bfb1e136b6@mail.gmail.com>
	<1231131998.22522.5.camel@toybox>
	<1231141656.540.208.camel@hermes2.karcher.local>
Message-ID: <1231155944.19485.2.camel@toybox>

On Mon, 2009-01-05 at 08:47 +0100, Michael Karcher wrote:
> Am Montag, den 05.01.2009, 11:06 +0600 schrieb titon barua:
> > > GCC is complaining about the ignored return value.
> > > 
> > As the code says /* we dont care */ but gcc prints warnings, is it ok
> > with just 
> > "if (write(*(This->fd), &event, sizeof(event)));"
> > 
> > Gcc wont complain and the code is as before?
> 
> what about
>  (void)write(*(This->fd), &event, sizeof(event));
> 
> Does that work to? Seems nicer than the if.
> 
> Regards,
>   Michael Karcher
Compiler warning remains. 



From damjan.jov at gmail.com  Mon Jan  5 06:27:09 2009
From: damjan.jov at gmail.com (Damjan Jovanovic)
Date: Mon, 5 Jan 2009 14:27:09 +0200
Subject: dlls/dinput/effect_linuxinput.c: Check return value of 'write'.
	(bug # 16413)
In-Reply-To: <1231155944.19485.2.camel@toybox>
References: <1231099904.15015.26.camel@toybox> <49613E52.8020501@kievinfo.com>
	<b6bb06270901041849o3248013fy8edb99bfb1e136b6@mail.gmail.com>
	<1231131998.22522.5.camel@toybox>
	<1231141656.540.208.camel@hermes2.karcher.local>
	<1231155944.19485.2.camel@toybox>
Message-ID: <9e89675b0901050427k41661075p18e1e61e6b77f5ee@mail.gmail.com>

On Mon, Jan 5, 2009 at 1:45 PM, titon barua <titanix88 at gmail.com> wrote:
> On Mon, 2009-01-05 at 08:47 +0100, Michael Karcher wrote:
>> Am Montag, den 05.01.2009, 11:06 +0600 schrieb titon barua:
>> > > GCC is complaining about the ignored return value.
>> > >
>> > As the code says /* we dont care */ but gcc prints warnings, is it ok
>> > with just
>> > "if (write(*(This->fd), &event, sizeof(event)));"
>> >
>> > Gcc wont complain and the code is as before?
>>
>> what about
>>  (void)write(*(This->fd), &event, sizeof(event));
>>
>> Does that work to? Seems nicer than the if.
>>
>> Regards,
>>   Michael Karcher
> Compiler warning remains.
>

ssize_t ignored;
...
ignored = write(*(This->fd), &event, sizeof(event));

You could make the ignored variable static, maybe even global.

Damjan


From julliard at winehq.org  Mon Jan  5 06:27:09 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 05 Jan 2009 13:27:09 +0100
Subject: widl: Also arrays need NULL pointer checks.
In-Reply-To: <1231024842.540.186.camel@hermes2.karcher.local> (Michael
	Karcher's message of "Sun, 04 Jan 2009 00:20:42 +0100")
References: <1231024842.540.186.camel@hermes2.karcher.local>
Message-ID: <87ljtq3plu.fsf@wine.dyndns.org>

Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> writes:

> This is still not complete. No NULL pointer checks are emitted for parameters
> that are aliases to pointers or arrays.

This adds checks in places where midl doesn't have them. It breaks the
service tests for instance.

-- 
Alexandre Julliard
julliard at winehq.org


From dank at kegel.com  Mon Jan  5 08:10:05 2009
From: dank at kegel.com (Dan Kegel)
Date: Mon, 5 Jan 2009 06:10:05 -0800
Subject: bugzilla/appdb hung <EOT>
Message-ID: <a71bd89a0901050610l24deb66ep3c5b882bfecbbc42@mail.gmail.com>




From dank at kegel.com  Mon Jan  5 08:42:21 2009
From: dank at kegel.com (Dan Kegel)
Date: Mon, 5 Jan 2009 06:42:21 -0800
Subject: dlls/dinput/effect_linuxinput.c: Check return value of 'write'.
	(bug # 16413)
In-Reply-To: <a71bd89a0901041906w601666d4me815918c9231771@mail.gmail.com>
References: <a71bd89a0901041906w601666d4me815918c9231771@mail.gmail.com>
Message-ID: <a71bd89a0901050642w28479869vde6c95ed20bbf003@mail.gmail.com>

Damjan wrote:
>ssize_t ignored;
>...
>ignored = write(*(This->fd), &event, sizeof(event));
>
>You could make the ignored variable static, maybe even global.

Please don't.  We don't want to ignore the errors,
we want to handle them.  The changes you're
proposing are harmful to readability.  Better
to ignore the compiler warnings than to
paper them over like that.


From damjan.jov at gmail.com  Mon Jan  5 08:45:35 2009
From: damjan.jov at gmail.com (Damjan Jovanovic)
Date: Mon, 5 Jan 2009 16:45:35 +0200
Subject: dlls/dinput/effect_linuxinput.c: Check return value of 'write'.
	(bug # 16413)
In-Reply-To: <a71bd89a0901050642w28479869vde6c95ed20bbf003@mail.gmail.com>
References: <a71bd89a0901041906w601666d4me815918c9231771@mail.gmail.com>
	<a71bd89a0901050642w28479869vde6c95ed20bbf003@mail.gmail.com>
Message-ID: <9e89675b0901050645n1521ca3eq6992bc74a3d3f7a6@mail.gmail.com>

On Mon, Jan 5, 2009 at 4:42 PM, Dan Kegel <dank at kegel.com> wrote:
> Damjan wrote:
>>ssize_t ignored;
>>...
>>ignored = write(*(This->fd), &event, sizeof(event));
>>
>>You could make the ignored variable static, maybe even global.
>
> Please don't.  We don't want to ignore the errors,
> we want to handle them.  The changes you're
> proposing are harmful to readability.  Better
> to ignore the compiler warnings than to
> paper them over like that.
>

I agree in general, but you probably missed the comment above the write():
/* we don't care about the success or failure of this call */


Damjan


From julliard at winehq.org  Mon Jan  5 09:41:21 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 05 Jan 2009 16:41:21 +0100
Subject: [1/2] sfc: Export by ordinal and add missing exports.
In-Reply-To: <200901051600.57946.hans@codeweavers.com> (Hans Leidekker's
	message of "Mon, 5 Jan 2009 16:00:57 +0100")
References: <200901051600.57946.hans@codeweavers.com>
Message-ID: <87eizh4v6m.fsf@wine.dyndns.org>

Hans Leidekker <hans at codeweavers.com> writes:

> SfcIsKeyProtected is not exported from my copy of sfc.dll. I think
> it was added by mistake in commit 7dbe9a6728064172a9d9edac484f90c421156785.

It's exported on Vista. Also please don't make up names for ordinal
functions, use anonymous entry points ('@') until we find out the real
name.

-- 
Alexandre Julliard
julliard at winehq.org


From karcher at physik.fu-berlin.de  Mon Jan  5 01:47:36 2009
From: karcher at physik.fu-berlin.de (Michael Karcher)
Date: Mon, 05 Jan 2009 08:47:36 +0100
Subject: dlls/dinput/effect_linuxinput.c: Check return value of
	'write'. (bug # 16413)
In-Reply-To: <1231131998.22522.5.camel@toybox>
References: <1231099904.15015.26.camel@toybox> <49613E52.8020501@kievinfo.com>
	<b6bb06270901041849o3248013fy8edb99bfb1e136b6@mail.gmail.com>
	<1231131998.22522.5.camel@toybox>
Message-ID: <1231141656.540.208.camel@hermes2.karcher.local>

Am Montag, den 05.01.2009, 11:06 +0600 schrieb titon barua:
> > GCC is complaining about the ignored return value.
> > 
> As the code says /* we dont care */ but gcc prints warnings, is it ok
> with just 
> "if (write(*(This->fd), &event, sizeof(event)));"
> 
> Gcc wont complain and the code is as before?

what about
 (void)write(*(This->fd), &event, sizeof(event));

Does that work to? Seems nicer than the if.

Regards,
  Michael Karcher
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20090105/5af7ff5e/attachment.pgp 

From normandy at web.de  Mon Jan  5 08:13:58 2009
From: normandy at web.de (John Haywards)
Date: Mon, 5 Jan 2009 14:13:58 +0000 (UTC)
Subject: bugzilla/appdb hung <EOT>
References: <a71bd89a0901050610l24deb66ep3c5b882bfecbbc42@mail.gmail.com>
Message-ID: <gjt4j6$l2o$1@ger.gmane.org>

On Mon, 05 Jan 2009 06:10:05 -0800, Dan Kegel wrote:

      Warning: mysql_connect() [function.mysql-connect]: User winehq 
already has more than 'max_user_connections' active connections in /home/
winehq/opt/appdb/include/query.php on line 82
      Database error, please try again soon: User winehq already has more 
than 'max_user_connections' active connections

At this moment...



From the3dfxdude at gmail.com  Mon Jan  5 11:43:45 2009
From: the3dfxdude at gmail.com (Jesse Allen)
Date: Mon, 5 Jan 2009 10:43:45 -0700
Subject: Testing DIB Engine (second part)
In-Reply-To: <gjktpm$3lk$1@ger.gmane.org>
References: <girve8$t7k$1@ger.gmane.org>
	<f5d9424f0812232336x1656e83ega0d5058de0384b48@mail.gmail.com>
	<gjkqug$rfb$1@ger.gmane.org> <20090102111129.258640@gmx.net>
	<gjktpm$3lk$1@ger.gmane.org>
Message-ID: <530468570901050943w6a978540y66b34f28d47d524f@mail.gmail.com>

On Fri, Jan 2, 2009 at 4:28 AM, Massimo Del Fedele <max at veneto.com> wrote:
> Roderick Colenbrander ha scritto:
>>> I haven't still any clue if the way I started the DIB engine has the
>>> correct approach, I mean if I should follow this way with the hope to
>>> have it included in  main tree or not.... Can please somebody tell me
>>> something about ?
>>>
>>> Ciao
>>>
>>> Max
>>>
>>
>> I would recommend you to visit #winehackers and start asking there. AJ is there too. I believe it was mentioned at WineConf that also Jesse his design wasn't good.
>>
>> Roderick
>
> Well, my design is a mix between Jesse's and Huw's ones, more the latter
> than the former. BTW, both designs are similars in concept.
> Well.... I'll wait for some more suggestions :-)
> Thank you for answer
>
> Ciao
>
> Max
>
>
>
>


If there is a discussion on this, let me know. I have limited internet
access for the next two weeks, so I won't be able to do much
currently. No one gave me any input on the project besides Huw, and
having both versions of code being so similar doesn't really tell me
much. Max was able to understand and fix bugs using both versions so
that is a good sign.

Jesse


From madewokherd+8cd9 at gmail.com  Mon Jan  5 14:44:50 2009
From: madewokherd+8cd9 at gmail.com (Vincent Povirk)
Date: Mon, 5 Jan 2009 14:44:50 -0600
Subject: oleaut32: Only dump the EMF if tracing fixmes for the ole channel.
In-Reply-To: <alpine.DEB.1.10.0901052009290.18344@amboise.dolphin>
References: <alpine.DEB.1.10.0901052009290.18344@amboise.dolphin>
Message-ID: <ced95fe0901051244l6e4c9e80kbc9067b2fa2c7037@mail.gmail.com>

> +    if (FIXME_ON(ole))
> +    {
> +        FIXME("Unknown magic %04x, %d read bytes:\n",magic,xread);
> +        hr=E_FAIL;

This changes the behavior of the call based on what debug channels are
enabled. I don't think you want to do that.


From leslie_alistair at hotmail.com  Mon Jan  5 18:26:44 2009
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Tue, 6 Jan 2009 11:26:44 +1100
Subject: wow32: add -noname property to WOWGetDescriptor spec
Message-ID: <BAY117-W51BAABD0B989DE5CF4685E93DE0@phx.gbl>


Hi,
 
> diff --git a/dlls/wow32/wow32.spec b/dlls/wow32/wow32.spec
> index 227120b..4d2d6d1 100644
> --- a/dlls/wow32/wow32.spec
> +++ b/dlls/wow32/wow32.spec
> @@ -1,5 +1,5 @@
>  # ordinal exports
> -1 stdcall WOWGetDescriptor(long long)
> +1 stdcall -nonanme WOWGetDescriptor(long long)
 
spelling mistake.


Best Regards

Alistair Leslie-Hughes
_________________________________________________________________
Net yourself a bargain. Find great deals on eBay.
http://a.ninemsn.com.au/b.aspx?URL=http%3A%2F%2Frover%2Eebay%2Ecom%2Frover%2F1%2F705%2D10129%2D5668%2D323%2F4%3Fid%3D10&_t=763807330&_r=hotmailTAGLINES&_m=EXT

From fox.box at gmail.com  Mon Jan  5 16:51:21 2009
From: fox.box at gmail.com (=?ISO-8859-1?Q?Bj=F6rn_Krombholz?=)
Date: Mon, 5 Jan 2009 23:51:21 +0100
Subject: AppDB: Rating / Patching
Message-ID: <cf3b5b1d0901051451r6499e182hc2c16343b486632c@mail.gmail.com>

Hi,

I started a discussion inside AppDB about the in my eyes "strange"
Gold rating of Fallout 3 (it's actually just an example, other entries
suffer the same problems). I know there was a discussion about the
rating on this list last month, but as far as I could see my
particular issue wasn't covered and I only just subscribed. So here
goes a new thread.

The appdb thread [1] is included below (prevent OT-cleanup deletion
inside appdb). I don't expect anyone to read it completely, but I
didn't want to repeat every argument again either. ;)

The basic point is: Fallout 3 (a game) only works with a small -- but
nevertheless -- patch, otherwise it will crash, no matter what
dll-overrides/settings/3rd-party apps.

From how I understand the wording in [2], an app that requires a patch
to run, can't get a gold rating. In fact, if there is no way to get it
working in a vanilla wine release, then there is no other option than
"Garbage" IMO. The various arguments for that assumption (possible
breaking of other apps run by the same wine installation, regression
tracking, etc.) are in the quote below.

The maintainer tried to convince me that a gold rating is valid,
because Fallout 3 works great with the patch applied. Well obviously
he failed, and the discussion went away from Fallout in particular to
a more general interpretation of [2]. I'm neither saying I'm right and
he's wrong, nor the other way around. IMO both interpretation can be
valid, depending on how you read "some DLL overrides, other settings
or third party software."


My suggestion now would be:
* Clarify the wording on what "other settings" really means (my
interpretation is mainly registry modifications with winecfg and/or
regedit).

* Add an explicit statement about patched wine versions. Something like:
 - Any application that requires a patched wine to run MUST NOT be
rated higher than "Garbage"
(or whatever rating was intended for this situation).

[1] http://appdb.winehq.org/objectManager.php?sClass=version&iId=14322#Comment-44631
[2] http://appdb.winehq.org/help/?sTopic=maintainer_ratings


Bj?rn



==== Copy from AppDB discussion [1] below ====

Bj?rn Krombholz on Monday January 5th 2009, 10:10:
Hi,

I don't understand the recent ratings. I've played the game a lot
under Windows and with various versions of wine, using all kinds of
different tweaks and settings the game itself and wine offer. It runs
pretty well and it's become even better (meaning faster) since 1.11
(no evidence, could be caused by a driver update as well).

Nevertheless, as far as I can see, noone has ever managed to get past
menu + the loading screen without at least applying the D3D patch
attached to [1], that allows setting the VideoDescription and
VideoDriver in the registry. For flawless mouse interaction, you also
need the mouse hack from [2].

Considering these 2 as a fact (please correct me, if there actually is
a way to run it without patches), how can it ever be rated higher than
"Garbage"? My understanding of the ratings are, that they offer a
quick hint on what you are able to run (nearly) without problems,
while the discussion and howto sections deal with "broken" stuff and
tell a user, how he might be able to run an app/game despite the
garbage state.

[1] http://bugs.winehq.org/show_bug.cgi?id=15839
[2] http://bugs.winehq.org/show_bug.cgi?id=6971

-----

RE: Rating / Patching
by Tymoteusz Paul on Monday January 5th 2009, 10:20
Let me explain you how ranking system works, because you seem to have
it confused.
As expalined in
http://appdb.winehq.org/help/?sTopic=maintainer_ratings gold/silver
rating is ok as long as you can use it for it's purpose. All you have
to do is override couple dlls and settings and then the game is
working pretty much flawlessy.
Garbage rating would be then if it was impossible to play the game.

Ratings as is provide good info about the game, if you see that its
rated as gold - then you are safe to buy it for linux playig, it may
take some work to get it work but it will work and will be playable.
Only rating that fits your description "hint on what you are able to
run (nearly) without problems" fits platinum rating, which this game
didn't get so far.

Hope this will be more clear for you now.

-----

RE: Rating / Patching
by Bj?rn Krombholz on Monday January 5th 2009, 14:08
I was referring to this help text as well, although I read it differently. ;)

In any vanilla/clean release version of wine, Fallout 3 won't run. You
get the menu, can change settings, but when you start the game to play
("purpose it was designed") it crashes, even "with some DLL overrides,
other settings or third party software" you install in wine. =>
Garbage rating.

Let's imagine the small driver patch in bug 15839 was applied to the
development tree and so released with 1.1.13. The game would become
playable with one major "issue". No matter what settings you
change/etc. the mouse is either always stuck in the middle of the
screen or it gets stuck at the screen edges (bug 9671). => Bronze
rating for wine >= 1.1.13.
Maybe even Silver, as it might work very well with a different kind of
controller like a gamepad.

Now the mouse bug gets fixed in 1.1.x. Suddenly all you need to do is
to override some (actually just one) dlls and tweak some settings to
make it enjoyable. => Silver (in case you consider Live functionality
an important part of the program) or Gold rating.

Eventually someone adds the d3dx9_38.dll to wine and the DeviceDriver
+ DeviceDescription settings will be automatically detected by wine.
That means the game works flawlessly without touching any wine
setting. => Platinum rating.


IMO this makes sense, otherwise a version 1.1.x gold app, wouldn't be
downgradable in its rating for 1.1.x+1 (in case version x+1 introduced
a regression that breaks this app); because all you had to do to make
it work again is unapply the faulty patch.


In addition to that, users wouldn't be encouraged to file a bug report
if there is source-patch that upgrades it to gold anyway.


Anyway, I don't care much about which interpretation should be used, I
just want it to be more consistent. As you can see in the reports
history Fallout 3 people rated in both ways. E.g., the newest one
voting gold, because it works great after patching according to the
HOWTO; http://appdb.winehq.org/objectManager.php?sClass=version&iId=14322&iTestingId=33522
rating "Garbage" because "Mouse is borked and gameplay is impossible
without patches.

Which would be the best way to ask for a more indisputable explanation
on the help page? Filing a bug report against appdb or using the
"Email Us" link at the right, or ...?

-----

RE: Rating / Patching
by Rados?aw Ciechowski on Monday January 5th 2009, 15:15
Gold is for apps that "Works flawlessly with DLL overrides, third
party software or other settings" so if Fallout 3 is working without
bugs after applaying patches, dll-s and other settings it should be
rated Gold. If there was no way to get it working or there were lots
of bugs after all tweaks, then it could be rated Garbage. If game
works flawlessly then no matter how mamy things you have to do, it can
be rated Gold which makes sense for me. There is no sense in rating
apps Garbage when they can work flawlessly ! Also there is already
rating system which we are using (
http://appdb.winehq.org/help/?sTopic=maintainer_ratings ) and changing
it now wouldnt be a good idea.

-----

RE: Rating / Patching
by Bj?rn Krombholz on Monday January 5th 2009, 15:55
> Gold is for apps that "Works flawlessly with DLL overrides, third party software or other settings" <

Indeed, that's what I'm saying. But applying a patch to the wine
source and recompiling it -- which effectively makes it some
_different_ version than the _release_ version you are supposed to
rate -- is neither of those 3.

- "DLL override": installing a custom DLL into $WINEPREFIX and adding
the override)
- "third party software": installing additional software into
$WINEPREFIX that is needed and expected by the app you want to run
- "other settings": tweak the wine registry and similar configuration


None of these change the wine version, any such change would still be
a "wine 1.1.x", while patches like the mouse patch might even break
other software even if those are installed in a different $WINEPREFIX,
because the binary changed and it's behaviour is different from the
official release.

You can't say "A is running well on wine 1.1.x", if in fact it is
running well on wine 1.1.x+patch, while it actually breaks on wine
1.1.x.


And yes, as I already said, there is a help page for the rating
system. I don't ask to change, but to clarify it, as at the moment
people are rating differently depending on their interpretation.


This has become OT on this page - I will try to move it to the -devel list. :)

From jjmckenzie51 at earthlink.net  Mon Jan  5 19:00:04 2009
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Mon, 05 Jan 2009 18:00:04 -0700
Subject: AppDB: Rating / Patching
In-Reply-To: <cf3b5b1d0901051451r6499e182hc2c16343b486632c@mail.gmail.com>
References: <cf3b5b1d0901051451r6499e182hc2c16343b486632c@mail.gmail.com>
Message-ID: <4962AD14.1050502@earthlink.net>

Bj?rn Krombholz wrote:
> Hi,
>
> I started a discussion inside AppDB about the in my eyes "strange"
> Gold rating of Fallout 3 (it's actually just an example, other entries
> suffer the same problems). I know there was a discussion about the
> rating on this list last month, but as far as I could see my
> particular issue wasn't covered and I only just subscribed. So here
> goes a new thread.
>
> The appdb thread [1] is included below (prevent OT-cleanup deletion
> inside appdb). I don't expect anyone to read it completely, but I
> didn't want to repeat every argument again either. ;)
>
> The basic point is: Fallout 3 (a game) only works with a small -- but
> nevertheless -- patch, otherwise it will crash, no matter what
> dll-overrides/settings/3rd-party apps.
>
> >From how I understand the wording in [2], an app that requires a patch
> to run, can't get a gold rating. In fact, if there is no way to get it
> working in a vanilla wine release, then there is no other option than
> "Garbage" IMO. The various arguments for that assumption (possible
> breaking of other apps run by the same wine installation, regression
> tracking, etc.) are in the quote below.
>
> The maintainer tried to convince me that a gold rating is valid,
> because Fallout 3 works great with the patch applied. Well obviously
> he failed, and the discussion went away from Fallout in particular to
> a more general interpretation of [2]. I'm neither saying I'm right and
> he's wrong, nor the other way around. IMO both interpretation can be
> valid, depending on how you read "some DLL overrides, other settings
> or third party software."
>
>
> My suggestion now would be:
> * Clarify the wording on what "other settings" really means (my
> interpretation is mainly registry modifications with winecfg and/or
> regedit).
>
> * Add an explicit statement about patched wine versions. Something like:
>  - Any application that requires a patched wine to run MUST NOT be
> rated higher than "Garbage"
> (or whatever rating was intended for this situation).
>
> [1] http://appdb.winehq.org/objectManager.php?sClass=version&iId=14322#Comment-44631
> [2] http://appdb.winehq.org/help/?sTopic=maintainer_ratings
>
>
> Bj?rn
>
>   
Here is the rating system as I see it and most others:

Platinum:  -- ALL functions are as they are in Windows with maybe minor 
usage difficulties WITHOUT change to Wine.

Gold --  ALL functions work as they do in Windows with only replacement 
of known broken dynamically linked library files.   No code changes are 
acceptable.  Patches, unless accepted by AJ, are not a reason to rate a 
program with this status.

Silver -- MAJOR functions work as they do in Windows with only 
replacement of known broken dlls. 

Garbage -- Program does not function with Wine even if broken dlls are 
replaced.  Needs major patching and/or repair work.

Sounds like you have the right opinion, the program should be rated 
Garbage as it does not work with Wine, even upon replacement of broken dlls.

James McKenzie



From jeffzaroyko at gmail.com  Mon Jan  5 19:09:58 2009
From: jeffzaroyko at gmail.com (Jeff Zaroyko)
Date: Tue, 6 Jan 2009 12:09:58 +1100
Subject: AppDB: Rating / Patching
In-Reply-To: <cf3b5b1d0901051451r6499e182hc2c16343b486632c@mail.gmail.com>
References: <cf3b5b1d0901051451r6499e182hc2c16343b486632c@mail.gmail.com>
Message-ID: <f5d9424f0901051709j70a37dc4p6db16f2af2526c8c@mail.gmail.com>

2009/1/6 Bj?rn Krombholz <fox.box at gmail.com>:
> Hi,
>
> I started a discussion inside AppDB about the in my eyes "strange"
> Gold rating of Fallout 3

--snip--

> The basic point is: Fallout 3 (a game) only works with a small -- but
> nevertheless -- patch, otherwise it will crash, no matter what
> dll-overrides/settings/3rd-party apps.
-- snip --
> From how I understand the wording in [2], an app that requires a patch
> to run, can't get a gold rating. In fact, if there is no way to get it
> working in a vanilla wine release, then there is no other option than
> "Garbage" IMO. The various arguments for that assumption (possible
> breaking of other apps run by the same wine installation, regression
> tracking, etc.) are in the quote below.

That's simply not true...

Gold means you're either using native dlls, have modified the program
by patching it with nocd or you've modified Wine to make it work, ie
there is a work around that makes the application work flawlessly.
There's no reason to exclude modifying Wine, you are empowered to
change it as you see fit since it's free software.

-Jeff


From kde at graph-ix.net  Mon Jan  5 21:10:51 2009
From: kde at graph-ix.net (Markus)
Date: Mon, 5 Jan 2009 22:10:51 -0500
Subject: Implementing b3DAccelerationExists and b3DAccelerationEnabled in
	dxdiagn
Message-ID: <200901052210.51639.kde@graph-ix.net>

Hello,

can anyone tell me where to find information about the b3DAccelerationExists 
and b3DAccelerationEnabled properties in the display container returned by 
dxdiagn.dll and when they are supposed to be false or true?
In fact, MSDN does not seem to provide information about any of the properties 
returned by that dll.

Thanks,
-- 
Markus


From sparr0 at gmail.com  Mon Jan  5 21:18:25 2009
From: sparr0 at gmail.com (Sparr)
Date: Mon, 5 Jan 2009 22:18:25 -0500
Subject: AppDB: Rating / Patching
In-Reply-To: <f5d9424f0901051709j70a37dc4p6db16f2af2526c8c@mail.gmail.com>
References: <cf3b5b1d0901051451r6499e182hc2c16343b486632c@mail.gmail.com>
	<f5d9424f0901051709j70a37dc4p6db16f2af2526c8c@mail.gmail.com>
Message-ID: <811b48bd0901051918t55f28d1ek9e479dd94354d034@mail.gmail.com>

On Mon, Jan 5, 2009 at 8:09 PM, Jeff Zaroyko <jeffzaroyko at gmail.com> wrote:
> 2009/1/6 Bj?rn Krombholz <fox.box at gmail.com>:
> Gold means [...] you've modified Wine to make it work, ie
> there is a work around that makes the application work flawlessly.
> There's no reason to exclude modifying Wine, you are empowered to
> change it as you see fit since it's free software.

This point is where the disagreement lies.  Let me be very specific.
The argument here is not that patches should disqualify Gold ratings.
It is that patches change the version of wine that you are running.
Specifically, the people giving "Fallout 3 on wine 1.1.12" a Gold
rating are not actually running wine 1.1.12, they are running wine
[snapshot/git]+patch.  "Fallout 3 on wine [snapshot/git]+patch"
deserves a Gold rating.  "Fallout 3 on wine 1.1.12" deserves a Garbage
rating, because it Does Not Work no matter what you change within the
confines of wine 1.1.12.


From jjmckenzie51 at earthlink.net  Mon Jan  5 22:07:53 2009
From: jjmckenzie51 at earthlink.net (James McKenzie)
Date: Mon, 05 Jan 2009 21:07:53 -0700
Subject: AppDB: Rating / Patching
In-Reply-To: <f5d9424f0901051709j70a37dc4p6db16f2af2526c8c@mail.gmail.com>
References: <cf3b5b1d0901051451r6499e182hc2c16343b486632c@mail.gmail.com>
	<f5d9424f0901051709j70a37dc4p6db16f2af2526c8c@mail.gmail.com>
Message-ID: <4962D919.2090600@earthlink.net>

Jeff Zaroyko wrote:
> Gold means you're either using native dlls, have modified the program
> by patching it with nocd or you've modified Wine to make it work, ie
> there is a work around that makes the application work flawlessly.
> There's no reason to exclude modifying Wine, you are empowered to
> change it as you see fit since it's free software.
>
>   
I'm siding with Bjoern on this one:  If the patch is outside of the Wine 
tree, it is not Gold, it's Garbage.  If you can 'fix it' with a native 
dll(s) then it is Gold IF and only IF all functions work.  For instance, 
e-Sword, which is the only real reason I'm using Wine, has to have 
riched20.dll and riched32.dll in order to display text.  Graphics do not 
display.  It is NOT Gold, but Silver.  Yes, you can display text without 
it, but you cannot input text for Notes or Topic Notes, which is what I 
consider a major function.  The ability to display maps is not, as you 
can view them with a different, native, application.
Now, the story changes if the patch is conforming and has been accepted 
by AJ and is pending the next development release.

James McKenzie



From dank at kegel.com  Mon Jan  5 23:35:45 2009
From: dank at kegel.com (Dan Kegel)
Date: Mon, 5 Jan 2009 21:35:45 -0800
Subject: Updated wine64 page
Message-ID: <a71bd89a0901052135g6d64dfa9rfb4e1b8a78afa45f@mail.gmail.com>

I updated
http://wiki.winehq.org/Wine64
to no longer recommend pulling from Maarten's tree,
since doing so made the instructions more complex, and
the main tree does just about as good at
passing conformance tests (maybe modulo a hang or two).
- Dan


From fgouget at free.fr  Tue Jan  6 02:23:47 2009
From: fgouget at free.fr (Francois Gouget)
Date: Tue, 6 Jan 2009 09:23:47 +0100 (CET)
Subject: Functions that should be static
In-Reply-To: <200812211048.38333.kai.blin@gmail.com>
References: <alpine.DEB.1.10.0812180944001.3453@amboise.dolphin>
	<200812211048.38333.kai.blin@gmail.com>
Message-ID: <alpine.DEB.1.10.0901060914360.20777@amboise.dolphin>

On Sun, 21 Dec 2008, Kai Blin wrote:

> On Thursday 18 December 2008 10:09:02 Francois Gouget wrote:
> 
> > dlls/secur32/secur32.dll.so: SECUR32_initNegotiateSP
> 
> This function would (and at some point did) register the Negotiate security 
> provider. It's not called right now because the provider is not implemented 
> and registering it broke some applications.

I see it's called in secur32.c (in an #if 0) and implemented in 
negotiate.c. So I have added it to the ignore list so my script does not 
complain about it. As long as when all is finished we're sure that it 
will be referenced in more than one file, then it's ok to ignore it for 
now.


> > dlls/secur32/secur32.dll.so: SECUR32_strdupW
> 
> This should be used by functions like e.g. QueryContextAttributesW. It's just 
> that we cheat and not implement the parts of that function that need to 
> allocate strings yet.

Same thing.

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
The nice thing about meditation is that it makes doing nothing quite respectable
                                  -- Paul Dean


From fgouget at free.fr  Tue Jan  6 02:35:29 2009
From: fgouget at free.fr (Francois Gouget)
Date: Tue, 6 Jan 2009 09:35:29 +0100 (CET)
Subject: Functions that should be static
In-Reply-To: <gilq2f$83h$1@ger.gmane.org>
References: <alpine.DEB.1.10.0812180944001.3453@amboise.dolphin>
	<gilq2f$83h$1@ger.gmane.org>
Message-ID: <alpine.DEB.1.10.0901060932360.20777@amboise.dolphin>

On Sun, 21 Dec 2008, Andrew Talbot wrote:
[...]
> The dlls/advapi32/svcctl_c.c: svcctl_*() functions are peculiar, too. They
> look like they need to be exported in some manner.

My script already detects that svcctl_c.c was generated from svcctl.idl 
and thus won't complain about any of the functions it defines:

 * for _c.c and _s.c files all functions get a free pass
   (see $idl_cs in the script)
 * for _p.c filesm only the _Proxy and _Stub functions get a free pass
   (see $idl_proxt in the script)

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                         Stolen from an Internet user:
              "f u cn rd ths, u cn gt a gd jb n cmptr prgrmmng !"


From wine.dev at web.de  Tue Jan  6 02:58:27 2009
From: wine.dev at web.de (Detlef Riekenberg)
Date: Tue, 06 Jan 2009 09:58:27 +0100
Subject: Implementing b3DAccelerationExists and b3DAccelerationEnabled
	in dxdiagn
In-Reply-To: <200901052210.51639.kde@graph-ix.net>
References: <200901052210.51639.kde@graph-ix.net>
Message-ID: <1231232307.10108.10.camel@p4.lan>

On Mo, 2009-01-05 at 22:10 -0500, Markus wrote:

> can anyone tell me where to find information about the b3DAccelerationExists 
> and b3DAccelerationEnabled properties in the display container returned by 

I suggest to use dxdiag and regmon on Windows.
In dxdiag, you can disable DirectDraw / Direct3D Acceleration.
Regmon will tell you, where the settings are saved.


-- 
 
By by ... Detlef




From fgouget at free.fr  Tue Jan  6 03:22:17 2009
From: fgouget at free.fr (Francois Gouget)
Date: Tue, 6 Jan 2009 10:22:17 +0100 (CET)
Subject: Unused function in winhttp
Message-ID: <alpine.DEB.1.10.0901061016550.20777@amboise.dolphin>


Hi,

In the following commit you added the netconn_set_timeout() function to 
net.c. However today it is unused. Is there any plan to use it? Is it 
still relevant?


  commit 266c4b2c046b334ca44cdc1826c4434625dcb29f
  Author: Hans Leidekker <hans at codeweavers.com>
  Date:   Tue Aug 26 11:03:19 2008 +0200

      winhttp: Add networking infrastructure.


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
    I haven't lost my mind, it's backed up on tape around here somewhere...


From hans at codeweavers.com  Tue Jan  6 03:36:39 2009
From: hans at codeweavers.com (Hans Leidekker)
Date: Tue, 6 Jan 2009 10:36:39 +0100
Subject: Unused function in winhttp
In-Reply-To: <alpine.DEB.1.10.0901061016550.20777@amboise.dolphin>
References: <alpine.DEB.1.10.0901061016550.20777@amboise.dolphin>
Message-ID: <200901061036.40872.hans@codeweavers.com>

On Tuesday 06 January 2009 10:22:17 Francois Gouget wrote:

> In the following commit you added the netconn_set_timeout() function to 
> net.c. However today it is unused. Is there any plan to use it? Is it 
> still relevant?

Yes, it should be called from WinHttpSetTimeouts at some point.

 -Hans


From kgbricola at web.de  Tue Jan  6 05:02:23 2009
From: kgbricola at web.de (=?ISO-8859-15?Q?Rico_Sch=FCller?=)
Date: Tue, 06 Jan 2009 12:02:23 +0100
Subject: wined3d: Fix a memory leak in compile_state_table()
In-Reply-To: <d75158870901051634u11a9d368l64cabc79b924a306@mail.gmail.com>
References: <d75158870901051634u11a9d368l64cabc79b924a306@mail.gmail.com>
Message-ID: <49633A3F.5090109@web.de>

Allan Tong schrieb:
> Wrong pointer was being passed to HeapFree.
>
>  - Allan
>   
>   
Why did you remove these two lines? Was this your intention?
-                    dev_multistate_funcs[cur[i].state][0] = 
multistate_funcs[cur[i].state][0];
-                    dev_multistate_funcs[cur[i].state][1] = 
multistate_funcs[cur[i].state][1];

Cheers
Rico


From fgouget at free.fr  Tue Jan  6 04:11:09 2009
From: fgouget at free.fr (Francois Gouget)
Date: Tue, 6 Jan 2009 11:11:09 +0100 (CET)
Subject: Unused function in quartz
Message-ID: <alpine.DEB.1.10.0901061107210.20777@amboise.dolphin>


Hi,

In the following commit you added the OutputPin_DeliverNewSegment() 
function to pin.c. However today it is unused. Is there any plan to use 
it? Is it still relevant?

  commit 0a6f11c88a8da49d80e4e7d8a0236ae4b36926b7
  Author: Robert Shearman <R.J.Shearman at warwick.ac.uk>
  Date:   Thu Sep 25 23:50:06 2003 +0000

      - A few cosmetic fixes.
      - Various bug fixes.
      - Add some OutputPin helpers.
      - Add a new type of pin, PullPin.

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                  In a world without fences who needs Gates?


From hverbeet at gmail.com  Tue Jan  6 04:51:54 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Tue, 6 Jan 2009 11:51:54 +0100
Subject: wined3d: Fix a memory leak in compile_state_table()
In-Reply-To: <49633A3F.5090109@web.de>
References: <d75158870901051634u11a9d368l64cabc79b924a306@mail.gmail.com>
	<49633A3F.5090109@web.de>
Message-ID: <d658b69e0901060251s1c50b168yb8402e2b6a02d0ce@mail.gmail.com>

2009/1/6 Rico Sch?ller <kgbricola at web.de>:
> Allan Tong schrieb:
>> Wrong pointer was being passed to HeapFree.
>>
>>  - Allan
>>
>>
> Why did you remove these two lines? Was this your intention?
> -                    dev_multistate_funcs[cur[i].state][0] =
> multistate_funcs[cur[i].state][0];
> -                    dev_multistate_funcs[cur[i].state][1] =
> multistate_funcs[cur[i].state][1];
>
Because HeapReAlloc() should already take care of any copying, if
needed. Using HeapReAlloc() without checking the result first isn't
safe of course, but neither was the original code.

From robertshearman at gmail.com  Tue Jan  6 06:51:45 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 6 Jan 2009 12:51:45 +0000
Subject: [shell32/tests 1/2] ILFree() is only exported by ordinal on Win9x
In-Reply-To: <496313BE.1020402@gmail.com>
References: <496313BE.1020402@gmail.com>
Message-ID: <1096648c0901060451p527608cu479b7e5d739593ae@mail.gmail.com>

2009/1/6 Paul Vriens <paul.vriens.wine at gmail.com>:
> Hi,
>
> For some reason this only shows up when I use my own cross compiled tests.
>
> Changelog
>  ILFree() is only exported by ordinal on Win9x

ILFree is exported using -noname in Wine, so it should be imported by
ordinal. You need to investigate further as to why it isn't working
for you. I suggest to start by running "winedump dump -j import
shell32_crosstest.exe".

-- 
Rob Shearman


From paul.vriens.wine at gmail.com  Tue Jan  6 07:01:55 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Tue, 06 Jan 2009 14:01:55 +0100
Subject: [shell32/tests 1/2] ILFree() is only exported by ordinal on Win9x
In-Reply-To: <1096648c0901060451p527608cu479b7e5d739593ae@mail.gmail.com>
References: <496313BE.1020402@gmail.com>
	<1096648c0901060451p527608cu479b7e5d739593ae@mail.gmail.com>
Message-ID: <49635643.1080204@gmail.com>

Rob Shearman wrote:
> 2009/1/6 Paul Vriens <paul.vriens.wine at gmail.com>:
>> Hi,
>>
>> For some reason this only shows up when I use my own cross compiled tests.
>>
>> Changelog
>>  ILFree() is only exported by ordinal on Win9x
> 
> ILFree is exported using -noname in Wine, so it should be imported by
> ordinal. You need to investigate further as to why it isn't working
> for you. I suggest to start by running "winedump dump -j import
> shell32_crosstest.exe".
> 

All other uses of ILFree() in the shell32 tests do it the same way. So the fact 
that I need this should be ok. The only strange thing is that I get an error 
when running the unpatched version of the cross compiled test on win9x.

Unpatched gives me:

[paul at penguin tests]$ winedump dump -j import shell32_crosstest.exe | grep Free
    479  HeapFree 4aa04
    534  LocalFree 4aa28
     37  ILFree 4ae18
    106  DdeFreeDataHandle 4af38
    107  DdeFreeStringHandle 4af4c

Patched (of course):

[paul at penguin tests]$ winedump dump -j import shell32_crosstest.exe | grep Free
    479  HeapFree 4a9fc
    534  LocalFree 4aa20
    106  DdeFreeDataHandle 4af26
    107  DdeFreeStringHandle 4af3a

-- 
Cheers,

Paul.


From julliard at winehq.org  Tue Jan  6 06:59:55 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 06 Jan 2009 13:59:55 +0100
Subject: [shell32/tests 1/2] ILFree() is only exported by ordinal on Win9x
In-Reply-To: <1096648c0901060451p527608cu479b7e5d739593ae@mail.gmail.com> (Rob
	Shearman's message of "Tue, 6 Jan 2009 12:51:45 +0000")
References: <496313BE.1020402@gmail.com>
	<1096648c0901060451p527608cu479b7e5d739593ae@mail.gmail.com>
Message-ID: <87aba44mk4.fsf@wine.dyndns.org>

"Rob Shearman" <robertshearman at gmail.com> writes:

> 2009/1/6 Paul Vriens <paul.vriens.wine at gmail.com>:
>> Hi,
>>
>> For some reason this only shows up when I use my own cross compiled tests.
>>
>> Changelog
>>  ILFree() is only exported by ordinal on Win9x
>
> ILFree is exported using -noname in Wine, so it should be imported by
> ordinal. You need to investigate further as to why it isn't working
> for you. I suggest to start by running "winedump dump -j import
> shell32_crosstest.exe".

Most likely it was built against the Mingw import libs, they don't use
ordinal imports. That's a Mingw bug.

-- 
Alexandre Julliard
julliard at winehq.org


From robertshearman at gmail.com  Tue Jan  6 07:02:36 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 6 Jan 2009 13:02:36 +0000
Subject: Unused function in quartz
In-Reply-To: <alpine.DEB.1.10.0901061107210.20777@amboise.dolphin>
References: <alpine.DEB.1.10.0901061107210.20777@amboise.dolphin>
Message-ID: <1096648c0901060502r73aa314ajfc01536301996f93@mail.gmail.com>

2009/1/6 Francois Gouget <fgouget at free.fr>:
> In the following commit you added the OutputPin_DeliverNewSegment()
> function to pin.c. However today it is unused. Is there any plan to use
> it? Is it still relevant?

Not, it looks like it has been superseded by InputPin_NewSegment. If
Maarten agrees, then feel free to send a patch to remove it.

>  commit 0a6f11c88a8da49d80e4e7d8a0236ae4b36926b7
>  Author: Robert Shearman <R.J.Shearman at warwick.ac.uk>
>  Date:   Thu Sep 25 23:50:06 2003 +0000
>
>      - A few cosmetic fixes.
>      - Various bug fixes.
>      - Add some OutputPin helpers.
>      - Add a new type of pin, PullPin.

-- 
Rob Shearman


From paul.vriens.wine at gmail.com  Tue Jan  6 07:02:49 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Tue, 06 Jan 2009 14:02:49 +0100
Subject: [shell32/tests 1/2] ILFree() is only exported by ordinal on Win9x
In-Reply-To: <87aba44mk4.fsf@wine.dyndns.org>
References: <496313BE.1020402@gmail.com>	<1096648c0901060451p527608cu479b7e5d739593ae@mail.gmail.com>
	<87aba44mk4.fsf@wine.dyndns.org>
Message-ID: <49635679.2040102@gmail.com>

Alexandre Julliard wrote:
> "Rob Shearman" <robertshearman at gmail.com> writes:
> 
>> 2009/1/6 Paul Vriens <paul.vriens.wine at gmail.com>:
>>> Hi,
>>>
>>> For some reason this only shows up when I use my own cross compiled tests.
>>>
>>> Changelog
>>>  ILFree() is only exported by ordinal on Win9x
>> ILFree is exported using -noname in Wine, so it should be imported by
>> ordinal. You need to investigate further as to why it isn't working
>> for you. I suggest to start by running "winedump dump -j import
>> shell32_crosstest.exe".
> 
> Most likely it was built against the Mingw import libs, they don't use
> ordinal imports. That's a Mingw bug.
> 
Yeah, that's probably it as I cross compiled in the tests directory and not on 
the highest level.

-- 
Cheers,

Paul.


From dimesio at earthlink.net  Tue Jan  6 08:48:27 2009
From: dimesio at earthlink.net (Rosanne DiMesio)
Date: Tue, 6 Jan 2009 08:48:27 -0600
Subject: AppDB: Rating / Patching
In-Reply-To: <4962D919.2090600@earthlink.net>
References: <cf3b5b1d0901051451r6499e182hc2c16343b486632c@mail.gmail.com>
	<f5d9424f0901051709j70a37dc4p6db16f2af2526c8c@mail.gmail.com>
	<4962D919.2090600@earthlink.net>
Message-ID: <20090106084827.9c8347f4.dimesio@earthlink.net>


> Now, the story changes if the patch is conforming and has been accepted 
> by AJ and is pending the next development release.
> 
Then the next development release can get the gold, but previous ones still shouldn't. AppDB test ratings are tied to specific releases, and intended to tell normal users how different versions of Wine will work with their app. Patching Wine is not something normal users can or want to do, and allowing ratings based on patched versions of Wine is misleading, even if the patch does eventually make it in to a later release.


-- 
Rosanne DiMesio <dimesio at earthlink.net>


From actong88 at gmail.com  Tue Jan  6 11:07:22 2009
From: actong88 at gmail.com (Allan Tong)
Date: Tue, 6 Jan 2009 12:07:22 -0500
Subject: wined3d: Fix a memory leak in compile_state_table()
In-Reply-To: <d658b69e0901060251s1c50b168yb8402e2b6a02d0ce@mail.gmail.com>
References: <d75158870901051634u11a9d368l64cabc79b924a306@mail.gmail.com>
	<49633A3F.5090109@web.de>
	<d658b69e0901060251s1c50b168yb8402e2b6a02d0ce@mail.gmail.com>
Message-ID: <d75158870901060907n4a8d56b7wf299f488ac59d3e9@mail.gmail.com>

On Tue, Jan 6, 2009 at 5:51 AM, Henri Verbeet <hverbeet at gmail.com> wrote:
> 2009/1/6 Rico Sch?ller <kgbricola at web.de>:
>> Allan Tong schrieb:
>>> Wrong pointer was being passed to HeapFree.
>>>
>>>  - Allan
>>>
>>>
>> Why did you remove these two lines? Was this your intention?
>> -                    dev_multistate_funcs[cur[i].state][0] =
>> multistate_funcs[cur[i].state][0];
>> -                    dev_multistate_funcs[cur[i].state][1] =
>> multistate_funcs[cur[i].state][1];
>>
> Because HeapReAlloc() should already take care of any copying, if
> needed. Using HeapReAlloc() without checking the result first isn't
> safe of course, but neither was the original code.
>

Oops, that was careless of me.  I'll send a revised patch.

 - Allan

From n8gray at gmail.com  Tue Jan  6 11:42:48 2009
From: n8gray at gmail.com (Nathaniel Gray)
Date: Tue, 6 Jan 2009 09:42:48 -0800
Subject: AppDB: Rating / Patching
In-Reply-To: <20090106084827.9c8347f4.dimesio@earthlink.net>
References: <cf3b5b1d0901051451r6499e182hc2c16343b486632c@mail.gmail.com>
	<f5d9424f0901051709j70a37dc4p6db16f2af2526c8c@mail.gmail.com>
	<4962D919.2090600@earthlink.net>
	<20090106084827.9c8347f4.dimesio@earthlink.net>
Message-ID: <aee06c9e0901060942y6e1a96f1tecbdc0232e581aa@mail.gmail.com>

On Tue, Jan 6, 2009 at 6:48 AM, Rosanne DiMesio <dimesio at earthlink.net> wrote:
>
>> Now, the story changes if the patch is conforming and has been accepted
>> by AJ and is pending the next development release.
>>
> Then the next development release can get the gold, but previous ones still shouldn't. AppDB test ratings are tied to specific releases, and intended to tell normal users how different versions of Wine will work with their app. Patching Wine is not something normal users can or want to do, and allowing ratings based on patched versions of Wine is misleading, even if the patch does eventually make it in to a later release.

It sounds like the problem is that the version string in appdb isn't
descriptive enough.  It's perfectly reasonable to wonder if a given
program can be made to work with a patched version of wine, and wonder
how well it will work.  It's also reasonable to wonder how it will
work with a vanilla version.  Both types of reports are useful to have
in the appdb.  Having a version "x.x.x (patched)" available to
reporters would allow both types of reports to be clearly separated.

Cheers,
-n8

-- 
Nathan Gray
http://www.n8gray.org/


From austinenglish at gmail.com  Tue Jan  6 11:46:15 2009
From: austinenglish at gmail.com (Austin English)
Date: Tue, 6 Jan 2009 11:46:15 -0600
Subject: AppDB: Rating / Patching
In-Reply-To: <20090106084827.9c8347f4.dimesio@earthlink.net>
References: <cf3b5b1d0901051451r6499e182hc2c16343b486632c@mail.gmail.com>
	<f5d9424f0901051709j70a37dc4p6db16f2af2526c8c@mail.gmail.com>
	<4962D919.2090600@earthlink.net>
	<20090106084827.9c8347f4.dimesio@earthlink.net>
Message-ID: <b6bb06270901060946n1fb5f887hb924a6be38248bb1@mail.gmail.com>

On Tue, Jan 6, 2009 at 8:48 AM, Rosanne DiMesio <dimesio at earthlink.net> wrote:
>
>> Now, the story changes if the patch is conforming and has been accepted
>> by AJ and is pending the next development release.
>>
> Then the next development release can get the gold, but previous ones still shouldn't. AppDB test ratings are tied to specific releases, and intended to tell normal users how different versions of Wine will work with their app. Patching Wine is not something normal users can or want to do, and allowing ratings based on patched versions of Wine is misleading, even if the patch does eventually make it in to a later release.

+1


-- 
-Austin


From austinenglish at gmail.com  Tue Jan  6 12:12:25 2009
From: austinenglish at gmail.com (Austin English)
Date: Tue, 6 Jan 2009 12:12:25 -0600
Subject: AppDB: Rating / Patching
In-Reply-To: <aee06c9e0901060942y6e1a96f1tecbdc0232e581aa@mail.gmail.com>
References: <cf3b5b1d0901051451r6499e182hc2c16343b486632c@mail.gmail.com>
	<f5d9424f0901051709j70a37dc4p6db16f2af2526c8c@mail.gmail.com>
	<4962D919.2090600@earthlink.net>
	<20090106084827.9c8347f4.dimesio@earthlink.net>
	<aee06c9e0901060942y6e1a96f1tecbdc0232e581aa@mail.gmail.com>
Message-ID: <b6bb06270901061012m34dfcf89r2ad37b87bc2cd18d@mail.gmail.com>

On Tue, Jan 6, 2009 at 11:42 AM, Nathaniel Gray <n8gray at gmail.com> wrote:
> On Tue, Jan 6, 2009 at 6:48 AM, Rosanne DiMesio <dimesio at earthlink.net> wrote:
>>
>>> Now, the story changes if the patch is conforming and has been accepted
>>> by AJ and is pending the next development release.
>>>
>> Then the next development release can get the gold, but previous ones still shouldn't. AppDB test ratings are tied to specific releases, and intended to tell normal users how different versions of Wine will work with their app. Patching Wine is not something normal users can or want to do, and allowing ratings based on patched versions of Wine is misleading, even if the patch does eventually make it in to a later release.
>
> It sounds like the problem is that the version string in appdb isn't
> descriptive enough.  It's perfectly reasonable to wonder if a given
> program can be made to work with a patched version of wine, and wonder
> how well it will work.  It's also reasonable to wonder how it will
> work with a vanilla version.  Both types of reports are useful to have
> in the appdb.  Having a version "x.x.x (patched)" available to
> reporters would allow both types of reports to be clearly separated.
>
> Cheers,
> -n8
>
> --
> Nathan Gray
> http://www.n8gray.org/
>
>
>

No. Because that allows for all sorts of dirty hacks, and is confusing
to users. Ratings should specify default wine. They can list patches,
etc., in the comments, with a note of how well it works.

-- 
-Austin


From dimesio at earthlink.net  Tue Jan  6 12:15:27 2009
From: dimesio at earthlink.net (Rosanne DiMesio)
Date: Tue, 6 Jan 2009 12:15:27 -0600
Subject: AppDB: Rating / Patching
In-Reply-To: <aee06c9e0901060942y6e1a96f1tecbdc0232e581aa@mail.gmail.com>
References: <cf3b5b1d0901051451r6499e182hc2c16343b486632c@mail.gmail.com>
	<f5d9424f0901051709j70a37dc4p6db16f2af2526c8c@mail.gmail.com>
	<4962D919.2090600@earthlink.net>
	<20090106084827.9c8347f4.dimesio@earthlink.net>
	<aee06c9e0901060942y6e1a96f1tecbdc0232e581aa@mail.gmail.com>
Message-ID: <20090106121527.84d67858.dimesio@earthlink.net>

> 
> It sounds like the problem is that the version string in appdb isn't
> descriptive enough.  It's perfectly reasonable to wonder if a given
> program can be made to work with a patched version of wine, and wonder
> how well it will work.  It's also reasonable to wonder how it will
> work with a vanilla version.  Both types of reports are useful to have
> in the appdb.  Having a version "x.x.x (patched)" available to
> reporters would allow both types of reports to be clearly separated.
> 

Patched with what? Lumping all the different possibilities into one "version" is also misleading. 

IMO, the appropriate rating for apps that can only be made to work by patching Wine is bronze: "Application works, but it has some issues, even for normal use..." Perhaps the wording can be changed to explicitly mention patching as one of the possible "issues" warranting a bronze, but I think the basic definition already fits. 

-- 
Rosanne DiMesio <dimesio at earthlink.net>


From scott at open-vote.org  Tue Jan  6 12:24:10 2009
From: scott at open-vote.org (Scott Ritchie)
Date: Tue, 06 Jan 2009 10:24:10 -0800
Subject: Packagers: consider not packaging wine-1.1.12, or cherrypicking
	fixes
In-Reply-To: <a71bd89a0901031011n7b1e1831q429290d90edd4c55@mail.gmail.com>
References: <a71bd89a0901031011n7b1e1831q429290d90edd4c55@mail.gmail.com>
Message-ID: <4963A1CA.7030206@open-vote.org>

Dan Kegel wrote:
> wine-1.1.12 has a couple regressions in it:
> http://bugs.winehq.org/show_bug.cgi?id=16754
> http://bugs.winehq.org/show_bug.cgi?id=16732
> http://bugs.winehq.org/show_bug.cgi?id=16708
> 
> Please consider either cherrypicking the fixes,
> or skipping wine-1.1.12.
> 
> 

1.1.11 had a handful of regressions as well.  Ironically for a game I
play 1.1.12 fixed one introduced in 1.1.11.

I have a theory that our releases have just as many regressions as
before, we're just noticing them quicker due to our larger user base.

Thanks,
Scott Ritchie


From austinenglish at gmail.com  Tue Jan  6 12:33:45 2009
From: austinenglish at gmail.com (Austin English)
Date: Tue, 6 Jan 2009 12:33:45 -0600
Subject: PR 16592: dlls/kernel32/volume.c
In-Reply-To: <20090106182501.GA13390@hairball.ziemba.us>
References: <20090106182501.GA13390@hairball.ziemba.us>
Message-ID: <b6bb06270901061033s41c9819v13346d1cf1010a4c@mail.gmail.com>

On Tue, Jan 6, 2009 at 12:25 PM, G. Paul Ziemba <p-wine-bugs at ziemba.us> wrote:
> Fix for PR 16592, GetVolumeInformationW() handling of unusual "root"
> parameter.
>
>
> --- dlls/kernel32/volume.c.orig 2008-12-05 08:57:45.000000000 -0800
> +++ dlls/kernel32/volume.c      2008-12-22 00:15:51.000000000 -0800
> @@ -518,7 +518,7 @@
>     HANDLE handle;
>     enum fs_type type = FS_UNKNOWN;
>
> -    if (!root)
> +    if (!root || (root && root[0] == '\\' && root[1] == ':'))
>     {
>         WCHAR path[MAX_PATH];
>         GetCurrentDirectoryW( MAX_PATH, path );
>
>
>
> --- dlls/kernel32/tests/volume.c.orig   2008-12-05 08:57:45.000000000 -0800
> +++ dlls/kernel32/tests/volume.c        2009-01-06 09:52:19.000000000 -0800
> @@ -29,6 +29,9 @@
>  static BOOL (WINAPI *pFindVolumeClose)(HANDLE);
>  static UINT (WINAPI *pGetLogicalDriveStringsA)(UINT,LPSTR);
>  static UINT (WINAPI *pGetLogicalDriveStringsW)(UINT,LPWSTR);
> +static BOOL (WINAPI *pGetVolumeInformationW)(LPCWSTR,LPWSTR,DWORD,
> +                       DWORD*,DWORD*,DWORD*,LPWSTR,DWORD);
> +static BOOL (WINAPI *pSetCurrentDirectoryA)(LPCSTR);
>
>  /* ############################### */
>
> @@ -216,6 +219,48 @@
>     HeapFree(GetProcessHeap(), 0, buf);
>  }
>
> +static void test_GetVolumeInformationW(void)
> +{
> +    //
> +    // Check handling of root == "\\:"
> +    // http://bugs.winehq.org/show_bug.cgi?id=16592
> +    //
> +
> +    BOOL rc;
> +    WCHAR root[] = {'\\',':',0};
> +
> +    if (!pGetVolumeInformationW) {
> +        win_skip("GetVolumeInformationW not available\n");
> +        return;
> +    }
> +
> +    if (!pSetCurrentDirectoryA) {
> +        win_skip("SetCurrentDirectoryA not available\n");
> +        return;
> +    }
> +
> +    //
> +    // set current directory because GetVolumeInformationW refers
> +    // to it in this test case
> +    //
> +    rc = pSetCurrentDirectoryA("C:\\");
> +
> +    ok(rc, "SetCurrentDirectoryA(\"C:\\\\\") failed\n");
> +
> +    rc = pGetVolumeInformationW(
> +       root,   // Root
> +       NULL,   // pLabel
> +       0,      // LabelLen
> +       NULL,   // pSerial
> +       NULL,   // pFilenameLen
> +       NULL,   // pFlags
> +       NULL,   // pFsname
> +       0       // FsnameLen
> +    );
> +
> +    ok(rc, "GetVolumeInformationW doesn't handle root == \"\\\\:\" case\n");
> +}
> +
>  START_TEST(volume)
>  {
>     hdll = GetModuleHandleA("kernel32.dll");
> @@ -226,6 +271,8 @@
>     pFindVolumeClose = (void *) GetProcAddress(hdll, "FindVolumeClose");
>     pGetLogicalDriveStringsA = (void *) GetProcAddress(hdll, "GetLogicalDriveStringsA");
>     pGetLogicalDriveStringsW = (void *) GetProcAddress(hdll, "GetLogicalDriveStringsW");
> +    pGetVolumeInformationW = (void *) GetProcAddress(hdll, "GetVolumeInformationW");
> +    pSetCurrentDirectoryA = (void *) GetProcAddress(hdll, "SetCurrentDirectoryA");
>
>     test_query_dos_deviceA();
>     test_FindFirstVolume();
> @@ -233,4 +280,5 @@
>     test_GetVolumeNameForVolumeMountPointW();
>     test_GetLogicalDriveStringsA();
>     test_GetLogicalDriveStringsW();
> +    test_GetVolumeInformationW();
>  }
>
> --
> G. Paul Ziemba
> FreeBSD unix:
> 10:11AM  up 12 days, 20:50, 10 users, load averages: 0.16, 0.18, 0.19
>
>
>

Please, no C++ comments in wine, use standard C /* comments */ instead.

-- 
-Austin


From austinenglish at gmail.com  Tue Jan  6 13:02:42 2009
From: austinenglish at gmail.com (Austin English)
Date: Tue, 6 Jan 2009 13:02:42 -0600
Subject: PR 16828 dlls/ntdll/serial.c clear IEXTEN when clearing ICANON
In-Reply-To: <20090106184940.GA15625@hairball.ziemba.us>
References: <20090106184940.GA15625@hairball.ziemba.us>
Message-ID: <b6bb06270901061102w50b476ccyd4791b4d186c6208@mail.gmail.com>

On Tue, Jan 6, 2009 at 12:49 PM, G. Paul Ziemba <p-wine-bugs at ziemba.us> wrote:
> FreeBSD fix for Nirvis CDJ application, PR 16828
>
>
> --- dlls/ntdll/serial.c.orig    2008-12-20 06:55:38.000000000 -0800
> +++ dlls/ntdll/serial.c 2009-01-05 21:35:47.000000000 -0800
> @@ -648,7 +648,9 @@
>     port.c_cflag &= ~(HUPCL);
>     port.c_cflag |= CLOCAL | CREAD;
>
> -    port.c_lflag &= ~(ICANON|ECHO|ISIG);
> +    // on FreeBSD, turning off ICANON does not disable IEXTEN,
> +    // so we must turn it off explicitly. No harm done on Linux.
> +    port.c_lflag &= ~(ICANON|ECHO|ISIG|IEXTEN);
>     port.c_lflag |= NOFLSH;
>
>     bytesize = slc->WordLength;
>
>
> --
> G. Paul Ziemba
> FreeBSD unix:
> 10:46AM  up 12 days, 21:25, 10 users, load averages: 0.21, 0.29, 0.23
>
>
>

Again, no C++ comments.

-- 
-Austin


From jjmckenzie51 at earthlink.net  Tue Jan  6 13:03:01 2009
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Tue, 6 Jan 2009 12:03:01 -0700 (GMT-07:00)
Subject: AppDB: Rating / Patching
Message-ID: <3743894.1231268582161.JavaMail.root@elwamui-huard.atl.sa.earthlink.net>

>On Tue, Jan 6, 2009 at 6:48 AM, Rosanne DiMesio <dimesio at earthlink.net> wrote:
>>
>>> Now, the story changes if the patch is conforming and has been accepted
>>> by AJ and is pending the next development release.
>>>
>> Then the next development release can get the gold, but previous ones still shouldn't. AppDB test ratings are tied to specific releases, and intended to tell normal users how different versions of Wine will work with their app. Patching Wine is not something normal users can or want to do, and allowing ratings based on patched versions of Wine is misleading, even if the patch does eventually make it in to a later release.
>
>It sounds like the problem is that the version string in appdb isn't
>descriptive enough.  It's perfectly reasonable to wonder if a given
>program can be made to work with a patched version of wine, and wonder
>how well it will work.  It's also reasonable to wonder how it will
>work with a vanilla version.  Both types of reports are useful to have
>in the appdb.  Having a version "x.x.x (patched)" available to
>reporters would allow both types of reports to be clearly separated.
>
No, the appdb should not be touched.  Rosanne said it correctly, ordinary users are NOT going to take the time to build Wine, nor should they.   We can put in the bug report that the patch works and whether or not it has been submitted.  Sometimes a patch is to rough or a real hack that breaks other programs, but with refinement is acceptable and will be incorporated into Wine.  The appdb needs to stay as clean as it can.  Of course, you can always add a bug report to the appdb entry, add comments and let users decide what they want to do.  Rating a rogue patched Wine as Gold is very misleading.  We need to keep ratings to what is available for the ordinary, unknowing user (read nOOb.)

James McKenzie




From pz-wine-devel at ziemba.us  Tue Jan  6 13:08:29 2009
From: pz-wine-devel at ziemba.us (G. Paul Ziemba)
Date: Tue, 6 Jan 2009 19:08:29 +0000 (UTC)
Subject: PR 16828 dlls/ntdll/serial.c clear IEXTEN when clearing ICANON
References: <b6bb06270901061102w50b476ccyd4791b4d186c6208@mail.gmail.com>
Message-ID: <gk0a7d$gh5$1@hairball.ziemba.us>

austinenglish at gmail.com ("Austin English") writes:
>Again, no C++ comments.

Oops. Self-LART applied. Should I resubmit patches with modified comments
to wine-patches?

 ~!paul
-- 
G. Paul Ziemba
FreeBSD unix:
11:06AM  up 12 days, 21:45, 11 users, load averages: 0.27, 0.23, 0.24


From austinenglish at gmail.com  Tue Jan  6 13:11:40 2009
From: austinenglish at gmail.com (Austin English)
Date: Tue, 6 Jan 2009 13:11:40 -0600
Subject: PR 16828 dlls/ntdll/serial.c clear IEXTEN when clearing ICANON
In-Reply-To: <gk0a7d$gh5$1@hairball.ziemba.us>
References: <b6bb06270901061102w50b476ccyd4791b4d186c6208@mail.gmail.com>
	<gk0a7d$gh5$1@hairball.ziemba.us>
Message-ID: <b6bb06270901061111v34310159i754c780bb3127f3d@mail.gmail.com>

On Tue, Jan 6, 2009 at 1:08 PM, G. Paul Ziemba <pz-wine-devel at ziemba.us> wrote:
> austinenglish at gmail.com ("Austin English") writes:
>>Again, no C++ comments.
>
> Oops. Self-LART applied. Should I resubmit patches with modified comments
> to wine-patches?
>
>  ~!paul
> --
> G. Paul Ziemba
> FreeBSD unix:
> 11:06AM  up 12 days, 21:45, 11 users, load averages: 0.27, 0.23, 0.24
>
>
>

Please.

Thanks for helping Wine!

-- 
-Austin


From ian at ianmacfarlane.com  Tue Jan  6 04:58:30 2009
From: ian at ianmacfarlane.com (Ian Macfarlane)
Date: Tue, 6 Jan 2009 12:58:30 +0200
Subject: Dates in Wine announcement
Message-ID: <aac02a530901060258i5a5d8e5vc9c2d1b630b952bb@mail.gmail.com>

Very small suggestion - it would be helpful to have dates included
somewhere (preferably near the top) of the wine announce pages, for
example:

http://www.winehq.org/announce/1.1.12

This will let people who come to it via search engines know what date
this particular release was made on, without having to dig around.

(it will also help prevent people mistaking an old development release
for a new one - I'm sure most people have seen at least one news story
about something where the reporter/blogger is reporting years-old news
as new because they didn't look at the dates on the article, or there
were no dates or they were a hard to spot grey colour).

Just a small suggestion.

Ian


From n8gray at gmail.com  Tue Jan  6 18:58:55 2009
From: n8gray at gmail.com (Nathaniel Gray)
Date: Tue, 6 Jan 2009 16:58:55 -0800
Subject: AppDB: Rating / Patching
In-Reply-To: <20090106121527.84d67858.dimesio@earthlink.net>
References: <cf3b5b1d0901051451r6499e182hc2c16343b486632c@mail.gmail.com>
	<f5d9424f0901051709j70a37dc4p6db16f2af2526c8c@mail.gmail.com>
	<4962D919.2090600@earthlink.net>
	<20090106084827.9c8347f4.dimesio@earthlink.net>
	<aee06c9e0901060942y6e1a96f1tecbdc0232e581aa@mail.gmail.com>
	<20090106121527.84d67858.dimesio@earthlink.net>
Message-ID: <aee06c9e0901061658q517bd2b6n90177a7bd52df6c9@mail.gmail.com>

On Tue, Jan 6, 2009 at 10:15 AM, Rosanne DiMesio <dimesio at earthlink.net> wrote:
>>
>> It sounds like the problem is that the version string in appdb isn't
>> descriptive enough.  It's perfectly reasonable to wonder if a given
>> program can be made to work with a patched version of wine, and wonder
>> how well it will work.  It's also reasonable to wonder how it will
>> work with a vanilla version.  Both types of reports are useful to have
>> in the appdb.  Having a version "x.x.x (patched)" available to
>> reporters would allow both types of reports to be clearly separated.
>>
>
> Patched with what? Lumping all the different possibilities into one "version" is also misleading.

Perfect information isn't necessary here.  It's just useful to know
what kind of performance you can get if you decide to venture into the
world of patching and recompiling.  Experts will know if it's worth
their time, newbies will know to stay away.

Cheers,
-n8

-- 
Nathan Gray
http://www.n8gray.org/


From nicholas.g.lawrence at mainroads.qld.gov.au  Tue Jan  6 19:11:33 2009
From: nicholas.g.lawrence at mainroads.qld.gov.au (nicholas.g.lawrence at mainroads.qld.gov.au)
Date: Wed, 7 Jan 2009 11:11:33 +1000
Subject: AppDB: Rating / Patching
In-Reply-To: <811b48bd0901051918t55f28d1ek9e479dd94354d034@mail.gmail.com>
Message-ID: <OFC88E213B.3C84D54B-ON4A257537.00064D83-4A257537.00068B7F@transport.qld.gov.au>

Sometimes to make an app work, you need to copy over
some native dlls.

To get these dlls don't you need to own a copy of windows?

Could this be a criterion in the rating system?
Wether or not you need to own a copy of windows?

nick


***********************************************************************
WARNING: This e-mail (including any attachments) may contain legally
privileged, confidential or private information and may be protected by
copyright. You may only use it if you are the person(s) it was intended
to be sent to and if you use it in an authorised way.  No one is 
allowed to use, review, alter, transmit, disclose, distribute, print 
or copy this e-mail without appropriate authority.

If this e-mail was not intended for you and was sent to you by mistake,
please telephone or e-mail me immediately, destroy any hardcopies of
this e-mail and delete it and any copies of it from your computer
system. Any right which the sender may have under copyright law, and 
any legal privilege and confidentiality attached to this e-mail is not 
waived or destroyed by that mistake.

It is your responsibility to ensure that this e-mail does not contain
and is not affected by computer viruses, defects or interference by
third parties or replication problems (including incompatibility with
your computer system).

Opinions contained in this e-mail do not necessarily reflect the
opinions of the Queensland Department of Main Roads, Queensland
Transport or Maritime Safety Queensland, or endorsed organisations
utilising the same infrastructure.
***********************************************************************



From n8gray at gmail.com  Tue Jan  6 19:12:59 2009
From: n8gray at gmail.com (Nathaniel Gray)
Date: Tue, 6 Jan 2009 17:12:59 -0800
Subject: AppDB: Rating / Patching
In-Reply-To: <b6bb06270901061012m34dfcf89r2ad37b87bc2cd18d@mail.gmail.com>
References: <cf3b5b1d0901051451r6499e182hc2c16343b486632c@mail.gmail.com>
	<f5d9424f0901051709j70a37dc4p6db16f2af2526c8c@mail.gmail.com>
	<4962D919.2090600@earthlink.net>
	<20090106084827.9c8347f4.dimesio@earthlink.net>
	<aee06c9e0901060942y6e1a96f1tecbdc0232e581aa@mail.gmail.com>
	<b6bb06270901061012m34dfcf89r2ad37b87bc2cd18d@mail.gmail.com>
Message-ID: <aee06c9e0901061712u5687b215tce7e5c5d308db3ae@mail.gmail.com>

On Tue, Jan 6, 2009 at 10:12 AM, Austin English <austinenglish at gmail.com> wrote:
> On Tue, Jan 6, 2009 at 11:42 AM, Nathaniel Gray <n8gray at gmail.com> wrote:
>> It sounds like the problem is that the version string in appdb isn't
>> descriptive enough.  It's perfectly reasonable to wonder if a given
>> program can be made to work with a patched version of wine, and wonder
>> how well it will work.  It's also reasonable to wonder how it will
>> work with a vanilla version.  Both types of reports are useful to have
>> in the appdb.  Having a version "x.x.x (patched)" available to
>> reporters would allow both types of reports to be clearly separated.
>
> No. Because that allows for all sorts of dirty hacks, and is confusing
> to users. Ratings should specify default wine. They can list patches,
> etc., in the comments, with a note of how well it works.

It seems to me that digging through comments to find out if a report
refers to a version that was patched is more confusing than having it
advertised right up front in the version string.  And it makes sense
-- a patched 1.1.11 is not the same *version* as 1.1.11.

Cheers,
-n8

-- 
Nathan Gray
http://www.n8gray.org/


From n8gray at gmail.com  Tue Jan  6 19:30:08 2009
From: n8gray at gmail.com (Nathaniel Gray)
Date: Tue, 6 Jan 2009 17:30:08 -0800
Subject: AppDB: Rating / Patching
In-Reply-To: <3743894.1231268582161.JavaMail.root@elwamui-huard.atl.sa.earthlink.net>
References: <3743894.1231268582161.JavaMail.root@elwamui-huard.atl.sa.earthlink.net>
Message-ID: <aee06c9e0901061730g6705a127xae56188849020cc9@mail.gmail.com>

On Tue, Jan 6, 2009 at 11:03 AM, James Mckenzie
<jjmckenzie51 at earthlink.net> wrote:
> No, the appdb should not be touched.  Rosanne said it correctly, ordinary users are NOT going to take the time to build Wine, nor should they.   We can put in the bug report that the patch works and whether or not it has been submitted.  Sometimes a patch is to rough or a real hack that breaks other programs, but with refinement is acceptable and will be incorporated into Wine.  The appdb needs to stay as clean as it can.  Of course, you can always add a bug report to the appdb entry, add comments and let users decide what they want to do.  Rating a rogue patched Wine as Gold is very misleading.  We need to keep ratings to what is available for the ordinary, unknowing user (read nOOb.)

Ok, I can see that nobody agrees with me here.  I think the suggestion
helps newbies *and* experts by keeping them sorted out.  The situation
where some reports are against patched versions and others arent, and
you have to dig into the details to figure out which is which doesn't
serve anybody.  Excluding patched versions entirely is one way of
solving the problem, but it seems to me that you're going to have a
hard time stopping people from reporting results against patched
versions.  Binning all patched versions into "Bronze" isn't great,
since some of us *do* want to know if we can make an app work with a
patch, and in fact quite a few of us Linux users fall into that
category.  But anyway, I've made my argument and I'll drop it now.

Cheers,
-n8

-- 
Nathan Gray
http://www.n8gray.org/


From winehq.org at urbanec.net  Tue Jan  6 19:33:21 2009
From: winehq.org at urbanec.net (Peter Urbanec)
Date: Wed, 07 Jan 2009 12:33:21 +1100
Subject: Dates in Wine announcement
In-Reply-To: <aac02a530901060258i5a5d8e5vc9c2d1b630b952bb@mail.gmail.com>
References: <aac02a530901060258i5a5d8e5vc9c2d1b630b952bb@mail.gmail.com>
Message-ID: <49640661.7070101@urbanec.net>

Ian Macfarlane wrote:
> Very small suggestion - it would be helpful to have dates included
> somewhere (preferably near the top) of the wine announce pages

Speaking of dates... My pet peeve is seeing ambiguous dates such as
2/1/08. To me (and most of the world), that looks like 2nd Jan 2008, but
it appears that millions of people in the USA see it as 1st Feb 2008.
So, in the interest of disambiguation, I'd like to see human readable
dates with the month either fully spelled out or using a three letter
abbreviation. Date formats that are intended to be parsed by machines
are best represented as 2008-01-23, so that they are collated correctly
when sorted by a simple lexicographical routine.

Cheers.


From truiken at gmail.com  Tue Jan  6 21:07:52 2009
From: truiken at gmail.com (James Hawkins)
Date: Tue, 6 Jan 2009 19:07:52 -0800
Subject: readme: add a note about UNIX paths
In-Reply-To: <b6bb06270901061904w2f3aa348n122433cde34ad655@mail.gmail.com>
References: <b6bb06270901061904w2f3aa348n122433cde34ad655@mail.gmail.com>
Message-ID: <22821af30901061907g4515f8a0vee0a3a9883e3dc02@mail.gmail.com>

On Tue, Jan 6, 2009 at 7:04 PM, Austin English <austinenglish at gmail.com> wrote:
> Adds a note discouraging use of UNIX paths, since there's seems to
> have been a rash of it in recent bug reports.
>

If we don't recommend it, and usually advise against it, why not just
remove that line from the README?

-- 
James Hawkins


From austinenglish at gmail.com  Tue Jan  6 21:10:16 2009
From: austinenglish at gmail.com (Austin English)
Date: Tue, 6 Jan 2009 21:10:16 -0600
Subject: readme: add a note about UNIX paths
In-Reply-To: <22821af30901061907g4515f8a0vee0a3a9883e3dc02@mail.gmail.com>
References: <b6bb06270901061904w2f3aa348n122433cde34ad655@mail.gmail.com>
	<22821af30901061907g4515f8a0vee0a3a9883e3dc02@mail.gmail.com>
Message-ID: <b6bb06270901061910l570b29c3g23386fd85c135d7b@mail.gmail.com>

On Tue, Jan 6, 2009 at 9:07 PM, James Hawkins <truiken at gmail.com> wrote:
> On Tue, Jan 6, 2009 at 7:04 PM, Austin English <austinenglish at gmail.com> wrote:
>> Adds a note discouraging use of UNIX paths, since there's seems to
>> have been a rash of it in recent bug reports.
>>
>
> If we don't recommend it, and usually advise against it, why not just
> remove that line from the README?
>
> --
> James Hawkins
>

I sent a patch for that a while back, and it was not accepted. I'm
assuming Alexandre wants to keep it for some reason...

-- 
-Austin


From kde at graph-ix.net  Tue Jan  6 21:47:53 2009
From: kde at graph-ix.net (Markus)
Date: Tue, 6 Jan 2009 22:47:53 -0500
Subject: Implementing b3DAccelerationExists and b3DAccelerationEnabled in
	dxdiagn
In-Reply-To: <1231232307.10108.10.camel@p4.lan>
References: <200901052210.51639.kde@graph-ix.net>
	<1231232307.10108.10.camel@p4.lan>
Message-ID: <200901062247.53605.kde@graph-ix.net>

On Tuesday 06 January 2009 03:58:27 Detlef Riekenberg wrote:
> On Mo, 2009-01-05 at 22:10 -0500, Markus wrote:
> > can anyone tell me where to find information about the
> > b3DAccelerationExists and b3DAccelerationEnabled properties in the
> > display container returned by
>
> I suggest to use dxdiag and regmon on Windows.
> In dxdiag, you can disable DirectDraw / Direct3D Acceleration.
> Regmon will tell you, where the settings are saved.

I do not think the registry is the correct place to look. This value should 
return true if e.g. hardware accelerated T&L is available on the system, which 
is primarily a result of driver and hardware capabilities.
My current understanding is that a D3D caps struct would hold such 
information. The question now is which flag or combination of flags in it 
would cause the dxdiagn values to be 'true'?

-- 
Markus


From monster.romster at gmail.com  Tue Jan  6 23:12:44 2009
From: monster.romster at gmail.com (Danny Rawlins)
Date: Wed, 07 Jan 2009 16:12:44 +1100
Subject: why are we not using pkg-config in configure
Message-ID: <496439CC.6010909@gmail.com>

Hi,

I would like to know if there is any issues as to why we are not using
pkg-config to check for needed library's with the m4 macros.

Also this question arose in #winehackers
TBBle> Hmm. Is pkg-config broken under mingw? And do we care?

Regards,
Danny Rawlins


From austinenglish at gmail.com  Wed Jan  7 00:22:15 2009
From: austinenglish at gmail.com (Austin English)
Date: Wed, 7 Jan 2009 00:22:15 -0600
Subject: [PATCH 1/2] Add definitions used by reparse points
In-Reply-To: <20090107060557.GA3719@keitarou.watson.bubblesworth.net>
References: <20090107060557.GA3719@keitarou.watson.bubblesworth.net>
Message-ID: <b6bb06270901062222u392f996as9f13d58912b174b8@mail.gmail.com>

On Wed, Jan 7, 2009 at 12:05 AM, Paul TBBle Hampson
<Paul.Hampson at pobox.com> wrote:
> Not much to say about this. It's needed for the unit tests coming up.
> --
> -----------------------------------------------------------
> Paul "TBBle" Hampson, B.Sc, LPI, MCSE
> Very-later-year Asian Studies student, ANU
> The Boss, Bubblesworth Pty Ltd (ABN: 51 095 284 361)
> Paul.Hampson at Pobox.com
>
> Of course Pacman didn't influence us as kids. If it did,
> we'd be running around in darkened rooms, popping pills and
> listening to repetitive music.
>  -- Kristian Wilson, Nintendo, Inc, 1989
>
> License: http://creativecommons.org/licenses/by/2.5/au/
> -----------------------------------------------------------
>
>
>
>

+// Used for all tags where IsReparseTagMicrosoft is false
+// and for some tags where IsReparseTagMicrosoft is true

Please use /* comments */, not C++ style.

-- 
-Austin


From Paul.Hampson at Pobox.com  Wed Jan  7 00:36:47 2009
From: Paul.Hampson at Pobox.com (Paul TBBle Hampson)
Date: Wed, 7 Jan 2009 17:36:47 +1100
Subject: [PATCH 1/2] Add definitions used by reparse points
In-Reply-To: <b6bb06270901062222u392f996as9f13d58912b174b8@mail.gmail.com>
References: <20090107060557.GA3719@keitarou.watson.bubblesworth.net>
	<b6bb06270901062222u392f996as9f13d58912b174b8@mail.gmail.com>
Message-ID: <20090107063647.GA5482@keitarou.watson.bubblesworth.net>

On Wed, Jan 07, 2009 at 12:22:15AM -0600, Austin English wrote:
> On Wed, Jan 7, 2009 at 12:05 AM, Paul TBBle Hampson
> <Paul.Hampson at pobox.com> wrote:
>> Not much to say about this. It's needed for the unit tests coming up.

> +// Used for all tags where IsReparseTagMicrosoft is false
> +// and for some tags where IsReparseTagMicrosoft is true

> Please use /* comments */, not C++ style.

Erk, that's what I get for adding comments while I'm writing the commit
message.

Will fix and resend.

-- 
-----------------------------------------------------------
Paul "TBBle" Hampson, B.Sc, LPI, MCSE
Very-later-year Asian Studies student, ANU
The Boss, Bubblesworth Pty Ltd (ABN: 51 095 284 361)
Paul.Hampson at Pobox.com

Of course Pacman didn't influence us as kids. If it did,
we'd be running around in darkened rooms, popping pills and
listening to repetitive music.
 -- Kristian Wilson, Nintendo, Inc, 1989

License: http://creativecommons.org/licenses/by/2.5/au/
-----------------------------------------------------------
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20090107/68233690/attachment.pgp 

From arethusa26 at gmail.com  Wed Jan  7 01:42:15 2009
From: arethusa26 at gmail.com (Andrew Nguyen)
Date: Wed, 7 Jan 2009 01:42:15 -0600
Subject: [1/2] dlls: Add loadperf.dll
In-Reply-To: <496368E9.1090007@gmail.com>
References: <496368E9.1090007@gmail.com>
Message-ID: <a1affb700901062342x20173ad3se57bf5ac0b8e9f4@mail.gmail.com>

On Tue, Jan 6, 2009 at 8:21 AM, Andrey Turkin <andrey.turkin at gmail.com> wrote:
> .NET 1.1 uses this dll during installation
>
> ---
>  configure.ac                  |    1 +
>  dlls/loadperf/Makefile.in     |   13 +++++++++++++
>  dlls/loadperf/loadperf.spec   |   14 ++++++++++++++
>  dlls/loadperf/loadperf_main.c |   29 +++++++++++++++++++++++++++++
>  4 files changed, 57 insertions(+), 0 deletions(-)
>  create mode 100644 dlls/loadperf/Makefile.in
>  create mode 100644 dlls/loadperf/loadperf.spec
>  create mode 100644 dlls/loadperf/loadperf_main.c
>

You've forgotten to append the licensing header to loadperf_main.c.


From paul.vriens.wine at gmail.com  Wed Jan  7 01:58:47 2009
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 07 Jan 2009 08:58:47 +0100
Subject: [PATCH 1/2] Add definitions used by reparse points
In-Reply-To: <20090107060557.GA3719@keitarou.watson.bubblesworth.net>
References: <20090107060557.GA3719@keitarou.watson.bubblesworth.net>
Message-ID: <496460B7.50801@gmail.com>

Paul TBBle Hampson wrote:
> Not much to say about this. It's needed for the unit tests coming up.
> 
> 
> ------------------------------------------------------------------------
> 
> 
Hi Paul,

Part of your signature says:

License: http://creativecommons.org/licenses/by/2.5/au/

Does this mean your patches come under this license (or is it just the signature 
;))?

-- 
Cheers,

Paul.


From Paul.Hampson at Pobox.com  Wed Jan  7 02:10:52 2009
From: Paul.Hampson at Pobox.com (Paul TBBle Hampson)
Date: Wed, 7 Jan 2009 19:10:52 +1100
Subject: [PATCH 1/2] Add definitions used by reparse points
In-Reply-To: <496460B7.50801@gmail.com>
References: <20090107060557.GA3719@keitarou.watson.bubblesworth.net>
	<496460B7.50801@gmail.com>
Message-ID: <20090107081052.GA6701@keitarou.watson.bubblesworth.net>

On Wed, Jan 07, 2009 at 08:58:47AM +0100, Paul Vriens wrote:
> Paul TBBle Hampson wrote:
>> Not much to say about this. It's needed for the unit tests coming up.
> Hi Paul,

> Part of your signature says:

> License: http://creativecommons.org/licenses/by/2.5/au/

> Does this mean your patches come under this license (or is it just the signature 
> ;))?

Anything in the email that isn't otherwise licensed, I'd think.

However, I should hook in my other (shorter) signature for wine-patches.

Conveniently, I'm already resending these two patches.

-- 
-----------------------------------------------------------
Paul "TBBle" Hampson, B.Sc, LPI, MCSE
Very-later-year Asian Studies student, ANU
The Boss, Bubblesworth Pty Ltd (ABN: 51 095 284 361)
Paul.Hampson at Pobox.com

Of course Pacman didn't influence us as kids. If it did,
we'd be running around in darkened rooms, popping pills and
listening to repetitive music.
 -- Kristian Wilson, Nintendo, Inc, 1989

License: http://creativecommons.org/licenses/by/2.5/au/
-----------------------------------------------------------
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20090107/fde44c44/attachment-0001.pgp 

From mrmessiah at gmail.com  Wed Jan  7 03:47:57 2009
From: mrmessiah at gmail.com (Chris Howe)
Date: Wed, 7 Jan 2009 09:47:57 +0000
Subject: AppDB: Rating / Patching
In-Reply-To: <aee06c9e0901061730g6705a127xae56188849020cc9@mail.gmail.com>
References: <3743894.1231268582161.JavaMail.root@elwamui-huard.atl.sa.earthlink.net>
	<aee06c9e0901061730g6705a127xae56188849020cc9@mail.gmail.com>
Message-ID: <39c14e440901070147q111c1a16g197e867b26acbb3f@mail.gmail.com>

Forgive me for bringing this up again, but could this be another
argument for some kind of WineTricks-like Wine application launcher
that would exist as a separate project to Wine, but would apply patches,
particular settings, &c in order to get particular applications to work
better with the current latest version of Wine?

Users would presumably be happy because they download Wine, download
the launcher, and have great user experience "out of the box" with less
complication.

Devs would also presumably be happy as:
- they would be able to use it as a source of inspiration for ongoing work
- it makes concerns like this moot when it comes to appdb

Might even be a good way of gently reminding users when new versions of
Wine are released...

--
Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20090107/8365eb0d/attachment.htm 

From julliard at winehq.org  Wed Jan  7 03:50:49 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 07 Jan 2009 10:50:49 +0100
Subject: readme: add a note about UNIX paths
In-Reply-To: <b6bb06270901061910l570b29c3g23386fd85c135d7b@mail.gmail.com>
	(Austin English's message of "Tue, 6 Jan 2009 21:10:16 -0600")
References: <b6bb06270901061904w2f3aa348n122433cde34ad655@mail.gmail.com>
	<22821af30901061907g4515f8a0vee0a3a9883e3dc02@mail.gmail.com>
	<b6bb06270901061910l570b29c3g23386fd85c135d7b@mail.gmail.com>
Message-ID: <8763kr4f7q.fsf@wine.dyndns.org>

"Austin English" <austinenglish at gmail.com> writes:

> On Tue, Jan 6, 2009 at 9:07 PM, James Hawkins <truiken at gmail.com> wrote:
>> On Tue, Jan 6, 2009 at 7:04 PM, Austin English <austinenglish at gmail.com> wrote:
>>> Adds a note discouraging use of UNIX paths, since there's seems to
>>> have been a rash of it in recent bug reports.
>>
>> If we don't recommend it, and usually advise against it, why not just
>> remove that line from the README?
>
> I sent a patch for that a while back, and it was not accepted. I'm
> assuming Alexandre wants to keep it for some reason...

The problem is not Unix paths, it's usually that the app expects the
current directory to be the app directory. You have the same issue if
you use a Windows path. If there are really issues caused by argv[0]
being a Unix path and not just the wrong directory that can be fixed.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Jan  7 03:54:20 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 07 Jan 2009 10:54:20 +0100
Subject: why are we not using pkg-config in configure
In-Reply-To: <496439CC.6010909@gmail.com> (Danny Rawlins's message of "Wed, 07
	Jan 2009 16:12:44 +1100")
References: <496439CC.6010909@gmail.com>
Message-ID: <871vvf4f1v.fsf@wine.dyndns.org>

Danny Rawlins <monster.romster at gmail.com> writes:

> I would like to know if there is any issues as to why we are not using
> pkg-config to check for needed library's with the m4 macros.

We use it in a few places where we have no choice, but in general it's
doing more harm than good. The whole concept is broken.

-- 
Alexandre Julliard
julliard at winehq.org


From sparr0 at gmail.com  Wed Jan  7 03:56:52 2009
From: sparr0 at gmail.com (Sparr)
Date: Wed, 7 Jan 2009 04:56:52 -0500
Subject: AppDB: Rating / Patching
In-Reply-To: <39c14e440901070147q111c1a16g197e867b26acbb3f@mail.gmail.com>
References: <3743894.1231268582161.JavaMail.root@elwamui-huard.atl.sa.earthlink.net>
	<aee06c9e0901061730g6705a127xae56188849020cc9@mail.gmail.com>
	<39c14e440901070147q111c1a16g197e867b26acbb3f@mail.gmail.com>
Message-ID: <811b48bd0901070156q13c2594ao6e7c652ad7cc4800@mail.gmail.com>

On Wed, Jan 7, 2009 at 4:47 AM, Chris Howe <mrmessiah at gmail.com> wrote:
> argument for some kind of WineTricks-like Wine application launcher
> that would exist as a separate project to Wine, but would apply patches,

Re-compiling wine with patches is an extremely farfetched idea when no
one outside Cedega has ever tackled the far simpler tasks involved
with making a wine launcher.


From wine.dev at web.de  Wed Jan  7 05:55:12 2009
From: wine.dev at web.de (Detlef Riekenberg)
Date: Wed, 07 Jan 2009 12:55:12 +0100
Subject: Implementing b3DAccelerationExists and b3DAccelerationEnabled
	in dxdiagn
In-Reply-To: <200901062247.53605.kde@graph-ix.net>
References: <200901052210.51639.kde@graph-ix.net>
	<1231232307.10108.10.camel@p4.lan>
	<200901062247.53605.kde@graph-ix.net>
Message-ID: <1231329312.5547.58.camel@p4.lan>

On Di, 2009-01-06 at 22:47 -0500, Markus wrote:
> > > can anyone tell me where to find information about the
> > > b3DAccelerationExists and b3DAccelerationEnabled properties in the
> > > display container returned by
> >
> > I suggest to use dxdiag and regmon on Windows.
> > In dxdiag, you can disable DirectDraw / Direct3D Acceleration.
> > Regmon will tell you, where the settings are saved.
> 
> I do not think the registry is the correct place to look.

For sure, the settings for enable/disable Acceleration must be in the
registry.
This is for b3DAccelerationEnabled and the primary requirement for that
flag
is a TRUE in b3DAccelerationExists

> This value should 
> return true if e.g. hardware accelerated T&L is available on the system, which 
> is primarily a result of driver and hardware capabilities.

This is for b3DAccelerationExists and native dxdiagn in Wine with some
d3d* debug channels might help a bit.

I have an ATI Radeon 7500 Mobility (R100) here for testing.
W98 with DDraw/D3D support (old driver)
W2K without DDraw/D3D support
 (i use a new driver, that droped DirectX support for R100)


Using regedit on W98:
HKLM\Software\Microsoft\Direct3D\Drivers
 SoftwareOnly  DWORD 1
HKLM\Software\Microsoft\DirectDraw
 EmulationOnly DWORD 1

When DDraw is set to EmulationOnly, D3D is marked (in dxdiag) as
"not available" (d3d needs ddraw on Windows), independent of
SoftwareOnly.
(Using the GUI to set EmulationOnly to 1 also sets SoftwareOnly to 1)


-- 
 
By by ... Detlef




From julliard at winehq.org  Wed Jan  7 07:31:11 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 07 Jan 2009 14:31:11 +0100
Subject: readme: add a note about UNIX paths
In-Reply-To: <4964ADF9.8080104@kievinfo.com> (Vitaliy Margolen's message of
	"Wed, 07 Jan 2009 06:28:25 -0700")
References: <b6bb06270901061904w2f3aa348n122433cde34ad655@mail.gmail.com>
	<22821af30901061907g4515f8a0vee0a3a9883e3dc02@mail.gmail.com>
	<b6bb06270901061910l570b29c3g23386fd85c135d7b@mail.gmail.com>
	<8763kr4f7q.fsf@wine.dyndns.org> <4964ADF9.8080104@kievinfo.com>
Message-ID: <87wsd72qg0.fsf@wine.dyndns.org>

Vitaliy Margolen <wine-devel at kievinfo.com> writes:

> Alexandre Julliard wrote:
>> The problem is not Unix paths, it's usually that the app expects the
>> current directory to be the app directory. You have the same issue if
>> you use a Windows path. If there are really issues caused by argv[0]
>> being a Unix path and not just the wrong directory that can be fixed.
>> 
> For years Borland been stating in their documents that argv[0] always
> contains full path to the executable. And many programs written in Boarland
> C++ / Delphi relay on that.

Their documents are wrong since argv[0] is determined by the parent
process. Anyway, do you have a specific bug report for this?

-- 
Alexandre Julliard
julliard at winehq.org


From wine-devel at kievinfo.com  Wed Jan  7 07:28:25 2009
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Wed, 07 Jan 2009 06:28:25 -0700
Subject: readme: add a note about UNIX paths
In-Reply-To: <8763kr4f7q.fsf@wine.dyndns.org>
References: <b6bb06270901061904w2f3aa348n122433cde34ad655@mail.gmail.com>	<22821af30901061907g4515f8a0vee0a3a9883e3dc02@mail.gmail.com>	<b6bb06270901061910l570b29c3g23386fd85c135d7b@mail.gmail.com>
	<8763kr4f7q.fsf@wine.dyndns.org>
Message-ID: <4964ADF9.8080104@kievinfo.com>

Alexandre Julliard wrote:
> "Austin English" <austinenglish at gmail.com> writes:
> 
>> On Tue, Jan 6, 2009 at 9:07 PM, James Hawkins <truiken at gmail.com> wrote:
>>> On Tue, Jan 6, 2009 at 7:04 PM, Austin English <austinenglish at gmail.com> wrote:
>>>> Adds a note discouraging use of UNIX paths, since there's seems to
>>>> have been a rash of it in recent bug reports.
>>> If we don't recommend it, and usually advise against it, why not just
>>> remove that line from the README?
>> I sent a patch for that a while back, and it was not accepted. I'm
>> assuming Alexandre wants to keep it for some reason...
> 
> The problem is not Unix paths, it's usually that the app expects the
> current directory to be the app directory. You have the same issue if
> you use a Windows path. If there are really issues caused by argv[0]
> being a Unix path and not just the wrong directory that can be fixed.
> 
For years Borland been stating in their documents that argv[0] always
contains full path to the executable. And many programs written in Boarland
C++ / Delphi relay on that.

Vitaliy.


From zgold at bluesata.com  Wed Jan  7 07:47:39 2009
From: zgold at bluesata.com (Zachary Goldberg)
Date: Wed, 7 Jan 2009 08:47:39 -0500
Subject: AppDB: Rating / Patching
In-Reply-To: <811b48bd0901070156q13c2594ao6e7c652ad7cc4800@mail.gmail.com>
References: <3743894.1231268582161.JavaMail.root@elwamui-huard.atl.sa.earthlink.net>
	<aee06c9e0901061730g6705a127xae56188849020cc9@mail.gmail.com>
	<39c14e440901070147q111c1a16g197e867b26acbb3f@mail.gmail.com>
	<811b48bd0901070156q13c2594ao6e7c652ad7cc4800@mail.gmail.com>
Message-ID: <b050a5e70901070547rdca5797j86bc88a61c9106d6@mail.gmail.com>

2009/1/7 Sparr <sparr0 at gmail.com>:
> Re-compiling wine with patches is an extremely farfetched idea when no
> one outside Cedega has ever tackled the far simpler tasks involved
> with making a wine launcher.

This statement is very untrue.

http://wiki.winehq.org/ThirdPartyApplications


From jjmckenzie51 at earthlink.net  Wed Jan  7 08:06:44 2009
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Wed, 7 Jan 2009 07:06:44 -0700 (GMT-07:00)
Subject: AppDB: Rating / Patching
Message-ID: <11746500.1231337204452.JavaMail.root@elwamui-hound.atl.sa.earthlink.net>

Sparr <sparr0 at gmail.com> wrote:
>On Wed, Jan 7, 2009 at 4:47 AM, Chris Howe <mrmessiah at gmail.com> wrote:
>> argument for some kind of WineTricks-like Wine application launcher
>> that would exist as a separate project to Wine, but would apply patches,
>
>Re-compiling wine with patches is an extremely farfetched idea when no
>one outside Cedega has ever tackled the far simpler tasks involved
>with making a wine launcher.
>
I take offesense to that comment.  Darwine does have a wine launcher and it does work.

James McKenzie



From jjmckenzie51 at earthlink.net  Wed Jan  7 08:07:01 2009
From: jjmckenzie51 at earthlink.net (James Mckenzie)
Date: Wed, 7 Jan 2009 07:07:01 -0700 (GMT-07:00)
Subject: AppDB: Rating / Patching
Message-ID: <3113446.1231337221794.JavaMail.root@elwamui-hound.atl.sa.earthlink.net>

Sparr <sparr0 at gmail.com> wrote:
>On Wed, Jan 7, 2009 at 4:47 AM, Chris Howe <mrmessiah at gmail.com> wrote:
>> argument for some kind of WineTricks-like Wine application launcher
>> that would exist as a separate project to Wine, but would apply patches,
>
>Re-compiling wine with patches is an extremely farfetched idea when no
>one outside Cedega has ever tackled the far simpler tasks involved
>with making a wine launcher.
>
I take offesense to that comment.  Darwine does have a wine launcher and it does work.

James McKenzie



From austinenglish at gmail.com  Wed Jan  7 09:07:54 2009
From: austinenglish at gmail.com (Austin English)
Date: Wed, 7 Jan 2009 09:07:54 -0600
Subject: AppDB: Rating / Patching
In-Reply-To: <39c14e440901070147q111c1a16g197e867b26acbb3f@mail.gmail.com>
References: <3743894.1231268582161.JavaMail.root@elwamui-huard.atl.sa.earthlink.net>
	<aee06c9e0901061730g6705a127xae56188849020cc9@mail.gmail.com>
	<39c14e440901070147q111c1a16g197e867b26acbb3f@mail.gmail.com>
Message-ID: <b6bb06270901070707x5f0f73e2n430dac3b843bc0f8@mail.gmail.com>

On Wed, Jan 7, 2009 at 3:47 AM, Chris Howe <mrmessiah at gmail.com> wrote:
> Forgive me for bringing this up again, but could this be another
> argument for some kind of WineTricks-like Wine application launcher
> that would exist as a separate project to Wine, but would apply patches,
> particular settings, &c in order to get particular applications to work
> better with the current latest version of Wine?
>
> Users would presumably be happy because they download Wine, download
> the launcher, and have great user experience "out of the box" with less
> complication.
>
> Devs would also presumably be happy as:
> - they would be able to use it as a source of inspiration for ongoing work
> - it makes concerns like this moot when it comes to appdb
>
> Might even be a good way of gently reminding users when new versions of
> Wine are released...
>
> --
> Chris
>
>
>
>

You're free to do that if you'd like, but I don't see how that would
help. The effort is better spent getting those patches put into Wine
itself.

-- 
-Austin


From ge at gse.nl  Wed Jan  7 09:21:49 2009
From: ge at gse.nl (Ge van Geldorp)
Date: Wed, 7 Jan 2009 16:21:49 +0100
Subject: WIDL and Windows rpcrt4
Message-ID: <7EECFE8C055F4E73B6588A3157953057@gsep1>

Hi Rob,

Is WIDL supposed to generate code that's compatible with Windows RPCRT4.DLL?
Because it appears this is currently not the case. When you look at
http://test.winehq.org you'll see that the rpcrt4:server test fails on
pretty much any Windows version.

I investigated a bit more, the failures are caused by an exception 0x6e6
("An internal error occurred in a remote procedure call (RPC)" thrown from
NdrPointerBufferSize() in server_c.c function get_name(). The
mingw-crosscompiled executable doesn't handle that exception which causes
the process to crash. Since this is in WIDL-generated code, I decided to
take a look at what MIDL generates for the same IDL file.

It turns out that MIDL treats the name_t struct as a simple structure, while
WIDL treats it as a complex structure. That made comparison a bit difficult.
Since WIDL never seems to generate simple structures, I tried to convince
MIDL to generate a complex structure too. After a bit of fiddling around
(I'm no IDL expert...) I came up with the following type, a mix of name_t
and sun_t:

typedef struct
{
  [string, size_is(size)] char *name;
  unsigned int size;

  [switch_is(s)] union
  {
    [case(SUN_I)] int i;
    [case(SUN_F1, SUN_F2)] float f;
    [case(SUN_PI)] int *pi;
  } u;

  int s;
} complex_t;

After staring at the WIDL-generated and MIDL-generated code for a while
(which still differed quite a bit), I noticed something interesting: in the
type format string, "unsigned int size" gets encoded as FC_ULONG by WIDL,
but as FC_LONG by MIDL. I then went back to the server_c.c and server_s.c
files generated by WIDL for the tests and changed the type format strings
there (replaced the "unsigned int size" encoding from FC_ULONG by FC_LONG).
With this change, the get_name() test passes :-). It then crashes later on
with an access violation inside NdrVaryingArrayUnmarshall() in
get_5numbers(), but let's take the problems one at a time...

So it appears Windows RPCRT4.dll is not happy with FC_ULONG entries within a
complex structure. I added a bunch of other primitive types to my complex_t
structure to see how they are treated by MIDL. See attached complex.idl file
and the MIDL-generated midl_complex_c.c file (also attached WIDL-generated
widl_complex_c.c for completeness). It appears that MIDL simply drops the
"unsigned" from any base type, at least within complex structures. "unsigned
long" gets encoded as FC_LONG, "unsigned short" as FC_SHORT and "unsigned
small" as FC_SMALL.

Like I said, I'm no IDL expert. Does the stuff above make sense to you? Do
you think it would be a good idea to change WIDL to generate the same
encodings as MIDL?

Thanks, G?.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: widl_complex_c.c
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20090107/36ca9e3a/attachment-0003.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: complex.idl
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20090107/36ca9e3a/attachment-0004.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: midl_complex_c.c
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20090107/36ca9e3a/attachment-0005.txt 

From austinenglish at gmail.com  Wed Jan  7 09:35:16 2009
From: austinenglish at gmail.com (Austin English)
Date: Wed, 7 Jan 2009 09:35:16 -0600
Subject: readme: add a note about UNIX paths
In-Reply-To: <87wsd72qg0.fsf@wine.dyndns.org>
References: <b6bb06270901061904w2f3aa348n122433cde34ad655@mail.gmail.com>
	<22821af30901061907g4515f8a0vee0a3a9883e3dc02@mail.gmail.com>
	<b6bb06270901061910l570b29c3g23386fd85c135d7b@mail.gmail.com>
	<8763kr4f7q.fsf@wine.dyndns.org> <4964ADF9.8080104@kievinfo.com>
	<87wsd72qg0.fsf@wine.dyndns.org>
Message-ID: <b6bb06270901070735g7c47e21ag6a8f535fe1c03b09@mail.gmail.com>

On Wed, Jan 7, 2009 at 7:31 AM, Alexandre Julliard <julliard at winehq.org> wrote:
> Vitaliy Margolen <wine-devel at kievinfo.com> writes:
>
>> Alexandre Julliard wrote:
>>> The problem is not Unix paths, it's usually that the app expects the
>>> current directory to be the app directory. You have the same issue if
>>> you use a Windows path. If there are really issues caused by argv[0]
>>> being a Unix path and not just the wrong directory that can be fixed.
>>>
>> For years Borland been stating in their documents that argv[0] always
>> contains full path to the executable. And many programs written in Boarland
>> C++ / Delphi relay on that.
>
> Their documents are wrong since argv[0] is determined by the parent
> process. Anyway, do you have a specific bug report for this?
>
> --
> Alexandre Julliard
> julliard at winehq.org
>

I'll have to look around for some. I doubt it was an UNIX path issue,
but rather 'current directory != app directory', which shows up pretty
often in the forums. Would you rather a note saying something like:
+             Note: This method is not recommended, since many Win32
applications
+             depend on the current directory being the application
directory, and may
+             crash or have other buggy behavior otherwise.


-- 
-Austin


From dank at kegel.com  Wed Jan  7 09:52:46 2009
From: dank at kegel.com (Dan Kegel)
Date: Wed, 7 Jan 2009 07:52:46 -0800
Subject: New appdb checkbox: "officially supports wine"?
Message-ID: <a71bd89a0901070752m3e5eba2qcc3c925c5bf53637@mail.gmail.com>

http://wiki.winehq.org/AppsThatSupportWine is a nice
stopgap, but perhaps it should be a report in the
appdb, driven by a checkbox that maintainers can check.
What do folks think?


From robertshearman at gmail.com  Wed Jan  7 10:03:40 2009
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 7 Jan 2009 16:03:40 +0000
Subject: WIDL and Windows rpcrt4
In-Reply-To: <7EECFE8C055F4E73B6588A3157953057@gsep1>
References: <7EECFE8C055F4E73B6588A3157953057@gsep1>
Message-ID: <1096648c0901070803s6ec3df3cxaa81b134cdf155aa@mail.gmail.com>

2009/1/7 Ge van Geldorp <ge at gse.nl>:
> Hi Rob,
>
> Is WIDL supposed to generate code that's compatible with Windows RPCRT4.DLL?
> Because it appears this is currently not the case. When you look at
> http://test.winehq.org you'll see that the rpcrt4:server test fails on
> pretty much any Windows version.
>
> I investigated a bit more, the failures are caused by an exception 0x6e6
> ("An internal error occurred in a remote procedure call (RPC)" thrown from
> NdrPointerBufferSize() in server_c.c function get_name(). The
> mingw-crosscompiled executable doesn't handle that exception which causes
> the process to crash. Since this is in WIDL-generated code, I decided to
> take a look at what MIDL generates for the same IDL file.
>
> It turns out that MIDL treats the name_t struct as a simple structure, while
> WIDL treats it as a complex structure. That made comparison a bit difficult.
> Since WIDL never seems to generate simple structures, I tried to convince
> MIDL to generate a complex structure too. After a bit of fiddling around
> (I'm no IDL expert...) I came up with the following type, a mix of name_t
> and sun_t:
>
> typedef struct
> {
>  [string, size_is(size)] char *name;
>  unsigned int size;
>
>  [switch_is(s)] union
>  {
>    [case(SUN_I)] int i;
>    [case(SUN_F1, SUN_F2)] float f;
>    [case(SUN_PI)] int *pi;
>  } u;
>
>  int s;
> } complex_t;
>
> After staring at the WIDL-generated and MIDL-generated code for a while
> (which still differed quite a bit), I noticed something interesting: in the
> type format string, "unsigned int size" gets encoded as FC_ULONG by WIDL,
> but as FC_LONG by MIDL. I then went back to the server_c.c and server_s.c
> files generated by WIDL for the tests and changed the type format strings
> there (replaced the "unsigned int size" encoding from FC_ULONG by FC_LONG).
> With this change, the get_name() test passes :-). It then crashes later on
> with an access violation inside NdrVaryingArrayUnmarshall() in
> get_5numbers(), but let's take the problems one at a time...
>
> So it appears Windows RPCRT4.dll is not happy with FC_ULONG entries within a
> complex structure. I added a bunch of other primitive types to my complex_t
> structure to see how they are treated by MIDL. See attached complex.idl file
> and the MIDL-generated midl_complex_c.c file (also attached WIDL-generated
> widl_complex_c.c for completeness). It appears that MIDL simply drops the
> "unsigned" from any base type, at least within complex structures. "unsigned
> long" gets encoded as FC_LONG, "unsigned short" as FC_SHORT and "unsigned
> small" as FC_SMALL.
>
> Like I said, I'm no IDL expert. Does the stuff above make sense to you? Do
> you think it would be a good idea to change WIDL to generate the same
> encodings as MIDL?

Yes, and in fact Michael Karcher has already sent in a pair of patches
to do this:
http://www.winehq.org/pipermail/wine-patches/2009-January/067032.html
http://www.winehq.org/pipermail/wine-patches/2009-January/067031.html

However, they probably won't apply cleanly after my recent changes.
Michael, do you plan to rebase and resend these? If not, I can do
this.

-- 
Rob Shearman


From wine at mkarcher.dialup.fu-berlin.de  Wed Jan  7 10:14:34 2009
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Wed, 07 Jan 2009 17:14:34 +0100
Subject: WIDL and Windows rpcrt4
In-Reply-To: <1096648c0901070803s6ec3df3cxaa81b134cdf155aa@mail.gmail.com>
References: <7EECFE8C055F4E73B6588A3157953057@gsep1>
	<1096648c0901070803s6ec3df3cxaa81b134cdf155aa@mail.gmail.com>
Message-ID: <1231344874.540.219.camel@hermes2.karcher.local>

Am Mittwoch, den 07.01.2009, 16:03 +0000 schrieb Rob Shearman:
> > So it appears Windows RPCRT4.dll is not happy with FC_ULONG entries within a
> > complex structure. I added a bunch of other primitive types to my complex_t
> > structure to see how they are treated by MIDL. See attached complex.idl file
> > and the MIDL-generated midl_complex_c.c file (also attached WIDL-generated
> > widl_complex_c.c for completeness). It appears that MIDL simply drops the
> > "unsigned" from any base type, at least within complex structures. "unsigned
> > long" gets encoded as FC_LONG, "unsigned short" as FC_SHORT and "unsigned
> > small" as FC_SMALL.
> >
> > Like I said, I'm no IDL expert. Does the stuff above make sense to you? Do
> > you think it would be a good idea to change WIDL to generate the same
> > encodings as MIDL?
> 
> Yes, and in fact Michael Karcher has already sent in a pair of patches
> to do this:
> http://www.winehq.org/pipermail/wine-patches/2009-January/067032.html
> http://www.winehq.org/pipermail/wine-patches/2009-January/067031.html
> 
> However, they probably won't apply cleanly after my recent changes.
> Michael, do you plan to rebase and resend these? If not, I can do
> this.

I will rebase them today in the evening (and send them in). I hope
Alexandre doesn't put me back in the queue because some of my last
patches were a bit quick-shot and flawed. I really believe that these
two are not doing any colleteral damage.

Regards,
  Michael Karcher



From austinenglish at gmail.com  Wed Jan  7 10:56:51 2009
From: austinenglish at gmail.com (Austin English)
Date: Wed, 7 Jan 2009 10:56:51 -0600
Subject: New appdb checkbox: "officially supports wine"?
In-Reply-To: <a71bd89a0901070752m3e5eba2qcc3c925c5bf53637@mail.gmail.com>
References: <a71bd89a0901070752m3e5eba2qcc3c925c5bf53637@mail.gmail.com>
Message-ID: <b6bb06270901070856x526ff061j334768becb0bbe26@mail.gmail.com>

On Wed, Jan 7, 2009 at 9:52 AM, Dan Kegel <dank at kegel.com> wrote:
> http://wiki.winehq.org/AppsThatSupportWine is a nice
> stopgap, but perhaps it should be a report in the
> appdb, driven by a checkbox that maintainers can check.
> What do folks think?
>
>
>

+1

-- 
-Austin


From mahanuu at free.fr  Wed Jan  7 11:11:41 2009
From: mahanuu at free.fr (Emmanuel Maillard)
Date: Wed, 7 Jan 2009 18:11:41 +0100
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <495ED81A.9080100@earthlink.net>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
	<D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
	<76D80FEC-80EF-4E47-89A2-7CF21E3B50B2@free.fr>
	<495ED81A.9080100@earthlink.net>
Message-ID: <DB75A2A1-3234-4065-888E-D61D2154ADB5@free.fr>


Le 3 janv. 09 ? 04:14, James McKenzie a ?crit :

> Emmanuel Maillard wrote:
>> Hi,
>>
>> Le 4 juil. 08 ? 12:37, Adam Strzelecki a ?crit :
>>
>>
>>> Hi Emmanuel, hello Wine developers,
>>>
>>> Latest WineQuartz.drv patch is 0.9.58. Is there any change for  
>>> more  recent release? I tried this patch with 1.0-1 however it has  
>>> too  many conflicts.
>>> It would be most convenient if you had just update http://repo.or.cz/w/wine/winequartzdrv.git 
>>>   to match 1.1.0 somehow and include Quartz.
>>>
>>
>> I resolved conflicts for wine-1.0, but didn't take a look yet for   
>> wine-1.1.0, i just know that's some changes in user32 and winex11.drv
>> have to be update in winequartz.drv too.
>>
>> I will see this week end if i can find free time to make a new  
>> patch  for winequartz.drv and send it to SourceForge.
>> (OpenGL is broken in winequartz.drv actually, because of a lack of   
>> time to fix it)
>>
>>
>>
>>> Since Wine passed 1.0 (woohoo!) maybe someone from the direction  
>>> can  revise Mac support? Even there're numerous Emmanuel efforts  
>>> to  provide Mac UI driver instead of X11, it will be always  
>>> pushed  aside, and sentenced to death, because it is not in  
>>> official sources.
>>>
>>> I know Alexandre Julliard's decision about NOT taking any  
>>> Objective- C sources (.m) into the Wine, but maybe this can be  
>>> revised, anyway  all .m rules will be only present on Mac  
>>> platforms. Using Objective- C is only way to make fair support for  
>>> Mac OS GUI, as those whole  GUI system is objective.
>>> Moreover then what's the point of keeping winex11.drv and all GUI   
>>> driver infrastructure in Wine if nothing else but X11 is NOT   
>>> accepted into official source?
>>>
>>> Forgive me what I say now, but I just it would be more fair if   
>>> someone from Codeweavers just said that Wine's official support  
>>> for  Mac OS X is against their business with CrossOver and this is  
>>> the  real reason they reject winequartz.drv from Emmanuel Maillard.
>>> Frankly I'd really pay for CrossOver or Wine, if it was what  
>>> 1.0-1  is but with native Mac UI, so each wine process has it's  
>>> own dock  icon, and no X11 is needed and native Mac font system.
>>>
>>> Regards,
>>> -- 
>>> Adam Strzelecki |: nanoant.com :|
>>>
>>>
>>
>>
>> Cheers
>> Emmanuel
>>
>>
> Emmanuel:
>
> What is the status of winequartz.drv?  It looks like your last patch  
> was for 1.1.2.
>
> James McKenzie
>

Hi,

I didn't really work on winequartz.drv since this patch, start a new  
version at the beginning of October,
but more or less waiting for DIB engine.

Emmanuel

From dimesio at earthlink.net  Wed Jan  7 11:34:00 2009
From: dimesio at earthlink.net (Rosanne DiMesio)
Date: Wed, 7 Jan 2009 11:34:00 -0600
Subject: New appdb checkbox: "officially supports wine"?
In-Reply-To: <a71bd89a0901070752m3e5eba2qcc3c925c5bf53637@mail.gmail.com>
References: <a71bd89a0901070752m3e5eba2qcc3c925c5bf53637@mail.gmail.com>
Message-ID: <20090107113400.eefe9c64.dimesio@earthlink.net>

On Wed, 7 Jan 2009 07:52:46 -0800
"Dan Kegel" <dank at kegel.com> wrote:

> http://wiki.winehq.org/AppsThatSupportWine is a nice
> stopgap, but perhaps it should be a report in the
> appdb, driven by a checkbox that maintainers can check.
> What do folks think?
> 
> 
Sounds good to me. 

-- 
Rosanne DiMesio <dimesio at earthlink.net>


From sparr0 at gmail.com  Wed Jan  7 12:46:06 2009
From: sparr0 at gmail.com (Sparr)
Date: Wed, 7 Jan 2009 13:46:06 -0500
Subject: AppDB: Rating / Patching
In-Reply-To: <b050a5e70901070547rdca5797j86bc88a61c9106d6@mail.gmail.com>
References: <3743894.1231268582161.JavaMail.root@elwamui-huard.atl.sa.earthlink.net>
	<aee06c9e0901061730g6705a127xae56188849020cc9@mail.gmail.com>
	<39c14e440901070147q111c1a16g197e867b26acbb3f@mail.gmail.com>
	<811b48bd0901070156q13c2594ao6e7c652ad7cc4800@mail.gmail.com>
	<b050a5e70901070547rdca5797j86bc88a61c9106d6@mail.gmail.com>
Message-ID: <811b48bd0901071046k324cf5e0r3895a6864dd58b80@mail.gmail.com>

On Wed, Jan 7, 2009 at 8:47 AM, Zachary Goldberg <zgold at bluesata.com> wrote:
> 2009/1/7 Sparr <sparr0 at gmail.com>:
>> Re-compiling wine with patches is an extremely farfetched idea when no
>> one outside Cedega has ever tackled the far simpler tasks involved
>> with making a wine launcher.
> This statement is very untrue.
> http://wiki.winehq.org/ThirdPartyApplications

I have not investigated the state of wine launchers in about a year
now.  Do any of those handle multiple WINEPREFIXes?  That is the most
important feature of Cedega's launcher that I was never able to find
in a wine launcher.  Thank you and forgive me if things have improved.


From austinenglish at gmail.com  Wed Jan  7 13:00:21 2009
From: austinenglish at gmail.com (Austin English)
Date: Wed, 7 Jan 2009 13:00:21 -0600
Subject: AppDB: Rating / Patching
In-Reply-To: <811b48bd0901071046k324cf5e0r3895a6864dd58b80@mail.gmail.com>
References: <3743894.1231268582161.JavaMail.root@elwamui-huard.atl.sa.earthlink.net>
	<aee06c9e0901061730g6705a127xae56188849020cc9@mail.gmail.com>
	<39c14e440901070147q111c1a16g197e867b26acbb3f@mail.gmail.com>
	<811b48bd0901070156q13c2594ao6e7c652ad7cc4800@mail.gmail.com>
	<b050a5e70901070547rdca5797j86bc88a61c9106d6@mail.gmail.com>
	<811b48bd0901071046k324cf5e0r3895a6864dd58b80@mail.gmail.com>
Message-ID: <b6bb06270901071100s5f34d56ax2a496bd3874cd0f2@mail.gmail.com>

On Wed, Jan 7, 2009 at 12:46 PM, Sparr <sparr0 at gmail.com> wrote:
> On Wed, Jan 7, 2009 at 8:47 AM, Zachary Goldberg <zgold at bluesata.com> wrote:
>> 2009/1/7 Sparr <sparr0 at gmail.com>:
>>> Re-compiling wine with patches is an extremely farfetched idea when no
>>> one outside Cedega has ever tackled the far simpler tasks involved
>>> with making a wine launcher.
>> This statement is very untrue.
>> http://wiki.winehq.org/ThirdPartyApplications
>
> I have not investigated the state of wine launchers in about a year
> now.  Do any of those handle multiple WINEPREFIXes?  That is the most
> important feature of Cedega's launcher that I was never able to find
> in a wine launcher.  Thank you and forgive me if things have improved.
>
>
>

Crossover/Bordeaux/PlayonLinux do. The others, I've never heard of.

-- 
-Austin


From lkcl at lkcl.net  Wed Jan  7 14:40:23 2009
From: lkcl at lkcl.net (Luke Kenneth Casson Leighton)
Date: Wed, 7 Jan 2009 20:40:23 +0000
Subject: compiling python2.5 on linux under wine
In-Reply-To: <ced5f0f60901031322k283451c7i766ac2164489ad50@mail.gmail.com>
References: <ced5f0f60901031322k283451c7i766ac2164489ad50@mail.gmail.com>
Message-ID: <ced5f0f60901071240u65cd86c0r6edde9c4205743be@mail.gmail.com>

On Sat, Jan 3, 2009 at 9:22 PM, Luke Kenneth Casson Leighton
<lkcl at lkcl.net> wrote:

> hey, has anyone investigated compiling python2.5 using winegcc, under wine?

some people might find this kind of thing amusing.  it's considered in
very obtuse circles to be "progress"... :)


lkcl at gonzalez:/mnt/src/python2.5-2.5.2/Lib$ ../build/python -v
Could not find platform independent libraries <prefix>
Could not find platform dependent libraries <exec_prefix>
Consider setting $PYTHONHOME to <prefix>[:<exec_prefix>]
# installing zipimport hook
import zipimport # builtin
# installed zipimport hook
'import site' failed; traceback:
ImportError: No module named site
Python 2.5.2 (r252:60911, Jan  7 2009, 20:33:53) [gcc] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import site
fixme:msvcrt:MSVCRT__sopen : pmode 0x01b6 ignored
fixme:msvcrt:MSVCRT__sopen : pmode 0x01b6 ignored
fixme:msvcrt:MSVCRT__sopen : pmode 0x01b6 ignored
[....]
[....]
[....]
import sre_compile # from Z:\mnt\src\python2.5-2.5.2\Lib\sre_compile.py
fixme:msvcrt:MSVCRT__sopen : pmode 0x01b6 ignored
fixme:msvcrt:MSVCRT__sopen : pmode 0x01b6 ignored
fixme:msvcrt:MSVCRT__sopen : pmode 0x01b6 ignored
# wrote Z:\mnt\src\python2.5-2.5.2\Lib\sre_compile.pyc
import _sre # builtin
import sre_constants # from Z:\mnt\src\python2.5-2.5.2\Lib\sre_constants.py
# wrote Z:\mnt\src\python2.5-2.5.2\Lib\sre_constants.pyc
import sre_parse # from Z:\mnt\src\python2.5-2.5.2\Lib\sre_parse.py
# wrote Z:\mnt\src\python2.5-2.5.2\Lib\sre_parse.pyc
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "site.py", line 415, in <module>
    main()
  File "site.py", line 406, in main
    aliasmbcs()
  File "site.py", line 356, in aliasmbcs
    import locale, codecs
  File "Z:\mnt\src\python2.5-2.5.2\Lib\locale.py", line 167, in <module>
    import re, operator
  File "Z:\mnt\src\python2.5-2.5.2\Lib\re.py", line 223, in <module>
    _pattern_type = type(sre_compile.compile("", 0))
  File "Z:\mnt\src\python2.5-2.5.2\Lib\sre_compile.py", line 530, in compile
    groupindex, indexgroup
OverflowError: signed integer is less than minimum
>>>


From m.b.lankhorst at gmail.com  Wed Jan  7 16:01:28 2009
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Wed, 07 Jan 2009 23:01:28 +0100
Subject: Unused function in quartz
In-Reply-To: <1096648c0901060502r73aa314ajfc01536301996f93@mail.gmail.com>
References: <alpine.DEB.1.10.0901061107210.20777@amboise.dolphin>
	<1096648c0901060502r73aa314ajfc01536301996f93@mail.gmail.com>
Message-ID: <49652638.7060201@gmail.com>

Hello Francois,

Rob Shearman schreef:
> 2009/1/6 Francois Gouget <fgouget at free.fr>:
>   
>> In the following commit you added the OutputPin_DeliverNewSegment()
>> function to pin.c. However today it is unused. Is there any plan to use
>> it? Is it still relevant?
>>     
>
> Not, it looks like it has been superseded by InputPin_NewSegment. If
> Maarten agrees, then feel free to send a patch to remove it.
>   
Even my win32 compatible dirac codec is not using it, so feel free to 
remove it :)

Cheers,
Maarten.



From leslie_alistair at hotmail.com  Wed Jan  7 21:51:58 2009
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Thu, 8 Jan 2009 14:51:58 +1100
Subject: mshtml: Implement IHTMLStyle get/set Attribute
References: <4961E04F.6050200@hotmail.com>
Message-ID: <gk3t8v$act$1@ger.gmane.org>

Hi,

Is there anything wrong with this patch?


Best Regards
 Alistair Leslie-Hughes



> From dca7b396838e3367ad78144ccb07aed24cd5917f Mon Sep 17 00:00:00 2001
> From: Alistair Leslie-Hughes <leslie_alistair at hotmail.com>
> Date: Mon, 5 Jan 2009 21:22:35 +1100
> Subject: [PATCH] Implement IHTMLStyle get/set Attribute
> To: wine-patches <wine-patches at winehq.org>
>
> ---
> dlls/mshtml/htmlstyle.c |   69 
> ++++++++++++++++++++++++++++++++++++++++++----
> dlls/mshtml/tests/dom.c |   36 ++++++++++++++++++++++++
> 2 files changed, 99 insertions(+), 6 deletions(-)
>
> diff --git a/dlls/mshtml/htmlstyle.c b/dlls/mshtml/htmlstyle.c
> index fa4ad51..3453f7b 100644
> --- a/dlls/mshtml/htmlstyle.c
> +++ b/dlls/mshtml/htmlstyle.c
> @@ -2048,18 +2048,75 @@ static HRESULT WINAPI 
> HTMLStyle_setAttribute(IHTMLStyle *iface, BSTR strAttribut
>         VARIANT AttributeValue, LONG lFlags)
> {
>     HTMLStyle *This = HTMLSTYLE_THIS(iface);
> -    FIXME("(%p)->(%s v%d %08x)\n", This, debugstr_w(strAttributeName),
> -          V_VT(&AttributeValue), lFlags);
> -    return E_NOTIMPL;
> +    HRESULT hres;
> +    DISPID dispid;
> +
> +    TRACE("(%p)->(%s v%d %08x)\n", This, debugstr_w(strAttributeName),
> +           V_VT(&AttributeValue), lFlags);
> +
> +    if(!strAttributeName)
> +        return E_INVALIDARG;
> +
> +    if(lFlags == 1)
> +        FIXME("Parameter lFlags ignored\n");
> +
> +    hres = HTMLStyle_GetIDsOfNames(iface, &IID_NULL, 
> (LPOLESTR*)&strAttributeName, 1,
> +                        LOCALE_USER_DEFAULT, &dispid);
> +    if(hres == S_OK)
> +    {
> +        VARIANT ret;
> +        DISPID dispidNamed = DISPID_PROPERTYPUT;
> +        DISPPARAMS params;
> +
> +        params.cArgs = 1;
> +        params.rgvarg = &AttributeValue;
> +        params.cNamedArgs = 1;
> +        params.rgdispidNamedArgs = &dispidNamed;
> +
> +        hres = HTMLStyle_Invoke(iface, dispid, &IID_NULL, 
> LOCALE_SYSTEM_DEFAULT,
> +            DISPATCH_PROPERTYPUT, &params, &ret, NULL, NULL);
> +    }
> +    else
> +    {
> +        FIXME("Custom attributes not supported.\n");
> +    }
> +
> +    TRACE("ret: %08x\n", hres);
> +
> +    return hres;
> }
>
> static HRESULT WINAPI HTMLStyle_getAttribute(IHTMLStyle *iface, BSTR 
> strAttributeName,
>         LONG lFlags, VARIANT *AttributeValue)
> {
>     HTMLStyle *This = HTMLSTYLE_THIS(iface);
> -    FIXME("(%p)->(%s %08x %p)\n", This, debugstr_w(strAttributeName),
> -         lFlags, AttributeValue);
> -    return E_NOTIMPL;
> +    HRESULT hres;
> +    DISPID dispid;
> +
> +    TRACE("(%p)->(%s v%p %08x)\n", This, debugstr_w(strAttributeName),
> +          AttributeValue, lFlags);
> +
> +    if(!AttributeValue || !strAttributeName)
> +        return E_INVALIDARG;
> +
> +    if(lFlags == 1)
> +        FIXME("Parameter lFlags ignored\n");
> +
> +    hres = HTMLStyle_GetIDsOfNames(iface, &IID_NULL, 
> (LPOLESTR*)&strAttributeName, 1,
> +                        LOCALE_USER_DEFAULT, &dispid);
> +    if(hres == S_OK)
> +    {
> +        DISPPARAMS params = {NULL, NULL, 0, 0 };
> +
> +        hres = HTMLStyle_Invoke(iface, dispid, &IID_NULL, 
> LOCALE_SYSTEM_DEFAULT,
> +            DISPATCH_PROPERTYGET, &params, AttributeValue, NULL, NULL);
> +    }
> +    else
> +    {
> +        FIXME("Custom attributes not supported.\n");
> +    }
> +
> +    return hres;
> }
>
> static HRESULT WINAPI HTMLStyle_removeAttribute(IHTMLStyle *iface, BSTR 
> strAttributeName,
> diff --git a/dlls/mshtml/tests/dom.c b/dlls/mshtml/tests/dom.c
> index de363bb..516aa3e 100644
> --- a/dlls/mshtml/tests/dom.c
> +++ b/dlls/mshtml/tests/dom.c
> @@ -2745,6 +2745,42 @@ static void test_default_style(IHTMLStyle *style)
>     ok(hres == S_OK, "put_overflow failed: %08x\n", hres);
>     SysFreeString(sOverflowDefault);
>
> +    /* Attribute Tests*/
> +    hres = IHTMLStyle_getAttribute(style, NULL, 1, &v);
> +    ok(hres == E_INVALIDARG, "getAttribute failed: %08x\n", hres);
> +
> +    str = a2bstr("position");
> +    hres = IHTMLStyle_getAttribute(style, str, 1, NULL);
> +    ok(hres == E_INVALIDARG, "getAttribute failed: %08x\n", hres);
> +
> +    hres = IHTMLStyle_getAttribute(style, str, 1, &v);
> +    ok(hres == S_OK, "getAttribute failed: %08x\n", hres);
> +    ok(V_VT(&v) == VT_BSTR, "type failed: %d\n", V_VT(&v));
> +    VariantClear(&v);
> +
> +    hres = IHTMLStyle_setAttribute(style, NULL, v, 1);
> +    ok(hres == E_INVALIDARG, "getAttribute failed: %08x\n", hres);
> +
> +    V_VT(&v) = VT_BSTR;
> +    V_BSTR(&v) = a2bstr("absolute");
> +    hres = IHTMLStyle_setAttribute(style, str, v, 1);
> +    ok(hres == S_OK, "setAttribute failed: %08x\n", hres);
> +    VariantClear(&v);
> +
> +    hres = IHTMLStyle_getAttribute(style, str, 1, &v);
> +    ok(hres == S_OK, "getAttribute failed: %08x\n", hres);
> +    ok(V_VT(&v) == VT_BSTR, "type failed: %d\n", V_VT(&v));
> +    ok(!strcmp_wa(V_BSTR(&v), "absolute"), "str=%s\n", 
> dbgstr_w(V_BSTR(&v)));
> +    VariantClear(&v);
> +
> +    V_VT(&v) = VT_BSTR;
> +    V_BSTR(&v) = NULL;
> +    hres = IHTMLStyle_setAttribute(style, str, v, 1);
> +    ok(hres == S_OK, "setAttribute failed: %08x\n", hres);
> +    VariantClear(&v);
> +
> +    SysFreeString(str);
> +
>     hres = IHTMLStyle_QueryInterface(style, &IID_IHTMLStyle2, 
> (void**)&style2);
>     ok(hres == S_OK, "Could not get IHTMLStyle2 iface: %08x\n", hres);
>     if(SUCCEEDED(hres)) {
> -- 
> 1.5.4.3
>
>


--------------------------------------------------------------------------------


>
> 




From kde at graph-ix.net  Wed Jan  7 22:25:20 2009
From: kde at graph-ix.net (Markus)
Date: Wed, 7 Jan 2009 23:25:20 -0500
Subject: Implementing b3DAccelerationExists and b3DAccelerationEnabled in
	dxdiagn
In-Reply-To: <1231329312.5547.58.camel@p4.lan>
References: <200901052210.51639.kde@graph-ix.net>
	<200901062247.53605.kde@graph-ix.net>
	<1231329312.5547.58.camel@p4.lan>
Message-ID: <200901072325.21023.kde@graph-ix.net>

On Wednesday 07 January 2009 06:55:12 Detlef Riekenberg wrote:
> > This value should
> > return true if e.g. hardware accelerated T&L is available on the system,
> > which is primarily a result of driver and hardware capabilities.
>
> This is for b3DAccelerationExists and native dxdiagn in Wine with some
> d3d* debug channels might help a bit.
What I have found so far is that the native dxdiagn.dll retrieves the device 
capabilities using IDirect3D9Impl_GetDeviceCaps. However, I was unable to find 
any values for the caps struct, where the native dll would determine that 
b3DAccelerationExists was supposed to be false. The only result I got in that 
regard was that by setting caps->DevCaps to 0, a human readable warning about 
missing D3d9+ hardware acceleration would be added to szNotesLocalized.

Does anyone have an idea on what else could be the basis for this flag?

-- 
Markus


From dank at kegel.com  Wed Jan  7 23:34:30 2009
From: dank at kegel.com (Dan Kegel)
Date: Wed, 7 Jan 2009 21:34:30 -0800
Subject: Proof the new site design is superior!
Message-ID: <a71bd89a0901072134n507d9eafs106eae76740dce4a@mail.gmail.com>

The new site design is already paying dividends.  Look:
http://www.zmogo.com/gear/the-new-year-linux-resolution-day-5/
says:
"... I chose Wine mainly because its site is more appealing looking
than VMware's, which has all the sleek design features and
well-considered organization of an expired domain name..."

:-)


From zgold at bluesata.com  Wed Jan  7 23:50:43 2009
From: zgold at bluesata.com (Zachary Goldberg)
Date: Thu, 8 Jan 2009 00:50:43 -0500
Subject: Proof the new site design is superior!
In-Reply-To: <a71bd89a0901072134n507d9eafs106eae76740dce4a@mail.gmail.com>
References: <a71bd89a0901072134n507d9eafs106eae76740dce4a@mail.gmail.com>
Message-ID: <b050a5e70901072150j69dd8342t2b14ecb375e00815@mail.gmail.com>

2009/1/8 Dan Kegel <dank at kegel.com>:
> The new site design is already paying dividends.  Look:
> http://www.zmogo.com/gear/the-new-year-linux-resolution-day-5/
> says:
> "... I chose Wine mainly because its site is more appealing looking
> than VMware's, which has all the sleek design features and
> well-considered organization of an expired domain name..."
>
> :-)
>
>
>

While I agree with you Dan that its nice that he commends the site
(which is rather nice) I think there is another big takeaway here.  I
think the experience that is documented here is probably rather
typical.  Some success with annoying bugs and some utter failure.  I'm
pretty certain with a bit of effort and tweaking his applications
could run nigh flawlessly.  I dream of a day when it just works out of
the box.

Perhaps we should write to the author and have him try crossover on day 6? :)


From wineappdb at googlemail.com  Wed Jan  7 08:46:48 2009
From: wineappdb at googlemail.com (IneedAname)
Date: Wed, 7 Jan 2009 14:46:48 +0000
Subject: Dates in Wine announcement
In-Reply-To: <49640661.7070101@urbanec.net>
References: <aac02a530901060258i5a5d8e5vc9c2d1b630b952bb@mail.gmail.com>
	<49640661.7070101@urbanec.net>
Message-ID: <20090107144648.282b3f3c@test-main>

On Wed, 07 Jan 2009 12:33:21 +1100
Peter Urbanec <winehq.org at urbanec.net> wrote:

> Speaking of dates... My pet peeve is seeing ambiguous dates such as
> 2/1/08. To me (and most of the world), that looks like 2nd Jan 2008, but
> it appears that millions of people in the USA see it as 1st Feb 2008.
> So, in the interest of disambiguation, I'd like to see human readable
> dates with the month either fully spelled out or using a three letter
> abbreviation. Date formats that are intended to be parsed by machines
> are best represented as 2008-01-23, so that they are collated correctly
> when sorted by a simple lexicographical routine.
> 
> Cheers.

If we had the date please spell it out in full. Then we all are on the same page world over.
Wednesday, 07 January 2009

Can you bring back the link to the newest version of wine.
E.G. link http://www.winehq.org/?announce=latest to http://www.winehq.org/announce/1.1.12
This did work before the website had its make over.


From wineappdb at googlemail.com  Wed Jan  7 11:13:18 2009
From: wineappdb at googlemail.com (IneedAname)
Date: Wed, 7 Jan 2009 17:13:18 +0000
Subject: New appdb checkbox: "officially supports wine"?
In-Reply-To: <a71bd89a0901070752m3e5eba2qcc3c925c5bf53637@mail.gmail.com>
References: <a71bd89a0901070752m3e5eba2qcc3c925c5bf53637@mail.gmail.com>
Message-ID: <20090107171318.6b095310@test-main>

On Wed, 7 Jan 2009 07:52:46 -0800
"Dan Kegel" <dank at kegel.com> wrote:

> http://wiki.winehq.org/AppsThatSupportWine is a nice
> stopgap, but perhaps it should be a report in the
> appdb, driven by a checkbox that maintainers can check.
> What do folks think?

You get my vote!


From wineappdb at googlemail.com  Wed Jan  7 14:10:31 2009
From: wineappdb at googlemail.com (IneedAname)
Date: Wed, 7 Jan 2009 20:10:31 +0000
Subject: AppDB: Rating / Patching
In-Reply-To: <811b48bd0901071046k324cf5e0r3895a6864dd58b80@mail.gmail.com>
References: <3743894.1231268582161.JavaMail.root@elwamui-huard.atl.sa.earthlink.net>
	<aee06c9e0901061730g6705a127xae56188849020cc9@mail.gmail.com>
	<39c14e440901070147q111c1a16g197e867b26acbb3f@mail.gmail.com>
	<811b48bd0901070156q13c2594ao6e7c652ad7cc4800@mail.gmail.com>
	<b050a5e70901070547rdca5797j86bc88a61c9106d6@mail.gmail.com>
	<811b48bd0901071046k324cf5e0r3895a6864dd58b80@mail.gmail.com>
Message-ID: <20090107201031.6773c2d1@test-main>

On Wed, 7 Jan 2009 13:46:06 -0500
Sparr <sparr0 at gmail.com> wrote:

> I have not investigated the state of wine launchers in about a year
> now.  Do any of those handle multiple WINEPREFIXes?  That is the most
> important feature of Cedega's launcher that I was never able to find
> in a wine launcher.  Thank you and forgive me if things have improved.
http://repo.or.cz/w/WineLauncher.git?a=shortlog


From hans at codeweavers.com  Thu Jan  8 03:05:28 2009
From: hans at codeweavers.com (Hans Leidekker)
Date: Thu, 8 Jan 2009 10:05:28 +0100
Subject: setupapi/tests: Remove an unneeded cast.
In-Reply-To: <alpine.DEB.1.10.0901080004570.28963@amboise.dolphin>
References: <alpine.DEB.1.10.0901080004570.28963@amboise.dolphin>
Message-ID: <200901081005.29436.hans@codeweavers.com>

On Thursday 08 January 2009 00:05:01 Francois Gouget wrote:

>      memset(buffer, 0x55, sizeof(buffer));
> -    retval = pStringTableLookUpStringEx(table, uilevel, ST_CASE_SENSITIVE_COMPARE, buffer, (LPDWORD)0);
> +    retval = pStringTableLookUpStringEx(table, uilevel, ST_CASE_SENSITIVE_COMPARE, buffer, NULL);
>      ok(retval != ~0u, "failed find 'UILEVEL' in string table\n");
>      ok(memcmp(buffer, &data, 4), "unexpected data\n");

This test is there to show that the prototype of StringTableLookUpStringEx
is broken; the last parameter is treated as an integer instead of a pointer
and this notation serves to document that fact. But I can see how this will
repeatedly trigger janitorial scripts, so I do not object to this patch
going in.

 -Hans


From hverbeet at gmail.com  Thu Jan  8 03:26:32 2009
From: hverbeet at gmail.com (Henri Verbeet)
Date: Thu, 8 Jan 2009 10:26:32 +0100
Subject: setupapi/tests: Remove an unneeded cast.
In-Reply-To: <200901081005.29436.hans@codeweavers.com>
References: <alpine.DEB.1.10.0901080004570.28963@amboise.dolphin>
	<200901081005.29436.hans@codeweavers.com>
Message-ID: <d658b69e0901080126o7c6e3418lf5aba664c6fa01b7@mail.gmail.com>

2009/1/8 Hans Leidekker <hans at codeweavers.com>:
> On Thursday 08 January 2009 00:05:01 Francois Gouget wrote:
>
>>      memset(buffer, 0x55, sizeof(buffer));
>> -    retval = pStringTableLookUpStringEx(table, uilevel, ST_CASE_SENSITIVE_COMPARE, buffer, (LPDWORD)0);
>> +    retval = pStringTableLookUpStringEx(table, uilevel, ST_CASE_SENSITIVE_COMPARE, buffer, NULL);
>>      ok(retval != ~0u, "failed find 'UILEVEL' in string table\n");
>>      ok(memcmp(buffer, &data, 4), "unexpected data\n");
>
> This test is there to show that the prototype of StringTableLookUpStringEx
> is broken; the last parameter is treated as an integer instead of a pointer
> and this notation serves to document that fact. But I can see how this will
> repeatedly trigger janitorial scripts, so I do not object to this patch
> going in.
>
Using 0 instead of NULL should work just as well, if that makes it any clearer.


From julliard at winehq.org  Thu Jan  8 04:22:59 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 08 Jan 2009 11:22:59 +0100
Subject: setupapi/tests: Remove an unneeded cast.
In-Reply-To: <200901081005.29436.hans@codeweavers.com> (Hans Leidekker's
	message of "Thu, 8 Jan 2009 10:05:28 +0100")
References: <alpine.DEB.1.10.0901080004570.28963@amboise.dolphin>
	<200901081005.29436.hans@codeweavers.com>
Message-ID: <87ljtm2j24.fsf@wine.dyndns.org>

Hans Leidekker <hans at codeweavers.com> writes:

> On Thursday 08 January 2009 00:05:01 Francois Gouget wrote:
>
>>      memset(buffer, 0x55, sizeof(buffer));
>> -    retval = pStringTableLookUpStringEx(table, uilevel, ST_CASE_SENSITIVE_COMPARE, buffer, (LPDWORD)0);
>> +    retval = pStringTableLookUpStringEx(table, uilevel, ST_CASE_SENSITIVE_COMPARE, buffer, NULL);
>>      ok(retval != ~0u, "failed find 'UILEVEL' in string table\n");
>>      ok(memcmp(buffer, &data, 4), "unexpected data\n");
>
> This test is there to show that the prototype of StringTableLookUpStringEx
> is broken; the last parameter is treated as an integer instead of a pointer
> and this notation serves to document that fact. But I can see how this will
> repeatedly trigger janitorial scripts, so I do not object to this patch
> going in.

Where does the prototype come from?  AFAICS it's not in the PSDK. Maybe
it's just wrong.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Thu Jan  8 04:25:46 2009
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 08 Jan 2009 11:25:46 +0100
Subject: Implementing b3DAccelerationExists and b3DAccelerationEnabled in
	dxdiagn
In-Reply-To: <200901072325.21023.kde@graph-ix.net> (Markus's message of "Wed, 
	7 Jan 2009 23:25:20 -0500")
References: <200901052210.51639.kde@graph-ix.net>
	<200901062247.53605.kde@graph-ix.net>
	<1231329312.5547.58.camel@p4.lan>
	<200901072325.21023.kde@graph-ix.net>
Message-ID: <87hc4a2ixh.fsf@wine.dyndns.org>

Markus <kde at graph-ix.net> writes:

> What I have found so far is that the native dxdiagn.dll retrieves the device 
> capabilities using IDirect3D9Impl_GetDeviceCaps. However, I was unable to find 
> any values for the caps struct, where the native dll would determine that 
> b3DAccelerationExists was supposed to be false.

You are not allowed to look at what calls the native dll makes, that's
an implementation detail. The only thing you can do with native is to
write test cases to determine the externally visible behavior.

-- 
Alexandre Julliard
julliard at winehq.org


From Paul.Hampson at Pobox.com  Thu Jan  8 04:46:28 2009
From: Paul.Hampson at Pobox.com (Paul TBBle Hampson)
Date: Thu, 8 Jan 2009 21:46:28 +1100
Subject: setupapi/tests: Remove an unneeded cast.
In-Reply-To: <200901081005.29436.hans@codeweavers.com>
References: <alpine.DEB.1.10.0901080004570.28963@amboise.dolphin>
	<200901081005.29436.hans@codeweavers.com>
Message-ID: <20090108104628.GA4953@keitarou.watson.bubblesworth.net>

On Thu, Jan 08, 2009 at 10:05:28AM +0100, Hans Leidekker wrote:
> On Thursday 08 January 2009 00:05:01 Francois Gouget wrote:

>>      memset(buffer, 0x55, sizeof(buffer));
>> -    retval = pStringTableLookUpStringEx(table, uilevel, ST_CASE_SENSITIVE_COMPARE, buffer, (LPDWORD)0);
>> +    retval = pStringTableLookUpStringEx(table, uilevel, ST_CASE_SENSITIVE_COMPARE, buffer, NULL);
>>      ok(retval != ~0u, "failed find 'UILEVEL' in string table\n");
>>      ok(memcmp(buffer, &data, 4), "unexpected data\n");

> This test is there to show that the prototype of StringTableLookUpStringEx
> is broken; the last parameter is treated as an integer instead of a pointer
> and this notation serves to document that fact.

Wouldn't that actually be different type sizes under Win64?

-- 
-----------------------------------------------------------
Paul "TBBle" Hampson, B.Sc, LPI, MCSE
Very-later-year Asian Studies student, ANU
The Boss, Bubblesworth Pty Ltd (ABN: 51 095 284 361)
Paul.Hampson at Pobox.com

Of course Pacman didn't influence us as kids. If it did,
we'd be running around in darkened rooms, popping pills and
listening to repetitive music.
 -- Kristian Wilson, Nintendo, Inc, 1989

License: http://creativecommons.org/licenses/by/2.5/au/
-----------------------------------------------------------
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20090108/7dbdcefe/attachment.pgp 

From hans at codeweavers.com  Thu Jan  8 04:51:17 2009
From: hans at codeweavers.com (Hans Leidekker)
Date: Thu, 8 Jan 2009 11:51:17 +0100
Subject: setupapi/tests: Remove an unneeded cast.
In-Reply-To: <87ljtm2j24.fsf@wine.dyndns.org>
References: <alpine.DEB.1.10.0901080004570.28963@amboise.dolphin>
	<200901081005.29436.hans@codeweavers.com>
	<87ljtm2j24.fsf@wine.dyndns.org>
Message-ID: <200901081151.17766.hans@codeweavers.com>

On Thursday 08 January 2009 11:22:59 Alexandre Julliard wrote:

> > This test is there to show that the prototype of StringTableLookUpStringEx
> > is broken; the last parameter is treated as an integer instead of a pointer
> > and this notation serves to document that fact. But I can see how this will
> > repeatedly trigger janitorial scripts, so I do not object to this patch
> > going in.
> 
> Where does the prototype come from?  AFAICS it's not in the PSDK. Maybe
> it's just wrong.

I don't know where the prototype came from, there was a stub there already
which entered Wine with commit 8196e2d0d0dbd04325201e14d95f88cad3cfd00f.

So we might as well change the prototype, given its demonstrated behavior.

 -Hans


From theli at ukr.net  Thu Jan  8 05:30:33 2009
From: theli at ukr.net (Anton Romanov)
Date: Thu, 08 Jan 2009 13:30:33 +0200
Subject: D3D shaders
Message-ID: <E1LKt5t-0001MU-Pn@ffe12.ukr.net>

Hi.  
First, sorry for maybe somewhat newbish questions/approach... but anyway.  
Do i understand correctly that wined3d implementation takes d3d shaders' bytecode and converts it to other format depending on hardware?  
What is the state of wine's d3d shaders' implementation?  
I'm asking because I've recently came across a MojoShader (http://icculus.org/mojoshader/) project which is a library (zlib licensed) to convert compiled Direct3D shaders from bytecode to some other format (several profiles). The library seems to work well - it is used for OpenGL renderer in Unreal Tournament 3 engine. So i wonder - can there be some benefit to wine from such a project?  
Thanks.  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20090108/d7c20d84/attachment.htm 

From fgouget at free.fr  Thu Jan  8 05:31:23 2009
From: fgouget at free.fr (Francois Gouget)
Date: Thu, 8 Jan 2009 12:31:23 +0100 (CET)
Subject: setupapi/tests: Remove an unneeded cast.
In-Reply-To: <200901081151.17766.hans@codeweavers.com>
References: <alpine.DEB.1.10.0901080004570.28963@amboise.dolphin>
	<200901081005.29436.hans@codeweavers.com>
	<87ljtm2j24.fsf@wine.dyndns.org>
	<200901081151.17766.hans@codeweavers.com>
Message-ID: <alpine.DEB.1.10.0901081230240.25568@amboise.dolphin>

On Thu, 8 Jan 2009, Hans Leidekker wrote:
[...]
> I don't know where the prototype came from, there was a stub there already
> which entered Wine with commit 8196e2d0d0dbd04325201e14d95f88cad3cfd00f.

I did not find it in my SDKs either. And a web search turned no useful 
result.


> So we might as well change the prototype, given its demonstrated behavior.

Works for me. I'm sending a patch...


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
        War doesn't determine who's right.  War determines who's left.


From stefan at codeweavers.com  Thu Jan  8 06:31:04 2009
From: stefan at codeweavers.com (Stefan Dosinger)
Date: Thu, 8 Jan 2009 13:31:04 +0100
Subject: D3D shaders
In-Reply-To: <E1LKt5t-0001MU-Pn@ffe12.ukr.net>
References: <E1LKt5t-0001MU-Pn@ffe12.ukr.net>
Message-ID: <006301c9718c$fa0e2180$ee2a6480$@com>

> First, sorry for maybe somewhat newbish questions/approach... but anyway. 
> Do i understand correctly that wined3d implementation takes d3d shaders'
bytecode and converts it to other
> format depending on hardware? 
Correct. Currently we support GL_ARB_*_program and GLSL, but the backends
are modularized so its possible to add other stuff as well(considerations
are GL_NV_*_program, Nvidia's Cg shader, GL_ATI_fragment_shader and
GL_NV_texture_shader, or whatever may come up in the future)

> I'm asking because I've recently came across a MojoShader
(http://icculus.org/mojoshader/) project which is
> a library (zlib licensed) to convert compiled Direct3D shaders from
bytecode to some other format (several
> profiles). The library seems to work well - it is used for OpenGL renderer
in Unreal Tournament 3 engine.
> So i wonder - can there be some benefit to wine from such a project?
I don't think it would be any use for wine.

The part that MojoShader does - streight conversion from D3D bytecode into
some GL shader - is pretty well understood. The things that make problems(or
used to make, in the meantime its handled pretty well in wine) are implicit
dependencies on d3d settings outside the shader, e.g. bound textures or the
"fixed function" bump map matrices etc. As far as I can see is that this is
completely unimplemented in mojoshader:

>  2936     // !!! FIXME: do non-RGBA textures map to same default values as
D3D?

>  2940         // ps_1_0 and ps_1_4 are both different, too!
>  2941         fail(ctx, "TEXLD <= Shader Model 2.0 unimplemented.");  //
!!! FIXME
>  2942         return;

>  3017 EMIT_GLSL_OPCODE_UNIMPLEMENTED_FUNC(TEXBEM)  // !!! FIXME
>  3018 EMIT_GLSL_OPCODE_UNIMPLEMENTED_FUNC(TEXBEML) // !!! FIXME

MojoShader is useful as an abstraction layer if you're writing your own
application, like UT3 does, but it is not suitable to handle unmodified D3D
shaders which were never intended to run with opengl.




From fgouget at free.fr  Thu Jan  8 07:17:58 2009
From: fgouget at free.fr (Francois Gouget)
Date: Thu, 8 Jan 2009 14:17:58 +0100 (CET)
Subject: Functions that should be static
In-Reply-To: <alpine.DEB.1.10.0812180944001.3453@amboise.dolphin>
References: <alpine.DEB.1.10.0812180944001.3453@amboise.dolphin>
Message-ID: <alpine.DEB.1.10.0901081013540.18338@amboise.dolphin>


Thanks for the help with this task. With the last round of patches we 
are now down to about 280 warnings so there's definite progress. Here's 
the updated list:

dlls/cabinet/fdi.o: make_decode_table should be made static
dlls/cabinet/fdi.o: QTMupdatemodel should be made static
dlls/comctl32/tests/msg.o: flush_sequence should be made static
dlls/d3dxof/parsing.o: parse_template_option_info should be made static
dlls/dbghelp/storage.o: hash_table_find should be made static
dlls/dmime/patterntrack.o: DMUSIC_CreateDirectMusicPatternTrackImpl should be made static
dlls/dmime/tool.o: DMUSIC_CreateDirectMusicobjImpl should be made static
dlls/dplayx/dplay.o: cbDeleteGroupsElem should be made static
dlls/dplayx/dplay.o: cbDeletePlayerElem should be made static
dlls/dplayx/dplayx_global.o: DPLAYX_DestroyLobbyApplication should be made static
dlls/dplayx/dplayx_global.o: DPLAYX_SetLocalSession should be made static
dlls/dplayx/name_server.o: NS_GetOtherMagic should be made static
dlls/dplayx/name_server.o: NS_SetRemoteComputerAsNameServer should be made static
dlls/dsound/capture.o: DirectSoundCaptureDevice_AddRef should be made static
dlls/fusion/assembly.o: assembly_get_architecture should be made static
dlls/fusion/fusion.o: CompareAssemblyIdentity should be made static
dlls/fusion/fusion.o: GetAssemblyIdentityFromFile should be made static
dlls/inetcomm/internettransport.o: InternetTransport_Read should be made static
dlls/iphlpapi/ifenum.o: getInterfaceEntryByIndex should be made static
dlls/iphlpapi/ifenum.o: getInterfacePhysicalByName should be made static
dlls/itss/chm_lib.o: chm_enumerate should be made static
dlls/jscript/parser.tab.o: parser_parse should be made static
dlls/mountmgr.sys/mountmgr.o: DriverEntry should be made static
dlls/msacm32/internal.o: MSACM_UnregisterLocalDriver should be made static
dlls/mshtml/htmlelemcol.o: HTMLElementCollection_Create should be made static
dlls/msi/cond.tab.o: cond_parse should be made static
dlls/msi/database.o: MSI_DatabaseExport should be made static
dlls/msi/database.o: MSI_DatabaseImport should be made static
dlls/msi/dialog.o: msi_dialog_register_class should be made static
dlls/msi/events.o: ControlEvent_UnSubscribeToEvent should be made static
dlls/msi/helpers.o: msi_ui_error should be made static
dlls/msi/helpers.o: reduce_to_shortfilename should be made static
dlls/msi/media.o: find_published_source should be made static
dlls/msi/media.o: msi_load_media_info should be made static
dlls/msi/preview.o: MSI_EnableUIPreview should be made static
dlls/msi/preview.o: MSI_PreviewDialogW should be made static
dlls/msi/record.o: MSI_RecordDataSize should be made static
dlls/msi/record.o: MSI_RecordSetStream should be made static
dlls/msi/record.o: MSI_RecordSetStringA should be made static
dlls/msi/registry.o: MSIREG_OpenInstallerFeaturesKey should be made static
dlls/msi/registry.o: msi_version_dword_to_str should be made static
dlls/msi/sql.tab.o: sql_parse should be made static
dlls/msi/string.o: msi_id2stringA should be made static
dlls/msi/string.o: msi_id2stringW should be made static
dlls/msi/string.o: msi_strcmp should be made static
dlls/msi/string.o: msi_string2idA should be made static
dlls/msi/table.o: db_get_raw_stream should be made static
dlls/msi/table.o: encode_streamname should be made static
dlls/netapi32/nbnamecache.o: NBNameCacheUpdateNBName should be made static
dlls/ole32/ole16.o: IMalloc16_Constructor should be made static
dlls/qcap/enummedia.o: FreeMediaType should be made static
dlls/qcap/pin.o: IPinImpl_QueryInternalConnections should be made static
dlls/riched20/caret.o: ME_SelectByType should be made static
dlls/riched20/caret.o: ME_UpdateSelection should be made static
dlls/riched20/editor.o: ME_DestroyEditor should be made static
dlls/riched20/editor.o: ME_FindNextURLCandidate should be made static
dlls/riched20/editor.o: ME_HandleMessage should be made static
dlls/riched20/editor.o: ME_IsCandidateAnURL should be made static
dlls/riched20/editor.o: ME_LinkNotify should be made static
dlls/riched20/editor.o: ME_MakeEditor should be made static
dlls/riched20/editor.o: ME_UpdateLinkAttribute should be made static
dlls/riched20/editor.o: ME_UpdateSelectionLinkAttribute should be made static
dlls/riched20/editor.o: REComboWndProc should be made static
dlls/riched20/editor.o: REListWndProc should be made static
dlls/riched20/list.o: ME_DITypesEqual should be made static
dlls/riched20/list.o: ME_FindItemFwdOrHere should be made static
dlls/riched20/paint.o: ME_DrawParagraph should be made static
dlls/riched20/paint.o: ME_GetYScrollVisible should be made static
dlls/riched20/paint.o: ME_InvalidateFromOfs should be made static
dlls/riched20/paint.o: ME_QueueInvalidateFromCursor should be made static
dlls/riched20/paint.o: ME_Scroll should be made static
dlls/riched20/para.o: ME_GetParaFormat should be made static
dlls/riched20/para.o: ME_MarkForWrapping should be made static
dlls/riched20/para.o: ME_SetParaFormat should be made static
dlls/riched20/reader.o: RTFExpandStyle should be made static
dlls/riched20/reader.o: RTFGetClassCallback should be made static
dlls/riched20/reader.o: RTFGetDestinationCallback should be made static
dlls/riched20/reader.o: RTFGetInputName should be made static
dlls/riched20/reader.o: RTFGetOutputName should be made static
dlls/riched20/reader.o: RTFGetReadHook should be made static
dlls/riched20/reader.o: RTFGetStyle should be made static
dlls/riched20/reader.o: RTFHexToChar should be made static
dlls/riched20/reader.o: RTFPeekToken should be made static
dlls/riched20/reader.o: RTFSetClassCallback should be made static
dlls/riched20/reader.o: RTFSetInputName should be made static
dlls/riched20/reader.o: RTFSetOutputName should be made static
dlls/riched20/reader.o: RTFSetToken should be made static
dlls/riched20/reader.o: RTFUngetToken should be made static
dlls/riched20/row.o: ME_FindRowStart should be made static
dlls/riched20/string.o: ME_ConcatString should be made static
dlls/riched20/string.o: ME_GetOptimalBuffer should be made static
dlls/riched20/string.o: ME_MakeStringB should be made static
dlls/riched20/style.o: ME_CopyToCF2W should be made static
dlls/riched20/style.o: ME_ToCFAny should be made static
dlls/rpcrt4/ndr_marshall.o: NdrByteCountPointerMemorySize should be made static
dlls/rpcrt4/ndr_marshall.o: NdrRangeBufferSize should be made static
dlls/rpcrt4/ndr_marshall.o: NdrRangeFree should be made static
dlls/rpcrt4/ndr_marshall.o: NdrRangeMarshall should be made static
dlls/rpcrt4/ndr_marshall.o: NdrRangeMemorySize should be made static
dlls/rpcrt4/rpc_message.o: NCA2RPC_STATUS should be made static
dlls/rpcrt4/rpc_message.o: RPCRT4_receive_fragment should be made static
dlls/rpcrt4/rpc_message.o: RPCRT4_ValidateCommonHeader should be made static
dlls/rpcrt4/rpc_transport.o: RPCRT4_SpawnConnection should be made static
dlls/rsaenh/handle.o: alloc_handle_table should be made static
dlls/rsaenh/handle.o: release_handle_table should be made static
dlls/rsaenh/mpi.o: mp_2expt should be made static
dlls/rsaenh/mpi.o: mp_abs should be made static
dlls/rsaenh/mpi.o: mp_add_d should be made static
dlls/rsaenh/mpi.o: mp_clamp should be made static
dlls/rsaenh/mpi.o: mp_clear should be made static
dlls/rsaenh/mpi.o: mp_cmp_mag should be made static
dlls/rsaenh/mpi.o: mp_cnt_lsb should be made static
dlls/rsaenh/mpi.o: mp_div_2d should be made static
dlls/rsaenh/mpi.o: mp_div_2 should be made static
dlls/rsaenh/mpi.o: mp_div_d should be made static
dlls/rsaenh/mpi.o: mp_div should be made static
dlls/rsaenh/mpi.o: mp_dr_reduce should be made static
dlls/rsaenh/mpi.o: mp_dr_setup should be made static
dlls/rsaenh/mpi.o: mp_exch should be made static
dlls/rsaenh/mpi.o: mp_grow should be made static
dlls/rsaenh/mpi.o: mp_init should be made static
dlls/rsaenh/mpi.o: mp_init_size should be made static
dlls/rsaenh/mpi.o: mp_lshd should be made static
dlls/rsaenh/mpi.o: mp_mod_2d should be made static
dlls/rsaenh/mpi.o: mp_mod_d should be made static
dlls/rsaenh/mpi.o: mp_montgomery_calc_normalization should be made static
dlls/rsaenh/mpi.o: mp_montgomery_reduce should be made static
dlls/rsaenh/mpi.o: mp_montgomery_setup should be made static
dlls/rsaenh/mpi.o: mp_mul_2d should be made static
dlls/rsaenh/mpi.o: mp_mul_2 should be made static
dlls/rsaenh/mpi.o: mp_mul_d should be made static
dlls/rsaenh/mpi.o: mp_prime_is_divisible should be made static
dlls/rsaenh/mpi.o: mp_prime_is_prime should be made static
dlls/rsaenh/mpi.o: mp_prime_miller_rabin should be made static
dlls/rsaenh/mpi.o: mp_reduce_2k_setup should be made static
dlls/rsaenh/mpi.o: mp_reduce_2k should be made static
dlls/rsaenh/mpi.o: mp_reduce_setup should be made static
dlls/rsaenh/mpi.o: mp_reduce should be made static
dlls/rsaenh/mpi.o: mp_rshd should be made static
dlls/rsaenh/mpi.o: mp_set should be made static
dlls/rsaenh/mpi.o: mp_signed_bin_size should be made static
dlls/rsaenh/mpi.o: mp_sqrmod should be made static
dlls/rsaenh/mpi.o: mp_sqr should be made static
dlls/rsaenh/mpi.o: mp_zero should be made static
dlls/sane.ds/ds_ctrl.o: SANE_AutomaticCaptureDirectory should be made static
dlls/sane.ds/ds_ctrl.o: SANE_FileSystemCopy should be made static
dlls/sane.ds/ds_ctrl.o: SANE_PendingXfersStopFeeder should be made static
dlls/sane.ds/ds_ctrl.o: SANE_SetupFileXfer2GetDefault should be made static
dlls/sane.ds/ds_ctrl.o: SANE_SetupFileXfer2Get should be made static
dlls/sane.ds/ds_ctrl.o: SANE_SetupFileXfer2Reset should be made static
dlls/sane.ds/ds_ctrl.o: SANE_SetupFileXfer2Set should be made static
dlls/setupapi/parser.o: PARSER_string_substW should be made static
dlls/setupapi/virtcopy.o: VcpEnumFiles should be made static
dlls/setupapi/virtcopy.o: VcpFlush16 should be made static
dlls/setupapi/virtcopy.o: vsmStringCompare16 should be made static
dlls/setupapi/virtcopy.o: vsmStringFind16 should be made static
dlls/shell32/classes.o: HCR_GetDefaultIconFromGUIDW should be made static
dlls/shell32/clipboard.o: RenderFILECONTENTS should be made static
dlls/shell32/clipboard.o: RenderFILEDESCRIPTOR should be made static
dlls/shell32/clipboard.o: RenderPREFEREDDROPEFFECT should be made static
dlls/shell32/clipboard.o: RenderSHELLIDLISTOFFSET should be made static
dlls/shell32/pidl.o: ILGetDisplayNameExA should be made static
dlls/shell32/pidl.o: _ILGetSTextPointer should be made static
dlls/shell32/pidl.o: _ILGetTextPointerW should be made static
dlls/shell32/pidl.o: SHILCreateFromPathA should be made static
dlls/shell32/trash.o: TRASH_DisposeElement should be made static
dlls/shell32/xdg.o: XDG_GetPath should be made static
dlls/user32/cursoricon.o: LookupIconIdFromDirectory16 should be made static
dlls/user32/edit.o: EditWndProcW should be made static
dlls/uxtheme/uxini.o: UXINI_ResetINI should be made static
dlls/winealsa.drv/alsa.o: ALSA_PeekRingMessage should be made static
dlls/winealsa.drv/waveout.o: wodSetVolume should be made static
dlls/winedos/himem.o: DOSVM_AllocCodeUMB should be made static
dlls/winedos/himem.o: DOSVM_AllocUMB should be made static
dlls/winedos/int31.o: DPMI_FreeInternalRMCB should be made static
dlls/wineps.drv/color.o: PSDRV_CmpColor should be made static
dlls/wineps.drv/ps.o: PSDRV_WriteArrayGet should be made static
dlls/wineps.drv/ps.o: PSDRV_WriteInitClip should be made static
dlls/wineps.drv/ps.o: PSDRV_WriteRRectangle should be made static
dlls/winex11.drv/graphics.o: X11DRV_SetupGCForPen should be made static
dlls/winex11.drv/window.o: X11DRV_get_client_window should be made static
dlls/winex11.drv/window.o: X11DRV_window_to_X_rect should be made static
dlls/winex11.drv/xrandr.o: X11DRV_XRandR_Cleanup should be made static
dlls/winex11.drv/xvidmode.o: X11DRV_XF86VM_SetExclusiveMode should be made static
dlls/wininet/http.o: HTTP_FinishedReading should be made static
dlls/wininet/http.o: HTTP_GetHeader should be made static
dlls/wininet/http.o: HTTP_HttpOpenRequestW should be made static
dlls/wininet/http.o: HTTP_HttpSendRequestW should be made static
dlls/winmm/mci.o: MCI_DefYieldProc should be made static
dlls/winmm/mci.o: MCI_GetDriverFromString should be made static
dlls/winmm/mci.o: MCI_SendCommandFrom16 should be made static
dlls/winmm/mci.o: MCI_SendCommandFrom32 should be made static
dlls/winmm/mci.o: MCI_WriteString should be made static
dlls/wintrust/asn.o: CRYPT_AsnEncodeInt should be made static
dlls/wintrust/wintrust_main.o: WINTRUST_ReAlloc should be made static
dlls/wnaspi32/aspi.o: SCSI_GetDeviceName should be made static
dlls/wnaspi32/winaspi16.o: ASPI_SendASPICommand should be made static
dlls/wuapi/updates.o: AutomaticUpdates_create should be made static
programs/progman/dialog.o: DIALOG_Symbol should be made static
programs/regedit/childwnd.o: GetRootKeyName should be made static
programs/regedit/hexedit.o: HexEdit_Unregister should be made static
programs/regedit/regproc.o: GetMultiByteStringN should be made static
programs/regedit/regproc.o: GetWideStringN should be made static
programs/regedit/regproc.o: processRegLinesA should be made static
programs/regedit/regproc.o: processRegLinesW should be made static
programs/taskmgr/applpage.o: UpdateApplicationListControlViewSetting should be made static
programs/taskmgr/graphctl.o: GraphCtrl_DrawPoint should be made static
programs/taskmgr/graphctl.o: GraphCtrl_InvalidateCtrl should be made static
programs/taskmgr/graphctl.o: GraphCtrl_Paint should be made static
programs/taskmgr/graphctl.o: GraphCtrl_Resize should be made static
programs/taskmgr/taskmgr.o: Draw3dRect2 should be made static
programs/taskmgr/taskmgr.o: Draw3dRect should be made static
programs/taskmgr/taskmgr.o: FillSolidRect2 should be made static
programs/taskmgr/trayicon.o: TrayIcon_GetProcessorUsageIcon should be made static
programs/winecfg/winecfg.o: enumerate_valuesW should be made static
programs/wineconsole/user.o: WCUSER_AreFontsEqual should be made static
programs/wineconsole/wineconsole.o: WINECON_FetchCells should be made static
programs/wineconsole/wineconsole.o: WINECON_GetHistoryMode should be made static
programs/wineconsole/wineconsole.o: WINECON_SetHistoryMode should be made static
programs/wineconsole/wineconsole.o: WINECON_SetHistorySize should be made static
programs/winedbg/dbg.tab.o: dbg_parse should be made static
programs/winedbg/dbg.tab.o: parser should be made static
programs/winedbg/debug.yy.o: dbg_alloc should be made static
programs/winedbg/debug.yy.o: dbg__create_buffer should be made static
programs/winedbg/debug.yy.o: dbg__delete_buffer should be made static
programs/winedbg/debug.yy.o: dbg__flush_buffer should be made static
programs/winedbg/debug.yy.o: dbg_free should be made static
programs/winedbg/debug.yy.o: dbg_get_debug should be made static
programs/winedbg/debug.yy.o: dbg_get_in should be made static
programs/winedbg/debug.yy.o: dbg_get_leng should be made static
programs/winedbg/debug.yy.o: dbg_get_lineno should be made static
programs/winedbg/debug.yy.o: dbg_get_out should be made static
programs/winedbg/debug.yy.o: dbg_get_text should be made static
programs/winedbg/debug.yy.o: dbg_lex_destroy should be made static
programs/winedbg/debug.yy.o: dbg_pop_buffer_state should be made static
programs/winedbg/debug.yy.o: dbg_push_buffer_state should be made static
programs/winedbg/debug.yy.o: dbg_realloc should be made static
programs/winedbg/debug.yy.o: dbg_restart should be made static
programs/winedbg/debug.yy.o: dbg__scan_buffer should be made static
programs/winedbg/debug.yy.o: dbg__scan_bytes should be made static
programs/winedbg/debug.yy.o: dbg__scan_string should be made static
programs/winedbg/debug.yy.o: dbg_set_debug should be made static
programs/winedbg/debug.yy.o: dbg_set_in should be made static
programs/winedbg/debug.yy.o: dbg_set_lineno should be made static
programs/winedbg/debug.yy.o: dbg_set_out should be made static
programs/winedbg/debug.yy.o: dbg__switch_to_buffer should be made static
programs/winedbg/debug.yy.o: dbg_wrap should be made static
programs/winedbg/debug.yy.o: lexeme_alloc should be made static
programs/winedbg/expr.o: expr_alloc_uconstant should be made static
programs/winedbg/memory.o: be_cpu_build_addr should be made static
programs/winedbg/memory.o: be_cpu_linearize should be made static
programs/winedbg/tgt_minidump.o: validate_file should be made static
programs/winedbg/winedbg.o: dbg_outputA should be made static
programs/winhlp32/macro.lex.yy.o: yyalloc should be made static
programs/winhlp32/macro.lex.yy.o: yy_create_buffer should be made static
programs/winhlp32/macro.lex.yy.o: yy_delete_buffer should be made static
programs/winhlp32/macro.lex.yy.o: yy_flush_buffer should be made static
programs/winhlp32/macro.lex.yy.o: yyfree should be made static
programs/winhlp32/macro.lex.yy.o: yyget_debug should be made static
programs/winhlp32/macro.lex.yy.o: yyget_in should be made static
programs/winhlp32/macro.lex.yy.o: yyget_leng should be made static
programs/winhlp32/macro.lex.yy.o: yyget_lineno should be made static
programs/winhlp32/macro.lex.yy.o: yyget_out should be made static
programs/winhlp32/macro.lex.yy.o: yyget_text should be made static
programs/winhlp32/macro.lex.yy.o: yylex_destroy should be made static
programs/winhlp32/macro.lex.yy.o: yylex should be made static
programs/winhlp32/macro.lex.yy.o: yypop_buffer_state should be made static
programs/winhlp32/macro.lex.yy.o: yypush_buffer_state should be made static
programs/winhlp32/macro.lex.yy.o: yyrealloc should be made static
programs/winhlp32/macro.lex.yy.o: yyrestart should be made static
programs/winhlp32/macro.lex.yy.o: yy_scan_buffer should be made static
programs/winhlp32/macro.lex.yy.o: yy_scan_bytes should be made static
programs/winhlp32/macro.lex.yy.o: yy_scan_string should be made static
programs/winhlp32/macro.lex.yy.o: yyset_debug should be made static
programs/winhlp32/macro.lex.yy.o: yyset_in should be made static
programs/winhlp32/macro.lex.yy.o: yyset_lineno should be made static
programs/winhlp32/macro.lex.yy.o: yyset_out should be made static
programs/winhlp32/macro.lex.yy.o: yy_switch_to_buffer should be made static
programs/winhlp32/macro.lex.yy.o: yywrap should be made static


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
        A polar bear is a cartesian bear after a coordinate transform.


From wine at mkarcher.dialup.fu-berlin.de  Thu Jan  8 09:33:27 2009
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Thu, 08 Jan 2009 16:33:27 +0100
Subject: WIDL and Windows rpcrt4
In-Reply-To: <1096648c0901070803s6ec3df3cxaa81b134cdf155aa@mail.gmail.com>
References: <7EECFE8C055F4E73B6588A3157953057@gsep1>
	<1096648c0901070803s6ec3df3cxaa81b134cdf155aa@mail.gmail.com>
Message-ID: <1231428808.2648.11.camel@hermes2.karcher.local>

Am Mittwoch, den 07.01.2009, 16:03 +0000 schrieb Rob Shearman:
> http://www.winehq.org/pipermail/wine-patches/2009-January/067032.html
> http://www.winehq.org/pipermail/wine-patches/2009-January/067031.html
> 
> However, they probably won't apply cleanly after my recent changes.
> Michael, do you plan to rebase and resend these? If not, I can do
> this.
They got in:
http://source.winehq.org/git/wine.git?a=commit;h=656de48e4ea5f15b5ecc58923e3a0e2f0c3fae90
http://source.winehq.org/git/wine.git?a=commit;h=5f7886925db80cfe93aea89b4b3d604ab62e1cc8

Regards,
  Michael Karcher



From jnewman at codeweavers.com  Thu Jan  8 10:43:15 2009
From: jnewman at codeweavers.com (Jeremy Newman)
Date: Thu, 08 Jan 2009 10:43:15 -0600
Subject: bugzilla/appdb hung <EOT>
In-Reply-To: <gjt4j6$l2o$1@ger.gmane.org>
References: <a71bd89a0901050610l24deb66ep3c5b882bfecbbc42@mail.gmail.com>
	<gjt4j6$l2o$1@ger.gmane.org>
Message-ID: <49662D23.4030201@codeweavers.com>

I made some tweaks to the mysql config. Hopefully it this will happen 
less often to hopefully not at all now.

-Newman

John Haywards wrote:
> On Mon, 05 Jan 2009 06:10:05 -0800, Dan Kegel wrote:
> 
>       Warning: mysql_connect() [function.mysql-connect]: User winehq 
> already has more than 'max_user_connections' active connections in /home/
> winehq/opt/appdb/include/query.php on line 82
>       Database error, please try again soon: User winehq already has more 
> than 'max_user_connections' active connections
> 
> At this moment...
> 
> 
> 


From jnewman at codeweavers.com  Thu Jan  8 10:46:13 2009
From: jnewman at codeweavers.com (Jeremy Newman)
Date: Thu, 08 Jan 2009 10:46:13 -0600
Subject: Dates in Wine announcement
In-Reply-To: <20090107144648.282b3f3c@test-main>
References: <aac02a530901060258i5a5d8e5vc9c2d1b630b952bb@mail.gmail.com>	<49640661.7070101@urbanec.net>
	<20090107144648.282b3f3c@test-main>
Message-ID: <49662DD5.70304@codeweavers.com>

I had already coded that in:
http://www.winehq.org/announce/latest

I'll put a redirect in for the old URL.

IneedAname wrote:
> On Wed, 07 Jan 2009 12:33:21 +1100
> Peter Urbanec <winehq.org at urbanec.net> wrote:
> 
>> Speaking of dates... My pet peeve is seeing ambiguous dates such as
>> 2/1/08. To me (and most of the world), that looks like 2nd Jan 2008, but
>> it appears that millions of people in the USA see it as 1st Feb 2008.
>> So, in the interest of disambiguation, I'd like to see human readable
>> dates with the month either fully spelled out or using a three letter
>> abbreviation. Date formats that are intended to be parsed by machines
>> are best represented as 2008-01-23, so that they are collated correctly
>> when sorted by a simple lexicographical routine.
>>
>> Cheers.
> 
> If we had the date please spell it out in full. Then we all are on the same page world over.
> Wednesday, 07 January 2009
> 
> Can you bring back the link to the newest version of wine.
> E.G. link http://www.winehq.org/?announce=latest to http://www.winehq.org/announce/1.1.12
> This did work before the website had its make over.
> 
> 


From winehacker at gmail.com  Thu Jan  8 11:29:52 2009
From: winehacker at gmail.com (Steven Edwards)
Date: Thu, 8 Jan 2009 12:29:52 -0500
Subject: setupapi/tests: Remove an unneeded cast.
In-Reply-To: <87ljtm2j24.fsf@wine.dyndns.org>
References: <alpine.DEB.1.10.0901080004570.28963@amboise.dolphin>
	<200901081005.29436.hans@codeweavers.com>
	<87ljtm2j24.fsf@wine.dyndns.org>
Message-ID: <19e31a080901080929h5619fe2fv1d8edf9d38f27ce8@mail.gmail.com>

On Thu, Jan 8, 2009 at 5:22 AM, Alexandre Julliard <julliard at winehq.org> wrote:
> Where does the prototype come from?  AFAICS it's not in the PSDK. Maybe
> it's just wrong.

When Eric first implemented those functions they were mostly
undocumented. I believe I checked the prototypes verses some VB or
Pascal code I found on google where someone had reversed the interface
but I can't find the exact source I used to check things when writing
the first round of tests.

According to this link from google search, the prototypes are in MASM
include files going back to 2001. You might want to check the others
as well.

http://www.cecs.csulb.edu/~hill/cecs325/MASM32/INCLUDE/SETUPAPI.INC

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From winehacker at gmail.com  Thu Jan  8 11:34:09 2009
From: winehacker at gmail.com (Steven Edwards)
Date: Thu, 8 Jan 2009 12:34:09 -0500
Subject: setupapi/tests: Remove an unneeded cast.
In-Reply-To: <19e31a080901080929h5619fe2fv1d8edf9d38f27ce8@mail.gmail.com>
References: <alpine.DEB.1.10.0901080004570.28963@amboise.dolphin>
	<200901081005.29436.hans@codeweavers.com>
	<87ljtm2j24.fsf@wine.dyndns.org>
	<19e31a080901080929h5619fe2fv1d8edf9d38f27ce8@mail.gmail.com>
Message-ID: <19e31a080901080934i3f33830bo621b7e4189be78ad@mail.gmail.com>

On Thu, Jan 8, 2009 at 12:29 PM, Steven Edwards <winehacker at gmail.com> wrote:
> According to this link from google search, the prototypes are in MASM
> include files going back to 2001. You might want to check the others
> as well.
>
> http://www.cecs.csulb.edu/~hill/cecs325/MASM32/INCLUDE/SETUPAPI.INC

Heh ignore that part of the spam...I didn't see that the MASM include
was not really helpful at all for the prototype...

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From Andrew.Talbot at talbotville.com  Thu Jan  8 11:58:25 2009
From: Andrew.Talbot at talbotville.com (Andrew Talbot)
Date: Thu, 08 Jan 2009 17:58:25 +0000
Subject: Functions that should be static
References: <alpine.DEB.1.10.0812180944001.3453@amboise.dolphin>
	<alpine.DEB.1.10.0901081013540.18338@amboise.dolphin>
Message-ID: <gk5es5$8kf$1@ger.gmane.org>

Francois Gouget wrote:

> 
> Thanks for the help with this task. With the last round of patches we
> are now down to about 280 warnings so there's definite progress. Here's
> the updated list:
> 
> [...]

Here are the apparently unused functions I have encountered in the dlls so
far. Please speak up for any you want kept or any you can authoritatively
declare as being no longer required.

dlls/cabinet/fdi.c: QTMupdatemodel(), make_decode_table()
dlls/dbghelp/storage.c: hash_table_find()
dls/dplayx/dplayx_global.c: DPLAYX_DestroyLobbyApplication(),
DPLAYX_SetLocalSession() [#if 0'd out in name_server.c]
dls/dplayx/name_server.c: NS_SetRemoteComputerAsNameServer(),
NS_GetOtherMagic() [#if 0'd out in dplayx_messages.c]
dlls/dsound/capture.c: DirectSoundCaptureDevice_AddRef()
dlls/fusion/assembly.c: assembly_get_architecture() [stub]
dlls/inetcomm/internettransport.c: InternetTransport_Read()
dlls/iphlpapi/ifenum.c: getInterfaceEntryByIndex()
dlls/itss/chm_lib.c: chm_enumerate()
dlls/mountmgr.sys/mountmgr.c: DriverEntry()

Thanks.

-- 
Andy.




From juan.lang at gmail.com  Thu Jan  8 13:13:22 2009
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 8 Jan 2009 11:13:22 -0800
Subject: Functions that should be static
In-Reply-To: <gk5es5$8kf$1@ger.gmane.org>
References: <alpine.DEB.1.10.0812180944001.3453@amboise.dolphin>
	<alpine.DEB.1.10.0901081013540.18338@amboise.dolphin>
	<gk5es5$8kf$1@ger.gmane.org>
Message-ID: <3a768c550901081113h1954e5cas88d469ab9bb52271@mail.gmail.com>

> dlls/iphlpapi/ifenum.c: getInterfaceEntryByIndex()

This one's definitely dead, go ahead and remove it.

Thanks,
--Juan


From msclrhd at googlemail.com  Thu Jan  8 15:34:40 2009
From: msclrhd at googlemail.com (Reece Dunn)
Date: Thu, 8 Jan 2009 21:34:40 +0000
Subject: [shell32/tests 6/6] Skip a test on Vista
In-Reply-To: <49666C6B.3000401@gmail.com>
References: <49666C6B.3000401@gmail.com>
Message-ID: <3f4fd2640901081334l7e8b4176q27d7b1f00a7cbfd7@mail.gmail.com>

2009/1/8 Paul Vriens <paul.vriens.wine at gmail.com>:
> Hi,
>
> With this last patch all shlfileop tests succeed on all my boxes (Win95,
> Win98,
> NT4, W2K, W2K3 and Vista).
>
> Changelog
>  Skip a test on Vista

+static BOOL on_vista = FALSE;
+

I don't see where this is used.

Kudos for fixing the shell32:shfileop tests.

- Reece


From zgold at bluesata.com  Thu Jan  8 20:41:58 2009
From: zgold at bluesata.com (Zachary Goldberg)
Date: Thu, 8 Jan 2009 21:41:58 -0500
Subject: LWN Timeline for 2008: Wine 1.0 made it!
Message-ID: <b050a5e70901081841y437ed641ib7d8e516a216a3be@mail.gmail.com>

All,
It seems Wine 1.0 was deemed a significant event for Linux and Free Software
in 2008.

http://lwn.net/Articles/Timeline2008/

Cool beans.

-Zach
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20090108/b5cbdd06/attachment.htm 

From nlaroche at vt.edu  Thu Jan  8 21:14:10 2009
From: nlaroche at vt.edu (Nicholas LaRoche)
Date: Thu, 08 Jan 2009 22:14:10 -0500
Subject: Does preloader attempt to fix ASR?
Message-ID: <4966C102.3020401@vt.edu>

On a standard installation of Fedora 10 address space randomization is 
enabled by default. The base address of a process started by wine seems 
to change.. and it is easy to see when loading Dlls and checking their 
base addresses.

Does the preloader attempt to compensate for this? Or is it necessary to 
use setarch to turn off ASR completely when debugging with reproducibility?

  $> setarch $(uname -p) -RL

Regards,
Nick


From scott at open-vote.org  Thu Jan  8 22:46:30 2009
From: scott at open-vote.org (Scott Ritchie)
Date: Thu, 08 Jan 2009 20:46:30 -0800
Subject: LWN Timeline for 2008: Wine 1.0 made it!
In-Reply-To: <b050a5e70901081841y437ed641ib7d8e516a216a3be@mail.gmail.com>
References: <b050a5e70901081841y437ed641ib7d8e516a216a3be@mail.gmail.com>
Message-ID: <4966D6A6.4040904@open-vote.org>

Zachary Goldberg wrote:
> All,
> 
> It seems Wine 1.0 was deemed a significant event for Linux and Free
> Software in 2008.
> 
> http://lwn.net/Articles/Timeline2008/
> 

It'd be pretty strange if it weren't.  We don't brag about it, but we're
probably one of the top 5 most newsworthy projects.

Thanks,
Scott Ritchie


From fgouget at free.fr  Fri Jan  9 01:20:33 2009
From: fgouget at free.fr (Francois Gouget)
Date: Fri, 9 Jan 2009 08:20:33 +0100 (CET)
Subject: Adjust dlls/iphlpapi/ipstats.c to FreeBSD 8
In-Reply-To: <alpine.LSU.1.99.0901012024250.12007@acrux.dbai.tuwien.ac.at>
References: <alpine.LSU.1.99.0901012024250.12007@acrux.dbai.tuwien.ac.at>
Message-ID: <alpine.DEB.1.10.0901090819020.8555@amboise.dolphin>

On Thu, 1 Jan 2009, Gerald Pfeifer wrote:
[...]
> ChangeLog:
> Only use RTF_LLINFO if #defined, fixing FreeBSD 8 after the arp-v2 
> rewrite.
[...]
>  #if defined(HAVE_SYS_SYSCTL_H) && defined(NET_RT_DUMP)
> -  int mib[] = {CTL_NET, PF_ROUTE, 0, AF_INET, NET_RT_FLAGS, RTF_LLINFO};
> +  int mib[] = {CTL_NET, PF_ROUTE, 0, AF_INET, NET_RT_FLAGS,
> +#ifdef RTF_LLINFO
> +               RTF_LLINFO
> +#else
> +               0
> +#endif
> +               };

Is there a way to do it so the same binary can run and work on FreeBSD 
7.x and 8.0?


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
 "Only wimps use tape backup: _real_ men just upload their important stuff on
       ftp, and let the rest of the world mirror it ;)" -- Linus Torvalds


From fgouget at free.fr  Fri Jan  9 02:06:57 2009
From: fgouget at free.fr (Francois Gouget)
Date: Fri, 9 Jan 2009 09:06:57 +0100 (CET)
Subject: kernel32: implement CPU detection for OpenBSD
In-Reply-To: <b6bb06270901021741g2098d7fcg622de6ef6e839e2b@mail.gmail.com>
References: <b6bb06270901021741g2098d7fcg622de6ef6e839e2b@mail.gmail.com>
Message-ID: <alpine.DEB.1.10.0901090826130.8555@amboise.dolphin>

On Fri, 2 Jan 2009, Austin English wrote:
@@ -544,7 +544,7 @@ VOID WINAPI GetSystemInfo(
        }
        fclose (f);
        }
-#elif defined (__NetBSD__)
+#elif defined (__NetBSD__) || defined(__OpenBSD__)
         {
              int mib[2];
              int value[2];
@@ -557,31 +557,55 @@ VOID WINAPI GetSystemInfo(
 #ifdef CPU_FPU_PRESENT
              mib[1] = CPU_FPU_PRESENT;
              value[1] = sizeof(int);
-             if (sysctl(mib, 2, value, value+1, NULL, 0) >= 0)
+#ifdef __OpenBSD__
+             if (sysctl(mib, 2, value, (size_t *)(value+1), NULL, 0) >= 
0) {
+#else
+             if (sysctl(mib, 2, value, value+1, NULL, 0) >= 0) {
+#endif

This was wrong to start with because even if size_t is 8 bytes, value+1 
will only have space for 4. Plus the code tests whether value changed 
instead of testing *value! I'm sending a patch to fix that. Then you can 
resend your patch adding just the defined(__OpenBSD__).



-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
        A polar bear is a cartesian bear after a coordinate transform.


From wine at mkarcher.dialup.fu-berlin.de  Fri Jan  9 02:06:12 2009
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Fri, 09 Jan 2009 09:06:12 +0100
Subject: Adjust dlls/iphlpapi/ipstats.c to FreeBSD 8
In-Reply-To: <alpine.DEB.1.10.0901090819020.8555@amboise.dolphin>
References: <alpine.LSU.1.99.0901012024250.12007@acrux.dbai.tuwien.ac.at>
	<alpine.DEB.1.10.0901090819020.8555@amboise.dolphin>
Message-ID: <1231488372.2648.17.camel@hermes2.karcher.local>

Am Freitag, den 09.01.2009, 08:20 +0100 schrieb Francois Gouget:
> On Thu, 1 Jan 2009, Gerald Pfeifer wrote:
> [...]
> > ChangeLog:
> > Only use RTF_LLINFO if #defined, fixing FreeBSD 8 after the arp-v2 
> > rewrite.
> [...]
> >  #if defined(HAVE_SYS_SYSCTL_H) && defined(NET_RT_DUMP)
> > -  int mib[] = {CTL_NET, PF_ROUTE, 0, AF_INET, NET_RT_FLAGS, RTF_LLINFO};
> > +  int mib[] = {CTL_NET, PF_ROUTE, 0, AF_INET, NET_RT_FLAGS,
> > +#ifdef RTF_LLINFO
> > +               RTF_LLINFO
> > +#else
> > +               0
> > +#endif
> > +               };
> 
> Is there a way to do it so the same binary can run and work on FreeBSD 
> 7.x and 8.0?

 #if defined(HAVE_SYS_SYSCTL_H) && defined(NET_RT_DUMP)
+#ifndef RTF_LLINFO
+#define RTF_LLINFO 0
+#endif
   int mib[] = {CTL_NET, PF_ROUTE, 0, AF_INET, NET_RT_FLAGS, RTF_LLINFO};

should do. (Even better: Put this define to the top of the file [but
still #if-protected], and just use RTF_LLINFO later on)

Regards,
  Michael Karcher



From marcus at jet.franken.de  Fri Jan  9 02:10:37 2009
From: marcus at jet.franken.de (Marcus Meissner)
Date: Fri, 9 Jan 2009 09:10:37 +0100
Subject: Does preloader attempt to fix ASR?
In-Reply-To: <4966C102.3020401@vt.edu>
References: <4966C102.3020401@vt.edu>
Message-ID: <20090109081037.GA10484@galeere.jet.franken.de>

On Thu, Jan 08, 2009 at 10:14:10PM -0500, Nicholas LaRoche wrote:
> On a standard installation of Fedora 10 address space randomization is 
> enabled by default. The base address of a process started by wine seems 
> to change.. and it is easy to see when loading Dlls and checking their 
> base addresses.
> 
> Does the preloader attempt to compensate for this? Or is it necessary to 
> use setarch to turn off ASR completely when debugging with reproducibility?
> 
>   $> setarch $(uname -p) -RL

Check if ntdll.dll and kernel32.dll are always loaded at the same address.

If yes, everything is likely ok and no need for further action.

Ciao, Marcus


From fgouget at free.fr  Fri Jan  9 02:28:27 2009
From: fgouget at free.fr (Francois Gouget)
Date: Fri, 9 Jan 2009 09:28:27 +0100 (CET)
Subject: mpr: fix a compiler error on PowerPC
In-Reply-To: <b6bb06270901022015u12201bd2ieb295a61808c44f4@mail.gmail.com>
References: <b6bb06270901022015u12201bd2ieb295a61808c44f4@mail.gmail.com>
Message-ID: <alpine.DEB.1.10.0901090925010.14534@amboise.dolphin>

On Fri, 2 Jan 2009, Austin English wrote:

> CHAR defaults to unsigned char on PowerPC, so explicitly setting hi/lo
> to signed char to avoid this error.

CHAR is a Windows type so I don't think it's right for it to be unsigned 
on PowerPC. Even more so since there is a UCHAR type.

So I think the right thing to do is to fix the CHAR declaration in 
wtypes.h and winnt.h.


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
             Research is the transformation of money to knowledge.
            Innovation is the transformation of knowledge to money.
                              -- Dr. Hans Meixner


From arethusa26 at gmail.com  Fri Jan  9 03:18:08 2009
From: arethusa26 at gmail.com (Andrew Nguyen)
Date: Fri, 9 Jan 2009 03:18:08 -0600
Subject: MSI Patch Feedback
Message-ID: <a1affb700901090118v4f5ab6f9v214aa7748b9ca3ba@mail.gmail.com>

Hello,

I've written a few patches against dlls/msi/action.c in an effort to
rectify a difference in behavior with an MSI-based installer between
Windows and Wine with regard to environment variable processing.
Behavior not explicitly enumerated by MSDN is noted when a combination
of the environment table "+" name prefix and "[~]" value expression
are combined. How should I attempt to test the changes I have made,
and is there anything I can do to improve the quality of my changes?
Feedback is appreciated!

-Andrew
-------------- next part --------------
A non-text attachment was scrubbed...
Name: msipatches.tar.bz2
Type: application/x-bzip2
Size: 2567 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20090109/924f7b21/attachment.bin 

