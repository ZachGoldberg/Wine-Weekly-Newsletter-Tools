
<section 
	title="News: Stable and Development versions of Wine released"
	subject="Wine"
	archive="#"
	posts="0"
>
<topic>Wine</topic>
<p><b>Wine post 1.0 releases</b></p>
<p>
A post from a few weeks ago by Alexandre Julliard concerning future Wine development:
</p>
<quote>
<p>
Hi folks,
</p><p>
Again, congrats to everybody for the 1.0 release!
</p><p>
Now that I'm starting to recover from the shock of having actually
shipped 1.0, here are a few notes on future development:
</p><p>
1) Code freeze is over, patches are accepted again. If you sent patches
and they didn't get applied during code freeze, please rebase them
against 1.0 and resend them.
</p><p>
2) Development will continue as usual in the git "master" branch. The
1.1.x development releases will be made from that branch every other
Friday.
</p><p>
3) There is now a git "stable" branch, where only important bug fixes
will be committed. The 1.0.x maintenance releases will be made from that
branch whenever enough changes have accumulated to justify a release.
</p><p>
The process I suggest for the 1.0.1 release is as follows:
</p><p>
- all bugs should be fixed in the master branch first
- once a bug fix has been committed to master, the corresponding bug
 report should be marked fixed, with the sha1 of the commit fixing it
- the bug report should then be put into the 1.0.1 milestone.
</p><p>
This will allow me to periodically query for 1.0.1 bugs that are fixed
in master and cherry-pick the corresponding commits into the stable
branch.
</p><p>
--<br />
Alexandre Julliard
</p>
</quote>


<p><b>Winetricks</b></p>
<p>Winetricks has had some interesting <a href="http://code.google.com/p/winezeug/source/list">changes</a> recently.  Too many to list here, but some highlights are a Firefox 3 verb and a Schrodinger directshow filter which seems to work (Dan and Maarten are very happy about this one).
</p>

<p><b>ciopfs</b></p>
<p>
Case Insensitive On Purpose File System (<a href="http://www.brain-dump.org/projects/ciopfs/">ciopfs</a>) had its release 0.2 recently.  This can be used to provide an even more Windows-like experience for your Wine desktop.
</p>

<p><b>CodeWeavers in action</b></p>
<p>
So as many of you know, CodeWeavers is a for profit organization which works on a product called Crossover Office (and now Crossover Games).  All of the work they do on Wine gets contributed back to the open source Wine tree.  It is thanks to them that Wine has made such fantastic progress over the past few years.  They're really a great bunch of folks.  I had the good fortune to be forwarded a <a href="http://www.youtube.com/watch?v=VCd5CQB914w">youtube video</a> of the folk at CodeWeavers during a typical day of work.  I encourage anybody whose ever heard of them to check it out.  My abs still hurt from laughing so hard.</p>
</section>
<section 
	title="Wineconf 2008 Announced"
	subject="Wineconf"
	archive="http://www.winehq.org/pipermail/wine-devel/2008-July/066952.html"
	posts="1"
>
<topic>Wineconf</topic>
<p>
Jeremy White and James Ramey at CodeWeavers have been hard at work planning this year's Wineconf.  Wineconf is an annual get together of some of the geekiest people in the world (read: Wine developers and enthusiasts).  This year's conference shall take place in the U.S., more details from Jeremy:
</p>
<quote>
<p>
Hi Folks,
</p><p>
Thanks to the volunteer efforts of James Ramey (new guy in our office),
we now have a great venue for Wineconf 2008.
</p><p>
I've put together a page on it here:<br />
  <a href="http://wiki.winehq.org/WineConf2008">http://wiki.winehq.org/WineConf2008</a> 
</p><p>
The key details are that it will be over the weekend of September 27 and 28,
at a hotel in Bloomington, MN.  I promise that it won't be mind numbingly cold,
and I won't make any one traipse to see an ice palace this year *grin*.
</p><p>
In fact, it's a nice hotel, quite close to the airport, the Mall of America,
a Wildlife refuge, and to a stop for our light rail system.
</p><p>
Additionally, I believe we will be able to offer fairly substantial
travel sponsorships for people that find the cost of travel prohibitive.
Email me privately if that would be a help.
</p><p>
And for those Europeans that hate US policies, I'll point out two things:
<ul>
  <li>  January 20, 2009 is fast approaching. </li>
  <li> 1 Euro gets you $1.60, which is a whole lot of cheap beer </li>
</ul>
</p><p>
At any rate, if you're interested in coming to Wineconf this year, please visit
the Wiki and sign up for the Wineconf mailing list:<br />
  <a href="http://www.winehq.org/mailman/listinfo/wineconf">http://www.winehq.org/mailman/listinfo/wineconf</a> <br />
We generally use that list for minutiae to avoid spamming the broader mailing list.
</p><p>
Hope to see you in September!
</p><p>
Cheers,
</p><p>
Jeremy
</p>
</quote>
</section>
<section 
	title="GSoC Midterms"
	subject="Google Summer of Code"
	archive="http://www.winehq.org/pipermail/wine-devel/2008-July/067143.html"
	posts="5"
>
<topic>Google Summer of Code</topic>
<p>
Its been a few weeks since GSoC 2008 has begun, and already we have seen quite a significant contribution from a number of students.  Maarten Lankhorst (GSoC 2008 Coordinator for Wine) recently asked each of the students to write in with their status.  His post and students' responses below.
</p>
<quote>
<p>
Hi students,
</p><p>
As you might know it's time for midterm evaluations. Unfortunately for
some students I haven't seen the progress they made, and I highly
encourage all students to send their patches early and often, even if
it's not yet finished.
</p><p>
Also, I would like to hear from all students now a reflection. What
went well, and what didn't, and what did you accomplish so far? :-)
</p><p>
Cheers,
Maarten.
</p>
</quote>
<p>
Ismael Barros, working on dplay:
</p>
<quote>
<p>
I've been cleaning my patches, thanks to the infinite patience of Kai,
and I'm starting to send them right now. However my progress can be
tracked in <a href="http://repo.or.cz/w/wine/gsoc_dplay.git">http://repo.or.cz/w/wine/gsoc_dplay.git</a> 
</p><p>
The main problem so far was to adapt my work flow to an style I've
never worked with, and to realize I still have too much to learn :P
</p><p>
My first milestone is mostly accomplished: most tests are done, but
the implementation is less improved than I expected. I only committed
some trivial patches, but at least I started understanding what is
done and what has to be done (which should have been done when writing
my application and schedule, but, well.)
I'm facing some problems understanding the current dplay codebase, but
it's probably I feel overwhelmed all this new COM platform, unknown to
me, and with some effort it's not so complex.
</p><p>
Summing up, I still have to (stop slacking and) study a lot before
doing anything really productive.
</p><p>
Regards<br />
Ismael
</p>
</quote>
<p>
Adam Petaccia, working on GDI+
</p>
<quote>
<p>
So far I've accomplished a great amount of text handling functions
(FontFamilies, FontCollections, and StringFormat) (which I need to clean
up before sending) in GDI+, and I expect to have those finished by next
week (putting me a week behind where I want to be), but I'm also working
on GpRegion handling now (as oddly enough, a few StringFormat functions
need it).
</p><p>
For what hasn't gone so well, I still need work on focusing on
_one_or_two_ sub-projects at once (mild ADD at work) - as a bunch of
half finished projects don't help too much. The other is sticking closer
to test-driven development. I've often found myself caught up on why my
code doesn't make some app work, and it becomes clear once a simple
testcase is written (or at least clear what isn't the problem).
</p><p>
This has been a very rewarding and empowering experience, and I look
forward to contributing to Wine after Summer of Code is finished.
</p>
</quote>
<p>
Owen Rudge, working on configuration and control panel
</p>
<quote>
<p>
My project so far has gone fairly well, and I'd say I'm currently just a
little ahead of schedule, which I'm pleased about. The first part of the
project was to get the Control Panel working in the shell namespace, and it
turned out that a lot of the work had already been done, it just wasn't
glued together properly. It took me a little while to figure out what needed
doing, but I managed to work it out and it made it into Wine 1.1. :-) I'm
now moving onto developing some new control panel applets, and looking at
ways to improve winecfg. I've been working on an Add/Remove Programs applet
for the past week or so, which is now more or less complete, and will likely
be submitted to wine-patches soon. I'm also thinking about what I'm going to
do with winecfg, with my thinking that the bits that are not configurable on
a per-application basis (desktop appearance and sound, mainly) can be moved
into/reimplemented in new control panels. So that'll be my main focus over
the next few weeks.
</p><p>
The biggest challenge for me now is probably working out a "work plan", and
making sure I set targets for myself, to ensure I can try to get as much
done and use my time efficiently. Other than that, I've learned a lot about
the general process of Wine development, and have quite enjoyed things so
far.
</p><p>
The majority of my code can be found at
 <a href="http://repo.or.cz/w/wine/gsoc_cpanel.git.">http://repo.or.cz/w/wine/gsoc_cpanel.git.</a> 
</p><p>
Cheers,
</p>
</quote>
<p>
Piotr Caban, working on MSXML
</p>
<quote>
<p>
I've been working on two parts of my MSXML projects:<br />
1) Fixing bugs<br />
That went well. I have fixed Photoshop CS3 installer as well as other bugs. I
have patches for bugs 5565, 8945, 9349, 9604, 10802, 11301, 11376, 12521,
14386, 14260 and 5074. I have also investigated most of bugs in msxml3
component.<br />
2) Implementing SAX reader.<br />
I have started working on it and written some code, but it still needs more
work.<br />
I have also done some work towards asynchronous reading.
</p><p>
The hardest thing for me was debugging Photoshop CS3 installer. It was easy to
find missing APIs that I had to implement, but the last problem was very hard
to find (and it's that more satisfaction from fixing it:-) ).
</p><p>
Regards,<br />
       Piotr
</p>
</quote>

<p>
Many thanks to Google for funding and making this year's summer of code possible thus far.  Also thanks to Maarten for organizing and the students for their hard work!
</p></section>
<section 
	title="Wine and CUDA (Nvidia GPGPU)"
	subject="CUDA"
	archive="http://www.winehq.org/pipermail/wine-devel/2008-July/067093.html"
	posts="25"
>
<topic>CUDA</topic>
<p>
Seth Shelnutt has been writing into the mailing list a bit recently with his efforts to get the Windows GPU Folding at home client to work under wine.  This client requires support from libraries like Nvidia's CUDA, which enable GPUGPU (General purpose graphics processing).  The conversation is fairly interesting and involves writing a wrapper from the windows CUDA api to the linux CUDA and other interesting issues.  Some of the highlights below:
</p>

<quote>
<p>
As a continuation from the question on making the FAH GPU2 Nvidia client run, we have gotten past the detecting the card as we changed Wine's generic output to look like an Nvidia card thanks to a few of you. Now comes the hard part. Even when using the cudart.dll file it does not work. We get an cudastream error about it not being implemented. It then repeats these 5 lines until the client is stopped.
</p><p>
Reading file work/wudata_07.tpr, VERSION 3.1.4 (single precision)<br />
Reading file work/wudata_07.tpr, VERSION 3.1.4 (single precision)<br />
Reading sasa-enabled ir 0 0<br />
Initializing Nvidia gpu library<br />
cudaMalloc CUDAStream::Allocate failed feature is not yet implemented<br />
</p><p>
Martijn Berger said here (http://www.winehq.org/pipermail/wine-devel/2008-July/067063.html) that all that should need to be done is right a wrapper to translate the calls from cudart.dll to libcuda.so.2.0. I suppose the place to start would be to download the SDK's and see how much documentation is available on both the Linux and Windows calls.
</p><p>
From reading the programing guide and reference manual it seems that most of the function are the same as expected between Windows and Linux, in fact the reference manual doesn't differentiate between the two.
</p><p>
 <a href="http://developer.download.nvidia.com/compute/cuda/2.0-Beta2/docs/Programming_Guide_2.0beta2.pdf">http://developer.download.nvidia.com/compute/cuda/2.0-Beta2/docs/Programming_Guide_2.0beta2.pdf</a> br />
 <a href="http://developer.download.nvidia.com/compute/cuda/2.0-Beta2/docs/CudaRefMan_2.0beta2.pdf">http://developer.download.nvidia.com/compute/cuda/2.0-Beta2/docs/CudaRefMan_2.0beta2.pdf</a> br />
</p><p>
Is it possible to just symbolicly link the cudart.dll file to the libcudart.so file? If they are expecting mostly the same function calls should this not work? They are going to test this now and see.
</p><p>
I believe the main problem is just that cudart.dll is driving to access the windows nvidia driver where this is none, but libcudart.so knows how to access the Linux driver.
</p>
</quote>

<p>
Michael Karcher then pointed out that symbolic linking wouldn't work because of header format differences (PE and ELF).  He also mentions that the proper solution would be to make a .spec file and a wrapper for each function.  Stefan D&#246;singer also pointed out that there already exists a perl script for automating the creation of such a wrapper.
</p>
<p>
After a bunch more back and fourth about issues with compilation Seth managed to get his wrapper to compile.  However the new wrapper is not yet working as intended.
</p>
<quote>
<p>
Well at least it compiled, but it isn't working. We are still getting the message that the function isn't implemented.
</p><p>
Initializing Nvidia gpu library<br />
cudaMalloc CUDAStream::Allocate failed feature is not yet implemented<br />
</p><p>

Now both cudamalloc and all four cuda stream's, cudaStreamCreate, Destroy, Query and Synchronize were implemented.
I thought maybe it was because in the spec file I had the cudaStream's as pointers (ptr) so I switched them to long but ti didn't make a difference. Originally the argument was "stream" but I can't get any argument but ptr and long to pass the winegcc for spec files.
</p><p>
 <a href="http://shelnutt.twomurs.com/patches/cuda/cuda.dll.spec">http://shelnutt.twomurs.com/patches/cuda/cuda.dll.spec</a> 
</p><p>
Does wine need to somehow be made aware of the presence of the cudart.dll.so file? We tried putting it in both the system32 and the lib folder but it seems also that maybe WINE needs to be made aware of it?
</p>
</quote>

<p>
So no working CUDA in Wine yet.  However, this does seem promising and I'm sure WWN 350 will include information about successful CUDA usage in Wine.
</p>


</section>
<section 
	title="Valgrind Updates"
	subject="Valgrind Bugs"
	archive="#"
	posts="0"
>
<topic>Valgrind Bugs</topic>
<p>
Dan Kegel, in the time around Wine 1.0 release worked very hard to nail down many issues in Wine found with Valgrind. He did such a good job that Wine was down to less than 100 Valgrind errors!  Since then however there have been many fewer posts about Valgrind issues, and we never hit the magic number zero.  
</p>
<p>
As it turns out the last 50 are difficult to fix; and patches which simply silence the warning and not properly fixing the issue they represent will likely be rejected.  Dan Kegel's thoughts:
</p>

<quote>
<p>
 <a href="http://www.kegel.com/wine/valgrind/logs/2008-07-11-10.09-count-by-file.txt">http://www.kegel.com/wine/valgrind/logs/2008-07-11-10.09-count-by-file.txt</a> shows that 54 tests have some valgrind error (not counting leaks). Some of those are false positives, e.g. anything with NtFsControlFile can probably be ignored [and soon will be].  <a href="http://www.kegel.com/wine/valgrind/logs/2008-07-11-10.09-count-by-error.txt">http://www.kegel.com/wine/valgrind/logs/2008-07-11-10.09-count-by-error.txt</a> shows that there are about 188 different errors.  However, many of those are related; if for instance the bug in PrimaryBufferImpl_GetVolume is fixed, it will clear up 32 of them. A lot of the patches I had been carrying (http://www.kegel.com/wine/valgrind/logs/2008-07-04-patches/)  might be useful for somebody looking at doing real fixes.
</p>
<p>
  I have returned to "just catch regressions" mode rather than doing a full frontal assault on Valgrind errors for now.  Though my continuous build-and-test results are online for anyone who wants to continue the full frontal assault... But anyone who does better have really good tests and/or reputation, or Alexandre won't accept the patch.
</p>
</quote></section>