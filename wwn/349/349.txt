From robertshearman at gmail.com  Tue Jul  1 02:06:59 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Tue, 1 Jul 2008 08:06:59 +0100
Subject: oleaut32: Fix a test that fails on all platforms up to and
	including win2k
In-Reply-To: <22821af30806302216k1080fb4awe8e4b35c7f97b1e0@mail.gmail.com>
References: <22821af30806302216k1080fb4awe8e4b35c7f97b1e0@mail.gmail.com>
Message-ID: <1096648c0807010006y6db3787cp721b7ee0942e1134@mail.gmail.com>

2008/7/1 James Hawkins <jhawkins at codeweavers.com>:
> +                if (leftvt == VT_RECORD && rightvt == VT_I8)
> +                    ok((hres == expectedhres || hres == DISP_E_BADVARTYPE) &&
> +                       V_VT(&result) == resvt,
> +                       "VarSub: %d|0x%X, %d|0x%X: Expected failure 0x%X "
> +                       "or 0x%X, got 0x%X, expected vt %d got vt %d\n",
> +                       leftvt, ExtraFlags[i], rightvt, ExtraFlags[i],
> +                       expectedhres, DISP_E_BADVARTYPE, hres, resvt, V_VT(&result));
> +                else
> +                    ok(hres == expectedhres && V_VT(&result) == resvt,
> +                       "VarSub: %d|0x%X, %d|0x%X: Expected failure 0x%X, "
> +                       "got 0x%X, expected vt %d got vt %d\n",
> +                       leftvt, ExtraFlags[i], rightvt, ExtraFlags[i],
> +                       expectedhres, hres, resvt, V_VT(&result));

There's the handy HAVE_OLEAUT32_I8 variable for the purpose of
expecting when VT_I8 and VT_UI8 types are going to be accepted and
when they're not. To avoid complicating the test, you could probably
just skip it earlier on if we're testing a VT_I8 or VT_UI8 type in the
left or right parameter and HAVE_OLEAUT32_I8 is false.

-- 
Rob Shearman


From jpakkane at gmail.com  Tue Jul  1 04:39:04 2008
From: jpakkane at gmail.com (Jussi Pakkanen)
Date: Tue, 1 Jul 2008 12:39:04 +0300
Subject: Linker differences between Windows and Linux
Message-ID: <42d23b2e0807010239v50e7ac53s600fa30a252d801b@mail.gmail.com>

Hi

I'm working on porting the Cuneiform OCR system from Windows to Linux.
I'm getting a lot of problems by the different linking order of Linux
and Windows. I want to make it a native Linux application, that is not
depend on Winelib. (I already have it running, but it is very buggy.)

The original code is a jumble of dll's that export all of their
symbols. The problem is that there are hundreds of duplicate symbols
among in them (for example each dll has an "error code" variable which
all have the same name). Under Linux these symbols get aliased to one
single symbol and cause spurious program crashes.

I assume Wine deals with this by having its own linker. My question is
how does Winelib handle this problem (or does it handle it at all)?
Winelib's documentation does not mention this. Can this symbol
resolver fix be (easily) extracted from Winelib and used on regular
Linux programs? Or is there a way to automatically rename these kinds
of symbols, preferably in the source code?

For those interested, the code is at
https://code.launchpad.net/~jpakkane/cuneiform-linux/trunk (the manual
symbol resolvation fix is checked in in revision 185, so you might
want to check out revision 184).

Thanks for your help.


From julliard at winehq.org  Tue Jul  1 05:30:20 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 01 Jul 2008 12:30:20 +0200
Subject: Linker differences between Windows and Linux
In-Reply-To: <42d23b2e0807010239v50e7ac53s600fa30a252d801b@mail.gmail.com>
	(Jussi Pakkanen's message of "Tue, 1 Jul 2008 12:39:04 +0300")
References: <42d23b2e0807010239v50e7ac53s600fa30a252d801b@mail.gmail.com>
Message-ID: <87fxqt522r.fsf@wine.dyndns.org>

"Jussi Pakkanen" <jpakkane at gmail.com> writes:

> I assume Wine deals with this by having its own linker. My question is
> how does Winelib handle this problem (or does it handle it at all)?

Wine and Winelib use the standard linker. Check out the -Bsymbolic
linker option.

-- 
Alexandre Julliard
julliard at winehq.org


From phil.krylov at gmail.com  Tue Jul  1 07:15:37 2008
From: phil.krylov at gmail.com (Phil Krylov)
Date: Tue, 1 Jul 2008 16:15:37 +0400
Subject: richedit: Store richedit version rather than boolean
	bEmulateVersion10 value.
In-Reply-To: <5c6ee3b70806290623gc6396h8bc436599f4f5b2b@mail.gmail.com>
References: <5c6ee3b70806270735l23f1c16kbcaf6e4c5f887c59@mail.gmail.com>
	<c10dbf450806271230p6e41f2cfh4a579d14437d3c8d@mail.gmail.com>
	<5c6ee3b70806271246m542f0b4bm42e8360f6702da9a@mail.gmail.com>
	<c10dbf450806290120g66a17cb7k33d8df1c69de3c9@mail.gmail.com>
	<5c6ee3b70806290623gc6396h8bc436599f4f5b2b@mail.gmail.com>
Message-ID: <c10dbf450807010515o1d414b4ai1be22c7dadb8dfbd@mail.gmail.com>

On 29/06/2008, Dylan Smith <dylan.ah.smith at gmail.com> wrote:
> On Sun, Jun 29, 2008 at 4:20 AM, Phil Krylov <phil.krylov at gmail.com> wrote:
>  > Of course this looks most sane. But I'm asking if you're going to make
>  > use of the dwEmulatedVersion other than "< 0x200"? That is, under what
>  > circumstances we should emulate version 2 or 3 when we have support
>  > for version 5? It's interesting to me, because it seemed to me that
>  > the native versions (starting with 2.0) are very compatible to each
>  > other.
>  >
>  > -- Ph.
>
>
> I know that versions 2 and 3 are very compatible with, since they register
>  the same class and dll name.  Richedit 4.1 however uses msftedit.dll instead,
>  which means that programs would need to explicitlydecide which version
>  they are using depending on which dll they load and which class they specify.
>
>  Certainly there are differences between richedit 3 and 4.1, but I don't know if
>  programs would depend on these differences.

OK I see your point, and after hitting a very interesting blog on
RichEdit, I even agree that the exact version number may be needed.

http://blogs.msdn.com/murrays/archive/2006/10/14/richedit-versions.aspx
http://blogs.msdn.com/murrays/archive/2006/10/20/some-richedit-history.aspx

BTW they say that the DLL name for versions 5.0, 5.1, and 6.0 is
riched20.dll again.

-- Ph.


From juan.lang at gmail.com  Tue Jul  1 10:23:52 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 1 Jul 2008 08:23:52 -0700
Subject: new inetmib1 test failures
In-Reply-To: <3a768c550806302143w2381a2dbjab11236eefb0148c@mail.gmail.com>
References: <22821af30806302129m4d8b7e4cjdd81b7db52611ec2@mail.gmail.com>
	<3a768c550806302143w2381a2dbjab11236eefb0148c@mail.gmail.com>
Message-ID: <3a768c550807010823m248e5deao1a624523c37346ca@mail.gmail.com>

> I'll relax the test from an == to a >=, which might
> be surprising but is at least allowed according to RFC 1157.

Oops, it isn't allowed, either.  I'll use the handy new broken() instead.
--Juan


From thestig at google.com  Tue Jul  1 10:34:58 2008
From: thestig at google.com (Lei Zhang)
Date: Tue, 1 Jul 2008 08:34:58 -0700
Subject: Possible issue with win.c and help
In-Reply-To: <4869AD13.5080303@aol.com>
References: <883713.74881.qm@web23202.mail.ird.yahoo.com>
	<4869AD13.5080303@aol.com>
Message-ID: <558b2f5c0807010834s1d467fd4nf0b2361b65e0b36c@mail.gmail.com>

On Mon, Jun 30, 2008 at 9:05 PM, Chris Ahrendt <celticht32 at aol.com> wrote:
> Ok in my ever increasing search to figure out why EQ2 is getting a
> unhandled exception and also a no ipixel error. (I am convinced this is
> two separate bugs now)
>
> Bug One :
>
> This is the unhandled exception:
> If I have EQ2 run in anything but win98 mode (which I don't think is
> supported anymore by EQ2) wine dies with a unhandled exception. If I set
> to win98 it ends with a no ipixel format error message box (the second
> bug) after it begins to draw the window. The other thing is the msg box
> is not a typical msg box saying that something isn't supported but looks
> to be an exception in  ClientApp.cpp which means they are getting some
> unhandled exception while drawing the window.
>
> What I think might be going on based on this :
>
> trace:win:WIN_SetWindowLong 0x2002c 0 0 W
> trace:win:WIN_SetWindowLong Fell Through
> trace:win:WIN_SetWindowLong Release Ptr
> trace:win:WIN_DestroyWindow 0x2002c
> trace:win:WIN_DestroyWindow 0x1002e
> trace:win:WIN_DestroyWindow 0x10030
> trace:win:WIN_DestroyWindow 0x10032
> trace:win:WIN_DestroyWindow 0x10034
> trace:win:WIN_DestroyWindow 0x10036
> trace:win:WIN_DestroyWindow 0x10038
> trace:win:WIN_DestroyWindow 0x1003a
> trace:win:WIN_DestroyWindow 0x1003c
> trace:win:WIN_DestroyWindow 0x1003e
> trace:win:WIN_DestroyWindow 0x10040
> trace:win:WIN_DestroyWindow 0x10042
> trace:win:WIN_DestroyWindow 0x10044
> trace:win:WIN_SetWindowLong 0x2002c 0 0 W
>
> ====================================================================
> These are my trace additions  in SetWindowLong to help me follow the
> execution of the code
>
> trace:win:WIN_SetWindowLong Fell Through
> trace:win:WIN_SetWindowLong Release Ptr
> trace:win:WIN_SetWindowLong 0x2002c 12 0 W
> trace:win:WIN_SetWindowLong Fell Through
> trace:win:WIN_SetWindowLong Server Start Request
> trace:win:WIN_SetWindowLong Default
> trace:win:WIN_SetWindowLong no call Err
> trace:win:WIN_SetWindowLong Default get and Set Win Data
> trace:win:WIN_SetWindowLong Release Ptr
> trace:win:WIN_SetWindowLong Returning 1871960
>
> CRASH! Unhandled Exception
>
> I think the window is being destroyed in reverse for some reason. Thats
> just my gut first feeling based on the above trace and the exception
> output. This is where my knowledge on Windows behavior ends. Does 98
> destroy the windows chain differently than XP? This would explain why
> the exception doesn't occur in 98 but does in XP.
>
> Second Bug:
> This is the ipixel problem which I haven't figured out
> how to debug whats going on there, but think it might  be related to
> this  error:
>
> libGL error: drmMap of framebuffer failed (Cannot allocate memory)
> libGL error: reverting to (slow) indirect rendering
> libGL error: drmMap of framebuffer failed (Cannot allocate memory)
> libGL error: reverting to (slow) indirect rendering
>
> Which I am not sure why this is occurring yet but one bug at a time.
> Where would someone look to trace along the window draw chain to see
> where it dies. Some of the debug flags cause my machine to lock up which
> I know is a driver issue and other lockups could be caused by the above
> exception messing something up in X as the disk still runs when that
> lockup occurs but X is DOA.
>
> Thoughts????? Ideas???? Suggestions??????
>
> Chris
>
>
>

Hi,

Please file bug reports on the Wine Bugzilla - http://bugs.winehq.org/
The second issue looks like 3d graphics are not set up correctly on
your computer. You should ask your favorite Linux forum about that.


From wine.dev at web.de  Tue Jul  1 10:50:32 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Tue, 01 Jul 2008 17:50:32 +0200
Subject: programs: add rudimentary dxdiag
In-Reply-To: <b6bb06270806300815va6d1af4m300ba84a952ed272@mail.gmail.com>
References: <383400.99845.qm@web23204.mail.ird.yahoo.com>
	<b6bb06270806300815va6d1af4m300ba84a952ed272@mail.gmail.com>
Message-ID: <1214927433.5786.8.camel@p4>

On Mo, 2008-06-30 at 10:15 -0500, Austin English wrote:

> >  Instead of simple stub, this patch also adds the (simplified)  d3d test
> > like seen in native dxdiag, so users can test  if their d3d  is setup
> > correctly. Screenshot can be seen here:
> > http://bugs.winehq.org/attachment.cgi?id=14342
> >

It looks nice, but the Patch is very large!

> > and it 's not really possible
> > to send it in in small chuncks.

Why not?
- empty stub
- the property-sheet
- demo-window with an empty (in memory) Bitmap
?- the wine-logo as bitmap
- spinning cube
reorder, when needed


> Like I said in the bug, you should add dxdiag to
> configure.ac/Makefile.in/etc.
> 
> -Austin

No, Louis used the correct way: 
tools/make_makefiles
./autoconf



-- 
 
By by ... Detlef




From celticht32 at aol.com  Tue Jul  1 11:07:08 2008
From: celticht32 at aol.com (celticht32 at aol.com)
Date: Tue, 01 Jul 2008 12:07:08 -0400
Subject: Possible issue with win.c and help
In-Reply-To: <558b2f5c0807010834s1d467fd4nf0b2361b65e0b36c@mail.gmail.com>
References: <883713.74881.qm@web23202.mail.ird.yahoo.com>	
	<4869AD13.5080303@aol.com>
	<558b2f5c0807010834s1d467fd4nf0b2361b65e0b36c@mail.gmail.com>
Message-ID: <8CAA9ABA5807C60-F4C-4DC@WEBMAIL-DC14.sysops.aol.com>


 


 


 

-----Original Message-----
From: Lei Zhang <thestig at google.com>
To: celticht32 at aol.com
Cc: wine-devel at winehq.org
Sent: Tue, 1 Jul 2008 11:34 am
Subject: Re: Possible issue with win.c and help










On Mon, Jun 30, 2008 at 9:05 PM, Chris Ahrendt <celticht32 at aol.com> wrote:
> Ok in my ever increasing search to figure out why EQ2 is getting a
> unhandled exception and also a no ipixel error. (I am convinced this is
> two separate bugs now)
>
> Bug One :
>
> This is the unhandled exception:
> If I have EQ2 run in anything but win98 mode (which I don't think is
> supported anymore by EQ2) wine dies with a unhandled exception. If I set
> to win98 it ends with a no ipixel format error message box (the second
> bug) after it begins to draw the window. The other thing is the msg box
> is not a typical msg box saying that something isn't supported but looks
> to be an exception in  ClientApp.cpp which means they are getting some
> unhandled exception while drawing the window.
>
> What I think might be going on based on this :
>
> trace:win:WIN_SetWindowLong 0x2002c 0 0 W
> trace:win:WIN_SetWindowLong Fell Through
> trace:win:WIN_SetWindowLong Release Ptr
> trace:win:WIN_DestroyWindow 0x2002c
> trace:win:WIN_DestroyWindow 0x1002e
> trace:win:WIN_DestroyWindow 0x10030
> trace:win:WIN_DestroyWindow 0x10032
> trace:win:WIN_DestroyWindow 0x10034
> trace:win:WIN_DestroyWindow 0x10036
> trace:win:WIN_DestroyWindow 0x10038
> trace:win:WIN_DestroyWindow 0x1003a
> trace:win:WIN_DestroyWindow 0x1003c
> trace:win:WIN_DestroyWindow 0x1003e
> trace:win:WIN_DestroyWindow 0x10040
> trace:win:WIN_DestroyWindow 0x10042
> trace:win:WIN_DestroyWindow 0x10044
> trace:win:WIN_SetWindowLong 0x2002c 0 0 W
>
> ====================================================================
> These are my trace additions  in SetWindowLong to help me follow the
> execution of the code
>
> trace:win:WIN_SetWindowLong Fell Through
> trace:win:WIN_SetWindowLong Release Ptr
> trace:win:WIN_SetWindowLong 0x2002c 12 0 W
> trace:win:WIN_SetWindowLong Fell Through
> trace:win:WIN_SetWindowLong Server Start Request
> trace:win:WIN_SetWindowLong Default
> trace:win:WIN_SetWindowLong no call Err
> trace:win:WIN_SetWindowLong Default get and Set Win Data
> trace:win:WIN_SetWindowLong Release Ptr
> trace:win:WIN_SetWindowLong Returning 1871960
>
> CRASH! Unhandled Exception
>
> I think the window is being destroyed in reverse for some reason. Thats
> just my gut first feeling based on the above trace and the exception
> output. This is where my knowledge on Windows behavior ends. Does 98
> destroy the windows chain differently than XP? This would explain why
> the exception doesn't occur in 98 but does in XP.
>
> Second Bug:
> This is the ipixel problem which I haven't figured out
> how to debug whats going on there, but think it might  be related to
> this  error:
>
> libGL error: drmMap of framebuffer failed (Cannot allocate memory)
> libGL error: reverting to (slow) indirect rendering
> libGL error: drmMap of framebuffer failed (Cannot allocate memory)
> libGL error: reverting to (slow) indirect rendering
>
> Which I am not sure why this is occurring yet but one bug at a time.
> Where would someone look to trace along the window draw chain to see
> where it dies. Some of the debug flags cause my machine to lock up which
> I know is a driver issue and other lockups could be caused by the above
> exception messing something up in X as the disk still runs when that
> lockup occurs but X is DOA.
>
> Thoughts????? Ideas???? Suggestions??????
>
> Chris
>
>
>

Hi,

Please file bug reports on the Wine Bugzilla - http://bugs.winehq.org/
The second issue looks like 3d graphics are not set up correctly on
your computer. You should ask your favorite Linux forum about that.





Oh this is already reported as a bug... as to the second I know.. was just looking for some pointers...

Need help actually understanding the way windows are handled in 98 vs XP  .

The graphic are set up correctly though...

Chris



 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080701/56c2614e/attachment-0001.htm 

From truiken at gmail.com  Tue Jul  1 12:24:14 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 1 Jul 2008 12:24:14 -0500
Subject: Dylan Smith : richedit: Added missing DestroyWindow in a test.
In-Reply-To: <E1KDftg-0003Li-3f@wine.codeweavers.com>
References: <E1KDftg-0003Li-3f@wine.codeweavers.com>
Message-ID: <22821af30807011024l6edca98dob804c5e4ab72c204@mail.gmail.com>

On Tue, Jul 1, 2008 at 8:27 AM, Alexandre Julliard <julliard at winehq.org> wrote:
> Module: wine
> Branch: master
> Commit: 2a139746cc631f4ec291a89b4556af17266ce8c0
> URL:    http://source.winehq.org/git/wine.git/?a=commit;h=2a139746cc631f4ec291a89b4556af17266ce8c0
>
> Author: Dylan Smith <dylan.ah.smith at gmail.com>
> Date:   Sat Jun 28 03:00:46 2008 -0400
>
> richedit: Added missing DestroyWindow in a test.
>

This commit is causing ~350 failures on all platforms.  Please send in
a fix or a revert patch.

-- 
James Hawkins


From truiken at gmail.com  Tue Jul  1 14:04:09 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 1 Jul 2008 14:04:09 -0500
Subject: RFC: Adding tests for windowless richedit services
In-Reply-To: <bcab73240806292156y797c19e0yb9171dfa7ae5fa44@mail.gmail.com>
References: <bcab73240806281849l468584a3k21cb3bb39764ec2d@mail.gmail.com>
	<bcab73240806292051r5a77fddas183eb5eef8d2cb31@mail.gmail.com>
	<22821af30806292056i19c183b0gc4fca06fe1f2c06b@mail.gmail.com>
	<bcab73240806292156y797c19e0yb9171dfa7ae5fa44@mail.gmail.com>
Message-ID: <22821af30807011204r54eae1fcsb106aac5b3873924@mail.gmail.com>

On Sun, Jun 29, 2008 at 11:56 PM, Austin Lund <austin.lund at gmail.com> wrote:
> OK.  I won't have access to a windows machine for a little while.  Can
> someone please test this patch for me?
>

The tests pass in win95, win2k, winxp, win2k3.  Please remember to cc
wine-devel and bottom-post replies.

-- 
James Hawkins


From dank at kegel.com  Tue Jul  1 14:11:08 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 1 Jul 2008 12:11:08 -0700
Subject: gdi32: Implement automatic font substitution
Message-ID: <a71bd89a0807011211w296aef7dy528fde025dc832e5@mail.gmail.com>

Liu Qishuai wrote:
> This patch appends all fonts on child_list so that if a character is
> not available in the font, other fonts will be automatically used.
> This is how Windows does to get a CJK character when a latin font is specified.
>
> A lot of CJK-related bugs will be fixed after applying this patch.

Excellent!

In case AJ hesitates to apply this patch:
Can you write a conformance test that verifies this behavior?
Also, can you identify a bug in bugzilla this will fix?
- Dan


From truiken at gmail.com  Tue Jul  1 14:27:01 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 1 Jul 2008 14:27:01 -0500
Subject: winecfg.cpl: Add new control panel applet for winecfg
In-Reply-To: <486A82DF.5060506@owenrudge.net>
References: <486A82DF.5060506@owenrudge.net>
Message-ID: <22821af30807011227x471b8027u9fe570f219c2cdfd@mail.gmail.com>

On Tue, Jul 1, 2008 at 2:17 PM, Owen Rudge <owen at owenrudge.net> wrote:
> This patch adds a new applet, winecfg.cpl, to Wine, based on a patch sent a
> few months ago by Metody Stefanov (pure_evil @ mail.bg). The control panel
> features three icons, for Wine Configuration, the Registry Editor, and the
> Task Manager.
>

Isn't it more logical (and closer to native) to have a control panel
applet for each category/tab already in winecfg instead of having one
winecfg applet?  Otherwise you're just moving winecfg to another
place.

-- 
James Hawkins


From truiken at gmail.com  Tue Jul  1 14:28:23 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 1 Jul 2008 14:28:23 -0500
Subject: [4/5] WineD3D: Delay render target activation
In-Reply-To: <000001c8dbae$77f07960$67d16c20$@com>
References: <000001c8dbae$77f07960$67d16c20$@com>
Message-ID: <22821af30807011228o645b6da7r1b080ec57618967c@mail.gmail.com>

On Tue, Jul 1, 2008 at 2:12 PM, Stefan D?singer <stefan at codeweavers.com> wrote:
>
>

You forgot the patch.

-- 
James Hawkins


From stefan at codeweavers.com  Tue Jul  1 14:19:22 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Tue, 1 Jul 2008 14:19:22 -0500
Subject: [4/5] WineD3D: Delay render target activation
In-Reply-To: <000001c8dbae$77f07960$67d16c20$@com>
References: <000001c8dbae$77f07960$67d16c20$@com>
Message-ID: <003101c8dbaf$5e033f50$1a09bdf0$@com>

This time with the patch

> -----Original Message-----
> From: wine-patches-bounces at winehq.org [mailto:wine-patches-
> bounces at winehq.org] On Behalf Of Stefan D?singer
> Sent: Tuesday, July 01, 2008 2:13 PM
> To: wine-patches at winehq.org
> Subject: [4/5] WineD3D: Delay render target activation
> 
> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0005-WineD3D-Delay-render-target-activation.patch
Type: text/x-patch
Size: 0 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080701/acdc409a/attachment.bin 

From zac at zacbrown.org  Tue Jul  1 14:42:30 2008
From: zac at zacbrown.org (Zac Brown)
Date: Tue, 01 Jul 2008 12:42:30 -0700
Subject: Thoughts on implementation of winhttp.dll
Message-ID: <486A88A6.1040905@zacbrown.org>

Hi,

I've been looking at implementing winhttp.dll.

Does anyone have thoughts on implementing parts of winhttp in terms of wininet? 
The primary issue that prevents entirely implementing winhttp in terms of 
wininet is that there is no direct Win32 API for fetching an SSL certificate in 
winhttp. To access these, I'd need access to functions defined in 
wininet/netconnection.c but aren't exported.

My current two ideas are to either:
1) Copy the networking sublayer from wininet into winhttp and build on top of 
that to implement winhttp. Effectively reimplementing mostly from scratch.

2) Implement most winhttp things in terms of wininet and then copying over parts 
that I need from wininet's network sublayer, like fetching SSL certificates and 
so on.

Thoughts on this are greatly appreciated, as I'd prefer to only have to write 
the library once.

-Zac


From owen at owenrudge.net  Tue Jul  1 16:22:10 2008
From: owen at owenrudge.net (Owen Rudge)
Date: Tue, 1 Jul 2008 22:22:10 +0100
Subject: winecfg.cpl: Add new control panel applet for winecfg
References: <486A82DF.5060506@owenrudge.net>
	<22821af30807011227x471b8027u9fe570f219c2cdfd@mail.gmail.com>
Message-ID: <8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net>

> Isn't it more logical (and closer to native) to have a control panel
> applet for each category/tab already in winecfg instead of having one
> winecfg applet?  Otherwise you're just moving winecfg to another
> place.

Well, my plan, as mentioned before in another thread, is to split up winecfg 
a bit, but there's only so much you can do this, due to the fact that most 
of the tabs in winecfg can work on a global or application-specific basis. 
As far as I can tell, the Desktop and Sound tabs are the only bits of 
winecfg that are global-only and as such can be split from the rest in this 
manner, and this is something I would be considering for a "next step" for 
this applet. However, I figured a simple applet that showed some icons that 
a) let us actually have something in the control panel and that would b) 
provide a more user-friendly interface to these tools for users would be a 
good start, rather than coming along straight away with a large patch that 
hacks up winecfg!

-- 
Owen Rudge
http://www.owenrudge.net/ 



From max at veneto.com  Tue Jul  1 16:28:32 2008
From: max at veneto.com (Massimo Del Fedele)
Date: Tue, 01 Jul 2008 23:28:32 +0200
Subject: start/stop logs by code... is it possible ?
Message-ID: <g4e7i1$l3s$1@ger.gmane.org>

I'd like to start some trace log entering a function and stopping it at 
exit, to isolate just the part I need. Is it possible to add some code 
inside the function body that do it ?

I mean...

void aWineFunction(...)
{
   .......
   STARTLOG
   .......
   .......
   STOPLOG

   .......

}

The purpose is to isolate traces from code called by a single function.

Max



From truiken at gmail.com  Tue Jul  1 17:41:38 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 1 Jul 2008 17:41:38 -0500
Subject: winecfg.cpl: Add new control panel applet for winecfg
In-Reply-To: <8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net>
References: <486A82DF.5060506@owenrudge.net>
	<22821af30807011227x471b8027u9fe570f219c2cdfd@mail.gmail.com>
	<8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net>
Message-ID: <22821af30807011541j7008153apbf4d4ccf3d4af225@mail.gmail.com>

On Tue, Jul 1, 2008 at 4:22 PM, Owen Rudge <owen at owenrudge.net> wrote:
>> Isn't it more logical (and closer to native) to have a control panel
>> applet for each category/tab already in winecfg instead of having one
>> winecfg applet?  Otherwise you're just moving winecfg to another
>> place.
>
> Well, my plan, as mentioned before in another thread, is to split up winecfg
> a bit, but there's only so much you can do this, due to the fact that most
> of the tabs in winecfg can work on a global or application-specific basis.
> As far as I can tell, the Desktop and Sound tabs are the only bits of
> winecfg that are global-only and as such can be split from the rest in this
> manner, and this is something I would be considering for a "next step" for
> this applet. However, I figured a simple applet that showed some icons that
> a) let us actually have something in the control panel and that would b)
> provide a more user-friendly interface to these tools for users would be a
> good start, rather than coming along straight away with a large patch that
> hacks up winecfg!
>

As we said before, implementing a control panel applet doesn't mean
you have to do anything to the current winecfg code.

-- 
James Hawkins


From owen at owenrudge.net  Tue Jul  1 17:47:03 2008
From: owen at owenrudge.net (Owen Rudge)
Date: Tue, 01 Jul 2008 23:47:03 +0100
Subject: winecfg.cpl: Add new control panel applet for winecfg
In-Reply-To: <22821af30807011541j7008153apbf4d4ccf3d4af225@mail.gmail.com>
References: <486A82DF.5060506@owenrudge.net>	
	<22821af30807011227x471b8027u9fe570f219c2cdfd@mail.gmail.com>	
	<8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net>
	<22821af30807011541j7008153apbf4d4ccf3d4af225@mail.gmail.com>
Message-ID: <486AB3E7.5060908@owenrudge.net>

 > As we said before, implementing a control panel applet doesn't mean
 > you have to do anything to the current winecfg code.

True, but would it really benefit to add an icon for each winecfg tab 
(which I think is what you are suggesting, yes?) to the control panel, 
compared to having one general icon for Wine configuration?

-- 
Owen Rudge
http://www.owenrudge.net/


From rob_t at sunwave.net  Tue Jul  1 18:05:37 2008
From: rob_t at sunwave.net (Rob Thornton)
Date: Tue, 01 Jul 2008 16:05:37 -0700
Subject: winecfg.cpl: Add new control panel applet for winecfg
In-Reply-To: <486AB3E7.5060908@owenrudge.net>
References: <486A82DF.5060506@owenrudge.net>		<22821af30807011227x471b8027u9fe570f219c2cdfd@mail.gmail.com>		<8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net>	<22821af30807011541j7008153apbf4d4ccf3d4af225@mail.gmail.com>
	<486AB3E7.5060908@owenrudge.net>
Message-ID: <486AB841.9090703@sunwave.net>

Owen Rudge wrote:
>  > As we said before, implementing a control panel applet doesn't mean
>  > you have to do anything to the current winecfg code.
>
> True, but would it really benefit to add an icon for each winecfg tab 
> (which I think is what you are suggesting, yes?) to the control panel, 
> compared to having one general icon for Wine configuration?
>   
I don't think think making winecfg seem more like the Windows Control 
panel is really something wine should strive for. Wine may be a 
compatibility layer for Windows but I'm not sure it should mimic it.

Rob Thornton


From truiken at gmail.com  Tue Jul  1 18:08:03 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 1 Jul 2008 18:08:03 -0500
Subject: winecfg.cpl: Add new control panel applet for winecfg
In-Reply-To: <486AB3E7.5060908@owenrudge.net>
References: <486A82DF.5060506@owenrudge.net>
	<22821af30807011227x471b8027u9fe570f219c2cdfd@mail.gmail.com>
	<8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net>
	<22821af30807011541j7008153apbf4d4ccf3d4af225@mail.gmail.com>
	<486AB3E7.5060908@owenrudge.net>
Message-ID: <22821af30807011608i1f4c1625wba5b196e4332e00d@mail.gmail.com>

On Tue, Jul 1, 2008 at 5:47 PM, Owen Rudge <owen at owenrudge.net> wrote:
>  > As we said before, implementing a control panel applet doesn't mean
>  > you have to do anything to the current winecfg code.
>
> True, but would it really benefit to add an icon for each winecfg tab
> (which I think is what you are suggesting, yes?) to the control panel,
> compared to having one general icon for Wine configuration?
>

First, that's not what I was suggesting.  I was disagreeing with
adding a winecfg cpl applet.  Second, I'm likening winecfg to a very
poorly-designed control panel.  There are several categories that can
go into their own cpl applet, like 'Sound' and 'Graphics' (or whatever
you want to call them), though there's not a 1-to-1 correspondence
between winecfg tabs and potentially beneficial cpl applets.

-- 
James Hawkins


From truiken at gmail.com  Tue Jul  1 18:09:32 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 1 Jul 2008 18:09:32 -0500
Subject: winecfg.cpl: Add new control panel applet for winecfg
In-Reply-To: <486AB841.9090703@sunwave.net>
References: <486A82DF.5060506@owenrudge.net>
	<22821af30807011227x471b8027u9fe570f219c2cdfd@mail.gmail.com>
	<8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net>
	<22821af30807011541j7008153apbf4d4ccf3d4af225@mail.gmail.com>
	<486AB3E7.5060908@owenrudge.net> <486AB841.9090703@sunwave.net>
Message-ID: <22821af30807011609m27c56978jf6d7158b87782799@mail.gmail.com>

On Tue, Jul 1, 2008 at 6:05 PM, Rob Thornton <rob_t at sunwave.net> wrote:
> Owen Rudge wrote:
>>  > As we said before, implementing a control panel applet doesn't mean
>>  > you have to do anything to the current winecfg code.
>>
>> True, but would it really benefit to add an icon for each winecfg tab
>> (which I think is what you are suggesting, yes?) to the control panel,
>> compared to having one general icon for Wine configuration?
>>
> I don't think think making winecfg seem more like the Windows Control
> panel is really something wine should strive for. Wine may be a
> compatibility layer for Windows but I'm not sure it should mimic it.
>

Then what's the point of this mini-project?  We've already decided
it's what we want for Wine, so you won't get much sympathy for this
argument.  Keep in mind: we're not removing winecfg (yet)...we're just
adding applets to the control panel.

-- 
James Hawkins


From owen at owenrudge.net  Tue Jul  1 18:15:31 2008
From: owen at owenrudge.net (Owen Rudge)
Date: Wed, 02 Jul 2008 00:15:31 +0100
Subject: winecfg.cpl: Add new control panel applet for winecfg
In-Reply-To: <22821af30807011608i1f4c1625wba5b196e4332e00d@mail.gmail.com>
References: <486A82DF.5060506@owenrudge.net>	
	<22821af30807011227x471b8027u9fe570f219c2cdfd@mail.gmail.com>	
	<8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net>	
	<22821af30807011541j7008153apbf4d4ccf3d4af225@mail.gmail.com>	
	<486AB3E7.5060908@owenrudge.net>
	<22821af30807011608i1f4c1625wba5b196e4332e00d@mail.gmail.com>
Message-ID: <486ABA93.1080303@owenrudge.net>

 > First, that's not what I was suggesting. I was disagreeing with
 > adding a winecfg cpl applet. Second, I'm likening winecfg to a very
 > poorly-designed control panel. There are several categories that can
 > go into their own cpl applet, like 'Sound' and 'Graphics' (or whatever
 > you want to call them), though there's not a 1-to-1 correspondence
 > between winecfg tabs and potentially beneficial cpl applets.

Ah, I see now. Well, that's what I'm ultimately hoping to do, although 
as mentioned before, working out issues with the likes of how to 
integrate an interface for application-versus-global settings for each 
applet will require a bit of thinking. In addition, I imagine splitting 
up/redesigning winecfg is something that may involve a bit of resistance 
from those already accustomed to its present manner of working. This 
patch is just the first part of a submission to create a basic control 
panel skeleton - as I said before, I am hoping to redesign parts of 
winecfg and shift those parts into their own control panel applets 
(which technically can be all part of this same .cpl file). For the bits 
that don't get moved into separate applets, I don't see why a general 
Wine Configuration icon would be a bad thing, for the time being at least.

-- 
Owen Rudge
http://www.owenrudge.net/


From truiken at gmail.com  Tue Jul  1 18:37:35 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 1 Jul 2008 18:37:35 -0500
Subject: winecfg.cpl: Add new control panel applet for winecfg
In-Reply-To: <486ABA93.1080303@owenrudge.net>
References: <486A82DF.5060506@owenrudge.net>
	<22821af30807011227x471b8027u9fe570f219c2cdfd@mail.gmail.com>
	<8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net>
	<22821af30807011541j7008153apbf4d4ccf3d4af225@mail.gmail.com>
	<486AB3E7.5060908@owenrudge.net>
	<22821af30807011608i1f4c1625wba5b196e4332e00d@mail.gmail.com>
	<486ABA93.1080303@owenrudge.net>
Message-ID: <22821af30807011637l68224121t6056e0e201bd5933@mail.gmail.com>

On Tue, Jul 1, 2008 at 6:15 PM, Owen Rudge <owen at owenrudge.net> wrote:
>  > First, that's not what I was suggesting. I was disagreeing with
>  > adding a winecfg cpl applet. Second, I'm likening winecfg to a very
>  > poorly-designed control panel. There are several categories that can
>  > go into their own cpl applet, like 'Sound' and 'Graphics' (or whatever
>  > you want to call them), though there's not a 1-to-1 correspondence
>  > between winecfg tabs and potentially beneficial cpl applets.
>
> Ah, I see now. Well, that's what I'm ultimately hoping to do, although
> as mentioned before, working out issues with the likes of how to
> integrate an interface for application-versus-global settings for each
> applet will require a bit of thinking. In addition, I imagine splitting
> up/redesigning winecfg is something that may involve a bit of resistance
> from those already accustomed to its present manner of working. This
> patch is just the first part of a submission to create a basic control
> panel skeleton - as I said before, I am hoping to redesign parts of
> winecfg and shift those parts into their own control panel applets
> (which technically can be all part of this same .cpl file). For the bits
> that don't get moved into separate applets, I don't see why a general
> Wine Configuration icon would be a bad thing, for the time being at least.
>

I still don't see the need for a winecfg cpl applet at this point.
You say that the Wine Configuration icon is ok for the time being.
Take your time and design it correctly the first time, so you or
others don't have to go back and fix it later.  Measure twice, cut
once, as they say.  I want to reiterate that, as far as I remember,
this project doesn't have anything to do with redesigning winecfg.
Correct me if I'm wrong.

-- 
James Hawkins


From owen at owenrudge.net  Tue Jul  1 18:54:45 2008
From: owen at owenrudge.net (Owen Rudge)
Date: Wed, 02 Jul 2008 00:54:45 +0100
Subject: winecfg.cpl: Add new control panel applet for winecfg
In-Reply-To: <22821af30807011637l68224121t6056e0e201bd5933@mail.gmail.com>
References: <486A82DF.5060506@owenrudge.net>	
	<22821af30807011227x471b8027u9fe570f219c2cdfd@mail.gmail.com>	
	<8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net>	
	<22821af30807011541j7008153apbf4d4ccf3d4af225@mail.gmail.com>	
	<486AB3E7.5060908@owenrudge.net>	
	<22821af30807011608i1f4c1625wba5b196e4332e00d@mail.gmail.com>	
	<486ABA93.1080303@owenrudge.net>
	<22821af30807011637l68224121t6056e0e201bd5933@mail.gmail.com>
Message-ID: <486AC3C5.4000603@owenrudge.net>

 > I still don't see the need for a winecfg cpl applet at this point.
 > You say that the Wine Configuration icon is ok for the time being.
 > Take your time and design it correctly the first time, so you or
 > others don't have to go back and fix it later. Measure twice, cut
 > once, as they say. I want to reiterate that, as far as I remember,
 > this project doesn't have anything to do with redesigning winecfg.
 > Correct me if I'm wrong.

Well, the first part of the project was to get the shell namespace 
implementation of Control Panel working properly, which is now 
effectively complete. The second part of the project is to work on some 
applets for Wine, including improving the standard winecfg applets, 
unifying all of Wine's configuration tools in the Control Panel. As an 
example, I'm working on a new Add/Remove Programs applet, to replace the 
standard Wine uninstaller with one of enhanced functionality, and I am 
looking into what other applets will be useful within Wine. Splitting up 
appropriate parts of winecfg into separate control panels is another 
intention. As this latter goal may take a while to design and implement, 
I personally believe this control panel applet (which also adds icons 
for the Registry Editor and Task Manager, two other key utilities, which 
would be useful to have easy access for) is a useful stepping-stone, as 
it were.

I do get your point about designing things correctly, of course, but 
considering the relativey minor functionality of this control panel, it 
seems to me to be reasonable to include for the time being, so that it 
can be developed over the next month or so to include all this extra 
functionality - instead of turning up at the end of July with a large 
unwieldy patch!

Hope this helps clarify things,

-- 
Owen Rudge
http://www.owenrudge.net/


From dank at kegel.com  Tue Jul  1 20:03:20 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 1 Jul 2008 18:03:20 -0700
Subject: New valgrind warnings in fusion/tests/asmcache
Message-ID: <a71bd89a0807011803k54a74690i763009052b065e3f@mail.gmail.com>

Hey James,
could you have a look at these fresh warnings?
Thanks!

http://kegel.com/wine/valgrind/logs-2008-07-01/vg-fusion_asmcache-diff.txt

+ Conditional jump or move depends on uninitialised value(s)
+    at  default_dbgstr_wn (debug.c:337)
+    by  NTDLL_dbgstr_wn (debugtools.c:106)
+    by  wine_dbgstr_wn (debug.c:408)
+    by  debugstr_w (debug.h:260)
+    by  GetCachePath (fusion.c:97)
+    by  test_QueryAssemblyInfo (asmcache.c:981)
+    by  func_asmcache (asmcache.c:1472)
+    by  run_test (test.h:449)
+    by  main (test.h:498)
+  Uninitialised value was created by a stack allocation
+    at  test_QueryAssemblyInfo (asmcache.c:946)
...
+
+ Conditional jump or move depends on uninitialised value(s)
+    at  strlenW (unicode.h:212)
+    by  strcatW (unicode.h:245)
+    by  lstrcatW (string.c:190)
+    by  test_QueryAssemblyInfo (asmcache.c:987)
+    by  func_asmcache (asmcache.c:1472)
+    by  run_test (test.h:449)
+    by  main (test.h:498)
+  Uninitialised value was created by a stack allocation
+    at  test_QueryAssemblyInfo (asmcache.c:946)


From dank at kegel.com  Tue Jul  1 20:06:34 2008
From: dank at kegel.com (Dan Kegel)
Date: Tue, 1 Jul 2008 18:06:34 -0700
Subject: New valgrind warnings in rpcrt4/tests/server
Message-ID: <a71bd89a0807011806u31f3cc05u17eb8957fb98b812@mail.gmail.com>

Hi Rob!
Could you have a look at these fresh warnings in rpcrt4/tests/server?
Thanks...

http://kegel.com/wine/valgrind/logs-2008-07-01/vg-rpcrt4_server-diff.txt

+ Syscall param socketcall.send(msg) points to uninitialised byte(s)
+    at  (within /lib/ld-2.7.so)
+    by  rpcrt4_conn_write (rpc_binding.h:168)
+    by  RPCRT4_SendWithAuth (rpc_message.c:533)
+    by  RPCRT4_Send (rpc_message.c:675)
+    by  I_RpcSend (rpc_message.c:1225)
+    by  I_RpcSendReceive (rpc_message.c:1328)
+    by  NdrSendReceive (ndr_clientserver.c:214)
+    by  square_unencu (server_c.c:2467)
+    by  union_tests (server.c:889)
+    by  run_tests (server.c:1241)
+    by  client (server.c:1260)
+    by  func_server (server.c:1357)
+    by  run_test (test.h:449)
+    by  main (test.h:498)
+  Address 0x7f01350c is 28 bytes inside a block of size 36 alloc'd
+    at  notify_alloc (heap.c:191)
+    by  RtlAllocateHeap (heap.c:1231)
+    by  RPCRT4_SendWithAuth (rpc_message.c:492)
+    by  RPCRT4_Send (rpc_message.c:675)
+    by  I_RpcSend (rpc_message.c:1225)
+    by  I_RpcSendReceive (rpc_message.c:1328)
+    by  NdrSendReceive (ndr_clientserver.c:214)
+    by  square_unencu (server_c.c:2467)
+    by  union_tests (server.c:889)
+    by  run_tests (server.c:1241)
+    by  client (server.c:1260)
+    by  func_server (server.c:1357)
+    by  run_test (test.h:449)
+    by  main (test.h:498)
+  Uninitialised value was created by a stack allocation
+    at  square_unencu (server_c.c:2424)
...
+ Syscall param write(buf) points to uninitialised byte(s)
+    at  (within /lib/ld-2.7.so)
+    by  WriteFile (file.c:559)
+    by  rpcrt4_conn_np_write (rpc_transport.c:404)
+    by  rpcrt4_conn_write (rpc_binding.h:168)
+    by  RPCRT4_SendWithAuth (rpc_message.c:533)
+    by  RPCRT4_Send (rpc_message.c:675)
+    by  I_RpcSend (rpc_message.c:1225)
+    by  I_RpcSendReceive (rpc_message.c:1328)
+    by  NdrSendReceive (ndr_clientserver.c:214)
+    by  square_unencu (server_c.c:2467)
+    by  union_tests (server.c:889)
+    by  run_tests (server.c:1241)
+    by  client (server.c:1275)
+    by  func_server (server.c:1357)
+    by  run_test (test.h:449)
+    by  main (test.h:498)
+  Address 0x7f013524 is 28 bytes inside a block of size 36 alloc'd
+    at  notify_alloc (heap.c:191)
+    by  RtlAllocateHeap (heap.c:1231)
+    by  RPCRT4_SendWithAuth (rpc_message.c:492)
+    by  RPCRT4_Send (rpc_message.c:675)
+    by  I_RpcSend (rpc_message.c:1225)
+    by  I_RpcSendReceive (rpc_message.c:1328)
+    by  NdrSendReceive (ndr_clientserver.c:214)
+    by  square_unencu (server_c.c:2467)
+    by  union_tests (server.c:889)
+    by  run_tests (server.c:1241)
+    by  client (server.c:1275)
+    by  func_server (server.c:1357)
+    by  run_test (test.h:449)
+    by  main (test.h:498)
+  Uninitialised value was created by a stack allocation
+    at  square_unencu (server_c.c:2424)
...
+ 24 bytes in 2 blocks are definitely lost
+    at  malloc (vg_replace_malloc.c:207)
+    by  MIDL_user_allocate (server.c:53)
+    by  s_get_s123 (server.c:538)
+    by  IServer_get_s123 (server_s.c:4545)
+    by  process_request_packet (rpc_server.c:290)
+    by  RPCRT4_process_packet (rpc_server.c:345)
+    by  RPCRT4_worker_thread (rpc_server.c:362)
+    by  worker_thread_proc (threadpool.c:113)
+    by  ??? (thread.c:128)
+    by  call_thread_func (thread.c:383)
+    by  start_thread (thread.c:443)
+    by  start_thread (in /lib/tls/i686/cmov/libpthread-2.7.so)
+    by  clone (in /lib/tls/i686/cmov/libc-2.7.so)


From dylan.ah.smith at gmail.com  Tue Jul  1 23:52:43 2008
From: dylan.ah.smith at gmail.com (Dylan Smith)
Date: Wed, 2 Jul 2008 00:52:43 -0400
Subject: Dylan Smith : richedit: Added missing DestroyWindow in a test.
In-Reply-To: <22821af30807011024l6edca98dob804c5e4ab72c204@mail.gmail.com>
References: <E1KDftg-0003Li-3f@wine.codeweavers.com>
	<22821af30807011024l6edca98dob804c5e4ab72c204@mail.gmail.com>
Message-ID: <5c6ee3b70807012152y7e12b978k6e65233e1e689379@mail.gmail.com>

On Tue, Jul 1, 2008 at 1:24 PM, James Hawkins <truiken at gmail.com> wrote:
> This commit is causing ~350 failures on all platforms.  Please send in
> a fix or a revert patch.

Oh, crap.  You are right, I must have only tested this on Windows with
further patches applied that fix this problem.  There are some
problems in these tests with sending keyboard events, but they don't
always seem to show themselves.  I am not sure what the conditions are
that result in these causing tests to fail, but I guess this someone
is one of them.

I guess I should revert this patch, and add change to another patch
which fixes the issue.


From dylan.ah.smith at gmail.com  Wed Jul  2 00:01:24 2008
From: dylan.ah.smith at gmail.com (Dylan Smith)
Date: Wed, 2 Jul 2008 01:01:24 -0400
Subject: Dylan Smith : richedit: Added missing DestroyWindow in a test.
In-Reply-To: <5c6ee3b70807012152y7e12b978k6e65233e1e689379@mail.gmail.com>
References: <E1KDftg-0003Li-3f@wine.codeweavers.com>
	<22821af30807011024l6edca98dob804c5e4ab72c204@mail.gmail.com>
	<5c6ee3b70807012152y7e12b978k6e65233e1e689379@mail.gmail.com>
Message-ID: <5c6ee3b70807012201m2f887c8dlbe430a25a856adf8@mail.gmail.com>

On Wed, Jul 2, 2008 at 12:52 AM, Dylan Smith <dylan.ah.smith at gmail.com> wrote:
>
> On Tue, Jul 1, 2008 at 1:24 PM, James Hawkins <truiken at gmail.com> wrote:
> > This commit is causing ~350 failures on all platforms.  Please send in
> > a fix or a revert patch.
>
> Oh, crap.  You are right, I must have only tested this on Windows with
> further patches applied that fix this problem.  There are some
> problems in these tests with sending keyboard events, but they don't
> always seem to show themselves.  I am not sure what the conditions are
> that result in these causing tests to fail, but I guess this someone
> is one of them.
>
> I guess I should revert this patch, and add change to another patch
> which fixes the issue.

Sorry for posting again, but I just noticed that I already sent the
patch that fixes the tests, and you suggested either _fix_ or revert
the patch.  Well, could you try applying the patch from
http://www.winehq.org/pipermail/wine-patches/2008-June/056829.html and
see if it fixes this problem?  I tested it in Windows XP, and in Wine,
and in Wine with valgrind.


From lqs.buaa at gmail.com  Tue Jul  1 19:39:15 2008
From: lqs.buaa at gmail.com (Liu Qishuai)
Date: Wed, 2 Jul 2008 08:39:15 +0800
Subject: gdi32: Implement automatic font substitution
In-Reply-To: <a71bd89a0807011211w296aef7dy528fde025dc832e5@mail.gmail.com>
References: <a71bd89a0807011211w296aef7dy528fde025dc832e5@mail.gmail.com>
Message-ID: <897160440807011739p79023217se37e719c819bc296@mail.gmail.com>

2008/7/2 Dan Kegel <dank at kegel.com>:
> Can you write a conformance test that verifies this behavior?

Sorry, I don't know how to write a test yet. Maybe I will write a test later.

> Also, can you identify a bug in bugzilla this will fix?

Such as bug 4065, 10864, 14151.


From msclrhd at googlemail.com  Wed Jul  2 01:05:08 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Wed, 2 Jul 2008 07:05:08 +0100
Subject: winecfg.cpl: Add new control panel applet for winecfg
In-Reply-To: <486AC3C5.4000603@owenrudge.net>
References: <486A82DF.5060506@owenrudge.net>
	<22821af30807011227x471b8027u9fe570f219c2cdfd@mail.gmail.com>
	<8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net>
	<22821af30807011541j7008153apbf4d4ccf3d4af225@mail.gmail.com>
	<486AB3E7.5060908@owenrudge.net>
	<22821af30807011608i1f4c1625wba5b196e4332e00d@mail.gmail.com>
	<486ABA93.1080303@owenrudge.net>
	<22821af30807011637l68224121t6056e0e201bd5933@mail.gmail.com>
	<486AC3C5.4000603@owenrudge.net>
Message-ID: <3f4fd2640807012305h68804dc7hc0c6af16cb9abb47@mail.gmail.com>

2008/7/2 Owen Rudge <owen at owenrudge.net>:
> Well, the first part of the project was to get the shell namespace
> implementation of Control Panel working properly, which is now
> effectively complete.

Hi,

I just tested Cepstral SwiftTalker with latest git (see bug:
http://bugs.winehq.org/show_bug.cgi?id=12534) and I can't see the
options from the `control` program. You might want to get this and
other applets displaying/working before creating default Wine-specific
ones (e.g. like the one installed by Internet Explorer).


From hverbeet at gmail.com  Wed Jul  2 02:11:03 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Wed, 2 Jul 2008 09:11:03 +0200
Subject: [RESEND]Make wine_glGetString() return NULL on null gl context -
	Solves Bug 13599
In-Reply-To: <486A374B.6090808@veneto.com>
References: <486A374B.6090808@veneto.com>
Message-ID: <d658b69e0807020011n18b3d2d2id3374617a77a40e0@mail.gmail.com>

2008/7/1 Massimo Del Fedele <max at veneto.com>:
> +  if(NtCurrentTeb()->glContext == NULL)
> +    return NULL;
> +
Alexandre said on IRC that you should probably use
wglGetCurrentContext() there, rather than using NtCurrentTeb()
directly.


From huw at codeweavers.com  Wed Jul  2 04:26:20 2008
From: huw at codeweavers.com (Huw Davies)
Date: Wed, 2 Jul 2008 10:26:20 +0100
Subject: [Gdiplus 4/4] Implement GdipCloneImage
In-Reply-To: <1214962882.7763.13.camel@belthazor-saved>
References: <1214962882.7763.13.camel@belthazor-saved>
Message-ID: <20080702092620.GA29097@merlot.physics.ox.ac.uk>

On Tue, Jul 01, 2008 at 09:41:22PM -0400, Adam Petaccia wrote:
> ---
>  dlls/gdiplus/image.c       |   19 +++++++++++++++++--
>  dlls/gdiplus/tests/image.c |    6 ------
>  2 files changed, 17 insertions(+), 8 deletions(-)
> 
> diff --git a/dlls/gdiplus/image.c b/dlls/gdiplus/image.c
> index bf2ac35..59ea837 100644
> --- a/dlls/gdiplus/image.c
> +++ b/dlls/gdiplus/image.c
> @@ -244,9 +244,24 @@ GpStatus WINGDIPAPI GdipCloneImage(GpImage *image, GpImage **cloneImage)

> +    memcpy((*cloneImage)->picture, image->picture, sizeof(IPicture));
> +
> +    return Ok;
>  }
>  

You can't simply copy an interface ptr like this.

Huw.
-- 
Huw Davies
huw at codeweavers.com


From robertshearman at gmail.com  Wed Jul  2 04:46:51 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 2 Jul 2008 10:46:51 +0100
Subject: New valgrind warnings in rpcrt4/tests/server
In-Reply-To: <a71bd89a0807011806u31f3cc05u17eb8957fb98b812@mail.gmail.com>
References: <a71bd89a0807011806u31f3cc05u17eb8957fb98b812@mail.gmail.com>
Message-ID: <1096648c0807020246u6ac2ec5et347fdab6eb544dc3@mail.gmail.com>

2008/7/2 Dan Kegel <dank at kegel.com>:
> Hi Rob!
> Could you have a look at these fresh warnings in rpcrt4/tests/server?
> Thanks...

Hi Dan,

The following warning is caused by the generated code for
non-encapsulated unions not setting _StubMsg.MaxCount before calling
the relevant phase function. However, looking in detail at this bug
brings up a few other issues with the code which need to be fixed.

> http://kegel.com/wine/valgrind/logs-2008-07-01/vg-rpcrt4_server-diff.txt
>
> + Syscall param socketcall.send(msg) points to uninitialised byte(s)
...
> +    by  NdrSendReceive (ndr_clientserver.c:214)
> +    by  square_unencu (server_c.c:2467)
> +    by  union_tests (server.c:889)
> +    by  run_tests (server.c:1241)
> +    by  client (server.c:1260)
> +    by  func_server (server.c:1357)
> +    by  run_test (test.h:449)
> +    by  main (test.h:498)
> +  Address 0x7f01350c is 28 bytes inside a block of size 36 alloc'd
> +    at  notify_alloc (heap.c:191)
...
> +    by  NdrSendReceive (ndr_clientserver.c:214)
> +    by  square_unencu (server_c.c:2467)
> +    by  union_tests (server.c:889)
> +    by  run_tests (server.c:1241)
> +    by  client (server.c:1260)
> +    by  func_server (server.c:1357)
> +    by  run_test (test.h:449)
> +    by  main (test.h:498)
> +  Uninitialised value was created by a stack allocation
> +    at  square_unencu (server_c.c:2424)
> ...
> + Syscall param write(buf) points to uninitialised byte(s)
> +    at  (within /lib/ld-2.7.so)
> +    by  WriteFile (file.c:559)
...
> +    by  NdrSendReceive (ndr_clientserver.c:214)
> +    by  square_unencu (server_c.c:2467)
> +    by  union_tests (server.c:889)
> +    by  run_tests (server.c:1241)
> +    by  client (server.c:1275)
> +    by  func_server (server.c:1357)
> +    by  run_test (test.h:449)
> +    by  main (test.h:498)
> +  Address 0x7f013524 is 28 bytes inside a block of size 36 alloc'd
> +    at  notify_alloc (heap.c:191)
...
> +    by  NdrSendReceive (ndr_clientserver.c:214)
> +    by  square_unencu (server_c.c:2467)
> +    by  union_tests (server.c:889)
> +    by  run_tests (server.c:1241)
> +    by  client (server.c:1275)
> +    by  func_server (server.c:1357)
> +    by  run_test (test.h:449)
> +    by  main (test.h:498)
> +  Uninitialised value was created by a stack allocation
> +    at  square_unencu (server_c.c:2424)
> ...

The following warning is caused simply by a missing call to
_StubMsg.pfnFree in the generated code:

> + 24 bytes in 2 blocks are definitely lost
> +    at  malloc (vg_replace_malloc.c:207)
> +    by  MIDL_user_allocate (server.c:53)
> +    by  s_get_s123 (server.c:538)
> +    by  IServer_get_s123 (server_s.c:4545)
> +    by  process_request_packet (rpc_server.c:290)
> +    by  RPCRT4_process_packet (rpc_server.c:345)
> +    by  RPCRT4_worker_thread (rpc_server.c:362)
> +    by  worker_thread_proc (threadpool.c:113)
> +    by  ??? (thread.c:128)
> +    by  call_thread_func (thread.c:383)
> +    by  start_thread (thread.c:443)
> +    by  start_thread (in /lib/tls/i686/cmov/libpthread-2.7.so)
> +    by  clone (in /lib/tls/i686/cmov/libc-2.7.so)
>

-- 
Rob Shearman


From robertshearman at gmail.com  Wed Jul  2 04:52:11 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 2 Jul 2008 10:52:11 +0100
Subject: rpcrt4: Fix a test that fails in win2k3
In-Reply-To: <22821af30807012114q7781f705n9f7d4b139befbcf5@mail.gmail.com>
References: <22821af30807012114q7781f705n9f7d4b139befbcf5@mail.gmail.com>
Message-ID: <1096648c0807020252i446f1ff6hbc69d3eda89d68af@mail.gmail.com>

2008/7/2 James Hawkins <jhawkins at codeweavers.com>:
> diff --git a/dlls/rpcrt4/tests/ndr_marshall.c b/dlls/rpcrt4/tests/ndr_marshall.c
> index fa19674..abd06dc 100644
> --- a/dlls/rpcrt4/tests/ndr_marshall.c
> +++ b/dlls/rpcrt4/tests/ndr_marshall.c
> @@ -1848,7 +1848,9 @@ static void test_ndr_buffer(void)
>      ok(ret == StubMsg.Buffer, "NdrGetBuffer should have returned the same value as StubMsg.Buffer instead of %p\n", ret);
>      ok(RpcMessage.Handle != NULL, "RpcMessage.Handle should not have been NULL\n");
>      ok(RpcMessage.Buffer != NULL, "RpcMessage.Buffer should not have been NULL\n");
> -    ok(RpcMessage.BufferLength == 10, "RpcMessage.BufferLength should have been 10 instead of %d\n", RpcMessage.BufferLength);
> +    ok(RpcMessage.BufferLength == 10 ||
> +       RpcMessage.BufferLength == 12, /* win2k3 */
> +       "RpcMessage.BufferLength should have been 10 or 12 instead of %d\n", RpcMessage.BufferLength);
>      ok(RpcMessage.RpcFlags == 0, "RpcMessage.RpcFlags should have been 0x0 instead of 0x%lx\n", RpcMessage.RpcFlags);
>      ok(StubMsg.Buffer != NULL, "Buffer should not have been NULL\n");
>      ok(!StubMsg.BufferStart, "BufferStart should have been NULL instead of %p\n", StubMsg.BufferStart);

I think the behaviour on win2k3 should be marked as broken, since I
can't see any reason why it would need to return more bytes than was
requested.

-- 
Rob Shearman


From hans at meelstraat.net  Wed Jul  2 04:59:14 2008
From: hans at meelstraat.net (Hans Leidekker)
Date: Wed, 2 Jul 2008 11:59:14 +0200
Subject: Thoughts on implementation of winhttp.dll
In-Reply-To: <486A88A6.1040905@zacbrown.org>
References: <486A88A6.1040905@zacbrown.org>
Message-ID: <200807021159.14779.hans@meelstraat.net>

On Tuesday 01 July 2008 21:42:30 Zac Brown wrote:

> Does anyone have thoughts on implementing parts of winhttp in terms of
> wininet? The primary issue that prevents entirely implementing winhttp in
> terms of wininet is that there is no direct Win32 API for fetching an SSL
> certificate in winhttp.

Would InternetQueryOption(INTERNET_OPTION_SECURITY_CERTIFICATE) not do
what you want? There are other problems to be solved though, filtered
callbacks and authentication come to mind.

This topic has been discussed before and I even wrote a proof of concept
patch, all of which can be found in the list archives.

 -Hans



From robertshearman at gmail.com  Wed Jul  2 05:01:21 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 2 Jul 2008 11:01:21 +0100
Subject: Fallback from RPC_C_AUTHN_GSS_NEGOTIATE to RPC_C_AUTHN_WINNT if
	no SPNEGO package available
In-Reply-To: <81a474f0807011110k66f669afp77ce5d42d7c08839@mail.gmail.com>
References: <81a474f0807011110k66f669afp77ce5d42d7c08839@mail.gmail.com>
Message-ID: <1096648c0807020301l3940e7a5g7627ee8f878ae824@mail.gmail.com>

2008/7/1 Stefan Kuhr <winesku at googlemail.com>:
> Hello everyone,

Hi Stefan,

Thank you for your contribution.

> please find attached a patch for Bug #14222 (which I just submitted to
> bugzilla).  I think that this patch is not a hack, because even if
> someday a Negotiate package is available in WINE, this code won't
> break the Negotiate package.

That may be so, but it won't work for servers that only register the
RPC_C_AUTHN_GSS_NEGOTIATE authentication scheme. So the patch should
include a FIXME to warn users about this. Otherwise, the patch is
fine.

> Oh, and there was no rpcrt4 component to
> be selected for this bug in bugzilla, you might consider to add one.

Currently, we are using the "ole" component for RPC bugs, including
rpcrt4 and widl, but I agree that this isn't clear. I think we should
probably split the ole component up into rpc (which would be a
container for rpcrt4 & widl issues), ole32 and oleaut32.

> Please let me know if I did something obvious wrong since this is the
> first time I submit a patch to WINE.

-- 
Rob Shearman


From robertshearman at gmail.com  Wed Jul  2 05:04:07 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 2 Jul 2008 11:04:07 +0100
Subject: ntdll: suppress Valgrind warnings in NtFsControlFile (take 3)
In-Reply-To: <a71bd89a0807010331p7f23022ej8bef6f1e6cfd505c@mail.gmail.com>
References: <a71bd89a0807010331p7f23022ej8bef6f1e6cfd505c@mail.gmail.com>
Message-ID: <1096648c0807020304n7b4bcfdfyb5279d182b58fc5c@mail.gmail.com>

2008/7/1 Dan Kegel <dank at kegel.com>:
> +    /* Alexandre says pretty much all ioctls potentially involve holey structures,

s/Alexandre says//

Also, while you're changing the comment, "pretty much" and
"potentially" duplicate each other in the uncertainty, so one should
be removed.

-- 
Rob Shearman


From kai.blin at gmail.com  Wed Jul  2 05:41:57 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Wed, 2 Jul 2008 12:41:57 +0200
Subject: rpcrt4: Fix a test that fails in win2k3
In-Reply-To: <1096648c0807020252i446f1ff6hbc69d3eda89d68af@mail.gmail.com>
References: <22821af30807012114q7781f705n9f7d4b139befbcf5@mail.gmail.com>
	<1096648c0807020252i446f1ff6hbc69d3eda89d68af@mail.gmail.com>
Message-ID: <200807021242.02846.kai.blin@gmail.com>

On Wednesday 02 July 2008 11:52:11 Rob Shearman wrote:

> I think the behaviour on win2k3 should be marked as broken, since I
> can't see any reason why it would need to return more bytes than was
> requested.

Hm, I seem to recall a Samba RPC fix doing the same thing. This seems to be a 
byte alignment thing. If you're interested, I can see if I can dig up the 
appropriate discussion on samba-technical.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080702/5d04ecb6/attachment.pgp 

From julliard at winehq.org  Wed Jul  2 06:42:31 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 02 Jul 2008 13:42:31 +0200
Subject: Dylan Smith : richedit: Added missing DestroyWindow in a test.
In-Reply-To: <5c6ee3b70807012201m2f887c8dlbe430a25a856adf8@mail.gmail.com>
	(Dylan Smith's message of "Wed, 2 Jul 2008 01:01:24 -0400")
References: <E1KDftg-0003Li-3f@wine.codeweavers.com>
	<22821af30807011024l6edca98dob804c5e4ab72c204@mail.gmail.com>
	<5c6ee3b70807012152y7e12b978k6e65233e1e689379@mail.gmail.com>
	<5c6ee3b70807012201m2f887c8dlbe430a25a856adf8@mail.gmail.com>
Message-ID: <8763ro4imw.fsf@wine.dyndns.org>

"Dylan Smith" <dylan.ah.smith at gmail.com> writes:

> Sorry for posting again, but I just noticed that I already sent the
> patch that fixes the tests, and you suggested either _fix_ or revert
> the patch.  Well, could you try applying the patch from
> http://www.winehq.org/pipermail/wine-patches/2008-June/056829.html and
> see if it fixes this problem?  I tested it in Windows XP, and in Wine,
> and in Wine with valgrind.

The patch doesn't apply cleanly, please resend it.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Jul  2 06:49:47 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 02 Jul 2008 13:49:47 +0200
Subject: winecfg.cpl: Add new control panel applet for winecfg
In-Reply-To: <486AC3C5.4000603@owenrudge.net> (Owen Rudge's message of "Wed,
	02 Jul 2008 00:54:45 +0100")
References: <486A82DF.5060506@owenrudge.net>
	<22821af30807011227x471b8027u9fe570f219c2cdfd@mail.gmail.com>
	<8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net>
	<22821af30807011541j7008153apbf4d4ccf3d4af225@mail.gmail.com>
	<486AB3E7.5060908@owenrudge.net>
	<22821af30807011608i1f4c1625wba5b196e4332e00d@mail.gmail.com>
	<486ABA93.1080303@owenrudge.net>
	<22821af30807011637l68224121t6056e0e201bd5933@mail.gmail.com>
	<486AC3C5.4000603@owenrudge.net>
Message-ID: <871w2c4ias.fsf@wine.dyndns.org>

Owen Rudge <owen at owenrudge.net> writes:

> I personally believe this control panel applet (which also adds icons 
> for the Registry Editor and Task Manager, two other key utilities, which 
> would be useful to have easy access for) is a useful stepping-stone, as 
> it were.

The control panel is not supposed to be a general application launcher,
regedit and taskmgr don't belong there.

-- 
Alexandre Julliard
julliard at winehq.org


From winesku at googlemail.com  Wed Jul  2 06:51:51 2008
From: winesku at googlemail.com (Stefan Kuhr)
Date: Wed, 2 Jul 2008 13:51:51 +0200
Subject: Fallback from RPC_C_AUTHN_GSS_NEGOTIATE to RPC_C_AUTHN_WINNT if
	no SPNEGO package available
In-Reply-To: <1096648c0807020301l3940e7a5g7627ee8f878ae824@mail.gmail.com>
References: <81a474f0807011110k66f669afp77ce5d42d7c08839@mail.gmail.com>
	<1096648c0807020301l3940e7a5g7627ee8f878ae824@mail.gmail.com>
Message-ID: <81a474f0807020451s6ab83cf0he24b84ea6b6bf6c6@mail.gmail.com>

Hello rob,

On 7/2/08, Rob Shearman <robertshearman at gmail.com> wrote:
> <snip>
> That may be so, but it won't work for servers that only register the
> RPC_C_AUTHN_GSS_NEGOTIATE authentication scheme. So the patch should
> include a FIXME to warn users about this. Otherwise, the patch is
> fine.

Good to hear you think the patch could be accepted with a minor
modification. However, with "servers that only register the
RPC_C_AUTHN_GSS_NEGOTIATE authentication scheme", do you refer to an
RPC server that makes a single call to RpcServerRegisterAuthInfo(..,
RPC_C_AUTHN_GSS_NEGOTIATE,...)? If so, I assume you are wrong: I just
made a test between two XP boxes in a non-domain environment and the
server did a single call to RpcServerRegisterAuthInfo with
RPC_C_AUTHN_GSS_NEGOTIATE. The client successully invoked an RPC on
the server after having called RpcBindingSetAuthInfoEx with
RPC_C_AUTHN_GSS_NEGOTIATE. However, if I change the server's code so
it makes a single call to RpcServerRegisterAuthInfo with
RPC_C_AUTHN_GSS_KERBEROS, the client fails with 1747
(RPC_S_UNKNOWN_AUTHN_SERVICE), but not in the call to
RpcBindingSetAuthInfo but instead as the return value from the RPC
that it calls immediately after RpcBindingSetAuthInfo.

So I think, it is not the responsibility of RpcBindingSetAuthInfoEx at
this point to deal with a server only accepting Kerberos or Negotiate.
Without knowing really too much how Windows actually implements this,
my guts tell me that this is then the server's responsibility to
reject a connection during the SSPI handshake which in WINE's code
immediately follows the code that my patch would insert into
RpcBindingSetAuthInfoEx.

What do you think?

Cheers,

-- 
Stefan


From dank at kegel.com  Wed Jul  2 06:52:35 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 2 Jul 2008 04:52:35 -0700
Subject: Splitting up ole component
Message-ID: <a71bd89a0807020452n12b1088free4da3a5584079ae@mail.gmail.com>

Rob wrote:

>> Oh, and there was no rpcrt4 component to
>> be selected for this bug in bugzilla, you might consider to add one.
>
>Currently, we are using the "ole" component for RPC bugs, including
>rpcrt4 and widl, but I agree that this isn't clear. I think we should
>probably split the ole component up into rpc (which would be a
>container for rpcrt4 & widl issues), ole32 and oleaut32.

I've added the rpc component, been wanting to do that for a while.

As for the other proposed change: the description for ole is currently

OLE, Active X (
dlls/{ole32,oleacc,oleaut32,olecli32,oledlg,olepro32,olesvr32,olethk32,stdole2.tlb,stdole32.tlb}/
)

That's a lot more than just ole32 and oleaut32.  Can you propose
descriptions for the ole* components after the change?
- Dan


From owen at owenrudge.net  Wed Jul  2 07:05:06 2008
From: owen at owenrudge.net (Owen Rudge)
Date: Wed, 2 Jul 2008 13:05:06 +0100
Subject: winecfg.cpl: Add new control panel applet for winecfg
References: <486A82DF.5060506@owenrudge.net>
	<22821af30807011227x471b8027u9fe570f219c2cdfd@mail.gmail.com>
	<8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net>
	<22821af30807011541j7008153apbf4d4ccf3d4af225@mail.gmail.com>
	<486AB3E7.5060908@owenrudge.net>
	<22821af30807011608i1f4c1625wba5b196e4332e00d@mail.gmail.com>
	<486ABA93.1080303@owenrudge.net>
	<22821af30807011637l68224121t6056e0e201bd5933@mail.gmail.com>
	<486AC3C5.4000603@owenrudge.net>
	<3f4fd2640807012305h68804dc7hc0c6af16cb9abb47@mail.gmail.com>
Message-ID: <B1BF160C92C94DB09B18CD535481CEB3@lan.owenrudge.net>

Hi Reece,

> I just tested Cepstral SwiftTalker with latest git (see bug:
> http://bugs.winehq.org/show_bug.cgi?id=12534) and I can't see the
> options from the `control` program. You might want to get this and
> other applets displaying/working before creating default Wine-specific
> ones (e.g. like the one installed by Internet Explorer).

I'll look into that, then. I know that the shell namespace control panel 
does check the registry for entries (could you try using a program like the 
ReactOS Explorer to browse the control panel and see if it shows up there?), 
but I'm not sure if the standalone control.exe does. Ideally, the standalone 
control.exe would be replaced with a stub that launches the Explorer, but of 
course Wine doesn't have a built-in Explorer yet.

I'll do some testing with this app later and see what the problem is.

Cheers,

-- 
Owen Rudge
http://www.owenrudge.net/ 



From alexd4 at inbox.lv  Wed Jul  2 07:37:50 2008
From: alexd4 at inbox.lv (Alexander Dorofeyev)
Date: Wed, 02 Jul 2008 15:37:50 +0300
Subject: [quartz/tests] Make tests run on everything lower then Vista
	(Try 2)
In-Reply-To: <486B6E05.30508@gmail.com>
References: <486B6E05.30508@gmail.com>
Message-ID: <486B769E.6060206@inbox.lv>

Paul Vriens wrote:
> Hi,
>
> RegDeleteTreeW is only available on Vista. (Were these tests run on 
> Windows to
> verify?).
Yes most of it was tested on XP, except this final registry cleanup 
thing, sorry my mistake.  Also it ran without errors with previous 
version of your patch on XP here.
>
> This version simply replaces the RegDeleteTree by a RegDeleteKey 
> (which is
> sufficient as there is only one value underneath the key).
This is not necessarily the case, Filtermapper's Register... methods add 
values and create subkeys in that key. I think it will have at least 
"Pins" subkey in the end. It was causing problms, until I found what I 
thought is a good safe and easy solution (RegDeleteTree). To ensure 
everything is removed, and especially if some Unregister.. calls fail 
for whatever reason, it really is preferable to do a recursive delete. 
If it takes copypasting a function then so be it. I think your previous 
patch was better, but maybe somebody noticed a problem with it, I don't 
know.


From zgs at seas.upenn.edu  Wed Jul  2 07:42:50 2008
From: zgs at seas.upenn.edu (Zachary Goldberg)
Date: Wed, 2 Jul 2008 08:42:50 -0400
Subject: Tests and Valgrinding
Message-ID: <b050a5e70807020542o17d76e21uac285f6a7223cfa1@mail.gmail.com>

Hello!

I've been watching wine a bit recently and there's been a lot of
activity (code wise) in new features (backpressure from the freeze I'm
sure) and lots and lots of test fixes.  I know we have test.winehq.org
which is fantastic, but it doesn't give a very good feel for progress
that all of these recent patches have been making.  Sure we can look
at individual days and see how things go but there exists no real
aggregate over time to see how the test suite is doing as a whole on
all platforms.  Do we have any such metrics/graphs?  I think those
would be very interesting and perhaps motivating.  (Perhaps I should
work on that to add to the last post in WWN's?  Bugs / Appdb / Test
Suite)

Also, Dan Kegel has been extraordinarily diligent in valgrinding of
late (/applause) and I just wanted to ask if we're doing anything to
support him?  Once he posts to the list it seems that its the author's
(of the breaking patch) responsibility to fix the problem.  Some
people have been very diligent in that (again, /applause) but I think
some of Dan's posts have been left unanswered.   I know Dan mentioned
perhaps making Valgrind-passing a requirement (along with not breaking
tests) for being committed.  I think perhaps we should take a look at
this and seriously consider implementing it.

--Zach


From hzhrong at gmail.com  Wed Jul  2 07:59:49 2008
From: hzhrong at gmail.com (Huang, Zhangrong)
Date: Wed, 2 Jul 2008 20:59:49 +0800
Subject: gdi32: Implement automatic font substitution
In-Reply-To: <897160440807011739p79023217se37e719c819bc296@mail.gmail.com>
References: <a71bd89a0807011211w296aef7dy528fde025dc832e5@mail.gmail.com>
	<897160440807011739p79023217se37e719c819bc296@mail.gmail.com>
Message-ID: <b4cc5a3d0807020559r1e695cdexd14c9a3c2c05099a@mail.gmail.com>

Hi,
>     * Append all fonts on child_list so that if a character is not available in the font,
>     * other fonts will be automatically used. This is how Windows does to get a CJK character
>     * when a latin font is specified.

That's not correct, actually Windows does this by using FontLink
registry, so does wine now. Your patch seems to break FontLink.
"Automatic font substitution" often means wine will choose the CJK
replacement font which user doesn't prefer to.

On CJK env, if a latin font doesn't not have a FontLink, it will
fallback to use the FontLink of "Microsoft Sans Serif", so user can
set preferred font there.

2008/7/2 Liu Qishuai <lqs.buaa at gmail.com>:
> 2008/7/2 Dan Kegel <dank at kegel.com>:
>> Can you write a conformance test that verifies this behavior?
>
> Sorry, I don't know how to write a test yet. Maybe I will write a test later.
>
>> Also, can you identify a bug in bugzilla this will fix?
>
> Such as bug 4065, 10864, 14151.

Please set the following registry key, it should fix those bugs:

[Software\\Microsoft\\Windows
NT\\CurrentVersion\\FontLink\\SystemLink] 1208451304
"Microsoft Sans
Serif"=str(7):"simsun.ttc,SimSun\0gulim.ttc,Gulim\0msgothic.ttc,MS UI
Gothic\0mingliu.ttc,PMingLiU\0"
"Tahoma"=str(7):"simsun.ttc,SimSun\0gulim.ttc,Gulim\0msgothic.ttc,MS
UI Gothic\0mingliu.ttc,PMingLiU\0"

Maybe we need a patch to set up the default FontLink of "Microsoft
Sans Serif" and "Tahoma" now, since FontLink works fine on WIne.

-- 
$ apt-get moo
 (__)
 (oo)
 /------\/
 / | ||
 * /\---/\
 ~~ ~~
...."Have you mooed today?"...


From paul.vriens.wine at gmail.com  Wed Jul  2 08:02:48 2008
From: paul.vriens.wine at gmail.com (Paul Vriens)
Date: Wed, 02 Jul 2008 15:02:48 +0200
Subject: [quartz/tests] Make tests run on everything lower then Vista
	(Try 2)
In-Reply-To: <486B769E.6060206@inbox.lv>
References: <486B6E05.30508@gmail.com> <486B769E.6060206@inbox.lv>
Message-ID: <486B7C78.9030300@gmail.com>

Alexander Dorofeyev wrote:
> Paul Vriens wrote:
>> Hi,
>>
>> RegDeleteTreeW is only available on Vista. (Were these tests run on 
>> Windows to
>> verify?).
> Yes most of it was tested on XP, except this final registry cleanup 
> thing, sorry my mistake.  Also it ran without errors with previous 
> version of your patch on XP here.
>> This version simply replaces the RegDeleteTree by a RegDeleteKey 
>> (which is
>> sufficient as there is only one value underneath the key).
> This is not necessarily the case, Filtermapper's Register... methods add 
> values and create subkeys in that key. I think it will have at least 
> "Pins" subkey in the end. It was causing problms, until I found what I 
> thought is a good safe and easy solution (RegDeleteTree). To ensure 
> everything is removed, and especially if some Unregister.. calls fail 
> for whatever reason, it really is preferable to do a recursive delete. 
> If it takes copypasting a function then so be it. I think your previous 
> patch was better, but maybe somebody noticed a problem with it, I don't 
> know.
> 
> 
> 
I've checked this on W2K3 and WinXP-SP3 and it only creates that one registry 
key with one value (Default) underneath. There is another key created which 
isn't deleted:

HKEY_CURRENT_USER\Software\Microsoft\ActiveMovie\devenum\{guid}

This key has 4 values.

This key is overwritten when a new registration occurs.

-- 
Cheers,

Paul.


From austinenglish at gmail.com  Wed Jul  2 08:03:12 2008
From: austinenglish at gmail.com (Austin English)
Date: Wed, 2 Jul 2008 08:03:12 -0500
Subject: Tests and Valgrinding
In-Reply-To: <b050a5e70807020542o17d76e21uac285f6a7223cfa1@mail.gmail.com>
References: <b050a5e70807020542o17d76e21uac285f6a7223cfa1@mail.gmail.com>
Message-ID: <b6bb06270807020603q53890c1asaf2124c282e5e344@mail.gmail.com>

On Wed, Jul 2, 2008 at 7:42 AM, Zachary Goldberg <zgs at seas.upenn.edu> wrote:
> Hello!
>
> I've been watching wine a bit recently and there's been a lot of
> activity (code wise) in new features (backpressure from the freeze I'm
> sure) and lots and lots of test fixes.  I know we have test.winehq.org
> which is fantastic, but it doesn't give a very good feel for progress
> that all of these recent patches have been making.  Sure we can look
> at individual days and see how things go but there exists no real
> aggregate over time to see how the test suite is doing as a whole on
> all platforms.  Do we have any such metrics/graphs?  I think those
> would be very interesting and perhaps motivating.
None that I know of currently, though it would be very interesting.

> (Perhaps I should work on that to add to the last post in WWN's?  Bugs / Appdb / Test Suite)

Would be a great idea!

> Also, Dan Kegel has been extraordinarily diligent in valgrinding of
> late (/applause) and I just wanted to ask if we're doing anything to support him?

+1

> Once he posts to the list it seems that its the author's
> (of the breaking patch) responsibility to fix the problem.  Some
> people have been very diligent in that (again, /applause) but I think
> some of Dan's posts have been left unanswered.   I know Dan mentioned
> perhaps making Valgrind-passing a requirement (along with not breaking
> tests) for being committed.  I think perhaps we should take a look at
> this and seriously consider implementing it.

Adding a Valgrind requirement wouldn't be too difficult, but would
depend on Alexandre. As for testing requirements, he already tests for
breakage on Wine, but depending on him to test Windows is a bit much
IMHO. There are so many versions/configurations that need to be tested
that's it's obviously too much for one person. Before sending in
patches, one should test their own patches on Windows if possible, and
if one sees a patch on -patches that breaks Windows/Wine, it should be
reported on -devel *before* it's applied. Otherwise, once it's seen on
test.winehq.org, file a bug or report it on -devel.

-Austin


From robertshearman at gmail.com  Wed Jul  2 08:17:10 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 2 Jul 2008 14:17:10 +0100
Subject: Splitting up ole component
In-Reply-To: <a71bd89a0807020452n12b1088free4da3a5584079ae@mail.gmail.com>
References: <a71bd89a0807020452n12b1088free4da3a5584079ae@mail.gmail.com>
Message-ID: <1096648c0807020617t602411f2y6ebbc9cfe5168132@mail.gmail.com>

2008/7/2 Dan Kegel <dank at kegel.com>:
> Rob wrote:
>>> Oh, and there was no rpcrt4 component to
>>> be selected for this bug in bugzilla, you might consider to add one.
>>
>>Currently, we are using the "ole" component for RPC bugs, including
>>rpcrt4 and widl, but I agree that this isn't clear. I think we should
>>probably split the ole component up into rpc (which would be a
>>container for rpcrt4 & widl issues), ole32 and oleaut32.
>
> I've added the rpc component, been wanting to do that for a while.
>
> As for the other proposed change: the description for ole is currently
>
> OLE, Active X (
> dlls/{ole32,oleacc,oleaut32,olecli32,oledlg,olepro32,olesvr32,olethk32,stdole2.tlb,stdole32.tlb}/
> )
>
> That's a lot more than just ole32 and oleaut32.  Can you propose
> descriptions for the ole* components after the change?

How about these:

ole32:
OLE (dlls/{ole32,oleacc,olecli32,oledlg,olepro32,olesvr32,olethk32})
oleaut32:
OLE Automation (dlls/{oleaut32,stdole2.tlb,stdole32.tlb})
rpc:
DCE/RPC (dlls/rpcrt4, tools/widl and widl-generated files)

-- 
Rob Shearman


From robertshearman at gmail.com  Wed Jul  2 08:23:31 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 2 Jul 2008 14:23:31 +0100
Subject: rpcrt4: Fix a test that fails in win2k3
In-Reply-To: <200807021242.02846.kai.blin@gmail.com>
References: <22821af30807012114q7781f705n9f7d4b139befbcf5@mail.gmail.com>
	<1096648c0807020252i446f1ff6hbc69d3eda89d68af@mail.gmail.com>
	<200807021242.02846.kai.blin@gmail.com>
Message-ID: <1096648c0807020623l48e288a3n1d8972276a1a55e6@mail.gmail.com>

2008/7/2 Kai Blin <kai.blin at gmail.com>:
> On Wednesday 02 July 2008 11:52:11 Rob Shearman wrote:
>
>> I think the behaviour on win2k3 should be marked as broken, since I
>> can't see any reason why it would need to return more bytes than was
>> requested.
>
> Hm, I seem to recall a Samba RPC fix doing the same thing. This seems to be a
> byte alignment thing. If you're interested, I can see if I can dig up the
> appropriate discussion on samba-technical.

Sure, although I suspect it will be related to packets with
authentication, rather than without which is the case here.

In any case, alignment of the end of the packet should be a task
handled by the RPC layer, not the NDR layer.

-- 
Rob Shearman


From alexd4 at inbox.lv  Wed Jul  2 08:21:23 2008
From: alexd4 at inbox.lv (Alexander Dorofeyev)
Date: Wed, 02 Jul 2008 16:21:23 +0300
Subject: [quartz/tests] Make tests run on everything lower then Vista
	(Try 2)
In-Reply-To: <486B7C78.9030300@gmail.com>
References: <486B6E05.30508@gmail.com> <486B769E.6060206@inbox.lv>
	<486B7C78.9030300@gmail.com>
Message-ID: <486B80D3.9070909@inbox.lv>

Paul Vriens wrote:
> I've checked this on W2K3 and WinXP-SP3 and it only creates that one 
> registry
> key with one value (Default) underneath. There is another key created which 
> isn't deleted:
>
> HKEY_CURRENT_USER\Software\Microsoft\ActiveMovie\devenum\{guid}
>
> This key has 4 values.
>
> This key is overwritten when a new registration occurs
Hmm, during the course of the test there should definitely be keys 
created in HKCR\CLSID\{guid} by filtermapper and they were during my 
tests. I guess they are removed by Unregister... calls (can be checked 
by commenting them). On a second thought, I guess the UnregisterFilter 
also should remove Pins subkey, probably that's why there's nothing left 
there. Can't recheck myself right now, unfortunately.  Then deletekey vs 
deletetree only matters when something in unregistration unexpectedly 
fails, but still.

I'll look into other keys, I guess it's some leftovers from 
filtermapper2 stuff and more cleanup must be added.


From dank at kegel.com  Wed Jul  2 08:39:09 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 2 Jul 2008 06:39:09 -0700
Subject: Splitting up ole component
In-Reply-To: <1096648c0807020617t602411f2y6ebbc9cfe5168132@mail.gmail.com>
References: <a71bd89a0807020452n12b1088free4da3a5584079ae@mail.gmail.com>
	<1096648c0807020617t602411f2y6ebbc9cfe5168132@mail.gmail.com>
Message-ID: <a71bd89a0807020639q64d3d026i1a242d2bab7fa5e4@mail.gmail.com>

On Wed, Jul 2, 2008 at 6:17 AM, Rob Shearman <robertshearman at gmail.com> wrote:
> How about these:
>
> ole32:
> OLE (dlls/{ole32,oleacc,olecli32,oledlg,olepro32,olesvr32,olethk32})
> oleaut32:
> OLE Automation (dlls/{oleaut32,stdole2.tlb,stdole32.tlb})
> rpc:
> DCE/RPC (dlls/rpcrt4, tools/widl and widl-generated files)

Done.  If they look ok now, we can start moving bugs from
ole to one of these three new categories; once they're
all moved, we can delete the old ole category.


From lqs.buaa at gmail.com  Wed Jul  2 09:00:46 2008
From: lqs.buaa at gmail.com (Liu Qishuai)
Date: Wed, 2 Jul 2008 22:00:46 +0800
Subject: gdi32: Implement automatic font substitution
In-Reply-To: <b4cc5a3d0807020559r1e695cdexd14c9a3c2c05099a@mail.gmail.com>
References: <a71bd89a0807011211w296aef7dy528fde025dc832e5@mail.gmail.com>
	<897160440807011739p79023217se37e719c819bc296@mail.gmail.com>
	<b4cc5a3d0807020559r1e695cdexd14c9a3c2c05099a@mail.gmail.com>
Message-ID: <897160440807020700o3ff49ea9q780989d3ce7f65f1@mail.gmail.com>

No.

1. In Windows XP, I deleted the FontLink register key and rebooted,
and the Chinese characters are still displaying correctly.

2. I moved simsun.ttc (The default font in Simplified Chinese) to
another directory and rebooted. Windows XP automatically uses
simhei.ttf (another Chinese font) to display Chinese characters. There
is no register key for this font.



2008/7/2 Huang, Zhangrong <hzhrong at gmail.com>:
> Hi,
>>     * Append all fonts on child_list so that if a character is not available in the font,
>>     * other fonts will be automatically used. This is how Windows does to get a CJK character
>>     * when a latin font is specified.
>
> That's not correct, actually Windows does this by using FontLink
> registry, so does wine now. Your patch seems to break FontLink.
> "Automatic font substitution" often means wine will choose the CJK
> replacement font which user doesn't prefer to.
>
> On CJK env, if a latin font doesn't not have a FontLink, it will
> fallback to use the FontLink of "Microsoft Sans Serif", so user can
> set preferred font there.
>
> 2008/7/2 Liu Qishuai <lqs.buaa at gmail.com>:
>> 2008/7/2 Dan Kegel <dank at kegel.com>:
>>> Can you write a conformance test that verifies this behavior?
>>
>> Sorry, I don't know how to write a test yet. Maybe I will write a test later.
>>
>>> Also, can you identify a bug in bugzilla this will fix?
>>
>> Such as bug 4065, 10864, 14151.
>
> Please set the following registry key, it should fix those bugs:
>
> [Software\\Microsoft\\Windows
> NT\\CurrentVersion\\FontLink\\SystemLink] 1208451304
> "Microsoft Sans
> Serif"=str(7):"simsun.ttc,SimSun\0gulim.ttc,Gulim\0msgothic.ttc,MS UI
> Gothic\0mingliu.ttc,PMingLiU\0"
> "Tahoma"=str(7):"simsun.ttc,SimSun\0gulim.ttc,Gulim\0msgothic.ttc,MS
> UI Gothic\0mingliu.ttc,PMingLiU\0"
>
> Maybe we need a patch to set up the default FontLink of "Microsoft
> Sans Serif" and "Tahoma" now, since FontLink works fine on WIne.
>
> --
> $ apt-get moo
>  (__)
>  (oo)
>  /------\/
>  / | ||
>  * /\---/\
>  ~~ ~~
> ...."Have you mooed today?"...
>


From dank at kegel.com  Wed Jul  2 09:40:29 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 2 Jul 2008 07:40:29 -0700
Subject: New valgrind warnings in msi/db
Message-ID: <a71bd89a0807020740y3af850ffmee5385de2fe2fdf5@mail.gmail.com>

Hi James,
could you have a look at yet more fresh valgrind warnings, triggered by
http://source.winehq.org/git/wine.git/?a=commit;h=d9ac95be5bb51de2293326920c2eb4509834ff93
?

You might want to invest in a copy of Valgrind yourself sometime.
I can get you a 10% off discount :-)

http://kegel.com/wine/valgrind/logs-2008-07-02/vg-msi_db-diff.txt

+ Conditional jump or move depends on uninitialised value(s)
+    at  msihandle2msiinfo (handle.c:161)
+    by  MsiViewExecute (msiquery.c:467)
+    by  test_storages_table (db.c:6058)
+    by  func_db (db.c:6154)
+    by  run_test (test.h:449)
+    by  main (test.h:498)
+  Uninitialised value was created by a stack allocation
+    at  test_storages_table (db.c:6000)
...
+ Use of uninitialised value of size 4
+    at  MsiCloseHandle (handle.c:290)
+    by  test_storages_table (db.c:6112)
+    by  func_db (db.c:6154)
+    by  run_test (test.h:449)
+    by  main (test.h:498)
+  Uninitialised value was created by a stack allocation
+    at  test_storages_table (db.c:6000)
...
+ 8 bytes in 1 blocks are definitely lost
+    at  notify_alloc (heap.c:191)
+    by  RtlReAllocateHeap (heap.c:1428)
+    by  msi_realloc (msipriv.h:962)
+    by  msi_update_table_columns (table.c:1065)
+    by  msi_table_load_transform (table.c:2531)
+    by  msi_table_apply_transform (table.c:2653)
+    by  MSI_DatabaseApplyTransformW (msiquery.c:727)
+    by  MsiDatabaseApplyTransformW (msiquery.c:756)
+    by  MsiDatabaseApplyTransformA (msiquery.c:773)
+    by  test_try_transform (db.c:2431)
+    by  func_db (db.c:6133)
+    by  run_test (test.h:449)
+    by  main (test.h:498)


From hzhrong at gmail.com  Wed Jul  2 09:56:03 2008
From: hzhrong at gmail.com (Huang, Zhangrong)
Date: Wed, 2 Jul 2008 22:56:03 +0800
Subject: gdi32: Implement automatic font substitution
In-Reply-To: <897160440807020700o3ff49ea9q780989d3ce7f65f1@mail.gmail.com>
References: <a71bd89a0807011211w296aef7dy528fde025dc832e5@mail.gmail.com>
	<897160440807011739p79023217se37e719c819bc296@mail.gmail.com>
	<b4cc5a3d0807020559r1e695cdexd14c9a3c2c05099a@mail.gmail.com>
	<897160440807020700o3ff49ea9q780989d3ce7f65f1@mail.gmail.com>
Message-ID: <b4cc5a3d0807020756j5101e31ax499a1494bd2df829@mail.gmail.com>

Hi,

2008/7/2 Liu Qishuai <lqs.buaa at gmail.com>:
> No.
>
> 1. In Windows XP, I deleted the FontLink register key and rebooted,
> and the Chinese characters are still displaying correctly.

I guess gdi32.dll has hard-coded the default FontLink registry, of
course no prove.

>
> 2. I moved simsun.ttc (The default font in Simplified Chinese) to
> another directory and rebooted. Windows XP automatically uses
> simhei.ttf (another Chinese font) to display Chinese characters. There
> is no register key for this font.

This doesn't prove anything, creating a non-existent font will return
mostly related font.

On Japanese Windows, if user select a Latin font in notepad,  CJK
chars will display incorrect.
And I have a Simplified Chinese Windows XP box, which also displays
CJK chars as squares, I have no idea what's wrong.

-- 
$ apt-get moo
 (__)
 (oo)
 /------\/
 / | ||
 * /\---/\
 ~~ ~~
...."Have you mooed today?"...


From juan.lang at gmail.com  Wed Jul  2 09:57:30 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Wed, 2 Jul 2008 07:57:30 -0700
Subject: winecfg.cpl: Add new control panel applet for winecfg
In-Reply-To: <B1BF160C92C94DB09B18CD535481CEB3@lan.owenrudge.net>
References: <486A82DF.5060506@owenrudge.net>
	<8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net>
	<22821af30807011541j7008153apbf4d4ccf3d4af225@mail.gmail.com>
	<486AB3E7.5060908@owenrudge.net>
	<22821af30807011608i1f4c1625wba5b196e4332e00d@mail.gmail.com>
	<486ABA93.1080303@owenrudge.net>
	<22821af30807011637l68224121t6056e0e201bd5933@mail.gmail.com>
	<486AC3C5.4000603@owenrudge.net>
	<3f4fd2640807012305h68804dc7hc0c6af16cb9abb47@mail.gmail.com>
	<B1BF160C92C94DB09B18CD535481CEB3@lan.owenrudge.net>
Message-ID: <3a768c550807020757u5d8ee307t5f33bcd28a26cc2f@mail.gmail.com>

> I'll look into that, then. I know that the shell namespace control panel
> does check the registry for entries (could you try using a program like the
> ReactOS Explorer to browse the control panel and see if it shows up there?),
> but I'm not sure if the standalone control.exe does. Ideally, the standalone
> control.exe would be replaced with a stub that launches the Explorer, but of
> course Wine doesn't have a built-in Explorer yet.

Wine's builtin control does just launch the shell's version of the
control panel, unless it's given an argument like "DESKTOP",
"DATE/TIME", etc.  See programs/control.c.

Those string arguments to control aren't functional, because the
control panel applets they reference don't exist in Wine.  Launching
control panel items via name is described in MSDN:
http://msdn.microsoft.com/en-us/library/bb776838.aspx
See especially "Executing Control Panel Items",
http://msdn.microsoft.com/en-us/library/bb776841(VS.85).aspx

You might try to make some of those that have an analogue work in
Wine, especially the "Legacy Control Panel Commands" "desktop" and
"color".
--Juan


From owen at owenrudge.net  Wed Jul  2 09:59:53 2008
From: owen at owenrudge.net (Owen Rudge)
Date: Wed, 2 Jul 2008 15:59:53 +0100
Subject: winecfg.cpl: Add new control panel applet for winecfg
References: <486A82DF.5060506@owenrudge.net>
	<8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net>
	<22821af30807011541j7008153apbf4d4ccf3d4af225@mail.gmail.com>
	<486AB3E7.5060908@owenrudge.net>
	<22821af30807011608i1f4c1625wba5b196e4332e00d@mail.gmail.com>
	<486ABA93.1080303@owenrudge.net>
	<22821af30807011637l68224121t6056e0e201bd5933@mail.gmail.com>
	<486AC3C5.4000603@owenrudge.net>
	<3f4fd2640807012305h68804dc7hc0c6af16cb9abb47@mail.gmail.com>
	<B1BF160C92C94DB09B18CD535481CEB3@lan.owenrudge.net>
	<3a768c550807020757u5d8ee307t5f33bcd28a26cc2f@mail.gmail.com>
Message-ID: <39799DE1473C45D78D5B0B1AB81DE401@lan.owenrudge.net>

> Wine's builtin control does just launch the shell's version of the
> control panel, unless it's given an argument like "DESKTOP",
> "DATE/TIME", etc.  See programs/control.c.

Indeed, I'm aware of that. Effectively, there are two versions of the 
control panel in the shell of course, the namespace version and the built-in 
simple version. The latter didn't check the registry for control panels - 
I've just implemented such a check, which will fix this bug. I'll submit a 
patch shortly.

> You might try to make some of those that have an analogue work in
> Wine, especially the "Legacy Control Panel Commands" "desktop" and
> "color".

That's something I can look into, indeed.

Cheers,

-- 
Owen Rudge
http://www.owenrudge.net/ 



From hzhrong at gmail.com  Wed Jul  2 10:28:45 2008
From: hzhrong at gmail.com (Huang, Zhangrong)
Date: Wed, 2 Jul 2008 23:28:45 +0800
Subject: secur32: Allow loading external schannel.dll.
In-Reply-To: <bcab73240806242325m20852fadt514a39574a3226f7@mail.gmail.com>
References: <3a768c550806231241k1231f112k7d7912cc6c23db48@mail.gmail.com>
	<200806240849.26099.kai.blin@gmail.com>
	<b4cc5a3d0806240553g55f9a77bie8bd6894019d48d8@mail.gmail.com>
	<bcab73240806242325m20852fadt514a39574a3226f7@mail.gmail.com>
Message-ID: <b4cc5a3d0807020828k3a492dafpec3441efbe5bd78b@mail.gmail.com>

Hi,

2008/6/25 Austin Lund <austin.lund at gmail.com>:
> I cannot get this to work with googletalk.exe.

No luck, googletalk.exe still can't login.

>
> I get the following messages:
>
> trace:secur32:SECUR32_initializeProviders
> trace:secur32:_tryLoadProvider loaded L"schannel.dll",
> InitSecurityInterfaceA is 0x7ec2fae0, InitSecurityInterfaceW is
> 0x7ec2fb00
> trace:secur32:_tryLoadProvider L"schannel.dll" has built-in providers,
> skip adding

This message means secur32 is loading schannel.dll, and find built-in providers.

>
> Even though I have removed schannel.dll completely from the libraries.
>
> Then the rest of the messages come up reporting stubs.

To get googletalk.exe work, first step is let secur32 load
schannel.dll which  has LSA/user mode functions tables, next need to
implement the stubs in schannel.dll.


-- 
$ apt-get moo
 (__)
 (oo)
 /------\/
 / | ||
 * /\---/\
 ~~ ~~
...."Have you mooed today?"...


From dank at kegel.com  Wed Jul  2 10:31:15 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 2 Jul 2008 08:31:15 -0700
Subject: Tests and Valgrinding
Message-ID: <a71bd89a0807020831k69fc6660u47f11785a756cc63@mail.gmail.com>

Zachary Goldberg wrote:
> test.winehq.org ... is fantastic, but it doesn't give a very good feel for progress
> that all of these recent patches have been making.

I would love to see a feature added to test.winehq.org
which showed one tests's results across time (and platform).
That would let you see regressions (and progress) at a glance.

> Also, Dan Kegel has been extraordinarily diligent in valgrinding of
> late (/applause) and I just wanted to ask if we're doing anything to
> support him?

A few people are starting to run Valgrind themselves.
How about this: if you ever post a patch that causes a
valgrind warning, you send yourself to valgrind jail for a month,
and valgrind every patch you write before you send it in...

> perhaps making Valgrind-passing a requirement (along
> with not breaking tests) for being committed.  I think perhaps
> we should take a look at this and seriously consider implementing it.

As a first step, James and I could (along with posting the errors
to wine-devel) also post patches to revert the guilty changes.
(And if we do it quickly enough, perhaps Alexandre can
do the revert on the same day...)
Then the author could fix and resubmit.
How's that sound?
- Dan


From julliard at winehq.org  Wed Jul  2 10:46:21 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 02 Jul 2008 17:46:21 +0200
Subject: Tests and Valgrinding
In-Reply-To: <a71bd89a0807020831k69fc6660u47f11785a756cc63@mail.gmail.com>
	(Dan Kegel's message of "Wed, 2 Jul 2008 08:31:15 -0700")
References: <a71bd89a0807020831k69fc6660u47f11785a756cc63@mail.gmail.com>
Message-ID: <87wsk42ss2.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> As a first step, James and I could (along with posting the errors
> to wine-devel) also post patches to revert the guilty changes.
> (And if we do it quickly enough, perhaps Alexandre can
> do the revert on the same day...)
> Then the author could fix and resubmit.
> How's that sound?

I'm not going to revert patches just because they introduce a valgrind
warning, that would make a big mess of the history. If you can spot the
error before the patch goes in, great, otherwise you need to submit a
fix, not a revert.

-- 
Alexandre Julliard
julliard at winehq.org


From truiken at gmail.com  Wed Jul  2 10:57:50 2008
From: truiken at gmail.com (James Hawkins)
Date: Wed, 2 Jul 2008 10:57:50 -0500
Subject: New valgrind warnings in msi/db
In-Reply-To: <a71bd89a0807020740y3af850ffmee5385de2fe2fdf5@mail.gmail.com>
References: <a71bd89a0807020740y3af850ffmee5385de2fe2fdf5@mail.gmail.com>
Message-ID: <22821af30807020857j3ae5a274qfca49058440123ca@mail.gmail.com>

On Wed, Jul 2, 2008 at 9:40 AM, Dan Kegel <dank at kegel.com> wrote:
> Hi James,
> could you have a look at yet more fresh valgrind warnings, triggered by
> http://source.winehq.org/git/wine.git/?a=commit;h=d9ac95be5bb51de2293326920c2eb4509834ff93
> ?
>
> You might want to invest in a copy of Valgrind yourself sometime.
> I can get you a 10% off discount :-)
>

All of these new valgrind warnings that are products of my patches are
a result of testing unimplemented features which will soon be
implemented, so I'm not too worried about these.  Besides, using
valgrind is still a pita, and your patch makes it easier, but it keeps
me from being able to 'commit -a'.

-- 
James Hawkins


From owen at owenrudge.net  Wed Jul  2 10:58:23 2008
From: owen at owenrudge.net (Owen Rudge)
Date: Wed, 2 Jul 2008 16:58:23 +0100
Subject: winecfg.cpl: Add new control panel applet for winecfg
References: <486A82DF.5060506@owenrudge.net><8457C245762C4E4CBD0B2E45FB0D1466@lan.owenrudge.net><22821af30807011541j7008153apbf4d4ccf3d4af225@mail.gmail.com><486AB3E7.5060908@owenrudge.net><22821af30807011608i1f4c1625wba5b196e4332e00d@mail.gmail.com><486ABA93.1080303@owenrudge.net><22821af30807011637l68224121t6056e0e201bd5933@mail.gmail.com><486AC3C5.4000603@owenrudge.net><3f4fd2640807012305h68804dc7hc0c6af16cb9abb47@mail.gmail.com><B1BF160C92C94DB09B18CD535481CEB3@lan.owenrudge.net><3a768c550807020757u5d8ee307t5f33bcd28a26cc2f@mail.gmail.com>
	<39799DE1473C45D78D5B0B1AB81DE401@lan.owenrudge.net>
Message-ID: <0248ADC3268B4783B665C69590E5B0CD@lan.owenrudge.net>

>> You might try to make some of those that have an analogue work in
>> Wine, especially the "Legacy Control Panel Commands" "desktop" and
>> "color".
>
> That's something I can look into, indeed.

Having had a brief look into it, currently the control panel attempts to 
launch the appropriate .cpl file that would be launched on Windows. I think, 
rather than altering this to load winecfg instead, it'd probably be best to 
leave any changes here for the time being. If I do (or someone else does) 
end up splitting up winecfg, then the best plan would simply be to name the 
resulting control panels in a way compatible with Windows.

Regards,

-- 
Owen Rudge
http://www.owenrudge.net/



From adam at tpetaccia.com  Wed Jul  2 10:59:02 2008
From: adam at tpetaccia.com (Adam Petaccia)
Date: Wed, 02 Jul 2008 11:59:02 -0400
Subject: [try 3] gdi32/tests: Add tests for GdiGetCodePage.
In-Reply-To: <b4cc5a3d0807020836o1fa7e677k169f30f57eae9875@mail.gmail.com>
References: <b4cc5a3d0807020836o1fa7e677k169f30f57eae9875@mail.gmail.com>
Message-ID: <1215014342.6599.3.camel@belthazor-saved>

On Wed, 2008-07-02 at 23:36 +0800, Huang, Zhangrong wrote:
> This pacth add tests for GdiGetCodePage, which currently don't pass on WIne.
> 
> ChangeLog
>     gdi32/tests: Add tests for GdiGetCodePage.
> 
You didn't attach a patch.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080702/a1e94983/attachment-0001.pgp 

From stefan at codeweavers.com  Wed Jul  2 10:48:48 2008
From: stefan at codeweavers.com (=?iso-8859-1?Q?Stefan_D=F6singer?=)
Date: Wed, 2 Jul 2008 10:48:48 -0500
Subject: Pipeline separation preview
Message-ID: <003d01c8dc5b$1e543970$5afcac50$@com>

Hi,
I'm sending a preview of my vertex-fragment-misc pipeline separation patches
as discussed a few weeks ago. The patch comments have more descriptions. The
relevant patches start at patch 5, the other patches are other junk in my
tree.

Any comments?

Stefan

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pipeline.tar.bz2
Type: application/octet-stream
Size: 9501 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080702/9cb8cf49/attachment.obj 

From stefan at codeweavers.com  Wed Jul  2 10:50:06 2008
From: stefan at codeweavers.com (=?iso-8859-1?Q?Stefan_D=F6singer?=)
Date: Wed, 2 Jul 2008 10:50:06 -0500
Subject: Pipeline separation preview
Message-ID: <000001c8dc5b$4ca2c710$e5e85530$@com>

Hi,
I'm sending a preview of my vertex-fragment-misc pipeline separation patches
as discussed a few weeks ago. The patch comments have more descriptions. The
relevant patches start at patch 5, the other patches are other junk in my
tree.

Any comments?

Stefan

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pipeline.tar.bz2
Type: application/octet-stream
Size: 9501 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080702/f6534d96/attachment.obj 

From stefan at codeweavers.com  Wed Jul  2 10:47:38 2008
From: stefan at codeweavers.com (=?iso-8859-1?Q?Stefan_D=F6singer?=)
Date: Wed, 2 Jul 2008 10:47:38 -0500
Subject: Pipeline separation preview
Message-ID: <003601c8dc5a$f44466f0$dccd34d0$@com>

Hi,
I'm sending a preview of my vertex-fragment-misc pipeline separation patches
as discussed a few weeks ago. The patch comments have more descriptions. The
relevant patches start at patch 5, the other patches are other junk in my
tree.

Any comments?

Stefan

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pipeline.tar.bz2
Type: application/octet-stream
Size: 9501 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080702/6f7a2c33/attachment-0001.obj 

From stefan at codeweavers.com  Wed Jul  2 10:47:38 2008
From: stefan at codeweavers.com (=?iso-8859-1?Q?Stefan_D=F6singer?=)
Date: Wed, 2 Jul 2008 10:47:38 -0500
Subject: Pipeline separation preview
Message-ID: <003601c8dc5a$f44466f0$dccd34d0$@com>

Hi,
I'm sending a preview of my vertex-fragment-misc pipeline separation patches
as discussed a few weeks ago. The patch comments have more descriptions. The
relevant patches start at patch 5, the other patches are other junk in my
tree.

Any comments?

Stefan

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pipeline.tar.bz2
Type: application/octet-stream
Size: 9501 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080702/6f7a2c33/attachment-0002.obj 

From stefan at codeweavers.com  Wed Jul  2 10:58:31 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Wed, 2 Jul 2008 10:58:31 -0500
Subject: Pipeline separation preview
In-Reply-To: <003601c8dc5a$f44466f0$dccd34d0$@com>
References: <003601c8dc5a$f44466f0$dccd34d0$@com>
Message-ID: <002201c8dc5c$79883250$6c9896f0$@com>

Oops, sorry, I did not intend to send it 4 times. I had some disagreements
with my glourious Outlook 2007 "mail client".


> -----Original Message-----
> From: wine-devel-bounces at winehq.org [mailto:wine-devel-
> bounces at winehq.org] On Behalf Of Stefan D?singer
> Sent: Wednesday, July 02, 2008 10:48 AM
> To: wine-devel at winehq.org
> Subject: Pipeline separation preview
> 
> Hi,
> I'm sending a preview of my vertex-fragment-misc pipeline separation
> patches as discussed a few weeks ago. The patch comments have more
> descriptions. The relevant patches start at patch 5, the other patches
> are other junk in my tree.
> 
> Any comments?
> 
> Stefan




From juan.lang at gmail.com  Wed Jul  2 11:30:42 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Wed, 2 Jul 2008 09:30:42 -0700
Subject: New valgrind warnings in msi/db
In-Reply-To: <22821af30807020857j3ae5a274qfca49058440123ca@mail.gmail.com>
References: <a71bd89a0807020740y3af850ffmee5385de2fe2fdf5@mail.gmail.com>
	<22821af30807020857j3ae5a274qfca49058440123ca@mail.gmail.com>
Message-ID: <3a768c550807020930o27878d0eve36ef9593ae4ef97@mail.gmail.com>

> Besides, using valgrind is still a pita, and your patch makes it easier, but it keeps
> me from being able to 'commit -a'.

Why does it prevent that?  I just do one junk commit of the valgrind
patch, and ignore it when I send in my changes.
--Juan


From lqs.buaa at gmail.com  Wed Jul  2 11:34:21 2008
From: lqs.buaa at gmail.com (Liu Qishuai)
Date: Thu, 3 Jul 2008 00:34:21 +0800
Subject: gdi32: Implement automatic font substitution
In-Reply-To: <b4cc5a3d0807020756j5101e31ax499a1494bd2df829@mail.gmail.com>
References: <a71bd89a0807011211w296aef7dy528fde025dc832e5@mail.gmail.com>
	<897160440807011739p79023217se37e719c819bc296@mail.gmail.com>
	<b4cc5a3d0807020559r1e695cdexd14c9a3c2c05099a@mail.gmail.com>
	<897160440807020700o3ff49ea9q780989d3ce7f65f1@mail.gmail.com>
	<b4cc5a3d0807020756j5101e31ax499a1494bd2df829@mail.gmail.com>
Message-ID: <897160440807020934r61fcf047x12a4fd3e0ce5edaf@mail.gmail.com>

Hi,
I rewrote a patch that doesn't break FontLink.
http://www.winehq.org/pipermail/wine-patches/2008-July/057033.html


2008/7/2 Huang, Zhangrong <hzhrong at gmail.com>:
> Hi,
>
> 2008/7/2 Liu Qishuai <lqs.buaa at gmail.com>:
>> No.
>>
>> 1. In Windows XP, I deleted the FontLink register key and rebooted,
>> and the Chinese characters are still displaying correctly.
>
> I guess gdi32.dll has hard-coded the default FontLink registry, of
> course no prove.
>
>>
>> 2. I moved simsun.ttc (The default font in Simplified Chinese) to
>> another directory and rebooted. Windows XP automatically uses
>> simhei.ttf (another Chinese font) to display Chinese characters. There
>> is no register key for this font.
>
> This doesn't prove anything, creating a non-existent font will return
> mostly related font.
>
> On Japanese Windows, if user select a Latin font in notepad,  CJK
> chars will display incorrect.
> And I have a Simplified Chinese Windows XP box, which also displays
> CJK chars as squares, I have no idea what's wrong.
>
> --
> $ apt-get moo
>  (__)
>  (oo)
>  /------\/
>  / | ||
>  * /\---/\
>  ~~ ~~
> ...."Have you mooed today?"...
>


From truiken at gmail.com  Wed Jul  2 11:41:00 2008
From: truiken at gmail.com (James Hawkins)
Date: Wed, 2 Jul 2008 11:41:00 -0500
Subject: New valgrind warnings in msi/db
In-Reply-To: <3a768c550807020930o27878d0eve36ef9593ae4ef97@mail.gmail.com>
References: <a71bd89a0807020740y3af850ffmee5385de2fe2fdf5@mail.gmail.com>
	<22821af30807020857j3ae5a274qfca49058440123ca@mail.gmail.com>
	<3a768c550807020930o27878d0eve36ef9593ae4ef97@mail.gmail.com>
Message-ID: <22821af30807020941x3908a784n495f67996c3b9fd8@mail.gmail.com>

On Wed, Jul 2, 2008 at 11:30 AM, Juan Lang <juan.lang at gmail.com> wrote:
>> Besides, using valgrind is still a pita, and your patch makes it easier, but it keeps
>> me from being able to 'commit -a'.
>
> Why does it prevent that?  I just do one junk commit of the valgrind
> patch, and ignore it when I send in my changes.
>

Personal preference.  I don't like having those types of commits in my tree.

-- 
James Hawkins


From juan.lang at gmail.com  Wed Jul  2 11:49:14 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Wed, 2 Jul 2008 09:49:14 -0700
Subject: shell32: Check registry entry for cpl files (in standard control
	panel)
Message-ID: <3a768c550807020949y4de05d8fhff7a54f68de773be@mail.gmail.com>

Hi Owen,

@@ -40,6 +41,8 @@

 WINE_DEFAULT_DEBUG_CHANNEL(shlctrl);

+static void Control_RegisterRegistryApplets(HWND hWnd, CPanel *panel,
HKEY hkey_root, LPCSTR szRepPath);
+
+    /* now check for cpls in the registry */
+

Style nit:  get rid of that blank line.

+    Control_RegisterRegistryApplets(hWnd, panel, HKEY_LOCAL_MACHINE,
"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\Cpls");
+    Control_RegisterRegistryApplets(hWnd, panel, HKEY_CURRENT_USER,
"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\Cpls");

Prefer WCHAR strings to char strings.  You can declare a string
constant at the beginning of the function, next to wszAllCpl.

@@ -340,9 +345,38 @@ static	void	Control_DoWindow(CPanel* panel, HWND
hWnd, HINSTANCE hInst)
(snip)
+static void Control_RegisterRegistryApplets(HWND hWnd, CPanel *panel,
HKEY hkey_root, LPCSTR szRepPath)

Style nit:  put Control_RegisterRegistryApplets above Control_DoWindow
to avoid adding the prototype at the top of the file.
--Juan


From juan.lang at gmail.com  Wed Jul  2 11:51:55 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Wed, 2 Jul 2008 09:51:55 -0700
Subject: [try 2] user32: GetMenuStringA now returns correct buffer length
	for multibyte menu text. (with test)
Message-ID: <3a768c550807020951t5b811f65j8734855531ef453d@mail.gmail.com>

Hi Zhangrong,

+static inline unsigned int strlenW( const WCHAR *str )
+{
+    const WCHAR *s = str;
+    while (*s) s++;
+    return s - str;
+}

Is there some reason you can't just use lstrlenW?
--Juan


From hzhrong at gmail.com  Wed Jul  2 12:06:41 2008
From: hzhrong at gmail.com (Huang, Zhangrong)
Date: Thu, 3 Jul 2008 01:06:41 +0800
Subject: EnterCriticalSection throws exception?
Message-ID: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>

Hi,

According to MSDN  http://msdn.microsoft.com/en-us/library/ms682608(VS.85).aspx:

EnterCriticalSection can raise EXCEPTION_POSSIBLE_DEADLOCK if a wait
operation on the critical section times out. The timeout interval is
specified by the following registry value:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session
Manager\CriticalSectionTimeout.

Currently, WIne doesn't implement this timeout feature, instead wine
throws exception only for Wine internal locks after waiting for about
65 seconds, it is useful to check deadlock, see
RtlpWaitForCriticalSection in dlls/ntdll/critsection.c

But this means a thread can't hold critical section longer than 65
seconds, otherwise app will crash. On some conditions, a thread does
need hold critical section more than 65 seconds, for example: wine's
implementation of GetAddress uses a critical section to protect
non-reentrant gethostbyname() (well maybe need another
gethostbyname_r() patch),  see dlls/wininet/utility.c
As you can see, gethostbyname() may take longtime when DNS setting is
wrong or network is broken. If a multi-thread app calls GetAddress
simultaneous in many threads, the app will crash.

I meet this problem when my network was broken, my app kept crash:

fixme:wininet:InternetSetOptionW INTERNET_OPTION_SEND/RECEIVE_TIMEOUT
err:ntdll:RtlpWaitForCriticalSection section 0x7e44fa80 "utility.c:
cs_gethostbyname" wait timed out in thread 0037, blocked by 003b,
retrying (60 sec)
fixme:msxml:DllCanUnloadNow
wine: Critical section 7e44fa80 wait failed at address 0x7bc3c5bc
(thread 0039), starting debugger...
WineDbg starting on pid 0008
Unhandled exception: wait failed on critical section 0x7e44fa80 cs_gethostbyname
err:seh:raise_exception Unhandled exception code c0000194 flags 0 addr
0x7bc3c5bc

So I suggest a feature that EnterCriticalSection throws exception for
Wine internal locks only when debug is present.

Add the following code dlls/ntdll/critsection.c:

NTSTATUS WINAPI RtlpWaitForCriticalSection( RTL_CRITICAL_SECTION *crit )
{
...........................
        /* Throw exception only for Wine internal locks and debug is present */
        if ((!crit->DebugInfo) || (!crit->DebugInfo->Spare[0])) continue;
        else if (!NtCurrentTeb()->Peb->BeingDebugged) continue;
        ^^^^^^^^^^^^^^^^^^ add ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        rec.ExceptionCode    = STATUS_POSSIBLE_DEADLOCK;
............................
}

Any suggestion? Sorry If I'm not clean or missing something, thanks.

-- 
$ apt-get moo
 (__)
 (oo)
 /------\/
 / | ||
 * /\---/\
 ~~ ~~
...."Have you mooed today?"...


From owen at owenrudge.net  Wed Jul  2 12:10:50 2008
From: owen at owenrudge.net (Owen Rudge)
Date: Wed, 2 Jul 2008 18:10:50 +0100
Subject: shell32: Check registry entry for cpl files (in standard control
	panel)
References: <3a768c550807020949y4de05d8fhff7a54f68de773be@mail.gmail.com>
Message-ID: <4D373E0EB320455AA7057A1C26D858C3@lan.owenrudge.net>

Hi Juan,

> Style nit:  get rid of that blank line.

> Prefer WCHAR strings to char strings.  You can declare a string
> constant at the beginning of the function, next to wszAllCpl.

> Style nit:  put Control_RegisterRegistryApplets above Control_DoWindow
> to avoid adding the prototype at the top of the file.

I've submitted an updated patch to wine-patches now. Thanks.

-- 
Owen Rudge
http://www.owenrudge.net/


From hzhrong at gmail.com  Wed Jul  2 12:14:24 2008
From: hzhrong at gmail.com (Huang, Zhangrong)
Date: Thu, 3 Jul 2008 01:14:24 +0800
Subject: [try 2] user32: GetMenuStringA now returns correct buffer length
	for multibyte menu text. (with test)
In-Reply-To: <3a768c550807020951t5b811f65j8734855531ef453d@mail.gmail.com>
References: <3a768c550807020951t5b811f65j8734855531ef453d@mail.gmail.com>
Message-ID: <b4cc5a3d0807021014j6578a8b2jd8486c0dfb59dffe@mail.gmail.com>

Hmm, cause GetMenuStringW uses strlenW, so I just copy it.

2008/7/3 Juan Lang <juan.lang at gmail.com>:
> Hi Zhangrong,
>
> +static inline unsigned int strlenW( const WCHAR *str )
> +{
> +    const WCHAR *s = str;
> +    while (*s) s++;
> +    return s - str;
> +}
>
> Is there some reason you can't just use lstrlenW?
> --Juan
>



-- 
$ apt-get moo
 (__)
 (oo)
 /------\/
 / | ||
 * /\---/\
 ~~ ~~
...."Have you mooed today?"...


From hzhrong at gmail.com  Wed Jul  2 12:25:29 2008
From: hzhrong at gmail.com (Huang, Zhangrong)
Date: Thu, 3 Jul 2008 01:25:29 +0800
Subject: [try 2] user32: GetMenuStringA now returns correct buffer length
	for multibyte menu text. (with test)
In-Reply-To: <b4cc5a3d0807021014j6578a8b2jd8486c0dfb59dffe@mail.gmail.com>
References: <3a768c550807020951t5b811f65j8734855531ef453d@mail.gmail.com>
	<b4cc5a3d0807021014j6578a8b2jd8486c0dfb59dffe@mail.gmail.com>
Message-ID: <b4cc5a3d0807021025n474bed5bhdb6f82af071c255b@mail.gmail.com>

Oh, I see, cross-test on Windows 95/98/Me maybe fail if uses lstrlenW.

See http://msdn.microsoft.com/en-us/library/ms647492(VS.85).aspx

Windows 95/98/Me: Although lstrlenW exists on Microsoft Windows
95/98/Me, it is supported by the Microsoft Layer for Unicode (MSLU) to
give more consistent behavior across all Windows operating systems. To
use this, you must add certain files to your application, as outlined
in Microsoft Layer for Unicode on Windows 95/98/Me Systems.


2008/7/3 Huang, Zhangrong <hzhrong at gmail.com>:
> Hmm, cause GetMenuStringW uses strlenW, so I just copy it.
>


-- 
$ apt-get moo
 (__)
 (oo)
 /------\/
 / | ||
 * /\---/\
 ~~ ~~
...."Have you mooed today?"...


From juan.lang at gmail.com  Wed Jul  2 12:26:08 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Wed, 2 Jul 2008 10:26:08 -0700
Subject: [try 2] user32: GetMenuStringA now returns correct buffer length
	for multibyte menu text. (with test)
In-Reply-To: <b4cc5a3d0807021025n474bed5bhdb6f82af071c255b@mail.gmail.com>
References: <3a768c550807020951t5b811f65j8734855531ef453d@mail.gmail.com>
	<b4cc5a3d0807021014j6578a8b2jd8486c0dfb59dffe@mail.gmail.com>
	<b4cc5a3d0807021025n474bed5bhdb6f82af071c255b@mail.gmail.com>
Message-ID: <3a768c550807021026i228bc1eayfd572f3bb7032f47@mail.gmail.com>

> Oh, I see, cross-test on Windows 95/98/Me maybe fail if uses lstrlenW.

Ah, right.  Carry on.
--Juan


From zac at zacbrown.org  Wed Jul  2 12:26:39 2008
From: zac at zacbrown.org (Zac Brown)
Date: Wed, 02 Jul 2008 10:26:39 -0700
Subject: Thoughts on implementation of winhttp.dll
In-Reply-To: <200807021159.14779.hans@meelstraat.net>
References: <486A88A6.1040905@zacbrown.org>
	<200807021159.14779.hans@meelstraat.net>
Message-ID: <486BBA4F.6050800@zacbrown.org>

Hans Leidekker wrote:
> On Tuesday 01 July 2008 21:42:30 Zac Brown wrote:
> 
>> Does anyone have thoughts on implementing parts of winhttp in terms of
>> wininet? The primary issue that prevents entirely implementing winhttp in
>> terms of wininet is that there is no direct Win32 API for fetching an SSL
>> certificate in winhttp.
> 
> Would InternetQueryOption(INTERNET_OPTION_SECURITY_CERTIFICATE) not do
> what you want? There are other problems to be solved though, filtered
> callbacks and authentication come to mind.
> 
> This topic has been discussed before and I even wrote a proof of concept
> patch, all of which can be found in the list archives.
> 
>  -Hans
> 

Hi Hans,

Actually InternetQueryOption(INTERNET_OPTION_SECURITY_CERTIFICATE{_STRUCT}) 
don't get the actual certificate, only information about the certificate. The 
certificate would need to be in a CERT_CONTEXT structure but wininet doesn't 
provide a way to get that.

Unless there's a way to get a handle to the particular certificate store that 
wininet accesses and then enumerate the certificates to find the desired one, 
I'll need to write an implementation of WinHttpQueryOption that can actually 
fetch a certificate and produce the CERT_CONTEXT.

I've looked over your past posts a bit, including the patch you had posted to 
-devel that had mappings between the wininet and winhttp flags. From the start, 
I can tell that the WINHTTP_OPTION_SECURITY_CERTIFICATE_STRUCT is not equivalent 
to WINHTTP_OPTION_SERVER_CERT_CONTEXT which will actually fetch a certificate. 
Wininet has no equivalent to WINHTTP_OPTION_SERVER_CERT_CONTEXT.

Based on the information above, do you think its better to architect winhttp 
from the ground up or to use what we can of wininet, and then add the rest 
around it?


-Zac


From a_villacis at palosanto.com  Wed Jul  2 12:31:35 2008
From: a_villacis at palosanto.com (=?ISO-8859-1?Q?Alex_Villac=ED=ADs_Lasso?=)
Date: Wed, 02 Jul 2008 12:31:35 -0500
Subject: richedit: do not read actual scrollbar state for scrollbar update,
	use internal state instead
In-Reply-To: <4869489D.90404@palosanto.com>
References: <4869489D.90404@palosanto.com>
Message-ID: <486BBB77.8040206@palosanto.com>

Alex Villac??s Lasso escribi?:
> This is supposed to be a fix for bug #12311 . This bug involves a 
> recursive message loop where the application forces visibility of 
> scrollbars for the richedit control, which causes a WM_SIZE that 
> triggers an update of the window size and re-hiding of the scrollbar. 
> However, just after exiting the richedit winproc, the app forces 
> visibility again, which again triggers a WM_SIZE, and so on. Native is 
> oblivious to the fact that an external agent is messing with the 
> scrollbar visibility, and is therefore unaffected by recursion. This 
> patch attempts to fix this behavior in builtin and test for it. I have 
> tried to test it on WinXP-SP2 and Win98, but testing on other 
> platforms is helpful too.
>
> Changelog:
> * Use internal copy of scrollbar state instead of directly reading 
> state from scrollbars, just as native does.
> * Tests for ability to externally modify scrollbars.
> * Test for behavior that caused recursion until builtin richedit was 
> fixed.
>
> ------------------------------------------------------------------------
>
Nobody has commented on this patch. Is this the wrong strategy to solve 
the problem? Or are tests failing in some other platform? Copy of patch 
at bug #12311 with downloadable app to test.


-- 
perl -e '$x=2.4;print sprintf("%.0f + %.0f = %.0f\n",$x,$x,$x+$x);'



From adam at tpetaccia.com  Wed Jul  2 12:52:37 2008
From: adam at tpetaccia.com (Adam Petaccia)
Date: Wed, 02 Jul 2008 13:52:37 -0400
Subject: New valgrind warnings in msi/db
In-Reply-To: <22821af30807020857j3ae5a274qfca49058440123ca@mail.gmail.com>
References: <a71bd89a0807020740y3af850ffmee5385de2fe2fdf5@mail.gmail.com>
	<22821af30807020857j3ae5a274qfca49058440123ca@mail.gmail.com>
Message-ID: <1215021157.6599.55.camel@belthazor-saved>

On Wed, 2008-07-02 at 10:57 -0500, James Hawkins wrote:
> On Wed, Jul 2, 2008 at 9:40 AM, Dan Kegel <dank at kegel.com> wrote:
> > Hi James,
> > could you have a look at yet more fresh valgrind warnings, triggered by
> > http://source.winehq.org/git/wine.git/?a=commit;h=d9ac95be5bb51de2293326920c2eb4509834ff93
> > ?
> >
> > You might want to invest in a copy of Valgrind yourself sometime.
> > I can get you a 10% off discount :-)
> >
> 
> All of these new valgrind warnings that are products of my patches are
> a result of testing unimplemented features which will soon be
> implemented, so I'm not too worried about these.  Besides, using
> valgrind is still a pita, and your patch makes it easier, but it keeps
> me from being able to 'commit -a'.
> 
I don't like being able to do commit -a either, since valgrind errors
are considered serious, should the patch be merged upstream?



From dank at kegel.com  Wed Jul  2 12:58:40 2008
From: dank at kegel.com (Dan Kegel)
Date: Wed, 2 Jul 2008 10:58:40 -0700
Subject: New valgrind warnings in msi/db
In-Reply-To: <1215021157.6599.55.camel@belthazor-saved>
References: <a71bd89a0807020740y3af850ffmee5385de2fe2fdf5@mail.gmail.com>
	<22821af30807020857j3ae5a274qfca49058440123ca@mail.gmail.com>
	<1215021157.6599.55.camel@belthazor-saved>
Message-ID: <a71bd89a0807021058t247eb2c5q4d6a2bc79b076cda@mail.gmail.com>

On Wed, Jul 2, 2008 at 10:52 AM, Adam Petaccia <adam at tpetaccia.com> wrote:
> I don't like being able to do commit -a either, since valgrind errors
> are considered serious, should the patch be merged upstream?

Alexandre didn't like the patch for some reason earlier.
I will have a look and see if I can get rid of the need
for a patch (by e.g. adding a "don't valgrind these executables"
option to valgrind; then we can valgrind make without, um,
valgrinding make).


From robertshearman at gmail.com  Wed Jul  2 14:05:17 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 2 Jul 2008 20:05:17 +0100
Subject: [UPDATE] shell32: Check registry entry for cpl files (in standard
	control panel)
In-Reply-To: <486BB61A.1050105@owenrudge.net>
References: <486BB61A.1050105@owenrudge.net>
Message-ID: <1096648c0807021205s70fb544fje608489e338c45a7@mail.gmail.com>

2008/7/2 Owen Rudge <owen at owenrudge.net>:
> This patch fixes bug #12534. It adds a check to the built-in control
> panel for any .cpl files in the registry, in addition to those .cpl
> files in the system directory.

Control Panel applets can also be registered in "HKCU\Control Panel\MMCPL".

-- 
Rob Shearman


From jwhite at codeweavers.com  Wed Jul  2 14:13:35 2008
From: jwhite at codeweavers.com (Jeremy White)
Date: Wed, 02 Jul 2008 14:13:35 -0500
Subject: Announcing dates and location for Wineconf 2008
Message-ID: <486BD35F.8020503@codeweavers.com>

Hi Folks,

Thanks to the volunteer efforts of James Ramey (new guy in our office),
we now have a great venue for WineConf 2008.

I've put together a page on it here:
  http://wiki.winehq.org/WineConf2008

The key details are that it will be over the weekend of September 27 and 28,
at a hotel in Bloomington, MN.  I promise that it won't be mind numbingly cold,
and I won't make any one traipse to see an ice palace this year <grin>.

In fact, it's a nice hotel, quite close to the airport, the Mall of America,
a Wildlife refuge, and to a stop for our light rail system.

Additionally, I believe we will be able to offer fairly substantial
travel sponsorships for people that find the cost of travel prohibitive.
Email me privately if that would be a help.

And for those Europeans that hate US policies, I'll point out two things:
  1.  January 20, 2009 is fast approaching.
  2.  1 Euro gets you $1.60, which is a whole lot of cheap beer

At any rate, if you're interested in coming to Wineconf this year, please visit
the Wiki and sign up for the wineconf mailing list:
  http://www.winehq.org/mailman/listinfo/wineconf
We generally use that list for minutiae to avoid spamming the broader mailing list.

Hope to see you in September!

Cheers,

Jeremy


From zac at zacbrown.org  Wed Jul  2 14:20:20 2008
From: zac at zacbrown.org (Zac Brown)
Date: Wed, 02 Jul 2008 12:20:20 -0700
Subject: shell32: tests/shellord.c[new]: Add tests for SHGetNewLinkInfo[AW]
In-Reply-To: <486BD3CF.3090501@zacbrown.org>
References: <486BD3CF.3090501@zacbrown.org>
Message-ID: <486BD4F4.1050309@zacbrown.org>

Zac Brown wrote:
> Add tests for SHGetNewLinkInfo[AW]
> 
> Tests pass on Windows 2000, Windows XP and Windows Server 2003.
> 
> Changes:
> * Add initial tests for SHGetNewLinkInfo[AW] to shell32/tests/shellord.c
> * Add shell32/tests/shellord.c
> * Update shell32/tests/Makefile.in
> 
> 
> ------------------------------------------------------------------------
> 
> ---
>  dlls/shell32/tests/Makefile.in |    1 +
>  dlls/shell32/tests/shellord.c  |  379 ++++++++++++++++++++++++++++++++++++++++
>  2 files changed, 380 insertions(+), 0 deletions(-)
>  create mode 100644 dlls/shell32/tests/shellord.c
> 
> diff --git a/dlls/shell32/tests/Makefile.in b/dlls/shell32/tests/Makefile.in
> index 088499f..316dd72 100644
> --- a/dlls/shell32/tests/Makefile.in
> +++ b/dlls/shell32/tests/Makefile.in
> @@ -8,6 +8,7 @@ IMPORTS   = uuid shell32 ole32 oleaut32 user32 advapi32 kernel32
>  CTESTS = \
>  	generated.c \
>  	shelllink.c \
> +	shellord.c \
>  	shellpath.c \
>  	shfldr_special.c \
>  	shlexec.c \
> diff --git a/dlls/shell32/tests/shellord.c b/dlls/shell32/tests/shellord.c
> new file mode 100644
> index 0000000..f5ae1bd
> --- /dev/null
> +++ b/dlls/shell32/tests/shellord.c
> @@ -0,0 +1,379 @@
> +/*
> + * Unit tests for shellord.c
> + *
> + * Copyright 2008 Google (Zac Brown)
> + *
> + * This library is free software; you can redistribute it and/or
> + * modify it under the terms of the GNU Lesser General Public
> + * License as published by the Free Software Foundation; either
> + * version 2.1 of the License, or (at your option) any later version.
> + *
> + * This library is distributed in the hope that it will be useful,
> + * but WITHOUT ANY WARRANTY; without even the implied warranty of
> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
> + * Lesser General Public License for more details.
> + *
> + * You should have received a copy of the GNU Lesser General Public
> + * License along with this library; if not, write to the Free Software
> + * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
> + *
> + */
> +
> +#define COBJMACROS
> +
> +#include <stdio.h>
> +
> +#include <windows.h>
> +#include "shlguid.h"
> +#include "shobjidl.h"
> +#include "shlobj.h"
> +#include "wine/test.h"
> +
> +#include "shell32_test.h"
> +
> +static BOOL (WINAPI *pSHGetNewLinkInfoA) (LPCSTR pszLinkTo,
> +                                          LPCSTR pszDir,
> +                                          LPSTR pszName,
> +                                          BOOL *pfMustCopy,
> +                                          UINT uFlags);
> +static LPITEMIDLIST (WINAPI *pSHSimpleIDListFromPath) (LPCSTR lpszPath);
> +
> +typedef struct
> +{
> +    UINT flags;
> +    const char* expected_str_1;
> +    const char* expected_str_2;
> +    const char* expected_str_3;
> +    BOOL use_full_path;
> +    BOOL todo_str_check;
> +    BOOL skip_crash;
> +} getlink_test_t, *lp_getlink_test_t;
> +
> +
> +static const getlink_test_t getlink_tests[] = {
> +    {
> +        0,
> +        "testfile.lnk",
> +        "testfile.lnk",
> +        "testfile.txt.lnk",
> +        TRUE,
> +        TRUE,
> +        FALSE
> +    },
> +    {
> +        SHGNLI_PIDL,
> +        "testfile.lnk",
> +        "testfile.lnk",
> +        "testfile.txt.lnk",
> +        TRUE,
> +        TRUE,
> +        FALSE
> +    },
> +    {
> +        SHGNLI_NOUNIQUE,
> +        "testfile.lnk",
> +        "testfile.lnk",
> +        "testfile.txt.lnk",
> +        FALSE,
> +        TRUE,
> +        FALSE
> +    },
> +    {
> +        SHGNLI_PREFIXNAME,
> +        "Shortcut to testfile.lnk",
> +        "Shortcut to testfile.lnk",
> +        "Shortcut to testfile.txt.lnk",
> +        TRUE,
> +        TRUE,
> +        TRUE
> +    },
> +    {
> +        SHGNLI_NOLNK,
> +        "testfile",
> +        "testfile.lnk",
> +        "testfile.txt (2)",
> +        TRUE,
> +        TRUE,
> +        FALSE
> +    },
> +    {
> +        SHGNLI_PIDL | SHGNLI_NOUNIQUE,
> +        "testfile.lnk",
> +        "testfile.lnk",
> +        "testfile.txt.lnk",
> +        FALSE,
> +        TRUE,
> +        FALSE
> +    },
> +    {
> +        SHGNLI_PIDL | SHGNLI_PREFIXNAME,
> +        "Shortcut to testfile.lnk",
> +        "Shortcut to testfile.lnk",
> +        "Shortcut to testfile.txt.lnk",
> +        TRUE,
> +        TRUE,
> +        TRUE
> +    },
> +    {
> +        SHGNLI_PIDL | SHGNLI_NOLNK,
> +        "testfile",
> +        "testfile.lnk",
> +        "testfile.txt (2)",
> +        TRUE,
> +        TRUE,
> +        TRUE
> +    },
> +    {
> +        SHGNLI_NOUNIQUE | SHGNLI_PREFIXNAME,
> +        "Shortcut () to testfile.lnk",
> +        "Shortcut () to testfile.lnk",
> +        "Shortcut () to testfile.txt.lnk",
> +        FALSE,
> +        TRUE,
> +        FALSE
> +    },
> +    {
> +        SHGNLI_NOUNIQUE | SHGNLI_NOLNK,
> +        "testfile",
> +        "testfile.lnk",
> +        "testfile.txt",
> +        FALSE,
> +        TRUE,
> +        FALSE
> +    },
> +    {
> +        SHGNLI_PREFIXNAME | SHGNLI_NOLNK,
> +        "Shortcut to testfile",
> +        "Shortcut to testfile.lnk",
> +        "Shortcut to testfile.txt",
> +        TRUE,
> +        TRUE,
> +        TRUE
> +    },
> +    {
> +        SHGNLI_PIDL | SHGNLI_NOUNIQUE | SHGNLI_PREFIXNAME,
> +        "Shortcut () to testfile.lnk",
> +        "Shortcut () to testfile.lnk",
> +        "Shortcut () to testfile.txt.lnk",
> +        FALSE,
> +        TRUE,
> +        FALSE
> +    },
> +    {
> +        SHGNLI_PIDL | SHGNLI_PREFIXNAME | SHGNLI_NOLNK,
> +        "Shortcut to testfile",
> +        "Shortcut to testfile.lnk",
> +        "Shortcut to testfile.txt",
> +        TRUE,
> +        TRUE,
> +        TRUE
> +    },
> +    {
> +        SHGNLI_NOUNIQUE | SHGNLI_PREFIXNAME | SHGNLI_NOLNK,
> +        "Shortcut () to testfile",
> +        "Shortcut () to testfile.lnk",
> +        "Shortcut () to testfile.txt",
> +        FALSE,
> +        TRUE,
> +        FALSE
> +    },
> +    {
> +        SHGNLI_PIDL | SHGNLI_NOUNIQUE | SHGNLI_PREFIXNAME | SHGNLI_NOLNK,
> +        "Shortcut () to testfile",
> +        "Shortcut () to testfile.lnk",
> +        "Shortcut () to testfile.txt",
> +        FALSE,
> +        TRUE,
> +        FALSE
> +    }
> +};
> +
> +static void test_SHGetNewLinkInfo (void)
> +{
> +    FILE    *testfile_handle;
> +    LPCSTR  testfile_name = "testfile.txt";
> +    LPSTR   shortcut_pidl, shortcut_ptr;
> +    CHAR    shortcut_target[MAX_PATH];
> +    CHAR    shortcut_dir[MAX_PATH];
> +    CHAR    shortcut_name[MAX_PATH];
> +    WCHAR   shortcut_targetW[MAX_PATH];
> +    UINT    flags;
> +    BOOL    ret;
> +    unsigned int index;
> +    BOOL pfMustCopy;
> +
> +    lp_getlink_test_t test_ptr;
> +    CHAR tmp_buf1[MAX_PATH];
> +    CHAR tmp_buf2[MAX_PATH];
> +    CHAR tmp_buf3[MAX_PATH];
> +
> +    testfile_handle = fopen (testfile_name, "w");
> +    if (!testfile_handle || !GetCurrentDirectory (sizeof(shortcut_dir), shortcut_dir) ||
> +          !GetFullPathName (testfile_name, sizeof(shortcut_target), shortcut_target, NULL))
> +    {
> +        skip ("Failed to create a test file or get the current working directory.\n");
> +        goto cleanup;
> +    }
> +    ok (fclose(testfile_handle) == 0, "Could not close testfile.txt.\n");
> +
> +    MultiByteToWideChar(CP_ACP, 0, shortcut_target, -1, shortcut_targetW, MAX_PATH);
> +
> +    /* Get the PIDL of the path */
> +    shortcut_pidl = (LPSTR)pSHSimpleIDListFromPath ((LPCVOID)shortcut_targetW);
> +    ok (shortcut_pidl != NULL, "SHSimpleIDListFromPath failed.\n");
> +    if (shortcut_pidl == NULL)
> +        goto cleanup;
> +
> +    for (index = 0; index < sizeof(getlink_tests)/sizeof(getlink_tests[0]); index++)
> +    {
> +        test_ptr = &getlink_tests[index];
> +        flags = getlink_tests[index].flags;
> +
> +        if (flags & SHGNLI_PIDL)
> +            shortcut_ptr = shortcut_pidl;
> +        else
> +            shortcut_ptr = shortcut_target;
> +
> +        /* Test with all NULL/0 values except for pfMustCopy */
> +        ret = SHGetNewLinkInfoA (NULL, NULL, NULL, &pfMustCopy, flags);
> +        ok (ret == FALSE, "Expected return value of FALSE.\n");
> +        todo_wine ok(pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
> +
> +        /* Test with valid target, NULL shortcut directory and name buffers */
> +        if (test_ptr->skip_crash == FALSE)
> +        {
> +            ret = SHGetNewLinkInfoA (shortcut_ptr, NULL, NULL, &pfMustCopy, flags);
> +            ok (ret == FALSE, "Expected return value of FALSE.\n");
> +            todo_wine ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
> +        }
> +
> +        /* Test with valid shortcut directory, NULL target and name buffers */
> +        ret = SHGetNewLinkInfoA (NULL, shortcut_dir, NULL, &pfMustCopy, flags);
> +        ok (ret == FALSE, "Expected return value of FALSE.\n");
> +        todo_wine ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
> +
> +        /* Test with valid shortcut name and NULL target, shortcut directory buffers */
> +        ret = SHGetNewLinkInfoA (NULL, NULL, shortcut_name, &pfMustCopy, flags);
> +        ok (ret == FALSE, "Expected return value of FALSE.\n");
> +        todo_wine ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
> +
> +        /* Test with valid shortcut directory and name, NULL shortcut target buffer */
> +        ret = SHGetNewLinkInfoA (NULL, shortcut_dir, shortcut_name, &pfMustCopy, flags);
> +        ok (ret == FALSE, "Expected return value of FALSE.\n");
> +        todo_wine ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
> +
> +        /* Test with valid shortcut target and name, NULL shortcut directory buffer */
> +        if (test_ptr->skip_crash == FALSE)
> +        {
> +            memset (shortcut_name, 0, MAX_PATH);
> +            ret = SHGetNewLinkInfoA (shortcut_ptr, NULL, shortcut_name, &pfMustCopy, flags);
> +            todo_wine
> +            {
> +                ok (ret == TRUE, "Expected return value of TRUE.\n");
> +                ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
> +            }
> +
> +            lstrcpyA (tmp_buf1, test_ptr->expected_str_1);
> +            lstrcpyA (tmp_buf2, test_ptr->expected_str_2);
> +            lstrcpyA (tmp_buf3, test_ptr->expected_str_3);
> +
> +            if (test_ptr->todo_str_check)
> +            {
> +                todo_wine
> +                    ok (lstrcmpA (shortcut_name, tmp_buf1) == 0 ||
> +                        lstrcmpA (shortcut_name, tmp_buf2) == 0 ||
> +                        lstrcmpA (shortcut_name, tmp_buf3) == 0,
> +                        "Returned shortcut did not match expected, got: %s\n",
> +                        shortcut_name);
> +            }
> +            else
> +            {
> +                ok (lstrcmpA (shortcut_name, tmp_buf1) == 0 ||
> +                    lstrcmpA (shortcut_name, tmp_buf2) == 0 ||
> +                    lstrcmpA (shortcut_name, tmp_buf3) == 0,
> +                    "Returned shortcut did not match expected, got: %s\n",
> +                    shortcut_name);
> +            }
> +        }
> +
> +        /* Test with valid shortcut directory, target, name buffers */
> +        memset (shortcut_name, 0, MAX_PATH);
> +        ret = SHGetNewLinkInfoA (shortcut_ptr, shortcut_dir, shortcut_name, &pfMustCopy, flags);
> +        todo_wine
> +        {
> +            ok (ret == TRUE, "Expected return value of TRUE.\n");
> +            ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
> +        }
> +
> +        if (test_ptr->use_full_path == TRUE && shortcut_dir != NULL)
> +        {
> +            lstrcpyA (tmp_buf1, shortcut_dir);
> +            lstrcatA (tmp_buf1, "\\");
> +            lstrcpyA (tmp_buf2, tmp_buf1);
> +            lstrcpyA (tmp_buf3, tmp_buf1);
> +
> +            lstrcatA (tmp_buf1, test_ptr->expected_str_1);
> +            lstrcatA (tmp_buf2, test_ptr->expected_str_2);
> +            lstrcatA (tmp_buf3, test_ptr->expected_str_3);
> +        }
> +        else
> +        {
> +            lstrcpyA (tmp_buf1, test_ptr->expected_str_1);
> +            lstrcpyA (tmp_buf2, test_ptr->expected_str_2);
> +            lstrcpyA (tmp_buf3, test_ptr->expected_str_3);
> +        }
> +
> +        if (test_ptr->todo_str_check)
> +        {
> +            todo_wine
> +                ok (lstrcmpA (shortcut_name, tmp_buf1) == 0 ||
> +                    lstrcmpA (shortcut_name, tmp_buf2) == 0 ||
> +                    lstrcmpA (shortcut_name, tmp_buf3) == 0,
> +                    "Returned shortcut did not match expected, got: %s\n",
> +                    shortcut_name);
> +        }
> +        else
> +        {
> +            ok (lstrcmpA (shortcut_name, tmp_buf1) == 0 ||
> +                lstrcmpA (shortcut_name, tmp_buf2) == 0 ||
> +                lstrcmpA (shortcut_name, tmp_buf3) == 0,
> +                "Returned shortcut did not match expected, got: %s\n",
> +                shortcut_name);
> +        }
> +    }
> +
> + cleanup:
> +    ret = DeleteFileA (shortcut_target);
> +    ok (ret == TRUE, "Failed to delete %s\n", shortcut_target);
> +}
> +
> +
> +START_TEST(shellord)
> +{
> +    HRESULT r;
> +    HMODULE hmod = GetModuleHandleA("shell32.dll");
> +
> +    pSHGetNewLinkInfoA = (void *) GetProcAddress(hmod, (LPSTR)179);
> +    pSHSimpleIDListFromPath = (void *) GetProcAddress(hmod, (LPSTR)162);
> +
> +    if (!pSHSimpleIDListFromPath)
> +    {
> +        skip("Unable to get process address for SHSimpleIDListFromPath.\n");
> +        return;
> +    }
> +    if (!pSHGetNewLinkInfoA)
> +    {
> +        skip("Unable to get process address for SHGetNewLinkInfoA.\n");
> +        return;
> +    }
> +
> +
> +    r = CoInitialize(NULL);
> +    ok (SUCCEEDED(r), "CoInitialize failed (0x%08x)\n", r);
> +    if (!SUCCEEDED(r))
> +        return;
> +
> +    test_SHGetNewLinkInfo();
> +
> +    CoUninitialize();
> +}
> 
> 
> ------------------------------------------------------------------------
> 
> 


Ignore this patch, will resend a fixed one later.


From zac at zacbrown.org  Wed Jul  2 14:20:31 2008
From: zac at zacbrown.org (Zac Brown)
Date: Wed, 02 Jul 2008 12:20:31 -0700
Subject: shell32: shellord.c: Implement SHGetNewLinkInfo[AW]. Fixes Bug
	8082.
In-Reply-To: <486BD3D1.60400@zacbrown.org>
References: <486BD3D1.60400@zacbrown.org>
Message-ID: <486BD4FF.3030009@zacbrown.org>

Zac Brown wrote:
> Implement SHGetNewLinkInfo[AW].
> 
> Fixes Bug 8082 (http://bugs.winehq.org/show_bug.cgi?id=8082)
> 
> Changes:
> * Implement SHGetNewLinkInfo[AW]
> * Update tests
> 
> 
> ------------------------------------------------------------------------
> 
> ---
>  dlls/shell32/shellord.c       |  255 ++++++++++++++++++++++++++++++++++++++++-
>  dlls/shell32/tests/shellord.c |   40 +++----
>  2 files changed, 269 insertions(+), 26 deletions(-)
> 
> diff --git a/dlls/shell32/shellord.c b/dlls/shell32/shellord.c
> index 5d1666b..5b1f824 100644
> --- a/dlls/shell32/shellord.c
> +++ b/dlls/shell32/shellord.c
> @@ -4,6 +4,7 @@
>   *
>   * Copyright 1997 Marcus Meissner
>   *           1998 J?rgen Schmied
> + *           2008 Google (Zac Brown)
>   *
>   * This library is free software; you can redistribute it and/or
>   * modify it under the terms of the GNU Lesser General Public
> @@ -1899,22 +1900,270 @@ BOOL WINAPI SHObjectProperties(HWND hwnd, DWORD dwType, LPCWSTR szObject, LPCWST
>      return TRUE;
>  }
>  
> +/*************************************************************************
> + *       SHGetNewLinkInfoA [SHELL32.179]
> + *
> + * See SHGetNewLinkInfoW
> + */
>  BOOL WINAPI SHGetNewLinkInfoA(LPCSTR pszLinkTo, LPCSTR pszDir, LPSTR pszName, BOOL *pfMustCopy,
>                                UINT uFlags)
>  {
> -    FIXME("%s, %s, %p, %p, 0x%08x - stub\n", debugstr_a(pszLinkTo), debugstr_a(pszDir),
> +    BOOL ret;
> +    CHAR  pathA[MAX_PATH];
> +    WCHAR pszLinkToW[MAX_PATH];
> +    WCHAR pszDirW[MAX_PATH];
> +    WCHAR pszNameW[MAX_PATH];
> +    LPSTR tmp_ptr;
> +
> +    TRACE("%s, %s, %p, %p, 0x%08x - stub\n", debugstr_a(pszLinkTo), debugstr_a(pszDir),
>            pszName, pfMustCopy, uFlags);
>  
> +    if (pszLinkTo == NULL || pszName == NULL)
> +        return FALSE;
> +
> +    if (uFlags & SHGNLI_PIDL)
> +    {
> +        if (SHGetPathFromIDListA (pszLinkTo, pathA) == FALSE)
> +            return FALSE;
> +        tmp_ptr = pathA;
> +    }
> +    else
> +        tmp_ptr = pszLinkTo;
> +
> +
> +    if (MultiByteToWideChar(CP_ACP, 0, pszName, -1, pszNameW, MAX_PATH) == 0 ||
> +        MultiByteToWideChar(CP_ACP, 0, tmp_ptr, -1, pszLinkToW, MAX_PATH) == 0)
> +        return FALSE;
> +
> +    if (pszDir != NULL)
> +    {
> +        if (MultiByteToWideChar(CP_ACP, 0, pszDir, -1, pszDirW, MAX_PATH) == 0)
> +            return FALSE;
> +        ret = SHGetNewLinkInfoW (pszLinkToW, pszDirW, pszNameW, pfMustCopy, uFlags);
> +    }
> +    else
> +        ret = SHGetNewLinkInfoW (pszLinkToW, NULL, pszNameW, pfMustCopy, uFlags);
> +
> +    if (WideCharToMultiByte(CP_ACP, 0, pszNameW, -1, pszName, MAX_PATH, 0, 0) && ret == TRUE)
> +        return ret;
> +
>      return FALSE;
>  }
>  
> +/*****************************************************************************************
> + * [INTERNAL]
> + * confirm_link_unique: Check if a supplied shortcut name is unique
> + *                      within a directory and if not, generate one
> + *                      that is for SHGetNewLinkInfoW.
> + *
> + * PARAMS
> + *  directory      [I] Directory to check for duplicates in
> + *  filename       [I] Name of file that a link is being made to
> + *  flags          [I] Flags passed to SHGetNewLinkInfoW
> + *  shortcut_name  [I/O] Shortcut name to check for. Could be modified
> + *                       if needed.
> + *  name_updated   [O] Set to true when the name of the shortcut has
> + *                     been updated.
> + *
> + * RETURNS
> + *  Success: TRUE - The function successfully completed
> + *  Failure: FALSE - The function was unable to complete its task
> + */
> +
> +static BOOL confirm_link_unique(LPCWSTR directory, LPCWSTR filename, UINT flags, LPWSTR shortcut_name)
> +{
> +    static const WCHAR search_pattern[] = {'\\','*',0};
> +    static const WCHAR prefix_start[] = {'S','h','o','r','t','c','u','t',' ',0};
> +    static const WCHAR lnk_extension[] = {'.','l','n','k',0};
> +    static const WCHAR prefix_format[] = {'S','h','o','r','t','c','u','t',' ','(','%','d',')',' ','t','o',' ','%','s',0};
> +    static const WCHAR no_prefix_format[] = {'%','s',' ','(','%','d',')',0};
> +    WCHAR filename_noext[MAX_PATH];
> +    WCHAR tmp_buf[MAX_PATH];
> +    WCHAR *tmp_ptr, *tmp_ptr2;
> +    HANDLE h;
> +    WIN32_FIND_DATAW find_data;
> +    long shortcut_num = 1;
> +
> +    /* Get name of file without the file extension */
> +    tmp_ptr = strrchrW (filename, '.');
> +    if (tmp_ptr != NULL)
> +    {
> +        if (lstrcpynW (filename_noext, filename, (tmp_ptr - filename)*sizeof(WCHAR)) == NULL)
> +            return FALSE;
> +    }
> +    else
> +        lstrcpyW (filename_noext, filename);
> +
> +    if (directory != NULL)
> +    {
> +        if (lstrcpyW (tmp_buf, directory) == NULL)
> +            return FALSE;
> +    }
> +    else
> +    {
> +        if (GetCurrentDirectoryW (MAX_PATH, tmp_buf) == 0)
> +            return FALSE;
> +    }
> +
> +    if (lstrcatW (tmp_buf, search_pattern) == NULL)
> +        return FALSE;
> +
> +    h = FindFirstFileW (tmp_buf, &find_data);
> +    if (h == INVALID_HANDLE_VALUE)
> +        return FALSE;
> +
> +    while (FindNextFileW (h, &find_data))
> +    {
> +        /* Skip if the filename doesn't even contain our shortcut's
> +           target filename */
> +        if (StrStrW (find_data.cFileName, filename_noext) == NULL)
> +            continue;
> +
> +        /* Skip if the prefix name flag is set, but no prefix is found
> +           in the file's name. */
> +        if (flags & SHGNLI_PREFIXNAME)
> +        {
> +            if (StrStrW (find_data.cFileName, prefix_start) == NULL)
> +                continue;
> +        }
> +
> +        if(lstrcmpW (find_data.cFileName, shortcut_name) == 0)
> +            shortcut_num++;
> +        else
> +        {
> +            tmp_ptr = strchrW (find_data.cFileName, '(');
> +            tmp_ptr2 = strchrW (find_data.cFileName, ')');
> +            if (tmp_ptr && tmp_ptr2)
> +            {
> +                tmp_ptr++;
> +                tmp_ptr2++;
> +                lstrcpynW (tmp_buf, tmp_ptr, tmp_ptr2 - tmp_ptr);
> +                shortcut_num = wcstol(tmp_buf, &tmp_buf[lstrlenW(tmp_buf)-1], 0) + 1;
> +            }
> +        }
> +    }
> +
> +    FindClose (h);
> +
> +    if (shortcut_num > 1)
> +    {
> +        if (flags & SHGNLI_PREFIXNAME)
> +        {
> +            sprintfW (shortcut_name, prefix_format, shortcut_num, filename);
> +        }
> +        else
> +        {
> +            lstrcpyW (shortcut_name, filename);
> +            wsprintfW (shortcut_name, no_prefix_format, filename, shortcut_num);
> +        }
> +
> +        if ((flags & SHGNLI_NOLNK) == 0)
> +            lstrcatW (shortcut_name, lnk_extension);
> +    }
> +
> +    return TRUE;
> +}
> +
> +/*************************************************************************
> + *       SHGetNewLinkInfoW [SHELL32.180]
> + *
> + * Creates the proper name for a new shortcut. This function does not
> + * actually create a shortcut.
> + */
>  BOOL WINAPI SHGetNewLinkInfoW(LPCWSTR pszLinkTo, LPCWSTR pszDir, LPWSTR pszName, BOOL *pfMustCopy,
>                                UINT uFlags)
>  {
> -    FIXME("%s, %s, %p, %p, 0x%08x - stub\n", debugstr_w(pszLinkTo), debugstr_w(pszDir),
> +    static const WCHAR prefix_start[] = {'S', 'h', 'o', 'r', 't', 'c', 'u', 't', ' ', 't', 'o', ' ', 0};
> +    static const WCHAR prefix_start_nounique[] =
> +        {'S', 'h', 'o', 'r', 't', 'c', 'u', 't', ' ', '(', ')', ' ', 't', 'o', ' ', 0};
> +    static const WCHAR link_extension[] = {'.', 'l', 'n', 'k', 0};
> +    static const WCHAR back_slash[] = {'\\',0};
> +    WCHAR target[MAX_PATH];
> +    WCHAR shortcut_name[MAX_PATH];
> +    WCHAR file_name[MAX_PATH];
> +    LPCWSTR tmp_ptr;
> +    SHFILEINFOW file_info;
> +    BOOL shortcut_name_updated;
> +
> +    TRACE("%s, %s, %p, %p, 0x%08x - stub\n", debugstr_w(pszLinkTo), debugstr_w(pszDir),
>            pszName, pfMustCopy, uFlags);
>  
> -    return FALSE;
> +    if (pfMustCopy)
> +        *pfMustCopy = FALSE;
> +    else
> +        return FALSE;
> +
> +    if (pszLinkTo == NULL || pszName == NULL)
> +        return FALSE;
> +
> +    if (uFlags & SHGNLI_PIDL)
> +    {
> +        if (SHGetPathFromIDListW (pszLinkTo, target) == FALSE)
> +            return FALSE;
> +    }
> +    else
> +    {
> +        if (lstrcpyW (target, pszLinkTo) == NULL)
> +            return FALSE;
> +    }
> +
> +    /* Determine the file's name. */
> +    tmp_ptr = strrchrW (target, '\\');
> +    if (tmp_ptr != NULL)
> +        tmp_ptr++;
> +    else
> +        tmp_ptr = target;
> +
> +    lstrcpyW (file_name, tmp_ptr);
> +
> +    if (uFlags & SHGNLI_NOUNIQUE)
> +        tmp_ptr = prefix_start_nounique;
> +    else
> +        tmp_ptr = prefix_start;
> +
> +    /* Begin checking against flags and generating the shortcut name. */
> +    if (uFlags & SHGNLI_PREFIXNAME)
> +    {
> +        lstrcpyW (shortcut_name, tmp_ptr);
> +        lstrcatW (shortcut_name, file_name);
> +    }
> +    else
> +        lstrcpyW (shortcut_name, file_name);
> +
> +    if ((uFlags & SHGNLI_NOLNK) == 0)
> +        lstrcatW (shortcut_name, link_extension);
> +
> +    /* Check if we need to generate a unique name. */
> +    if (lstrcmpW (shortcut_name, file_name) == 0 && !(uFlags & (SHGNLI_NOLNK | SHGNLI_NOUNIQUE)))
> +    {
> +        if (confirm_link_unique (pszDir, file_name, uFlags, shortcut_name) == FALSE)
> +            return FALSE;
> +    }
> +
> +    if (!(uFlags & SHGNLI_NOUNIQUE))
> +    {
> +        if (confirm_link_unique (pszDir, file_name, uFlags, shortcut_name) == FALSE)
> +            return FALSE;
> +    }
> +
> +    if (pszDir != NULL && (uFlags & SHGNLI_NOUNIQUE) == 0)
> +    {
> +        lstrcpyW (pszName, pszDir);
> +        lstrcatW (pszName, back_slash);
> +        lstrcatW (pszName, shortcut_name);
> +    }
> +    else
> +        lstrcpyW (pszName, shortcut_name);
> +
> +    if (SHGetFileInfoW (target, 0, &file_info, sizeof(file_info), SHGFI_ATTRIBUTES))
> +    {
> +        if (file_info.dwAttributes & SFGAO_LINK)
> +            *pfMustCopy = TRUE;
> +        else
> +            *pfMustCopy = FALSE;
> +    }
> +
> +    return TRUE;
>  }
>  
>  HRESULT WINAPI SHStartNetConnectionDialog(HWND hwnd, LPCSTR pszRemoteName, DWORD dwType)
> diff --git a/dlls/shell32/tests/shellord.c b/dlls/shell32/tests/shellord.c
> index f5ae1bd..423ed7d 100644
> --- a/dlls/shell32/tests/shellord.c
> +++ b/dlls/shell32/tests/shellord.c
> @@ -57,7 +57,7 @@ static const getlink_test_t getlink_tests[] = {
>          "testfile.lnk",
>          "testfile.txt.lnk",
>          TRUE,
> -        TRUE,
> +        FALSE,
>          FALSE
>      },
>      {
> @@ -75,7 +75,7 @@ static const getlink_test_t getlink_tests[] = {
>          "testfile.lnk",
>          "testfile.txt.lnk",
>          FALSE,
> -        TRUE,
> +        FALSE,
>          FALSE
>      },
>      {
> @@ -84,7 +84,7 @@ static const getlink_test_t getlink_tests[] = {
>          "Shortcut to testfile.lnk",
>          "Shortcut to testfile.txt.lnk",
>          TRUE,
> -        TRUE,
> +        FALSE,
>          TRUE
>      },
>      {
> @@ -93,7 +93,7 @@ static const getlink_test_t getlink_tests[] = {
>          "testfile.lnk",
>          "testfile.txt (2)",
>          TRUE,
> -        TRUE,
> +        FALSE,
>          FALSE
>      },
>      {
> @@ -129,7 +129,7 @@ static const getlink_test_t getlink_tests[] = {
>          "Shortcut () to testfile.lnk",
>          "Shortcut () to testfile.txt.lnk",
>          FALSE,
> -        TRUE,
> +        FALSE,
>          FALSE
>      },
>      {
> @@ -138,7 +138,7 @@ static const getlink_test_t getlink_tests[] = {
>          "testfile.lnk",
>          "testfile.txt",
>          FALSE,
> -        TRUE,
> +        FALSE,
>          FALSE
>      },
>      {
> @@ -147,7 +147,7 @@ static const getlink_test_t getlink_tests[] = {
>          "Shortcut to testfile.lnk",
>          "Shortcut to testfile.txt",
>          TRUE,
> -        TRUE,
> +        FALSE,
>          TRUE
>      },
>      {
> @@ -174,7 +174,7 @@ static const getlink_test_t getlink_tests[] = {
>          "Shortcut () to testfile.lnk",
>          "Shortcut () to testfile.txt",
>          FALSE,
> -        TRUE,
> +        FALSE,
>          FALSE
>      },
>      {
> @@ -237,41 +237,38 @@ static void test_SHGetNewLinkInfo (void)
>          /* Test with all NULL/0 values except for pfMustCopy */
>          ret = SHGetNewLinkInfoA (NULL, NULL, NULL, &pfMustCopy, flags);
>          ok (ret == FALSE, "Expected return value of FALSE.\n");
> -        todo_wine ok(pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
> +        ok(pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
>  
>          /* Test with valid target, NULL shortcut directory and name buffers */
>          if (test_ptr->skip_crash == FALSE)
>          {
>              ret = SHGetNewLinkInfoA (shortcut_ptr, NULL, NULL, &pfMustCopy, flags);
>              ok (ret == FALSE, "Expected return value of FALSE.\n");
> -            todo_wine ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
> +            ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
>          }
>  
>          /* Test with valid shortcut directory, NULL target and name buffers */
>          ret = SHGetNewLinkInfoA (NULL, shortcut_dir, NULL, &pfMustCopy, flags);
>          ok (ret == FALSE, "Expected return value of FALSE.\n");
> -        todo_wine ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
> +        ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
>  
>          /* Test with valid shortcut name and NULL target, shortcut directory buffers */
>          ret = SHGetNewLinkInfoA (NULL, NULL, shortcut_name, &pfMustCopy, flags);
>          ok (ret == FALSE, "Expected return value of FALSE.\n");
> -        todo_wine ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
> +        ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
>  
>          /* Test with valid shortcut directory and name, NULL shortcut target buffer */
>          ret = SHGetNewLinkInfoA (NULL, shortcut_dir, shortcut_name, &pfMustCopy, flags);
>          ok (ret == FALSE, "Expected return value of FALSE.\n");
> -        todo_wine ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
> +        ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
>  
>          /* Test with valid shortcut target and name, NULL shortcut directory buffer */
>          if (test_ptr->skip_crash == FALSE)
>          {
>              memset (shortcut_name, 0, MAX_PATH);
>              ret = SHGetNewLinkInfoA (shortcut_ptr, NULL, shortcut_name, &pfMustCopy, flags);
> -            todo_wine
> -            {
> -                ok (ret == TRUE, "Expected return value of TRUE.\n");
> -                ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
> -            }
> +            ok (ret == TRUE, "Expected return value of TRUE.\n");
> +            ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
>  
>              lstrcpyA (tmp_buf1, test_ptr->expected_str_1);
>              lstrcpyA (tmp_buf2, test_ptr->expected_str_2);
> @@ -299,11 +296,8 @@ static void test_SHGetNewLinkInfo (void)
>          /* Test with valid shortcut directory, target, name buffers */
>          memset (shortcut_name, 0, MAX_PATH);
>          ret = SHGetNewLinkInfoA (shortcut_ptr, shortcut_dir, shortcut_name, &pfMustCopy, flags);
> -        todo_wine
> -        {
> -            ok (ret == TRUE, "Expected return value of TRUE.\n");
> -            ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
> -        }
> +        ok (ret == TRUE, "Expected return value of TRUE.\n");
> +        ok (pfMustCopy == FALSE, "Expected pfMustCopy to be FALSE.\n");
>  
>          if (test_ptr->use_full_path == TRUE && shortcut_dir != NULL)
>          {
> 
> 
> ------------------------------------------------------------------------
> 
> 

Ignore this patch, will send a fixed on in a minute.


From zac at zacbrown.org  Wed Jul  2 15:34:32 2008
From: zac at zacbrown.org (Zac Brown)
Date: Wed, 02 Jul 2008 13:34:32 -0700
Subject: winhttp: include/winhttp.h: Add more #define's for options
In-Reply-To: <486BDDA0.7000009@zacbrown.org>
References: <486BDDA0.7000009@zacbrown.org>
Message-ID: <486BE658.9040105@zacbrown.org>

Zac Brown wrote:
> Add more #define's for options used in WinHttpOpenRequest, 
> WinHttpSendRequest, and WinHttp{Set/Query}Options.
> 
> 
> ------------------------------------------------------------------------
> 
> ---
>  include/winhttp.h |   66 +++++++++++++++++++++++++++++++++++++++++++++++++++++
>  1 files changed, 66 insertions(+), 0 deletions(-)
> 
> diff --git a/include/winhttp.h b/include/winhttp.h
> index ef2caff..e816c82 100644
> --- a/include/winhttp.h
> +++ b/include/winhttp.h
> @@ -62,6 +62,72 @@ typedef int INTERNET_SCHEME, *LPINTERNET_SCHEME;
>  
>  #define ERROR_WINHTTP_AUTODETECTION_FAILED     (WINHTTP_ERROR_BASE + 180)
>  
> +/* Flags for WinHttp{Set/Query}Options */
> +#define WINHTTP_FIRST_OPTION                         WINHTTP_OPTION_CALLBACK
> +#define WINHTTP_OPTION_CALLBACK                       1
> +#define WINHTTP_OPTION_RESOLVE_TIMEOUT                2
> +#define WINHTTP_OPTION_CONNECT_TIMEOUT                3
> +#define WINHTTP_OPTION_CONNECT_RETRIES                4
> +#define WINHTTP_OPTION_SEND_TIMEOUT                   5
> +#define WINHTTP_OPTION_RECEIVE_TIMEOUT                6
> +#define WINHTTP_OPTION_RECEIVE_RESPONSE_TIMEOUT       7
> +#define WINHTTP_OPTION_HANDLE_TYPE                    9
> +#define WINHTTP_OPTION_READ_BUFFER_SIZE              12
> +#define WINHTTP_OPTION_WRITE_BUFFER_SIZE             13
> +#define WINHTTP_OPTION_PARENT_HANDLE                 21
> +#define WINHTTP_OPTION_EXTENDED_ERROR                24
> +#define WINHTTP_OPTION_SECURITY_FLAGS                31
> +#define WINHTTP_OPTION_SECURITY_CERTIFICATE_STRUCT   32
> +#define WINHTTP_OPTION_URL                           34
> +#define WINHTTP_OPTION_SECURITY_KEY_BITNESS          36
> +#define WINHTTP_OPTION_PROXY                         38
> +#define WINHTTP_OPTION_USER_AGENT                    41
> +#define WINHTTP_OPTION_CONTEXT_VALUE                 45
> +#define WINHTTP_OPTION_CLIENT_CERT_CONTEXT           47
> +#define WINHTTP_OPTION_REQUEST_PRIORITY              58
> +#define WINHTTP_OPTION_HTTP_VERSION                  59
> +#define WINHTTP_OPTION_DISABLE_FEATURE               63
> +#define WINHTTP_OPTION_CODEPAGE                      68
> +#define WINHTTP_OPTION_MAX_CONNS_PER_SERVER          73
> +#define WINHTTP_OPTION_MAX_CONNS_PER_1_0_SERVER      74
> +#define WINHTTP_OPTION_AUTOLOGON_POLICY              77
> +#define WINHTTP_OPTION_SERVER_CERT_CONTEXT           78
> +#define WINHTTP_OPTION_ENABLE_FEATURE                79
> +#define WINHTTP_OPTION_WORKER_THREAD_COUNT           80
> +#define WINHTTP_OPTION_PASSPORT_COBRANDING_TEXT      81
> +#define WINHTTP_OPTION_PASSPORT_COBRANDING_URL       82
> +#define WINHTTP_OPTION_CONFIGURE_PASSPORT_AUTH       83
> +#define WINHTTP_OPTION_SECURE_PROTOCOLS              84
> +#define WINHTTP_OPTION_ENABLETRACING                 85
> +#define WINHTTP_OPTION_PASSPORT_SIGN_OUT             86
> +#define WINHTTP_OPTION_PASSPORT_RETURN_URL           87
> +#define WINHTTP_OPTION_REDIRECT_POLICY               88
> +#define WINHTTP_OPTION_MAX_HTTP_AUTOMATIC_REDIRECTS  89
> +#define WINHTTP_OPTION_MAX_HTTP_STATUS_CONTINUE      90
> +#define WINHTTP_OPTION_MAX_RESPONSE_HEADER_SIZE      91
> +#define WINHTTP_OPTION_MAX_RESPONSE_DRAIN_SIZE       92
> +#define WINHTTP_OPTION_CONNECTION_INFO               93
> +#define WINHTTP_OPTION_CLIENT_CERT_ISSUER_LIST       94
> +#define WINHTTP_OPTION_SPN                           96
> +#define WINHTTP_OPTION_GLOBAL_PROXY_CREDS            97
> +#define WINHTTP_OPTION_GLOBAL_SERVER_CREDS           98
> +#define WINHTTP_OPTION_UNLOAD_NOTIFY_EVENT           99
> +#define WINHTTP_OPTION_REJECT_USERPWD_IN_URL         100
> +#define WINHTTP_OPTION_USE_GLOBAL_SERVER_CREDENTIALS 101
> +#define WINHTTP_LAST_OPTION                          WINHTTP_OPTION_USE_GLOBAL_SERVER_CREDENTIALS
> +#define WINHTTP_OPTION_USERNAME                      0x1000
> +#define WINHTTP_OPTION_PASSWORD                      0x1001
> +#define WINHTTP_OPTION_PROXY_USERNAME                0x1002
> +#define WINHTTP_OPTION_PROXY_PASSWORD                0x1003
> +
> +/* Option "prettifiers" for WinHttpOpenRequest */
> +#define WINHTTP_NO_REFERER             NULL
> +#define WINHTTP_DEFAULT_ACCEPT_TYPES   NULL
> +
> +/* Option "prettifiers" for WinHttpSendRequest */
> +#define WINHTTP_NO_ADDITIONAL_HEADERS   NULL
> +#define WINHTTP_NO_REQUEST_DATA         NULL
> +
>  typedef struct
>  {
>      DWORD   dwStructSize;
> 
> 
> ------------------------------------------------------------------------
> 
> 

Ignore this, bad comments.


From robertshearman at gmail.com  Wed Jul  2 16:34:18 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 2 Jul 2008 22:34:18 +0100
Subject: EnterCriticalSection throws exception?
In-Reply-To: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>
References: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>
Message-ID: <1096648c0807021434u1f90732bo212e787a27b5e862@mail.gmail.com>

2008/7/2 Huang, Zhangrong <hzhrong at gmail.com>:
...
> On some conditions, a thread does
> need hold critical section more than 65 seconds, for example: wine's
> implementation of GetAddress uses a critical section to protect
> non-reentrant gethostbyname() (well maybe need another
> gethostbyname_r() patch),  see dlls/wininet/utility.c
> As you can see, gethostbyname() may take longtime when DNS setting is
> wrong or network is broken. If a multi-thread app calls GetAddress
> simultaneous in many threads, the app will crash.

A bit of lateral thinking is needed, I feel, since contention between
threads is going to be an issue even if the lock doesn't time out. The
wininet code should be converted to using getaddrinfo and as a bonus
it will also start supporting IPv6 hosts.

-- 
Rob Shearman


From robertshearman at gmail.com  Wed Jul  2 16:43:32 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 2 Jul 2008 22:43:32 +0100
Subject: Tests and Valgrinding
In-Reply-To: <a71bd89a0807020831k69fc6660u47f11785a756cc63@mail.gmail.com>
References: <a71bd89a0807020831k69fc6660u47f11785a756cc63@mail.gmail.com>
Message-ID: <1096648c0807021443t38663eb7sef4a8d367976335c@mail.gmail.com>

2008/7/2 Dan Kegel <dank at kegel.com>:
> Zachary Goldberg wrote:
>> Also, Dan Kegel has been extraordinarily diligent in valgrinding of
>> late (/applause) and I just wanted to ask if we're doing anything to
>> support him?
>
> A few people are starting to run Valgrind themselves.
> How about this: if you ever post a patch that causes a
> valgrind warning, you send yourself to valgrind jail for a month,
> and valgrind every patch you write before you send it in...

While I find Valgrind a very useful tool, not all of us are on
platforms that Valgrind supports. However, I'm happy to receive emails
about new Valgrind warnings from either Dan himself or from an
automated tool directed to a mailing list.

>> perhaps making Valgrind-passing a requirement (along
>> with not breaking tests) for being committed.  I think perhaps
>> we should take a look at this and seriously consider implementing it.
>
> As a first step, James and I could (along with posting the errors
> to wine-devel) also post patches to revert the guilty changes.
> (And if we do it quickly enough, perhaps Alexandre can
> do the revert on the same day...)
> Then the author could fix and resubmit.
> How's that sound?

Some Valgrind warnings are already present in base code and are only
triggered by new code or new tests. Reverting these type of patches
would be wrong IMHO, although every effort should be made to correct
the warning.

-- 
Rob Shearman


From robertshearman at gmail.com  Wed Jul  2 16:51:02 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 2 Jul 2008 22:51:02 +0100
Subject: Fallback from RPC_C_AUTHN_GSS_NEGOTIATE to RPC_C_AUTHN_WINNT if
	no SPNEGO package available
In-Reply-To: <81a474f0807020451s6ab83cf0he24b84ea6b6bf6c6@mail.gmail.com>
References: <81a474f0807011110k66f669afp77ce5d42d7c08839@mail.gmail.com>
	<1096648c0807020301l3940e7a5g7627ee8f878ae824@mail.gmail.com>
	<81a474f0807020451s6ab83cf0he24b84ea6b6bf6c6@mail.gmail.com>
Message-ID: <1096648c0807021451s5403b2a5x7fb20c33c1914433@mail.gmail.com>

2008/7/2 Stefan Kuhr <winesku at googlemail.com>:
> Hello rob,
>
> On 7/2/08, Rob Shearman <robertshearman at gmail.com> wrote:
>> <snip>
>> That may be so, but it won't work for servers that only register the
>> RPC_C_AUTHN_GSS_NEGOTIATE authentication scheme. So the patch should
>> include a FIXME to warn users about this. Otherwise, the patch is
>> fine.
>
> Good to hear you think the patch could be accepted with a minor
> modification. However, with "servers that only register the
> RPC_C_AUTHN_GSS_NEGOTIATE authentication scheme", do you refer to an
> RPC server that makes a single call to RpcServerRegisterAuthInfo(..,
> RPC_C_AUTHN_GSS_NEGOTIATE,...)? If so, I assume you are wrong: I just
> made a test between two XP boxes in a non-domain environment and the
> server did a single call to RpcServerRegisterAuthInfo with
> RPC_C_AUTHN_GSS_NEGOTIATE. The client successully invoked an RPC on
> the server after having called RpcBindingSetAuthInfoEx with
> RPC_C_AUTHN_GSS_NEGOTIATE. However, if I change the server's code so
> it makes a single call to RpcServerRegisterAuthInfo with
> RPC_C_AUTHN_GSS_KERBEROS, the client fails with 1747
> (RPC_S_UNKNOWN_AUTHN_SERVICE), but not in the call to
> RpcBindingSetAuthInfo but instead as the return value from the RPC
> that it calls immediately after RpcBindingSetAuthInfo.
>
> So I think, it is not the responsibility of RpcBindingSetAuthInfoEx at
> this point to deal with a server only accepting Kerberos or Negotiate.
> Without knowing really too much how Windows actually implements this,
> my guts tell me that this is then the server's responsibility to
> reject a connection during the SSPI handshake which in WINE's code
> immediately follows the code that my patch would insert into
> RpcBindingSetAuthInfoEx
>
> What do you think?

Interesting analysis and I'm sure you're right. However, the patch is
still making up for a deficiency in another piece of code so it either
needs a FIXME comment or a fixme to be printed to the debug log.

-- 
Rob Shearman


From robertshearman at gmail.com  Wed Jul  2 16:56:51 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 2 Jul 2008 22:56:51 +0100
Subject: Thoughts on implementation of winhttp.dll
In-Reply-To: <486A88A6.1040905@zacbrown.org>
References: <486A88A6.1040905@zacbrown.org>
Message-ID: <1096648c0807021456g7ecc0ea9g429d05f4d77854a6@mail.gmail.com>

2008/7/1 Zac Brown <zac at zacbrown.org>:
> I've been looking at implementing winhttp.dll.
>
> My current two ideas are to either:
> 1) Copy the networking sublayer from wininet into winhttp and build on top of
> that to implement winhttp. Effectively reimplementing mostly from scratch.
>
> 2) Implement most winhttp things in terms of wininet and then copying over parts
> that I need from wininet's network sublayer, like fetching SSL certificates and
> so on.

How about:
3) Copy the networking sublayer from wininet into winhttp and build on top of
 that to implement winhttp. Reimplement wininet on top of winhttp.

-- 
Rob Shearman


From dylan.ah.smith at gmail.com  Wed Jul  2 17:03:10 2008
From: dylan.ah.smith at gmail.com (Dylan Smith)
Date: Wed, 2 Jul 2008 18:03:10 -0400
Subject: richedit: do not read actual scrollbar state for scrollbar update,
	use internal state instead
In-Reply-To: <486BBB77.8040206@palosanto.com>
References: <4869489D.90404@palosanto.com> <486BBB77.8040206@palosanto.com>
Message-ID: <5c6ee3b70807021503n15efbf79s80921c1f44c4875c@mail.gmail.com>

On Wed, Jul 2, 2008 at 1:31 PM, Alex Villac??s Lasso
<a_villacis at palosanto.com> wrote:
>
> Alex Villac??s Lasso escribi?:
> > This is supposed to be a fix for bug #12311 . This bug involves a
> > recursive message loop where the application forces visibility of
> > scrollbars for the richedit control, which causes a WM_SIZE that
> > triggers an update of the window size and re-hiding of the scrollbar.
> > However, just after exiting the richedit winproc, the app forces
> > visibility again, which again triggers a WM_SIZE, and so on. Native is
> > oblivious to the fact that an external agent is messing with the
> > scrollbar visibility, and is therefore unaffected by recursion. This
> > patch attempts to fix this behavior in builtin and test for it. I have
> > tried to test it on WinXP-SP2 and Win98, but testing on other
> > platforms is helpful too.
> >
> > Changelog:
> > * Use internal copy of scrollbar state instead of directly reading
> > state from scrollbars, just as native does.
> > * Tests for ability to externally modify scrollbars.
> > * Test for behavior that caused recursion until builtin richedit was
> > fixed.
> >
> > ------------------------------------------------------------------------
> >
> Nobody has commented on this patch. Is this the wrong strategy to solve
> the problem? Or are tests failing in some other platform? Copy of patch
> at bug #12311 with downloadable app to test.
>

I am wondering if the following is related.

Repeat the following steps with native and buildin wordpad:
1. Open up Wine's word
2. Type/Paste in a lot of lines of text
3. Put the cursor at the end of the text
3. Now increase the height of the window, but not to the point where
all the text is shown and the scrollbar disappears.

With native richedit you will notice the text stays in place and more
space will appear at the bottom past the end of the text.

With builtin richedit you will notice that the text will be scrolled down.

This might show that the scroll position is stored for the richedit
control but it might also show that there are differences as to how
WM_SIZE is handled which lead to the bug.

I haven't looked into it enough to figure it out, but I hope that helps.


From robertshearman at gmail.com  Wed Jul  2 17:04:49 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Wed, 2 Jul 2008 23:04:49 +0100
Subject: start/stop logs by code... is it possible ?
In-Reply-To: <g4e7i1$l3s$1@ger.gmane.org>
References: <g4e7i1$l3s$1@ger.gmane.org>
Message-ID: <1096648c0807021504i7d4460a7t23da9674a7516157@mail.gmail.com>

2008/7/1 Massimo Del Fedele <max at veneto.com>:
> I'd like to start some trace log entering a function and stopping it at
> exit, to isolate just the part I need. Is it possible to add some code
> inside the function body that do it ?
>
> I mean...
>
> void aWineFunction(...)
> {
>   .......
>   STARTLOG
>   .......
>   .......
>   STOPLOG
>
>   .......
>
> }
>
> The purpose is to isolate traces from code called by a single function.

Try these untested macros:

#define STARTLOG(dbch) ((_wine_dbch_##dbch).flags |= (1 << __WINE_DBCL_TRA
CE))
#define STOPLOG(dbch) ((_wine_dbch_##dbch).flags &= ~(1 << __WINE_DBCL_TRA
CE))

And then use them like this:
void aWineFunction(...)
{
  .......
  STARTLOG(relay)
  .......
  .......
  STOPLOG(relay)

  .......
}


-- 
Rob Shearman


From thestig at google.com  Wed Jul  2 17:22:36 2008
From: thestig at google.com (Lei Zhang)
Date: Wed, 2 Jul 2008 15:22:36 -0700
Subject: gdi32: Implement automatic font substitution
In-Reply-To: <897160440807020934r61fcf047x12a4fd3e0ce5edaf@mail.gmail.com>
References: <a71bd89a0807011211w296aef7dy528fde025dc832e5@mail.gmail.com>
	<897160440807011739p79023217se37e719c819bc296@mail.gmail.com>
	<b4cc5a3d0807020559r1e695cdexd14c9a3c2c05099a@mail.gmail.com>
	<897160440807020700o3ff49ea9q780989d3ce7f65f1@mail.gmail.com>
	<b4cc5a3d0807020756j5101e31ax499a1494bd2df829@mail.gmail.com>
	<897160440807020934r61fcf047x12a4fd3e0ce5edaf@mail.gmail.com>
Message-ID: <558b2f5c0807021522j5c120425i2761857379079b86@mail.gmail.com>

On Wed, Jul 2, 2008 at 9:34 AM, Liu Qishuai <lqs.buaa at gmail.com> wrote:
> Hi,
> I rewrote a patch that doesn't break FontLink.
> http://www.winehq.org/pipermail/wine-patches/2008-July/057033.html
>
>

I tried this with Picasa. It fixed the font rendered as boxes, but now
other parts of the interface is missing text.


From leslie_alistair at hotmail.com  Wed Jul  2 17:32:20 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Thu, 3 Jul 2008 08:32:20 +1000
Subject: msxml3/test: Added test file for ISAXXMLReader (6/6)
References: <200807022156.01609.piotr.caban@gmail.com>
Message-ID: <g4gvl2$391$1@ger.gmane.org>


"Piotr Caban" <piotr.caban at gmail.com> wrote in message 
news:200807022156.01609.piotr.caban at gmail.com...
> ---
> dlls/msxml3/tests/Makefile.in |    3 +-
> dlls/msxml3/tests/saxreader.c |  225
> +++++++++++++++++++++++++++++++++++++++++
> 2 files changed, 227 insertions(+), 1 deletions(-)
> create mode 100644 dlls/msxml3/tests/saxreader.c
>

What about checking for invalid arguments as well?

Best Regards
 Alistair Leslie-Hughes 




From nox at jelal.kn-bremen.de  Wed Jul  2 15:55:19 2008
From: nox at jelal.kn-bremen.de (Juergen Lock)
Date: Wed, 2 Jul 2008 22:55:19 +0200 (CEST)
Subject: New winetricks 20080402: new verbs dotnet20, win2k, flash, msls31;
	updated mono, liberation
In-Reply-To: <a71bd89a0804021431w79515034i84ff0e4c57af3353@mail.gmail.com>
Message-ID: <200807022055.m62KtJbI039431@saturn.kn-bremen.de>

In article <a71bd89a0804021431w79515034i84ff0e4c57af3353 at mail.gmail.com> you write:
>Big news: as of today or so, wine doesn't need any patches
>to install the .net 2.0 runtime or run trivial .net 2.0 apps,
>so I've added a dotnet20 verb.  No more futzing with recipes
>to try out simple .net 2 apps, huzzah!
>
>There are lots of other little changes, too:
>
>20080402
>r21  	Added dotnet20, removed one kludge from dotnet11, added win2k
>verb, plus shorthand for winver=foo
>r20 	Updated liberation fonts.
>[...]

I just had a need for this (dotnet20), and the dotnet installer crashed
like this on wine 1.1.0 on FreeBSD:
	Unhandled exception 0xc06d007e at address 0x7e255934 (thread 0073), starting debugger...
	err:seh:setup_exception_record nested exception on signal stack in thread 0074 eip 7e139a63 esp 0011b75c stack 0xbf8f1000-0xbf9ff000
(and there wine hung.)

 I finally got things going by doing the same on wine 1.0 on debian sid
and then copying ~/.wine over - i.e. there dotnet20 worked.

 Just thought I'd report this so ppl can at least try it on 1.1.0 on Linux
to see if the problem is FreeBSD specific...

 Thanx,
	Juergen


From xerox_xerox2000 at yahoo.co.uk  Wed Jul  2 18:02:27 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis Lenders)
Date: Wed, 2 Jul 2008 23:02:27 +0000 (UTC)
Subject: programs: add rudimentary dxdiag
References: <383400.99845.qm@web23204.mail.ird.yahoo.com>
	<b6bb06270806300815va6d1af4m300ba84a952ed272@mail.gmail.com>
	<1214927433.5786.8.camel@p4>
Message-ID: <loom.20080702T225227-47@post.gmane.org>

Detlef Riekenberg <wine.dev <at> web.de> writes:


> 
> Why not?
> - empty stub
> - the property-sheet
> - demo-window with an empty (in memory) Bitmap
> ?- the wine-logo as bitmap
> - spinning cube
> reorder, when needed
> 

Hi Detlef (and Juan) , thanks for the response. I sent in a simple stub (and two
other patches on top of that i need to get something useful in dxdiag) but
apparently they are not accepted either. If only i knew why, but i don't as
again  i got no comment why they were rejected, so for now i'd have to guess :
1. no need for a dxdiag in wine
2. my patches are too crappy to respond to.

In both cases it's useless to leave thebug i  opened for missing dxdiag  open,
so i'll abandon it (bug 14118)



From juan.lang at gmail.com  Wed Jul  2 18:08:10 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Wed, 2 Jul 2008 16:08:10 -0700
Subject: programs: add rudimentary dxdiag
In-Reply-To: <loom.20080702T225227-47@post.gmane.org>
References: <383400.99845.qm@web23204.mail.ird.yahoo.com>
	<b6bb06270806300815va6d1af4m300ba84a952ed272@mail.gmail.com>
	<1214927433.5786.8.camel@p4> <loom.20080702T225227-47@post.gmane.org>
Message-ID: <3a768c550807021608y6e547605u331f17984197cbcf@mail.gmail.com>

Hi Louis,

> Hi Detlef (and Juan) , thanks for the response. I sent in a simple stub (and two
> other patches on top of that i need to get something useful in dxdiag) but
> apparently they are not accepted either.

Apparently they were never received in the first place.  At least, I
don't see them on the wine-patches archive.  Maybe you should resend?
--Juan


From xerox_xerox2000 at yahoo.co.uk  Wed Jul  2 18:11:09 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis Lenders)
Date: Wed, 2 Jul 2008 23:11:09 +0000 (UTC)
Subject: programs: add rudimentary dxdiag
References: <383400.99845.qm@web23204.mail.ird.yahoo.com>
	<b6bb06270806300815va6d1af4m300ba84a952ed272@mail.gmail.com>
	<1214927433.5786.8.camel@p4>
	<loom.20080702T225227-47@post.gmane.org>
	<3a768c550807021608y6e547605u331f17984197cbcf@mail.gmail.com>
Message-ID: <loom.20080702T231032-431@post.gmane.org>

Juan Lang <juan.lang <at> gmail.com> writes:

> 
> Hi Louis,
> 

> 
> Apparently they were never received in the first place.  At least, I
> don't see them on the wine-patches archive.  Maybe you should resend?
> --Juan
> 
> 


Hi Juan: 
http://www.winehq.org/pipermail/wine-patches/2008-June/056911.html



From juan.lang at gmail.com  Wed Jul  2 18:15:55 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Wed, 2 Jul 2008 16:15:55 -0700
Subject: programs: add rudimentary dxdiag
In-Reply-To: <loom.20080702T231032-431@post.gmane.org>
References: <383400.99845.qm@web23204.mail.ird.yahoo.com>
	<b6bb06270806300815va6d1af4m300ba84a952ed272@mail.gmail.com>
	<1214927433.5786.8.camel@p4> <loom.20080702T225227-47@post.gmane.org>
	<3a768c550807021608y6e547605u331f17984197cbcf@mail.gmail.com>
	<loom.20080702T231032-431@post.gmane.org>
Message-ID: <3a768c550807021615y23fd9cd5u3861d9f878b20d8f@mail.gmail.com>

> http://www.winehq.org/pipermail/wine-patches/2008-June/056911.html

Ah.  That's not enough to judge where your patches are going.  A
series of patches, adding a stub program, then adding a little more to
it, and so on, would help judge the final product, while considering
each piece independently.  It has the risk of getting rejected partway
or wholesale, but has a higher likelihood of getting comments.  It
also removes a lot of the roundtrip time with patches.

Sorry if the guidance isn't very clear.  Don't be afraid to ask AJ on
irc for more feedback too.
--Juan


From xerox_xerox2000 at yahoo.co.uk  Wed Jul  2 18:27:25 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis Lenders)
Date: Wed, 2 Jul 2008 23:27:25 +0000 (UTC)
Subject: programs: add rudimentary dxdiag
References: <383400.99845.qm@web23204.mail.ird.yahoo.com>
	<b6bb06270806300815va6d1af4m300ba84a952ed272@mail.gmail.com>
	<1214927433.5786.8.camel@p4>
	<loom.20080702T225227-47@post.gmane.org>
	<3a768c550807021608y6e547605u331f17984197cbcf@mail.gmail.com>
	<loom.20080702T231032-431@post.gmane.org>
	<3a768c550807021615y23fd9cd5u3861d9f878b20d8f@mail.gmail.com>
Message-ID: <loom.20080702T232203-933@post.gmane.org>

Juan Lang <juan.lang <at> gmail.com> writes:

> 
> > http://www.winehq.org/pipermail/wine-patches/2008-June/056911.html
> 
> Ah.  That's not enough to judge where your patches are going. 
I already explained, see http://bugs.winehq.org/attachment.cgi?id=14342 and
http://www.winehq.org/pipermail/wine-patches/2008-June/056659.html. That's what
i was intended to go to.

 A
> series of patches, adding a stub program, then adding a little more to
> it, and so on, would help judge the final product, while considering
> each piece independently.  

Here;s the whole patch that i sent a while ago, but i was advised after that to
first sent a simple stub because the patch was too large:

http://bugs.winehq.org/attachment.cgi?id=14343


It has the risk of getting rejected partway
> or wholesale, but has a higher likelihood of getting comments.  It
> also removes a lot of the roundtrip time with patches.
> 
> Sorry if the guidance isn't very clear.  Don't be afraid to ask AJ on
> irc for more feedback too.
> --Juan
> 
> 
Anyway. thanks for your explanation





From juan.lang at gmail.com  Wed Jul  2 18:32:14 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Wed, 2 Jul 2008 16:32:14 -0700
Subject: programs: add rudimentary dxdiag
In-Reply-To: <loom.20080702T232203-933@post.gmane.org>
References: <383400.99845.qm@web23204.mail.ird.yahoo.com>
	<b6bb06270806300815va6d1af4m300ba84a952ed272@mail.gmail.com>
	<1214927433.5786.8.camel@p4> <loom.20080702T225227-47@post.gmane.org>
	<3a768c550807021608y6e547605u331f17984197cbcf@mail.gmail.com>
	<loom.20080702T231032-431@post.gmane.org>
	<3a768c550807021615y23fd9cd5u3861d9f878b20d8f@mail.gmail.com>
	<loom.20080702T232203-933@post.gmane.org>
Message-ID: <3a768c550807021632l4597e0e3r806d9850f8f38625@mail.gmail.com>

> I already explained, see http://bugs.winehq.org/attachment.cgi?id=14342 and
> http://www.winehq.org/pipermail/wine-patches/2008-June/056659.html. That's what
> i was intended to go to.

Yes, but such a large patch is hard to read.  See e.g. how I submitted
inetmib1.dll, beginning here:
http://www.winehq.org/pipermail/wine-patches/2008-June/056352.html

Rather than sending it in one patch, or then one patch at a time, I
sent the DLL broken up into many individual patches, all at one time
so they could be reviewed both individually and as a whole.  Some made
it, some were rejected.  I also had to ask for feedback, I didn't get
any until I asked.

Patience...
--Juan


From jeffzaroyko at gmail.com  Wed Jul  2 18:35:02 2008
From: jeffzaroyko at gmail.com (Jeff Zaroyko)
Date: Thu, 3 Jul 2008 09:35:02 +1000
Subject: programs: add rudimentary dxdiag
In-Reply-To: <loom.20080702T232203-933@post.gmane.org>
References: <383400.99845.qm@web23204.mail.ird.yahoo.com>
	<b6bb06270806300815va6d1af4m300ba84a952ed272@mail.gmail.com>
	<1214927433.5786.8.camel@p4> <loom.20080702T225227-47@post.gmane.org>
	<3a768c550807021608y6e547605u331f17984197cbcf@mail.gmail.com>
	<loom.20080702T231032-431@post.gmane.org>
	<3a768c550807021615y23fd9cd5u3861d9f878b20d8f@mail.gmail.com>
	<loom.20080702T232203-933@post.gmane.org>
Message-ID: <f5d9424f0807021635j2ea2bb7q7436656a2206c693@mail.gmail.com>

On Thu, Jul 3, 2008 at 9:27 AM, Louis Lenders
<xerox_xerox2000 at yahoo.co.uk> wrote:
> Juan Lang <juan.lang <at> gmail.com> writes:
>
>>
>> > http://www.winehq.org/pipermail/wine-patches/2008-June/056911.html
>>
>> Ah.  That's not enough to judge where your patches are going.
> I already explained, see http://bugs.winehq.org/attachment.cgi?id=14342 and
> http://www.winehq.org/pipermail/wine-patches/2008-June/056659.html. That's what
> i was intended to go to.
>
>  A
>> series of patches, adding a stub program, then adding a little more to
>> it, and so on, would help judge the final product, while considering
>> each piece independently.
>
> Here;s the whole patch that i sent a while ago, but i was advised after that to
> first sent a simple stub because the patch was too large:
>
> http://bugs.winehq.org/attachment.cgi?id=14343
>
>
> It has the risk of getting rejected partway
>> or wholesale, but has a higher likelihood of getting comments.  It
>> also removes a lot of the roundtrip time with patches.
>>
>> Sorry if the guidance isn't very clear.  Don't be afraid to ask AJ on
>> irc for more feedback too.
>> --Juan
>>
>>
> Anyway. thanks for your explanation
>

You might also consider generating your patches using `git
format-patch --keep-subject origin` as per
http://www.winehq.org/site/sending_patches and sending your mail in
plain text, not html.


From max at veneto.com  Wed Jul  2 18:36:43 2008
From: max at veneto.com (Massimo Del Fedele)
Date: Thu, 03 Jul 2008 01:36:43 +0200
Subject: start/stop logs by code... is it possible ?
In-Reply-To: <1096648c0807021504i7d4460a7t23da9674a7516157@mail.gmail.com>
References: <g4e7i1$l3s$1@ger.gmane.org>
	<1096648c0807021504i7d4460a7t23da9674a7516157@mail.gmail.com>
Message-ID: <g4h3eb$coj$1@ger.gmane.org>

Rob Shearman ha scritto:
> 2008/7/1 Massimo Del Fedele <max at veneto.com>:
>> I'd like to start some trace log entering a function and stopping it at
>> exit, to isolate just the part I need. Is it possible to add some code
>> inside the function body that do it ?
>>
>> I mean...
>>
>> void aWineFunction(...)
>> {
>>   .......
>>   STARTLOG
>>   .......
>>   .......
>>   STOPLOG
>>
>>   .......
>>
>> }
>>
>> The purpose is to isolate traces from code called by a single function.
> 
> Try these untested macros:
> 
> #define STARTLOG(dbch) ((_wine_dbch_##dbch).flags |= (1 << __WINE_DBCL_TRA
> CE))
> #define STOPLOG(dbch) ((_wine_dbch_##dbch).flags &= ~(1 << __WINE_DBCL_TRA
> CE))
> 
> And then use them like this:
> void aWineFunction(...)
> {
>   .......
>   STARTLOG(relay)
>   .......
>   .......
>   STOPLOG(relay)
> 
>   .......
> }
> 
> 

Thanx for the answer !
What I'm interested for is a trace, not a relay... can it work for 
traces too ? which would be the syntax then ?

Max



From hzhrong at gmail.com  Wed Jul  2 19:13:06 2008
From: hzhrong at gmail.com (Huang, Zhangrong)
Date: Thu, 3 Jul 2008 08:13:06 +0800
Subject: gdi32: Implement automatic font substitution
In-Reply-To: <558b2f5c0807021522j5c120425i2761857379079b86@mail.gmail.com>
References: <a71bd89a0807011211w296aef7dy528fde025dc832e5@mail.gmail.com>
	<897160440807011739p79023217se37e719c819bc296@mail.gmail.com>
	<b4cc5a3d0807020559r1e695cdexd14c9a3c2c05099a@mail.gmail.com>
	<897160440807020700o3ff49ea9q780989d3ce7f65f1@mail.gmail.com>
	<b4cc5a3d0807020756j5101e31ax499a1494bd2df829@mail.gmail.com>
	<897160440807020934r61fcf047x12a4fd3e0ce5edaf@mail.gmail.com>
	<558b2f5c0807021522j5c120425i2761857379079b86@mail.gmail.com>
Message-ID: <b4cc5a3d0807021713x2fc745fds4b872449c61458c1@mail.gmail.com>

Have you tried to set FontLink? It works for me, there are no places
have font problem. (without automatic font substitution patch)

see:  http://bugs.winehq.org/attachment.cgi?id=14546

[Software\\Microsoft\\Windows
NT\\CurrentVersion\\FontLink\\SystemLink] 1208451304
"Microsoft Sans
Serif"=str(7):"simsun.ttc,SimSun\0gulim.ttc,Gulim\0msgothic.ttc,MS UI
Gothic\0mingliu.ttc,PMingLiU\0"
"Tahoma"=str(7):"simsun.ttc,SimSun\0gulim.ttc,Gulim\0msgothic.ttc,MS
UI Gothic\0mingliu.ttc,PMingLiU\0"

Ensure your system have these fonts: simsun.ttc, gulim.ttc,
msgothic.ttc and mingliu.ttc, or change the values with proper font
name.


2008/7/3 Lei Zhang <thestig at google.com>:
> I tried this with Picasa. It fixed the font rendered as boxes, but now
> other parts of the interface is missing text.
>
>
>



-- 
$ apt-get moo
 (__)
 (oo)
 /------\/
 / | ||
 * /\---/\
 ~~ ~~
...."Have you mooed today?"...


From hzhrong at gmail.com  Wed Jul  2 19:17:44 2008
From: hzhrong at gmail.com (Huang, Zhangrong)
Date: Thu, 3 Jul 2008 08:17:44 +0800
Subject: EnterCriticalSection throws exception?
In-Reply-To: <1096648c0807021434u1f90732bo212e787a27b5e862@mail.gmail.com>
References: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>
	<1096648c0807021434u1f90732bo212e787a27b5e862@mail.gmail.com>
Message-ID: <b4cc5a3d0807021717r351d5894sb7974025b34a1bf7@mail.gmail.com>

Hi,

2008/7/3 Rob Shearman <robertshearman at gmail.com>:
> A bit of lateral thinking is needed, I feel, since contention between
> threads is going to be an issue even if the lock doesn't time out. The
> wininet code should be converted to using getaddrinfo and as a bonus
> it will also start supporting IPv6 hosts.

I see.

>>  So I suggest a feature that EnterCriticalSection throws exception for
>> Wine internal locks only when debug is present.

Can we accept this feature: throw exception only when debug is present?
Thanks.


-- 
$ apt-get moo
 (__)
 (oo)
 /------\/
 / | ||
 * /\---/\
 ~~ ~~
...."Have you mooed today?"...


From thestig at google.com  Wed Jul  2 19:22:41 2008
From: thestig at google.com (Lei Zhang)
Date: Wed, 2 Jul 2008 17:22:41 -0700
Subject: gdi32: Implement automatic font substitution
In-Reply-To: <b4cc5a3d0807021713x2fc745fds4b872449c61458c1@mail.gmail.com>
References: <a71bd89a0807011211w296aef7dy528fde025dc832e5@mail.gmail.com>
	<897160440807011739p79023217se37e719c819bc296@mail.gmail.com>
	<b4cc5a3d0807020559r1e695cdexd14c9a3c2c05099a@mail.gmail.com>
	<897160440807020700o3ff49ea9q780989d3ce7f65f1@mail.gmail.com>
	<b4cc5a3d0807020756j5101e31ax499a1494bd2df829@mail.gmail.com>
	<897160440807020934r61fcf047x12a4fd3e0ce5edaf@mail.gmail.com>
	<558b2f5c0807021522j5c120425i2761857379079b86@mail.gmail.com>
	<b4cc5a3d0807021713x2fc745fds4b872449c61458c1@mail.gmail.com>
Message-ID: <558b2f5c0807021722l2db6f703hb5db316ca4e3cd31@mail.gmail.com>

On Wed, Jul 2, 2008 at 5:13 PM, Huang, Zhangrong <hzhrong at gmail.com> wrote:
> Ensure your system have these fonts: simsun.ttc, gulim.ttc,
> msgothic.ttc and mingliu.ttc, or change the values with proper font
> name.

Are these the only fonts that work? What about other fonts like arphic-uming?
http://packages.debian.org/etch/ttf-arphic-uming


From royshea at gmail.com  Wed Jul  2 20:17:47 2008
From: royshea at gmail.com (Roy Shea)
Date: Wed, 2 Jul 2008 18:17:47 -0700
Subject: Registering mstask without DllRegisterServer
Message-ID: <bb6a273e0807021817u3df3f64dh8ef3dc5993b930c1@mail.gmail.com>

Howdy,

I'm looking for advice on how to add registry entries for an
implementation of the mstask Task Scheduler Service.

The mstask DLL does not provide DllRegisterServer or
DllUnregisterServer.  To mirror this within my version I'm assuming that
DllRegisterServer / DllUnregisterServer are off limits.  For
registration I'm currently planning to to extend wine.inf.in directly
with the required registry entries.  The barebones version of mstask
this would add to the classes section:

----
HKCR,CLSID\{148BD52A-A2AB-11CE-B11F-00AA00530503},,,"CTaskScheduler"
HKCR,CLSID\{148BD52A-A2AB-11CE-B11F-00AA00530503}\InProcServer32,,,"mstask.dll"
HKCR,CLSID\{148BD52A-A2AB-11CE-B11F-00AA00530503}\InProcServer32,"ThreadingModel",,"Both"
----

See the attached patch for details.  I'm not completely happy with this
approach.  Any insight into a cleaner way to add the mstask registry
data into wine?

Thanks!
-Roy
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mstask_registration.patch
Type: text/x-patch
Size: 824 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080702/781a7d92/attachment.bin 

From m.b.lankhorst at gmail.com  Wed Jul  2 21:44:42 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Wed, 2 Jul 2008 19:44:42 -0700
Subject: EnterCriticalSection throws exception?
In-Reply-To: <b4cc5a3d0807021717r351d5894sb7974025b34a1bf7@mail.gmail.com>
References: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>
	<1096648c0807021434u1f90732bo212e787a27b5e862@mail.gmail.com>
	<b4cc5a3d0807021717r351d5894sb7974025b34a1bf7@mail.gmail.com>
Message-ID: <b130c85e0807021944l3119aef6ma3ed4bbe5540faf8@mail.gmail.com>

Hello,

2008/7/2 Huang, Zhangrong <hzhrong at gmail.com>:
> Hi,
>
> 2008/7/3 Rob Shearman <robertshearman at gmail.com>:
>> A bit of lateral thinking is needed, I feel, since contention between
>> threads is going to be an issue even if the lock doesn't time out. The
>> wininet code should be converted to using getaddrinfo and as a bonus
>> it will also start supporting IPv6 hosts.
>
> I see.
>
>>>  So I suggest a feature that EnterCriticalSection throws exception for
>>> Wine internal locks only when debug is present.
>
> Can we accept this feature: throw exception only when debug is present?
I think that is a bad idea, while there might be 1 or 2 real genuine
uses for only throwing an exception while debugging, 99% of the time
it's really wine deadlocking itself, it's wine's own fault and I would
rather see the backtraces of the deadlock rather then the app hanging
forever.

Critical sections are meant for short time locks, if you keep a
critical section for more then 1 minute there is something seriously
wrong.

Cheers,
Maarten.


From celticht32 at aol.com  Wed Jul  2 22:29:30 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Wed, 02 Jul 2008 23:29:30 -0400
Subject: Debugging Question
In-Reply-To: <b130c85e0807021944l3119aef6ma3ed4bbe5540faf8@mail.gmail.com>
References: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>	<1096648c0807021434u1f90732bo212e787a27b5e862@mail.gmail.com>	<b4cc5a3d0807021717r351d5894sb7974025b34a1bf7@mail.gmail.com>
	<b130c85e0807021944l3119aef6ma3ed4bbe5540faf8@mail.gmail.com>
Message-ID: <486C479A.6000108@aol.com>

Is there a way within wine or wine debug to tell it to output just the 
API's
which are being called? I am trying to debug a exception  that causes an 
application
to crash. As usual I  don't have the windows source code in order to 
debug it that way.


So I was hoping there is a way within wine to tell what API's are being 
called.


Sincerely
Chris





From lqs.buaa at gmail.com  Wed Jul  2 22:30:05 2008
From: lqs.buaa at gmail.com (Liu Qishuai)
Date: Thu, 3 Jul 2008 11:30:05 +0800
Subject: gdi32: Implement automatic font substitution
In-Reply-To: <b4cc5a3d0807021713x2fc745fds4b872449c61458c1@mail.gmail.com>
References: <a71bd89a0807011211w296aef7dy528fde025dc832e5@mail.gmail.com>
	<897160440807011739p79023217se37e719c819bc296@mail.gmail.com>
	<b4cc5a3d0807020559r1e695cdexd14c9a3c2c05099a@mail.gmail.com>
	<897160440807020700o3ff49ea9q780989d3ce7f65f1@mail.gmail.com>
	<b4cc5a3d0807020756j5101e31ax499a1494bd2df829@mail.gmail.com>
	<897160440807020934r61fcf047x12a4fd3e0ce5edaf@mail.gmail.com>
	<558b2f5c0807021522j5c120425i2761857379079b86@mail.gmail.com>
	<b4cc5a3d0807021713x2fc745fds4b872449c61458c1@mail.gmail.com>
Message-ID: <897160440807022030s45bbed56wf2e03112aa2a841c@mail.gmail.com>

Yes, FontLink also works for me, but not everyone has those fonts
installed. Wine should find a suitable font from fontconfig, in case
the fonts in FontLink do not exist.

2008/7/3 Huang, Zhangrong <hzhrong at gmail.com>:
> Have you tried to set FontLink? It works for me, there are no places
> have font problem. (without automatic font substitution patch)
>
> see:  http://bugs.winehq.org/attachment.cgi?id=14546
>
> [Software\\Microsoft\\Windows
> NT\\CurrentVersion\\FontLink\\SystemLink] 1208451304
> "Microsoft Sans
> Serif"=str(7):"simsun.ttc,SimSun\0gulim.ttc,Gulim\0msgothic.ttc,MS UI
> Gothic\0mingliu.ttc,PMingLiU\0"
> "Tahoma"=str(7):"simsun.ttc,SimSun\0gulim.ttc,Gulim\0msgothic.ttc,MS
> UI Gothic\0mingliu.ttc,PMingLiU\0"
>
> Ensure your system have these fonts: simsun.ttc, gulim.ttc,
> msgothic.ttc and mingliu.ttc, or change the values with proper font
> name.
>
>
> 2008/7/3 Lei Zhang <thestig at google.com>:
>> I tried this with Picasa. It fixed the font rendered as boxes, but now
>> other parts of the interface is missing text.
>>
>>
>>
>
>
>
> --
> $ apt-get moo
>  (__)
>  (oo)
>  /------\/
>  / | ||
>  * /\---/\
>  ~~ ~~
> ...."Have you mooed today?"...
>


From lqs.buaa at gmail.com  Wed Jul  2 22:33:31 2008
From: lqs.buaa at gmail.com (Liu Qishuai)
Date: Thu, 3 Jul 2008 11:33:31 +0800
Subject: gdi32: Implement automatic font substitution
In-Reply-To: <558b2f5c0807021522j5c120425i2761857379079b86@mail.gmail.com>
References: <a71bd89a0807011211w296aef7dy528fde025dc832e5@mail.gmail.com>
	<897160440807011739p79023217se37e719c819bc296@mail.gmail.com>
	<b4cc5a3d0807020559r1e695cdexd14c9a3c2c05099a@mail.gmail.com>
	<897160440807020700o3ff49ea9q780989d3ce7f65f1@mail.gmail.com>
	<b4cc5a3d0807020756j5101e31ax499a1494bd2df829@mail.gmail.com>
	<897160440807020934r61fcf047x12a4fd3e0ce5edaf@mail.gmail.com>
	<558b2f5c0807021522j5c120425i2761857379079b86@mail.gmail.com>
Message-ID: <897160440807022033y6c8bdcc7p9200d04b6e36cbcf@mail.gmail.com>

Could you take a screenshot of this?

2008/7/3 Lei Zhang <thestig at google.com>:
>
> I tried this with Picasa. It fixed the font rendered as boxes, but now
> other parts of the interface is missing text.
>


From xixsimplicityxix at gmail.com  Wed Jul  2 22:35:30 2008
From: xixsimplicityxix at gmail.com (John Klehm)
Date: Wed, 2 Jul 2008 22:35:30 -0500
Subject: Debugging Question
In-Reply-To: <486C479A.6000108@aol.com>
References: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>
	<1096648c0807021434u1f90732bo212e787a27b5e862@mail.gmail.com>
	<b4cc5a3d0807021717r351d5894sb7974025b34a1bf7@mail.gmail.com>
	<b130c85e0807021944l3119aef6ma3ed4bbe5540faf8@mail.gmail.com>
	<486C479A.6000108@aol.com>
Message-ID: <78a7dad00807022035q7b838b10re92cfd76d15b0395@mail.gmail.com>

On Wed, Jul 2, 2008 at 10:29 PM, Chris Ahrendt <celticht32 at aol.com> wrote:
> Is there a way within wine or wine debug to tell it to output just the
> API's
> which are being called? I am trying to debug a exception  that causes an
> application
> to crash. As usual I  don't have the windows source code in order to
> debug it that way.
>
>
> So I was hoping there is a way within wine to tell what API's are being
> called.
>
>

http://wiki.winehq.org/DebugChannels

Highly recommended to guess which channels you need as opposed to
turning them all on.  The logs balloon quickly.

--John Klehm


From kai.blin at gmail.com  Thu Jul  3 01:32:24 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Thu, 3 Jul 2008 08:32:24 +0200
Subject: start/stop logs by code... is it possible ?
In-Reply-To: <g4h3eb$coj$1@ger.gmane.org>
References: <g4e7i1$l3s$1@ger.gmane.org>
	<1096648c0807021504i7d4460a7t23da9674a7516157@mail.gmail.com>
	<g4h3eb$coj$1@ger.gmane.org>
Message-ID: <200807030832.28387.kai.blin@gmail.com>

On Thursday 03 July 2008 01:36:43 Massimo Del Fedele wrote:
> Rob Shearman ha scritto:
> > 2008/7/1 Massimo Del Fedele <max at veneto.com>:
> >> I'd like to start some trace log entering a function and stopping it at
> >> exit, to isolate just the part I need. Is it possible to add some code
> >> inside the function body that do it ?
> >>
> >> I mean...
> >>
> >> void aWineFunction(...)
> >> {
> >>   .......
> >>   STARTLOG
> >>   .......
> >>   .......
> >>   STOPLOG
> >>
> >>   .......
> >>
> >> }
> >>
> >> The purpose is to isolate traces from code called by a single function.
> >
> > Try these untested macros:
> >
> > #define STARTLOG(dbch) ((_wine_dbch_##dbch).flags |= (1 <<
> > __WINE_DBCL_TRA CE))
> > #define STOPLOG(dbch) ((_wine_dbch_##dbch).flags &= ~(1 <<
> > __WINE_DBCL_TRA CE))
> >
> > And then use them like this:
> > void aWineFunction(...)
> > {
> >   .......
> >   STARTLOG(relay)
> >   .......
> >   .......
> >   STOPLOG(relay)
> >
> >   .......
> > }
>
> Thanx for the answer !
> What I'm interested for is a trace, not a relay... can it work for
> traces too ? which would be the syntax then ?

STARTLOG() turns on a debug channel, in this case the relay debug channel. 
Simply replace the relay with whichever debug channel you're interested in.

Kai


-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080703/9d82e922/attachment.pgp 

From hverbeet at gmail.com  Thu Jul  3 01:37:48 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Thu, 3 Jul 2008 08:37:48 +0200
Subject: wined3d: Fix a deadlock that may occur during initialization
In-Reply-To: <b130c85e0807022020g59318670o561370ad8be9ba5b@mail.gmail.com>
References: <b130c85e0807022020g59318670o561370ad8be9ba5b@mail.gmail.com>
Message-ID: <d658b69e0807022337x3bcf7eabu525d76b6f8a843@mail.gmail.com>

2008/7/3 Maarten Lankhorst <m.b.lankhorst at gmail.com>:
> - * Copyright 2007-2008 Stefan D?singer for CodeWeavers
> + * Copyright 2007-2008 Stefan D???singer for CodeWeavers

You shouldn't be changing Stefan's name though.


From kai.blin at gmail.com  Thu Jul  3 01:44:28 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Thu, 3 Jul 2008 08:44:28 +0200
Subject: New winetricks 20080402: new verbs dotnet20, win2k, flash, msls31;
	updated mono, liberation
In-Reply-To: <200807022055.m62KtJbI039431@saturn.kn-bremen.de>
References: <200807022055.m62KtJbI039431@saturn.kn-bremen.de>
Message-ID: <200807030844.28923.kai.blin@gmail.com>

On Wednesday 02 July 2008 22:55:19 Juergen Lock wrote:

> I just had a need for this (dotnet20), and the dotnet installer crashed
> like this on wine 1.1.0 on FreeBSD:
> 	Unhandled exception 0xc06d007e at address 0x7e255934 (thread 0073),
> starting debugger... err:seh:setup_exception_record nested exception on
> signal stack in thread 0074 eip 7e139a63 esp 0011b75c stack
> 0xbf8f1000-0xbf9ff000 (and there wine hung.)

You could open a bug report for that, but please attach the full backtrace 
you're getting. The lines you posted don't really help much.

Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080703/9710d474/attachment.pgp 

From max at veneto.com  Thu Jul  3 01:51:30 2008
From: max at veneto.com (Massimo Del Fedele)
Date: Thu, 03 Jul 2008 08:51:30 +0200
Subject: [Bug 13838] AutoCAD 2005 setup : Missing backslash in registry
	entry   and profile path
In-Reply-To: <E1KEC87-000656-6H@wine.codeweavers.com>
References: <bug-13838-11@http.bugs.winehq.org/>
	<E1KEC87-000656-6H@wine.codeweavers.com>
Message-ID: <g4hsti$3o0$1@ger.gmane.org>

wine-bugs at winehq.org ha scritto:
> http://bugs.winehq.org/show_bug.cgi?id=13838
> 
> 
> 
> 
> 
> --- Comment #29 from Dan Kegel <dank at kegel.com>  2008-07-02 18:52:54 ---
> If you could write a conformance test to expose and verify the
> problem first, that would be cool.
> 
> 

Well, I'm not so good with installer stuffs... in particular, I don't 
know how to get the PACKAGE stuff needed for the call.
BTW, I'll try it this night....

Max



From austin.lund at gmail.com  Thu Jul  3 01:56:03 2008
From: austin.lund at gmail.com (Austin Lund)
Date: Thu, 3 Jul 2008 16:56:03 +1000
Subject: Crashes in winetest under wine
Message-ID: <bcab73240807022356k4e0be5b0me7b6de8b5f6a4aca@mail.gmail.com>

I get a crash all the time in winetest since 1.0.  Seems there is not
a problem with any of the tests themselves (i.e. running make test).

The last few lines of output from winetest is:

fixme:xrandr:X11DRV_XRandR_SetCurrentMode Cannot change screen BPP from 32 to 8
fixme:xrandr:X11DRV_XRandR_SetCurrentMode Cannot change screen BPP from 32 to 16
err:x11settings:X11DRV_ChangeDisplaySettingsEx No matching mode found
1440x900x24 @0! (XRandR)
err:ntdll:RtlpWaitForCriticalSection section 0x7bc91824 "loader.c:
loader_section" wait timed out in thread 0039, blocked by 0036,
retrying (60 sec)
wine: Critical section 7bc91824 wait failed at address 0x7bc3ab60
(thread 0039), starting debugger...
err:seh:raise_exception Unhandled exception code c0000194 flags 0 addr
0x7bc3ab60

And the output file made in /tmp has at the end:

uxtheme:system start dlls/uxtheme/tests/system.c -
system.c:491: Starting test_IsThemed()
system.c:87: Theming is inactive
system.c:495: Starting test_GetWindowTheme()
system.c:499: Starting test_SetWindowTheme()
system.c:503: Starting test_OpenThemeData()
system.c:263: No active theme, skipping rest of OpenThemeData tests
system.c:507: Starting test_GetCurrentThemeName()
system.c:511: Starting test_CloseThemeData()
system: 45 tests executed (11 marked as todo, 0 failures), 0 skipped.
uxtheme:system done (0)

It takes quite a long time to get to the point where it crashes so I'd
be open to ideas as to how to narrow this down quicker.

I'm running everything on a clean install with an empty ~/.wine directory.


From hans at meelstraat.net  Thu Jul  3 03:01:00 2008
From: hans at meelstraat.net (Hans Leidekker)
Date: Thu, 3 Jul 2008 10:01:00 +0200
Subject: Thoughts on implementation of winhttp.dll
In-Reply-To: <1096648c0807021456g7ecc0ea9g429d05f4d77854a6@mail.gmail.com>
References: <486A88A6.1040905@zacbrown.org>
	<1096648c0807021456g7ecc0ea9g429d05f4d77854a6@mail.gmail.com>
Message-ID: <200807031001.00726.hans@meelstraat.net>

On Wednesday 02 July 2008 23:56:51 Rob Shearman wrote:

> How about:
> 3) Copy the networking sublayer from wininet into winhttp and build on top
> of that to implement winhttp. Reimplement wininet on top of winhttp.

Drawback to this option is that you're going to destabilize wininet, but
perhaps this is feasible now that we have a stable branch.

 -Hans



From winesku at googlemail.com  Thu Jul  3 03:20:16 2008
From: winesku at googlemail.com (Stefan Kuhr)
Date: Thu, 3 Jul 2008 10:20:16 +0200
Subject: Fallback from RPC_C_AUTHN_GSS_NEGOTIATE to RPC_C_AUTHN_WINNT if
	no SPNEGO package available
In-Reply-To: <1096648c0807021451s5403b2a5x7fb20c33c1914433@mail.gmail.com>
References: <81a474f0807011110k66f669afp77ce5d42d7c08839@mail.gmail.com>
	<1096648c0807020301l3940e7a5g7627ee8f878ae824@mail.gmail.com>
	<81a474f0807020451s6ab83cf0he24b84ea6b6bf6c6@mail.gmail.com>
	<1096648c0807021451s5403b2a5x7fb20c33c1914433@mail.gmail.com>
Message-ID: <81a474f0807030120g21226bb3sb23d1da445552650@mail.gmail.com>

Hi Rob,

On Wed, Jul 2, 2008 at 11:51 PM, Rob Shearman <robertshearman at gmail.com> wrote:
> <snip>
> Interesting analysis and I'm sure you're right. However, the patch is
> still making up for a deficiency in another piece of code so it either
> needs a FIXME comment or a fixme to be printed to the debug log.
>

Ok, I'll do that and resend the modified patch. It probably also needs
a fixme for an entire different reason: Once a Negotiate provider is
available in WINE, my patch won't do any harm, but it is going to be
dead code that can be removed then.

Cheers,

-- 
Stefan


From hans at meelstraat.net  Thu Jul  3 04:19:16 2008
From: hans at meelstraat.net (Hans Leidekker)
Date: Thu, 3 Jul 2008 11:19:16 +0200
Subject: [PATCH] wininet: moved cookie loading from HttpOpenRequest() to
	HttpSendRequest()
In-Reply-To: <E1KE67L-0005EM-3I@localhost.localdomain>
References: <E1KE67L-0005EM-3I@localhost.localdomain>
Message-ID: <200807031119.16140.hans@meelstraat.net>

On Wednesday 02 July 2008 19:27:43 Yann Droneaud wrote:

> This patch does the following:
>
> - Move cookie retrieval code to HTTP_HttpSendRequest()
> - Don't allocate memory for url if INTERNET_FLAG_NO_COOKIES is enabled
> - Be sure to not overflow lpszCookies:
>   buffer size was nCookieSize + 1 + 8,
>   written size is 8 + (nCookieSize - 1) + 2 + 1
> - Optimized request header generation:
>    sprintfW() replaced by strcpyW()
>    strcatW() replaced by strcpyW()
>    removed call to strlenW() for HTTP_HttpAddRequestHeadersW()
> - Use HTTP_ADDREQ_FLAG_ADD instead of HTTP_ADDHDR_FLAG_ADD
> - Use HTTP_ADDREQ_FLAG_REPLACE to replace the cookie instead of adding
  
Thanks Yann, good to see you move on to fix more bugs. To be accepted
in git each of those items should be a separate patch though, and the
impact of moving the cookie code is such that it needs a test case.

 -Hans



From julliard at winehq.org  Thu Jul  3 04:31:32 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 03 Jul 2008 11:31:32 +0200
Subject: programs: add rudimentary dxdiag
In-Reply-To: <loom.20080702T232203-933@post.gmane.org> (Louis Lenders's
	message of "Wed, 2 Jul 2008 23:27:25 +0000 (UTC)")
References: <383400.99845.qm@web23204.mail.ird.yahoo.com>
	<b6bb06270806300815va6d1af4m300ba84a952ed272@mail.gmail.com>
	<1214927433.5786.8.camel@p4> <loom.20080702T225227-47@post.gmane.org>
	<3a768c550807021608y6e547605u331f17984197cbcf@mail.gmail.com>
	<loom.20080702T231032-431@post.gmane.org>
	<3a768c550807021615y23fd9cd5u3861d9f878b20d8f@mail.gmail.com>
	<loom.20080702T232203-933@post.gmane.org>
Message-ID: <87hcb7gvpn.fsf@wine.dyndns.org>

Louis Lenders <xerox_xerox2000 at yahoo.co.uk> writes:

> Here;s the whole patch that i sent a while ago, but i was advised after that to
> first sent a simple stub because the patch was too large:
>
> http://bugs.winehq.org/attachment.cgi?id=14343

Here's what you said in your original patch:

> - code for  spinning cube  was  partially based on  spinning cube code scattered all over the internet
> -rest was ripped of winecfg
> - There' s a problem while minizing the d3d-window, but running it in wine-0.9.22 it all goes fine, so this must be a regression somewhere, and not a bug in the attached code. I'll go after that later.
> - Hopefully you're not to picky on this patch, it 's quite some line's of code,and i'm sure things need to be improved, but this does not affect wine's core code but os rather an enhancement, and it 's not really possible to send it in in small chuncks.

Basically you copied code from you don't know where, minimizing doesn't
work but that's not a bug, and I shouldn't be picky and accept a big
crappy patch anyway. Do you really wonder why you have trouble getting
it committed?

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Thu Jul  3 05:38:25 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 03 Jul 2008 12:38:25 +0200
Subject: [try 2] user32: GetMenuStringA now returns correct buffer length
	for multibyte menu text. (with test)
In-Reply-To: <b4cc5a3d0807020854x7649776dm6818ae5f5de22ce@mail.gmail.com>
	(Zhangrong Huang's message of "Wed, 2 Jul 2008 23:54:20 +0800")
References: <b4cc5a3d0807020854x7649776dm6818ae5f5de22ce@mail.gmail.com>
Message-ID: <87abgzgsm6.fsf@wine.dyndns.org>

"Huang, Zhangrong" <hzhrong at gmail.com> writes:

> @@ -665,6 +678,26 @@ static void test_menu_add_string( void )
>      else
>          ok (!ret, "GetMenuStringW on ownerdraw entry succeeded.\n");
>  
> +    /* test multibyte menu text */
> +    strcpy(string, "\xce\xc4\xbc\xfe(&F)"); /* CP936 */

You shouldn't hardcode codepage 936. Look at test_dbcs_wm_char() in
msg.c to see how to test DBCS chars in a generic way.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Thu Jul  3 05:40:10 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 03 Jul 2008 12:40:10 +0200
Subject: Sorry, resend,
	with patch now. [try 3] gdi32/tests: Add tests for GdiGetCodePage.
In-Reply-To: <b4cc5a3d0807020848m77b9649epa3360a880122f2a@mail.gmail.com>
	(Zhangrong Huang's message of "Wed, 2 Jul 2008 23:48:55 +0800")
References: <b4cc5a3d0807020848m77b9649epa3360a880122f2a@mail.gmail.com>
Message-ID: <8763rngsj9.fsf@wine.dyndns.org>

"Huang, Zhangrong" <hzhrong at gmail.com> writes:

> This pacth add tests for GdiGetCodePage, which currently don't pass on WIne.
>
> ChangeLog
>    gdi32/tests: Add tests for GdiGetCodePage.

It doesn't work here:

../../../tools/runtest -q -P wine -M gdi32.dll -T ../../.. -p gdi32_test.exe.so font.c && touch font.ok
font.c:833: Test succeeded inside todo block: data index 2: GdiGetCodePage should have returned 1252, got 1252
font.c:833: Test succeeded inside todo block: data index 3: GdiGetCodePage should have returned 1252, got 1252
font.c:830: Test failed: data index 14: expected font codepage 42, got 1252
font.c:833: Test succeeded inside todo block: data index 15: GdiGetCodePage should have returned 1253, got 1253
font.c:833: Test succeeded inside todo block: data index 16: GdiGetCodePage should have returned 1251, got 1251
font.c:830: Test failed: data index 17: expected font codepage 936, got 1252
font.c:1559: Tests skipped: Symbol or Wingdings is not installed
font.c:1575: Tests skipped: Symbol or Wingdings is not installed
font.c:1729: Tests skipped: Symbol is not installed
font.c:2507: Tests skipped: Arial Black or Symbol/Wingdings is not installed
font.c:1955: Tests skipped: Font DejaVu Sans doesn't contain 'x', skipping the test
font.c:1955: Tests skipped: Font DejaVu Sans Condensed doesn't contain 'x', skipping the test
font.c:1955: Tests skipped: Font OpenSymbol doesn't contain 'x', skipping the test
make[2]: *** [font.ok] Error 6

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Thu Jul  3 05:43:54 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 03 Jul 2008 12:43:54 +0200
Subject: [Gdiplus 01/16] Valgrind: fix warnings about using uninitialized
	memory, and leaking memory
In-Reply-To: <1215019458.6599.21.camel@belthazor-saved> (Adam Petaccia's
	message of "Wed, 02 Jul 2008 13:24:18 -0400")
References: <1215019458.6599.21.camel@belthazor-saved>
Message-ID: <871w2bgsd1.fsf@wine.dyndns.org>

Adam Petaccia <adam at tpetaccia.com> writes:

> @@ -152,6 +154,8 @@ static void test_fontfamily (void)
>      WCHAR itsName[LF_FACESIZE];
>      GpStatus stat;
>  
> +    ZeroMemory(itsName, sizeof(itsName));
> +

Clearing buffers is almost always a sign that you are hiding a
bug. Please fix it properly instead.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Thu Jul  3 05:45:52 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 03 Jul 2008 12:45:52 +0200
Subject: [Gdiplus 03/16] test_getgenerics: Don't use a pointer-to-pointer
	construct.
In-Reply-To: <1215019482.6599.25.camel@belthazor-saved> (Adam Petaccia's
	message of "Wed, 02 Jul 2008 13:24:42 -0400")
References: <1215019482.6599.25.camel@belthazor-saved>
Message-ID: <87wsk3fdpb.fsf@wine.dyndns.org>

Adam Petaccia <adam at tpetaccia.com> writes:

> diff --git a/dlls/gdiplus/tests/font.c b/dlls/gdiplus/tests/font.c
> index 59a6cb7..e710c30 100644
> --- a/dlls/gdiplus/tests/font.c
> +++ b/dlls/gdiplus/tests/font.c
> @@ -189,42 +189,38 @@ static void test_fontfamily (void)
>  static void test_getgenerics (void)
>  {
>      GpStatus stat;
> -    GpFontFamily** family;
> +    GpFontFamily* FontFamily;

It's a matter of taste, but I think 'family' was a much better name that
'FontFamily' for a local variable. The latter looks like an API call.

-- 
Alexandre Julliard
julliard at winehq.org


From wine at mkarcher.dialup.fu-berlin.de  Thu Jul  3 05:57:33 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Thu, 03 Jul 2008 12:57:33 +0200
Subject: start/stop logs by code... is it possible ?
In-Reply-To: <g4h3eb$coj$1@ger.gmane.org>
References: <g4e7i1$l3s$1@ger.gmane.org>
	<1096648c0807021504i7d4460a7t23da9674a7516157@mail.gmail.com>
	<g4h3eb$coj$1@ger.gmane.org>
Message-ID: <1215082653.4600.74.camel@hermes2.karcher.local>

Am Donnerstag, den 03.07.2008, 01:36 +0200 schrieb Massimo Del Fedele:
> > Try these untested macros:
> > 
> > #define STARTLOG(dbch) ((_wine_dbch_##dbch).flags |= (1 << __WINE_DBCL_TRACE))
> > #define STOPLOG(dbch) ((_wine_dbch_##dbch).flags &= ~(1 << __WINE_DBCL_TRACE))
> > 
> > And then use them like this:
> > void aWineFunction(...)
> > {
> >   .......
> >   STARTLOG(relay)
> >   .......
> >   .......
> >   STOPLOG(relay)
> > 
> >   .......
> > }
> Thanx for the answer !
> What I'm interested for is a trace, not a relay... can it work for 
> traces too ? which would be the syntax then ?

The contents of this mail are also untestet, so beware.

It probably will work even better. You just have to put the channel name
(without quotes, so not as string) as argument to the STARTLOG and
STOPLOG macros. It does not work with relay, because the thunks that
print relay info are built at dll load time, and I don't expect the
TRACE_ON(relay) information to be tested on each function call. If
during DLL load TRACE_ON(relay) is true, this DLL will (during the whole
process lifetime) generate relay info and if TRACE_ON(relay) was of at
that time, no relay-printing thunks are built and it is pointless to
turn it on later.

Regards,
  Michael Karcher



From max at veneto.com  Thu Jul  3 06:26:40 2008
From: max at veneto.com (Massimo Del Fedele)
Date: Thu, 03 Jul 2008 13:26:40 +0200
Subject: start/stop logs by code... is it possible ?
In-Reply-To: <1215082653.4600.74.camel@hermes2.karcher.local>
References: <g4e7i1$l3s$1@ger.gmane.org>	<1096648c0807021504i7d4460a7t23da9674a7516157@mail.gmail.com>	<g4h3eb$coj$1@ger.gmane.org>
	<1215082653.4600.74.camel@hermes2.karcher.local>
Message-ID: <g4id1g$rtg$1@ger.gmane.org>

Thank to all that answered to my questions !
I'll test it on nexd days.

Best Regards

Max


Michael Karcher ha scritto:
> Am Donnerstag, den 03.07.2008, 01:36 +0200 schrieb Massimo Del Fedele:
>>> Try these untested macros:
>>>
>>> #define STARTLOG(dbch) ((_wine_dbch_##dbch).flags |= (1 << __WINE_DBCL_TRACE))
>>> #define STOPLOG(dbch) ((_wine_dbch_##dbch).flags &= ~(1 << __WINE_DBCL_TRACE))
>>>
>>> And then use them like this:
>>> void aWineFunction(...)
>>> {
>>>   .......
>>>   STARTLOG(relay)
>>>   .......
>>>   .......
>>>   STOPLOG(relay)
>>>
>>>   .......
>>> }
>> Thanx for the answer !
>> What I'm interested for is a trace, not a relay... can it work for 
>> traces too ? which would be the syntax then ?
> 
> The contents of this mail are also untestet, so beware.
> 
> It probably will work even better. You just have to put the channel name
> (without quotes, so not as string) as argument to the STARTLOG and
> STOPLOG macros. It does not work with relay, because the thunks that
> print relay info are built at dll load time, and I don't expect the
> TRACE_ON(relay) information to be tested on each function call. If
> during DLL load TRACE_ON(relay) is true, this DLL will (during the whole
> process lifetime) generate relay info and if TRACE_ON(relay) was of at
> that time, no relay-printing thunks are built and it is pointless to
> turn it on later.
> 
> Regards,
>   Michael Karcher
> 
> 
> 
> 



From hans at meelstraat.net  Thu Jul  3 06:29:09 2008
From: hans at meelstraat.net (Hans Leidekker)
Date: Thu, 3 Jul 2008 13:29:09 +0200
Subject: [PATCH] wininet: moved cookie loading from HttpOpenRequest() to
	HttpSendRequest()
In-Reply-To: <53165.212.234.8.113.1215080294.squirrel@webmail.ocsa-data.net>
References: <E1KE67L-0005EM-3I@localhost.localdomain>
	<200807031119.16140.hans@meelstraat.net>
	<53165.212.234.8.113.1215080294.squirrel@webmail.ocsa-data.net>
Message-ID: <200807031329.09769.hans@meelstraat.net>

On Thursday 03 July 2008 12:18:14 Yann Droneaud wrote:

> > Thanks Yann, good to see you move on to fix more bugs. To be accepted
> > in git each of those items should be a separate patch though, and the
> > impact of moving the cookie code is such that it needs a test case.
>
> Please, don't ask me to split the patch in more than two patches:
> - one for moving the code and using FLAG_REPLACE
> - one for cleanup/optimization
> Doing more will took me too much time.

If time is a problem you should probably concentrate on the first issue.

> And I can't write the test case alone: it requires a HTTP server with some
> pages that set cookies, redirect and check the cookies.

There's an embedded server in the test suite already, adding redirection
should be straightforward.

 -Hans



From owen at owenrudge.net  Thu Jul  3 07:55:12 2008
From: owen at owenrudge.net (Owen Rudge)
Date: Thu, 3 Jul 2008 13:55:12 +0100
Subject: [UPDATE] shell32: Check registry entry for cpl files (in standard
	control panel)
References: <486BB61A.1050105@owenrudge.net>
	<1096648c0807021205s70fb544fje608489e338c45a7@mail.gmail.com>
Message-ID: <C370D6DEA0854E8AAE69F70F820AF408@lan.owenrudge.net>

> Control Panel applets can also be registered in "HKCU\Control 
> Panel\MMCPL".

Well, technically, they would be registered in the [mmcpl] section of 
control.ini, which is then mapped in the registry 
(HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows 
NT\CurrentVersion\IniFileMapping\control.ini) to the appropriate registry 
entry. However, as far as I can tell, Wine's profile string functions don't 
currently support INI file mapping (there's a patch on the bug tracker, but 
it was never accepted, it seems), so if any old application did try to write 
to the control.ini file, it wouldn't end up in the registry. I could add a 
check for CPL entries in control.ini if desired using the 
GetPrivateProfileSection function, and if/when Wine does support INI file 
mapping, the code wouldn't then need updating to point to the "right" place.

-- 
Owen Rudge
http://www.owenrudge.net/ 



From msz at seclab.tuwien.ac.at  Thu Jul  3 08:19:35 2008
From: msz at seclab.tuwien.ac.at (Martin Szydlowski)
Date: Thu, 03 Jul 2008 15:19:35 +0200
Subject: Get Windows-PID for process with known Unix-PID
Message-ID: <486CD1E7.6060700@seclab.tuwien.ac.at>

Hi all,

I am starting and stopping some Windows (and also Unix) programs from a
shell script. To start, I use fork/exec which gives me the Unix PID. To
stop the program I use kill. I have experimented with different signals
(TERM, HUP, INT, KILL) and all of them achieve the goal of stopping the
program, but it does not shut down cleanly (as opposed to using
File->Exit or the red X).

I have written a small program (winelib) that enumerates all windows and
can send as WM_CLOSE message to a program with a certain Windows PID.
Since I have several instances of the same executable running, I cannot
distinguish them by name or path, hence I save the PID when starting
them, but it's the Unix PID I have. I believe there must be a way to get
a mapping of Windows-PIDs <-> Unix-PIDs, but extensive googling only
revealed (repeatedly) to me that those two must not be confused.

I know I can get the Windows-PIDs using winedbg->info process but there
is no trace of Unix PIDs there. Also, I need a scriptable way to do
this, best being a small app that gets a Unix PID and prints the
matching Windows PID to console.

greetz Martin

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 252 bytes
Desc: OpenPGP digital signature
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080703/0ba910ec/attachment.pgp 

From hzhrong at gmail.com  Thu Jul  3 08:38:52 2008
From: hzhrong at gmail.com (Huang, Zhangrong)
Date: Thu, 3 Jul 2008 21:38:52 +0800
Subject: gdi32: Implement automatic font substitution
In-Reply-To: <558b2f5c0807021722l2db6f703hb5db316ca4e3cd31@mail.gmail.com>
References: <a71bd89a0807011211w296aef7dy528fde025dc832e5@mail.gmail.com>
	<897160440807011739p79023217se37e719c819bc296@mail.gmail.com>
	<b4cc5a3d0807020559r1e695cdexd14c9a3c2c05099a@mail.gmail.com>
	<897160440807020700o3ff49ea9q780989d3ce7f65f1@mail.gmail.com>
	<b4cc5a3d0807020756j5101e31ax499a1494bd2df829@mail.gmail.com>
	<897160440807020934r61fcf047x12a4fd3e0ce5edaf@mail.gmail.com>
	<558b2f5c0807021522j5c120425i2761857379079b86@mail.gmail.com>
	<b4cc5a3d0807021713x2fc745fds4b872449c61458c1@mail.gmail.com>
	<558b2f5c0807021722l2db6f703hb5db316ca4e3cd31@mail.gmail.com>
Message-ID: <b4cc5a3d0807030638i484aa254hfe48629080d01e0@mail.gmail.com>

Hi,

2008/7/3 Lei Zhang <thestig at google.com>:
> On Wed, Jul 2, 2008 at 5:13 PM, Huang, Zhangrong <hzhrong at gmail.com> wrote:
> Are these the only fonts that work? What about other fonts like arphic-uming?
> http://packages.debian.org/etch/ttf-arphic-uming

If you don't have those fonts, try the following 2 ways:

1. Replace simsun.ttc,SimSun with  "AR PL ShanHeiSun Uni,uming.ttf"

or
2. Link uming.ttf to simsun.ttc:
$ ln -s uming.ttf  simsun.ttc

and set a FontSubstitutes registry:

[Software\\Microsoft\\Windows NT\\CurrentVersion\\FontSubstitutes] 1214393759
"SimSun"="AR PL ShanHeiSun Uni"


-- 
$ apt-get moo
 (__)
 (oo)
 /------\/
 / | ||
 * /\---/\
 ~~ ~~
...."Have you mooed today?"...


From austin.lund at gmail.com  Thu Jul  3 02:32:32 2008
From: austin.lund at gmail.com (Austin Lund)
Date: Thu, 3 Jul 2008 17:32:32 +1000
Subject: RFC: More tests for riched20 ITextServices
Message-ID: <bcab73240807030032i523ef83bv1a562ef0c396ff1@mail.gmail.com>

The first patch in this series is the same as that which I have sent
around before.

The remainder implement tests for TxGetText, TxSetText,
TxGetNaturalSize and a very simple test for TxDraw.

Patches 2 through 4 don't pass on wine but are in a wine_todo{} section.

When the TxDraw patch is added and the test is run with
WINETEST_INTERACTIVE=1 then you get two seconds to see the text in an
undecorated window in the top left of the screen.

I have run these with the native dll in wine and it works fine, but
would like someone to test them on windows platforms.

There is some trickery with "thiscall".  Some background for the
implementation can be found here:
http://www.winehq.org/pipermail/wine-devel/2005-July/038185.html
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0001-richedit-Added-conformance-tests-for-txtsrv.c.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080703/957660e1/attachment-0004.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0002-richedit-Added-tests-for-TxSetText-and-TxGetText-in-t.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080703/957660e1/attachment-0005.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0003-richedit-Added-tests-for-simple-strings-for-TxGetNatu.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080703/957660e1/attachment-0006.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0004-richedit-Added-a-test-for-TxDraw-in-txtsrv.c.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080703/957660e1/attachment-0007.txt 

From yann at droneaud.fr  Thu Jul  3 05:18:14 2008
From: yann at droneaud.fr (Yann Droneaud)
Date: Thu, 3 Jul 2008 12:18:14 +0200 (CEST)
Subject: [PATCH] wininet: moved cookie loading from HttpOpenRequest() 
	to HttpSendRequest()
In-Reply-To: <200807031119.16140.hans@meelstraat.net>
References: <E1KE67L-0005EM-3I@localhost.localdomain>
	<200807031119.16140.hans@meelstraat.net>
Message-ID: <53165.212.234.8.113.1215080294.squirrel@webmail.ocsa-data.net>

> On Wednesday 02 July 2008 19:27:43 Yann Droneaud wrote:
>
>> This patch does the following:
>>
>> - Move cookie retrieval code to HTTP_HttpSendRequest()
>> - Don't allocate memory for url if INTERNET_FLAG_NO_COOKIES is enabled
>> - Be sure to not overflow lpszCookies:
>>   buffer size was nCookieSize + 1 + 8,
>>   written size is 8 + (nCookieSize - 1) + 2 + 1
>> - Optimized request header generation:
>>    sprintfW() replaced by strcpyW()
>>    strcatW() replaced by strcpyW()
>>    removed call to strlenW() for HTTP_HttpAddRequestHeadersW()
>> - Use HTTP_ADDREQ_FLAG_ADD instead of HTTP_ADDHDR_FLAG_ADD
>> - Use HTTP_ADDREQ_FLAG_REPLACE to replace the cookie instead of adding
>
> Thanks Yann, good to see you move on to fix more bugs. To be accepted
> in git each of those items should be a separate patch though, and the
> impact of moving the cookie code is such that it needs a test case.
>

Please, don't ask me to split the patch in more than two patches:
- one for moving the code and using FLAG_REPLACE
- one for cleanup/optimization
Doing more will took me too much time.

And I can't write the test case alone: it requires a HTTP server with some
pages that set cookies, redirect and check the cookies.

Regards.

-- 
Yann Droneaud




From hzhrong at gmail.com  Thu Jul  3 09:29:21 2008
From: hzhrong at gmail.com (Huang, Zhangrong)
Date: Thu, 3 Jul 2008 22:29:21 +0800
Subject: Sorry, resend,
	with patch now. [try 3] gdi32/tests: Add tests for GdiGetCodePage.
In-Reply-To: <8763rngsj9.fsf@wine.dyndns.org>
References: <b4cc5a3d0807020848m77b9649epa3360a880122f2a@mail.gmail.com>
	<8763rngsj9.fsf@wine.dyndns.org>
Message-ID: <b4cc5a3d0807030729u5137d438v60ccc32fefe4e947@mail.gmail.com>

Hi,

2008/7/3 Alexandre Julliard <julliard at winehq.org>:
> It doesn't work here:
>
> ../../../tools/runtest -q -P wine -M gdi32.dll -T ../../.. -p gdi32_test.exe.so font.c && touch font.ok
> font.c:830: Test failed: data index 14: expected font codepage 42, got 1252
> font.c:830: Test failed: data index 17: expected font codepage 936, got 1252

That's because test GetTextCharset failed.

Should I comment out this test or change to:

ok( csi.ciACP == gd[i].font_text_cp && cp == gd[i].expected_cp, .....);


> make[2]: *** [font.ok] Error 6


-- 
$ apt-get moo
 (__)
 (oo)
 /------\/
 / | ||
 * /\---/\
 ~~ ~~
...."Have you mooed today?"...


From austinenglish at gmail.com  Thu Jul  3 09:39:36 2008
From: austinenglish at gmail.com (Austin English)
Date: Thu, 3 Jul 2008 09:39:36 -0500
Subject: Debugging Question
In-Reply-To: <486C479A.6000108@aol.com>
References: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>
	<1096648c0807021434u1f90732bo212e787a27b5e862@mail.gmail.com>
	<b4cc5a3d0807021717r351d5894sb7974025b34a1bf7@mail.gmail.com>
	<b130c85e0807021944l3119aef6ma3ed4bbe5540faf8@mail.gmail.com>
	<486C479A.6000108@aol.com>
Message-ID: <b6bb06270807030739s4280fed7wf1c14628f1ce76fb@mail.gmail.com>

On Wed, Jul 2, 2008 at 10:29 PM, Chris Ahrendt <celticht32 at aol.com> wrote:
> Is there a way within wine or wine debug to tell it to output just the
> API's
> which are being called? I am trying to debug a exception  that causes an
> application
> to crash. As usual I  don't have the windows source code in order to
> debug it that way.
>
>
> So I was hoping there is a way within wine to tell what API's are being
> called.
>
>
> Sincerely
> Chris
>
>
>
>
>
>

WINEDEBUG=+relay


From vitperov at etersoft.ru  Thu Jul  3 09:47:40 2008
From: vitperov at etersoft.ru (Vitaly Perov)
Date: Thu, 3 Jul 2008 18:47:40 +0400
Subject: Unable to make crosstest for mlang/tests
Message-ID: <200807031847.41445.vitperov@etersoft.ru>

"make" command works, but when I try "make crosstest" the following message 
appears:
mlang.cross.o: In function `func_mlang':
/home/vitperov/Projects/wine/dlls/mlang/tests/mlang.c:831: undefined reference 
to `_IID_IMultiLanguage2'
/home/vitperov/Projects/wine/dlls/mlang/tests/mlang.c:864: undefined reference 
to `_IID_IMLangFontLink'

I've solved this problem by inserting:
const GUID IID_IMLangFontLink_n DECLSPEC_HIDDEN; 
const GUID IID_IMLangFontLink_n = { 0x359f3441, 0xbd4a, 0x11d0,
    { 0xb1, 0x88, 0x00, 0xaa, 0x00, 0x38, 0xc9, 0x69 } };

const GUID IID_IMultiLanguage2_n DECLSPEC_HIDDEN; 
const GUID IID_IMultiLanguage2_n = { 0xdccfc164, 0x2b38, 0x11d2,
    { 0xb7, 0xec, 0x00, 0xc0, 0x4f,0x8f,0x5d,0x9a } };

and then use &IID_IMultiLanguage2_n instead of &IID_IMultiLanguage2.

But it is not good decision!

Does anybody know the correct way to fix these tests?

-- 
Best wishes,
Vitaly Perov
Russia, Saint-Petersburg. www.etersoft.ru


From hzhrong at gmail.com  Thu Jul  3 10:31:16 2008
From: hzhrong at gmail.com (Huang, Zhangrong)
Date: Thu, 3 Jul 2008 23:31:16 +0800
Subject: EnterCriticalSection throws exception?
In-Reply-To: <b130c85e0807021944l3119aef6ma3ed4bbe5540faf8@mail.gmail.com>
References: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>
	<1096648c0807021434u1f90732bo212e787a27b5e862@mail.gmail.com>
	<b4cc5a3d0807021717r351d5894sb7974025b34a1bf7@mail.gmail.com>
	<b130c85e0807021944l3119aef6ma3ed4bbe5540faf8@mail.gmail.com>
Message-ID: <b4cc5a3d0807030831q171a4f53x7b2b570cb6ecaaf6@mail.gmail.com>

Hi,

2008/7/3 Maarten Lankhorst <m.b.lankhorst at gmail.com>:
> Hello,
> I think that is a bad idea, while there might be 1 or 2 real genuine
> uses for only throwing an exception while debugging, 99% of the time
> it's really wine deadlocking itself, it's wine's own fault and I would
> rather see the backtraces of the deadlock rather then the app hanging
> forever.

OK, my thoughts:

1. A patch for Wine that throws exception for Wine internal locks only
when debug is present, so after waiting for 65 seconds, some apps
don't crash. Of course if you run app under debugger, you get
exception to check deadlock.

2. Another patch to implement the missing timeout feature, Wine checks
the timeout value NtCurrentTeb()->Peb->CriticalSectionTimeout which
comes from registry
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session
Manager\CriticalSectionTimeout, then throws EXCEPTION_POSSIBLE_DEADLOCK..
So if you want to check deadlock, setting the registry value to 30
seconds or 60 seconds or any value you want.


-- 
$ apt-get moo
 (__)
 (oo)
 /------\/
 / | ||
 * /\---/\
 ~~ ~~
...."Have you mooed today?"...


From juan.lang at gmail.com  Thu Jul  3 10:45:55 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 3 Jul 2008 08:45:55 -0700
Subject: [UPDATE] shell32: Check registry entry for cpl files (in standard
	control panel)
In-Reply-To: <C370D6DEA0854E8AAE69F70F820AF408@lan.owenrudge.net>
References: <486BB61A.1050105@owenrudge.net>
	<1096648c0807021205s70fb544fje608489e338c45a7@mail.gmail.com>
	<C370D6DEA0854E8AAE69F70F820AF408@lan.owenrudge.net>
Message-ID: <3a768c550807030845i29733a00xa414c67ee8255a8@mail.gmail.com>

> Well, technically, they would be registered in the [mmcpl] section of
> control.ini, which is then mapped in the registry
(snip)
> I could add a check for CPL entries in control.ini if desired using the
> GetPrivateProfileSection function, and if/when Wine does support INI file
> mapping, the code wouldn't then need updating to point to the "right" place.

That sounds like the right way to do it.

.ini file mappings are on Alexandre's todo list, fwiw:
http://wiki.winehq.org/AlexandreJulliard
--Juan


From ovek at arcticnet.no  Thu Jul  3 11:02:27 2008
From: ovek at arcticnet.no (Ove Kaaven)
Date: Thu, 03 Jul 2008 12:02:27 -0400
Subject: Get Windows-PID for process with known Unix-PID
In-Reply-To: <486CD1E7.6060700@seclab.tuwien.ac.at>
References: <486CD1E7.6060700@seclab.tuwien.ac.at>
Message-ID: <486CF813.4020807@arcticnet.no>

Martin Szydlowski wrote:
> I know I can get the Windows-PIDs using winedbg->info process but there
> is no trace of Unix PIDs there. Also, I need a scriptable way to do
> this, best being a small app that gets a Unix PID and prints the
> matching Windows PID to console.

I don't think there's currently a way to do this. You may have to write 
a Winelib wrapper program that starts your main program and prints its 
Windows PID on stdout or something, so that your script can capture it.


From xixsimplicityxix at gmail.com  Thu Jul  3 11:16:01 2008
From: xixsimplicityxix at gmail.com (John Klehm)
Date: Thu, 3 Jul 2008 11:16:01 -0500
Subject: Unable to make crosstest for mlang/tests
In-Reply-To: <200807031847.41445.vitperov@etersoft.ru>
References: <200807031847.41445.vitperov@etersoft.ru>
Message-ID: <78a7dad00807030916nff0b50do97994fc27a642879@mail.gmail.com>

On Thu, Jul 3, 2008 at 9:47 AM, Vitaly Perov <vitperov at etersoft.ru> wrote:
> "make" command works, but when I try "make crosstest" the following message
> appears:
> mlang.cross.o: In function `func_mlang':
> /home/vitperov/Projects/wine/dlls/mlang/tests/mlang.c:831: undefined reference
> to `_IID_IMultiLanguage2'
> /home/vitperov/Projects/wine/dlls/mlang/tests/mlang.c:864: undefined reference
> to `_IID_IMLangFontLink'
>
> I've solved this problem by inserting:
> const GUID IID_IMLangFontLink_n DECLSPEC_HIDDEN;
> const GUID IID_IMLangFontLink_n = { 0x359f3441, 0xbd4a, 0x11d0,
>    { 0xb1, 0x88, 0x00, 0xaa, 0x00, 0x38, 0xc9, 0x69 } };
>
> const GUID IID_IMultiLanguage2_n DECLSPEC_HIDDEN;
> const GUID IID_IMultiLanguage2_n = { 0xdccfc164, 0x2b38, 0x11d2,
>    { 0xb7, 0xec, 0x00, 0xc0, 0x4f,0x8f,0x5d,0x9a } };
>
> and then use &IID_IMultiLanguage2_n instead of &IID_IMultiLanguage2.
>
> But it is not good decision!
>
> Does anybody know the correct way to fix these tests?
>

Add your fix to w32api (mingws headers) with a patch or use wines
headers to cross compile.  If you patch w32api send your patch to Paul
Millar. If you want to use Wine's headers try my script.

http://klehm.net/wine/crossbuild_tricks.sh.

HTH,
John Klehm


From julliard at winehq.org  Thu Jul  3 11:22:57 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 03 Jul 2008 18:22:57 +0200
Subject: Unable to make crosstest for mlang/tests
In-Reply-To: <78a7dad00807030916nff0b50do97994fc27a642879@mail.gmail.com>
	(John Klehm's message of "Thu, 3 Jul 2008 11:16:01 -0500")
References: <200807031847.41445.vitperov@etersoft.ru>
	<78a7dad00807030916nff0b50do97994fc27a642879@mail.gmail.com>
Message-ID: <87od5fey3i.fsf@wine.dyndns.org>

"John Klehm" <xixsimplicityxix at gmail.com> writes:

> Add your fix to w32api (mingws headers) with a patch or use wines
> headers to cross compile.  If you patch w32api send your patch to Paul
> Millar. If you want to use Wine's headers try my script.
>
> http://klehm.net/wine/crossbuild_tricks.sh.

Note that most of the issues that your script is hacking around are
fixed properly now. You should get rid of them as they will probably
cause more harm than good, especially the exception handling bits.

-- 
Alexandre Julliard
julliard at winehq.org


From xixsimplicityxix at gmail.com  Thu Jul  3 11:26:13 2008
From: xixsimplicityxix at gmail.com (John Klehm)
Date: Thu, 3 Jul 2008 11:26:13 -0500
Subject: Unable to make crosstest for mlang/tests
In-Reply-To: <87od5fey3i.fsf@wine.dyndns.org>
References: <200807031847.41445.vitperov@etersoft.ru>
	<78a7dad00807030916nff0b50do97994fc27a642879@mail.gmail.com>
	<87od5fey3i.fsf@wine.dyndns.org>
Message-ID: <78a7dad00807030926r1fa243a4kdd8b89f6e212fcb6@mail.gmail.com>

On Thu, Jul 3, 2008 at 11:22 AM, Alexandre Julliard <julliard at winehq.org> wrote:
> "John Klehm" <xixsimplicityxix at gmail.com> writes:
>
>> Add your fix to w32api (mingws headers) with a patch or use wines
>> headers to cross compile.  If you patch w32api send your patch to Paul
>> Millar. If you want to use Wine's headers try my script.
>>
>> http://klehm.net/wine/crossbuild_tricks.sh.
>
> Note that most of the issues that your script is hacking around are
> fixed properly now. You should get rid of them as they will probably
> cause more harm than good, especially the exception handling bits.
>
> --
> Alexandre Julliard
> julliard at winehq.org
>

Ahh good to know, thanks!

--John Klehm


From zac at zacbrown.org  Thu Jul  3 11:46:17 2008
From: zac at zacbrown.org (Zac Brown)
Date: Thu, 03 Jul 2008 09:46:17 -0700
Subject: Thoughts on implementation of winhttp.dll
In-Reply-To: <200807031001.00726.hans@meelstraat.net>
References: <486A88A6.1040905@zacbrown.org>
	<1096648c0807021456g7ecc0ea9g429d05f4d77854a6@mail.gmail.com>
	<200807031001.00726.hans@meelstraat.net>
Message-ID: <486D0259.20103@zacbrown.org>

Hans Leidekker wrote:
> On Wednesday 02 July 2008 23:56:51 Rob Shearman wrote:
> 
>> How about:
>> 3) Copy the networking sublayer from wininet into winhttp and build on top
>> of that to implement winhttp. Reimplement wininet on top of winhttp.
> 
> Drawback to this option is that you're going to destabilize wininet, but
> perhaps this is feasible now that we have a stable branch.
> 
>  -Hans
> 

I can see that it would be useful to do this so only one http set of functions 
need be updated as adjustments are made.

I'd say it would definitely be something to do well after winhttp is stabilized.

-Zac



From wine-devel at kievinfo.com  Thu Jul  3 11:51:20 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Thu, 03 Jul 2008 10:51:20 -0600
Subject: EnterCriticalSection throws exception?
In-Reply-To: <b4cc5a3d0807030831q171a4f53x7b2b570cb6ecaaf6@mail.gmail.com>
References: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>	<1096648c0807021434u1f90732bo212e787a27b5e862@mail.gmail.com>	<b4cc5a3d0807021717r351d5894sb7974025b34a1bf7@mail.gmail.com>	<b130c85e0807021944l3119aef6ma3ed4bbe5540faf8@mail.gmail.com>
	<b4cc5a3d0807030831q171a4f53x7b2b570cb6ecaaf6@mail.gmail.com>
Message-ID: <486D0388.7080807@kievinfo.com>

Huang, Zhangrong wrote:
> Hi,
> 
> 2008/7/3 Maarten Lankhorst <m.b.lankhorst at gmail.com>:
>> Hello,
>> I think that is a bad idea, while there might be 1 or 2 real genuine
>> uses for only throwing an exception while debugging, 99% of the time
>> it's really wine deadlocking itself, it's wine's own fault and I would
>> rather see the backtraces of the deadlock rather then the app hanging
>> forever.
> 
> OK, my thoughts:
> 
> 1. A patch for Wine that throws exception for Wine internal locks only
> when debug is present, so after waiting for 65 seconds, some apps
> don't crash. Of course if you run app under debugger, you get
> exception to check deadlock.
> 
> 2. Another patch to implement the missing timeout feature, Wine checks
> the timeout value NtCurrentTeb()->Peb->CriticalSectionTimeout which
> comes from registry
> HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session
> Manager\CriticalSectionTimeout, then throws EXCEPTION_POSSIBLE_DEADLOCK..
> So if you want to check deadlock, setting the registry value to 30
> seconds or 60 seconds or any value you want.
> 
> 

Using something like this in Wine currently is ill advised. For example 
crit-sections in sound drivers will timeout when some games load next level 
on a slow hardware. However everything is functioning properly after game is 
loaded. Generating an exception will most likely cause app to crash/exit.

This can be the case for number of other resources protected with crit-sections.

Vitaliy.


From m.b.lankhorst at gmail.com  Thu Jul  3 12:32:42 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Thu, 3 Jul 2008 10:32:42 -0700
Subject: wined3d: Fix a deadlock that may occur during initialization
In-Reply-To: <d658b69e0807022337x3bcf7eabu525d76b6f8a843@mail.gmail.com>
References: <b130c85e0807022020g59318670o561370ad8be9ba5b@mail.gmail.com>
	<d658b69e0807022337x3bcf7eabu525d76b6f8a843@mail.gmail.com>
Message-ID: <b130c85e0807031032l6d9e2014i5068d11f3298ab8a@mail.gmail.com>

Hi Hans,

2008/7/2 H. Verbeet <hverbeet at gmail.com>:
> 2008/7/3 Maarten Lankhorst <m.b.lankhorst at gmail.com>:
>> - * Copyright 2007-2008 Stefan D?singer for CodeWeavers
>> + * Copyright 2007-2008 Stefan D???singer for CodeWeavers
>
> You shouldn't be changing Stefan's name though.
True, my editor keeps messing it up, it expects UTF-8 encoding, but
some parts of wine use different encoding. Maybe it's time to
standardize wine's encoding?

Cheers,
Maarten


From juan.lang at gmail.com  Thu Jul  3 13:01:15 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 3 Jul 2008 11:01:15 -0700
Subject: richedit: Store richedit version rather than boolean
	bEmulateVersion10 value
Message-ID: <3a768c550807031101nfcc59c6hee4e4b53b32b617a@mail.gmail.com>

Hi Dylan,

-  if (!editor->bEmulateVersion10 || (editor->nEventMask & ENM_UPDATE))
+  if (!editor->dwEmulatedVersion || (editor->nEventMask & ENM_UPDATE))

This change is incorrect, as dwEmulatedVersion is never set to 0.  I
believe you mean if (editor->dwEmulatedVersion > 0x100 || ...

I have to ask, though:  what bug does this fix?
--Juan


From dylan.ah.smith at gmail.com  Thu Jul  3 13:26:11 2008
From: dylan.ah.smith at gmail.com (Dylan Smith)
Date: Thu, 3 Jul 2008 14:26:11 -0400
Subject: richedit: Store richedit version rather than boolean
	bEmulateVersion10 value
In-Reply-To: <3a768c550807031101nfcc59c6hee4e4b53b32b617a@mail.gmail.com>
References: <3a768c550807031101nfcc59c6hee4e4b53b32b617a@mail.gmail.com>
Message-ID: <5c6ee3b70807031126m1ef17608ueb554b6b75aba53@mail.gmail.com>

On Thu, Jul 3, 2008 at 2:01 PM, Juan Lang <juan.lang at gmail.com> wrote:

> Hi Dylan,
>
> -  if (!editor->bEmulateVersion10 || (editor->nEventMask & ENM_UPDATE))
> +  if (!editor->dwEmulatedVersion || (editor->nEventMask & ENM_UPDATE))
>
> This change is incorrect, as dwEmulatedVersion is never set to 0.  I
> believe you mean if (editor->dwEmulatedVersion > 0x100 || ...
>

You're right, that was a mistake.  Thanks for catching it.

I have to ask, though:  what bug does this fix?
>

This doesn't fix a bug, but it allows me to add functionality for
msftedit.dll without changing the way riched20.dll works when loaded
directly.  Without storing more than a boolean value it will be hard to
support the multiple versions of richedit controls.

I would like to properly implement tables for richedit controls, which
greatly differs in how it is implemented between riched20.dll and
msftedit.dll.  Should I only worry about how it is done in the newer
richedit controls?  I am worried that this will cause problems considering
that amy program that loads msftedit.dll assumes that they are getting a
specific implementation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080703/cb69a66a/attachment.htm 

From dsh at linux.ucla.edu  Thu Jul  3 13:57:33 2008
From: dsh at linux.ucla.edu (Dan Hipschman)
Date: Thu, 3 Jul 2008 11:57:33 -0700
Subject: RFC: More tests for riched20 ITextServices
In-Reply-To: <bcab73240807030032i523ef83bv1a562ef0c396ff1@mail.gmail.com>
References: <bcab73240807030032i523ef83bv1a562ef0c396ff1@mail.gmail.com>
Message-ID: <20080703185733.GV21444@linux.ucla.edu>

On Thu, Jul 03, 2008 at 05:32:32PM +1000, Austin Lund wrote:
> I have run these with the native dll in wine and it works fine, but
> would like someone to test them on windows platforms.

I couldn't get these to compile within a few minutes due to not being
familiar with what headers were needed, but I can comment on a few
things to get the ball rolling.

> +#include "config.h"
> +#include "wine/port.h"

These should not be included in tests.

> +    trace("(%p) QueryInterface requesting rrid %p -> ppvObject %p\n",
> +          This, riid, ppvObject);

Go easy on the trace calls in tests.

> +    *ppvObject = NULL;
> +
> +    if (IsEqualIID(riid, &IID_IUnknown))
> +        *ppvObject = (LPVOID)This;
> +    else if (IsEqualIID(riid, &IID_ITextHost))
> +        *ppvObject = (LPVOID)This;
> +    else
> +        return E_NOINTERFACE;
> +
> +    trace("ppvObject now %p\n",ppvObject);
> +    if (*ppvObject)
> +    {
> +        ITextHost_AddRef((ITextHost *)(*ppvObject));
> +        return S_OK;
> +    }
> +
> +    return E_NOINTERFACE;

This could be easily cleaned up.

> +    extern typeof(func) THISCALL(func);                                 \
> +                        __ASM_GLOBAL_FUNC(__thiscall_ ## func,          \
> +                                          "popl %eax\n\t"               \
> +                                          "pushl %ecx\n\t"              \
> +                                          "pushl %eax\n\t"              \
> +                                          "jmp " __ASM_NAME(#func) )

I would comment on the use of typeof, being a GCC extension, it should
be avoided.  I don't know why it's in the source already; unless we are
allowing them now maybe it just slipped by.

> +    dummyTextHost = CoTaskMemAlloc(sizeof(*dummyTextHost));
> +    if (dummyTextHost == NULL) {
> +	trace("Insufficient memory to create ITextHost interface\n");
> +	return FALSE;
> +    }

You can use skip for this sort of thing.

> +    init = CoTaskMemAlloc(sizeof(*init));
> +    if (init == NULL) {
> +	trace("Insufficient memory to create IUnknown interface\n");
> +	return FALSE;
> +    }
> +    result = CreateTextServices(NULL,(ITextHost*)dummyTextHost, &init);

Are you sure you need to allocate space for init here?  Usually in this
sort of situation you don't, and it makes little sense to allocate
sizeof(IUnknown) space since this is just an interface.

> +    ok(&(*txtserv) != NULL , "Could not get ITextServices interface\n");

This is a strange expression.  Wouldn't 'txtserv != NULL' work, and not
crash if txtserv is NULL?

Anyway, hope that helps, but I'm not too familiar with what you are
trying to do.  Maybe someone can give you more help on the core issues.


From celticht32 at aol.com  Thu Jul  3 14:50:40 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Thu, 03 Jul 2008 15:50:40 -0400
Subject: Debugging Question
In-Reply-To: <b6bb06270807030739s4280fed7wf1c14628f1ce76fb@mail.gmail.com>
References: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>	
	<1096648c0807021434u1f90732bo212e787a27b5e862@mail.gmail.com>	
	<b4cc5a3d0807021717r351d5894sb7974025b34a1bf7@mail.gmail.com>	
	<b130c85e0807021944l3119aef6ma3ed4bbe5540faf8@mail.gmail.com>	
	<486C479A.6000108@aol.com>
	<b6bb06270807030739s4280fed7wf1c14628f1ce76fb@mail.gmail.com>
Message-ID: <486D2D90.8010108@aol.com>

Austin English wrote:
> On Wed, Jul 2, 2008 at 10:29 PM, Chris Ahrendt <celticht32 at aol.com> wrote:
>> Is there a way within wine or wine debug to tell it to output just the
>> API's
>> which are being called? I am trying to debug a exception  that causes an
>> application
>> to crash. As usual I  don't have the windows source code in order to
>> debug it that way.
>>
>>
>> So I was hoping there is a way within wine to tell what API's are being
>> called.
>>
>>
>> Sincerely
>> Chris
>>
>>
>>
>>
>>
>>
> 
> WINEDEBUG=+relay

Not looking for the calls within wine...  thanks for all the pointers 
guys.. esp the one to all the flags..

What I am looking for exactly is a way to just get wine to dump the 
Win32 API calls that are made... I am trying to figure out what an 
application calls  right before it gets an exception from the result 
sent back from wine. If I knew the API its calling I could write a test 
case and find the issue.

So is there any way to output just the win32 API calls and no wine 
information.

Chris


From juan.lang at gmail.com  Thu Jul  3 14:56:12 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 3 Jul 2008 12:56:12 -0700
Subject: Debugging Question
In-Reply-To: <486D2D90.8010108@aol.com>
References: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>
	<1096648c0807021434u1f90732bo212e787a27b5e862@mail.gmail.com>
	<b4cc5a3d0807021717r351d5894sb7974025b34a1bf7@mail.gmail.com>
	<b130c85e0807021944l3119aef6ma3ed4bbe5540faf8@mail.gmail.com>
	<486C479A.6000108@aol.com>
	<b6bb06270807030739s4280fed7wf1c14628f1ce76fb@mail.gmail.com>
	<486D2D90.8010108@aol.com>
Message-ID: <3a768c550807031256y71fcac45ra92f943218d245f8@mail.gmail.com>

> So is there any way to output just the win32 API calls and no wine
> information.

That's precisely what +relay does.  I'm not sure what you mean by "no
wine information."
--Juan


From celticht32 at aol.com  Thu Jul  3 14:58:36 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Thu, 03 Jul 2008 15:58:36 -0400
Subject: EnterCriticalSection throws exception?
In-Reply-To: <b4cc5a3d0807030831q171a4f53x7b2b570cb6ecaaf6@mail.gmail.com>
References: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>	<1096648c0807021434u1f90732bo212e787a27b5e862@mail.gmail.com>	<b4cc5a3d0807021717r351d5894sb7974025b34a1bf7@mail.gmail.com>	<b130c85e0807021944l3119aef6ma3ed4bbe5540faf8@mail.gmail.com>
	<b4cc5a3d0807030831q171a4f53x7b2b570cb6ecaaf6@mail.gmail.com>
Message-ID: <486D2F6C.2070105@aol.com>

Huang, Zhangrong wrote:
> Hi,
> 
> 2008/7/3 Maarten Lankhorst <m.b.lankhorst at gmail.com>:
>> Hello,
>> I think that is a bad idea, while there might be 1 or 2 real genuine
>> uses for only throwing an exception while debugging, 99% of the time
>> it's really wine deadlocking itself, it's wine's own fault and I would
>> rather see the backtraces of the deadlock rather then the app hanging
>> forever.
> 
> OK, my thoughts:
> 
> 1. A patch for Wine that throws exception for Wine internal locks only
> when debug is present, so after waiting for 65 seconds, some apps
> don't crash. Of course if you run app under debugger, you get
> exception to check deadlock.
> 
> 2. Another patch to implement the missing timeout feature, Wine checks
> the timeout value NtCurrentTeb()->Peb->CriticalSectionTimeout which
> comes from registry
> HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session
> Manager\CriticalSectionTimeout, then throws EXCEPTION_POSSIBLE_DEADLOCK..
> So if you want to check deadlock, setting the registry value to 30
> seconds or 60 seconds or any value you want.
> 
> 

I personally prefer setting a flag of some sort.  Also have someway of 
preventing wine from locking.. So option 2 looks better to me than 
option one.. option one can cause some confusion. Also have the time out 
added to the winecfg and have it manage  the registry.

While we are at it =D  Since I read that its possible to set the wine 
debug flags in the registry (I don't remember where I read it on winehq) 
why not have a tab in winecfg (or in the pannels that the gentleman is 
working on for the summer of code) which lets you have check boxes with 
all the flags on it to set the registry.  Divide it up even into these 
are wine internal flags.. these are win flags etc... still provide for 
the WINEDEBUG=+relay etc facility..

Second thought :
Where would I put in a feature request to tell the various trace 
channels to send to a log file or pipe instead of having to manually 
pipe it... that way others could write tools that listen on the pipe to 
write debuging utilities....

Just my 2cp

Chris


From celticht32 at aol.com  Thu Jul  3 15:07:08 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Thu, 03 Jul 2008 16:07:08 -0400
Subject: Debugging Question
In-Reply-To: <3a768c550807031256y71fcac45ra92f943218d245f8@mail.gmail.com>
References: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>	
	<1096648c0807021434u1f90732bo212e787a27b5e862@mail.gmail.com>	
	<b4cc5a3d0807021717r351d5894sb7974025b34a1bf7@mail.gmail.com>	
	<b130c85e0807021944l3119aef6ma3ed4bbe5540faf8@mail.gmail.com>	
	<486C479A.6000108@aol.com>	
	<b6bb06270807030739s4280fed7wf1c14628f1ce76fb@mail.gmail.com>	
	<486D2D90.8010108@aol.com>
	<3a768c550807031256y71fcac45ra92f943218d245f8@mail.gmail.com>
Message-ID: <486D316C.9010500@aol.com>

Juan Lang wrote:
>> So is there any way to output just the win32 API calls and no wine
>> information.
> 
> That's precisely what +relay does.  I'm not sure what you mean by "no
> wine information."
> --Juan
Ok when I put +relay on I get alot of other stuff I am not looking for...

So what I am looking for is application A called Win32 api say an open 
window  or other such thing... I cant remember the exact api's (G) its 
been a long week at work..


So it would be like this

trace:d3d_caps:<win32 API called> returning w:1600, h:1200, ref:60, 
fmt:WINED3DFMT_X8R8G8B8

or something along those lines...

if relay does that does it also put in the wine calls as well?  if it 
does is there any way to filter those out... I just want the high level 
API calls nothing more...

chris

Sorry if this is rambling... like I said its been a LONG Week....


From juan.lang at gmail.com  Thu Jul  3 15:10:56 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 3 Jul 2008 13:10:56 -0700
Subject: Debugging Question
In-Reply-To: <486D316C.9010500@aol.com>
References: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>
	<1096648c0807021434u1f90732bo212e787a27b5e862@mail.gmail.com>
	<b4cc5a3d0807021717r351d5894sb7974025b34a1bf7@mail.gmail.com>
	<b130c85e0807021944l3119aef6ma3ed4bbe5540faf8@mail.gmail.com>
	<486C479A.6000108@aol.com>
	<b6bb06270807030739s4280fed7wf1c14628f1ce76fb@mail.gmail.com>
	<486D2D90.8010108@aol.com>
	<3a768c550807031256y71fcac45ra92f943218d245f8@mail.gmail.com>
	<486D316C.9010500@aol.com>
Message-ID: <3a768c550807031310w2489908h6412254c6ce6463@mail.gmail.com>

> Ok when I put +relay on I get alot of other stuff I am not looking for...

Sure.  Some Windows APIs call other Windows APIs.  +relay almost
always produces too much information, but guessing which debug channel
you really want is hard.  Sometimes you have to read the relay channel
to guess which channel you really want.

> So it would be like this
>
> trace:d3d_caps:<win32 API called> returning w:1600, h:1200, ref:60,
> fmt:WINED3DFMT_X8R8G8B8

No, that'll only appear if you turn on trace for the d3d_caps channel.
 +relay only turns it on for the relay channel.
--Juan


From celticht32 at aol.com  Thu Jul  3 15:12:20 2008
From: celticht32 at aol.com (Chris Ahrendt)
Date: Thu, 03 Jul 2008 16:12:20 -0400
Subject: Debugging Question
In-Reply-To: <3a768c550807031310w2489908h6412254c6ce6463@mail.gmail.com>
References: <b4cc5a3d0807021006i480384a1ya4bf73ddb935b90b@mail.gmail.com>	
	<1096648c0807021434u1f90732bo212e787a27b5e862@mail.gmail.com>	
	<b4cc5a3d0807021717r351d5894sb7974025b34a1bf7@mail.gmail.com>	
	<b130c85e0807021944l3119aef6ma3ed4bbe5540faf8@mail.gmail.com>	
	<486C479A.6000108@aol.com>	
	<b6bb06270807030739s4280fed7wf1c14628f1ce76fb@mail.gmail.com>	
	<486D2D90.8010108@aol.com>	
	<3a768c550807031256y71fcac45ra92f943218d245f8@mail.gmail.com>	
	<486D316C.9010500@aol.com>
	<3a768c550807031310w2489908h6412254c6ce6463@mail.gmail.com>
Message-ID: <486D32A4.7020205@aol.com>

Juan Lang wrote:
>> Ok when I put +relay on I get alot of other stuff I am not looking for...
> 
> Sure.  Some Windows APIs call other Windows APIs.  +relay almost
> always produces too much information, but guessing which debug channel
> you really want is hard.  Sometimes you have to read the relay channel
> to guess which channel you really want.
> 
>> So it would be like this
>>
>> trace:d3d_caps:<win32 API called> returning w:1600, h:1200, ref:60,
>> fmt:WINED3DFMT_X8R8G8B8
> 
> No, that'll only appear if you turn on trace for the d3d_caps channel.
>  +relay only turns it on for the relay channel.
> --Juan
ok so  its wade through relay time I guess... =) and then take a wild 
guess...  sigh...


chris


From wine.dev at web.de  Thu Jul  3 14:37:40 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Thu, 03 Jul 2008 21:37:40 +0200
Subject: [UPDATE] shell32: Check registry entry for cpl files (in
	standard control panel)
In-Reply-To: <3a768c550807030845i29733a00xa414c67ee8255a8@mail.gmail.com>
References: <486BB61A.1050105@owenrudge.net>
	<1096648c0807021205s70fb544fje608489e338c45a7@mail.gmail.com>
	<C370D6DEA0854E8AAE69F70F820AF408@lan.owenrudge.net>
	<3a768c550807030845i29733a00xa414c67ee8255a8@mail.gmail.com>
Message-ID: <1215113860.5985.8.camel@p4>

On Do, 2008-07-03 at 08:45 -0700, Juan Lang wrote:
> > Well, technically, they would be registered in the [mmcpl] section of
> > control.ini, which is then mapped in the registry
> (snip)
> > I could add a check for CPL entries in control.ini if desired using the
> > GetPrivateProfileSection function, and if/when Wine does support INI file
> > mapping, the code wouldn't then need updating to point to the "right" place.
> 
> That sounds like the right way to do it.
> 
> .ini file mappings are on Alexandre's todo list, fwiw:
> http://wiki.winehq.org/AlexandreJulliard
> --Juan


See also:
http://bugs.winehq.org/show_bug.cgi?id=4096


-- 
 
By by ... Detlef




From robertshearman at gmail.com  Thu Jul  3 15:54:39 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Thu, 3 Jul 2008 21:54:39 +0100
Subject: [UPDATE] shell32: Check registry entry for cpl files (in standard
	control panel)
In-Reply-To: <C370D6DEA0854E8AAE69F70F820AF408@lan.owenrudge.net>
References: <486BB61A.1050105@owenrudge.net>
	<1096648c0807021205s70fb544fje608489e338c45a7@mail.gmail.com>
	<C370D6DEA0854E8AAE69F70F820AF408@lan.owenrudge.net>
Message-ID: <1096648c0807031354o6143951h230d87194ea96d@mail.gmail.com>

2008/7/3 Owen Rudge <owen at owenrudge.net>:
>> Control Panel applets can also be registered in "HKCU\Control
>> Panel\MMCPL".
>
> Well, technically, they would be registered in the [mmcpl] section of
> control.ini, which is then mapped in the registry
> (HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows
> NT\CurrentVersion\IniFileMapping\control.ini) to the appropriate registry
> entry.

While they may be registered there as well, I'm pretty sure that some
versions of Microsoft Office register control panel applets in the key
I mentioned.

-- 
Rob Shearman


From piotr.caban at gmail.com  Thu Jul  3 16:08:12 2008
From: piotr.caban at gmail.com (Piotr Caban)
Date: Thu, 3 Jul 2008 23:08:12 +0200
Subject: msxml3/test: Added test file for ISAXXMLReader (6/6)
In-Reply-To: <g4gvl2$391$1@ger.gmane.org>
References: <200807022156.01609.piotr.caban@gmail.com>
	<g4gvl2$391$1@ger.gmane.org>
Message-ID: <200807032308.12959.piotr.caban@gmail.com>

Hi,
Thanks for the suggestion, I will add more tests in next patches. The main 
purpose of this patch is to create the test file. Additionally I have added a 
basic test.

Regards,
Piotr Caban


From thestig at google.com  Thu Jul  3 16:07:37 2008
From: thestig at google.com (Lei Zhang)
Date: Thu, 3 Jul 2008 14:07:37 -0700
Subject: gdi32: Implement automatic font substitution
In-Reply-To: <b4cc5a3d0807021713x2fc745fds4b872449c61458c1@mail.gmail.com>
References: <a71bd89a0807011211w296aef7dy528fde025dc832e5@mail.gmail.com>
	<897160440807011739p79023217se37e719c819bc296@mail.gmail.com>
	<b4cc5a3d0807020559r1e695cdexd14c9a3c2c05099a@mail.gmail.com>
	<897160440807020700o3ff49ea9q780989d3ce7f65f1@mail.gmail.com>
	<b4cc5a3d0807020756j5101e31ax499a1494bd2df829@mail.gmail.com>
	<897160440807020934r61fcf047x12a4fd3e0ce5edaf@mail.gmail.com>
	<558b2f5c0807021522j5c120425i2761857379079b86@mail.gmail.com>
	<b4cc5a3d0807021713x2fc745fds4b872449c61458c1@mail.gmail.com>
Message-ID: <558b2f5c0807031407j45b199e1j8a632bc62a16e447@mail.gmail.com>

On Wed, Jul 2, 2008 at 5:13 PM, Huang, Zhangrong <hzhrong at gmail.com> wrote:
> Have you tried to set FontLink? It works for me, there are no places
> have font problem. (without automatic font substitution patch)
>
> see:  http://bugs.winehq.org/attachment.cgi?id=14546
>
> [Software\\Microsoft\\Windows
> NT\\CurrentVersion\\FontLink\\SystemLink] 1208451304
> "Microsoft Sans
> Serif"=str(7):"simsun.ttc,SimSun\0gulim.ttc,Gulim\0msgothic.ttc,MS UI
> Gothic\0mingliu.ttc,PMingLiU\0"
> "Tahoma"=str(7):"simsun.ttc,SimSun\0gulim.ttc,Gulim\0msgothic.ttc,MS
> UI Gothic\0mingliu.ttc,PMingLiU\0"
>
> Ensure your system have these fonts: simsun.ttc, gulim.ttc,
> msgothic.ttc and mingliu.ttc, or change the values with proper font
> name.
>

Yes, you're right. Even without Liu Qishau's patch, if I add those
registry settings, the Asian characters show up correctly.


From thestig at google.com  Thu Jul  3 16:16:36 2008
From: thestig at google.com (Lei Zhang)
Date: Thu, 3 Jul 2008 14:16:36 -0700
Subject: gdi32: Implement automatic font substitution
In-Reply-To: <897160440807022033y6c8bdcc7p9200d04b6e36cbcf@mail.gmail.com>
References: <a71bd89a0807011211w296aef7dy528fde025dc832e5@mail.gmail.com>
	<897160440807011739p79023217se37e719c819bc296@mail.gmail.com>
	<b4cc5a3d0807020559r1e695cdexd14c9a3c2c05099a@mail.gmail.com>
	<897160440807020700o3ff49ea9q780989d3ce7f65f1@mail.gmail.com>
	<b4cc5a3d0807020756j5101e31ax499a1494bd2df829@mail.gmail.com>
	<897160440807020934r61fcf047x12a4fd3e0ce5edaf@mail.gmail.com>
	<558b2f5c0807021522j5c120425i2761857379079b86@mail.gmail.com>
	<897160440807022033y6c8bdcc7p9200d04b6e36cbcf@mail.gmail.com>
Message-ID: <558b2f5c0807031416g3dc7d58dg440658bea50a67e3@mail.gmail.com>

On Wed, Jul 2, 2008 at 8:33 PM, Liu Qishuai <lqs.buaa at gmail.com> wrote:
> Could you take a screenshot of this?
>

Oh, sorry, I messed up. I tried again on a different system and it
worked. With your patch, I didn't need to add the registry keys
Zhangrong suggested.


From owen at owenrudge.net  Thu Jul  3 17:02:14 2008
From: owen at owenrudge.net (Owen Rudge)
Date: Thu, 3 Jul 2008 23:02:14 +0100
Subject: [UPDATE] shell32: Check registry entry for cpl files (in standard
	control panel)
References: <486BB61A.1050105@owenrudge.net>
	<1096648c0807021205s70fb544fje608489e338c45a7@mail.gmail.com>
	<C370D6DEA0854E8AAE69F70F820AF408@lan.owenrudge.net>
	<1096648c0807031354o6143951h230d87194ea96d@mail.gmail.com>
Message-ID: <866654CCE0884A32B789293B4918D250@lan.owenrudge.net>

> While they may be registered there as well, I'm pretty sure that some
> versions of Microsoft Office register control panel applets in the key
> I mentioned.

Well, yes - what I meant is that the key at 
HKLM\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\IniFileMapping\control.ini 
maps any requests for control.ini, section [mmcpl] to HKCU\Control 
Panel\MMCPL.

-- 
Owen Rudge
http://www.owenrudge.net/ 



From xerox_xerox2000 at yahoo.co.uk  Thu Jul  3 17:21:04 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis Lenders)
Date: Thu, 3 Jul 2008 22:21:04 +0000 (UTC)
Subject: programs: add rudimentary dxdiag
References: <383400.99845.qm@web23204.mail.ird.yahoo.com>
	<b6bb06270806300815va6d1af4m300ba84a952ed272@mail.gmail.com>
	<1214927433.5786.8.camel@p4>
	<loom.20080702T225227-47@post.gmane.org>
	<3a768c550807021608y6e547605u331f17984197cbcf@mail.gmail.com>
Message-ID: <loom.20080703T220850-690@post.gmane.org>



>Here's what you said in your original patch:

>> - code for  spinning cube  was  partially based on  spinning cube code
>>scattered all over the internet
>>-rest was ripped of winecfg
>> - There' s a problem while minizing the d3d-window, but running it in
>>wine-0.9.22 it all goes fine, so this must be a regression somewhere, and not
a >>bug in the attached code. I'll go after that later.
>> - Hopefully you're not to picky on this patch, it 's quite some line's of
>>code,and i'm sure things need to be improved, but this does not affect wine's
>>core code but os rather an enhancement, and it 's not really possible to send
it >>in in small chuncks.

>Basically you copied code from you don't know where,
True, why reinvent the wheel (copied code from winecfg)

>minimizing doesn't work but that's not a bug, 
as far as i can see it looks like regression

>and I shouldn't be picky and accept a big crappy patch anyway. 
I admit i'm just a hobbiest, but somehow i was hoping you could point me to what
the "crappy" parts in the patch are, so that i could improve it, but i already
gave up that hope.

>Do you really wonder why you have trouble getting it committed?
Maybe i was just hoping for some positive feedback, but i'll stop wasting yours
and my time






From shelnutt2 at gmail.com  Thu Jul  3 22:24:28 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Thu, 3 Jul 2008 23:24:28 -0400
Subject: Tricking program into seeing actual gfx driver not WINE's
Message-ID: <6fc03d800807032024m75f73088j236b335c604e47bc@mail.gmail.com>

Hello All,

We have run into an interesting problem while trying to get the latest
version of Stanford's Folding at Home GPU client to work in Linux via WINE.
The programs says it does not detect a compatible GPU. Even when the user
has installed the correct Nvidia drivers (with CUDA support)  and has a
compatible GPU. The problem I believe lies in  the fact that the program is
not told that there is a Nvidia 8800 installed, instead by the nature of
WINE it see that  "WINE" is the graphics card, as WINE first translate the
direct3d calls into opengl calls that are then passed on to the GPU. So the
question is, is it possible to trick programs into believing they are
running on the right hardware? (As in fact they are).

I remember a while ago the steam system spec survey was used to see how many
people run steam via WINE. This was done by noting the graphics driver
installed and how the wine one appeared when running WINE. Well this is fine
but what we need is a way to make the program to see that it is actually
running on Nvidia hardware. Because if the client would just start then the
direct3d calls can be translated into opengl calls and the Nvidia linux
drivers can then handle them and run it all fine and dandy.

Here is the post, with error message about wrong graphics card detected,
http://www.ocforums.com/showpost.php?p=5698997&postcount=19 .


Thanks,

Seth Shelnutt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080703/449b6c8a/attachment.htm 

From m.b.lankhorst at gmail.com  Thu Jul  3 22:43:43 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Thu, 3 Jul 2008 20:43:43 -0700
Subject: Tricking program into seeing actual gfx driver not WINE's
In-Reply-To: <6fc03d800807032024m75f73088j236b335c604e47bc@mail.gmail.com>
References: <6fc03d800807032024m75f73088j236b335c604e47bc@mail.gmail.com>
Message-ID: <b130c85e0807032043u3764c74coe6715dd618ce5ed5@mail.gmail.com>

Hi Seth,

2008/7/3 Seth Shelnutt <shelnutt2 at gmail.com>:
> Hello All,
>
> We have run into an interesting problem while trying to get the latest
> version of Stanford's Folding at Home GPU client to work in Linux via WINE.
> The programs says it does not detect a compatible GPU. Even when the user
> has installed the correct Nvidia drivers (with CUDA support)  and has a
> compatible GPU. The problem I believe lies in  the fact that the program is
> not told that there is a Nvidia 8800 installed, instead by the nature of
> WINE it see that  "WINE" is the graphics card, as WINE first translate the
> direct3d calls into opengl calls that are then passed on to the GPU. So the
> question is, is it possible to trick programs into believing they are
> running on the right hardware? (As in fact they are).
>
> I remember a while ago the steam system spec survey was used to see how many
> people run steam via WINE. This was done by noting the graphics driver
> installed and how the wine one appeared when running WINE. Well this is fine
> but what we need is a way to make the program to see that it is actually
> running on Nvidia hardware. Because if the client would just start then the
> direct3d calls can be translated into opengl calls and the Nvidia linux
> drivers can then handle them and run it all fine and dandy.
>
> Here is the post, with error message about wrong graphics card detected,
> http://www.ocforums.com/showpost.php?p=5698997&postcount=19 .

Just wondering, why run the windows one on Wine and not the native linux client?

Cheers,
Maarten.


From jeffzaroyko at gmail.com  Fri Jul  4 01:01:15 2008
From: jeffzaroyko at gmail.com (Jeff Zaroyko)
Date: Fri, 4 Jul 2008 16:01:15 +1000
Subject: Tricking program into seeing actual gfx driver not WINE's
In-Reply-To: <b130c85e0807032043u3764c74coe6715dd618ce5ed5@mail.gmail.com>
References: <6fc03d800807032024m75f73088j236b335c604e47bc@mail.gmail.com>
	<b130c85e0807032043u3764c74coe6715dd618ce5ed5@mail.gmail.com>
Message-ID: <f5d9424f0807032301x3c292e8dme7c4b5ed7538ad98@mail.gmail.com>

On Fri, Jul 4, 2008 at 1:43 PM, Maarten Lankhorst
<m.b.lankhorst at gmail.com> wrote:
> Hi Seth,
>
> 2008/7/3 Seth Shelnutt <shelnutt2 at gmail.com>:
>> Hello All,
>>
>> We have run into an interesting problem while trying to get the latest
>> version of Stanford's Folding at Home GPU client to work in Linux via WINE.
>> The programs says it does not detect a compatible GPU. Even when the user
>> has installed the correct Nvidia drivers (with CUDA support)  and has a
>> compatible GPU. The problem I believe lies in  the fact that the program is
>> not told that there is a Nvidia 8800 installed, instead by the nature of
>> WINE it see that  "WINE" is the graphics card, as WINE first translate the
>> direct3d calls into opengl calls that are then passed on to the GPU. So the
>> question is, is it possible to trick programs into believing they are
>> running on the right hardware? (As in fact they are).
>>
>> I remember a while ago the steam system spec survey was used to see how many
>> people run steam via WINE. This was done by noting the graphics driver
>> installed and how the wine one appeared when running WINE. Well this is fine
>> but what we need is a way to make the program to see that it is actually
>> running on Nvidia hardware. Because if the client would just start then the
>> direct3d calls can be translated into opengl calls and the Nvidia linux
>> drivers can then handle them and run it all fine and dandy.
>>
>> Here is the post, with error message about wrong graphics card detected,
>> http://www.ocforums.com/showpost.php?p=5698997&postcount=19 .
>
> Just wondering, why run the windows one on Wine and not the native linux client?
>
> Cheers,
> Maarten.
>
>

The native linux client doesn't support using the GPU.

I had a look, the windows client calls
IWineD3DImpl_GetAdapterIdentifier which we don't give the real adapter
driver and description strings, just "Display" and "Direct3D HAL" -
changing these in dlls/wined3d/directx.c to "NVIDIA GeForce 8800" gets
past the error message, but the client needs cudart.dll which isn't
distributed with the download.

Jeff


From jeffzaroyko at gmail.com  Fri Jul  4 01:31:53 2008
From: jeffzaroyko at gmail.com (Jeff Zaroyko)
Date: Fri, 4 Jul 2008 16:31:53 +1000
Subject: Tricking program into seeing actual gfx driver not WINE's
In-Reply-To: <f5d9424f0807032301x3c292e8dme7c4b5ed7538ad98@mail.gmail.com>
References: <6fc03d800807032024m75f73088j236b335c604e47bc@mail.gmail.com>
	<b130c85e0807032043u3764c74coe6715dd618ce5ed5@mail.gmail.com>
	<f5d9424f0807032301x3c292e8dme7c4b5ed7538ad98@mail.gmail.com>
Message-ID: <f5d9424f0807032331h74421ae6j2ff72e275560919c@mail.gmail.com>

On Fri, Jul 4, 2008 at 4:01 PM, Jeff Zaroyko <jeffzaroyko at gmail.com> wrote:
>
> I had a look, the windows client calls
> IWineD3DImpl_GetAdapterIdentifier which we don't give the real adapter
> driver and description strings, just "Display" and "Direct3D HAL" -
> changing these in dlls/wined3d/directx.c to "NVIDIA GeForce 8800" gets
> past the error message, but the client needs cudart.dll which isn't
> distributed with the download.
>
> Jeff
>

Ah.. they are but under Documents and Settings\User\Application
Data\Folding at home-gpu - but there's not much sense in me attempting to
run this, as I don't have the Linux CUDA drivers installed, so it
falls back to acting as a regular CPU client.

Jeff


From phil.krylov at gmail.com  Thu Jul  3 18:03:12 2008
From: phil.krylov at gmail.com (Phil Krylov)
Date: Fri, 4 Jul 2008 03:03:12 +0400
Subject: richedit: Store richedit version rather than boolean
	bEmulateVersion10 value
In-Reply-To: <c10dbf450807031601p4224cben795baedecc8d0a07@mail.gmail.com>
References: <3a768c550807031101nfcc59c6hee4e4b53b32b617a@mail.gmail.com>
	<5c6ee3b70807031126m1ef17608ueb554b6b75aba53@mail.gmail.com>
	<c10dbf450807031601p4224cben795baedecc8d0a07@mail.gmail.com>
Message-ID: <c10dbf450807031603j63320c51g2e0d74003817b4cc@mail.gmail.com>

On 03/07/2008, Dylan Smith <dylan.ah.smith at gmail.com> wrote:
 > On Thu, Jul 3, 2008 at 2:01 PM, Juan Lang <juan.lang at gmail.com> wrote:
 >
 > > Hi Dylan,
 > >
 > > -  if (!editor->bEmulateVersion10 || (editor->nEventMask & ENM_UPDATE))
 > > +  if (!editor->dwEmulatedVersion || (editor->nEventMask & ENM_UPDATE))
 > >
 > > This change is incorrect, as dwEmulatedVersion is never set to 0.  I
 > > believe you mean if (editor->dwEmulatedVersion > 0x100 || ...
 > >
 >
 > You're right, that was a mistake.  Thanks for catching it.
 >
 > > I have to ask, though:  what bug does this fix?
 > >
 >
 > This doesn't fix a bug, but it allows me to add functionality for
 > msftedit.dll without changing the way riched20.dll works when loaded
 > directly.  Without storing more than a boolean value it will be hard to
 > support the multiple versions of richedit controls.
 >
 >  I would like to properly implement tables for richedit controls, which
 > greatly differs in how it is implemented between riched20.dll and
 > msftedit.dll.  Should I only worry about how it is done in the newer
 > richedit controls?  I am worried that this will cause problems considering
 > that amy program that loads msftedit.dll assumes that they are getting a
 > specific implementation.


IMHO no real applications depend on poverty of table functionality of
 versions 2 and 3. If somebody finds one, we could think about it
 then... To my knowledge, there is just one thing better in table
 support of 2.0 than in 3.0 and IIRC 4.1: better breaking of long
 tables on page boundaries when printing. But I consider it a bug in
 versions >2.0 which we should not replicate (when EM_FORMATRANGE will
 be supported).

 -- Ph.


From austin.lund at gmail.com  Thu Jul  3 19:26:10 2008
From: austin.lund at gmail.com (Austin Lund)
Date: Fri, 4 Jul 2008 10:26:10 +1000
Subject: RFC: More tests for riched20 ITextServices
In-Reply-To: <20080703185733.GV21444@linux.ucla.edu>
References: <bcab73240807030032i523ef83bv1a562ef0c396ff1@mail.gmail.com>
	<20080703185733.GV21444@linux.ucla.edu>
Message-ID: <bcab73240807031726m29505b52n211efa754314ad7e@mail.gmail.com>

2008/7/4 Dan Hipschman <dsh at linux.ucla.edu>:
> On Thu, Jul 03, 2008 at 05:32:32PM +1000, Austin Lund wrote:
>> I have run these with the native dll in wine and it works fine, but
>> would like someone to test them on windows platforms.
>
> I couldn't get these to compile within a few minutes due to not being
> familiar with what headers were needed, but I can comment on a few
> things to get the ball rolling.

What were the compile errors?  At the moment I can only test it under
the wine source.  Perhaps this is related to the mangling done for the
thiscall function calls.

>> +#include "config.h"
>> +#include "wine/port.h"
>
> These should not be included in tests.

This is related to the __ASM_GLOBAL_FUNC and __ASM_NAME used in the
section where the thiscall to standard call conversion is done.  This
is also done in dlls/riched20/txtsrv.c.

> Go easy on the trace calls in tests.

Will do.  Done that.

>> +    *ppvObject = NULL;
>> +
>> +    if (IsEqualIID(riid, &IID_IUnknown))
>> +        *ppvObject = (LPVOID)This;
>> +    else if (IsEqualIID(riid, &IID_ITextHost))
>> +        *ppvObject = (LPVOID)This;
>> +    else
>> +        return E_NOINTERFACE;
>> +
>> +    trace("ppvObject now %p\n",ppvObject);
>> +    if (*ppvObject)
>> +    {
>> +        ITextHost_AddRef((ITextHost *)(*ppvObject));
>> +        return S_OK;
>> +    }
>> +
>> +    return E_NOINTERFACE;
>
> This could be easily cleaned up.

I'm not sure what else can be done.  I got rid of the "else if" part.

>
>> +    extern typeof(func) THISCALL(func);                                 \
>> +                        __ASM_GLOBAL_FUNC(__thiscall_ ## func,          \
>> +                                          "popl %eax\n\t"               \
>> +                                          "pushl %ecx\n\t"              \
>> +                                          "pushl %eax\n\t"              \
>> +                                          "jmp " __ASM_NAME(#func) )
>
> I would comment on the use of typeof, being a GCC extension, it should
> be avoided.  I don't know why it's in the source already; unless we are
> allowing them now maybe it just slipped by.

I guess the function prototype could be taken out of the #define and
each function given its own definition.  I'm not sure if this is a
good idea.  Such is the evil of the conversion to thiscall.

>
>> +    dummyTextHost = CoTaskMemAlloc(sizeof(*dummyTextHost));
>> +    if (dummyTextHost == NULL) {
>> +     trace("Insufficient memory to create ITextHost interface\n");
>> +     return FALSE;
>> +    }
>
> You can use skip for this sort of thing.

Done, I think.  I'm not sure if I'm using it right.

>> +    init = CoTaskMemAlloc(sizeof(*init));
>> +    if (init == NULL) {
>> +     trace("Insufficient memory to create IUnknown interface\n");
>> +     return FALSE;
>> +    }
>> +    result = CreateTextServices(NULL,(ITextHost*)dummyTextHost, &init);
>
> Are you sure you need to allocate space for init here?  Usually in this
> sort of situation you don't, and it makes little sense to allocate
> sizeof(IUnknown) space since this is just an interface.

You are right.  This was unnecessary.  It is gone now.

>> +    ok(&(*txtserv) != NULL , "Could not get ITextServices interface\n");
>
> This is a strange expression.  Wouldn't 'txtserv != NULL' work, and not
> crash if txtserv is NULL?

Too much coffee/late nights makes one go crazy.

> Anyway, hope that helps, but I'm not too familiar with what you are
> trying to do.  Maybe someone can give you more help on the core issues.

Thank you for your comments!!

The main issues addressed in the first couple of patches is the
implementation of thicall function calls as the native riched20.dll
uses this calling convention for the ITestServices interface.

I remade the patch series with these changes to the first patch.  The
evil of thiscall in C continues in the second patch, but after that
things can concentrate on actually testing the ITextServices calls.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0001-richedit-Added-conformance-tests-for-txtsrv.c.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080704/bb292ba8/attachment-0004.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0002-richedit-Added-tests-for-TxSetText-and-TxGetText-in-t.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080704/bb292ba8/attachment-0005.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0003-richedit-Added-tests-for-simple-strings-for-TxGetNatu.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080704/bb292ba8/attachment-0006.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0004-richedit-Added-a-test-for-TxDraw-in-txtsrv.c.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080704/bb292ba8/attachment-0007.txt 

From austin.lund at gmail.com  Thu Jul  3 21:16:18 2008
From: austin.lund at gmail.com (Austin Lund)
Date: Fri, 4 Jul 2008 12:16:18 +1000
Subject: RFC: More tests for riched20 ITextServices
In-Reply-To: <bcab73240807031726m29505b52n211efa754314ad7e@mail.gmail.com>
References: <bcab73240807030032i523ef83bv1a562ef0c396ff1@mail.gmail.com>
	<20080703185733.GV21444@linux.ucla.edu>
	<bcab73240807031726m29505b52n211efa754314ad7e@mail.gmail.com>
Message-ID: <bcab73240807031916m44ee91b3y7ae5d44ae317c5e7@mail.gmail.com>

>>> +    extern typeof(func) THISCALL(func);                                 \
>>> +                        __ASM_GLOBAL_FUNC(__thiscall_ ## func,          \
>>> +                                          "popl %eax\n\t"               \
>>> +                                          "pushl %ecx\n\t"              \
>>> +                                          "pushl %eax\n\t"              \
>>> +                                          "jmp " __ASM_NAME(#func) )
>>
>> I would comment on the use of typeof, being a GCC extension, it should
>> be avoided.  I don't know why it's in the source already; unless we are
>> allowing them now maybe it just slipped by.
>
> I guess the function prototype could be taken out of the #define and
> each function given its own definition.  I'm not sure if this is a
> good idea.  Such is the evil of the conversion to thiscall.
>

OK. I put in all the individual prototypes for the thiscall functions.
 Revised patches attached.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0001-richedit-Added-conformance-tests-for-txtsrv.c.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080704/1ccdb423/attachment-0004.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0002-richedit-Added-tests-for-TxSetText-and-TxGetText-in-t.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080704/1ccdb423/attachment-0005.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0003-richedit-Added-tests-for-simple-strings-for-TxGetNatu.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080704/1ccdb423/attachment-0006.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0004-richedit-Added-a-test-for-TxDraw-in-txtsrv.c.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080704/1ccdb423/attachment-0007.txt 

From m.b.lankhorst at gmail.com  Fri Jul  4 01:58:37 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Thu, 3 Jul 2008 23:58:37 -0700
Subject: RFC: More tests for riched20 ITextServices
In-Reply-To: <bcab73240807031726m29505b52n211efa754314ad7e@mail.gmail.com>
References: <bcab73240807030032i523ef83bv1a562ef0c396ff1@mail.gmail.com>
	<20080703185733.GV21444@linux.ucla.edu>
	<bcab73240807031726m29505b52n211efa754314ad7e@mail.gmail.com>
Message-ID: <b130c85e0807032358mffd6b6by4040538d6943536f@mail.gmail.com>

Hi Austin,

2008/7/3 Austin Lund <austin.lund at gmail.com>:
> 2008/7/4 Dan Hipschman <dsh at linux.ucla.edu>:
>> On Thu, Jul 03, 2008 at 05:32:32PM +1000, Austin Lund wrote:
>>> I have run these with the native dll in wine and it works fine, but
>>> would like someone to test them on windows platforms.
>>
>> I couldn't get these to compile within a few minutes due to not being
>> familiar with what headers were needed, but I can comment on a few
>> things to get the ball rolling.
>
> What were the compile errors?  At the moment I can only test it under
> the wine source.  Perhaps this is related to the mangling done for the
> thiscall function calls.
>
>>> +#include "config.h"
>>> +#include "wine/port.h"
>>
>> These should not be included in tests.
>
> This is related to the __ASM_GLOBAL_FUNC and __ASM_NAME used in the
> section where the thiscall to standard call conversion is done.  This
> is also done in dlls/riched20/txtsrv.c.
>
>> Go easy on the trace calls in tests.
>
> Will do.  Done that.
>
>>> +    *ppvObject = NULL;
>>> +
>>> +    if (IsEqualIID(riid, &IID_IUnknown))
>>> +        *ppvObject = (LPVOID)This;
>>> +    else if (IsEqualIID(riid, &IID_ITextHost))
>>> +        *ppvObject = (LPVOID)This;
>>> +    else
>>> +        return E_NOINTERFACE;
>>> +
>>> +    trace("ppvObject now %p\n",ppvObject);
>>> +    if (*ppvObject)
>>> +    {
>>> +        ITextHost_AddRef((ITextHost *)(*ppvObject));
>>> +        return S_OK;
>>> +    }
>>> +
>>> +    return E_NOINTERFACE;
>>
>> This could be easily cleaned up.
>
> I'm not sure what else can be done.  I got rid of the "else if" part.

The second 'return E_NOINTERFACE' will never be reached.

Cheers,
Maarten.


From austin.lund at gmail.com  Fri Jul  4 02:12:57 2008
From: austin.lund at gmail.com (Austin Lund)
Date: Fri, 4 Jul 2008 17:12:57 +1000
Subject: RFC: More tests for riched20 ITextServices
In-Reply-To: <b130c85e0807032358mffd6b6by4040538d6943536f@mail.gmail.com>
References: <bcab73240807030032i523ef83bv1a562ef0c396ff1@mail.gmail.com>
	<20080703185733.GV21444@linux.ucla.edu>
	<bcab73240807031726m29505b52n211efa754314ad7e@mail.gmail.com>
	<b130c85e0807032358mffd6b6by4040538d6943536f@mail.gmail.com>
Message-ID: <bcab73240807040012u393065b3pd86fef8d5311b857@mail.gmail.com>

2008/7/4 Maarten Lankhorst <m.b.lankhorst at gmail.com>:
> Hi Austin,

>
> The second 'return E_NOINTERFACE' will never be reached.
>
> Cheers,
> Maarten.
>

GCC throws a warning if you remove it.  Perhaps this is better:

static HRESULT WINAPI ITextHostImpl_QueryInterface(ITextHost *iface,
						   REFIID riid,
						   LPVOID *ppvObject) {
    ITextHostTestImpl *This = (ITextHostTestImpl *)iface;
    *ppvObject = NULL;

    if (IsEqualIID(riid, &IID_IUnknown) || IsEqualIID(riid, &IID_ITextHost)) {
        *ppvObject = (LPVOID)This;
	ITextHost_AddRef((ITextHost *)(*ppvObject));
        return S_OK;
    }
    else
        return E_NOINTERFACE;
}


From m.b.lankhorst at gmail.com  Fri Jul  4 03:21:10 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Fri, 4 Jul 2008 01:21:10 -0700
Subject: quartz: Implement state transitions in video renderer
In-Reply-To: <b130c85e0807040059q5146002dta70e404dc27cc1de@mail.gmail.com>
References: <b130c85e0807040059q5146002dta70e404dc27cc1de@mail.gmail.com>
Message-ID: <b130c85e0807040121p4591daeen649addac1bc1ad0c@mail.gmail.com>

2008/7/4 Maarten Lankhorst <m.b.lankhorst at gmail.com>:
> ---
> Fixes video renderer in the same way as directsound renderer

Wait with this patch, it doesn't apply. Apparantly I accidentally
touched the video renderer in an earlier patch in my tree which messed
this one up.


From hans at meelstraat.net  Fri Jul  4 04:38:14 2008
From: hans at meelstraat.net (Hans Leidekker)
Date: Fri, 4 Jul 2008 11:38:14 +0200
Subject: [1/2] wininet: Add support of INTERNET_FLAG_NO_CACHE_WRITE
In-Reply-To: <20080704082215.B14FD28C279@mail.etersoft.ru>
References: <20080704082215.B14FD28C279@mail.etersoft.ru>
Message-ID: <200807041138.15278.hans@meelstraat.net>

On Friday 04 July 2008 10:15:57 Alexander Morozov wrote:

+    if ((lpwhr->hdr.dwFlags & INTERNET_FLAG_NO_CACHE_WRITE) &&
+            CSTR_EQUAL == CompareStringW(LOCALE_SYSTEM_DEFAULT, 0,
+            lpwhr->lpszVerb, strlenW(lpwhr->lpszVerb), szPOST, strlenW(szPOST)))

No need to use CompareStringW here, these are fixed strings, defined
by the protocol.

 -Hans



From ono at java.pl  Fri Jul  4 05:37:35 2008
From: ono at java.pl (Adam Strzelecki)
Date: Fri, 4 Jul 2008 12:37:35 +0200
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
Message-ID: <D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>

Hi Emmanuel, hello Wine developers,

Latest WineQuartz.drv patch is 0.9.58. Is there any change for more  
recent release? I tried this patch with 1.0-1 however it has too many  
conflicts.
It would be most convenient if you had just update http://repo.or.cz/w/wine/winequartzdrv.git 
  to match 1.1.0 somehow and include Quartz.

Since Wine passed 1.0 (woohoo!) maybe someone from the direction can  
revise Mac support? Even there're numerous Emmanuel efforts to provide  
Mac UI driver instead of X11, it will be always pushed aside, and  
sentenced to death, because it is not in official sources.

I know Alexandre Julliard's decision about NOT taking any Objective-C  
sources (.m) into the Wine, but maybe this can be revised, anyway  
all .m rules will be only present on Mac platforms. Using Objective-C  
is only way to make fair support for Mac OS GUI, as those whole GUI  
system is objective.
Moreover then what's the point of keeping winex11.drv and all GUI  
driver infrastructure in Wine if nothing else but X11 is NOT accepted  
into official source?

Forgive me what I say now, but I just it would be more fair if someone  
from Codeweavers just said that Wine's official support for Mac OS X  
is against their business with CrossOver and this is the real reason  
they reject winequartz.drv from Emmanuel Maillard.
Frankly I'd really pay for CrossOver or Wine, if it was what 1.0-1 is  
but with native Mac UI, so each wine process has it's own dock icon,  
and no X11 is needed and native Mac font system.

Regards,
-- 
Adam Strzelecki |: nanoant.com :|



From robertshearman at gmail.com  Fri Jul  4 07:22:29 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Fri, 4 Jul 2008 13:22:29 +0100
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
	<D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
Message-ID: <1096648c0807040522i1ca3473fv7c0b9e1c12ebdf6@mail.gmail.com>

2008/7/4 Adam Strzelecki <ono at java.pl>:
> Hi Emmanuel, hello Wine developers,
>
> Latest WineQuartz.drv patch is 0.9.58. Is there any change for more
> recent release? I tried this patch with 1.0-1 however it has too many
> conflicts.
> It would be most convenient if you had just update http://repo.or.cz/w/wine/winequartzdrv.git
>  to match 1.1.0 somehow and include Quartz.

Someone needs to do the work to resolve the conflicts that you just
mentioned. Do you expect that to just magically happen with no work?

> Since Wine passed 1.0 (woohoo!) maybe someone from the direction can
> revise Mac support? Even there're numerous Emmanuel efforts to provide
> Mac UI driver instead of X11, it will be always pushed aside, and
> sentenced to death, because it is not in official sources.
>
> I know Alexandre Julliard's decision about NOT taking any Objective-C
> sources (.m) into the Wine, but maybe this can be revised, anyway
> all .m rules will be only present on Mac platforms. Using Objective-C
> is only way to make fair support for Mac OS GUI, as those whole GUI
> system is objective.

While I don't know how complete the code is or how well it work, once
a reasonable set of applications work the same or better with
winequartz.drv as they do with winex11.drv then there will likely be
enough demand to overcome the objection or an alternative solution
will be found.

> Moreover then what's the point of keeping winex11.drv and all GUI
> driver infrastructure in Wine if nothing else but X11 is NOT accepted
> into official source?

Huh?

>
> Forgive me what I say now, but I just it would be more fair if someone
> from Codeweavers just said that Wine's official support for Mac OS X
> is against their business with CrossOver and this is the real reason
> they reject winequartz.drv from Emmanuel Maillard.

Oh yeah, sure...

> Frankly I'd really pay for CrossOver or Wine, if it was what 1.0-1 is
> but with native Mac UI, so each wine process has it's own dock icon,
> and no X11 is needed and native Mac font system.

And that is why your conspiracy theory is complete and utter rubbish -
because CodeWeavers would get many more customers with a working
quartz driver. The real reasons are technical. If they weren't then
you would already find CrossOver 7.0 shipping with winequartz.drv,
which it doesn't.

-- 
Rob Shearman


From shelnutt2 at gmail.com  Fri Jul  4 08:10:59 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Fri, 4 Jul 2008 09:10:59 -0400
Subject: Tricking program into seeing actual gfx driver not WINE's
In-Reply-To: <f5d9424f0807032331h74421ae6j2ff72e275560919c@mail.gmail.com>
References: <6fc03d800807032024m75f73088j236b335c604e47bc@mail.gmail.com>
	<b130c85e0807032043u3764c74coe6715dd618ce5ed5@mail.gmail.com>
	<f5d9424f0807032301x3c292e8dme7c4b5ed7538ad98@mail.gmail.com>
	<f5d9424f0807032331h74421ae6j2ff72e275560919c@mail.gmail.com>
Message-ID: <6fc03d800807040610n7b61ff12qde47d63485fcda8b@mail.gmail.com>

Interesting. So it is not to difficult. Now is there anyway to change these
settings without compiling a custom version of WINE? I don't have a problem
compiling WINE but I'm sure not ever person out there would want to. I think
for now I wil just compile a version and host it for people to try out the
client on.

Thanks for the help so far.

On Fri, Jul 4, 2008 at 2:31 AM, Jeff Zaroyko <jeffzaroyko at gmail.com> wrote:

> On Fri, Jul 4, 2008 at 4:01 PM, Jeff Zaroyko <jeffzaroyko at gmail.com>
> wrote:
> >
> > I had a look, the windows client calls
> > IWineD3DImpl_GetAdapterIdentifier which we don't give the real adapter
> > driver and description strings, just "Display" and "Direct3D HAL" -
> > changing these in dlls/wined3d/directx.c to "NVIDIA GeForce 8800" gets
> > past the error message, but the client needs cudart.dll which isn't
> > distributed with the download.
> >
> > Jeff
> >
>
> Ah.. they are but under Documents and Settings\User\Application
> Data\Folding at home-gpu - but there's not much sense in me attempting to
> run this, as I don't have the Linux CUDA drivers installed, so it
> falls back to acting as a regular CPU client.
>
> Jeff
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080704/8d49ae19/attachment.htm 

From stefan at codeweavers.com  Fri Jul  4 07:45:26 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Fri, 4 Jul 2008 07:45:26 -0500
Subject: Tricking program into seeing actual gfx driver not WINE's
In-Reply-To: <6fc03d800807032024m75f73088j236b335c604e47bc@mail.gmail.com>
References: <6fc03d800807032024m75f73088j236b335c604e47bc@mail.gmail.com>
Message-ID: <009201c8ddd3$d5b97c00$812c7400$@com>

Actually we have quite a bit of code to tell the app more about the GPU and
not just provide a generic wine one. This is needed because some games
insist on a proper GPU PCI ID. We don't report and GPU-specific renderer
strings yet, but that should be rather easy to add, if you look at the PCI
ID reporting code. Currently you have to recompile for that, but you are
welcome to send a patch that solves this problem in a generic way and send
it to wine-patches.

 

The more troublesome problem is that Wine does not have any CUDA support at
this point. The Windows CUDA DLL will not make you happy, because it talks
to the Windows hardware drivers. Thus we need an implementation of this
cudart.dll which calls the Linux cuda cudart.so instead. (And then hope it
works out)

 

From: wine-devel-bounces at winehq.org [mailto:wine-devel-bounces at winehq.org]
On Behalf Of Seth Shelnutt
Sent: Thursday, July 03, 2008 10:24 PM
To: wine-devel at winehq.org
Subject: Tricking program into seeing actual gfx driver not WINE's

 

Hello All,

We have run into an interesting problem while trying to get the latest
version of Stanford's Folding at Home GPU client to work in Linux via WINE.
The programs says it does not detect a compatible GPU. Even when the user
has installed the correct Nvidia drivers (with CUDA support)  and has a
compatible GPU. The problem I believe lies in  the fact that the program is
not told that there is a Nvidia 8800 installed, instead by the nature of
WINE it see that  "WINE" is the graphics card, as WINE first translate the
direct3d calls into opengl calls that are then passed on to the GPU. So the
question is, is it possible to trick programs into believing they are
running on the right hardware? (As in fact they are).

I remember a while ago the steam system spec survey was used to see how many
people run steam via WINE. This was done by noting the graphics driver
installed and how the wine one appeared when running WINE. Well this is fine
but what we need is a way to make the program to see that it is actually
running on Nvidia hardware. Because if the client would just start then the
direct3d calls can be translated into opengl calls and the Nvidia linux
drivers can then handle them and run it all fine and dandy.

Here is the post, with error message about wrong graphics card detected,
http://www.ocforums.com/showpost.php?p=5698997
<http://www.ocforums.com/showpost.php?p=5698997&postcount=19> &postcount=19
.


Thanks,

Seth Shelnutt

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080704/4f4467e0/attachment-0001.htm 

From thunderbird2k at gmx.net  Fri Jul  4 08:49:32 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Fri, 04 Jul 2008 15:49:32 +0200
Subject: Tricking program into seeing actual gfx driver not WINE's
In-Reply-To: <009201c8ddd3$d5b97c00$812c7400$@com>
References: <6fc03d800807032024m75f73088j236b335c604e47bc@mail.gmail.com>
	<009201c8ddd3$d5b97c00$812c7400$@com>
Message-ID: <20080704134932.37530@gmx.net>

Writing a Cuda wrapper itself is likely not that hard but Cuda can interact with OpenGL and Direct3D. In case of OpenGL you can let it write to buffers (VBOs, PBOs) and textures. Likely something similar for Direct3D is possible. Likely Nvidia is doing evil things behind the backs of D3D to make this possible and  I'm not sure if we can support this.

Roderick

> Actually we have quite a bit of code to tell the app more about the GPU
> and
> not just provide a generic wine one. This is needed because some games
> insist on a proper GPU PCI ID. We don't report and GPU-specific renderer
> strings yet, but that should be rather easy to add, if you look at the PCI
> ID reporting code. Currently you have to recompile for that, but you are
> welcome to send a patch that solves this problem in a generic way and send
> it to wine-patches.
> 
>  
> 
> The more troublesome problem is that Wine does not have any CUDA support
> at
> this point. The Windows CUDA DLL will not make you happy, because it talks
> to the Windows hardware drivers. Thus we need an implementation of this
> cudart.dll which calls the Linux cuda cudart.so instead. (And then hope it
> works out)
> 
>  
> 
> From: wine-devel-bounces at winehq.org [mailto:wine-devel-bounces at winehq.org]
> On Behalf Of Seth Shelnutt
> Sent: Thursday, July 03, 2008 10:24 PM
> To: wine-devel at winehq.org
> Subject: Tricking program into seeing actual gfx driver not WINE's
> 
>  
> 
> Hello All,
> 
> We have run into an interesting problem while trying to get the latest
> version of Stanford's Folding at Home GPU client to work in Linux via
> WINE.
> The programs says it does not detect a compatible GPU. Even when the user
> has installed the correct Nvidia drivers (with CUDA support)  and has a
> compatible GPU. The problem I believe lies in  the fact that the program
> is
> not told that there is a Nvidia 8800 installed, instead by the nature of
> WINE it see that  "WINE" is the graphics card, as WINE first translate the
> direct3d calls into opengl calls that are then passed on to the GPU. So
> the
> question is, is it possible to trick programs into believing they are
> running on the right hardware? (As in fact they are).
> 
> I remember a while ago the steam system spec survey was used to see how
> many
> people run steam via WINE. This was done by noting the graphics driver
> installed and how the wine one appeared when running WINE. Well this is
> fine
> but what we need is a way to make the program to see that it is actually
> running on Nvidia hardware. Because if the client would just start then
> the
> direct3d calls can be translated into opengl calls and the Nvidia linux
> drivers can then handle them and run it all fine and dandy.
> 
> Here is the post, with error message about wrong graphics card detected,
> http://www.ocforums.com/showpost.php?p=5698997
> <http://www.ocforums.com/showpost.php?p=5698997&postcount=19>
> &postcount=19
> .
> 
> 
> Thanks,
> 
> Seth Shelnutt
> 

-- 
Ist Ihr Browser Vista-kompatibel? Jetzt die neuesten 
Browser-Versionen downloaden: http://www.gmx.net/de/go/browser


From dank at kegel.com  Fri Jul  4 09:52:07 2008
From: dank at kegel.com (Dan Kegel)
Date: Fri, 4 Jul 2008 07:52:07 -0700
Subject: New winetricks 20080704: added firefox3,
	kde verbs (and a whole lot of other stuff)
Message-ID: <a71bd89a0807040752u26b35248s24d4912880472da@mail.gmail.com>

Another week, another winetricks.

Online as always at
  http://kegel.com/wine/winetricks
or
  http://winezeug.googlecode.com

Changes since May 23's wine-devel annoucement:

------------------------------------------------------------------------
r95 | daniel.r.kegel | 2008-07-04 07:46:03 -0700 (Fri, 04 Jul 2008) | 2 lines

Added firefox3, kde

------------------------------------------------------------------------
r94 | daniel.r.kegel | 2008-06-27 11:29:19 -0700 (Fri, 27 Jun 2008) | 2 lines

Simpler recipe for msls31, thanks to Steven Edwards.

------------------------------------------------------------------------
r93 | daniel.r.kegel | 2008-06-27 11:28:05 -0700 (Fri, 27 Jun 2008) | 2 lines

Don't use obsolete command wineprefixcreate.

------------------------------------------------------------------------
r92 | daniel.r.kegel | 2008-06-27 04:41:49 -0700 (Fri, 27 Jun 2008) | 4 lines

Grr.  Looks like I never fixed the problem reported in
http://www.winehq.org/pipermail/wine-users/2008-May/033957.html
Fixed now; sets win2k while installing vcrun2005.

------------------------------------------------------------------------
r90 | daniel.r.kegel | 2008-06-22 03:56:48 -0700 (Sun, 22 Jun 2008) | 2 lines

Update version.

------------------------------------------------------------------------
r89 | daniel.r.kegel | 2008-06-22 03:54:49 -0700 (Sun, 22 Jun 2008) | 7 lines

Added visual j# 2.0 runtime, thanks to
http://howto.landure.fr/gnu-linux/install-directx-9-0c-on-linux-using-wine
for pointing out it is needed by Supreme Commander

Fixed DirectX9 install, thanks to Ahmed for the patch


------------------------------------------------------------------------
r88 | daniel.r.kegel | 2008-06-22 03:15:27 -0700 (Sun, 22 Jun 2008) | 2 lines

Hmm, the divx codec download location changed a bit?

------------------------------------------------------------------------
r75 | daniel.r.kegel | 2008-06-14 10:52:00 -0700 (Sat, 14 Jun 2008) | 2 lines

Don't forget to register the ocx's

------------------------------------------------------------------------
r74 | daniel.r.kegel | 2008-06-14 10:39:34 -0700 (Sat, 14 Jun 2008) | 2 lines

Updated version number

------------------------------------------------------------------------
r73 | daniel.r.kegel | 2008-06-14 10:39:07 -0700 (Sat, 14 Jun 2008) | 5 lines

Use "MS" uniformly in front of choices that are Microsoft downloads.

Add comctl32.ocx


------------------------------------------------------------------------
r72 | daniel.r.kegel | 2008-06-14 10:17:37 -0700 (Sat, 14 Jun 2008) | 2 lines

Added autohotkey

------------------------------------------------------------------------
r71 | daniel.r.kegel | 2008-06-14 10:15:55 -0700 (Sat, 14 Jun 2008) | 2 lines

Cosmetic changes to menu: make 1st column wider, make gui window wide enough

------------------------------------------------------------------------
r69 | austinenglish | 2008-06-09 08:59:44 -0700 (Mon, 09 Jun 2008) | 2 lines

Restore winversion on dotnet20

------------------------------------------------------------------------
r61 | daniel.r.kegel | 2008-05-29 11:51:46 -0700 (Thu, 29 May 2008) | 2 lines

Add dirac 0.8 directshow filter, even though it's obsolete

------------------------------------------------------------------------
r60 | daniel.r.kegel | 2008-05-28 05:15:44 -0700 (Wed, 28 May 2008) | 3 lines

Added divx verb to winetricks.
Switched codecdemo to interactive, added sample files from jhepple.com

------------------------------------------------------------------------
r58 | daniel.r.kegel | 2008-05-27 18:06:46 -0700 (Tue, 27 May 2008) | 2 lines

Add mpc (as a showcase for installed codecs)

------------------------------------------------------------------------
r57 | daniel.r.kegel | 2008-05-27 17:05:25 -0700 (Tue, 27 May 2008) | 2 lines

Added vlc

------------------------------------------------------------------------
r56 | daniel.r.kegel | 2008-05-27 16:03:20 -0700 (Tue, 27 May 2008) | 2 lines

Add gdiplus for quicktime

------------------------------------------------------------------------
r55 | daniel.r.kegel | 2008-05-27 15:49:17 -0700 (Tue, 27 May 2008) | 2 lines

Echo what's going on in wmp10 (since we can't use try)

------------------------------------------------------------------------
r54 | daniel.r.kegel | 2008-05-27 13:55:30 -0700 (Tue, 27 May 2008) | 2 lines

Added quicktime72

------------------------------------------------------------------------
r53 | daniel.r.kegel | 2008-05-23 14:30:12 -0700 (Fri, 23 May 2008) | 3 lines

Fix bug which broke multiple selections in gui.  Thanks to Chad
Sikorra for the bug report.


From h.figge at gmx.de  Fri Jul  4 10:09:43 2008
From: h.figge at gmx.de (Hartmut Figge)
Date: Fri, 04 Jul 2008 17:09:43 +0200
Subject: New winetricks 20080704: added firefox3, kde verbs (and a whole
	lot of other stuff)
References: <a71bd89a0807040752u26b35248s24d4912880472da@mail.gmail.com>
Message-ID: <486E3D37.8030308@hfigge.myfqdn.de>

Dan Kegel:

>Another week, another winetricks.

Thanks for your work.

Hartmut



From jacek at codeweavers.com  Fri Jul  4 10:23:32 2008
From: jacek at codeweavers.com (Jacek Caban)
Date: Fri, 04 Jul 2008 17:23:32 +0200
Subject: mshtml.dll:Add implementation of HTMLDocument_(Get|Set)Title
In-Reply-To: <200807041117.53391.ivan@etersoft.ru>
References: <200807041117.53391.ivan@etersoft.ru>
Message-ID: <486E4074.8000102@codeweavers.com>

Ivan Sinitsin wrote:
> Changelog:
>     mshtml.dll:Add implementation of HTMLDocument_(Get|Set)Title
>   

First of all it would be nice if you could add a test case for these.

>static HRESULT WINAPI HTMLDocument_put_title(IHTMLDocument2 *iface, BSTR v)
> {
>     HTMLDocument *This = HTMLDOC_THIS(iface);
>-    FIXME("(%p)->(%s)\n", This, debugstr_w(v));
>-    return E_NOTIMPL;
>+    nsIDOMDocument *nsdoc;
>+    nsIDOMHTMLDocument *nshtmldoc;
>+    nsAString nsstr;
>+    nsresult nsres;
>+
>+    TRACE("(%p)->(%s)\n", This, debugstr_w(v));
>+
>+    if(!This->nscontainer)
>+        return E_POINTER;
>+
>+    nsres = nsIWebNavigation_GetDocument(This->nscontainer->navigation, &nsdoc);
>+    if(NS_FAILED(nsres)) {
>+        ERR("GetDocument failed: %08x\n", nsres);
>+        return nsres;
>+    }
>+
>+    if(NS_FAILED(nsres) || !nsdoc).
>+        return E_FAIL;
>+
>+    nsIDOMDocument_QueryInterface(nsdoc, &IID_nsIDOMHTMLDocument, (void**)&nshtmldoc);
>+    nsIDOMDocument_Release(nsdoc);
>+
>+    nsAString_Init(&nsstr, NULL);
>+    nsAString_SetData(&nsstr, v);


Use second argument of nsAString_Init instead of nsAString_SetData.

>+
>+    nsres = nsIDOMHTMLDocument_SetTitle(nshtmldoc, &nsstr);
>+    nsIDOMHTMLDocument_Release(nshtmldoc);
>+

You leak nsstr here.

>+    return nsres;

Don't mix nsresult with HRESULT. You should return S_OK here.

> }
> 
> static HRESULT WINAPI HTMLDocument_get_title(IHTMLDocument2 *iface, BSTR *p)
> {
>     HTMLDocument *This = HTMLDOC_THIS(iface);
>-    FIXME("(%p)->(%p)\n", This, p);
>-    return E_NOTIMPL;
>+    nsIDOMDocument *nsdoc;
>+    nsIDOMHTMLDocument *nshtmldoc;
>+    nsAString nsstr;
>+    const PRUnichar *ret;
>+    nsresult nsres;
>+
>+    TRACE("(%p)->(%p)\n", This, p);
>+
>+    if (!p).
>+        return E_POINTER;
>+
>+    if(!This->nscontainer)
>+        return E_POINTER;
>+
>+    nsres = nsIWebNavigation_GetDocument(This->nscontainer->navigation, &nsdoc);
>+    if(NS_FAILED(nsres)) {
>+        ERR("GetDocument failed: %08x\n", nsres);
>+        return nsres;
>+    }
>+
>+    if(NS_FAILED(nsres) || !nsdoc).
>+        return E_FAIL;
>+
>+    nsIDOMDocument_QueryInterface(nsdoc, &IID_nsIDOMHTMLDocument, (void**)&nshtmldoc);
>+    nsIDOMDocument_Release(nsdoc);
>+
>+    nsAString_Init(&nsstr, NULL);
>+
>+    nsres = nsIDOMHTMLDocument_GetTitle(nshtmldoc, &nsstr);
>+    nsIDOMHTMLDocument_Release(nshtmldoc);
>+
>+    if (NS_FAILED(nsres))
>+        return nsres;

Don't mix nsresult with HRESULT. Also ERR would be nice in this case.

>+
>+    nsAString_GetData(&nsstr, &ret);
>+    *p = SysAllocString(ret);


DOM API usually returns NULL instead of empty string. That's worth testing.

>+
>+    return nsres;
> }

Again, don't mix nsresult with HRESULT.



Jacek




From pgquiles at elpauer.org  Fri Jul  4 10:54:55 2008
From: pgquiles at elpauer.org (Pau Garcia i Quiles)
Date: Fri, 04 Jul 2008 17:54:55 +0200
Subject: New winetricks 20080704: added firefox3, kde verbs (and a
	whole lot of other stuff)
In-Reply-To: <a71bd89a0807040752u26b35248s24d4912880472da@mail.gmail.com>
References: <a71bd89a0807040752u26b35248s24d4912880472da@mail.gmail.com>
Message-ID: <20080704175455.kcgpcg13k8kwow48@www.elpauer.org>

Quoting Dan Kegel <dank at kegel.com>:

> ------------------------------------------------------------------------
> r95 | daniel.r.kegel | 2008-07-04 07:46:03 -0700 (Fri, 04 Jul 2008) | 2 lines
>
> Added firefox3, kde

Thanks!

I'm one of the kde-windows developers. To make maintenance of  
winetricks easier, we've added a kdewin-installer-gui-latest.exe which  
links to the latest version of the installer. The md5sums file will be  
updated to contain the md5sum for the -latest.exe file, too.

-- 
Pau Garcia i Quiles
http://www.elpauer.org
(Due to my workload, I may need 10 days to answer)



From paulc at voip.null.ro  Fri Jul  4 11:39:42 2008
From: paulc at voip.null.ro (Paul Chitescu)
Date: Fri, 4 Jul 2008 19:39:42 +0300 (EEST)
Subject: OT: Main website is down / misconfigured
Message-ID: <Pine.LNX.4.64.0807041938170.31272@dragoshel>

http://www.winehq.org/

Fatal error: Call to undefined function () in /home/winehq/opt/website/include/config.php on line 51

Does it ring a bell?


From mahanuu at free.fr  Fri Jul  4 15:49:23 2008
From: mahanuu at free.fr (Emmanuel Maillard)
Date: Fri, 4 Jul 2008 22:49:23 +0200
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
	<D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
Message-ID: <76D80FEC-80EF-4E47-89A2-7CF21E3B50B2@free.fr>

Hi,

Le 4 juil. 08 ? 12:37, Adam Strzelecki a ?crit :

> Hi Emmanuel, hello Wine developers,
>
> Latest WineQuartz.drv patch is 0.9.58. Is there any change for more  
> recent release? I tried this patch with 1.0-1 however it has too  
> many conflicts.
> It would be most convenient if you had just update http://repo.or.cz/w/wine/winequartzdrv.git 
>  to match 1.1.0 somehow and include Quartz.

I resolved conflicts for wine-1.0, but didn't take a look yet for  
wine-1.1.0, i just know that's some changes in user32 and winex11.drv
have to be update in winequartz.drv too.

I will see this week end if i can find free time to make a new patch  
for winequartz.drv and send it to SourceForge.
(OpenGL is broken in winequartz.drv actually, because of a lack of  
time to fix it)


> Since Wine passed 1.0 (woohoo!) maybe someone from the direction can  
> revise Mac support? Even there're numerous Emmanuel efforts to  
> provide Mac UI driver instead of X11, it will be always pushed  
> aside, and sentenced to death, because it is not in official sources.
>
> I know Alexandre Julliard's decision about NOT taking any Objective- 
> C sources (.m) into the Wine, but maybe this can be revised, anyway  
> all .m rules will be only present on Mac platforms. Using Objective- 
> C is only way to make fair support for Mac OS GUI, as those whole  
> GUI system is objective.
> Moreover then what's the point of keeping winex11.drv and all GUI  
> driver infrastructure in Wine if nothing else but X11 is NOT  
> accepted into official source?
>
> Forgive me what I say now, but I just it would be more fair if  
> someone from Codeweavers just said that Wine's official support for  
> Mac OS X is against their business with CrossOver and this is the  
> real reason they reject winequartz.drv from Emmanuel Maillard.
> Frankly I'd really pay for CrossOver or Wine, if it was what 1.0-1  
> is but with native Mac UI, so each wine process has it's own dock  
> icon, and no X11 is needed and native Mac font system.
>
> Regards,
> -- 
> Adam Strzelecki |: nanoant.com :|
>


Cheers
Emmanuel

From jjmckenzie51 at sprintpcs.com  Fri Jul  4 16:25:41 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Fri, 04 Jul 2008 14:25:41 -0700
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <76D80FEC-80EF-4E47-89A2-7CF21E3B50B2@free.fr>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
	<D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
	<76D80FEC-80EF-4E47-89A2-7CF21E3B50B2@free.fr>
Message-ID: <486E9555.20805@sprintpcs.com>

Emmanuel Maillard wrote:
> Hi,
>
> Le 4 juil. 08 ? 12:37, Adam Strzelecki a ?crit :
>
>   
>> Hi Emmanuel, hello Wine developers,
>>
>> Latest WineQuartz.drv patch is 0.9.58. Is there any change for more  
>> recent release? I tried this patch with 1.0-1 however it has too  
>> many conflicts.
>> It would be most convenient if you had just update http://repo.or.cz/w/wine/winequartzdrv.git 
>>  to match 1.1.0 somehow and include Quartz.
>>     
>
>   
Good to read from you.
> I resolved conflicts for wine-1.0, but didn't take a look yet for  
> wine-1.1.0, i just know that's some changes in user32 and winex11.drv
> have to be update in winequartz.drv too.
>
>   
Please contact me off-list when this is complete.  I would like to get 
this into Darwine and see what needs to be fixed.  I would like to see 
Darwine become a more complete Mac application and to leave X11 behind.  
Not that the current program is not complete, but Mac users tend to not 
like to look at and use X11 based applications.
> I will see this week end if i can find free time to make a new patch  
> for winequartz.drv and send it to SourceForge.
> (OpenGL is broken in winequartz.drv actually, because of a lack of  
> time to fix it)
>
>
>   
The rumor was that OpenGL was broken in Mac OS X and not in 
winequartz.drv.  Thank you for the clarification.

I for one, support your ongoing efforts to support the Quartz interface 
for Mac OS X applications, like Wine.

James McKenzie



From jjmckenzie51 at sprintpcs.com  Fri Jul  4 16:43:11 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Fri, 04 Jul 2008 14:43:11 -0700
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
	<D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
Message-ID: <486E996F.5000907@sprintpcs.com>

Comments on Adam's message

Adam Strzelecki wrote:
> Hi Emmanuel, hello Wine developers,
>
> Since Wine passed 1.0 (woohoo!) maybe someone from the direction can  
> revise Mac support? Even there're numerous Emmanuel efforts to provide  
> Mac UI driver instead of X11, it will be always pushed aside, and  
> sentenced to death, because it is not in official sources.
>
>   
Mac OS X support is really not on the radar, from what I can determine.  
Remember the original goal of Wine was to allow Windows programs to run 
on a Windows API for Linux and UNIX.  Mac OSX switched from a 
proprietary system to FreeBSD/OpenBSD after the project started.  Also 
add that a parallel project was started to allow Windows32s programs to 
run on OS/2.
> I know Alexandre Julliard's decision about NOT taking any Objective-C  
> sources (.m) into the Wine, but maybe this can be revised, anyway  
> all .m rules will be only present on Mac platforms. Using Objective-C  
> is only way to make fair support for Mac OS GUI, as those whole GUI  
> system is objective.
>   
There are several reasons why ObjC code is not allowed in the Wine 
project.  First, the code cannot be examined by Alexandre.  He does not 
have the desire to build it.  I don't know if he does or does not own a 
Mac.  The second is that Wine is and continues to be written in 'c'.   
ObjC code may cause problems with 'straight' c compilers, like those 
that are included with Linux.  This happens even if ObjC code is wrapped 
in selection statements as the compiler must 'read' through all of the code.
Thus, all Mac specific code has to reside outside of the main Wine 
project.  I highly recommend that we revive the Darwine project and 
place Emmanuel's and others code into this project's add-on code.  We 
can also help with the PowerPc to X86 emulator that is needed by the 
older processors to properly work with X86 code.
> Moreover then what's the point of keeping winex11.drv and all GUI  
> driver infrastructure in Wine if nothing else but X11 is NOT accepted  
> into official source?
>
>   
Because there may be additional code to support the Windows GUI 
framework, which is within the scope of the Wine project.   One purpose 
of Wine is to emulate the API of an older version of Windows without the 
need to have virtual machines.
> Forgive me what I say now, but I just it would be more fair if someone  
> from Codeweavers just said that Wine's official support for Mac OS X  
> is against their business with CrossOver and this is the real reason  
> they reject winequartz.drv from Emmanuel Maillard.
>   
Maybe this could be further queried as:  "What is CodeWeaver's offical 
stance on supporting a Mac OS X native user interface when the code 
becomes stable and supportable?" and "Would CodeWeavers consider 
bringing Emmanuel on as a paid employee at that time to ensure that the 
code is maintained?"
> Frankly I'd really pay for CrossOver or Wine, if it was what 1.0-1 is  
> but with native Mac UI, so each wine process has it's own dock icon,  
> and no X11 is needed and native Mac font system.
>   
I would also do such a thing, even if it were in the future plans of 
CodeWeavers.  I would like to see a more programs be given a native Mac 
OS X GUI 'wrapper'.  However, this may take years (as in the 
OpenOffice.org and NeoOffice.org projects) or be found not practical; 
this is the case for several projects.  Keep in mind that what we want 
may not be possible or financially reasonable. 

James McKenzie



From winehacker at gmail.com  Fri Jul  4 17:16:37 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Fri, 4 Jul 2008 18:16:37 -0400
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <486E996F.5000907@sprintpcs.com>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
	<D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
	<486E996F.5000907@sprintpcs.com>
Message-ID: <19e31a080807041516i487cb178m74a55ee9f918af4d@mail.gmail.com>

On Fri, Jul 4, 2008 at 5:43 PM, James McKenzie
<jjmckenzie51 at sprintpcs.com> wrote:
> Maybe this could be further queried as:  "What is CodeWeaver's offical
> stance on supporting a Mac OS X native user interface when the code
> becomes stable and supportable?" and "Would CodeWeavers consider
> bringing Emmanuel on as a paid employee at that time to ensure that the
> code is maintained?"

I can't speak for CodeWeavers, being a former employee now running a
competing business but I plan on looking at the new 1.0 Quartzdrv and
if the performance is acceptable (it was not in prior versions),
building a custom version of Bordeaux for OS X. Not that I expect it
to make much money, Bordeaux for Linux has not brought in that much
yet, but if it does, I'm willing to try to help fund development.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From jjmckenzie51 at sprintpcs.com  Fri Jul  4 17:57:03 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Fri, 04 Jul 2008 15:57:03 -0700
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <19e31a080807041516i487cb178m74a55ee9f918af4d@mail.gmail.com>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
	<D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
	<486E996F.5000907@sprintpcs.com>
	<19e31a080807041516i487cb178m74a55ee9f918af4d@mail.gmail.com>
Message-ID: <486EAABF.5000103@sprintpcs.com>

Steven Edwards wrote:
> On Fri, Jul 4, 2008 at 5:43 PM, James McKenzie
> <jjmckenzie51 at sprintpcs.com> wrote:
>   
>> Maybe this could be further queried as:  "What is CodeWeaver's offical
>> stance on supporting a Mac OS X native user interface when the code
>> becomes stable and supportable?" and "Would CodeWeavers consider
>> bringing Emmanuel on as a paid employee at that time to ensure that the
>> code is maintained?"
>>     
>
> I can't speak for CodeWeavers, being a former employee now running a
> competing business but I plan on looking at the new 1.0 Quartzdrv and
> if the performance is acceptable (it was not in prior versions),
> building a custom version of Bordeaux for OS X. Not that I expect it
> to make much money, Bordeaux for Linux has not brought in that much
> yet, but if it does, I'm willing to try to help fund development.
>
>   
Steven:

Great.  I would like to see more development work with Emmanuel's work.  
Of course, Emmanuel's code will never be incorporated into the main Wine 
master because it contains ObjC code.

James  McKenzie



From jjmckenzie51 at sprintpcs.com  Fri Jul  4 18:53:44 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Fri, 04 Jul 2008 16:53:44 -0700
Subject: [Fwd: Re: richedit: Store richedit version rather than
	boolean	bEmulateVersion10 value]
Message-ID: <486EB808.9030402@sprintpcs.com>

forgot to hit the Reply-All button...

-------- Original Message --------

Phil Krylov wrote:
> On 03/07/2008, Dylan Smith <dylan.ah.smith at gmail.com> wrote:
>  > On Thu, Jul 3, 2008 at 2:01 PM, Juan Lang <juan.lang at gmail.com> wrote:
>  >
>  > > Hi Dylan,
>  > >
>  > > -  if (!editor->bEmulateVersion10 || (editor->nEventMask & ENM_UPDATE))
>  > > +  if (!editor->dwEmulatedVersion || (editor->nEventMask & ENM_UPDATE))
>  > >
>  > > This change is incorrect, as dwEmulatedVersion is never set to 0.  I
>  > > believe you mean if (editor->dwEmulatedVersion > 0x100 || ...
>  > >
>  >
>  > You're right, that was a mistake.  Thanks for catching it.
>  >
>  > > I have to ask, though:  what bug does this fix?
>  > >
>  >
>  > This doesn't fix a bug, but it allows me to add functionality for
>  > msftedit.dll without changing the way riched20.dll works when loaded
>  > directly.  Without storing more than a boolean value it will be hard to
>  > support the multiple versions of richedit controls.
>  >
>  >  I would like to properly implement tables for richedit controls, which
>  > greatly differs in how it is implemented between riched20.dll and
>  > msftedit.dll.  Should I only worry about how it is done in the newer
>  > richedit controls?  I am worried that this will cause problems considering
>  > that amy program that loads msftedit.dll assumes that they are getting a
>  > specific implementation.
>
>
> IMHO no real applications depend on poverty of table functionality of
>  versions 2 and 3. If somebody finds one, we could think about it
>  then... To my knowledge, there is just one thing better in table
>  support of 2.0 than in 3.0 and IIRC 4.1: better breaking of long
>  tables on page boundaries when printing. But I consider it a bug in
>  versions >2.0 which we should not replicate (when EM_FORMATRANGE will
>  be supported).
>   
I will look into this as time permits.  I am now on a three hour commute 
for my present employment committment, which is through the end of 
July.  I may be extended, picked up by the future company, discarded or 
find employment closer to my domincile, or any combination.  I have 
looked at Troy Rollo's code and it was current as of 0.9.59.  If someone 
wants it, I can zip up the difference file and send it to them.  I can 
also add it to the issue I was working with.

James McKenzie





From shelnutt2 at gmail.com  Fri Jul  4 23:17:09 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Sat, 5 Jul 2008 00:17:09 -0400
Subject: Tricking program into seeing actual gfx driver not WINE's
In-Reply-To: <009201c8ddd3$d5b97c00$812c7400$@com>
References: <6fc03d800807032024m75f73088j236b335c604e47bc@mail.gmail.com>
	<009201c8ddd3$d5b97c00$812c7400$@com>
Message-ID: <6fc03d800807042117o7ac7f881mb9c698689a1735a8@mail.gmail.com>

What options do I need to change in order to compile WINE with support for
the more GPU specific information?

Also when changing the following lines of code in order to change the output
of IWineD3DImpl_GetAdapterIdentifier to for now identify it as a 8800 GT
with 173 drivers, would the second lines of code be correct? I just want to
make sure "driver" actually means "driver" Which would be "nvidia 173.14"
and description simply the card correct?

        Adapters[0].driver = "Display";
        Adapters[0].description = "Direct3D HAL";



        Adapters[0].driver = "Nvidia 173.14";
        Adapters[0].description = "Nvidia 8800 GT";


Also if this is the case would it not be easy to simply grab the driver
version from the xserver, or atleast the xserver would give you the card and
brand, Nvidia 8800GT but I am not sure how to get specific driver
information. I'm looking for a command but glxinfo is only opengl info, and
I've yet to find anything else.

On Fri, Jul 4, 2008 at 8:45 AM, Stefan D?singer <stefan at codeweavers.com>
wrote:

>  Actually we have quite a bit of code to tell the app more about the GPU
> and not just provide a generic wine one. This is needed because some games
> insist on a proper GPU PCI ID. We don't report and GPU-specific renderer
> strings yet, but that should be rather easy to add, if you look at the PCI
> ID reporting code. Currently you have to recompile for that, but you are
> welcome to send a patch that solves this problem in a generic way and send
> it to wine-patches.
>
>
>
> The more troublesome problem is that Wine does not have any CUDA support at
> this point. The Windows CUDA DLL will not make you happy, because it talks
> to the Windows hardware drivers. Thus we need an implementation of this
> cudart.dll which calls the Linux cuda cudart.so instead. (And then hope it
> works out)
>
>
>
> *From:* wine-devel-bounces at winehq.org [mailto:
> wine-devel-bounces at winehq.org] *On Behalf Of *Seth Shelnutt
> *Sent:* Thursday, July 03, 2008 10:24 PM
> *To:* wine-devel at winehq.org
> *Subject:* Tricking program into seeing actual gfx driver not WINE's
>
>
>
> Hello All,
>
> We have run into an interesting problem while trying to get the latest
> version of Stanford's Folding at Home GPU client to work in Linux via WINE.
> The programs says it does not detect a compatible GPU. Even when the user
> has installed the correct Nvidia drivers (with CUDA support)  and has a
> compatible GPU. The problem I believe lies in  the fact that the program is
> not told that there is a Nvidia 8800 installed, instead by the nature of
> WINE it see that  "WINE" is the graphics card, as WINE first translate the
> direct3d calls into opengl calls that are then passed on to the GPU. So the
> question is, is it possible to trick programs into believing they are
> running on the right hardware? (As in fact they are).
>
> I remember a while ago the steam system spec survey was used to see how
> many people run steam via WINE. This was done by noting the graphics driver
> installed and how the wine one appeared when running WINE. Well this is fine
> but what we need is a way to make the program to see that it is actually
> running on Nvidia hardware. Because if the client would just start then the
> direct3d calls can be translated into opengl calls and the Nvidia linux
> drivers can then handle them and run it all fine and dandy.
>
> Here is the post, with error message about wrong graphics card detected,
> http://www.ocforums.com/showpost.php?p=5698997&postcount=19 .
>
>
> Thanks,
>
> Seth Shelnutt
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080705/ec9cac00/attachment-0001.htm 

From jwhite at codeweavers.com  Fri Jul  4 23:21:20 2008
From: jwhite at codeweavers.com (Jeremy White)
Date: Fri, 04 Jul 2008 23:21:20 -0500
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <486E996F.5000907@sprintpcs.com>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>	<200803021850.04583.stefan@codeweavers.com>	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>	<D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
	<486E996F.5000907@sprintpcs.com>
Message-ID: <486EF6C0.20109@codeweavers.com>

Hi, 

> Maybe this could be further queried as:  "What is CodeWeaver's offical 
> stance on supporting a Mac OS X native user interface when the code 
> becomes stable and supportable?" and "Would CodeWeavers consider 
> bringing Emmanuel on as a paid employee at that time to ensure that the 
> code is maintained?"
>   
We are very interested in Wine having a more native OS X interface.

However, our analysis is that the task is difficult and will require a
long time to stabilize and get right.  I am excited by and interested in
Emmanuel's work, but I am told not to be too excited, that it's not
a magic bullet, and that the bulk of the hard work is still ahead.

We have a long history of hiring proven Wine developers and thereby 
sponsoring
their work.  We do that as much as our income will allow, gated by peoples
ability and willingness to work with us.

To answer the seemingly implied question: "Are we deliberately crippling 
Wine for Mac OS X
to serve our own nefarious ends", the answer is no.  That's in no small 
part because our main
nefarious end is to improve Wine :-).

Did we make a decision to focus on an X11 based solution for Mac OS X?  
Yes,
for the time being.  The advantages are that it's here now, works now, 
and that most
of what we do now also benefits Linux and other platforms.  The 
disadvantage, apparently,
is that people suspect us of all kinds of nefarious plots...

And, on a final note, just so its clear:  the contract between 
CodeWeavers and Alexandre
is very explicit:  CodeWeavers gets *no* say in what does or does not go 
into Wine. 
We probably curse his decisions as much or more than any Wine developer, 
and whether
or not Objective C

Cheers,

Jeremy


From chris.kcat at gmail.com  Fri Jul  4 23:39:24 2008
From: chris.kcat at gmail.com (Chris Robinson)
Date: Fri, 4 Jul 2008 21:39:24 -0700
Subject: Tricking program into seeing actual gfx driver not WINE's
In-Reply-To: <6fc03d800807042117o7ac7f881mb9c698689a1735a8@mail.gmail.com>
References: <6fc03d800807032024m75f73088j236b335c604e47bc@mail.gmail.com>
	<009201c8ddd3$d5b97c00$812c7400$@com>
	<6fc03d800807042117o7ac7f881mb9c698689a1735a8@mail.gmail.com>
Message-ID: <200807042139.24623.chris.kcat@gmail.com>

On Friday 04 July 2008 09:17:09 pm Seth Shelnutt wrote:
> I just
> want to make sure "driver" actually means "driver" Which would be "nvidia
> 173.14" and description simply the card correct?
>
>         Adapters[0].driver = "Display";
>         Adapters[0].description = "Direct3D HAL";
>
>
>
>         Adapters[0].driver = "Nvidia 173.14";
>         Adapters[0].description = "Nvidia 8800 GT";

IIRC, the 'driver' portion, when I looked on Windows, was the actual DLL used 
for hardware (some nv*.dll for nVidia). For the second, I have the 
description set to a duplicate of what glString(GL_RENDERER); returns, in my 
personal tree. Some people aren't keen on that change though because of the 
concern that some apps may make inappropriate assumptions based on the 
description string.


From thunderbird2k at gmx.net  Sat Jul  5 02:38:37 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Sat, 05 Jul 2008 09:38:37 +0200
Subject: Tricking program into seeing actual gfx driver not WINE's
In-Reply-To: <6fc03d800807042117o7ac7f881mb9c698689a1735a8@mail.gmail.com>
References: <6fc03d800807032024m75f73088j236b335c604e47bc@mail.gmail.com>
	<009201c8ddd3$d5b97c00$812c7400$@com>
	<6fc03d800807042117o7ac7f881mb9c698689a1735a8@mail.gmail.com>
Message-ID: <20080705073837.295700@gmx.net>

The only thing we aren't setting are proper strings for the rest we show an nvidia driver version number and card when an nvidia board is detected. Though we don't show the actual card in various cases as we make an estimation based on glxinfo output and some other things. This is because we can't get pci ids from X, relying on e.g. /proc/bus/pci/devices is not the way to go.

Roderick

> Datum: Sat, 5 Jul 2008 00:17:09 -0400
> Von: "Seth Shelnutt" <shelnutt2 at gmail.com>
> An: wine-devel at winehq.org
> Betreff: Re: Tricking program into seeing actual gfx driver not WINE\'s

> What options do I need to change in order to compile WINE with support for
> the more GPU specific information?
> 
> Also when changing the following lines of code in order to change the
> output
> of IWineD3DImpl_GetAdapterIdentifier to for now identify it as a 8800 GT
> with 173 drivers, would the second lines of code be correct? I just want
> to
> make sure "driver" actually means "driver" Which would be "nvidia 173.14"
> and description simply the card correct?
> 
>         Adapters[0].driver = "Display";
>         Adapters[0].description = "Direct3D HAL";
> 
> 
> 
>         Adapters[0].driver = "Nvidia 173.14";
>         Adapters[0].description = "Nvidia 8800 GT";
> 
> 
> Also if this is the case would it not be easy to simply grab the driver
> version from the xserver, or atleast the xserver would give you the card
> and
> brand, Nvidia 8800GT but I am not sure how to get specific driver
> information. I'm looking for a command but glxinfo is only opengl info,
> and
> I've yet to find anything else.
> 
> On Fri, Jul 4, 2008 at 8:45 AM, Stefan D?singer <stefan at codeweavers.com>
> wrote:
> 
> >  Actually we have quite a bit of code to tell the app more about the GPU
> > and not just provide a generic wine one. This is needed because some
> games
> > insist on a proper GPU PCI ID. We don't report and GPU-specific renderer
> > strings yet, but that should be rather easy to add, if you look at the
> PCI
> > ID reporting code. Currently you have to recompile for that, but you are
> > welcome to send a patch that solves this problem in a generic way and
> send
> > it to wine-patches.
> >
> >
> >
> > The more troublesome problem is that Wine does not have any CUDA support
> at
> > this point. The Windows CUDA DLL will not make you happy, because it
> talks
> > to the Windows hardware drivers. Thus we need an implementation of this
> > cudart.dll which calls the Linux cuda cudart.so instead. (And then hope
> it
> > works out)
> >
> >
> >
> > *From:* wine-devel-bounces at winehq.org [mailto:
> > wine-devel-bounces at winehq.org] *On Behalf Of *Seth Shelnutt
> > *Sent:* Thursday, July 03, 2008 10:24 PM
> > *To:* wine-devel at winehq.org
> > *Subject:* Tricking program into seeing actual gfx driver not WINE's
> >
> >
> >
> > Hello All,
> >
> > We have run into an interesting problem while trying to get the latest
> > version of Stanford's Folding at Home GPU client to work in Linux via
> WINE.
> > The programs says it does not detect a compatible GPU. Even when the
> user
> > has installed the correct Nvidia drivers (with CUDA support)  and has a
> > compatible GPU. The problem I believe lies in  the fact that the program
> is
> > not told that there is a Nvidia 8800 installed, instead by the nature of
> > WINE it see that  "WINE" is the graphics card, as WINE first translate
> the
> > direct3d calls into opengl calls that are then passed on to the GPU. So
> the
> > question is, is it possible to trick programs into believing they are
> > running on the right hardware? (As in fact they are).
> >
> > I remember a while ago the steam system spec survey was used to see how
> > many people run steam via WINE. This was done by noting the graphics
> driver
> > installed and how the wine one appeared when running WINE. Well this is
> fine
> > but what we need is a way to make the program to see that it is actually
> > running on Nvidia hardware. Because if the client would just start then
> the
> > direct3d calls can be translated into opengl calls and the Nvidia linux
> > drivers can then handle them and run it all fine and dandy.
> >
> > Here is the post, with error message about wrong graphics card detected,
> > http://www.ocforums.com/showpost.php?p=5698997&postcount=19 .
> >
> >
> > Thanks,
> >
> > Seth Shelnutt
> >

-- 
Psssst! Schon das coole Video vom GMX MultiMessenger gesehen?
Der Eine f?r Alle: http://www.gmx.net/de/go/messenger03


From kai.blin at gmail.com  Sat Jul  5 03:46:11 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Sat, 5 Jul 2008 10:46:11 +0200
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <486E996F.5000907@sprintpcs.com>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
	<486E996F.5000907@sprintpcs.com>
Message-ID: <200807051046.13147.kai.blin@gmail.com>

On Friday 04 July 2008 23:43:11 James McKenzie wrote:
> Comments on Adam's message
>
> Adam Strzelecki wrote:
> > Hi Emmanuel, hello Wine developers,
> >
> > Since Wine passed 1.0 (woohoo!) maybe someone from the direction can
> > revise Mac support? Even there're numerous Emmanuel efforts to provide
> > Mac UI driver instead of X11, it will be always pushed aside, and
> > sentenced to death, because it is not in official sources.
>
> Mac OS X support is really not on the radar, from what I can determine.
> Remember the original goal of Wine was to allow Windows programs to run
> on a Windows API for Linux and UNIX.  Mac OSX switched from a
> proprietary system to FreeBSD/OpenBSD after the project started.  Also
> add that a parallel project was started to allow Windows32s programs to
> run on OS/2.

Also, I'm not sure how many wine devs own macintels. I own a mac, but it's a 
PPC, and I'm not going to spend more money on macs any time soon.

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080705/ec8be916/attachment.pgp 

From martijn.berger at gmail.com  Fri Jul  4 11:53:25 2008
From: martijn.berger at gmail.com (Martijn Berger)
Date: Fri, 4 Jul 2008 18:53:25 +0200
Subject: Tricking program into seeing actual gfx driver not WINE's
Message-ID: <8e7b7c4d0807040953l27013661h41bf9ae47ca6c2ed@mail.gmail.com>

>* Hello All,
*>*
*>* We have run into an interesting problem while trying to get the latest
*>* version of Stanford's Folding at Home GPU client to work in Linux via WINE.
*>* The programs says it does not detect a compatible GPU. Even when the user
*>* has installed the correct Nvidia drivers (with CUDA support)  and has a
*>* compatible GPU. The problem I believe lies in  the fact that the program is
*>* not told that there is a Nvidia 8800 installed, instead by the nature of
*>* WINE it see that  "WINE" is the graphics card, as WINE first translate the
*>* direct3d calls into opengl calls that are then passed on to the GPU. So the
*>* question is, is it possible to trick programs into believing they are
*>* running on the right hardware? (As in fact they are).
*>*
*>* I remember a while ago the steam system spec survey was used to see how many
*>* people run steam via WINE. This was done by noting the graphics driver
*>* installed and how the wine one appeared when running WINE. Well this is fine
*>* but what we need is a way to make the program to see that it is actually
*>* running on Nvidia hardware. Because if the client would just start then the
*>* direct3d calls can be translated into opengl calls and the Nvidia linux
*>* drivers can then handle them and run it all fine and dandy.
*>*
*>* Here is the post, with error message about wrong graphics card detected,
*>* http://www.ocforums.com/showpost.php?p=5698997&postcount=19 .
*

I think you would have to create wrapper dll's that pass the function calls
along to libcudart.so.2.0

The following libraries are in the CUDA download for linux.
libcublas.so.2.0
libcublasemu.so.2.0
libcudart.so.2.0
libcufft.so.2.0
libcufftemu.so.2.0

I am unsure if you would need to modify more but I am pretty sure that
running the windows veersions of those dlls directly o wine is nto what you
want.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080704/4ff3263a/attachment.htm 

From jwhite at winehq.org  Sat Jul  5 08:53:51 2008
From: jwhite at winehq.org (Jeremy White)
Date: Sat, 05 Jul 2008 08:53:51 -0500
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <486EF6C0.20109@codeweavers.com>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>	<200803021850.04583.stefan@codeweavers.com>	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>	<D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>	<486E996F.5000907@sprintpcs.com>
	<486EF6C0.20109@codeweavers.com>
Message-ID: <486F7CEF.1070706@winehq.org>

> We probably curse his decisions as much or more than any Wine developer, 
> and whether
> or not Objective C

*blush*  Teach me to send email late at night on a foreign computer.

The point is that CodeWeavers has no control over whether or not Emmanuel's code goes into Wine.  That's entirely Alexandre's decision.

Cheers,

Jeremy


From dank at kegel.com  Sat Jul  5 08:55:24 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 5 Jul 2008 06:55:24 -0700
Subject: New valgrind warnings in NdrComplexArrayUnmarshall
	(oleaut32/tests/tmarshal)
Message-ID: <a71bd89a0807050655h71a97470gf2dad60f3ee7bf8a@mail.gmail.com>

Probably triggered by Rob's five rpcrt4 patches on July 3rd,
who knows, perhaps the removal of the memset in
http://www.winehq.org/pipermail/wine-cvs/2008-July/045025.html
Rob, can you have a look?
http://kegel.com/wine/valgrind/logs-2008-07-04/vg-oleaut32_tmarshal-diff.txt

e.g.

+ Conditional jump or move depends on uninitialised value(s)
+    at  VARIANT_ValidateType (variant.c:545)
+    by  VariantClear (variant.c:598)
+    by  VARIANT_UserUnmarshal (usrmarshal.c:594)
+    by  NdrUserMarshalUnmarshall (ndr_marshall.c:3772)
+    by  ComplexUnmarshall (ndr_marshall.c:2439)
+    by  NdrComplexArrayUnmarshall (ndr_marshall.c:3505)
+    by  PointerUnmarshall (ndr_marshall.c:1302)
+    by  EmbeddedPointerUnmarshall (ndr_marshall.c:1622)
+    by  NdrSimpleStructUnmarshall (ndr_marshall.c:2059)
+    by  PointerUnmarshall (ndr_marshall.c:1302)
+    by  NdrPointerUnmarshall (ndr_marshall.c:1886)
+    by  IDispatch_RemoteInvoke_Stub (oleaut32_oaidl_p.c:838)
+    by  CStdStubBuffer_Invoke (cstub.c:433)
+    by  RPC_ExecuteCall (rpc.c:1392)
+    by  apartment_wndproc (compobj.c:547)
+    by  ??? (library.h:163)
+    by  call_window_proc (winproc.c:457)
+    by  WINPROC_CallProcAtoW (winproc.c:1011)
+    by  WINPROC_call_window (winproc.c:2209)
+    by  DispatchMessageA (message.c:3067)
+  Uninitialised value was created by a client request
+    at  mark_block_uninitialized (heap.c:164)
+    by  RtlAllocateHeap (heap.c:1239)
+    by  IMalloc_fnAlloc (ifs.c:186)
+    by  CoTaskMemAlloc (ifs.c:562)
+    by  NdrOleAllocate (ndr_ole.c:359)
+    by  NdrAllocate (ndr_marshall.c:381)
+    by  NdrComplexArrayUnmarshall (ndr_marshall.c:3498)
+    by  PointerUnmarshall (ndr_marshall.c:1302)
+    by  EmbeddedPointerUnmarshall (ndr_marshall.c:1622)
+    by  NdrSimpleStructUnmarshall (ndr_marshall.c:2059)
+    by  PointerUnmarshall (ndr_marshall.c:1302)
+    by  NdrPointerUnmarshall (ndr_marshall.c:1886)
+    by  IDispatch_RemoteInvoke_Stub (oleaut32_oaidl_p.c:838)
+    by  CStdStubBuffer_Invoke (cstub.c:433)
+    by  RPC_ExecuteCall (rpc.c:1392)
+    by  apartment_wndproc (compobj.c:547)
+    by  ??? (library.h:163)
+    by  call_window_proc (winproc.c:457)
+    by  WINPROC_CallProcAtoW (winproc.c:1011)
+    by  WINPROC_call_window (winproc.c:2209)

...


From dank at kegel.com  Sat Jul  5 09:01:37 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 5 Jul 2008 07:01:37 -0700
Subject: Yet another person's list of must-have windows apps
Message-ID: <a71bd89a0807050701x21a51f60wa5d7fd4c508694fc@mail.gmail.com>

http://www.benjarvis.org/tech/how-to-minimize-your-windows-usage/
lists his must-have windows apps as
---snip---
- Ableton Live 7  (Nothing can replace this yet and the latency is too
long under WINE)
- VST Instruments  (DLL files that are used by Ableton Live)
- iTunes (I may move back to Rockbox now that Banshee works better)
- World of Warcraft (My video card is too weak to run it in Linux)
- Various Emulators (Once I get my Xbox 360 controller to work under
Ubuntu, I will be migrating these)
- Magic the Gathering (It has issues under WINE, but I barely even play)
---snip---

I guess that's one more vote for schannel.


From stefan at codeweavers.com  Sat Jul  5 09:24:25 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Sat, 5 Jul 2008 09:24:25 -0500
Subject: Pipeline separation preview
In-Reply-To: <003601c8dc5a$f44466f0$dccd34d0$@com>
References: <003601c8dc5a$f44466f0$dccd34d0$@com>
Message-ID: <000001c8deaa$d45388b0$7cfa9a10$@com>

Hi,
Here is an updated patchset. I have CC'ed Henri and Ivan, since they were
the main critics of the old design. Ivan, this should get rid of the
inheritance thunks the old way of munging everything into the shader backend
had. I've discussed things with Henri on IRC. Henri, can you take a quick
look and see if your vertex pipeline stuff can be integrated into this
concept?

A few remarks:
-> The whole pipeline is split up into a vertex, fragment and misc part.
-> It is no problem if multiple parts of the pipeline read the same D3D
state. See for example sampler()
-> However, the representative states in all pipeline parts have to be the
same, otherwise bad things will happen. This imposes some problems around
stream sources, vdecl and vertex shaders. However it is no problem if
different implemetations of the same pipeline part have different state
groupings.
-> It is possible that not all states are grouped correctly yet, or some
more states may need splitup. This will surface once we have a vertex
pipeline replacement.
-> Private data for the fragment pipeline is stored in a separate pointer in
the device. This can of course be the same as the shader private storage,
but doesn't have to.

For the next days I'll be bugfixing for another CrossOver Games release, so
I'll probably send this stuff in a week or two. Further plans are:
-> reorder the patches slightly since in the current form atifs is
temporarily broken, making regression tests harder
-> Find a r250 card to test the atifs stuff. I am currently not at home, and
it turns out that fglrx has a broken atifs implementation.
-> Generally more testing. Right now I've only tested our regression tests
-> Add extension information to the state templates. That way the pipeline
compiler can select different functions from the same template depending on
the available extensions. That way we can move a few more if(GL_SUPPORTED())
checks out of the rendering loop, saving a few CPU cycles and making the
code cleaner.

In the long d3d10 run, those things could be considered:
-> Using different templates for d3d10, thus getting rid of a few
if(!shader) checks. It's a minimal optimization though, everything in the
fixed function code except the if(!shader) tests will never be touched in
d3d10 anyway since the states are never dirty
-> Create an additional geometry pipeline template

> -----Original Message-----
> From: wine-devel-bounces at winehq.org [mailto:wine-devel-
> bounces at winehq.org] On Behalf Of Stefan D?singer
> Sent: Wednesday, July 02, 2008 10:48 AM
> To: wine-devel at winehq.org
> Subject: Pipeline separation preview
> 
> Hi,
> I'm sending a preview of my vertex-fragment-misc pipeline separation
> patches as discussed a few weeks ago. The patch comments have more
> descriptions. The relevant patches start at patch 5, the other patches
> are other junk in my tree.
> 
> Any comments?
> 
> Stefan




From shelnutt2 at gmail.com  Sat Jul  5 10:58:34 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Sat, 5 Jul 2008 11:58:34 -0400
Subject: Tricking program into seeing actual gfx driver not WINE's
In-Reply-To: <20080705073837.295700@gmx.net>
References: <6fc03d800807032024m75f73088j236b335c604e47bc@mail.gmail.com>
	<009201c8ddd3$d5b97c00$812c7400$@com>
	<6fc03d800807042117o7ac7f881mb9c698689a1735a8@mail.gmail.com>
	<20080705073837.295700@gmx.net>
Message-ID: <6fc03d800807050858k3f4d8398nc8daca1d5d8cb97b@mail.gmail.com>

Why only when an Nvidia board is detected? Should it not be possible to
detect and display a driver version and card regardless of motherboard? Also
is this support built into WINE or do you have a set of patches to enable
it?

On Sat, Jul 5, 2008 at 3:38 AM, Roderick Colenbrander <thunderbird2k at gmx.net>
wrote:

> The only thing we aren't setting are proper strings for the rest we show an
> nvidia driver version number and card when an nvidia board is detected.
> Though we don't show the actual card in various cases as we make an
> estimation based on glxinfo output and some other things. This is because we
> can't get pci ids from X, relying on e.g. /proc/bus/pci/devices is not the
> way to go.
>
> Roderick
>
> > Datum: Sat, 5 Jul 2008 00:17:09 -0400
> > Von: "Seth Shelnutt" <shelnutt2 at gmail.com>
> > An: wine-devel at winehq.org
> > Betreff: Re: Tricking program into seeing actual gfx driver not WINE\'s
>
> > What options do I need to change in order to compile WINE with support
> for
> > the more GPU specific information?
> >
> > Also when changing the following lines of code in order to change the
> > output
> > of IWineD3DImpl_GetAdapterIdentifier to for now identify it as a 8800 GT
> > with 173 drivers, would the second lines of code be correct? I just want
> > to
> > make sure "driver" actually means "driver" Which would be "nvidia 173.14"
> > and description simply the card correct?
> >
> >         Adapters[0].driver = "Display";
> >         Adapters[0].description = "Direct3D HAL";
> >
> >
> >
> >         Adapters[0].driver = "Nvidia 173.14";
> >         Adapters[0].description = "Nvidia 8800 GT";
> >
> >
> > Also if this is the case would it not be easy to simply grab the driver
> > version from the xserver, or atleast the xserver would give you the card
> > and
> > brand, Nvidia 8800GT but I am not sure how to get specific driver
> > information. I'm looking for a command but glxinfo is only opengl info,
> > and
> > I've yet to find anything else.
> >
> > On Fri, Jul 4, 2008 at 8:45 AM, Stefan D?singer <stefan at codeweavers.com>
> > wrote:
> >
> > >  Actually we have quite a bit of code to tell the app more about the
> GPU
> > > and not just provide a generic wine one. This is needed because some
> > games
> > > insist on a proper GPU PCI ID. We don't report and GPU-specific
> renderer
> > > strings yet, but that should be rather easy to add, if you look at the
> > PCI
> > > ID reporting code. Currently you have to recompile for that, but you
> are
> > > welcome to send a patch that solves this problem in a generic way and
> > send
> > > it to wine-patches.
> > >
> > >
> > >
> > > The more troublesome problem is that Wine does not have any CUDA
> support
> > at
> > > this point. The Windows CUDA DLL will not make you happy, because it
> > talks
> > > to the Windows hardware drivers. Thus we need an implementation of this
> > > cudart.dll which calls the Linux cuda cudart.so instead. (And then hope
> > it
> > > works out)
> > >
> > >
> > >
> > > *From:* wine-devel-bounces at winehq.org [mailto:
> > > wine-devel-bounces at winehq.org] *On Behalf Of *Seth Shelnutt
> > > *Sent:* Thursday, July 03, 2008 10:24 PM
> > > *To:* wine-devel at winehq.org
> > > *Subject:* Tricking program into seeing actual gfx driver not WINE's
> > >
> > >
> > >
> > > Hello All,
> > >
> > > We have run into an interesting problem while trying to get the latest
> > > version of Stanford's Folding at Home GPU client to work in Linux via
> > WINE.
> > > The programs says it does not detect a compatible GPU. Even when the
> > user
> > > has installed the correct Nvidia drivers (with CUDA support)  and has a
> > > compatible GPU. The problem I believe lies in  the fact that the
> program
> > is
> > > not told that there is a Nvidia 8800 installed, instead by the nature
> of
> > > WINE it see that  "WINE" is the graphics card, as WINE first translate
> > the
> > > direct3d calls into opengl calls that are then passed on to the GPU. So
> > the
> > > question is, is it possible to trick programs into believing they are
> > > running on the right hardware? (As in fact they are).
> > >
> > > I remember a while ago the steam system spec survey was used to see how
> > > many people run steam via WINE. This was done by noting the graphics
> > driver
> > > installed and how the wine one appeared when running WINE. Well this is
> > fine
> > > but what we need is a way to make the program to see that it is
> actually
> > > running on Nvidia hardware. Because if the client would just start then
> > the
> > > direct3d calls can be translated into opengl calls and the Nvidia linux
> > > drivers can then handle them and run it all fine and dandy.
> > >
> > > Here is the post, with error message about wrong graphics card
> detected,
> > > http://www.ocforums.com/showpost.php?p=5698997&postcount=19 .
> > >
> > >
> > > Thanks,
> > >
> > > Seth Shelnutt
> > >
>
> --
> Psssst! Schon das coole Video vom GMX MultiMessenger gesehen?
> Der Eine f?r Alle: http://www.gmx.net/de/go/messenger03
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080705/335397f2/attachment.htm 

From thunderbird2k at gmx.net  Sat Jul  5 12:26:46 2008
From: thunderbird2k at gmx.net (Roderick Colenbrander)
Date: Sat, 05 Jul 2008 19:26:46 +0200
Subject: Tricking program into seeing actual gfx driver not WINE's
In-Reply-To: <6fc03d800807050858k3f4d8398nc8daca1d5d8cb97b@mail.gmail.com>
References: <6fc03d800807032024m75f73088j236b335c604e47bc@mail.gmail.com>	
	<009201c8ddd3$d5b97c00$812c7400$@com>	
	<6fc03d800807042117o7ac7f881mb9c698689a1735a8@mail.gmail.com>	
	<20080705073837.295700@gmx.net>
	<6fc03d800807050858k3f4d8398nc8daca1d5d8cb97b@mail.gmail.com>
Message-ID: <20080705172646.317860@gmx.net>

There is similar code for ATI and other vendors as well. First we do a selection based on vendor and then we check what d3d version a card supports by checking what opengl extensions are offered and then we try to match it to a card in our database based on the opengl renderer string. This way when e.g. a Geforce11 arrives it will be seen as lets say a geforce7 instead of an unknown card.

Most of the time apps only look for a driver version and the pci id (vendor / device id) and those are reported by wine. The driver and description string are generic. Upto now this makes most apps happy. The problem is we aren't the real windows direct3d drivers so you could reason that reporting that we are is wrong but on the other hand some games need it to run. Further some other games use the info to work around driver bugs which again which don't have as we aren't the windows driver.

Roderick

> Why only when an Nvidia board is detected? Should it not be possible to
> detect and display a driver version and card regardless of motherboard?
> Also
> is this support built into WINE or do you have a set of patches to enable
> it?
> 
> On Sat, Jul 5, 2008 at 3:38 AM, Roderick Colenbrander
> <thunderbird2k at gmx.net>
> wrote:
> 
> > The only thing we aren't setting are proper strings for the rest we show
> an
> > nvidia driver version number and card when an nvidia board is detected.
> > Though we don't show the actual card in various cases as we make an
> > estimation based on glxinfo output and some other things. This is
> because we
> > can't get pci ids from X, relying on e.g. /proc/bus/pci/devices is not
> the
> > way to go.
> >
> > Roderick
> >
> > > Datum: Sat, 5 Jul 2008 00:17:09 -0400
> > > Von: "Seth Shelnutt" <shelnutt2 at gmail.com>
> > > An: wine-devel at winehq.org
> > > Betreff: Re: Tricking program into seeing actual gfx driver not
> WINE\'s
> >
> > > What options do I need to change in order to compile WINE with support
> > for
> > > the more GPU specific information?
> > >
> > > Also when changing the following lines of code in order to change the
> > > output
> > > of IWineD3DImpl_GetAdapterIdentifier to for now identify it as a 8800
> GT
> > > with 173 drivers, would the second lines of code be correct? I just
> want
> > > to
> > > make sure "driver" actually means "driver" Which would be "nvidia
> 173.14"
> > > and description simply the card correct?
> > >
> > >         Adapters[0].driver = "Display";
> > >         Adapters[0].description = "Direct3D HAL";
> > >
> > >
> > >
> > >         Adapters[0].driver = "Nvidia 173.14";
> > >         Adapters[0].description = "Nvidia 8800 GT";
> > >
> > >
> > > Also if this is the case would it not be easy to simply grab the
> driver
> > > version from the xserver, or atleast the xserver would give you the
> card
> > > and
> > > brand, Nvidia 8800GT but I am not sure how to get specific driver
> > > information. I'm looking for a command but glxinfo is only opengl
> info,
> > > and
> > > I've yet to find anything else.
> > >
> > > On Fri, Jul 4, 2008 at 8:45 AM, Stefan D?singer
> <stefan at codeweavers.com>
> > > wrote:
> > >
> > > >  Actually we have quite a bit of code to tell the app more about the
> > GPU
> > > > and not just provide a generic wine one. This is needed because some
> > > games
> > > > insist on a proper GPU PCI ID. We don't report and GPU-specific
> > renderer
> > > > strings yet, but that should be rather easy to add, if you look at
> the
> > > PCI
> > > > ID reporting code. Currently you have to recompile for that, but you
> > are
> > > > welcome to send a patch that solves this problem in a generic way
> and
> > > send
> > > > it to wine-patches.
> > > >
> > > >
> > > >
> > > > The more troublesome problem is that Wine does not have any CUDA
> > support
> > > at
> > > > this point. The Windows CUDA DLL will not make you happy, because it
> > > talks
> > > > to the Windows hardware drivers. Thus we need an implementation of
> this
> > > > cudart.dll which calls the Linux cuda cudart.so instead. (And then
> hope
> > > it
> > > > works out)
> > > >
> > > >
> > > >
> > > > *From:* wine-devel-bounces at winehq.org [mailto:
> > > > wine-devel-bounces at winehq.org] *On Behalf Of *Seth Shelnutt
> > > > *Sent:* Thursday, July 03, 2008 10:24 PM
> > > > *To:* wine-devel at winehq.org
> > > > *Subject:* Tricking program into seeing actual gfx driver not WINE's
> > > >
> > > >
> > > >
> > > > Hello All,
> > > >
> > > > We have run into an interesting problem while trying to get the
> latest
> > > > version of Stanford's Folding at Home GPU client to work in Linux
> via
> > > WINE.
> > > > The programs says it does not detect a compatible GPU. Even when the
> > > user
> > > > has installed the correct Nvidia drivers (with CUDA support)  and
> has a
> > > > compatible GPU. The problem I believe lies in  the fact that the
> > program
> > > is
> > > > not told that there is a Nvidia 8800 installed, instead by the
> nature
> > of
> > > > WINE it see that  "WINE" is the graphics card, as WINE first
> translate
> > > the
> > > > direct3d calls into opengl calls that are then passed on to the GPU.
> So
> > > the
> > > > question is, is it possible to trick programs into believing they
> are
> > > > running on the right hardware? (As in fact they are).
> > > >
> > > > I remember a while ago the steam system spec survey was used to see
> how
> > > > many people run steam via WINE. This was done by noting the graphics
> > > driver
> > > > installed and how the wine one appeared when running WINE. Well this
> is
> > > fine
> > > > but what we need is a way to make the program to see that it is
> > actually
> > > > running on Nvidia hardware. Because if the client would just start
> then
> > > the
> > > > direct3d calls can be translated into opengl calls and the Nvidia
> linux
> > > > drivers can then handle them and run it all fine and dandy.
> > > >
> > > > Here is the post, with error message about wrong graphics card
> > detected,
> > > > http://www.ocforums.com/showpost.php?p=5698997&postcount=19 .
> > > >
> > > >
> > > > Thanks,
> > > >
> > > > Seth Shelnutt
> > > >
> >
> > --
> > Psssst! Schon das coole Video vom GMX MultiMessenger gesehen?
> > Der Eine f?r Alle: http://www.gmx.net/de/go/messenger03
> >

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger


From jjmckenzie51 at sprintpcs.com  Sat Jul  5 12:35:39 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Sat, 05 Jul 2008 10:35:39 -0700
Subject: Yet another person's list of must-have windows apps
In-Reply-To: <a71bd89a0807050701x21a51f60wa5d7fd4c508694fc@mail.gmail.com>
References: <a71bd89a0807050701x21a51f60wa5d7fd4c508694fc@mail.gmail.com>
Message-ID: <486FB0EB.1070703@sprintpcs.com>

Dan Kegel wrote:
> http://www.benjarvis.org/tech/how-to-minimize-your-windows-usage/
> lists his must-have windows apps as
> ---snip---
> - Ableton Live 7  (Nothing can replace this yet and the latency is too
> long under WINE)
> - VST Instruments  (DLL files that are used by Ableton Live)
> - iTunes (I may move back to Rockbox now that Banshee works better)
> - World of Warcraft (My video card is too weak to run it in Linux)
> - Various Emulators (Once I get my Xbox 360 controller to work under
> Ubuntu, I will be migrating these)
> - Magic the Gathering (It has issues under WINE, but I barely even play)
> ---snip---
>
> I guess that's one more vote for schannel.
>
>
>
>   
Dan:

What does the first program do?

James McKenzie



From thestig at google.com  Sat Jul  5 12:51:19 2008
From: thestig at google.com (Lei Zhang)
Date: Sat, 5 Jul 2008 10:51:19 -0700
Subject: Yet another person's list of must-have windows apps
In-Reply-To: <486FB0EB.1070703@sprintpcs.com>
References: <a71bd89a0807050701x21a51f60wa5d7fd4c508694fc@mail.gmail.com>
	<486FB0EB.1070703@sprintpcs.com>
Message-ID: <558b2f5c0807051051x1bd6b253v31722d16408e5c6c@mail.gmail.com>

On Sat, Jul 5, 2008 at 10:35 AM, James McKenzie
<jjmckenzie51 at sprintpcs.com> wrote:
> What does the first program do?
>

Wikipedia is your friend
http://en.wikipedia.org/wiki/Ableton_Live


From jjmckenzie51 at sprintpcs.com  Sat Jul  5 13:05:24 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Sat, 05 Jul 2008 11:05:24 -0700
Subject: Yet another person's list of must-have windows apps
In-Reply-To: <558b2f5c0807051051x1bd6b253v31722d16408e5c6c@mail.gmail.com>
References: <a71bd89a0807050701x21a51f60wa5d7fd4c508694fc@mail.gmail.com>
	<486FB0EB.1070703@sprintpcs.com>
	<558b2f5c0807051051x1bd6b253v31722d16408e5c6c@mail.gmail.com>
Message-ID: <486FB7E4.9000704@sprintpcs.com>

Lei Zhang wrote:
> On Sat, Jul 5, 2008 at 10:35 AM, James McKenzie
> <jjmckenzie51 at sprintpcs.com> wrote:
>   
>> What does the first program do?
>>
>>     
>
> Wikipedia is your friend
> http://en.wikipedia.org/wiki/Ableton_Live
>
>   
I'm one of those 'old school' folks and don't place much faith in Wikipedia.

James McKenzie



From dank at kegel.com  Sat Jul  5 13:08:20 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 5 Jul 2008 11:08:20 -0700
Subject: Yet another person's list of must-have windows apps
In-Reply-To: <486FB0EB.1070703@sprintpcs.com>
References: <a71bd89a0807050701x21a51f60wa5d7fd4c508694fc@mail.gmail.com>
	<486FB0EB.1070703@sprintpcs.com>
Message-ID: <a71bd89a0807051108r1a1e0576x81de3e6eb2b124fd@mail.gmail.com>

On Sat, Jul 5, 2008 at 10:35 AM, James McKenzie
<jjmckenzie51 at sprintpcs.com> wrote:
>> http://www.benjarvis.org/tech/how-to-minimize-your-windows-usage/
>> lists his must-have windows apps as
>> ---snip---
>> - Ableton Live 7  (Nothing can replace this yet and the latency is too
>> long under WINE)
>
> What does the first program do?

http://www.ableton.com/live is a music creation / performance tool.

http://www.google.com/trends?q="garage+band"%2C+"ableton+live"%2C+cakewalk

shows that a search for ableton live is as popular as a search
for garage band, and now more popular than cakewalk.  That's pretty popular.


From stefan at codeweavers.com  Sat Jul  5 09:31:23 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Sat, 5 Jul 2008 09:31:23 -0500
Subject: Pipeline separation preview
In-Reply-To: <000001c8deaa$d45388b0$7cfa9a10$@com>
References: <003601c8dc5a$f44466f0$dccd34d0$@com>
	<000001c8deaa$d45388b0$7cfa9a10$@com>
Message-ID: <000101c8deab$cd222500$67666f00$@com>

Oops, forgot to attach the archive

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pipeline.tar.bz2
Type: application/octet-stream
Size: 44689 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080705/3c589c5c/attachment-0001.obj 

From ivg231 at gmail.com  Sat Jul  5 15:51:53 2008
From: ivg231 at gmail.com (Ivan Gyurdiev)
Date: Sat, 05 Jul 2008 16:51:53 -0400
Subject: Pipeline separation preview
In-Reply-To: <000101c8deab$cd222500$67666f00$@com>
References: <003601c8dc5a$f44466f0$dccd34d0$@com>
	<000001c8deaa$d45388b0$7cfa9a10$@com>
	<000101c8deab$cd222500$67666f00$@com>
Message-ID: <486FDEE9.1020702@gmail.com>

Stefan D?singer wrote:
> Oops, forgot to attach the archive
>   
I like it, especially these parts:

- Interface decoupling - Moves FFP replacement code to using the FFP 
state table interface, instead of touching the unrelated shader interface
- Code separation - Code unrelated to shaders is moved out of the shader 
interface as a result (0020, 0021, 0022, 0048, 0049)
- Code separation - NV shader code pushed out into its own file, like 
ARBFS, ATIFS, GLSL - 0054, 0057, 0058, 0059 (if statements gone)
- Increased modularity - breaks up single state table into multiple 
parts, which can be individually manipulated w/o performance impact
- Moves towards OOP approach - state table structure is wrapped by a 
"fragment_pipeline" object with method vtable (0048)

I think it's moving in the right direction. It's also important that 
you've tried this on the NV extension, since now you have two pipeline 
replacements to test if the framework is sufficient or not.

Ivan



From stefan at codeweavers.com  Sat Jul  5 18:21:24 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Sat, 5 Jul 2008 18:21:24 -0500
Subject: Pipeline separation preview
In-Reply-To: <486FDEE9.1020702@gmail.com>
References: <003601c8dc5a$f44466f0$dccd34d0$@com>	<000001c8deaa$d45388b0$7cfa9a10$@com>	<000101c8deab$cd222500$67666f00$@com>
	<486FDEE9.1020702@gmail.com>
Message-ID: <000001c8def5$d829c8f0$887d5ad0$@com>



> -----Original Message-----
> From: wine-devel-bounces at winehq.org [mailto:wine-devel-
> bounces at winehq.org] On Behalf Of Ivan Gyurdiev
Thanks for the review!

> I think it's moving in the right direction. It's also important that
> you've tried this on the NV extension, since now you have two pipeline
> replacements to test if the framework is sufficient or not.
Is there anything in particular you do not like? Since usually the broken
parts cause issues when sending it to wine-patches, not the working ones :-)

I might look into an ARB or GLSL fragment pipeline replacement later today
or tomorrow, lacking any cxgames bugs I can fix on my nv-linux
machine(stupid macs), and pretty hot weather outside...




From wine-devel at kievinfo.com  Sat Jul  5 20:13:26 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sat, 05 Jul 2008 19:13:26 -0600
Subject: Update: comctl32: fix listview select-all
In-Reply-To: <48700A71.3010903@uwyo.edu>
References: <48700A71.3010903@uwyo.edu>
Message-ID: <48701C36.2030909@kievinfo.com>

winehq.10.drkshadow at spamgourmet.com wrote:
> Fixes the Listview control to not individually select and focus each 
> items. Has the added bugfix that it keeps the same item focused as was 
> to begin with, and doesn't scroll the list.
> 
> Updated: my if was incorrect and it was handling cases it shouldn't have 
> handled. It's improved now, and as far as I can tell handles only the 
> select-all case.

Please fix the formatting - 4 spaces indentation. No tabs. Do not reformat 
the lines that you did not modify. Follow the file style with curly brackets 
- here they go on the separate line.

Is there a reason you added whole new function SelectAll()  which is used in 
only one place and has only 4 lines?

And the most important - you missed your real name. Patches from anonymous 
posters are not accepted.

Vitaliy.


From shelnutt2 at gmail.com  Sat Jul  5 21:01:49 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Sat, 5 Jul 2008 22:01:49 -0400
Subject: Tricking program into seeing actual gfx driver not WINE's
In-Reply-To: <f5d9424f0807051844i4a79856fibf0f509636d4b81e@mail.gmail.com>
References: <6fc03d800807032024m75f73088j236b335c604e47bc@mail.gmail.com>
	<b130c85e0807032043u3764c74coe6715dd618ce5ed5@mail.gmail.com>
	<f5d9424f0807032301x3c292e8dme7c4b5ed7538ad98@mail.gmail.com>
	<6fc03d800807051811t3f62fb66j4f4f165d473f35d2@mail.gmail.com>
	<f5d9424f0807051844i4a79856fibf0f509636d4b81e@mail.gmail.com>
Message-ID: <6fc03d800807051901k6b1fceaav219048c1a41724a5@mail.gmail.com>

I get the following error when applying your patch via git-am,

shelnutt at Ubuntu32-L:~/wine$ git-am
0001-a-hack-to-make-Folding-Home-think-I-am-using-an-NVID.patch
cat: .dotest/next: No such file or directory
previous dotest directory .dotest still exists but mbox giv

I was able to apply it manually though using the patch command.

The only difference between your patch and mine was I also changed
"display", and I changed it to "nv4_display.dll". I guess that doesn't work.
It is compiling now, so thanks for the patch.

Also I wasn't aware of the change of name for Wine. I'll stop the all caps
now ;).


On Sat, Jul 5, 2008 at 9:44 PM, Jeff Zaroyko <jeffzaroyko at gmail.com> wrote:

> On Sun, Jul 6, 2008 at 11:11 AM, Seth Shelnutt <shelnutt2 at gmail.com>
> wrote:
> > After replacing the driver "Display" with "nv4_display.dll" and
> desctiption
> > with "NVIDIA GeForce 8800" I still get the same problem. It says the card
> is
> > not supported.
> >
>
> Hi Seth
>
> I'm not sure of your exact change, but I have attached a patch which
> succeeds for me.
>
> In your git directory, run
>
> git reset --hard # reverts all changes you have made
> git-am 0001-a-hack-to-make-Folding-Home-think-I-am-using-an-NVID.patch
> # applies my patch
> cd dlls/wined3d
> make
>
> now cd to the Folding at home install directory and run
> /path/to/git/wine/wine Folding at home.exe
>
> just on a side note, we say Wine, not WINE since the name changed some
> time ago
> http://wiki.winehq.org/FAQ#head-8b4fbbe473bd0d51d936bcf298f5b7f0e8d25f2e
>
>
> If you have any other questions, let me know.
>
> Jeff
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080705/f95142b5/attachment.htm 

From jjmckenzie51 at sprintpcs.com  Sat Jul  5 21:21:14 2008
From: jjmckenzie51 at sprintpcs.com (James McKenzie)
Date: Sat, 05 Jul 2008 19:21:14 -0700
Subject: Yet another person's list of must-have windows apps
In-Reply-To: <a71bd89a0807051108r1a1e0576x81de3e6eb2b124fd@mail.gmail.com>
References: <a71bd89a0807050701x21a51f60wa5d7fd4c508694fc@mail.gmail.com>
	<486FB0EB.1070703@sprintpcs.com>
	<a71bd89a0807051108r1a1e0576x81de3e6eb2b124fd@mail.gmail.com>
Message-ID: <48702C1A.2050309@sprintpcs.com>

Dan Kegel wrote:
> On Sat, Jul 5, 2008 at 10:35 AM, James McKenzie
> <jjmckenzie51 at sprintpcs.com> wrote:
>   
>>> http://www.benjarvis.org/tech/how-to-minimize-your-windows-usage/
>>> lists his must-have windows apps as
>>> ---snip---
>>> - Ableton Live 7  (Nothing can replace this yet and the latency is too
>>> long under WINE)
>>>       
>> What does the first program do?
>>     
>
> http://www.ableton.com/live is a music creation / performance tool.
>
> http://www.google.com/trends?q="garage+band"%2C+"ableton+live"%2C+cakewalk
>
> shows that a search for ableton live is as popular as a search
> for garage band, and now more popular than cakewalk.  That's pretty popular.
>
>   
I did look at it.  It is a zero issue for me because a Mac version 
exists.  Also, GarageBand comes with MacOSX.  I feel that this would be 
better served by asking the originators to create a Linux native version 
to solve the timing issues.

James McKenzie


From andrey.turkin at gmail.com  Sun Jul  6 06:37:21 2008
From: andrey.turkin at gmail.com (Andrey Turkin)
Date: Sun, 06 Jul 2008 15:37:21 +0400
Subject: mswsock:Implement 3 functions by calling
	through	SIO_GET_EXTENSION_FUNCTION_POINTER
In-Reply-To: <377233.89800.qm@web56615.mail.re3.yahoo.com>
References: <377233.89800.qm@web56615.mail.re3.yahoo.com>
Message-ID: <4870AE71.4050103@gmail.com>

You should mention somewhere (FIXME or TODO or something) what the code 
currently rely on socket being not used by WSAIoctl. IIRC Windows won't 
let you call WSAIoctl(0, ...)
Correct way would be to retrieve both AcceptEx and GetAcceptExSockaddrs 
routine addresses in AcceptEx wrapper and store lpOutputBuffer->fn 
mapping somewhere.

Jon Griffiths wrote:
> Hi,
>
> This is part one of a patch set that implements TransmitFile/Transmit packets and fixes bug 5048. This first part implements AcceptEx/GetAcceptExSockaddrs & TransmitFile by calling them from ws2_32 using SIO_GET_EXTENSION_FUNCTION_POINTER. Next up is the implementation itself.
>
> Cheers
> Jon
>
>
>
>
>       
> ------------------------------------------------------------------------
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080706/7d83a4b7/attachment.htm 

From hverbeet at gmail.com  Sun Jul  6 07:14:57 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Sun, 6 Jul 2008 14:14:57 +0200
Subject: Pipeline separation preview
In-Reply-To: <000101c8deab$cd222500$67666f00$@com>
References: <003601c8dc5a$f44466f0$dccd34d0$@com>
	<000001c8deaa$d45388b0$7cfa9a10$@com>
	<000101c8deab$cd222500$67666f00$@com>
Message-ID: <d658b69e0807060514i64fac579i2ebeb82b65d0b49@mail.gmail.com>

Looks good to me. You should probably start submitting it bit by bit,
see if any regression come up, although it looks pretty safe to me.


From bunglehead at gmail.com  Sun Jul  6 07:23:49 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sun, 06 Jul 2008 16:23:49 +0400
Subject: CreateFontIndirectEx and GetCharacterPlacement patches
Message-ID: <4870B955.1080300@gmail.com>

Is it something wrong with these patches:

http://www.winehq.org/pipermail/wine-patches/2008-June/056807.html
http://www.winehq.org/pipermail/wine-patches/2008-June/056808.html

They are related to bugs #13064 and #13094..


From Stefan.Leichter at camline.com  Sun Jul  6 08:15:37 2008
From: Stefan.Leichter at camline.com (Stefan Leichter)
Date: Sun, 6 Jul 2008 15:15:37 +0200
Subject: test for RasEnumDevicesA [2/2]
In-Reply-To: <200807061349.24821.Stefan.Leichter@camline.com>
References: <200807061349.24821.Stefan.Leichter@camline.com>
Message-ID: <200807061515.37815.Stefan.Leichter@camline.com>

Please use this version

Am Sunday 06 July 2008 13:49 schrieb Stefan Leichter:
ChangeLog
---------
	added some more tests for RasEnumDevicesA, fix wine not to crash on the tests
-------------- next part --------------
A non-text attachment was scrubbed...
Name: RasEnumDevicesATestsM.diff
Type: text/x-diff
Size: 3347 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080706/3c059f7f/attachment.diff 

From wine.dev at web.de  Sun Jul  6 08:25:44 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Sun, 06 Jul 2008 15:25:44 +0200
Subject: programs: add rudimentary dxdiag
In-Reply-To: <loom.20080702T225227-47@post.gmane.org>
References: <383400.99845.qm@web23204.mail.ird.yahoo.com>
	<b6bb06270806300815va6d1af4m300ba84a952ed272@mail.gmail.com>
	<1214927433.5786.8.camel@p4> <loom.20080702T225227-47@post.gmane.org>
Message-ID: <1215350744.5568.44.camel@p4.lan>

On Mi, 2008-07-02 at 23:02 +0000, Louis Lenders wrote:

> so for now i'd have to guess :
> 1. no need for a dxdiag in wine
> 2. my patches are too crappy to respond to.
> 
> In both cases it's useless to leave thebug i  opened for missing dxdiag  open,
> so i'll abandon it (bug 14118)

Louis, please do not give up and reopen the bug.
You got already some comments, and I want to give some more Ideas.

- You told, that you reuse the code for the cube from the internet.
  That is a no-go because of copyright and license issues!
  Where does the code came from?
  What is the license for that code?
  - Remember, that Wine is "LGPL v2.1 or later". 
?  - You can't use GPL code (That would force Wine to GPL)
?  - You can't use LGPL v3 code (That would force Wine to LGPL v3)
  The code works, as show in your demonstration, but IMHO the best thing
  is to use the math. formula with a clean implementation from scratch.
  - Multiple backends ??with support for different color-depth
    should then be possible: OpenGL, GDI, DX7, DX8, DX9.

- You told, that minimizing the Cube-Window does not work now,
  but worked in an old Wine.
  You think, that this is an Regression in Wine.
  It's also possible, that there was an bug in Wine which is now fixed 
  and your dxdiag code is not correct.
  Only a Regression-Test can help for this issue.
  Again, a clean implementation can avoid this issue.

Thanks for helping Wine


-- 
 
By by ... Detlef




From alex at thehandofagony.com  Sun Jul  6 08:55:35 2008
From: alex at thehandofagony.com (Alexander Nicolaysen =?iso-8859-1?q?S=F8rnes?=)
Date: Sun, 6 Jul 2008 15:55:35 +0200
Subject: Patch feedback
Message-ID: <200807061555.36489.alex@thehandofagony.com>

Hello,

I would really appreciate any feedback as to how these patches can be improved 
so that they will be accepted into Wine.

regedit: Add support for importing Unicode files
http://www.winehq.org/pipermail/wine-patches/2008-June/056856.html

I know this patch is a little big, but I'm not sure how it could be split up 
without possible data loss on import.  Is that acceptable?  I could for 
instance make a first patch that merely reads the file as Uncode then 
converts each line to multibyte characters.


user32: Always use old-style colours for Windows 3.x
http://www.winehq.org/pipermail/wine-patches/2008-June/056898.html



Alexander N. S?rnes


From wine.dev at web.de  Sun Jul  6 09:24:54 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Sun, 06 Jul 2008 16:24:54 +0200
Subject: richedit: do not read actual scrollbar state for scrollbar
	update, use internal state instead (RESEND)
In-Reply-To: <486E96D8.7050109@palosanto.com>
References: <4869489D.90404@palosanto.com> <486BBB77.8040206@palosanto.com>
	<486E96D8.7050109@palosanto.com>
Message-ID: <1215354295.5568.71.camel@p4.lan>

On Fr, 2008-07-04 at 16:32 -0500, Alex Villac??s Lasso wrote:

> Resending. Please comment on this patch.
?
>  dlls/riched20/editor.c       |   21 ++
>  dlls/riched20/editstr.h      |    3 +
>  dlls/riched20/paint.c        |   36 ++-
>  dlls/riched20/tests/editor.c |  794
> ++++++++++++++++++++++++++++++++++++++++++
>  4 files changed, 844 insertions(+), 10 deletions(-)

?I have no Idea about riched20, but your patch is far to huge.


?- ?Do not submit dead code:
  * ?reportScrollRanges
?- ?Do not submit debugging code:
  * There is no need to flood the output with trace()
    Fine during development, but remove that before
    you create a Patch

- The implementation is enough for a seperate Patch
- Please add only a basic Test in a Patch
- Add more Tests in seperate Patches:
  * ?Every "DestroyWindow(hwndRichEdit)" is the end of a Patch


Thanks


-- 
 
By by ... Detlef




From lav at etersoft.ru  Sun Jul  6 09:45:50 2008
From: lav at etersoft.ru (Vitaly Lipatov)
Date: Sun, 6 Jul 2008 18:45:50 +0400
Subject: New winetricks 20080704: added firefox3,
	kde verbs (and a whole lot of other stuff)
In-Reply-To: <a71bd89a0807040752u26b35248s24d4912880472da@mail.gmail.com>
References: <a71bd89a0807040752u26b35248s24d4912880472da@mail.gmail.com>
Message-ID: <200807061845.51260.lav@etersoft.ru>

? ????????? ?? 4 ???? 2008 Dan Kegel ???????(a):
> Another week, another winetricks.
Please check attached patch with fixes agains 20080704 version of winetricks.

Changes:
- introduce WINDIR variable with Unix path to windows dir (and use it 
instead "$WINEPREFIX"/drive_c/windows)
- wrap kdialog/xmessage using with variable to disable extra requires during 
creating a rpm package
- add missed quites and remove extra spaces

> Online as always at
>   http://kegel.com/wine/winetricks
> or
>   http://winezeug.googlecode.com



-- 
Vitaly Lipatov, ALT Linux Team
Russia, Saint-Petersburg, www.etersoft.ru
-------------- next part --------------
A non-text attachment was scrubbed...
Name: winetricks-20080704-etersoft.patch
Type: text/x-diff
Size: 15262 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080706/9aef32f3/attachment.patch 

From stefan at codeweavers.com  Sun Jul  6 09:38:01 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Sun, 6 Jul 2008 09:38:01 -0500
Subject: Pipeline separation preview
In-Reply-To: <d658b69e0807060514i64fac579i2ebeb82b65d0b49@mail.gmail.com>
References: <003601c8dc5a$f44466f0$dccd34d0$@com>	
	<000001c8deaa$d45388b0$7cfa9a10$@com>	
	<000101c8deab$cd222500$67666f00$@com>
	<d658b69e0807060514i64fac579i2ebeb82b65d0b49@mail.gmail.com>
Message-ID: <009c01c8df75$e5c17e10$b1447a30$@com>

> Looks good to me. You should probably start submitting it bit by bit,
> see if any regression come up, although it looks pretty safe to me.
Sure, that's the plan. I don't think submitting 50+ patches at once will
work well.

I have found 2 minor regressions, but fixed them already in my tree. (Mostly
incorrect calls in some state handler, like calling across pipeline parts
into a specific implementation of another pipeline part)




From wine.dev at web.de  Sun Jul  6 10:45:30 2008
From: wine.dev at web.de (Detlef Riekenberg)
Date: Sun, 06 Jul 2008 17:45:30 +0200
Subject: Alternate shell?
In-Reply-To: <a71bd89a0805221516h78538fecu13febd1f7cc8e7e5@mail.gmail.com>
References: <a71bd89a0805221516h78538fecu13febd1f7cc8e7e5@mail.gmail.com>
Message-ID: <1215359130.5568.94.camel@p4.lan>

On Do, 2008-05-22 at 15:16 -0700, Dan Kegel wrote:
> For a maximal dogfood experience, I was looking around
> for a way to use a replacement Windows shell with
> Wine as my desktop environment instead of gnome
> or kde.

Wow.

> So far, all the ones I've found are either broken, hard to use,
> or just plain weird.

> Anyone have a favorite I should try?

http://www.calmira.net
Examples:
http://www.calmira.net/screenshots/stephan.htm
http://www.calmira.net/screenshots/chris_p.htm
http://www.calmira.net/screenshots/pcfreak2.htm


Related work:
Calmira_XP: http://www.abzone.be/calmira_calxp

Calmira_Longhorn: http://calmira.co.nr/
Example: http://www.postimage.org/image.php?v=aVBPR4r

######### Test Calmira_Longhorn:
?cd <wine_c_drive>
wget http://calmira.kyblsoft.sk/dwnlds/callh36.zip
unzip callh36.zip
cd CALMIRA
?
To avoid, that the explorer.exe from calmira is used for the desktop,
you need the full path to explorer.exe.so

wine
<your_build_path>/programs/explorer/explorer.exe.so  /desktop=xxx,800x600 
 CALMIRA.EXE


Sometimes, http://www.calmira.org is referenced, but that is outdated
and give you an advertising website

-- 
 
By by ... Detlef




From wine-devel at kievinfo.com  Sun Jul  6 10:55:05 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 06 Jul 2008 09:55:05 -0600
Subject: New winetricks 20080704: added firefox3,	kde verbs (and a whole
	lot of other stuff)
In-Reply-To: <200807061845.51260.lav@etersoft.ru>
References: <a71bd89a0807040752u26b35248s24d4912880472da@mail.gmail.com>
	<200807061845.51260.lav@etersoft.ru>
Message-ID: <4870EAD9.1070408@kievinfo.com>

Vitaly Lipatov wrote:
> ? ????????? ?? 4 ???? 2008 Dan Kegel ???????(a):
>> Another week, another winetricks.
> Please check attached patch with fixes agains 20080704 version of winetricks.
> 
> Changes:
> - introduce WINDIR variable with Unix path to windows dir (and use it 
> instead "$WINEPREFIX"/drive_c/windows)
> - wrap kdialog/xmessage using with variable to disable extra requires during 
> creating a rpm package
> - add missed quites and remove extra spaces
> 
>> Online as always at
>>   http://kegel.com/wine/winetricks
>> or
>>   http://winezeug.googlecode.com
> 
> 
Guessing windir is a bad thing. You should use this instead:
WINDIR=$(wine winepath -u "$(wine cmd /c echo %windir%)")


Same applies to other system directories like "Program Files".

Vitaliy.


From thestig at google.com  Sun Jul  6 12:27:26 2008
From: thestig at google.com (Lei Zhang)
Date: Sun, 6 Jul 2008 10:27:26 -0700
Subject: Patch feedback
In-Reply-To: <200807061555.36489.alex@thehandofagony.com>
References: <200807061555.36489.alex@thehandofagony.com>
Message-ID: <558b2f5c0807061027s6c818ad3jdb3ecd43adc7fdf5@mail.gmail.com>

On Sun, Jul 6, 2008 at 6:55 AM, Alexander Nicolaysen S?rnes
<alex at thehandofagony.com> wrote:
> Hello,
>
> I would really appreciate any feedback as to how these patches can be improved
> so that they will be accepted into Wine.
>
> regedit: Add support for importing Unicode files
> http://www.winehq.org/pipermail/wine-patches/2008-June/056856.html
>
> I know this patch is a little big, but I'm not sure how it could be split up
> without possible data loss on import.  Is that acceptable?  I could for
> instance make a first patch that merely reads the file as Uncode then
> converts each line to multibyte characters.

Sure. How about:

1 patch for the first two utility functions.
1 patch for each W version of an existing function.
1 or 2 patches to glue it all together.


From truiken at gmail.com  Sun Jul  6 12:29:29 2008
From: truiken at gmail.com (James Hawkins)
Date: Sun, 6 Jul 2008 12:29:29 -0500
Subject: mlang/tests: don't assume output of ConvertStringFromUnicode is
	null terminated
In-Reply-To: <a71bd89a0807060808s4588de4ap8dd732eb001e6c10@mail.gmail.com>
References: <a71bd89a0807060808s4588de4ap8dd732eb001e6c10@mail.gmail.com>
Message-ID: <22821af30807061029h125b20d8s64013fdd0dcf0ae8@mail.gmail.com>

2008/7/6 Dan Kegel <dank at kegel.com>:
> The mlang test assumed that the output of ConvertStringFromUnicode
> was null terminated, but it seems not to be.
>
> Fixes the valgrind warning:
> Conditional jump or move depends on uninitialised value(s)
>   at strlen (mc_replace_strmem.c:242)
>   by lstrlenA (string.c:364)
>   by ConvertINetMultiByteToUnicode (mlang.c:526)
>   by ConvertINetString (mlang.c:633)
>   by fnIMultiLanguage2_ConvertString (mlang.c:2197)
>   by check_convertible (mlang.c:287)
>   by test_EnumCodePages (mlang.c:407)
>  Uninitialised value was created by a stack allocation
>   at check_convertible (mlang.c:270)
>
> I believe James was trying to fix this with
> http://www.winehq.org/pipermail/wine-patches/2008-June/056454.html
> but missed (he thought the problem was on the destination
> len, but really it was on the source len?).
>

No, this is hiding a bug.  The test code conforms with the API.  The
problem is that ConvertINetMultiByteToUnicode uses the value of an
out-only parameter (NULL pDstStr, non-NULL pcDstSize).  Check out the
code block in mlang.c:632.

-- 
James Hawkins


From shelnutt2 at gmail.com  Sun Jul  6 14:23:39 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Sun, 6 Jul 2008 15:23:39 -0400
Subject: CUDA wrapper
Message-ID: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>

As a continuation from the question on making the FAH GPU2 Nvidia client
run, we have gotten past the detecting the card as we changed Wine's generic
output to look like an Nvidia card thanks to a few of you. Now comes the
hard part. Even when using the cudart.dll file it does not work. We get an
cudastream error about it not being implemented. It then repeats these 5
lines until the client is stopped.

Reading file work/wudata_07.tpr, VERSION 3.1.4 (single precision)
Reading file work/wudata_07.tpr, VERSION 3.1.4 (single precision)
Reading sasa-enabled ir 0 0
Initializing Nvidia gpu library
cudaMalloc CUDAStream::Allocate failed feature is not yet implemented


Martijn Berger said here (
http://www.winehq.org/pipermail/wine-devel/2008-July/067063.html) that all
that should need to be done is right a wrapper to translate the calls from
cudart.dll to libcuda.so.2.0. I suppose the place to start would be to
download the SDK's and see how much documentation is available on both the
Linux and Windows calls.


-Seth Shelnutt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080706/e418bc57/attachment.htm 

From eric.pouech at orange.fr  Sun Jul  6 14:36:16 2008
From: eric.pouech at orange.fr (Eric Pouech)
Date: Sun, 06 Jul 2008 21:36:16 +0200
Subject: Patch feedback
In-Reply-To: <558b2f5c0807061027s6c818ad3jdb3ecd43adc7fdf5@mail.gmail.com>
References: <200807061555.36489.alex@thehandofagony.com>
	<558b2f5c0807061027s6c818ad3jdb3ecd43adc7fdf5@mail.gmail.com>
Message-ID: <48711EB0.9000305@orange.fr>

Lei Zhang a ?crit :
> On Sun, Jul 6, 2008 at 6:55 AM, Alexander Nicolaysen S?rnes
> <alex at thehandofagony.com> wrote:
>   
>> Hello,
>>
>> I would really appreciate any feedback as to how these patches can be improved
>> so that they will be accepted into Wine.
>>
>> regedit: Add support for importing Unicode files
>> http://www.winehq.org/pipermail/wine-patches/2008-June/056856.html
>>
>> I know this patch is a little big, but I'm not sure how it could be split up
>> without possible data loss on import.  Is that acceptable?  I could for
>> instance make a first patch that merely reads the file as Uncode then
>> converts each line to multibyte characters.
>>     
>
> Sure. How about:
>
> 1 patch for the first two utility functions.
> 1 patch for each W version of an existing function.
> 1 or 2 patches to glue it all together.
>
>   
duplicating a lot of functions for A/W compatibility just shows that the 
internals of regedit should be moved to unicode first
then your patch will be relatively straightforward
A+

-- 
Eric Pouech
"The problem with designing something completely foolproof is to underestimate the ingenuity of a complete idiot." (Douglas Adams)




From wine-devel at kievinfo.com  Sun Jul  6 16:37:03 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Sun, 06 Jul 2008 15:37:03 -0600
Subject: mpr: Add Russian translation
In-Reply-To: <A2B5A8B9-95CE-41E9-8872-7BB5A90A898C@reactos.org>
References: <20060719134945.7F196FFC6@mail.smartxx.ru>
	<A2B5A8B9-95CE-41E9-8872-7BB5A90A898C@reactos.org>
Message-ID: <48713AFF.5020005@kievinfo.com>

Aleksey Bragin wrote:
> All those things have been translated more than 2 years ago and 
> submitted here (attaching again). The quality, for example in mpr.dll is 
> even better (vs. the patch by Vitaliy Margolen which was committed 
> 7d3a5af43ea0d66a0596a4fac22cf88ae50d2745 in april, 2008).
> 
> Please, Vitaliy, or any other russian here, rework these patches so they 
> could be applied against recent Wine head, or use them as inspiration 
> for your work. I don't have time to do this at the moment, unfortunately.
> 
Please send one dll at a time as a patch (plain text attachment, no zips, 
not binaries).

Also the are only few things left untranslated (crypt32 and kernel error 
messages). Why are you sending shdocvw which is already 100% translated? 
Same for shlwapi.

Vitaliy.



From shelnutt2 at gmail.com  Sun Jul  6 17:23:31 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Sun, 6 Jul 2008 18:23:31 -0400
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
Message-ID: <6fc03d800807061523x1c6911cdt31bdf43748649eab@mail.gmail.com>



From wine at mkarcher.dialup.fu-berlin.de  Sun Jul  6 17:53:58 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Mon, 07 Jul 2008 00:53:58 +0200
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807061523x1c6911cdt31bdf43748649eab@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<6fc03d800807061523x1c6911cdt31bdf43748649eab@mail.gmail.com>
Message-ID: <1215384838.14103.9.camel@hermes2.karcher.local>

Am Sonntag, den 06.07.2008, 18:23 -0400 schrieb Seth Shelnutt:
> Is it possible to just symbolicly link the cudart.dll file to the
> libcudart.so file? If they are expecting mostly the same function
> calls should this not work? They are going to test this now and see.
This is not going to work. PE style dynamic linking works quite
different from ELF style dynamic linking. Wine can not link native ELF
libraries to windows applications. The .dll.so files from wine are
special in being ELF files but containing extra information that allows
the Wine dynamic linker to link it into PE processes.

> I believe the main problem is just that cudart.dll is driving to
> access the windows nvidia driver where this is none, but libcudart.so
> knows how to access the linux driver.
This is right. You need at least a correct .spec file to make a wine
dll. You still have to implement a wrapper for each function, as Windows
usually uses the stdcall calling convention, whereas linux uses cdecl by
default. There might be some way to automate writing the wrapper
functions.

Regards,
  Michael Karcher




From austin.lund at gmail.com  Sun Jul  6 18:11:53 2008
From: austin.lund at gmail.com (Austin Lund)
Date: Mon, 7 Jul 2008 09:11:53 +1000
Subject: Crashes in winetest under wine
In-Reply-To: <bcab73240807022356k4e0be5b0me7b6de8b5f6a4aca@mail.gmail.com>
References: <bcab73240807022356k4e0be5b0me7b6de8b5f6a4aca@mail.gmail.com>
Message-ID: <bcab73240807061611g6e5f11e7maecc1faee5b6ea27@mail.gmail.com>

2008/7/3 Austin Lund <austin.lund at gmail.com>:
> I get a crash all the time in winetest since 1.0.  Seems there is not
> a problem with any of the tests themselves (i.e. running make test).
>
> The last few lines of output from winetest is:
>
> fixme:xrandr:X11DRV_XRandR_SetCurrentMode Cannot change screen BPP from 32 to 8
> fixme:xrandr:X11DRV_XRandR_SetCurrentMode Cannot change screen BPP from 32 to 16
> err:x11settings:X11DRV_ChangeDisplaySettingsEx No matching mode found
> 1440x900x24 @0! (XRandR)
> err:ntdll:RtlpWaitForCriticalSection section 0x7bc91824 "loader.c:
> loader_section" wait timed out in thread 0039, blocked by 0036,
> retrying (60 sec)
> wine: Critical section 7bc91824 wait failed at address 0x7bc3ab60
> (thread 0039), starting debugger...
> err:seh:raise_exception Unhandled exception code c0000194 flags 0 addr
> 0x7bc3ab60
>
> And the output file made in /tmp has at the end:
>
> uxtheme:system start dlls/uxtheme/tests/system.c -
> system.c:491: Starting test_IsThemed()
> system.c:87: Theming is inactive
> system.c:495: Starting test_GetWindowTheme()
> system.c:499: Starting test_SetWindowTheme()
> system.c:503: Starting test_OpenThemeData()
> system.c:263: No active theme, skipping rest of OpenThemeData tests
> system.c:507: Starting test_GetCurrentThemeName()
> system.c:511: Starting test_CloseThemeData()
> system: 45 tests executed (11 marked as todo, 0 failures), 0 skipped.
> uxtheme:system done (0)
>
> It takes quite a long time to get to the point where it crashes so I'd
> be open to ideas as to how to narrow this down quicker.
>
> I'm running everything on a clean install with an empty ~/.wine directory.
>

I still get this.  When doing "make test" in uxtheme everything is
fine.  The next test to be run is version, but it also works fine.
Does anyone have any idea how to start debuging this?


From stefan at codeweavers.com  Sun Jul  6 18:23:00 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Sun, 6 Jul 2008 18:23:00 -0500
Subject: CUDA wrapper
In-Reply-To: <1215384838.14103.9.camel@hermes2.karcher.local>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>	<6fc03d800807061523x1c6911cdt31bdf43748649eab@mail.gmail.com>
	<1215384838.14103.9.camel@hermes2.karcher.local>
Message-ID: <002d01c8dfbf$3b8d9060$b2a8b120$@com>

> This is right. You need at least a correct .spec file to make a wine
> dll. You still have to implement a wrapper for each function, as
> Windows
> usually uses the stdcall calling convention, whereas linux uses cdecl
> by
> default. There might be some way to automate writing the wrapper
> functions.
opengl32.dll has a perl script for that I think





From shelnutt2 at gmail.com  Sun Jul  6 18:28:40 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Sun, 6 Jul 2008 19:28:40 -0400
Subject: CUDA wrapper
In-Reply-To: <1215384838.14103.9.camel@hermes2.karcher.local>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<6fc03d800807061523x1c6911cdt31bdf43748649eab@mail.gmail.com>
	<1215384838.14103.9.camel@hermes2.karcher.local>
Message-ID: <6fc03d800807061628w667303d8nfe3e6b37c3153b16@mail.gmail.com>

I writing a wrapper, would it be correct to more or less follow this guide,
on winelib dll's? http://www.winehq.org/site/docs/winelib-guide/bindlls

I've never coded anything for Wine before so I want to make sure I do it
right from the beginning instead of having to go back and make drastic
changes.

I'll be looking at that opengl32 perl script because there is 102 pages of
functions that cudart.dll and libcudart.so both contain.


On Sun, Jul 6, 2008 at 6:53 PM, Michael Karcher <
wine at mkarcher.dialup.fu-berlin.de> wrote:

> This is not going to work. PE style dynamic linking works quite
> different from ELF style dynamic linking. Wine can not link native ELF
> libraries to windows applications. The .dll.so files from wine are
> special in being ELF files but containing extra information that allows
> the Wine dynamic linker to link it into PE processes.
>


>
> This is right. You need at least a correct .spec file to make a wine
> dll. You still have to implement a wrapper for each function, as Windows
> usually uses the stdcall calling convention, whereas linux uses cdecl by
> default. There might be some way to automate writing the wrapper
> functions.
>
> Regards,
>   Michael Karcher
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080706/869dc950/attachment-0001.htm 

From stefan at codeweavers.com  Sun Jul  6 21:13:59 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Sun, 6 Jul 2008 21:13:59 -0500
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807061628w667303d8nfe3e6b37c3153b16@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>	<6fc03d800807061523x1c6911cdt31bdf43748649eab@mail.gmail.com>	<1215384838.14103.9.camel@hermes2.karcher.local>
	<6fc03d800807061628w667303d8nfe3e6b37c3153b16@mail.gmail.com>
Message-ID: <000001c8dfd7$1e328850$5a9798f0$@com>

Yes, this guide is reasonable, except probably the building part. You *may*
want to write this DLL as part of Wine, although I am afraid that we don't
have a policy how to deal with non-Windows DLLs(since cuda is an Nvidia
thing, not from MS). Of course the 5.5 part doesn't apply then as well.

 

From: wine-devel-bounces at winehq.org [mailto:wine-devel-bounces at winehq.org]
On Behalf Of Seth Shelnutt
Sent: Sunday, July 06, 2008 6:29 PM
To: Michael Karcher
Cc: wine-devel at winehq.org
Subject: Re: CUDA wrapper

 

I writing a wrapper, would it be correct to more or less follow this guide,
on winelib dll's? http://www.winehq.org/site/docs/winelib-guide/bindlls

I've never coded anything for Wine before so I want to make sure I do it
right from the beginning instead of having to go back and make drastic
changes.

I'll be looking at that opengl32 perl script because there is 102 pages of
functions that cudart.dll and libcudart.so both contain.



On Sun, Jul 6, 2008 at 6:53 PM, Michael Karcher
<wine at mkarcher.dialup.fu-berlin.de> wrote:

This is not going to work. PE style dynamic linking works quite
different from ELF style dynamic linking. Wine can not link native ELF
libraries to windows applications. The .dll.so files from wine are
special in being ELF files but containing extra information that allows
the Wine dynamic linker to link it into PE processes.

 

 

This is right. You need at least a correct .spec file to make a wine
dll. You still have to implement a wrapper for each function, as Windows
usually uses the stdcall calling convention, whereas linux uses cdecl by
default. There might be some way to automate writing the wrapper
functions.

Regards,
 Michael Karcher



 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080706/d632c3e0/attachment.htm 

From shelnutt2 at gmail.com  Sun Jul  6 21:37:53 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Sun, 6 Jul 2008 22:37:53 -0400
Subject: CUDA wrapper
In-Reply-To: <000001c8dfd7$1e328850$5a9798f0$@com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<6fc03d800807061523x1c6911cdt31bdf43748649eab@mail.gmail.com>
	<1215384838.14103.9.camel@hermes2.karcher.local>
	<6fc03d800807061628w667303d8nfe3e6b37c3153b16@mail.gmail.com>
	<000001c8dfd7$1e328850$5a9798f0$@com>
Message-ID: <6fc03d800807061937l546fcf84kc0c22bfb78f9d5e9@mail.gmail.com>

Ok, please forgive my naivety but this is my first attempt and all,

I am lost and need come guidance, the guide is of some help and so is
looking at the opengl files. I am not sure exactly what I am trying to
write. What is the difference between a dll form Wine and a dll.so? I know
the dll.so end up in your linux /lib folder right? How does a dll
communicate to this dll.so? How am I to write this dll file so that when the
fah gpu app calls for a function the cudart.dll file acts as a link to the
libcudart.so.2.0? I don't want to attempt to rewrite the entire dll if I
don't have to. To me it just seems like I am not getting the picture. I know
we can't simply link the two files because they are in two different formats
ELF vs PE. Is there a good example on how this is done? I'm sure this has
been done before. Again looking to the opengl_norm.c file all it appears is
that every functions has been rewritten but with "wine_" in front of the
function name. Is that all I need to do with the cudart? That just seem
right.

I probably should even be messing with this stuff, but the beautify of open
source applications is that with a little help from the community I can add
in support for things I need (CUDA). If this was a closed source app, I
would have to just put in a request for it and maybe in a few months or so
they might think about adding support.


Thanks for your patience and help

On Sun, Jul 6, 2008 at 10:13 PM, Stefan D?singer <stefan at codeweavers.com>
wrote:

>  Yes, this guide is reasonable, except probably the building part. You
> *may* want to write this DLL as part of Wine, although I am afraid that we
> don't have a policy how to deal with non-Windows DLLs(since cuda is an
> Nvidia thing, not from MS). Of course the 5.5 part doesn't apply then as
> well.
>
>
>
> *From:* wine-devel-bounces at winehq.org [mailto:
> wine-devel-bounces at winehq.org] *On Behalf Of *Seth Shelnutt
> *Sent:* Sunday, July 06, 2008 6:29 PM
> *To:* Michael Karcher
> *Cc:* wine-devel at winehq.org
> *Subject:* Re: CUDA wrapper
>
>
>
> I writing a wrapper, would it be correct to more or less follow this guide,
> on winelib dll's? http://www.winehq.org/site/docs/winelib-guide/bindlls
>
> I've never coded anything for Wine before so I want to make sure I do it
> right from the beginning instead of having to go back and make drastic
> changes.
>
> I'll be looking at that opengl32 perl script because there is 102 pages of
> functions that cudart.dll and libcudart.so both contain.
>
>  On Sun, Jul 6, 2008 at 6:53 PM, Michael Karcher <
> wine at mkarcher.dialup.fu-berlin.de> wrote:
>
> This is not going to work. PE style dynamic linking works quite
> different from ELF style dynamic linking. Wine can not link native ELF
> libraries to windows applications. The .dll.so files from wine are
> special in being ELF files but containing extra information that allows
> the Wine dynamic linker to link it into PE processes.
>
>
>
>
>
> This is right. You need at least a correct .spec file to make a wine
> dll. You still have to implement a wrapper for each function, as Windows
> usually uses the stdcall calling convention, whereas linux uses cdecl by
> default. There might be some way to automate writing the wrapper
> functions.
>
> Regards,
>  Michael Karcher
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080706/e250459b/attachment.htm 

From stefan at codeweavers.com  Sun Jul  6 22:04:09 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Sun, 6 Jul 2008 22:04:09 -0500
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807061937l546fcf84kc0c22bfb78f9d5e9@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>	
	<6fc03d800807061523x1c6911cdt31bdf43748649eab@mail.gmail.com>	
	<1215384838.14103.9.camel@hermes2.karcher.local>	
	<6fc03d800807061628w667303d8nfe3e6b37c3153b16@mail.gmail.com>	
	<000001c8dfd7$1e328850$5a9798f0$@com>
	<6fc03d800807061937l546fcf84kc0c22bfb78f9d5e9@mail.gmail.com>
Message-ID: <000e01c8dfde$20390280$60ab0780$@com>


> Ok, please forgive my naivety but this is my first attempt and all,
No worries. This list is here for help in such cases(although I am not that
experienced in that area)

> I am lost and need come guidance, the guide is of some help and so is
looking at the
> opengl files. I am not sure exactly what I am trying to write. What is the
difference
> between a dll form Wine and a dll.so? I know the dll.so end up in your
linux /lib
> folder right? How does a dll communicate to this dll.so?
There are 3 file extensions:
.so: Those are ELF shared object files which Linux uses. Linux apps can link
to them, Windows apps can't due to reasons pointed out earlier
.dll: Those are PE files, which Windows apps can link to, but the Linux
dynamic loader can't parse
.dll.so: Those are Wine DLLs. Technically they are .so files, but with extra
information added for linking them with Windows apps.

A Windows app classically links to .dll and .exe files(.exe is just a .dll
with a main() function in it). Wine can use its own builtin .dll.so
implementations of a DLL. Those libraries are loaded by the Linux dynamic
loader, so a .dll.so can link to other Linux libraries(e.g. libcuda.so).
That way you can write functions that serve as Win32 API entrypoints for
Windows apps and call Linux APIs themselves.

> How am I to write this dll file so that when the fah gpu app calls for a
function the
> cudart.dll file acts as a link to the libcudart.so.2.0? I don't want to
attempt to
> rewrite the entire dll if I don't have to. To me it just seems like I am
not getting 
> the picture. I know we can't simply link the two files because they are in
two 
> different formats ELF vs PE. Is there a good example on how this is done?
I'm sure 
> this has been done before. Again looking to the opengl_norm.c file all it
appears is 
> that every functions has been rewritten but with "wine_" in front of the
function 
> name. Is that all I need to do with the cudart? That just seem right.
You don't want to rewrite CUDA in the way we rewrite e.g. d3d9.dll, since
that would mean to talk to the GPU or driver directly without Nvidia's
libcudart.so.2.0. You just want to write functions that simply call the
function exported from the Linux library. For example, like in the opengl
stuff:

FancyCudaReturnValue wine_CudaSomeFunc(int a, int b) {
	return CudaSumeFunc(a, b);
}

That's not really called a "rewrite"(e.g. look at ole32 to see what would be
considered a "rewrite"), but rather a thunk. Unfortunately it can still be a
a whole lot of typing work, unless you manage to write a script to generate
the thunks.

You have to take if there are some differences between the Linux and Windows
functions, e.g.:
Win32: CudaSomething(HWND window);
Linux: CudaSomething(XWindow window);

In this case you can't just pass the Windows specific data structure
along(Don't ask me how you would solve this exact issue here since only
winex11.drv is supposed to know about the HWND<->XWindow mappings.)

You also have to take care with filenames:
Win32: CudaSomething2(const char *filename);
Linux: CudaSomething2(const char *filename);
The Linux function would not be happy if you pass it a
"C:\Path\to\some\odd\place.txt", and likewise the Windows app will not be
happy if you pass it a "/home/user/my/fancy/location.txt" file returned from
cuda. For cases like these, Wine provides functions to translate paths.




From zgs at seas.upenn.edu  Sun Jul  6 22:47:37 2008
From: zgs at seas.upenn.edu (Zachary Goldberg)
Date: Sun, 6 Jul 2008 23:47:37 -0400
Subject: New winetricks 20080704: added firefox3,
	kde verbs (and a whole lot of other stuff)
In-Reply-To: <4870EAD9.1070408@kievinfo.com>
References: <a71bd89a0807040752u26b35248s24d4912880472da@mail.gmail.com>
	<200807061845.51260.lav@etersoft.ru> <4870EAD9.1070408@kievinfo.com>
Message-ID: <b050a5e70807062047g24ce54fcxb4077b628a017093@mail.gmail.com>

On Sun, Jul 6, 2008 at 11:55 AM, Vitaliy Margolen
<wine-devel at kievinfo.com> wrote:
> Vitaly Lipatov wrote:
>> ? ????????? ?? 4 ???? 2008 Dan Kegel ???????(a):
>>> Another week, another winetricks.
>> Please check attached patch with fixes agains 20080704 version of winetricks.
>>
>> Changes:
>> - introduce WINDIR variable with Unix path to windows dir (and use it
>> instead "$WINEPREFIX"/drive_c/windows)
>> - wrap kdialog/xmessage using with variable to disable extra requires during
>> creating a rpm package
>> - add missed quites and remove extra spaces
>>
>>> Online as always at
>>>   http://kegel.com/wine/winetricks
>>> or
>>>   http://winezeug.googlecode.com
>>
>>
> Guessing windir is a bad thing. You should use this instead:
> WINDIR=$(wine winepath -u "$(wine cmd /c echo %windir%)")
>
>
> Same applies to other system directories like "Program Files".
>
> Vitaliy.
>
>
>

Dan,

I in no way mean to second guess your work but I checked out the diff
for the most recent commit for how winetricks handled FF3.  It seems
all it does is download it and install it, no "tricks".  Do we want
winetricks to become a generic application installer?  I thoughts its
main purpose was to perform some non-obvious tricks to get difficult
things to install.

--Zach

From winehacker at gmail.com  Sun Jul  6 23:00:56 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Mon, 7 Jul 2008 00:00:56 -0400
Subject: New winetricks 20080704: added firefox3,
	kde verbs (and a whole lot of other stuff)
In-Reply-To: <b050a5e70807062047g24ce54fcxb4077b628a017093@mail.gmail.com>
References: <a71bd89a0807040752u26b35248s24d4912880472da@mail.gmail.com>
	<200807061845.51260.lav@etersoft.ru> <4870EAD9.1070408@kievinfo.com>
	<b050a5e70807062047g24ce54fcxb4077b628a017093@mail.gmail.com>
Message-ID: <19e31a080807062100l350a7dbehb162478f526ec8a1@mail.gmail.com>

On Sun, Jul 6, 2008 at 11:47 PM, Zachary Goldberg <zgs at seas.upenn.edu> wrote:
> I in no way mean to second guess your work but I checked out the diff
> for the most recent commit for how winetricks handled FF3.  It seems
> all it does is download it and install it, no "tricks".  Do we want
> winetricks to become a generic application installer?  I thoughts its
> main purpose was to perform some non-obvious tricks to get difficult
> things to install.

I suggested it to Dan and added it because winetricks is supposed to
be a developers tool and I needed it for a development project. Just
going to getfirefox.com on linux auto detects your platform and of
course I did not want Linux but the windows builds. I thought it might
be a of use if others need win32 firefox for testing, development,
etc.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From zgs at seas.upenn.edu  Sun Jul  6 23:05:17 2008
From: zgs at seas.upenn.edu (Zachary Goldberg)
Date: Mon, 7 Jul 2008 00:05:17 -0400
Subject: New winetricks 20080704: added firefox3,
	kde verbs (and a whole lot of other stuff)
In-Reply-To: <19e31a080807062100l350a7dbehb162478f526ec8a1@mail.gmail.com>
References: <a71bd89a0807040752u26b35248s24d4912880472da@mail.gmail.com>
	<200807061845.51260.lav@etersoft.ru> <4870EAD9.1070408@kievinfo.com>
	<b050a5e70807062047g24ce54fcxb4077b628a017093@mail.gmail.com>
	<19e31a080807062100l350a7dbehb162478f526ec8a1@mail.gmail.com>
Message-ID: <b050a5e70807062105n3de0252eg875fad15d6d26712@mail.gmail.com>

On Mon, Jul 7, 2008 at 12:00 AM, Steven Edwards <winehacker at gmail.com> wrote:
> On Sun, Jul 6, 2008 at 11:47 PM, Zachary Goldberg <zgs at seas.upenn.edu> wrote:
>> I in no way mean to second guess your work but I checked out the diff
>> for the most recent commit for how winetricks handled FF3.  It seems
>> all it does is download it and install it, no "tricks".  Do we want
>> winetricks to become a generic application installer?  I thoughts its
>> main purpose was to perform some non-obvious tricks to get difficult
>> things to install.
>
> I suggested it to Dan and added it because winetricks is supposed to
> be a developers tool and I needed it for a development project. Just
> going to getfirefox.com on linux auto detects your platform and of
> course I did not want Linux but the windows builds. I thought it might
> be a of use if others need win32 firefox for testing, development,
> etc.
>
> --
> Steven Edwards
>
> "There is one thing stronger than all the armies in the world, and
> that is an idea whose time has come." - Victor Hugo
>

Aha!  I guess in this case simply downloading FF3 for windows is
actually a "trick".

-Zach


From dank at kegel.com  Sun Jul  6 23:35:39 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 6 Jul 2008 21:35:39 -0700
Subject: New winetricks 20080704: added firefox3,
	kde verbs (and a whole lot of other stuff)
In-Reply-To: <b050a5e70807062047g24ce54fcxb4077b628a017093@mail.gmail.com>
References: <a71bd89a0807040752u26b35248s24d4912880472da@mail.gmail.com>
	<200807061845.51260.lav@etersoft.ru> <4870EAD9.1070408@kievinfo.com>
	<b050a5e70807062047g24ce54fcxb4077b628a017093@mail.gmail.com>
Message-ID: <a71bd89a0807062135j3f9ed517p876536efe8df3afd@mail.gmail.com>

On Sun, Jul 6, 2008 at 8:47 PM, Zachary Goldberg <zgs at seas.upenn.edu> wrote:
> I in no way mean to second guess your work but I checked out the diff
> for the most recent commit for how winetricks handled FF3.  It seems
> all it does is download it and install it, no "tricks".  Do we want
> winetricks to become a generic application installer?  I thoughts its
> main purpose was to perform some non-obvious tricks to get difficult
> things to install.

I put things in there that I find myself installing often for testing purposes.
Firefox is one of those things.  Steven Edwards sent
me a patch about the time I was thinking of adding it, so
in it went.

I do have two other scripts for applications.
First,
http://kegel.com/wine/migrating-user-1.html
links to
http://kegel.com/wine/migrating-user-1.sh
which can install 14 random apps user #1 wanted.
Second,
http://code.google.com/p/winezeug/source/browse/trunk/codecdemo
is a little script that installs a media player and some
codecs (mostly using winetricks), and a bunch of demo videos.

Those aren't ever going into winetricks.  I only mention
this to show that I do have *some* sense of taste.
- Dan


From dank at kegel.com  Sun Jul  6 23:51:03 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 6 Jul 2008 21:51:03 -0700
Subject: Odd valgrind error in imm.c, possible fix
Message-ID: <a71bd89a0807062151s1eda9f2t88b81ee99895fbfa@mail.gmail.com>

Today a test got stuck, and I had to kill wineserver.
After that, lots of tests seem to have the same
error:

+ Invalid read of size 4
+    at  IMM_FreeThreadData (imm.c:233)
+    by  DllMain (imm.c:385)
+    by  __wine_spec_dll_entry (dll_entry.c:40)
+    by  (within /home/dank/wine-git/dlls/ntdll/ntdll.dll.so)
+    by  MODULE_InitDLL (loader.c:910)
+    by  process_detach (loader.c:1081)
+    by  LdrShutdownProcess (loader.c:2143)
+    by  ExitProcess (process.c:2101)
+    by  service_run_main_thread (service.c:604)
+    by  StartServiceCtrlDispatcherW (service.c:703)
+    by  wmain (device.c:287)
+  Address 0x0 is not stack'd, malloc'd or (recently) free'd

Presumably this is because killing wineserver also killed
the background notepad I run to keep from having
to valgrind wineboot etc. over and over again.
If the immediate cause is something like
imm32's DllMain getting called with DLL_PROCESS_DETACH
after being called with DLL_THREAD_DETACH, the following
patch might be a sensible fix.  Is it?

diff --git a/dlls/imm32/imm.c b/dlls/imm32/imm.c
index 94b7752..bcd11f1 100644
--- a/dlls/imm32/imm.c
+++ b/dlls/imm32/imm.c
@@ -230,10 +230,13 @@ static void IMM_InitThreadData(void)
 static void IMM_FreeThreadData(void)
 {
     IMMThreadData* data = TlsGetValue(tlsIndex);
-    IMM_DestroyContext(data->defaultContext);
-    DestroyWindow(data->hwndDefault);
-    HeapFree(GetProcessHeap(),0,data);
-    TRACE("Thread Data Destroyed\n");
+    if (data)
+    {
+        IMM_DestroyContext(data->defaultContext);
+        DestroyWindow(data->hwndDefault);
+        HeapFree(GetProcessHeap(),0,data);
+        TRACE("Thread Data Destroyed\n");
+    }
 }

 static HMODULE LoadDefaultWineIME(void)


From dank at kegel.com  Mon Jul  7 00:08:49 2008
From: dank at kegel.com (Dan Kegel)
Date: Sun, 6 Jul 2008 22:08:49 -0700
Subject: mlang/tests: don't assume output of ConvertStringFromUnicode is
	null terminated
In-Reply-To: <22821af30807061029h125b20d8s64013fdd0dcf0ae8@mail.gmail.com>
References: <a71bd89a0807060808s4588de4ap8dd732eb001e6c10@mail.gmail.com>
	<22821af30807061029h125b20d8s64013fdd0dcf0ae8@mail.gmail.com>
Message-ID: <a71bd89a0807062208v2502f610sdf582f4069dd18d5@mail.gmail.com>

On Sun, Jul 6, 2008 at 10:29 AM, James Hawkins <truiken at gmail.com> wrote:
> No, this is hiding a bug.  The test code conforms with the API.  The
> problem is that ConvertINetMultiByteToUnicode uses the value of an
> out-only parameter (NULL pDstStr, non-NULL pcDstSize).  Check out the
> code block in mlang.c:632.

Yeah, that's what I figured you thought, but your fix
doesn't actually get rid of the error message,
and the error is happening on
            *pcSrcSize = lstrlenA(pSrcStr);
in ConvertINetMultiByteToUnicode.

The conformance test shows on line 197 that
IMultiLanguage2_ConvertStringFromUnicode
doesn't null-terminate its output.  So it's wrong for
check_convertible to rely on it to do so.

Am I missing something?  I still believe in my patch...
- Dan


From jon_p_griffiths at yahoo.com  Sun Jul  6 10:15:59 2008
From: jon_p_griffiths at yahoo.com (Jon Griffiths)
Date: Sun, 6 Jul 2008 08:15:59 -0700 (PDT)
Subject: mswsock:Implement 3 functions by calling through
	SIO_GET_EXTENSION_FUNCTION_POINTER
In-Reply-To: <4870AE71.4050103@gmail.com>
Message-ID: <253518.24684.qm@web56612.mail.re3.yahoo.com>

Andrey,

Thanks for your comments. I've updated and re-sent the patch, please let me know if you see any problems with it.

I knocked up a quick test and you are correct, native ws2_32 does not allow a 0 handle in WSIoctl. I'll send a patch for that once this set is commited.

Cheers
Jon



      


From wine at mkarcher.dialup.fu-berlin.de  Mon Jul  7 03:08:21 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Mon, 07 Jul 2008 10:08:21 +0200
Subject: winedos: Support reading from VGA register 0x3ba
In-Reply-To: <483018.80281.qm@web56603.mail.re3.yahoo.com>
References: <483018.80281.qm@web56603.mail.re3.yahoo.com>
Message-ID: <1215418101.14103.13.camel@hermes2.karcher.local>

Am Sonntag, den 06.07.2008, 13:45 -0700 schrieb Jon Griffiths:
> Title says it all.
?> +        case 0x3ba:
> +            /* CRT status register (read only)
> +             * This register is read repeatedly to signal whether a hercules/
> +             * monochrome adapter is present, which is signalled by bit 7
> +             * changing within 0x8000 reads. The other bits then describe the
> +             * type of monochrome adapter present.
> +             */
> +            return 0; /* VGA compatible */

That patch seems wrong. As a VGA is able to coexist with a monochrome
adapter, it does not respond to reading 0x3ba at all. And ISA is TTL
compatible, i.e. open inputs read as one, so reads without responder
return 0xFF.

Regards,
  Michael Karcher



From amorozov at etersoft.ru  Mon Jul  7 03:10:17 2008
From: amorozov at etersoft.ru (Alexander Morozov)
Date: Mon, 7 Jul 2008 12:10:17 +0400
Subject: Support of USB hardware tokens
Message-ID: <200807071210.18234.amorozov@etersoft.ru>

Hello All,

I created a patch which adds support of USB hardware tokens with native 
Windows drivers (.sys):
ftp://ftp.etersoft.ru/pub/download/amorozov/0001-Support-of-native-Windows-drivers-for-USB-tokens.txt
Now SafeNet UltraPro (driver sntnlusb.sys, vid/pid 04b9:0300) and Eutron 
SmartKey 3 (driver eusk3usb.sys, vid/pid 073d:0025) are supported. These 
devices are used by some Windows applications for piracy defense.

This patch adds dlls/usbd.sys, dlls/wineusbhub and programs/wineusb. Usbd.sys 
is exist also in Windows. This is a kernel level DLL exporting some functions 
required for USB drivers. Wineusbhub plays a role of a lower driver in device 
stack (under USB token driver). Wineusb is a service calling driver`s 
AddDevice routine if there is a registry key corresponding to device and 
device is plugged. Now this check is executed only when wineusb is starting.

USB driver is loaded by programs/winedevice. Now AddDevice and some PNP 
functions are called in addition to DriverEntry. Calling DriverEntry is 
realized by means of wineserver requests. Some required ntoskrnl.exe 
functions are added.

For using native USB driver should copy 
HKLM\System\CurrentControlSet\Enum\USB\Vid_<vid>&Pid_<pid> and 
HKLM\System\CurrentControlSet\Services\<driver_name> from Windows registry. 
HKLM\System\CurrentControlSet\Services\<driver_name>\Start should be setted 
to 2.

I`d like to add this patch to Wine. What about this? I think should split my 
patch into many little commits. Should also add some tests or make some 
changes?

Thanks,
Alexander Morozov


From meissner at suse.de  Mon Jul  7 04:02:13 2008
From: meissner at suse.de (Marcus Meissner)
Date: Mon, 7 Jul 2008 11:02:13 +0200
Subject: Support of USB hardware tokens
In-Reply-To: <200807071210.18234.amorozov@etersoft.ru>
References: <200807071210.18234.amorozov@etersoft.ru>
Message-ID: <20080707090213.GA15421@suse.de>

On Mon, Jul 07, 2008 at 12:10:17PM +0400, Alexander Morozov wrote:
> Hello All,
> 
> I created a patch which adds support of USB hardware tokens with native 
> Windows drivers (.sys):
> ftp://ftp.etersoft.ru/pub/download/amorozov/0001-Support-of-native-Windows-drivers-for-USB-tokens.txt
> Now SafeNet UltraPro (driver sntnlusb.sys, vid/pid 04b9:0300) and Eutron 
> SmartKey 3 (driver eusk3usb.sys, vid/pid 073d:0025) are supported. These 
> devices are used by some Windows applications for piracy defense.
> 
> This patch adds dlls/usbd.sys, dlls/wineusbhub and programs/wineusb. Usbd.sys 
> is exist also in Windows. This is a kernel level DLL exporting some functions 
> required for USB drivers. Wineusbhub plays a role of a lower driver in device 
> stack (under USB token driver). Wineusb is a service calling driver`s 
> AddDevice routine if there is a registry key corresponding to device and 
> device is plugged. Now this check is executed only when wineusb is starting.
> 
> USB driver is loaded by programs/winedevice. Now AddDevice and some PNP 
> functions are called in addition to DriverEntry. Calling DriverEntry is 
> realized by means of wineserver requests. Some required ntoskrnl.exe 
> functions are added.
> 
> For using native USB driver should copy 
> HKLM\System\CurrentControlSet\Enum\USB\Vid_<vid>&Pid_<pid> and 
> HKLM\System\CurrentControlSet\Services\<driver_name> from Windows registry. 
> HKLM\System\CurrentControlSet\Services\<driver_name>\Start should be setted 
> to 2.
> 
> I`d like to add this patch to Wine. What about this? I think should split my 
> patch into many little commits. Should also add some tests or make some 
> changes?

Split it at least into the sub driver/dll parts.

You can leave out the "configure" part, it will be regenerated form configure.
ac anyway. Same for dlls/Makefile.in

The ntoskrnl changes might break the already working copy protection drivers,
so either try them yourself after the patch or ask someone to try them.
The ntoskrnl changes are also so large that you split them into parts, like
perhaps:
	- stubs
	- header file changes / additions
	- new implementation functions
	- hook those functions into current framework (if the two steps
	  are seperable)

Ciao, Marcus


From julliard at winehq.org  Mon Jul  7 04:39:06 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 07 Jul 2008 11:39:06 +0200
Subject: quartz: Fix deadlock with transform filter
In-Reply-To: <b130c85e0807041703l23fbf6d5td94dc640ee0b8cca@mail.gmail.com>
	(Maarten Lankhorst's message of "Fri, 4 Jul 2008 17:03:21 -0700")
References: <b130c85e0807041703l23fbf6d5td94dc640ee0b8cca@mail.gmail.com>
Message-ID: <87ej66t4n9.fsf@wine.dyndns.org>

"Maarten Lankhorst" <m.b.lankhorst at gmail.com> writes:

> diff --git a/dlls/quartz/acmwrapper.c b/dlls/quartz/acmwrapper.c
> index d877930..22bfb87 100644
> --- a/dlls/quartz/acmwrapper.c
> +++ b/dlls/quartz/acmwrapper.c
> @@ -186,7 +186,9 @@ static HRESULT ACMWrapper_ProcessSampleData(TransformFilterImpl* pTransformFilte
>          }
>          TRACE("Sample stop time: %u.%03u\n", (DWORD)(tStart/10000000), (DWORD)((tStart/10000)%1000));
>  
> +        LeaveCriticalSection(&This->tf.csFilter);
>          hr = OutputPin_SendSample((OutputPin*)This->tf.ppPins[1], pOutSample);
> +        EnterCriticalSection(&This->tf.csFilter);

This looks very wrong this the lock wasn't grabbed by this function, it
will violate expectations of the caller. It looks like the locking
strategy needs some more thought.

-- 
Alexandre Julliard
julliard at winehq.org


From ono at java.pl  Mon Jul  7 04:41:52 2008
From: ono at java.pl (Adam Strzelecki)
Date: Mon, 7 Jul 2008 11:41:52 +0200
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <486EF6C0.20109@codeweavers.com>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>	<200803021850.04583.stefan@codeweavers.com>	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>	<D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
	<486E996F.5000907@sprintpcs.com> <486EF6C0.20109@codeweavers.com>
Message-ID: <5963B75B-F12E-41CE-AC48-0D3256390CC1@java.pl>

> We are very interested in Wine having a more native OS X interface.
> However, our analysis is that the task is difficult and will require a
> long time to stabilize and get right.  I am excited by and  
> interested in
> Emmanuel's work, but I am told not to be too excited, that it's not
> a magic bullet, and that the bulk of the hard work is still ahead.

But it is fairy complete, since a long while. It lays in the front of  
your eyes so why don't put it into the Wine's repository, as it is the  
most obvious way for the others to polish and stabilize it.

> We have a long history of hiring proven Wine developers and thereby  
> sponsoring
> their work.  We do that as much as our income will allow, gated by  
> peoples
> ability and willingness to work with us.

Look, I don't think you need to hire anybody. There're numerous  
talented developers as Emmanuel or Mike that did great Wine packaging  
at kronenberg.org that would help to put all the code together. I  
shouldn't speak for them, but just note that both of them do all their  
work already for free.
I'm willing to help too, I'd be happy if I could send some patches  
improving Mac support.

> To answer the seemingly implied question: "Are we deliberately  
> crippling Wine for Mac OS X
> to serve our own nefarious ends", the answer is no.  That's in no  
> small part because our main
> nefarious end is to improve Wine :-).

Very well, my previous mail was intentionally perversive just to cheer  
up everybody for Mac discussion.

> Did we make a decision to focus on an X11 based solution for Mac OS  
> X?  Yes,
> for the time being.  The advantages are that it's here now, works  
> now, and that most
> of what we do now also benefits Linux and other platforms.  The  
> disadvantage, apparently,
> is that people suspect us of all kinds of nefarious plots...

Well it would be me then :) So why just not put Emmanuel's work into  
Wine repository, while there're lot of other incomplete modules. Let's  
give it a chance.

> And, on a final note, just so its clear:  the contract between  
> CodeWeavers and Alexandre
> is very explicit:  CodeWeavers gets *no* say in what does or does  
> not go into Wine. We probably curse his decisions as much or more  
> than any Wine developer, and whether or not Objective C
(...)
> The point is that CodeWeavers has no control over whether or not  
> Emmanuel's code goes into Wine.  That's entirely Alexandre's decision.

OK, I'm sorry. I don't want to accuse anybody, I just made a false  
equation between Alexandre and CodeWeavers taken from About Us page.
It was just said once that winequartz.drv won't go into official Wine,  
and the top reason was Objective-C and this was just a bizarre  
decision for me. Objective-C is almost as old as C++ and it was just  
chosen for an object model of OSX (NextStep previously) in opposition  
to pure C messaging of Windows and C++ for COM interfaces, etc. So  
IMHO no for Objective-C means no for decent Mac OSX support, period.

Best regards and thank you all for your replies,
-- 
Adam Strzelecki |: nanoant.com :|



From amorozov at etersoft.ru  Mon Jul  7 05:10:47 2008
From: amorozov at etersoft.ru (Alexander Morozov)
Date: Mon, 7 Jul 2008 14:10:47 +0400
Subject: Support of USB hardware tokens
In-Reply-To: <20080707090213.GA15421@suse.de>
References: <200807071210.18234.amorozov@etersoft.ru>
	<20080707090213.GA15421@suse.de>
Message-ID: <200807071410.48905.amorozov@etersoft.ru>

> Split it at least into the sub driver/dll parts.
>
> You can leave out the "configure" part, it will be regenerated form
> configure. ac anyway. Same for dlls/Makefile.in
>
> The ntoskrnl changes might break the already working copy protection
> drivers, so either try them yourself after the patch or ask someone to try
> them. The ntoskrnl changes are also so large that you split them into
> parts, like perhaps:
> 	- stubs
> 	- header file changes / additions
> 	- new implementation functions
> 	- hook those functions into current framework (if the two steps
> 	  are seperable)
>
> Ciao, Marcus

Thank you for your answer.

As I understand, working copy protection drivers are listed here:
http://wiki.winehq.org/CopyProtection?highlight=%28copy%29%7C%28protection%29
Can someone test theirs after applying my patch?


From dank at kegel.com  Mon Jul  7 06:29:19 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 7 Jul 2008 04:29:19 -0700
Subject: winedos: Support reading from VGA register 0x3ba
Message-ID: <a71bd89a0807070429p6b360f74u94f1c48d0bb52722@mail.gmail.com>

> Title says it all.

Not *quite* all.  Inquiring minds always want to know what
app it will help and/or bugzilla entry it will fix.

Codeweavers folks often don't mention that for
business reasons, but if you're at liberty to mention it,
it's always nice to include that in patch descriptions.


From julliard at winehq.org  Mon Jul  7 06:30:00 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 07 Jul 2008 13:30:00 +0200
Subject: [PATCH 2/4] widl: Write out calls to freeing functions for return
	types on the server in generated code.
In-Reply-To: <1096648c0807041553t393e2a7fg1b5ffef29523c07b@mail.gmail.com>
	(Rob Shearman's message of "Fri, 4 Jul 2008 23:53:07 +0100")
References: <1096648c0807041553t393e2a7fg1b5ffef29523c07b@mail.gmail.com>
Message-ID: <87abguszif.fsf@wine.dyndns.org>

"Rob Shearman" <robertshearman at gmail.com> writes:

>  tools/widl/proxy.c  |    3 +++
>  tools/widl/server.c |    3 +++
>  2 files changed, 6 insertions(+), 0 deletions(-)

This one doesn't work:

../../../tools/runtest -q -P wine -M rpcrt4.dll -T ../../.. -p rpcrt4_test.exe.so server.c && touch server.ok
err:rpc:I_RpcReceive we got fault packet with status 0x3e6
wine: Unhandled exception 0x000003e6 at address 0x7b8449a0 (thread 001a), starting debugger...
Unhandled exception: 0x000003e6 in 32-bit code (0x7b844a16).
Register dump:
 CS:0023 SS:002b DS:002b ES:002b FS:0063 GS:006b
 EIP:7b844a16 ESP:0033f9f4 EBP:0033fa58 EFLAGS:00000246(   - 00      - IZP1)
 EAX:7b82eb79 EBX:7b8b30e8 ECX:00110048 EDX:00000000
 ESI:0033fac4 EDI:00000000
Stack dump:
0x0033f9f4:  00000000 0011fa30 0033fa20 608b0dd4
0x0033fa04:  000003e6 00000000 00000000 7b8449a0
0x0033fa14:  00000000 608abe79 608abd5c 000003e6
0x0033fa24:  0011f840 00000000 608a2567 00110000
0x0033fa34:  00000000 0011fa30 608b0dd4 00000000
0x0033fa44:  0033fba0 0033fa78 60899ea8 0033fba0
Backtrace:
=>1 0x7b844a16 RaiseException+0x76(code=0x3e6, flags=0x0, nbargs=0x0, args=0x0) [/home/julliard/wine/wine/dlls/kernel32/except.c:85] in kernel32 (0x0033fa58)
  2 0x608a2e75 RpcRaiseException+0x35(exception=0x3e6) [/home/julliard/wine/wine/dlls/rpcrt4/rpcrt4_main.c:184] in rpcrt4 (0x0033fa78)
  3 0x60874e30 NdrFreeBuffer(pStubMsg=0x1) [/home/julliard/wine/wine/dlls/rpcrt4/ndr_clientserver.c:184] in rpcrt4 (0x0033faa8)
  4 0x6055ecab get_filename+0x7b() [/home/julliard/wine/wine/dlls/rpcrt4/tests/server_c.c:4198] in rpcrt4_test (0x0033fbd8)
  5 0x6055c2e1 basic_tests+0xb41() [/home/julliard/wine/wine/dlls/rpcrt4/tests/server.c:850] in rpcrt4_test (0x0033fd58)
  6 0x6055cf5d run_tests+0x1d() [/home/julliard/wine/wine/dlls/rpcrt4/tests/server.c:865] in rpcrt4_test (0x0033fe08)
  7 0x6055dfd6 func_server+0x586() [/home/julliard/wine/wine/dlls/rpcrt4/tests/server.c:1262] in rpcrt4_test (0x0033fe68)
  8 0x6056b0f0 run_test+0x130(name=0x110403) [/home/julliard/wine/wine/dlls/rpcrt4/tests/../../../include/wine/test.h:451] in rpcrt4_test (0x0033fea8)
  9 0x6056b2f3 main+0x133(argc=<register ECX not in topmost frame>, argv=<register ECX not in topmost frame>) [/home/julliard/wine/wine/dlls/rpcrt4/tests/../../../include/wine/test.h:499] in rpcrt4_test (0x0033fed8)
  10 0x6056ba7b __wine_spec_exe_entry+0x5b(peb=0x7ffdf000) [/home/julliard/wine/wine/dlls/winecrt0/exe_entry.c:36] in rpcrt4_test (0x0033ff08)
  11 0x7b876d47 start_process+0xc7(arg=0x0) [/home/julliard/wine/wine/dlls/kernel32/process.c:904] in kernel32 (0x0033ffe8)
  12 0x600289c7 wine_switch_to_stack+0x17() in libwine.so.1 (0x00000000)
0x7b844a16 RaiseException+0x76 [/home/julliard/wine/wine/dlls/kernel32/except.c:85] in kernel32: movl	0xfffffffc(%ebp),%ebx

-- 
Alexandre Julliard
julliard at winehq.org


From dank at kegel.com  Mon Jul  7 06:42:30 2008
From: dank at kegel.com (Dan Kegel)
Date: Mon, 7 Jul 2008 04:42:30 -0700
Subject: Support of USB hardware tokens
Message-ID: <a71bd89a0807070442p3bd7ea3x463aaf3810a006a1@mail.gmail.com>

>  I think should split my patch into many little commits.
> Should also add some tests or make some changes?

Yes, add conformance tests for the new ntoskrnl functions
and usbd.sys, and break the patch up a lot...

Looks like people have been hoping for something like
this for a couple years now, e.g.
http://www.winehq.org/pipermail/wine-devel/2005-November/042357.html


From julliard at winehq.org  Mon Jul  7 07:21:53 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 07 Jul 2008 14:21:53 +0200
Subject: [PATCH 1/4] widl: Optimise the generated code by skipping calls
	calling the type function directly for some reference pointers.
In-Reply-To: <1096648c0807041552r638a31abr74a895ffab59a14f@mail.gmail.com>
	(Rob Shearman's message of "Fri, 4 Jul 2008 23:52:56 +0100")
References: <1096648c0807041552r638a31abr74a895ffab59a14f@mail.gmail.com>
Message-ID: <8763rhuboe.fsf@wine.dyndns.org>

"Rob Shearman" <robertshearman at gmail.com> writes:

> Skip calling the Pointer marshalling/unmarshalling/buffer
> sizing/freeing function in this case.

This one doesn't work either:

../../../tools/runtest -q -P wine -M qmgr.dll -T ../../.. -p qmgr_test.exe.so file.c && touch file.ok
fixme:qmgr:BITS_IBackgroundCopyJob_AddFile Check for valid filenames and supported protocols
file.c:127: Test failed: Got incorrect remote name
wine: Unhandled page fault on read access to 0x89fffffe at address 0x60540d3a (thread 0025), starting debugger...
Unhandled exception: page fault on read access to 0x89fffffe in 32-bit code (0x60540d3a).
Register dump:
 CS:0023 SS:002b DS:002b ES:002b FS:0063 GS:006b
 EIP:60540d3a ESP:0032fe00 EBP:0032fe68 EFLAGS:00010202(   - 00      - -RI1)
 EAX:89fffffe EBX:60b5edd4 ECX:c000000d EDX:00000000
 ESI:7ffbc000 EDI:00320000
Stack dump:
0x0032fe00:  00122c4c 00000001 60546b54 00000000
0x0032fe10:  60546b48 00000003 605441ac 60546720
0x0032fe20:  605441a2 60546b48 60545398 60545378
0x0032fe30:  0032fe58 60546084 60546b4c 7b876ba4
0x0032fe40:  7bca34cc 00000001 71670f10 11dd4c1e
0x0032fe50:  1a00835a cb923592 00000039 6054621c
Backtrace:
=>1 0x60540d3a func_file+0x27a() [/home/julliard/wine/wine/dlls/qmgr/tests/file.c:108] in qmgr_test (0x0032fe68)
  2 0x6054328a run_test+0x14a(name=0x1103e5) [/home/julliard/wine/wine/dlls/qmgr/tests/../../../include/wine/test.h:451] in qmgr_test (0x0032fea8)
  3 0x60543ae2 main+0x142(argc=<register ECX not in topmost frame>, argv=0x1103c8) [/home/julliard/wine/wine/dlls/qmgr/tests/../../../include/wine/test.h:499] in qmgr_test (0x0032fed8)
  4 0x60543bbb __wine_spec_exe_entry+0x5b(peb=0x7ffdf000) [/home/julliard/wine/wine/dlls/winecrt0/exe_entry.c:36] in qmgr_test (0x0032ff08)
  5 0x7b876d47 start_process+0xc7(arg=0x0) [/home/julliard/wine/wine/dlls/kernel32/process.c:904] in kernel32 (0x0032ffe8)
  6 0x600289c7 wine_switch_to_stack+0x17() in libwine.so.1 (0x00000000)
0x60540d3a func_file+0x27a [/home/julliard/wine/wine/dlls/qmgr/tests/file.c:108] in qmgr_test: movl	0x0(%eax),%edx
108	    IBackgroundCopyFile_Release(test_file);

-- 
Alexandre Julliard
julliard at winehq.org


From robertshearman at gmail.com  Mon Jul  7 08:14:28 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Mon, 7 Jul 2008 14:14:28 +0100
Subject: [PATCH 2/4] widl: Write out calls to freeing functions for return
	types on the server in generated code.
In-Reply-To: <87abguszif.fsf@wine.dyndns.org>
References: <1096648c0807041553t393e2a7fg1b5ffef29523c07b@mail.gmail.com>
	<87abguszif.fsf@wine.dyndns.org>
Message-ID: <1096648c0807070614j15dec023vc80005e501480d5b@mail.gmail.com>

2008/7/7 Alexandre Julliard <julliard at winehq.org>:
> "Rob Shearman" <robertshearman at gmail.com> writes:
>
>>  tools/widl/proxy.c  |    3 +++
>>  tools/widl/server.c |    3 +++
>>  2 files changed, 6 insertions(+), 0 deletions(-)
>
> This one doesn't work:
>
> ../../../tools/runtest -q -P wine -M rpcrt4.dll -T ../../.. -p rpcrt4_test.exe.so server.c && touch server.ok
> err:rpc:I_RpcReceive we got fault packet with status 0x3e6
> wine: Unhandled exception 0x000003e6 at address 0x7b8449a0 (thread 001a), starting debugger...
> Unhandled exception: 0x000003e6 in 32-bit code (0x7b844a16).
...

Ok, sorry about that. I guess the generated code is now too aggressive
at freeing memory.

-- 
Rob Shearman


From wine at mkarcher.dialup.fu-berlin.de  Mon Jul  7 10:21:46 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Mon, 07 Jul 2008 17:21:46 +0200
Subject: [1/2] Retyped find_in_cache's transformation matrix parameter.
In-Reply-To: <1215443868.26949.0.camel@hermes2.karcher.local>
References: <1215443868.26949.0.camel@hermes2.karcher.local>
Message-ID: <1215444106.26949.4.camel@hermes2.karcher.local>

Am Montag, den 07.07.2008, 17:17 +0200 schrieb Michael Karcher:

Sorry for commentless resending. I am too stupid to notice that July had
begun and considered the mail lost as it didn't appear in June's
archive. Still I wonder why the patch (series) didn't make it in. Any
feedback?

Regards,
  Michael Karcher



From stefan at codeweavers.com  Mon Jul  7 11:26:23 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Mon, 7 Jul 2008 11:26:23 -0500
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807070900q28ad1db3y4fa3a9953c0b5835@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>	
	<6fc03d800807061523x1c6911cdt31bdf43748649eab@mail.gmail.com>	
	<1215384838.14103.9.camel@hermes2.karcher.local>	
	<6fc03d800807061628w667303d8nfe3e6b37c3153b16@mail.gmail.com>	
	<000001c8dfd7$1e328850$5a9798f0$@com>	
	<6fc03d800807061937l546fcf84kc0c22bfb78f9d5e9@mail.gmail.com>	
	<000e01c8dfde$20390280$60ab0780$@com>
	<6fc03d800807070900q28ad1db3y4fa3a9953c0b5835@mail.gmail.com>
Message-ID: <003901c8e04e$326e75f0$974b61d0$@com>

Actually you want something like

retval WINAPI wine_cudaSomething(int a, int etc)

so instead of the void use the return value the function is supposed to
return

 

WINAPI tells the compiler about the calling convention(ie, first parameter
on the stack, in ecx, or elsewhere, who takes care about cleaning up the
stack, etc). You'll have to check the calling convention Win32 cuda uses,
but most likely WINAPI is correct. You don't have to care about the Linux
cuda calling convention, since the compiler knows about that from the Linux
cuda headers

 

I am also not quite sure about some constructs, like

"wine_cudaBindTexture( size_t* offset, const struct texture < T, dim,
readMode >& texRef, const void* devPtr, const struct cudaChannelFormatDesc&
desc, size_t size = UINT_MAX )" As far as I know this contains C++ or
Microsoft syntax, which is not valid in pure C.

 

 

From: Seth Shelnutt [mailto:shelnutt2 at gmail.com] 
Sent: Monday, July 07, 2008 11:01 AM
To: Stefan D?singer
Cc: wine-devel at winehq.org
Subject: Re: CUDA wrapper

 


I've attached my spec file and my .c file along with the two header files
from the nvidia toolkit. I am pretty sure in the .c file I was not suppose
to use the "WINAPI" but instead I need "FancyCudaReturnValue" but I don't
know what that is. Needless to say after using "winemaker cuda" (I have it
in a folder called cuda), it doesn't compile and I get a million and one
errors. I'm sure these errors are more or less caused because I didn't quite
get it right. If you could just look at it and give me some pointers on
where and how I went wrong, it would be appreciated. You've been a big help
so far. Thank you for the explanations in the last email it got me this far
so far.


-Seth Shelnutt

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080707/93d532ec/attachment.htm 

From truiken at gmail.com  Mon Jul  7 11:30:17 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 7 Jul 2008 11:30:17 -0500
Subject: [RESEND]MSI:ACTION_AppSearchReg() should return backslash
	terminated paths - Solves bug 13838
In-Reply-To: <48723086.6020001@veneto.com>
References: <48723086.6020001@veneto.com>
Message-ID: <22821af30807070930g29a62156g3fe054cc7019f205@mail.gmail.com>

On Mon, Jul 7, 2008 at 10:04 AM, Massimo Del Fedele <max at veneto.com> wrote:
> I'll repost that one... I'd like some feedback if it looks wrong.
>

This isn't going to be committed without a test.

> To maintain consistence between global MSI path properties (as
> CommonAppDataFolder) which are returned with a trailing backslash, and
> local MSI path properties (as LOCALAPPDATAFOLDER) which by now where
> returned without the trailing backslash.

Properties in MSI are just that...properties.  Folders loaded from the
Folder table just happen to be stored as properties.  The AppSearch
action looks for a path (in this case) and sets a user-defined
property to the path of the directory.  You're making a connection
between these two completely separated sets of functionality that
doesn't exist.

> This solves autocad's installer bug 13838.
>

Ok, we've had tons of patches submitted, some committed, that fix one
app and break tons of other apps.  This is exactly why this has to be
backed up by a test.

I'll review your patch for you anyway:

@@ -368,6 +368,17 @@ static UINT ACTION_AppSearchReg(MSIPACKAGE
*package, LPWSTR *appValue, MSISIGNAT
     switch (type & 0x0f)
     {
     case msidbLocatorTypeDirectory:
+	/* directories should be returned with a trailing backslash
+           so check for it and append if necessary */

Leave the comment out.

+        if((LPWSTR)value[sz-1] != L'\\')
+        {

Two things wrong.  That first part is casting the result of
value[sz-1], which is a BYTE (integer), to LPWSTR (pointer).  Second,
you can't use L in Wine.

+            *appValue = (LPWSTR)value;
+            value = msi_alloc(sz+1);

You forgot to check if you're out of memory.

+            lstrcpyW((LPWSTR)value, *appValue);
+            lstrcatW(value, L"\\");

Again, can't use L in Wine.

+            msi_free(*appValue);
+            *appValue = NULL;
+        }
         rc = ACTION_SearchDirectory(package, sig, (LPWSTR)value, 0, appValue);
         break;
     case msidbLocatorTypeFileName:

Now let's look at the whole thing:

            *appValue = (LPWSTR)value;
            value = msi_alloc(sz+1);
            lstrcpyW((LPWSTR)value, *appValue);
            lstrcatW(value, L"\\");
            msi_free(*appValue);
            *appValue = NULL;

You're using *appValue as a temporary pointer, which is ugly.
msi_realloc is your friend.

Check out the warnings you get when you compile this, which is the
first sign that something is wrong:

appsearch.c: In function 'ACTION_AppSearchReg':
appsearch.c:373: warning: cast to pointer from integer of different size
appsearch.c:373: warning: comparison between pointer and integer
appsearch.c:378: warning: passing argument 1 of 'lstrcatW' from
incompatible pointer type
appsearch.c:378: warning: passing argument 2 of 'lstrcatW' from
incompatible pointer type

Taking one more step back:

@@ -368,6 +368,17 @@ static UINT ACTION_AppSearchReg(MSIPACKAGE
*package, LPWSTR *appValue, MSISIGNAT
     switch (type & 0x0f)
     {
     case msidbLocatorTypeDirectory:
+	/* directories should be returned with a trailing backslash
+           so check for it and append if necessary */

So this 'fix' is only for ACTION_AppSearchReg.  What about all the
other AppSearch functionalities that also search for a directory?
Those will remain unfixed.  Also, why are you making it the
responsibility of AppSearchReg to add the backslash?  You're assuming
that ACTION_SearchDirectory never changes the value sent in and only
copies it straight back if it finds the path.  That's a bad
assumption.  Plus, if you fix this at the lowest level, you get a fix
for all the AppSearch functionalities for free.

-- 
James Hawkins


From shelnutt2 at gmail.com  Mon Jul  7 12:09:58 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Mon, 7 Jul 2008 13:09:58 -0400
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807070959y28b71fbapa0d77469c907828a@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<6fc03d800807061523x1c6911cdt31bdf43748649eab@mail.gmail.com>
	<1215384838.14103.9.camel@hermes2.karcher.local>
	<6fc03d800807061628w667303d8nfe3e6b37c3153b16@mail.gmail.com>
	<000001c8dfd7$1e328850$5a9798f0$@com>
	<6fc03d800807061937l546fcf84kc0c22bfb78f9d5e9@mail.gmail.com>
	<000e01c8dfde$20390280$60ab0780$@com>
	<6fc03d800807070900q28ad1db3y4fa3a9953c0b5835@mail.gmail.com>
	<003901c8e04e$326e75f0$974b61d0$@com>
	<6fc03d800807070959y28b71fbapa0d77469c907828a@mail.gmail.com>
Message-ID: <6fc03d800807071009o334d653k38fd88ee3ef16a4f@mail.gmail.com>

The compiler chokes on the C++ coding that you pointed out. I'm not sure
exactly how to handle it, maybe just convert it all to c syntax? For now
I'll just commit out those lines and just work on trying to get something to
compile.

Now are you saying the code should be,
retval, WINAPI wine_cudaGetDeviceCount( int* count ){
    return cudaGetDeviceCount( count );
}

or should it be

retval, WINAPI wine_cudaGetDeviceCount( int* count )

or

retval = WINAPI wine_cudaGetDeviceCount( int* count ){
    return cudaGetDeviceCount( retval );
}

I've never used retval and going off of
http://www.systhread.net/texts/200612retval.php , it seems that retval is as
simple as returning the value from a function, so I set the input to equal
retval then I can return the function ( retval) and it will have all the
values right? Maybe I am miss understanding it.


On Mon, Jul 7, 2008 at 12:26 PM, Stefan D?singer <stefan at codeweavers.com>
wrote:

>  Actually you want something like
>
> retval WINAPI wine_cudaSomething(int a, int etc)
>
> so instead of the void use the return value the function is supposed to
> return
>
>
>
> WINAPI tells the compiler about the calling convention(ie, first parameter
> on the stack, in ecx, or elsewhere, who takes care about cleaning up the
> stack, etc). You'll have to check the calling convention Win32 cuda uses,
> but most likely WINAPI is correct. You don't have to care about the Linux
> cuda calling convention, since the compiler knows about that from the Linux
> cuda headers
>
>
>
> I am also not quite sure about some constructs, like
>
> "wine_cudaBindTexture( size_t* offset, const struct texture < T, dim,
> readMode >& texRef, const void* devPtr, const struct cudaChannelFormatDesc&
> desc, size_t size = UINT_MAX )" As far as I know this contains C++ or
> Microsoft syntax, which is not valid in pure C.
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080707/00cba64e/attachment.htm 

From juan.lang at gmail.com  Mon Jul  7 12:17:25 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 7 Jul 2008 10:17:25 -0700
Subject: CUDA wrapper
In-Reply-To: <003901c8e04e$326e75f0$974b61d0$@com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<6fc03d800807061523x1c6911cdt31bdf43748649eab@mail.gmail.com>
	<1215384838.14103.9.camel@hermes2.karcher.local>
	<6fc03d800807061628w667303d8nfe3e6b37c3153b16@mail.gmail.com>
	<000001c8dfd7$1e328850$5a9798f0$@com>
	<6fc03d800807061937l546fcf84kc0c22bfb78f9d5e9@mail.gmail.com>
	<000e01c8dfde$20390280$60ab0780$@com>
	<6fc03d800807070900q28ad1db3y4fa3a9953c0b5835@mail.gmail.com>
	<003901c8e04e$326e75f0$974b61d0$@com>
Message-ID: <3a768c550807071017t7b86864dle6e125283d850636@mail.gmail.com>

> I am also not quite sure about some constructs, like
>
> "wine_cudaBindTexture( size_t* offset, const struct texture < T, dim,
> readMode >& texRef, const void* devPtr, const struct cudaChannelFormatDesc&
> desc, size_t size = UINT_MAX )" As far as I know this contains C++ or
> Microsoft syntax, which is not valid in pure C.

Correct, this is C++.  If you're wondering about the const reference,
that's only valid in C++.  If there is such a declaration as part of
the CUDA API, then it's only accessible from C++ callers, and your
implementation must be in C++.

If you're wondering about the default value for size, that's also C++.
 Default values are only valid in a function declaration, not in a
function definition.  Therefore I think you can just omit them from
your own implementation.
--Juan


From juan.lang at gmail.com  Mon Jul  7 12:21:28 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 7 Jul 2008 10:21:28 -0700
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807071009o334d653k38fd88ee3ef16a4f@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<1215384838.14103.9.camel@hermes2.karcher.local>
	<6fc03d800807061628w667303d8nfe3e6b37c3153b16@mail.gmail.com>
	<000001c8dfd7$1e328850$5a9798f0$@com>
	<6fc03d800807061937l546fcf84kc0c22bfb78f9d5e9@mail.gmail.com>
	<000e01c8dfde$20390280$60ab0780$@com>
	<6fc03d800807070900q28ad1db3y4fa3a9953c0b5835@mail.gmail.com>
	<003901c8e04e$326e75f0$974b61d0$@com>
	<6fc03d800807070959y28b71fbapa0d77469c907828a@mail.gmail.com>
	<6fc03d800807071009o334d653k38fd88ee3ef16a4f@mail.gmail.com>
Message-ID: <3a768c550807071021i1c340bb1p5f228026b1fcc03b@mail.gmail.com>

Hi Seth,

> Now are you saying the code should be,
> retval, WINAPI wine_cudaGetDeviceCount( int* count ){
>     return cudaGetDeviceCount( count );
> }
>
> or should it be
>
> retval, WINAPI wine_cudaGetDeviceCount( int* count )
>
> or
>
> retval = WINAPI wine_cudaGetDeviceCount( int* count ){
>     return cudaGetDeviceCount( retval );
> }

None of the above.  retval was just a standin for a type declaration.
I don't know what the proper return type is, but Google does:  it's
cudaError_t.  So the proper declaration is likely to be:

cudaError_t WINAPI wine_cudaGetDeviceCount(int *count) {
    return cudaGetDeviceCount(count);
}

--Juan


From truiken at gmail.com  Mon Jul  7 12:49:52 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 7 Jul 2008 12:49:52 -0500
Subject: [dxdiagn] [resend] Implemented szDeviceIdentifier property in
	dxdiagn dll
In-Reply-To: <200807071946.04168.kde@graph-ix.net>
References: <200807071946.04168.kde@graph-ix.net>
Message-ID: <22821af30807071049s4df6ac71jda770c68e7ccc6c1@mail.gmail.com>

On Mon, Jul 7, 2008 at 12:46 PM, Markus <kde at graph-ix.net> wrote:
> If d3d9 could not be properly initialized, the value 'n/a' is set. This
> behavior has been verified against the native dxdiagn.dll. The
> corresponding testcase will follow once I have time.
>

You forgot the patch.

-- 
James Hawkins


From m.b.lankhorst at gmail.com  Mon Jul  7 13:25:35 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Mon, 7 Jul 2008 11:25:35 -0700
Subject: quartz: Fix deadlock with transform filter
In-Reply-To: <87ej66t4n9.fsf@wine.dyndns.org>
References: <b130c85e0807041703l23fbf6d5td94dc640ee0b8cca@mail.gmail.com>
	<87ej66t4n9.fsf@wine.dyndns.org>
Message-ID: <b130c85e0807071125w56cec95bif2f378fb78666bc9@mail.gmail.com>

Hi Alexandre,

2008/7/7 Alexandre Julliard <julliard at winehq.org>:
> "Maarten Lankhorst" <m.b.lankhorst at gmail.com> writes:
>
>> diff --git a/dlls/quartz/acmwrapper.c b/dlls/quartz/acmwrapper.c
>> index d877930..22bfb87 100644
>> --- a/dlls/quartz/acmwrapper.c
>> +++ b/dlls/quartz/acmwrapper.c
>> @@ -186,7 +186,9 @@ static HRESULT ACMWrapper_ProcessSampleData(TransformFilterImpl* pTransformFilte
>>          }
>>          TRACE("Sample stop time: %u.%03u\n", (DWORD)(tStart/10000000), (DWORD)((tStart/10000)%1000));
>>
>> +        LeaveCriticalSection(&This->tf.csFilter);
>>          hr = OutputPin_SendSample((OutputPin*)This->tf.ppPins[1], pOutSample);
>> +        EnterCriticalSection(&This->tf.csFilter);
>
> This looks very wrong this the lock wasn't grabbed by this function, it
> will violate expectations of the caller. It looks like the locking
> strategy needs some more thought.
 If you look at
It won't violate the locking rules, since this is the way it is
designed. If you look at OutputPin_SendSample, you will see it takes
the critical section to obtain whether the pin is connected to
something, and if it is, it will send the data further. It does a
great job of doing it safely, by obtaining all data under lock and
adding a reference so that it can't die while receiving. The data is
received by the receiving pin which takes a lock while processing the
data, so the code is thread-safe.

Cheers,
Maarten.


From julliard at winehq.org  Mon Jul  7 13:34:27 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Mon, 07 Jul 2008 20:34:27 +0200
Subject: quartz: Fix deadlock with transform filter
In-Reply-To: <b130c85e0807071125w56cec95bif2f378fb78666bc9@mail.gmail.com>
	(Maarten Lankhorst's message of "Mon, 7 Jul 2008 11:25:35 -0700")
References: <b130c85e0807041703l23fbf6d5td94dc640ee0b8cca@mail.gmail.com>
	<87ej66t4n9.fsf@wine.dyndns.org>
	<b130c85e0807071125w56cec95bif2f378fb78666bc9@mail.gmail.com>
Message-ID: <87hcb1sfv0.fsf@wine.dyndns.org>

"Maarten Lankhorst" <m.b.lankhorst at gmail.com> writes:

> It won't violate the locking rules, since this is the way it is
> designed. If you look at OutputPin_SendSample, you will see it takes
> the critical section to obtain whether the pin is connected to
> something, and if it is, it will send the data further. It does a
> great job of doing it safely, by obtaining all data under lock and
> adding a reference so that it can't die while receiving. The data is
> received by the receiving pin which takes a lock while processing the
> data, so the code is thread-safe.

I'm not saying it's not thread-safe, I'm saying it's wrong to release a
lock obtained by a caller. When you read the caller's code and you see
an Enter/Leave pair you expect that the lock is held all along, you
can't have inferior functions release it. The code needs to be
restructured so that Enter/Leave are properly matched.

-- 
Alexandre Julliard
julliard at winehq.org


From dtremenak at gmail.com  Mon Jul  7 13:38:56 2008
From: dtremenak at gmail.com (Daniel Remenak)
Date: Mon, 7 Jul 2008 11:38:56 -0700
Subject: [PATCH 2/5] dinput: Stop and unload effect when freeing it.
In-Reply-To: <4870490B.7050808@kievinfo.com>
References: <4870490B.7050808@kievinfo.com>
Message-ID: <d30ad4e0807071138l3ee6436ey27458b02c5cae590@mail.gmail.com>

On Sat, Jul 5, 2008 at 9:24 PM, Vitaliy Margolen
<wine-patches at kievinfo.com> wrote:
<snip>
> +        LinuxInputEffectImpl_Stop(iface);
> +        LinuxInputEffectImpl_Unload(iface);
<snip>

Vitaliy,

Native behavior is for Unload to stop the effect also (see msdn or
test it yourself), so the call to Stop here is unnecessary.  If the
call to Stop is required, it must be done in Unload, not Release, as
it's not unusual to unload an effect without releasing it when a game
has a large number of available effect instances.

It is my understanding that no explicit call to Stop is needed, either
in Release or Unload, as evdev has the same behavior documented (see
section 3.3 of ff.txt in the kernel docs).

The call to Unload is certainly correct, and I don't think there's
anything strictly wrong with calling Stop; just make sure it's not
covering up a bug in Unload.

Regards,
Daniel Remenak


From max at veneto.com  Mon Jul  7 13:56:43 2008
From: max at veneto.com (Massimo Del Fedele)
Date: Mon, 07 Jul 2008 20:56:43 +0200
Subject: [RESEND]MSI:ACTION_AppSearchReg() should return backslash
	terminated paths - Solves bug 13838
In-Reply-To: <22821af30807070930g29a62156g3fe054cc7019f205@mail.gmail.com>
References: <48723086.6020001@veneto.com>
	<22821af30807070930g29a62156g3fe054cc7019f205@mail.gmail.com>
Message-ID: <g4totb$31g$1@ger.gmane.org>

James Hawkins ha scritto:
> On Mon, Jul 7, 2008 at 10:04 AM, Massimo Del Fedele <max at veneto.com> wrote:
>> I'll repost that one... I'd like some feedback if it looks wrong.
>>
> 
> This isn't going to be committed without a test.
> 
>> To maintain consistence between global MSI path properties (as
>> CommonAppDataFolder) which are returned with a trailing backslash, and
>> local MSI path properties (as LOCALAPPDATAFOLDER) which by now where
>> returned without the trailing backslash.
> 
> Properties in MSI are just that...properties.  Folders loaded from the
> Folder table just happen to be stored as properties.  The AppSearch
> action looks for a path (in this case) and sets a user-defined
> property to the path of the directory.  You're making a connection
> between these two completely separated sets of functionality that
> doesn't exist.
> 
>> This solves autocad's installer bug 13838.
>>
> 
> Ok, we've had tons of patches submitted, some committed, that fix one
> app and break tons of other apps.  This is exactly why this has to be
> backed up by a test.
> 
> I'll review your patch for you anyway:
> 
> @@ -368,6 +368,17 @@ static UINT ACTION_AppSearchReg(MSIPACKAGE
> *package, LPWSTR *appValue, MSISIGNAT
>      switch (type & 0x0f)
>      {
>      case msidbLocatorTypeDirectory:
> +	/* directories should be returned with a trailing backslash
> +           so check for it and append if necessary */
> 
> Leave the comment out.

Why ? there are tons of comments just in appsearch.c
Just to make an example of 'obvious' comment there :

     /* check whether parent is set */
     parentName = msi_dup_record_field(row,2);
     if (parentName)

It would have been better a phrase like "please leave comment out 
because xyzreason". Usually I like to know what and why I should do stuffs.

> 
> +        if((LPWSTR)value[sz-1] != L'\\')
> +        {
> 
> Two things wrong.  That first part is casting the result of
> value[sz-1], which is a BYTE (integer), to LPWSTR (pointer).

Right, my mistake... I forgot one parenthesis.

>  Second,
> you can't use L in Wine.

Again... why ? An explanation would bring no harm.
> 
> +            *appValue = (LPWSTR)value;
> +            value = msi_alloc(sz+1);
> 
> You forgot to check if you're out of memory.

Just 3-4 lines above :

     /* FIXME: sanity-check sz before allocating (is there an upper-limit
      * on the value of a property?)
      */
     value = msi_alloc( sz );
     (no check on returned value....)

And, just 3-4 lines below....

     case msidbLocatorTypeFileName:
         *appValue = strdupW((LPWSTR)value);
         break;
     (no check on returned value)

BTW, I agree, it should be checked.
> 
> +            lstrcpyW((LPWSTR)value, *appValue);
> +            lstrcatW(value, L"\\");
> 
> Again, can't use L in Wine.
.......
> 
> +            msi_free(*appValue);
> +            *appValue = NULL;
> +        }
>          rc = ACTION_SearchDirectory(package, sig, (LPWSTR)value, 0, appValue);
>          break;
>      case msidbLocatorTypeFileName:
> 
> Now let's look at the whole thing:
> 
>             *appValue = (LPWSTR)value;
>             value = msi_alloc(sz+1);
>             lstrcpyW((LPWSTR)value, *appValue);
>             lstrcatW(value, L"\\");
>             msi_free(*appValue);
>             *appValue = NULL;
> 
> You're using *appValue as a temporary pointer, which is ugly.
> msi_realloc is your friend.
Thanx for the hint, I didn't know msi_realloc.
BTW, that's why I didn't write a testcase, my skills on msi are too limited.
> 
> Check out the warnings you get when you compile this, which is the
> first sign that something is wrong:
> 
> appsearch.c: In function 'ACTION_AppSearchReg':
> appsearch.c:373: warning: cast to pointer from integer of different size
> appsearch.c:373: warning: comparison between pointer and integer
> appsearch.c:378: warning: passing argument 1 of 'lstrcatW' from
> incompatible pointer type
> appsearch.c:378: warning: passing argument 2 of 'lstrcatW' from
> incompatible pointer type
again, right. My mistake.
> 
> Taking one more step back:
> 
> @@ -368,6 +368,17 @@ static UINT ACTION_AppSearchReg(MSIPACKAGE
> *package, LPWSTR *appValue, MSISIGNAT
>      switch (type & 0x0f)
>      {
>      case msidbLocatorTypeDirectory:
> +	/* directories should be returned with a trailing backslash
> +           so check for it and append if necessary */
> 
> So this 'fix' is only for ACTION_AppSearchReg.  What about all the
> other AppSearch functionalities that also search for a directory?
Because AppSearchReg does search in reg, where paths are un-slashed.
I could have fixed more low-level, of course, but then you'd have big 
probability to break unrelated stuffs.
Again, AppSearchReg MUST return path with backslash. About the other 
AppSearch, I don't know anything.
> Those will remain unfixed.  Also, why are you making it the
> responsibility of AppSearchReg to add the backslash?
Just look at Package.c and you'll know why...
     SHGetFolderPathW(NULL,CSIDL_STARTMENU,NULL,0,pth);
     strcatW(pth,cszbs);
     MSI_SetPropertyW(package, SMF, pth);
as an example.
   You're assuming
> that ACTION_SearchDirectory never changes the value sent in and only
> copies it straight back if it finds the path.
   That's a bad
> assumption.
Yep, right, I checked it on my case and it didn't rip off the backslash, 
but that could change... I should have done after it.
Plus, if you fix this at the lowest level, you get a fix
> for all the AppSearch functionalities for free.
> 
The "lower level", looking at code, would be change RegQueryValueExW() 
behaviour :
     rc = RegQueryValueExW(key, valueName, NULL, &regType, value, &sz);
which indeed IS correct like ii is, and for that one I DID a testcase. 
That was my first "hack" on this, it worked but WAS WRONG.

Going back one step...

 > Ok, we've had tons of patches submitted, some committed, that fix one
 > app and break tons of other apps.  This is exactly why this has to be
 > backed up by a test.

My patch solves just one case that should indeed be solved. I don't say 
it's perfect solution, but that's the best I've found and I know it's 
correct. Maybe it doesn't fix the universe, but it does fix a bug, and 
just THAT bug, without fiddling with other stuffs.
Making it "more low level" as you told, i.e. changing RegQueryValueExW() 
would be wrong and would probably break tons of stuffs that expect it 
(correctly) to return a path WITHOUT a trailing backslash.

But maybe you wanted to say that is ACTION_SearchDirectory() that must 
be patched ? Maybe that's right. BUT then, as it's not an exported 
function, you should test ALL usages of it and see if that's a correct 
behaviour. Well, It's used just in AppSearchDr, besides of 
AppSearchReg(). Maybe, knowing what is for AppSearchDr() I could know if 
it's correct to have its result backslashed too... But I don't. Again, 
my skills on MSI are *very* limited. I've chosen to fix just something I 
know must be fixed instead of try to fix the world without knowing 
anything about it. Wrong ?

BTW, thanx for the review.

Max



From sonix2003 at ctf-z.de  Mon Jul  7 13:59:06 2008
From: sonix2003 at ctf-z.de (Andreas Rosenberg)
Date: Mon, 7 Jul 2008 20:59:06 +0200
Subject: Incompatible behavior regarding SetCapture/ReleaseCapture & dialogs
Message-ID: <x5EMQ4mkVqdbJTQMIYZUxqDIQiToEU1MWCnIZDpe9h4@akmail>

Hi all!

About 3 years ago, I reported a few incompatiblities in Wine, that caused problems 
with an application called IQ-FMEA, that our company is developing.

Some things I could fix myself and sent them to wine-patches and they were accepted.

One incompatibility between Windows & Wine is still there and causes problems
in our app when operating various dialogs (most important the common file dialog, because
this happens frequently).

To demonstrate the problem, I wrote a small app. It may be included into the 
conformance test library, but it's a little bit tricky, so I'm unsure how to do something
like this.

  Scenario:
    Two windows A and B exist.
    - Window B captures the mouse input.
    - Window A opens the CommonFileDialog (GetOpenFileName,GetSaveFileName, ChooseFont)
    - during the open process of the CommonFileDialog the mouse capture
      is released on Windows (between the 2nd & the 3rd WM_NOTIFY being
      passed to the OFNHookProc).

      The dialog is automatically closed by the hook proc, by posting
      WM_COMMAND with IDCANCEL.

      On Wine the mouse capture is not release, making it impossible
      to operate the dialog with the mouse.

      The same scenario may happen with ChooseFont (and probably
      more dialog windows).

      log output of my test app on Windows XP:
		Testing GetOpenFileName
		Wnd with capture:000201fe
		WM_INITDIALOG:000201fe
		WM_NOTIFY:000201fe - fffffda7 - (0)
		WM_NOTIFY:000201fe - fffffda5 - (1)
		WM_NOTIFY:00000000 - fffffda6 - (2)
		Quitting dialog
		Wnd with capture:00000000
		Testing ChooseFont
		Wnd with capture:000201fe
		WM_INITDIALOG:000201fe
		WM_CTLCOLORDLG:00000000 - (0)
		Quitting dialog
		Wnd with capture:00000000

      log output of my test app on Wine 1.1.0 (for OpenSuse 10.3)
		Testing GetOpenFileName
		Wnd with capture:0001002a
		WM_INITDIALOG:0001002a
		WM_NOTIFY:0001002a - fffffda7 - (0)
		WM_NOTIFY:0001002a - fffffda5 - (1)
		WM_NOTIFY:0001002a - fffffda6 - (2)
		CommonFileDialog - mouse capture should have been released now!
		Quitting dialog
		Wnd with capture:0001002a
		Testing ChooseFont
		Wnd with capture:0001002a
		WM_INITDIALOG:0001002a
		WM_CTLCOLORDLG:0001002a - (0)
		ChooseFontDialog - mouse capture should have been released now!
		Quitting dialog
		Wnd with capture:0001002a

Maybe someone being more familiar with the internal framework can take a look into this problem.

Regards,
  Andreas

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/octet-stream
Size: 20230 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080707/ad9c29c4/attachment-0001.obj 

From truiken at gmail.com  Mon Jul  7 14:20:54 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 7 Jul 2008 14:20:54 -0500
Subject: [RESEND]MSI:ACTION_AppSearchReg() should return backslash
	terminated paths - Solves bug 13838
In-Reply-To: <g4totb$31g$1@ger.gmane.org>
References: <48723086.6020001@veneto.com>
	<22821af30807070930g29a62156g3fe054cc7019f205@mail.gmail.com>
	<g4totb$31g$1@ger.gmane.org>
Message-ID: <22821af30807071220p369cfc07uaf937b8f09066cde@mail.gmail.com>

On Mon, Jul 7, 2008 at 1:56 PM, Massimo Del Fedele <max at veneto.com> wrote:
>
> Because AppSearchReg does search in reg, where paths are un-slashed.
> I could have fixed more low-level, of course, but then you'd have big
> probability to break unrelated stuffs.

Listen, I don't want to come off as mean, but like you say yourself,
you are not knowledgeable about msi or the Win32 API for that matter.
AppSearchReg queries the specified registry entry for a directory to
check for its existence.  You say, "in reg, where paths are
un-slashed."  There is no such definition of paths in the registry.  A
registry value contains whatever value the user set it to.

> Again, AppSearchReg MUST return path with backslash. About the other
> AppSearch, I don't know anything.

Ok, you've just verified that you're not thinking about this
correctly.  You should care about the other parts of AppSearch.

>> Those will remain unfixed.  Also, why are you making it the
>> responsibility of AppSearchReg to add the backslash?
> Just look at Package.c and you'll know why...
>     SHGetFolderPathW(NULL,CSIDL_STARTMENU,NULL,0,pth);
>     strcatW(pth,cszbs);
>     MSI_SetPropertyW(package, SMF, pth);
> as an example.

Again, what does that have to do with anything?  This is the special
MSI properties code...not the AppSearch action.  You are trying to
relate all these disparate parts that are completely unrelated.

>   You're assuming
>> that ACTION_SearchDirectory never changes the value sent in and only
>> copies it straight back if it finds the path.
>   That's a bad
>> assumption.
> Yep, right, I checked it on my case and it didn't rip off the backslash,
> but that could change... I should have done after it.
> Plus, if you fix this at the lowest level, you get a fix
>> for all the AppSearch functionalities for free.
>>
> The "lower level", looking at code, would be change RegQueryValueExW()
> behaviour :
>     rc = RegQueryValueExW(key, valueName, NULL, &regType, value, &sz);
> which indeed IS correct like ii is, and for that one I DID a testcase.
> That was my first "hack" on this, it worked but WAS WRONG.
>

Now knowing what I just told you about AppSearchReg above, you cannot
possibly think that I was suggesting you should change
RegQueryValueEx...

> Going back one step...
>
>  > Ok, we've had tons of patches submitted, some committed, that fix one
>  > app and break tons of other apps.  This is exactly why this has to be
>  > backed up by a test.
>
> My patch solves just one case that should indeed be solved. I don't say
> it's perfect solution, but that's the best I've found and I know it's
> correct.

By definition you can't know if it's correct unless you add tests for
it, and even then you can never be 100% sure (but it's pretty close).

> Maybe it doesn't fix the universe, but it does fix a bug, and
> just THAT bug, without fiddling with other stuffs.

...and maybe it breaks some other apps.  You act like I don't think
your fix is correct.  It probably is correct, but that's not the
point.  It's not tested, so you can't be certain that it's correct.  I
already said I'd add a test, so I don't know why you keep going on
about this.

> Making it "more low level" as you told, i.e. changing RegQueryValueExW()
> would be wrong and would probably break tons of stuffs that expect it
> (correctly) to return a path WITHOUT a trailing backslash.
>

See above.

> But maybe you wanted to say that is ACTION_SearchDirectory() that must
> be patched ?

Yes.  I thought that was obvious, but I'll try to not make those
assumptions again.

> Maybe that's right. BUT then, as it's not an exported
> function, you should test ALL usages of it and see if that's a correct
> behaviour. Well, It's used just in AppSearchDr, besides of
> AppSearchReg(). Maybe, knowing what is for AppSearchDr() I could know if
> it's correct to have its result backslashed too... But I don't. Again,
> my skills on MSI are *very* limited. I've chosen to fix just something I
> know must be fixed instead of try to fix the world without knowing
> anything about it. Wrong ?
>

Yes.  You're verifying everything I've told you several times.

> BTW, thanx for the review.
>

No problem.

-- 
James Hawkins


From zac at zacbrown.org  Mon Jul  7 15:31:35 2008
From: zac at zacbrown.org (Zac Brown)
Date: Mon, 07 Jul 2008 13:31:35 -0700
Subject: [6/6] winhttp: main.c: Add stub implementation for
	WinHttpCloseHandle
In-Reply-To: <48727AAE.4080003@zacbrown.org>
References: <48727AAE.4080003@zacbrown.org>
Message-ID: <48727D27.3090303@zacbrown.org>

Zac Brown wrote:
> Add stub implementation for WinHttpCloseHandle
> 
> 
ignore, forgot patch.


From truiken at gmail.com  Mon Jul  7 15:37:14 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 7 Jul 2008 15:37:14 -0500
Subject: mlang/tests: don't assume output of ConvertStringFromUnicode is
	null terminated
In-Reply-To: <a71bd89a0807062208v2502f610sdf582f4069dd18d5@mail.gmail.com>
References: <a71bd89a0807060808s4588de4ap8dd732eb001e6c10@mail.gmail.com>
	<22821af30807061029h125b20d8s64013fdd0dcf0ae8@mail.gmail.com>
	<a71bd89a0807062208v2502f610sdf582f4069dd18d5@mail.gmail.com>
Message-ID: <22821af30807071337s75793c6fo6115fec56e04487c@mail.gmail.com>

On Mon, Jul 7, 2008 at 12:08 AM, Dan Kegel <dank at kegel.com> wrote:
> On Sun, Jul 6, 2008 at 10:29 AM, James Hawkins <truiken at gmail.com> wrote:
>> No, this is hiding a bug.  The test code conforms with the API.  The
>> problem is that ConvertINetMultiByteToUnicode uses the value of an
>> out-only parameter (NULL pDstStr, non-NULL pcDstSize).  Check out the
>> code block in mlang.c:632.
>
> Yeah, that's what I figured you thought, but your fix
> doesn't actually get rid of the error message,
> and the error is happening on
>            *pcSrcSize = lstrlenA(pSrcStr);
> in ConvertINetMultiByteToUnicode.
>
> The conformance test shows on line 197 that
> IMultiLanguage2_ConvertStringFromUnicode
> doesn't null-terminate its output.  So it's wrong for
> check_convertible to rely on it to do so.
>
> Am I missing something?  I still believe in my patch...
>

The thing that's wrong with your patch is that you're mixing source
size and dest size, which aren't necessarily similar values depending
on code page.  The right fix is to make sure the NULL terminator is
encoded too in the first conversion.  I also fixed up
ConvertINetMultiByteToUnicode while I was at it (accessing out-only
param).

-- 
James Hawkins


From shelnutt2 at gmail.com  Mon Jul  7 15:52:56 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Mon, 7 Jul 2008 16:52:56 -0400
Subject: CUDA wrapper
In-Reply-To: <3a768c550807071021i1c340bb1p5f228026b1fcc03b@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<6fc03d800807061628w667303d8nfe3e6b37c3153b16@mail.gmail.com>
	<000001c8dfd7$1e328850$5a9798f0$@com>
	<6fc03d800807061937l546fcf84kc0c22bfb78f9d5e9@mail.gmail.com>
	<000e01c8dfde$20390280$60ab0780$@com>
	<6fc03d800807070900q28ad1db3y4fa3a9953c0b5835@mail.gmail.com>
	<003901c8e04e$326e75f0$974b61d0$@com>
	<6fc03d800807070959y28b71fbapa0d77469c907828a@mail.gmail.com>
	<6fc03d800807071009o334d653k38fd88ee3ef16a4f@mail.gmail.com>
	<3a768c550807071021i1c340bb1p5f228026b1fcc03b@mail.gmail.com>
Message-ID: <6fc03d800807071352t2c366951wb12909ad8a8dcf9@mail.gmail.com>

Ah ok, now I understand.

I am having a problem with the opengl section of it. It doesn't like GLuint
. I've added the gl.h file to my list of headers as I thought maybe I needed
the header to define it. But it still doesn't like it. Here are the errors,
and one of the lines of code. I've googled it and GLuint is proper. It's
just an unsigned int. It is also "c" code not c++, so I'm not sure what it
is complaining about. Any ideas?

cudart.c:261: error: expected ')' before 'bufferObj'
cudart.c:265: error: expected declaration specifiers or '...' before
'GLuint'



cudaError_t WINAPI wine_cudaGLRegisterBufferObject( GLuint bufferObj ){



Thanks


On Mon, Jul 7, 2008 at 1:21 PM, Juan Lang <juan.lang at gmail.com> wrote:

> Hi Seth,
>
> > Now are you saying the code should be,
> > retval, WINAPI wine_cudaGetDeviceCount( int* count ){
> >     return cudaGetDeviceCount( count );
> > }
> >
> > or should it be
> >
> > retval, WINAPI wine_cudaGetDeviceCount( int* count )
> >
> > or
> >
> > retval = WINAPI wine_cudaGetDeviceCount( int* count ){
> >     return cudaGetDeviceCount( retval );
> > }
>
> None of the above.  retval was just a standin for a type declaration.
> I don't know what the proper return type is, but Google does:  it's
> cudaError_t.  So the proper declaration is likely to be:
>
> cudaError_t WINAPI wine_cudaGetDeviceCount(int *count) {
>    return cudaGetDeviceCount(count);
> }
>
> --Juan
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080707/7fb92daf/attachment.htm 

From xixsimplicityxix at gmail.com  Mon Jul  7 16:00:16 2008
From: xixsimplicityxix at gmail.com (John Klehm)
Date: Mon, 7 Jul 2008 16:00:16 -0500
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807071352t2c366951wb12909ad8a8dcf9@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<000001c8dfd7$1e328850$5a9798f0$@com>
	<6fc03d800807061937l546fcf84kc0c22bfb78f9d5e9@mail.gmail.com>
	<000e01c8dfde$20390280$60ab0780$@com>
	<6fc03d800807070900q28ad1db3y4fa3a9953c0b5835@mail.gmail.com>
	<003901c8e04e$326e75f0$974b61d0$@com>
	<6fc03d800807070959y28b71fbapa0d77469c907828a@mail.gmail.com>
	<6fc03d800807071009o334d653k38fd88ee3ef16a4f@mail.gmail.com>
	<3a768c550807071021i1c340bb1p5f228026b1fcc03b@mail.gmail.com>
	<6fc03d800807071352t2c366951wb12909ad8a8dcf9@mail.gmail.com>
Message-ID: <78a7dad00807071400g7f784d53x990d0b84119f28be@mail.gmail.com>

On Mon, Jul 7, 2008 at 3:52 PM, Seth Shelnutt <shelnutt2 at gmail.com> wrote:
> Ah ok, now I understand.
>
> I am having a problem with the opengl section of it. It doesn't like GLuint
> . I've added the gl.h file to my list of headers as I thought maybe I needed
> the header to define it. But it still doesn't like it. Here are the errors,
> and one of the lines of code. I've googled it and GLuint is proper. It's
> just an unsigned int. It is also "c" code not c++, so I'm not sure what it
> is complaining about. Any ideas?
>
> cudart.c:261: error: expected ')' before 'bufferObj'
> cudart.c:265: error: expected declaration specifiers or '...' before
> 'GLuint'
>
>

Check the IMPORT variable in Makefile.in and see if everything you
need is listed.

--John


From shelnutt2 at gmail.com  Mon Jul  7 16:26:12 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Mon, 7 Jul 2008 17:26:12 -0400
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807071411q545d37e9w502122d82346087f@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<000e01c8dfde$20390280$60ab0780$@com>
	<6fc03d800807070900q28ad1db3y4fa3a9953c0b5835@mail.gmail.com>
	<003901c8e04e$326e75f0$974b61d0$@com>
	<6fc03d800807070959y28b71fbapa0d77469c907828a@mail.gmail.com>
	<6fc03d800807071009o334d653k38fd88ee3ef16a4f@mail.gmail.com>
	<3a768c550807071021i1c340bb1p5f228026b1fcc03b@mail.gmail.com>
	<6fc03d800807071352t2c366951wb12909ad8a8dcf9@mail.gmail.com>
	<78a7dad00807071400g7f784d53x990d0b84119f28be@mail.gmail.com>
	<6fc03d800807071411q545d37e9w502122d82346087f@mail.gmail.com>
Message-ID: <6fc03d800807071426g6be1302eg8d7ff9c734a9357@mail.gmail.com>

I just have a makefile. No makefile.in. Perhaps I used winemaker wrong? I
simply did "winemaker --dll cuda".


On Mon, Jul 7, 2008 at 5:00 PM, John Klehm <xixsimplicityxix at gmail.com>
wrote:

>
>
> Check the IMPORT variable in Makefile.in and see if everything you
> need is listed.
>
> --John
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080707/2a30e869/attachment.htm 

From juan.lang at gmail.com  Mon Jul  7 16:29:10 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 7 Jul 2008 14:29:10 -0700
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807071352t2c366951wb12909ad8a8dcf9@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<000001c8dfd7$1e328850$5a9798f0$@com>
	<6fc03d800807061937l546fcf84kc0c22bfb78f9d5e9@mail.gmail.com>
	<000e01c8dfde$20390280$60ab0780$@com>
	<6fc03d800807070900q28ad1db3y4fa3a9953c0b5835@mail.gmail.com>
	<003901c8e04e$326e75f0$974b61d0$@com>
	<6fc03d800807070959y28b71fbapa0d77469c907828a@mail.gmail.com>
	<6fc03d800807071009o334d653k38fd88ee3ef16a4f@mail.gmail.com>
	<3a768c550807071021i1c340bb1p5f228026b1fcc03b@mail.gmail.com>
	<6fc03d800807071352t2c366951wb12909ad8a8dcf9@mail.gmail.com>
Message-ID: <3a768c550807071429g269fac10qfd85d1c777cc7e6a@mail.gmail.com>

> cudart.c:261: error: expected ')' before 'bufferObj'
> cudart.c:265: error: expected declaration specifiers or '...' before
> 'GLuint'
>
> cudaError_t WINAPI wine_cudaGLRegisterBufferObject( GLuint bufferObj ){

Check your includes again.  GLuint is defined in <GL/gl.h> here.
--Juan


From m.b.lankhorst at gmail.com  Mon Jul  7 16:39:25 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Mon, 7 Jul 2008 14:39:25 -0700
Subject: Midterm evaluations for summer of code students
Message-ID: <b130c85e0807071439q327aa037xa8b5743da2794416@mail.gmail.com>

Hi students,

As you might know it's time for midterm evaluations. Unfortunately for
some students I haven't seen the progress they made, and I highly
encourage all students to send their patches early and often, even if
it's not yet finished.

Also, I would like to hear from all students now a reflection. What
went well, and what didn't, and what did you accomplish so far? :-)

Cheers,
Maarten.


From shelnutt2 at gmail.com  Mon Jul  7 11:00:57 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Mon, 7 Jul 2008 12:00:57 -0400
Subject: CUDA wrapper
In-Reply-To: <000e01c8dfde$20390280$60ab0780$@com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<6fc03d800807061523x1c6911cdt31bdf43748649eab@mail.gmail.com>
	<1215384838.14103.9.camel@hermes2.karcher.local>
	<6fc03d800807061628w667303d8nfe3e6b37c3153b16@mail.gmail.com>
	<000001c8dfd7$1e328850$5a9798f0$@com>
	<6fc03d800807061937l546fcf84kc0c22bfb78f9d5e9@mail.gmail.com>
	<000e01c8dfde$20390280$60ab0780$@com>
Message-ID: <6fc03d800807070900q28ad1db3y4fa3a9953c0b5835@mail.gmail.com>

I've attached my spec file and my .c file along with the two header files
from the nvidia toolkit. I am pretty sure in the .c file I was not suppose
to use the "WINAPI" but instead I need "FancyCudaReturnValue" but I don't
know what that is. Needless to say after using "winemaker cuda" (I have it
in a folder called cuda), it doesn't compile and I get a million and one
errors. I'm sure these errors are more or less caused because I didn't quite
get it right. If you could just look at it and give me some pointers on
where and how I went wrong, it would be appreciated. You've been a big help
so far. Thank you for the explanations in the last email it got me this far
so far.


-Seth Shelnutt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080707/9a6c5c81/attachment-0001.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cudart.dll.spec
Type: text/x-rpm-spec
Size: 8386 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080707/9a6c5c81/attachment-0001.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cudart.c
Type: text/x-csrc
Size: 10836 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080707/9a6c5c81/attachment-0001.c 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cuda_runtime.h
Type: text/x-chdr
Size: 12370 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080707/9a6c5c81/attachment-0002.h 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cuda_runtime_api.h
Type: text/x-chdr
Size: 17677 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080707/9a6c5c81/attachment-0003.h 

From kde at graph-ix.net  Mon Jul  7 13:20:22 2008
From: kde at graph-ix.net (Markus)
Date: Mon, 7 Jul 2008 20:20:22 +0200
Subject: [dxdiagn] [resend] Implemented szDeviceIdentifier property in
	dxdiagn dll
In-Reply-To: <22821af30807071049s4df6ac71jda770c68e7ccc6c1@mail.gmail.com>
References: <200807071946.04168.kde@graph-ix.net>
	<22821af30807071049s4df6ac71jda770c68e7ccc6c1@mail.gmail.com>
Message-ID: <200807072020.22556.kde@graph-ix.net>

On Monday 07 July 2008 19:49:52 you wrote:
> On Mon, Jul 7, 2008 at 12:46 PM, Markus <kde at graph-ix.net> wrote:
> > If d3d9 could not be properly initialized, the value 'n/a' is set. This
> > behavior has been verified against the native dxdiagn.dll. The
> > corresponding testcase will follow once I have time.
>
> You forgot the patch.

Yes, thank you.

-- 
Markus
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-dxdiagn-resend-Implemented-szDeviceIdentifier-pr.patch
Type: text/x-diff
Size: 4246 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080707/1ef5282e/attachment-0001.patch 

From shelnutt2 at gmail.com  Mon Jul  7 16:51:01 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Mon, 7 Jul 2008 17:51:01 -0400
Subject: CUDA wrapper
In-Reply-To: <3a768c550807071429g269fac10qfd85d1c777cc7e6a@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<6fc03d800807061937l546fcf84kc0c22bfb78f9d5e9@mail.gmail.com>
	<000e01c8dfde$20390280$60ab0780$@com>
	<6fc03d800807070900q28ad1db3y4fa3a9953c0b5835@mail.gmail.com>
	<003901c8e04e$326e75f0$974b61d0$@com>
	<6fc03d800807070959y28b71fbapa0d77469c907828a@mail.gmail.com>
	<6fc03d800807071009o334d653k38fd88ee3ef16a4f@mail.gmail.com>
	<3a768c550807071021i1c340bb1p5f228026b1fcc03b@mail.gmail.com>
	<6fc03d800807071352t2c366951wb12909ad8a8dcf9@mail.gmail.com>
	<3a768c550807071429g269fac10qfd85d1c777cc7e6a@mail.gmail.com>
Message-ID: <6fc03d800807071451u314e0e7axa8130a14536e29c6@mail.gmail.com>

I have #include <GL/gl.h>, maybe I do not have my makefile correct. I've
attached the makefile, the cudart.c and all the nvidia header's need (14 of
them) in one tar.bz2 file. Can someone check my makefile and all? I read
through the nvidia license and it is ok to redistribute the headers.

On Mon, Jul 7, 2008 at 5:29 PM, Juan Lang <juan.lang at gmail.com> wrote:

> > cudart.c:261: error: expected ')' before 'bufferObj'
> > cudart.c:265: error: expected declaration specifiers or '...' before
> > 'GLuint'
> >
> > cudaError_t WINAPI wine_cudaGLRegisterBufferObject( GLuint bufferObj ){
>
> Check your includes again.  GLuint is defined in <GL/gl.h> here.
> --Juan
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080707/c45ac24a/attachment-0001.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cudart.c
Type: text/x-csrc
Size: 11481 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080707/c45ac24a/attachment-0001.c 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cudart.dll.spec
Type: text/x-rpm-spec
Size: 8386 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080707/c45ac24a/attachment-0002.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Makefile
Type: application/octet-stream
Size: 2313 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080707/c45ac24a/attachment-0001.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cuda-headers.tar.bz2
Type: application/x-bzip2
Size: 7982 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080707/c45ac24a/attachment-0003.bin 

From juan.lang at gmail.com  Mon Jul  7 16:59:55 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Mon, 7 Jul 2008 14:59:55 -0700
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807071451u314e0e7axa8130a14536e29c6@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<000e01c8dfde$20390280$60ab0780$@com>
	<6fc03d800807070900q28ad1db3y4fa3a9953c0b5835@mail.gmail.com>
	<003901c8e04e$326e75f0$974b61d0$@com>
	<6fc03d800807070959y28b71fbapa0d77469c907828a@mail.gmail.com>
	<6fc03d800807071009o334d653k38fd88ee3ef16a4f@mail.gmail.com>
	<3a768c550807071021i1c340bb1p5f228026b1fcc03b@mail.gmail.com>
	<6fc03d800807071352t2c366951wb12909ad8a8dcf9@mail.gmail.com>
	<3a768c550807071429g269fac10qfd85d1c777cc7e6a@mail.gmail.com>
	<6fc03d800807071451u314e0e7axa8130a14536e29c6@mail.gmail.com>
Message-ID: <3a768c550807071459wbaf05ectb4b9ad17d5d2997a@mail.gmail.com>

> I have #include <GL/gl.h>, maybe I do not have my makefile correct. I've
> attached the makefile, the cudart.c and all the nvidia header's need (14 of
> them) in one tar.bz2 file. Can someone check my makefile and all? I read
> through the nvidia license and it is ok to redistribute the headers.

Nothing to do with the makefile.  Your includes are wrong.  I changed
your includes as follows:
--- cudart.c.orig       2008-07-07 14:54:51.000000000 -0700
+++ cudart.c    2008-07-07 14:54:57.000000000 -0700
@@ -1,8 +1,9 @@
 /*This is a wrapper for cudart.dll and libdudart.so.2.0*/


-#include <GL/gl.h>
 #include <stdlib.h>
+#include <windows.h>
+#include <GL/gl.h>
 #include <string.h>
 #include "cuda_runtime.h"
 #include "cuda_runtime_api.h" /*I am unsure if both these headers are
needed, both do contain some of the functions*/

This gets a lot of the compile errors to go away, but not all of them.
 In several places you misspelled GLuint as GLUint.  In the future
please be more careful, discussing basic stuff like this gets a little
tedious.
--Juan


From truiken at gmail.com  Mon Jul  7 17:12:39 2008
From: truiken at gmail.com (James Hawkins)
Date: Mon, 7 Jul 2008 17:12:39 -0500
Subject: wintrust/test: Verify array length before calling memcmp in test
	(RESEND)
In-Reply-To: <20080707220555.GA6780@teop>
References: <20080707220555.GA6780@teop>
Message-ID: <22821af30807071512p55ace476q5d6e85fc3d234553@mail.gmail.com>

On Mon, Jul 7, 2008 at 5:05 PM, Roy Shea <royshea at gmail.com> wrote:
> This revision uses a more concise check of hash equality than prior
> patch archived at:
>
> http://www.winehq.org/pipermail/wine-patches/2008-June/056139.html
>
> Call to memcmp in test_calchash assumes length of hash and expectedhash
> are the same.  This need not be true in general, and is not true for the
> current stub implementation of CryptCATAdminCalcHashFromFileHandle.
> This patch adds an explicit test of array length.  In doing so it
> prevents the following Valgrind warning:
>

@@ -335,7 +335,9 @@ static void test_calchash(void)
     {
     ok(GetLastError() == ERROR_SUCCESS,
        "Expected ERROR_SUCCESS, got %d\n", GetLastError());
-    ok(!memcmp(hash, expectedhash, sizeof(expectedhash)), "Hashes
didn't match\n");
+    ok(hashsize == sizeof(expectedhash) &&
+            !memcmp(hash, expectedhash, sizeof(expectedhash)),
+            "Hashes didn't match\n");

What's with the weird spacing?  It doesn't match the spacing of the ok
call right above it.

-- 
James Hawkins


From royshea at gmail.com  Mon Jul  7 18:22:57 2008
From: royshea at gmail.com (Roy Shea)
Date: Mon, 7 Jul 2008 16:22:57 -0700
Subject: wintrust/test: Verify array length before calling memcmp in test
	(RESEND)
In-Reply-To: <22821af30807071512p55ace476q5d6e85fc3d234553@mail.gmail.com>
References: <20080707220555.GA6780@teop>
	<22821af30807071512p55ace476q5d6e85fc3d234553@mail.gmail.com>
Message-ID: <bb6a273e0807071622g78225e65sef3c157926505cb7@mail.gmail.com>

> What's with the weird spacing?

Thanks for the catch.  I spaced on the spacing.  Revised patch with
corrected spacing is attached.

Peace,
-Roy
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0001-wintrust-test-Verify-array-length-before-calling-memc.txt
Url: http://www.winehq.org/pipermail/wine-devel/attachments/20080707/b3a9590c/attachment.txt 

From austin.lund at gmail.com  Mon Jul  7 20:24:01 2008
From: austin.lund at gmail.com (Austin Lund)
Date: Tue, 8 Jul 2008 11:24:01 +1000
Subject: rpcrt4: Compile error
Message-ID: <bcab73240807071824v777895cfhcc5789e9368da1a3@mail.gmail.com>

Does anyone else get the following compile error at commit
2734fb44e0f4065179044b9eb93f87a7630f292d:

make[2]: Entering directory `/home/lund/src/wine/wine-git/dlls/rpcrt4'
make[2]: *** No rule to make target
`../../include/wine/rpcss_shared.h', needed by `ndr_contexthandle.o'.
Stop.
make[2]: Leaving directory `/home/lund/src/wine/wine-git/dlls/rpcrt4'
make[1]: *** [rpcrt4] Error 2
make[1]: Leaving directory `/home/lund/src/wine/wine-git/dlls'
make: *** [dlls] Error 2


From thestig at google.com  Mon Jul  7 20:38:36 2008
From: thestig at google.com (Lei Zhang)
Date: Mon, 7 Jul 2008 18:38:36 -0700
Subject: rpcrt4: Compile error
In-Reply-To: <bcab73240807071824v777895cfhcc5789e9368da1a3@mail.gmail.com>
References: <bcab73240807071824v777895cfhcc5789e9368da1a3@mail.gmail.com>
Message-ID: <558b2f5c0807071838kc0c4ca0kcac60d2512b7b2bb@mail.gmail.com>

On Mon, Jul 7, 2008 at 6:24 PM, Austin Lund <austin.lund at gmail.com> wrote:
> Does anyone else get the following compile error at commit
> 2734fb44e0f4065179044b9eb93f87a7630f292d:
>
> make[2]: Entering directory `/home/lund/src/wine/wine-git/dlls/rpcrt4'
> make[2]: *** No rule to make target
> `../../include/wine/rpcss_shared.h', needed by `ndr_contexthandle.o'.
> Stop.
> make[2]: Leaving directory `/home/lund/src/wine/wine-git/dlls/rpcrt4'
> make[1]: *** [rpcrt4] Error 2
> make[1]: Leaving directory `/home/lund/src/wine/wine-git/dlls'
> make: *** [dlls] Error 2
>
>
>

Did you run make depend?


From shelnutt2 at gmail.com  Mon Jul  7 21:44:31 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Mon, 7 Jul 2008 22:44:31 -0400
Subject: CUDA wrapper
In-Reply-To: <3a768c550807071459wbaf05ectb4b9ad17d5d2997a@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<6fc03d800807070900q28ad1db3y4fa3a9953c0b5835@mail.gmail.com>
	<003901c8e04e$326e75f0$974b61d0$@com>
	<6fc03d800807070959y28b71fbapa0d77469c907828a@mail.gmail.com>
	<6fc03d800807071009o334d653k38fd88ee3ef16a4f@mail.gmail.com>
	<3a768c550807071021i1c340bb1p5f228026b1fcc03b@mail.gmail.com>
	<6fc03d800807071352t2c366951wb12909ad8a8dcf9@mail.gmail.com>
	<3a768c550807071429g269fac10qfd85d1c777cc7e6a@mail.gmail.com>
	<6fc03d800807071451u314e0e7axa8130a14536e29c6@mail.gmail.com>
	<3a768c550807071459wbaf05ectb4b9ad17d5d2997a@mail.gmail.com>
Message-ID: <6fc03d800807071944q3d1b308an8927ab819ed8d057@mail.gmail.com>

I apologise for the simple mistakes. But I only made those spelling errors
after the fact and I was trying to get it working, I saw from google one
forums post where the U was capitalised so I thought I'd try it, I just had
forgot to put it back.

I have fixed all the error and now it doesn't complain about any errors with
the file but I think my make file is not correct. After I fixed the paths to
the linking library libcudart.so.2.0, now it is saying it that the linking
isn't done.

 gcc: /usr/local/cuda/lib/libcudart.so.2.0: linker input file unused because
linking not done

Also after that I get an error about libcudart.so.2-LhAtfa.o is an empty
file. What is that LhAtfa.o? Of course it is an empty file as far as I know
that isn't a real file. What is it trying to link to?

Thanks,

Seth Shelnutt


On Mon, Jul 7, 2008 at 5:59 PM, Juan Lang <juan.lang at gmail.com> wrote:

> > I have #include <GL/gl.h>, maybe I do not have my makefile correct. I've
> > attached the makefile, the cudart.c and all the nvidia header's need (14
> of
> > them) in one tar.bz2 file. Can someone check my makefile and all? I read
> > through the nvidia license and it is ok to redistribute the headers.
>
> Nothing to do with the makefile.  Your includes are wrong.  I changed
> your includes as follows:
> --- cudart.c.orig       2008-07-07 14:54:51.000000000 -0700
> +++ cudart.c    2008-07-07 14:54:57.000000000 -0700
> @@ -1,8 +1,9 @@
>  /*This is a wrapper for cudart.dll and libdudart.so.2.0*/
>
>
> -#include <GL/gl.h>
>  #include <stdlib.h>
> +#include <windows.h>
> +#include <GL/gl.h>
>  #include <string.h>
>  #include "cuda_runtime.h"
>  #include "cuda_runtime_api.h" /*I am unsure if both these headers are
> needed, both do contain some of the functions*/
>
> This gets a lot of the compile errors to go away, but not all of them.
>  In several places you misspelled GLuint as GLUint.  In the future
> please be more careful, discussing basic stuff like this gets a little
> tedious.
> --Juan
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080707/73dccfb7/attachment.htm 

From austin.lund at gmail.com  Tue Jul  8 00:42:02 2008
From: austin.lund at gmail.com (Austin Lund)
Date: Tue, 8 Jul 2008 15:42:02 +1000
Subject: Crashes in winetest under wine
In-Reply-To: <bcab73240807061611g6e5f11e7maecc1faee5b6ea27@mail.gmail.com>
References: <bcab73240807022356k4e0be5b0me7b6de8b5f6a4aca@mail.gmail.com>
	<bcab73240807061611g6e5f11e7maecc1faee5b6ea27@mail.gmail.com>
Message-ID: <bcab73240807072242v74971f64i58658baf593fece8@mail.gmail.com>

2008/7/7 Austin Lund <austin.lund at gmail.com>:
> 2008/7/3 Austin Lund <austin.lund at gmail.com>:
>> I get a crash all the time in winetest since 1.0.  Seems there is not
>> a problem with any of the tests themselves (i.e. running make test).
>>
>> The last few lines of output from winetest is:
>>
>> fixme:xrandr:X11DRV_XRandR_SetCurrentMode Cannot change screen BPP from 32 to 8
>> fixme:xrandr:X11DRV_XRandR_SetCurrentMode Cannot change screen BPP from 32 to 16
>> err:x11settings:X11DRV_ChangeDisplaySettingsEx No matching mode found
>> 1440x900x24 @0! (XRandR)
>> err:ntdll:RtlpWaitForCriticalSection section 0x7bc91824 "loader.c:
>> loader_section" wait timed out in thread 0039, blocked by 0036,
>> retrying (60 sec)
>> wine: Critical section 7bc91824 wait failed at address 0x7bc3ab60
>> (thread 0039), starting debugger...
>> err:seh:raise_exception Unhandled exception code c0000194 flags 0 addr
>> 0x7bc3ab60
>>
>> And the output file made in /tmp has at the end:
>>
>> uxtheme:system start dlls/uxtheme/tests/system.c -
>> system.c:491: Starting test_IsThemed()
>> system.c:87: Theming is inactive
>> system.c:495: Starting test_GetWindowTheme()
>> system.c:499: Starting test_SetWindowTheme()
>> system.c:503: Starting test_OpenThemeData()
>> system.c:263: No active theme, skipping rest of OpenThemeData tests
>> system.c:507: Starting test_GetCurrentThemeName()
>> system.c:511: Starting test_CloseThemeData()
>> system: 45 tests executed (11 marked as todo, 0 failures), 0 skipped.
>> uxtheme:system done (0)
>>
>> It takes quite a long time to get to the point where it crashes so I'd
>> be open to ideas as to how to narrow this down quicker.
>>
>> I'm running everything on a clean install with an empty ~/.wine directory.
>>
>
> I still get this.  When doing "make test" in uxtheme everything is
> fine.  The next test to be run is version, but it also works fine.
> Does anyone have any idea how to start debuging this?
>

Well, I bisected this.  And the first commit which crashes for me is

commit 3434935f44eadecae1e8aa11d08142a40b671978
Author: Hans Leidekker <hans at it.vu.nl>
Date:   Mon Jun 23 20:57:46 2008 +0200

    wininet: Clear last error upon successful return from HttpSendRequest.

There are no valgrind warnings for this code, so things must be more
complex than I'd like them to be.


From austin.lund at gmail.com  Tue Jul  8 01:29:00 2008
From: austin.lund at gmail.com (Austin Lund)
Date: Tue, 8 Jul 2008 16:29:00 +1000
Subject: Crashes in winetest under wine
In-Reply-To: <bcab73240807072242v74971f64i58658baf593fece8@mail.gmail.com>
References: <bcab73240807022356k4e0be5b0me7b6de8b5f6a4aca@mail.gmail.com>
	<bcab73240807061611g6e5f11e7maecc1faee5b6ea27@mail.gmail.com>
	<bcab73240807072242v74971f64i58658baf593fece8@mail.gmail.com>
Message-ID: <bcab73240807072329x64f8063sf01a877b8f022796@mail.gmail.com>

2008/7/8 Austin Lund <austin.lund at gmail.com>:
> 2008/7/7 Austin Lund <austin.lund at gmail.com>:
>> 2008/7/3 Austin Lund <austin.lund at gmail.com>:
>>> I get a crash all the time in winetest since 1.0.  Seems there is not
>>> a problem with any of the tests themselves (i.e. running make test).
>>>
>>> The last few lines of output from winetest is:
>>>
>>> fixme:xrandr:X11DRV_XRandR_SetCurrentMode Cannot change screen BPP from 32 to 8
>>> fixme:xrandr:X11DRV_XRandR_SetCurrentMode Cannot change screen BPP from 32 to 16
>>> err:x11settings:X11DRV_ChangeDisplaySettingsEx No matching mode found
>>> 1440x900x24 @0! (XRandR)
>>> err:ntdll:RtlpWaitForCriticalSection section 0x7bc91824 "loader.c:
>>> loader_section" wait timed out in thread 0039, blocked by 0036,
>>> retrying (60 sec)
>>> wine: Critical section 7bc91824 wait failed at address 0x7bc3ab60
>>> (thread 0039), starting debugger...
>>> err:seh:raise_exception Unhandled exception code c0000194 flags 0 addr
>>> 0x7bc3ab60
>>>
>>> And the output file made in /tmp has at the end:
>>>
>>> uxtheme:system start dlls/uxtheme/tests/system.c -
>>> system.c:491: Starting test_IsThemed()
>>> system.c:87: Theming is inactive
>>> system.c:495: Starting test_GetWindowTheme()
>>> system.c:499: Starting test_SetWindowTheme()
>>> system.c:503: Starting test_OpenThemeData()
>>> system.c:263: No active theme, skipping rest of OpenThemeData tests
>>> system.c:507: Starting test_GetCurrentThemeName()
>>> system.c:511: Starting test_CloseThemeData()
>>> system: 45 tests executed (11 marked as todo, 0 failures), 0 skipped.
>>> uxtheme:system done (0)
>>>
>>> It takes quite a long time to get to the point where it crashes so I'd
>>> be open to ideas as to how to narrow this down quicker.
>>>
>>> I'm running everything on a clean install with an empty ~/.wine directory.
>>>
>>
>> I still get this.  When doing "make test" in uxtheme everything is
>> fine.  The next test to be run is version, but it also works fine.
>> Does anyone have any idea how to start debuging this?
>>
>
> Well, I bisected this.  And the first commit which crashes for me is
>
> commit 3434935f44eadecae1e8aa11d08142a40b671978
> Author: Hans Leidekker <hans at it.vu.nl>
> Date:   Mon Jun 23 20:57:46 2008 +0200
>
>    wininet: Clear last error upon successful return from HttpSendRequest.
>
> There are no valgrind warnings for this code, so things must be more
> complex than I'd like them to be.
>

Tried reverting this commit and the crash still occurs.


From hverbeet at gmail.com  Tue Jul  8 01:54:34 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Tue, 8 Jul 2008 08:54:34 +0200
Subject: [1/3] [d3d8] Add testcase for IDirect3DDevice8::CreateImageSurface
In-Reply-To: <487275A6.8070706@gmx.net>
References: <487275A6.8070706@gmx.net>
Message-ID: <d658b69e0807072354u1cfa05bh9294b91787737e73@mail.gmail.com>

2008/7/7 Tobias Jakobi <liquid.acid at gmx.net>:
>
The test doesn't get run this way. If it did it would fail of course,
so you should either submit the test after your second patch, or put
the ok that tests the pool type inside a todo_wine block and remove it
again in your second patch.


From julliard at winehq.org  Tue Jul  8 02:42:36 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 08 Jul 2008 09:42:36 +0200
Subject: wined3d: Remove const qualifier from output pointers (Resend)
In-Reply-To: <200807072132.40193.andrew.talbot@talbotville.com> (Andrew
	Talbot's message of "Mon, 7 Jul 2008 21:32:39 +0100")
References: <200807072132.40193.andrew.talbot@talbotville.com>
Message-ID: <87d4lostxv.fsf@wine.dyndns.org>

Andrew Talbot <andrew.talbot at talbotville.com> writes:

> Anything wrong with this patch? It does accord with GL/gl.h.

You should fix the other functions too, there are many more similar
cases.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Jul  8 02:45:10 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 08 Jul 2008 09:45:10 +0200
Subject: kernel32: GetPrivateProfileString should set buffer to "" if
	default value is not set (resend)
In-Reply-To: <a71bd89a0807070532t3518222bt5dbea542bc2ab9f3@mail.gmail.com>
	(Dan Kegel's message of "Mon, 7 Jul 2008 05:32:07 -0700")
References: <a71bd89a0807070532t3518222bt5dbea542bc2ab9f3@mail.gmail.com>
Message-ID: <878wwcsttl.fsf@wine.dyndns.org>

"Dan Kegel" <dank at kegel.com> writes:

> diff --git a/dlls/kernel32/profile.c b/dlls/kernel32/profile.c
> index 9b6b1a1..e52cd66 100644
> --- a/dlls/kernel32/profile.c
> +++ b/dlls/kernel32/profile.c
> @@ -1114,9 +1114,10 @@ static int PROFILE_GetPrivateProfileString( LPCWSTR section, LPCWSTR entry,
>      } else if (buffer && def_val) {
>         lstrcpynW( buffer, def_val, len );
>         ret = strlenW( buffer );
> -    }
> -    else
> +    } else {
> +       buffer[0] = 0; /* buffer must be a null terminated empty string */
>         ret = 0;

What if len is 0?  What if buffer is NULL?

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Jul  8 02:51:51 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 08 Jul 2008 09:51:51 +0200
Subject: shell32[1/2]: RunFileDlg: allow custom icon
In-Reply-To: <487216FF.5030305@zalewski.pl> (=?utf-8?Q?=22Miko=C5=82aj?=
	Zalewski"'s message of "Mon, 07 Jul 2008 15:15:43 +0200")
References: <487216FF.5030305@zalewski.pl>
Message-ID: <874p70stig.fsf@wine.dyndns.org>

Miko?aj Zalewski <mikolaj at zalewski.pl> writes:

> diff --git a/dlls/shell32/dialogs.c b/dlls/shell32/dialogs.c
> index 0e858b8..a30cf33 100644
> --- a/dlls/shell32/dialogs.c
> +++ b/dlls/shell32/dialogs.c
> @@ -139,9 +139,11 @@ static INT_PTR CALLBACK RunDlgProc (HWND hwnd, UINT message, WPARAM wParam, LPAR
>              if (prfdp->uFlags & RFF_CALCDIRECTORY)
>                  FIXME("RFF_CALCDIRECTORY not supported\n");
>  
> +            if (prfdp->hIcon == NULL)
> +                prfdp->hIcon = (WPARAM)LoadIconW(NULL, (LPCWSTR)IDI_WINLOGO);
>              SetClassLongPtrW (hwnd, GCLP_HICON, (LPARAM)prfdp->hIcon) ;
> -            SendMessageW (GetDlgItem (hwnd, IDC_RUNDLG_ICON), STM_SETICON,
> -                          (WPARAM)LoadIconW (NULL, (LPCWSTR)IDI_WINLOGO), 0);
> +            SendMessageW(GetDlgItem(hwnd, IDC_RUNDLG_ICON), STM_SETICON, (WPARAM)prfdp->hIcon, 0);
> +

The SetClassLongPtrW call is very wrong, you should probably fix that
too while you're at it.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Jul  8 02:54:40 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 08 Jul 2008 09:54:40 +0200
Subject: services: when displayname is absent,
	the keyname should be used when searching by displayname (fixes bug
	#13958)
In-Reply-To: <487218EE.9080007@zalewski.pl> (=?utf-8?Q?=22Miko=C5=82aj?=
	Zalewski"'s message of "Mon, 07 Jul 2008 15:23:58 +0200")
References: <487218EE.9080007@zalewski.pl>
Message-ID: <87zlosretb.fsf@wine.dyndns.org>

Miko?aj Zalewski <mikolaj at zalewski.pl> writes:

> diff --git a/programs/services/services.c b/programs/services/services.c
> index 36ed117..b166d51 100644
> --- a/programs/services/services.c
> +++ b/programs/services/services.c
> @@ -344,7 +344,7 @@ struct service_entry *scmdatabase_find_service_by_displayname(struct scmdatabase
>  
>      LIST_FOR_EACH_ENTRY(service, &db->services, struct service_entry, entry)
>      {
> -        if (strcmpiW(name, service->config.lpDisplayName) == 0)
> +        if (strcmpiW(name, get_display_name(service)) == 0)
>              return service;
>      }

You should not change scmdatabase_find_service_by_displayname, it does
what its name implies. You should fix the callers where necessary.

-- 
Alexandre Julliard
julliard at winehq.org


From wine at mkarcher.dialup.fu-berlin.de  Tue Jul  8 03:23:29 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Tue, 08 Jul 2008 10:23:29 +0200
Subject: quartz: Fix deadlock with transform filter, try 2
In-Reply-To: <b130c85e0807071822p48f14alb7375b52d9d2f236@mail.gmail.com>
References: <b130c85e0807071822p48f14alb7375b52d9d2f236@mail.gmail.com>
Message-ID: <1215505409.13792.1.camel@hermes2.karcher.local>

Am Montag, den 07.07.2008, 18:22 -0700 schrieb Maarten Lankhorst:
> Reworks the code so that the lock is taking in the called procedures now.

> +    InputPin *pin = (InputPin *)pTransformFilter->ppPins[0];
> +
> +    EnterCriticalSection(&pTransformFilter->csFilter);
> +    if (pTransformFilter->state == State_Stopped)
> +    {
> +        LeaveCriticalSection(&pTransformFilter->csFilter);
> +        return VFW_E_WRONG_STATE;
> +    }

I have to admit that I don't know anything about quartz. Are you sure
you may access pTransformFilter->ppPins[0] before taking the lock?

Regards,
  Michael Karcher




From julliard at winehq.org  Tue Jul  8 04:10:19 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 08 Jul 2008 11:10:19 +0200
Subject: [PATCH 2/2] user32: Set SWP_NOSIZE for windows with SWP_NOREDRAW.
In-Reply-To: <558b2f5c0807071701u5e18ede0i8f69fc078505f3f3@mail.gmail.com>
	(Lei Zhang's message of "Mon, 7 Jul 2008 17:01:38 -0700")
References: <558b2f5c0807071701u5e18ede0i8f69fc078505f3f3@mail.gmail.com>
Message-ID: <87skukrbb8.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> @@ -1808,6 +1808,10 @@ static BOOL fixup_flags( WINDOWPOS *winpos )
>      if ((wndPtr->rectWindow.right - wndPtr->rectWindow.left == winpos->cx) &&
>          (wndPtr->rectWindow.bottom - wndPtr->rectWindow.top == winpos->cy))
>          winpos->flags |= SWP_NOSIZE;    /* Already the right size */
> +    else if (((winpos->flags & (SWP_NOZORDER|SWP_NOREDRAW|SWP_FRAMECHANGED|SWP_NOACTIVATE)) == SWP_NOREDRAW) &&
> +        (wndPtr->rectWindow.right - wndPtr->rectWindow.left == origSize.x) &&
> +        (wndPtr->rectWindow.bottom - wndPtr->rectWindow.top == origSize.y))
> +        winpos->flags |= SWP_NOSIZE;    /* Already the right size */

It makes no sense to compare the window rect against the original size
since the window rect hasn't been changed yet, it will always
match. Also I fail to see why this would have anything to do with
SWP_NOREDRAW. I think you are on the wrong track with this bug.

-- 
Alexandre Julliard
julliard at winehq.org


From max at veneto.com  Tue Jul  8 04:15:32 2008
From: max at veneto.com (Massimo Del Fedele)
Date: Tue, 08 Jul 2008 11:15:32 +0200
Subject: [RESEND]MSI:ACTION_AppSearchReg() should return backslash
	terminated paths - Solves bug 13838
In-Reply-To: <22821af30807071220p369cfc07uaf937b8f09066cde@mail.gmail.com>
References: <48723086.6020001@veneto.com>	<22821af30807070930g29a62156g3fe054cc7019f205@mail.gmail.com>	<g4totb$31g$1@ger.gmane.org>
	<22821af30807071220p369cfc07uaf937b8f09066cde@mail.gmail.com>
Message-ID: <g4vb7l$jb5$1@ger.gmane.org>

James Hawkins ha scritto:
> On Mon, Jul 7, 2008 at 1:56 PM, Massimo Del Fedele <max at veneto.com> wrote:
> 
> Listen, I don't want to come off as mean, but like you say yourself,
> you are not knowledgeable about msi or the Win32 API for that matter.
> AppSearchReg queries the specified registry entry for a directory to
> check for its existence.  You say, "in reg, where paths are
> un-slashed."  There is no such definition of paths in the registry.  A
> registry value contains whatever value the user set it to.
I obviously meant "values contained in registry that are paths", but it 
seemed to me clear enough how I said.
We are talking about values in registry which REPRESENTS paths, and are 
REPRESENTED in registry as not backslash terminated paths, as all 
registry contained paths that I'm aware of.
> 
> 
> Again, what does that have to do with anything?  This is the special
> MSI properties code...not the AppSearch action.  You are trying to
> relate all these disparate parts that are completely unrelated.
> 
That HAS to do with the other case, because AppSearchReg is used, among 
others, to retrieve paths from registry and  set corresponding local 
properties.
If you look deeply enough inside code (no time now to copy/paste it), 
you'll see that LOCAL path properties (as LOCALAPPFOLDER, for example) 
are get from registry using AppSearch and set up with its returning 
value. EXACTLY as my example reported before about the hard-coded global 
properties, where paths are read from registry, a backslash is appended 
and are stored as global properties. The ONLY difference is the missing 
"append-the-backslash" stuff when setting up local path properties.
I can see a STRONG relation between them, don't you ?
.................
> 
> By definition you can't know if it's correct unless you add tests for
> it, and even then you can never be 100% sure (but it's pretty close).
> 
You can't even with 100 tests. What you can have is a "reasonable 
knowledge" that it "should" be right.
What I've done in my (buggy indeed) patch was to limit intervention to 
just ONE problem.
>> Maybe it doesn't fix the universe, but it does fix a bug, and
>> just THAT bug, without fiddling with other stuffs.
> 
> ...and maybe it breaks some other apps.  You act like I don't think
> your fix is correct.  It probably is correct, but that's not the
> point.  It's not tested, so you can't be certain that it's correct.  I
> already said I'd add a test, so I don't know why you keep going on
> about this.
I do because I'm convinced that the way I solved is ONE of possible 
RIGHT ways, and because I've got tons of people that would like to run 
the autocad application without having to build wine from 
source...That's all. I still think it's better a partial fix that solves 
a problem for many people than wait for a 
"maybe-perfect-fix-in-another-year-or-so". I've seen tons of patches 
that caused regressions, you're right on it, but mine is so simple and 
straightforward that simply can't do harm, but solves a problem.
Nobody says that a "better" patch can't be applied in future.
I located the problem since... let's say 3 months ? as nothing was 
moving, I found an hack that solved the problem, at first, and, as 
nothing was moving on  again I added a patch that do the same without 
being an hack.
Autocad is one of most requested apps for wine, and nothing was moving 
since years... I'd say about 5-6 years, when I found some solution for 
R14 and 2000 versions.

> 
>> But maybe you wanted to say that is ACTION_SearchDirectory() that must
>> be patched ?
> 
> Yes.  I thought that was obvious, but I'll try to not make those
> assumptions again.
Me too. As I said, my patch solves ONE problem, not all related ones.
We're speaking about it since 3 weeks, now, and I still haven't seen a 
better solution nor a demonstration that my way is bad.
> 
>> Maybe that's right. BUT then, as it's not an exported
>> function, you should test ALL usages of it and see if that's a correct
>> behaviour. Well, It's used just in AppSearchDr, besides of
>> AppSearchReg(). Maybe, knowing what is for AppSearchDr() I could know if
>> it's correct to have its result backslashed too... But I don't. Again,
>> my skills on MSI are *very* limited. I've chosen to fix just something I
>> know must be fixed instead of try to fix the world without knowing
>> anything about it. Wrong ?
>>
> 
> Yes.  You're verifying everything I've told you several times.
> 
I already verified that the patch does no harm AND solves a problem.
For me that's more than enough.

Ciao

Max



From liquid.acid at gmx.net  Tue Jul  8 04:32:52 2008
From: liquid.acid at gmx.net (Tobias Jakobi)
Date: Tue, 08 Jul 2008 11:32:52 +0200
Subject: [1/3] [d3d8] Add testcase for IDirect3DDevice8::CreateImageSurface
References: 487275A6.8070706@gmx.net
Message-ID: <48733444.40500@gmx.net>

Intended, see patch 2/3 - the testcase is activated there (since it pass 
then).


From vitperov at etersoft.ru  Tue Jul  8 05:00:39 2008
From: vitperov at etersoft.ru (Vitaly Perov)
Date: Tue, 8 Jul 2008 14:00:39 +0400
Subject: mscoree:GetCORSystemDirectory. Need advice
Message-ID: <200807081400.42772.vitperov@etersoft.ru>

Hi!

I hame implemented mscoree:GetCORSystemDirectory function. (Patch included)
It find a folder of the latest .Net installation in the registry.

So there are several problems:
1) Registry entry doesn't exist. I don't know how to add it correctly. Now I 
import it from the Windows registry by regedit.
2) The folder of .Net installation doesn't exist.

So, does somebody know how to solve these problems?

Thank you!

-- 
Best wishes,
Vitaly Perov
Russia, Saint-Petersburg. www.etersoft.ru


From julliard at winehq.org  Tue Jul  8 05:09:33 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 08 Jul 2008 12:09:33 +0200
Subject: mswsock:Implement 3 functions by calling through
	SIO_GET_EXTENSION_FUNCTION_POINTER (try 3)
In-Reply-To: <488959.26616.qm@web56601.mail.re3.yahoo.com> (Jon Griffiths's
	message of "Sun, 6 Jul 2008 09:41:09 -0700 (PDT)")
References: <488959.26616.qm@web56601.mail.re3.yahoo.com>
Message-ID: <87lk0cr8ki.fsf@wine.dyndns.org>

Jon Griffiths <jon_p_griffiths at yahoo.com> writes:

> +BOOL WINAPI AcceptEx(SOCKET listener, SOCKET acceptor, PVOID dest, DWORD dest_len,
> +                     DWORD local_addr_len, DWORD rem_addr_len, LPDWORD received,
> +                     LPOVERLAPPED overlapped)
>  {
> -    FIXME("(listen=%ld, accept=%ld, %p, %d, %d, %d, %p, %p), not implemented\n",
> -	sListenSocket,sAcceptSocket,lpOutputBuffer,dwReceiveDataLength,
> -	dwLocalAddressLength,dwRemoteAddressLength,lpdwBytesReceived,lpOverlapped
> -    );
> +    EnterCriticalSection(&MSWSOCK_CritSect);
> +    if (!acceptex_fn)
> +    {
> +        /* Get pointers to the ws2_32 implementations.
> +         * NOTE: This assumes that ws2_32 contains only one implementation
> +         * of these functions, i.e. that you cannot get different functions
> +         * back by passing another socket in. If that ever changes, we'll need
> +         * to think about associating the functions with the socket and
> +         * exposing that information to this dll somehow.
> +         */
> +        const GUID acceptex_guid = WSAID_ACCEPTEX;
> +        const GUID acceptexsockaddrs_guid = WSAID_GETACCEPTEXSOCKADDRS;
> +        DWORD len;
> +        WSAIoctl(acceptor, SIO_GET_EXTENSION_FUNCTION_POINTER,
> +                 (void*)&acceptex_guid, sizeof(acceptex_guid),
> +                 &acceptex_fn, sizeof(acceptex_fn), &len, NULL, NULL);
> +        WSAIoctl(acceptor, SIO_GET_EXTENSION_FUNCTION_POINTER,
> +                 (void*)&acceptexsockaddrs_guid, sizeof(acceptexsockaddrs_guid),
> +                 &acceptexsockaddrs_fn, sizeof(acceptexsockaddrs_fn), &len, NULL, NULL);
> +    }
> +    LeaveCriticalSection(&MSWSOCK_CritSect);

You don't need a crit section since you assume that the pointers are
always the same, but you do need to fetch them into local variables and
check for error before setting the global ones.

> +    static const GUID guid = WSAID_TRANSMITFILE;
> +    LPFN_TRANSMITFILE fn;
> +    DWORD len;
>  
> -    return FALSE;
> +    /* Use the implementation provided by ws2_32 */
> +    if (WSAIoctl(s, SIO_GET_EXTENSION_FUNCTION_POINTER,
> +                 (void*)&guid, sizeof(guid), &fn, sizeof(fn), &len, NULL, NULL))
> +        return FALSE;
> +
> +    return fn(s, file, total_len, chunk_len, overlapped, buffers, flags);

You should store this one globally too, no need to do the ioctl on every
call.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Jul  8 05:17:06 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 08 Jul 2008 12:17:06 +0200
Subject: ws2_32: Partial implementation of TransmitFile/TransmitPackets
In-Reply-To: <956644.22071.qm@web56609.mail.re3.yahoo.com> (Jon Griffiths's
	message of "Sun, 6 Jul 2008 04:33:51 -0700 (PDT)")
References: <956644.22071.qm@web56609.mail.re3.yahoo.com>
Message-ID: <87ej64r87x.fsf@wine.dyndns.org>

Jon Griffiths <jon_p_griffiths at yahoo.com> writes:

> +            while (send_len)
> +            {
> +                wsabuf.len = send_len;
> +                if (wsabuf.len > chunk_len)
> +                    wsabuf.len = chunk_len;
> +                if (!ReadFile(packet->u.s.hFile, wsabuf.buf, wsabuf.len, NULL, NULL) ||
> +                    WSASendTo(s, &wsabuf, 1, &n, 0, NULL, 0, NULL, NULL) == SOCKET_ERROR)
> +                    goto TransmitPackets_fail;

Both ReadFile and WSASendTo will return the number of bytes
read/written, you need to take that into account.

> +                if (WSASendTo(s, &wsabuf, 1, &n, 0, NULL, 0, NULL, NULL) == SOCKET_ERROR)
> +                    goto TransmitPackets_fail;
> +                send_len -= wsabuf.len;
> +                wsabuf.buf += wsabuf.len;

Same here.

> +        packet->cLength = total_len;
> +        /* FIXME: I'm not certain we should always use the current file
> +         * position (rather than the start of the file), though it works
> +         * for mapache.exe.
> +         */

Some test cases would be a good idea.

-- 
Alexandre Julliard
julliard at winehq.org


From razielmine at gmail.com  Tue Jul  8 05:31:11 2008
From: razielmine at gmail.com (RazZziel)
Date: Tue, 8 Jul 2008 13:31:11 +0300
Subject: Midterm evaluations for summer of code students
In-Reply-To: <b130c85e0807071439q327aa037xa8b5743da2794416@mail.gmail.com>
References: <b130c85e0807071439q327aa037xa8b5743da2794416@mail.gmail.com>
Message-ID: <82e274890807080331y6c00dd9fl9fd1068d99f3f5b2@mail.gmail.com>

I've been cleaning my patches, thanks to the infinite patience of Kai,
and I'm starting to send them right now. However my progress can be
tracked in http://repo.or.cz/w/wine/gsoc_dplay.git

The main problem so far was to adapt my workflow to an style I've
never worked with, and to realize I still have too much to learn :P

My first milestone is mostly accomplished: most tests are done, but
the implementation is less improved than I expected. I only commited
some trivial patches, but at least I started understanding what is
done and what has to be done (which should have been done when writing
my application and schedule, but, well.)
I'm facing some problems understanding the current dplay codebase, but
it's probably I feel overwhelmed all this new COM platform, unknown to
me, and with some effort it's not so complex.

Summing up, I still have to (stop slacking and) study a lot before
doing anything really productive.

Regards
Ismael

On 7/8/08, Maarten Lankhorst <m.b.lankhorst at gmail.com> wrote:
> Hi students,
>
> As you might know it's time for midterm evaluations. Unfortunately for
> some students I haven't seen the progress they made, and I highly
> encourage all students to send their patches early and often, even if
> it's not yet finished.
>
> Also, I would like to hear from all students now a reflection. What
> went well, and what didn't, and what did you accomplish so far? :-)
>
> Cheers,
> Maarten.
>
>
>


-- 
...yet even then, we ran like the wind, whilst our laughter echoed,
under cerulean skies...


From mstefani at redhat.com  Tue Jul  8 07:24:22 2008
From: mstefani at redhat.com (Michael Stefaniuc)
Date: Tue, 08 Jul 2008 14:24:22 +0200
Subject: riched20: Fix typo.
In-Reply-To: <5c6ee3b70807080512j252f05c9gb1842cde74a1ad00@mail.gmail.com>
References: <20080708120526.GA8998@redhat.com>
	<5c6ee3b70807080512j252f05c9gb1842cde74a1ad00@mail.gmail.com>
Message-ID: <48735C76.8010903@redhat.com>

Dylan Smith wrote:
> Yes, that is right.
> 
> Thanks for catching that.
> 
> By the way, should I be replying to wine-devel? Or should I only be doing
> that if something is wrong with the patch so that Julliard can ignore it?
This should do.

thanks
bye
	michael

> On Tue, Jul 8, 2008 at 8:05 AM, Michael Stefaniuc <mstefani at redhat.com>
> wrote:
> 
>> This fixes a warning introduced by 69cf4e9a :
>> dlls/riched20/editor.c:1647: warning: 'clickMsg.pt.y' is used uninitialized
>> in this function
>>
>>
>> ---
>> Dylan, please confirm that I have replaced the right 'x'.
>>
>>
>>  dlls/riched20/editor.c |    2 +-
>>  1 files changed, 1 insertions(+), 1 deletions(-)
>>
>> diff --git a/dlls/riched20/editor.c b/dlls/riched20/editor.c
>> index 7e90096..c285733 100644
>> --- a/dlls/riched20/editor.c
>> +++ b/dlls/riched20/editor.c
>> @@ -1643,7 +1643,7 @@ static int ME_CalculateClickCount(HWND hWnd, UINT
>> msg, WPARAM wParam,
>>         clickMsg.lParam = lParam;
>>         clickMsg.time = GetMessageTime();
>>         clickMsg.pt.x = LOWORD(lParam);
>> -        clickMsg.pt.x = HIWORD(lParam);
>> +        clickMsg.pt.y = HIWORD(lParam);
>>         if ((clickNum != 0) &&
>>             (clickMsg.message == prevClickMsg.message) &&
>>             (clickMsg.hwnd == prevClickMsg.hwnd) &&
>> --
>> 1.5.6.2
>>
> 


-- 
Michael Stefaniuc                           Tel.: +49-711-96437-199
Consulting Communications Engineer          Fax.: +49-711-96437-111
--------------------------------------------------------------------
Reg. Adresse: Red Hat GmbH, Otto-Hahn-Strasse 20, 85609 Dornach bei Muenchen
Handelsregister: Amtsgericht Muenchen HRB 153243
Gesch?ftsf?hrer: Brendan Lane, Charlie Peters, Michael Cunningham,
                  Werner Knoblich


From hverbeet at gmail.com  Tue Jul  8 07:35:17 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Tue, 8 Jul 2008 14:35:17 +0200
Subject: [1/3] [d3d8] Add testcase for
	IDirect3DDevice8::CreateImageSurface (correct)
In-Reply-To: <48735D80.8070502@gmx.net>
References: <48735D80.8070502@gmx.net>
Message-ID: <d658b69e0807080535q40235a90ie8e3a2108154f58a@mail.gmail.com>

Looks ok to me.


From liquid.acid at gmx.net  Tue Jul  8 07:37:58 2008
From: liquid.acid at gmx.net (Tobias Jakobi)
Date: Tue, 08 Jul 2008 14:37:58 +0200
Subject: [1/3] [d3d8] Add testcase for IDirect3DDevice8::CreateImageSurface
References: 487275A6.8070706@gmx.net
Message-ID: <48735FA6.4090809@gmx.net>

Posted a alternate version of the patchset to wine-patches, now using 
todo_wine and activating the testcase in the first patch.
Patch no. 3 didn't change though, but I reposted it anyway.

Greets,
Tobias


From vitperov at etersoft.ru  Tue Jul  8 08:40:49 2008
From: vitperov at etersoft.ru (Vitaly Perov)
Date: Tue, 8 Jul 2008 17:40:49 +0400
Subject: mscoree:GetCORSystemDirectory. Need advice
In-Reply-To: <200807081400.42772.vitperov@etersoft.ru>
References: <200807081400.42772.vitperov@etersoft.ru>
Message-ID: <200807081740.49425.vitperov@etersoft.ru>

I'm sorry. I forgot to attach a patch.
-- 
Best wishes,
Vitaly Perov
Russia, Saint-Petersburg. www.etersoft.ru
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-mscoree-add-implementation-of-GetCORSystemDirectory.patch
Type: text/x-diff
Size: 4737 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080708/de172112/attachment.patch 

From amorozov at etersoft.ru  Tue Jul  8 09:05:38 2008
From: amorozov at etersoft.ru (Alexander Morozov)
Date: Tue, 8 Jul 2008 18:05:38 +0400
Subject: Support of USB hardware tokens
In-Reply-To: <a71bd89a0807070442p3bd7ea3x463aaf3810a006a1@mail.gmail.com>
References: <a71bd89a0807070442p3bd7ea3x463aaf3810a006a1@mail.gmail.com>
Message-ID: <200807081805.38572.amorozov@etersoft.ru>

> Yes, add conformance tests for the new ntoskrnl functions
> and usbd.sys, and break the patch up a lot...

Conformance tests should consist of a driver and a program to load 
it. I do not know other method to call functions from ntoskrnl.exe and 
usbd.sys on Windows. But I have a problem with building drivers with MinGW. I 
was able to create a driver which is loading on Wine with manual editing of 
PE header but it does not work on Windows and I do not understand what should 
change to fix this. Did somebody build NT drivers with MinGW?


From wine-devel at kievinfo.com  Tue Jul  8 09:20:23 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Tue, 08 Jul 2008 08:20:23 -0600
Subject: [RESEND]MSI:ACTION_AppSearchReg() should return
	backslash	terminated paths - Solves bug 13838
In-Reply-To: <g4vb7l$jb5$1@ger.gmane.org>
References: <48723086.6020001@veneto.com>	<22821af30807070930g29a62156g3fe054cc7019f205@mail.gmail.com>	<g4totb$31g$1@ger.gmane.org>	<22821af30807071220p369cfc07uaf937b8f09066cde@mail.gmail.com>
	<g4vb7l$jb5$1@ger.gmane.org>
Message-ID: <487377A7.9000000@kievinfo.com>

Massimo Del Fedele wrote:
>> Yes.  You're verifying everything I've told you several times.
>>
> I already verified that the patch does no harm AND solves a problem.
> For me that's more than enough.

Please make a test and submit it along with your patch. Otherwise your 
changes won't get in.


Vitaliy.


From xerox_xerox2000 at yahoo.co.uk  Tue Jul  8 09:59:13 2008
From: xerox_xerox2000 at yahoo.co.uk (Louis Lenders)
Date: Tue, 8 Jul 2008 14:59:13 +0000 (UTC)
Subject: programs: add rudimentary dxdiag
References: <383400.99845.qm@web23204.mail.ird.yahoo.com>
	<b6bb06270806300815va6d1af4m300ba84a952ed272@mail.gmail.com>
	<1214927433.5786.8.camel@p4>
	<loom.20080702T225227-47@post.gmane.org>
	<1215350744.5568.44.camel@p4.lan>
Message-ID: <loom.20080708T145147-701@post.gmane.org>

Detlef Riekenberg <wine.dev <at> web.de> writes:

> 

> 
> Louis, please do not give up and reopen the bug.
> You got already some comments, and I want to give some more Ideas.
> 
> - You told, that you reuse the code for the cube from the internet.
>   That is a no-go because of copyright and license issues!
>   Where does the code came from?
>   What is the license for that code?
As already said, from tutorials scattered allover the internet,
www.codesampler for example. I'm not sure what the license code 
for a tutorial is. Is the "hello world" tutorial also copyrighted?

> 
> - You told, that minimizing the Cube-Window does not work now,
>   but worked in an old Wine.
>   You think, that this is an Regression in Wine.
>   It's also possible, that there was an bug in Wine which is now fixed 
>   and your dxdiag code is not correct.
I'd have to check by compiling a windows executable. If it runs 
in windows, it should run in wine.


>   Again, a clean implementation can avoid this issue.
> 
As long as simple stub is not accepted i cannot even start with that. Anyway,
thanks for your comments Detlef. Regards









From shelnutt2 at gmail.com  Tue Jul  8 10:21:28 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Tue, 8 Jul 2008 11:21:28 -0400
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807071944q3d1b308an8927ab819ed8d057@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<003901c8e04e$326e75f0$974b61d0$@com>
	<6fc03d800807070959y28b71fbapa0d77469c907828a@mail.gmail.com>
	<6fc03d800807071009o334d653k38fd88ee3ef16a4f@mail.gmail.com>
	<3a768c550807071021i1c340bb1p5f228026b1fcc03b@mail.gmail.com>
	<6fc03d800807071352t2c366951wb12909ad8a8dcf9@mail.gmail.com>
	<3a768c550807071429g269fac10qfd85d1c777cc7e6a@mail.gmail.com>
	<6fc03d800807071451u314e0e7axa8130a14536e29c6@mail.gmail.com>
	<3a768c550807071459wbaf05ectb4b9ad17d5d2997a@mail.gmail.com>
	<6fc03d800807071944q3d1b308an8927ab819ed8d057@mail.gmail.com>
Message-ID: <6fc03d800807080821q71223f1eqf83d83ec252235bf@mail.gmail.com>

I think I am using winemaker wrong. It does not give me a .res file as the
winelib user's guide says I need, and the guide says I should be getting a
Makefile.in and configure script. When I try to use it and link to the
libcudart.so.2.0 file it acts like the target directory is libcudart.so.2.0

shelnutt at Ubuntu32-L:~/wine/patches/cuda$ winemaker --nosource-fix --dll
-Ldir /usr/local/cuda/lib/ -library libcudart.so.2.0
error: the work directory, "libcudart.so.2.0", has already been specified
(was "/usr/local/cuda/lib/")

I'm not sure if just the winelib guide is out of date, it says many of the
parts are, or if I'm not understanding it right. I've also looked at the man
page for  winemaker and I guess I just don't get how to specify which files
to link to.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080708/19a489f3/attachment-0001.htm 

From mikolaj at zalewski.pl  Tue Jul  8 10:54:32 2008
From: mikolaj at zalewski.pl (=?UTF-8?B?TWlrb8WCYWogWmFsZXdza2k=?=)
Date: Tue, 08 Jul 2008 17:54:32 +0200
Subject: services: when displayname is absent, the keyname should be used
	when searching by displayname (fixes bug #13958)
In-Reply-To: <87zlosretb.fsf@wine.dyndns.org>
References: <487218EE.9080007@zalewski.pl> <87zlosretb.fsf@wine.dyndns.org>
Message-ID: <48738DB8.6040204@zalewski.pl>


>You should not change scmdatabase_find_service_by_displayname, it does
>what its name implies. You should fix the callers where necessary.
>  
>
  The scmdatabase_find_service_by_displayname is currently wrong. It 
dereferences a NULL pointer if the registry database contains a service 
without a display name. The callers can't do anything about that.
  Both callers expects that if the display name is not explicitly set, 
the key name should be used as the display name - it looks like a 
general rule (I've just found that QueryServiceConfig also needs such a 
feature). Alternatively, code could be added to load_service_config and 
CreateService to set lpDisplayName to service->name if the display name 
is not present in the registery. However, this would create a 
side-effect not present on Windows - this display name would be written 
to the registery after e.g. a ChangeServiceConfig.

Mikolaj Zalewski


From juan.lang at gmail.com  Tue Jul  8 10:58:13 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Tue, 8 Jul 2008 08:58:13 -0700
Subject: [RESEND]MSI:ACTION_AppSearchReg() should return backslash
	terminated paths - Solves bug 13838
In-Reply-To: <g4vb7l$jb5$1@ger.gmane.org>
References: <48723086.6020001@veneto.com>
	<22821af30807070930g29a62156g3fe054cc7019f205@mail.gmail.com>
	<g4totb$31g$1@ger.gmane.org>
	<22821af30807071220p369cfc07uaf937b8f09066cde@mail.gmail.com>
	<g4vb7l$jb5$1@ger.gmane.org>
Message-ID: <3a768c550807080858o97e6897l8dbe4ad73a85c94b@mail.gmail.com>

> I already verified that the patch does no harm AND solves a problem.
> For me that's more than enough.

That's fine for a patch for your local tree, but it's not enough for
Wine.  Submit with a test case that proves you're right and we'll be
more likely to accept your patch.
--Juan


From adam at tpetaccia.com  Tue Jul  8 11:14:38 2008
From: adam at tpetaccia.com (Adam Petaccia)
Date: Tue, 08 Jul 2008 12:14:38 -0400
Subject: Midterm evaluations for summer of code students
In-Reply-To: <b130c85e0807071439q327aa037xa8b5743da2794416@mail.gmail.com>
References: <b130c85e0807071439q327aa037xa8b5743da2794416@mail.gmail.com>
Message-ID: <1215533678.7843.8.camel@belthazor-saved.triad.rr.com>

On Mon, 2008-07-07 at 14:39 -0700, Maarten Lankhorst wrote:
> Hi students,
> 
> As you might know it's time for midterm evaluations. Unfortunately for
> some students I haven't seen the progress they made, and I highly
> encourage all students to send their patches early and often, even if
> it's not yet finished.
> 
> Also, I would like to hear from all students now a reflection. What
> went well, and what didn't, and what did you accomplish so far? :-)

So far I've accomplished a great amount of text handling functions
(FontFamilies, FontCollections, and StringFormat) (which I need to clean
up before sending) in GDI+, and I expect to have those finished by next
week (putting me a week behind where I want to be), but I'm also working
on GpRegion handling now (as oddly enough, a few StringFormat functions
need it).

For what hasn't gone so well, I still need work on focusing on
_one_or_two_ sub-projects at once (mild ADD at work) - as a bunch of
half finished projects don't help too much. The other is sticking closer
to test-driven development. I've often found myself caught up on why my
code doesn't make some app work, and it becomes clear once a simple
testcase is written (or at least clear what isn't the problem).

This has been a very rewarding and empowering experience, and I look
forward to contributing to Wine after Summer of Code is finished.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080708/52d48cea/attachment.pgp 

From zac at zacbrown.org  Tue Jul  8 11:39:54 2008
From: zac at zacbrown.org (Zac Brown)
Date: Tue, 08 Jul 2008 09:39:54 -0700
Subject: [RESEND]MSI:ACTION_AppSearchReg() should return
	backslash	terminated paths - Solves bug 13838
In-Reply-To: <g4vb7l$jb5$1@ger.gmane.org>
References: <48723086.6020001@veneto.com>	<22821af30807070930g29a62156g3fe054cc7019f205@mail.gmail.com>	<g4totb$31g$1@ger.gmane.org>	<22821af30807071220p369cfc07uaf937b8f09066cde@mail.gmail.com>
	<g4vb7l$jb5$1@ger.gmane.org>
Message-ID: <4873985A.8050804@zacbrown.org>

Massimo Del Fedele wrote:

> I already verified that the patch does no harm AND solves a problem.
> For me that's more than enough.
> 
> Ciao
> 
> Max
> 

Can you provide proof that beyond the shadow of a doubt it will always be 
correct? One way to provide that proof is to write a test.

-Zac




From truiken at gmail.com  Tue Jul  8 11:43:53 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 8 Jul 2008 11:43:53 -0500
Subject: user32: sizeof DDEPOKE and DDEDATA is six,
	which is probably not what is expected, so use offsetof instead.
In-Reply-To: <48739583.40e2220a.30c3.7b6eSMTPIN_ADDED@mx.google.com>
References: <48739583.40e2220a.30c3.7b6eSMTPIN_ADDED@mx.google.com>
Message-ID: <22821af30807080943r45141921qf7f81499c1bdda19@mail.gmail.com>

2008/7/8 Huw Davies <huw at codeweavers.com>:
>
> Fixes a todo_wine and a Valgrind warning.

@@ -699,10 +699,7 @@ static HDDEDATA CALLBACK
server_ddeml_callback(UINT uType, UINT uFmt, HCONV hcon

         ptr = (LPSTR)DdeAccessData(hdata, &size);
         ok(!lstrcmpA(ptr, "poke data\r\n"), "Expected 'poke
data\\r\\n', got %s\n", ptr);
-        todo_wine
-        {
-            ok(size == 14, "Expected 14, got %d\n", size);
-        }
+        ok(size == 12, "Expected 12, got %d\n", size);
         DdeUnaccessData(hdata);

         size = DdeQueryStringA(server_pid, hsz2, str, MAX_PATH, CP_WINANSI);

You changed the value of the test.  Did you mean to do that?

-- 
James Hawkins


From owen at owenrudge.net  Tue Jul  8 12:14:33 2008
From: owen at owenrudge.net (Owen Rudge)
Date: Tue, 8 Jul 2008 18:14:33 +0100
Subject: Midterm evaluations for summer of code students
References: <b130c85e0807071439q327aa037xa8b5743da2794416@mail.gmail.com>
Message-ID: <9AFE930DF71E41488D7BCBA60F11C455@lan.owenrudge.net>

> Also, I would like to hear from all students now a reflection. What
> went well, and what didn't, and what did you accomplish so far? :-)

My project so far has gone fairly well, and I'd say I'm currently just a 
little ahead of schedule, which I'm pleased about. The first part of the 
project was to get the Control Panel working in the shell namespace, and it 
turned out that a lot of the work had already been done, it just wasn't 
glued together properly. It took me a little while to figure out what needed 
doing, but I managed to work it out and it made it into Wine 1.1. :-) I'm 
now moving onto developing some new control panel applets, and looking at 
ways to improve winecfg. I've been working on an Add/Remove Programs applet 
for the past week or so, which is now more or less complete, and will likely 
be submitted to wine-patches soon. I'm also thinking about what I'm going to 
do with winecfg, with my thinking that the bits that are not configurable on 
a per-application basis (desktop appearance and sound, mainly) can be moved 
into/reimplemented in new control panels. So that'll be my main focus over 
the next few weeks.

The biggest challenge for me now is probably working out a "work plan", and 
making sure I set targets for myself, to ensure I can try to get as much 
done and use my time efficiently. Other than that, I've learned a lot about 
the general process of Wine development, and have quite enjoyed things so 
far.

The majority of my code can be found at 
http://repo.or.cz/w/wine/gsoc_cpanel.git.

Cheers,

-- 
Owen Rudge
http://www.owenrudge.net/ 



From saulius2 at ar.fi.lt  Tue Jul  8 12:17:18 2008
From: saulius2 at ar.fi.lt (Saulius Krasuckas)
Date: Tue, 8 Jul 2008 20:17:18 +0300 (EEST)
Subject: Lots of input messages lingering in server slowing down wine
	tremendously?
In-Reply-To: <48027504.8070908@inbox.lv>
References: <48027504.8070908@inbox.lv>
Message-ID: <alpine.LFD.1.10.0807082006200.24781@katleriai.austechia.lt>

* On Mon, 14 Apr 2008, Alexander Dorofeyev wrote:
>
> I was able to isolate it in a very small and simplistic testcase, which 
> shows this same problem. It will be included as attachment. Holding a 
> key and moving mouse over the window steadily increases main loop 
> latency from 10 to 50 (and even 100) in a short time, especially so if 
> quickly clicking both mouse buttons as well. In a game this means going 
> from 100 fps to 20 or 10 just because of input messages.
    ...
> Now, I do realize that what the testcase is doing is bad practice, it's 
> basically refusing to process certain types of messages, and PeekMessage 
> just once during a loop is probably bad as well, but that's what the 
> game was originally doing in its main game loop. They do plan to fix it 
> in the game. Still, there are several concerns about it:
>
> 1) No slowdown happens of Windows as far as I can tell. No matter how 
> much I move the mouse holding key and clicking madly, it shows same 
> stable 15-16 ticks latency in the testcase. I don't know what it does, 
> but somehow it handles this situation better than Wine.

I am not minded in this area, Alexander (an am a bit away in time), but is 
it algorithmically possible to convert this code to somewhat reliable test 
case which wouln't depend on CPU perfomance(s) (by any chance)?

> #include <windows.h>
>
> HWND window;
>
> int PASCAL WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)
> {
> WNDCLASS wc = {0};
> MSG msg;
> DWORD ticks, ticks2;
> HHOOK kbd_hook, mouse_hook;
>
> wc.lpfnWndProc = &DefWindowProc;
> wc.lpszClassName = "testwc";
> RegisterClass(&wc);
> window = CreateWindow("testwc", "test", WS_OVERLAPPED | WS_VISIBLE | WS_CAPTION , 0, 0, 640, 480, 0, 0, 0, 0);
>
> ticks = GetTickCount();
>
> for (;;) {
>    if (PeekMessage(&msg, NULL, WM_NULL, WM_KEYFIRST, PM_REMOVE)) {
>        if (msg.message == WM_QUIT) {
>         DestroyWindow(window);
>         break;
>         }
>
>        TranslateMessage(&msg);
>        DispatchMessage(&msg);
>        }
>
>    //simulated work
>    ticks2 = GetTickCount();
>    for (;;) {
>        UINT i;
>        volatile int dummy = 1;
>        for (; i < 10000 && dummy; i++) ;
>        if (GetTickCount() - ticks2 >= 10) break;
>        }
>
>    printf("main loop %u tick latency\n", GetTickCount() - ticks);
>    ticks = GetTickCount();
>    }
> }


From mattfinn at gmail.com  Tue Jul  8 12:28:35 2008
From: mattfinn at gmail.com (Matt 'Murph' Finnicum)
Date: Tue, 8 Jul 2008 10:28:35 -0700
Subject: programs: add rudimentary dxdiag
In-Reply-To: <loom.20080708T145147-701@post.gmane.org>
References: <383400.99845.qm@web23204.mail.ird.yahoo.com>
	<b6bb06270806300815va6d1af4m300ba84a952ed272@mail.gmail.com>
	<1214927433.5786.8.camel@p4> <loom.20080702T225227-47@post.gmane.org>
	<1215350744.5568.44.camel@p4.lan>
	<loom.20080708T145147-701@post.gmane.org>
Message-ID: <3eba0080807081028j4f600bc1kcdc5033eb21f58e7@mail.gmail.com>


From truiken at gmail.com  Tue Jul  8 13:14:56 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 8 Jul 2008 13:14:56 -0500
Subject: bug 14357: undefined edge padding in bitmaps annoys valgrind
In-Reply-To: <4873AB0C.8050505@BitWagon.com>
References: <4873AB0C.8050505@BitWagon.com>
Message-ID: <22821af30807081114y566987e5s256eb0fa219770f3@mail.gmail.com>

On Tue, Jul 8, 2008 at 12:59 PM, John Reiser <jreiser at bitwagon.com> wrote:
> Attached is the patch for http://bugs.winehq.org/show_bug.cgi?id=14357
> undefined edge padding in bitmaps annoys valgrind
>

+    memset(image->data, 0, image->bytes_per_line * height);  /* valgrind */

I don't think we should add comments like this.  The reason for fixing
it is because some logic could potentially depend on an undefined
value, which valgrind handily warns us about.

-- 
James Hawkins


From huw at codeweavers.com  Tue Jul  8 13:18:20 2008
From: huw at codeweavers.com (Huw Davies)
Date: Tue, 08 Jul 2008 19:18:20 +0100
Subject: user32: sizeof DDEPOKE and DDEDATA is six,	which is probably
	not what is expected, so use offsetof instead.
In-Reply-To: <22821af30807080943r45141921qf7f81499c1bdda19@mail.gmail.com>
References: <48739583.40e2220a.30c3.7b6eSMTPIN_ADDED@mx.google.com>
	<22821af30807080943r45141921qf7f81499c1bdda19@mail.gmail.com>
Message-ID: <4873AF6C.70906@codeweavers.com>

James Hawkins wrote:
> 2008/7/8 Huw Davies <huw at codeweavers.com>:
>> Fixes a todo_wine and a Valgrind warning.
> 
> @@ -699,10 +699,7 @@ static HDDEDATA CALLBACK
> server_ddeml_callback(UINT uType, UINT uFmt, HCONV hcon
> 
>          ptr = (LPSTR)DdeAccessData(hdata, &size);
>          ok(!lstrcmpA(ptr, "poke data\r\n"), "Expected 'poke
> data\\r\\n', got %s\n", ptr);
> -        todo_wine
> -        {
> -            ok(size == 14, "Expected 14, got %d\n", size);
> -        }
> +        ok(size == 12, "Expected 12, got %d\n", size);
>          DdeUnaccessData(hdata);
> 
>          size = DdeQueryStringA(server_pid, hsz2, str, MAX_PATH, CP_WINANSI);
> 
> You changed the value of the test.  Did you mean to do that?

Yes.  See 'size' in create_poke().

Huw.



From truiken at gmail.com  Tue Jul  8 13:20:44 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 8 Jul 2008 13:20:44 -0500
Subject: user32: sizeof DDEPOKE and DDEDATA is six,
	which is probably not what is expected, so use offsetof instead.
In-Reply-To: <4873AF6C.70906@codeweavers.com>
References: <48739583.40e2220a.30c3.7b6eSMTPIN_ADDED@mx.google.com>
	<22821af30807080943r45141921qf7f81499c1bdda19@mail.gmail.com>
	<4873AF6C.70906@codeweavers.com>
Message-ID: <22821af30807081120r59166e80o6f1b8f2373a79d92@mail.gmail.com>

On Tue, Jul 8, 2008 at 1:18 PM, Huw Davies <huw at codeweavers.com> wrote:
> James Hawkins wrote:
>>
>> 2008/7/8 Huw Davies <huw at codeweavers.com>:
>>>
>>> Fixes a todo_wine and a Valgrind warning.
>>
>> @@ -699,10 +699,7 @@ static HDDEDATA CALLBACK
>> server_ddeml_callback(UINT uType, UINT uFmt, HCONV hcon
>>
>>         ptr = (LPSTR)DdeAccessData(hdata, &size);
>>         ok(!lstrcmpA(ptr, "poke data\r\n"), "Expected 'poke
>> data\\r\\n', got %s\n", ptr);
>> -        todo_wine
>> -        {
>> -            ok(size == 14, "Expected 14, got %d\n", size);
>> -        }
>> +        ok(size == 12, "Expected 12, got %d\n", size);
>>         DdeUnaccessData(hdata);
>>
>>         size = DdeQueryStringA(server_pid, hsz2, str, MAX_PATH,
>> CP_WINANSI);
>>
>> You changed the value of the test.  Did you mean to do that?
>
> Yes.  See 'size' in create_poke().
>

Ah yes, I'm sorry.  I couldn't put 2 and 2 together :)

-- 
James Hawkins


From julliard at winehq.org  Tue Jul  8 13:22:58 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 08 Jul 2008 20:22:58 +0200
Subject: bug 14357: undefined edge padding in bitmaps annoys valgrind
In-Reply-To: <4873AB0C.8050505@BitWagon.com> (John Reiser's message of "Tue,
	08 Jul 2008 10:59:40 -0700")
References: <4873AB0C.8050505@BitWagon.com>
Message-ID: <874p70qlq5.fsf@wine.dyndns.org>

John Reiser <jreiser at BitWagon.com> writes:

> Attached is the patch for http://bugs.winehq.org/show_bug.cgi?id=14357
> undefined edge padding in bitmaps annoys valgrind

Please stop filing bugs for your patches. Just submit the patches with a
proper changelog entry and explanations, instead of a pointer to bugzilla.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Jul  8 13:26:36 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 08 Jul 2008 20:26:36 +0200
Subject: bug 14360: dosmem forgot MAP_FIXED
In-Reply-To: <4873AC16.3010306@BitWagon.com> (John Reiser's message of "Tue,
	08 Jul 2008 11:04:06 -0700")
References: <4873AC16.3010306@BitWagon.com>
Message-ID: <87zlosp6zn.fsf@wine.dyndns.org>

John Reiser <jreiser at BitWagon.com> writes:

> Attached is the patch for http://bugs.winehq.org/show_bug.cgi?id=14360
> dosmem forgot MAP_FIXED

No, it's not forgotten, that's the way it's supposed to work. What are
you trying to fix?

-- 
Alexandre Julliard
julliard at winehq.org


From max at veneto.com  Tue Jul  8 13:52:05 2008
From: max at veneto.com (Massimo Del Fedele)
Date: Tue, 08 Jul 2008 20:52:05 +0200
Subject: [RESEND]MSI:ACTION_AppSearchReg() should return backslash
	terminated paths - Solves bug 13838
In-Reply-To: <4873985A.8050804@zacbrown.org>
References: <48723086.6020001@veneto.com>	<22821af30807070930g29a62156g3fe054cc7019f205@mail.gmail.com>	<g4totb$31g$1@ger.gmane.org>	<22821af30807071220p369cfc07uaf937b8f09066cde@mail.gmail.com>	<g4vb7l$jb5$1@ger.gmane.org>
	<4873985A.8050804@zacbrown.org>
Message-ID: <g50d0m$j4q$1@ger.gmane.org>

Zac Brown ha scritto:
> Massimo Del Fedele wrote:
> 
>> I already verified that the patch does no harm AND solves a problem.
>> For me that's more than enough.
>>
>> Ciao
>>
>> Max
>>
> 
> Can you provide proof that beyond the shadow of a doubt it will always be 
> correct? 
Nobody can :-)

One way to provide that proof is to write a test.
> 
Even a test is not 100% proof.

OTOH, the proof that as it is now is wrong, is autocad installer itself.
The patch is so simple and not invasive that IMHO the time I'd need to 
learn how to build a testcase and to do it is not worth the effort.
BTW, for me is no problem at all. I'm happy with the result on my three,
I'm using autocad on my ubuntu desktop and it works perfectly, and for 
me programming is just an hobby, autocad and civil engineering software 
belongs to my real job.
The patch was for other people wishing the same on an unpatched wine; as 
many people asked me I posted it, but the spare time I can spend on it 
is finished. If somebody else wants to take care of testcase-patch and 
so on, he's wellcome :-)

Ciao and thanx to all for answers.

Max



From julliard at winehq.org  Tue Jul  8 14:01:21 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 08 Jul 2008 21:01:21 +0200
Subject: bug 14360: dosmem forgot MAP_FIXED
In-Reply-To: <4873B5D9.2080100@BitWagon.com> (John Reiser's message of "Tue,
	08 Jul 2008 11:45:45 -0700")
References: <4873AC16.3010306@BitWagon.com> <87zlosp6zn.fsf@wine.dyndns.org>
	<4873B5D9.2080100@BitWagon.com>
Message-ID: <87vdzgp5dq.fsf@wine.dyndns.org>

John Reiser <jreiser at BitWagon.com> writes:

> Some environments strictly enforce the semantics of mmap(), namely a successful
> return value need not equal the requested address unless MAP_FIXED,
> even if the requested address is unmapped and otherwise available.
> Unless MAP_FIXED, then it is legal to return any page range that is large enough.
> Callers of the patched code were relying on getting actual fixed addresses
> in the interval [0, 0x110000).  In particular, this did not work under valgrind.

You can't use MAP_FIXED on an address that you are not sure is
available. If it wasn't reserved first, the best we can do is request
the address, and refuse to support DOS apps if we don't get it. If you
want to make this work in all cases you have to fix valgrind to allow
the preloader to do its job.

-- 
Alexandre Julliard
julliard at winehq.org


From piotr.caban at gmail.com  Tue Jul  8 14:16:14 2008
From: piotr.caban at gmail.com (Piotr Caban)
Date: Tue, 8 Jul 2008 21:16:14 +0200
Subject: Midterm evaluations for summer of code students
In-Reply-To: <b130c85e0807071439q327aa037xa8b5743da2794416@mail.gmail.com>
References: <b130c85e0807071439q327aa037xa8b5743da2794416@mail.gmail.com>
Message-ID: <200807082116.14834.piotr.caban@gmail.com>

Hello,

On Monday 07 of July 2008 23:39:25 Maarten Lankhorst wrote:
> Also, I would like to hear from all students now a reflection. What
> went well, and what didn't, and what did you accomplish so far? :-)

I've been working on two parts of my MSXML projects:
1) Fixing bugs
That went well. I have fixed Photoshop CS3 installer as well as other bugs. I 
have patches for bugs 5565, 8945, 9349, 9604, 10802, 11301, 11376, 12521, 
14386, 14260 and 5074. I have also investigated most of bugs in msxml3 
component.
2) Implementing SAX reader.
I have started working on it and written some code, but it still needs more 
work.
I have also done some work towards asynchronous reading.

The hardest thing for me was debugging Photoshop CS3 installer. It was easy to 
find missing APIs that I had to implement, but the last problem was very hard 
to find (and it's that more satisfaction from fixing it:-) ).

Regards,
	Piotr


From m.b.lankhorst at gmail.com  Tue Jul  8 14:58:17 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Tue, 8 Jul 2008 12:58:17 -0700
Subject: quartz: Fix deadlock with transform filter, try 2
In-Reply-To: <1215505409.13792.1.camel@hermes2.karcher.local>
References: <b130c85e0807071822p48f14alb7375b52d9d2f236@mail.gmail.com>
	<1215505409.13792.1.camel@hermes2.karcher.local>
Message-ID: <b130c85e0807081258i2dc93e99k527eeab50587646e@mail.gmail.com>

Hi Michael,

2008/7/8 Michael Karcher <wine at mkarcher.dialup.fu-berlin.de>:
> Am Montag, den 07.07.2008, 18:22 -0700 schrieb Maarten Lankhorst:
>> Reworks the code so that the lock is taking in the called procedures now.
>
>> +    InputPin *pin = (InputPin *)pTransformFilter->ppPins[0];
>> +
>> +    EnterCriticalSection(&pTransformFilter->csFilter);
>> +    if (pTransformFilter->state == State_Stopped)
>> +    {
>> +        LeaveCriticalSection(&pTransformFilter->csFilter);
>> +        return VFW_E_WRONG_STATE;
>> +    }
>
> I have to admit that I don't know anything about quartz. Are you sure
> you may access pTransformFilter->ppPins[0] before taking the lock?
It's safe, pins are allocated during construction, and the pointers
themselves are not modified since. Doing operations on the pin
requires the lock though.

Cheers,
Maarten.


From adam at tpetaccia.com  Tue Jul  8 16:17:08 2008
From: adam at tpetaccia.com (Adam Petaccia)
Date: Tue, 08 Jul 2008 17:17:08 -0400
Subject: gdiplus: Add a test to show that bitmap fonts aren't used for
	fontfamilies.
In-Reply-To: <B0145171438@mail3.nshosts.com>
References: <B0145171438@mail3.nshosts.com>
Message-ID: <1215551828.7616.1.camel@belthazor-saved.triad.rr.com>

On Tue, 2008-07-08 at 13:20 +0100, Huw Davies wrote:
> ---
>  dlls/gdiplus/tests/font.c |    7 +++++++
>  1 files changed, 7 insertions(+), 0 deletions(-)

On my Windows system I can't find MSSansSerif, only Microsoft Sans
Serif. I'm not sure if that's a valid test to prove that point. 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080708/13819c77/attachment.pgp 

From stefan at codeweavers.com  Tue Jul  8 16:20:10 2008
From: stefan at codeweavers.com (=?UTF-8?Q?Stefan_D=C3=B6singer?=)
Date: Tue, 8 Jul 2008 16:20:10 -0500
Subject: [PATCH 1/4] ddraw: Force surfaces without memory flags to video
	memory	on creation.
In-Reply-To: <4873D386.9000308@inbox.lv>
References: <4873D386.9000308@inbox.lv>
Message-ID: <003601c8e140$6768d820$363a8860$@com>

I think there's code that does that for render targets. It would be good if those are combined, or the render target flag adjustment just removed if it is not needed any longer

> -----Original Message-----
> From: wine-patches-bounces at winehq.org [mailto:wine-patches-
> bounces at winehq.org] On Behalf Of Alexander Dorofeyev
> Sent: Tuesday, July 08, 2008 3:52 PM
> To: wine-patches at winehq.org
> Subject: [PATCH 1/4] ddraw: Force surfaces without memory flags to
> video memory on creation.
> 
> This fixes some missing textures in Forsaken, where renderer expects to
> see that texture is in video memory and gets confused otherwise.
> 
> Tested in patch 2/4.
> ---
>   dlls/ddraw/ddraw.c   |    9 ++++++---
>   dlls/ddraw/texture.c |    6 ------
>   2 files changed, 6 insertions(+), 9 deletions(-)



From julliard at winehq.org  Tue Jul  8 16:20:27 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 08 Jul 2008 23:20:27 +0200
Subject: bug 14359:  clear new reserved slots in new argv[]
In-Reply-To: <4873ABA6.4090503@BitWagon.com> (John Reiser's message of "Tue,
	08 Jul 2008 11:02:14 -0700")
References: <4873ABA6.4090503@BitWagon.com>
Message-ID: <87k5fwoyxw.fsf@wine.dyndns.org>

John Reiser <jreiser at BitWagon.com> writes:

> Attached is the patch for http://bugs.winehq.org/show_bug.cgi?id=14359
> clear new reserved slots in new argv[]

I don't see any case where the reserved slots wouldn't be
initialized. Please provide more details.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Tue Jul  8 16:22:15 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 08 Jul 2008 23:22:15 +0200
Subject: bug 14362: RtlDestroyHeap forgot to notify_free on allocated
	blocks
In-Reply-To: <4873ACAF.5050107@BitWagon.com> (John Reiser's message of "Tue,
	08 Jul 2008 11:06:39 -0700")
References: <4873ACAF.5050107@BitWagon.com>
Message-ID: <877ibwoyuw.fsf@wine.dyndns.org>

John Reiser <jreiser at BitWagon.com> writes:

> +static void subheap_notify_free_all(SUBHEAP const *const subheap)
> +{
> +    char const *ptr = (char const *)subheap->base + subheap->headerSize;
> +
> +    //DPRINTF("subheap_notify_free_all heap @%p, arena=%p\n", subheap, ptr);

Please clean up that sort of thing before submitting.

-- 
Alexandre Julliard
julliard at winehq.org


From huw at codeweavers.com  Tue Jul  8 16:26:19 2008
From: huw at codeweavers.com (Huw Davies)
Date: Tue, 08 Jul 2008 22:26:19 +0100
Subject: gdiplus: Add a test to show that bitmap fonts aren't used for
	fontfamilies.
In-Reply-To: <1215551828.7616.1.camel@belthazor-saved.triad.rr.com>
References: <B0145171438@mail3.nshosts.com>
	<1215551828.7616.1.camel@belthazor-saved.triad.rr.com>
Message-ID: <4873DB7B.90200@codeweavers.com>

Adam Petaccia wrote:
> On Tue, 2008-07-08 at 13:20 +0100, Huw Davies wrote:
>> ---
>>  dlls/gdiplus/tests/font.c |    7 +++++++
>>  1 files changed, 7 insertions(+), 0 deletions(-)
> 
> On my Windows system I can't find MSSansSerif, only Microsoft Sans
> Serif. I'm not sure if that's a valid test to prove that point. 

It's a bitmap font.  The (latin version of the) font file is called 
sserife.fon .  Basically the FontFamily stuff relies on scalable 
outlines, so gdiplus seems to simply ignore bitmap fonts.

It's also a hint that Wine's GdipGetGenericFontFamilySansSerif() is 
incorrect - in the absence of 'Microsoft Sans Serif' then 'Tahoma' may 
be a better choice.

Huw.


From julliard at winehq.org  Tue Jul  8 16:29:13 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Tue, 08 Jul 2008 23:29:13 +0200
Subject: bug 14360: dosmem forgot MAP_FIXED
In-Reply-To: <4873CD09.7070507@BitWagon.com> (John Reiser's message of "Tue,
	08 Jul 2008 13:24:41 -0700")
References: <4873AC16.3010306@BitWagon.com> <87zlosp6zn.fsf@wine.dyndns.org>
	<4873B5D9.2080100@BitWagon.com> <87vdzgp5dq.fsf@wine.dyndns.org>
	<4873CD09.7070507@BitWagon.com>
Message-ID: <873amkoyja.fsf@wine.dyndns.org>

John Reiser <jreiser at BitWagon.com> writes:

> I call mmap(0,,,MAP_FIXED,,) often, and I get what I expect [*],
> namely a ["new"] mapping at 0, replacing any previous mapping at 0,
> regardless of the state of existing mappings.  See testcase below.

Yes, the replacing existing mappings is precisely the problem. That's
why we reserve the memory, and that's why if it wasn't reserved we can't
blindly replace it, because we don't know what's in there. MAP_FIXED is
used a few lines below once we know we have the area we want.

> _I_ don't care about those features of DOS and BIOS interface which require
> fixed addresses.  What I want is that (* NULL) and (NULL->member) always
> give SIGSEGV (at least for structures <= 64KB in size.)  This is a property
> that helps to make general apps more portable between Win32 and wine+Linux.

That's already the case, NULL pointer accesses are always caught, until
you run some DOS code. There's nothing to fix in there, the only thing
to do is to let the preloader do its job.

-- 
Alexandre Julliard
julliard at winehq.org


From thestig at google.com  Tue Jul  8 16:41:22 2008
From: thestig at google.com (Lei Zhang)
Date: Tue, 8 Jul 2008 14:41:22 -0700
Subject: [PATCH 2/2] user32: Set SWP_NOSIZE for windows with SWP_NOREDRAW.
In-Reply-To: <87skukrbb8.fsf@wine.dyndns.org>
References: <558b2f5c0807071701u5e18ede0i8f69fc078505f3f3@mail.gmail.com>
	<87skukrbb8.fsf@wine.dyndns.org>
Message-ID: <558b2f5c0807081441h566f6a39je042b14d5b133c0b@mail.gmail.com>

On Tue, Jul 8, 2008 at 2:10 AM, Alexandre Julliard <julliard at winehq.org> wrote:
> "Lei Zhang" <thestig at google.com> writes:
>
>> @@ -1808,6 +1808,10 @@ static BOOL fixup_flags( WINDOWPOS *winpos )
>>      if ((wndPtr->rectWindow.right - wndPtr->rectWindow.left == winpos->cx) &&
>>          (wndPtr->rectWindow.bottom - wndPtr->rectWindow.top == winpos->cy))
>>          winpos->flags |= SWP_NOSIZE;    /* Already the right size */
>> +    else if (((winpos->flags & (SWP_NOZORDER|SWP_NOREDRAW|SWP_FRAMECHANGED|SWP_NOACTIVATE)) == SWP_NOREDRAW) &&
>> +        (wndPtr->rectWindow.right - wndPtr->rectWindow.left == origSize.x) &&
>> +        (wndPtr->rectWindow.bottom - wndPtr->rectWindow.top == origSize.y))
>> +        winpos->flags |= SWP_NOSIZE;    /* Already the right size */
>
> It makes no sense to compare the window rect against the original size
> since the window rect hasn't been changed yet, it will always
> match. Also I fail to see why this would have anything to do with
> SWP_NOREDRAW. I think you are on the wrong track with this bug.

You're right, the problem required more investigation and I'll have a
better patch soon. Though while running the user32 tests, I did see
situations where those comparisons do not return true.


From alexd4 at inbox.lv  Tue Jul  8 17:02:43 2008
From: alexd4 at inbox.lv (Alexander Dorofeyev)
Date: Wed, 09 Jul 2008 01:02:43 +0300
Subject: [PATCH 1/4] ddraw: Force surfaces without memory flags to video
	memory	on creation.
In-Reply-To: <003601c8e140$6768d820$363a8860$@com>
References: <4873D386.9000308@inbox.lv> <003601c8e140$6768d820$363a8860$@com>
Message-ID: <4873E403.8030604@inbox.lv>

Stefan D?singer wrote:
> I think there's code that does that for render targets. It would be good if those are combined, or the render target flag adjustment just removed if it is not needed any longer

I found some code to that effect in IDirectDrawImpl_CreateNewSurface, but there 
the logic is "if rendertarget, set VIDEOMEMORY flag", which, on first glance is 
different from "if no memory flag present, set VIDEOMEMORY flag". It kinda 
depends on whether rendertarget with sysmem flag will or will not fall out 
somewhere earlier with invalidcall or something, but I guess one thing is for 
sure that it's better to keep this kind of thing in one place and close to 
lessen confusion, i.e. in CreateNewSurface.

Probably better not to apply it and the patch 2/2 that depends on it for now. 
I'll try to fix these issues and resend the next day.


From jreiser at BitWagon.com  Tue Jul  8 13:45:45 2008
From: jreiser at BitWagon.com (John Reiser)
Date: Tue, 08 Jul 2008 11:45:45 -0700
Subject: bug 14360: dosmem forgot MAP_FIXED
In-Reply-To: <87zlosp6zn.fsf@wine.dyndns.org>
References: <4873AC16.3010306@BitWagon.com> <87zlosp6zn.fsf@wine.dyndns.org>
Message-ID: <4873B5D9.2080100@BitWagon.com>

Alexandre Julliard wrote:
> John Reiser <jreiser at BitWagon.com> writes:
> 
> 
>>Attached is the patch for http://bugs.winehq.org/show_bug.cgi?id=14360
>>dosmem forgot MAP_FIXED
> 
> 
> No, it's not forgotten, that's the way it's supposed to work. What are
> you trying to fix?

Some environments strictly enforce the semantics of mmap(), namely a successful
return value need not equal the requested address unless MAP_FIXED,
even if the requested address is unmapped and otherwise available.
Unless MAP_FIXED, then it is legal to return any page range that is large enough.
Callers of the patched code were relying on getting actual fixed addresses
in the interval [0, 0x110000).  In particular, this did not work under valgrind.

See also the similar bug http://bugs.winehq.org/show_bug.cgi?id=12783
Allocation of PEB and TEB can overlap dll mappings

-- 
John Reiser, jreiser at BitWagon.com


From jreiser at BitWagon.com  Tue Jul  8 15:24:41 2008
From: jreiser at BitWagon.com (John Reiser)
Date: Tue, 08 Jul 2008 13:24:41 -0700
Subject: bug 14360: dosmem forgot MAP_FIXED
In-Reply-To: <87vdzgp5dq.fsf@wine.dyndns.org>
References: <4873AC16.3010306@BitWagon.com>
	<87zlosp6zn.fsf@wine.dyndns.org>	<4873B5D9.2080100@BitWagon.com>
	<87vdzgp5dq.fsf@wine.dyndns.org>
Message-ID: <4873CD09.7070507@BitWagon.com>

Alexandre Julliard wrote:
> John Reiser <jreiser at BitWagon.com> writes:
> 
> 
>>Some environments strictly enforce the semantics of mmap(), namely a successful
>>return value need not equal the requested address unless MAP_FIXED,
>>even if the requested address is unmapped and otherwise available.
>>Unless MAP_FIXED, then it is legal to return any page range that is large enough.
>>Callers of the patched code were relying on getting actual fixed addresses
>>in the interval [0, 0x110000).  In particular, this did not work under valgrind.
> 
> 
> You can't use MAP_FIXED on an address that you are not sure is
> available. 

I call mmap(0,,,MAP_FIXED,,) often, and I get what I expect [*],
namely a ["new"] mapping at 0, replacing any previous mapping at 0,
regardless of the state of existing mappings.  See testcase below.

I do this when I want to map a page at address 0.  The typical reason
_I_ want this, is to mmap an entire file into memory, such that the byte offset
in the file equals the process virtual address in memory.  This is exceedingly
useful when examining random files using gdb.

The typical reason that _wine_ might want mmap(0,,,MAP_FIXED,,) is because
some DOS apps "know" about interrupt vector at 0 and BIOS low memory in [0, 0x1000),
or because some Win32 apps assume that there is an identity map from DOS addresses
0:0 through 0xffff:0xffff to process virtual addresses 0 through 0x10ffef.
Both of these are reasonable assumptions in some environments.  Supporting
those assumptions requires MAP_FIXED in the two calls from dosmem.c to mmap().

-----  demo that mmap(,,,MAP_FIXED,,) replaces any existing mapping
#include <sys/types.h>
#include <sys/mman.h>
#include <errno.h>
#include <stdio.h>

main()
{
	/* accommodate Linux >= 2.6.24 whose default policy prohibits mapping in first 64KB */
        char *const addr = (char *)0x100000;
        errno = 0;
        void *rv1 = mmap(addr, 4096, PROT_READ|PROT_WRITE, MAP_FIXED|MAP_ANONYMOUS|MAP_PRIVATE, 0, 0);
        printf("rv1=%x  errno=%d\n", rv1, errno);
        *addr = 5;
        printf("first byte = %d\n", *addr);
        errno = 0;
        void *rv2 = mmap(addr, 4096, PROT_READ|PROT_WRITE, MAP_FIXED|MAP_ANONYMOUS|MAP_PRIVATE, 0, 0);
        printf("rv2=%x  errno=%d\n", rv2, errno);
	*addr = 7;
        printf("first byte = %d\n", *addr);
	return;
}
-----
[*] Linux >= 2.6.24 has a default *policy* of not allowing mmap in the first 64KB,
as a protection against privilege escalation that is enabled by
a kernel bug involving a NULL pointer.  So Linux >= 2.6.24 gives EINVAL
unless the default policy has been changed (which can be done without reboot.)


> If it wasn't reserved first, the best we can do is request
> the address, and refuse to support DOS apps if we don't get it. If you
> want to make this work in all cases you have to fix valgrind to allow
> the preloader to do its job.

_I_ don't care about those features of DOS and BIOS interface which require
fixed addresses.  What I want is that (* NULL) and (NULL->member) always
give SIGSEGV (at least for structures <= 64KB in size.)  This is a property
that helps to make general apps more portable between Win32 and wine+Linux.

One of the other patches that I submitted introduces a new environment variable
WINE_NO_DOSMEM_64KB which inhibits any attempt by wine itself to map [0, 0x10000),
even though the operating system might allow it.  The purpose of that patch
is to allow a wine that is run on Linux < 2.6.24 (such as Ubuntu 7.10)
to behave the same as it behaves on Linux >=2.6.24, and also to make
(* NULL) always deliver SIGSEGV.

-- 
John Reiser, jreiser at BitWagon.com


From jon_p_griffiths at yahoo.com  Tue Jul  8 16:35:55 2008
From: jon_p_griffiths at yahoo.com (Jon Griffiths)
Date: Tue, 8 Jul 2008 14:35:55 -0700 (PDT)
Subject: winedos: Support reading from VGA register 0x3ba
In-Reply-To: <1215418101.14103.13.camel@hermes2.karcher.local>
Message-ID: <216830.43980.qm@web56609.mail.re3.yahoo.com>

Hi Michael,

> open inputs read as one, so reads without responder return 0xFF.

You're right, testing it on dosbox it does return 0xff for non hercules cards. As long as bit seven never toggles though, any app reading it will still infer that a hercules card isn't present. I didn't catch the assignment to ret in the default: case of the switch, so I figured the value returned was an uninitialised stack value and may change, causing the app to misdetect the display type. As it is it seems something else is causing it to break.

I'll send an updated patch shortly, thanks for your feedback.

Cheers
Jon



      


From jon_p_griffiths at yahoo.com  Tue Jul  8 16:52:21 2008
From: jon_p_griffiths at yahoo.com (Jon Griffiths)
Date: Tue, 8 Jul 2008 14:52:21 -0700 (PDT)
Subject: winedos: Support reading from VGA register 0x3ba
In-Reply-To: <a71bd89a0807070429p6b360f74u94f1c48d0bb52722@mail.gmail.com>
Message-ID: <218263.66207.qm@web56603.mail.re3.yahoo.com>

Hi Dan,

> Not *quite* all.  Inquiring minds always want to know what
> app it will help and/or bugzilla entry it will fix.

Fair enough. The bug in question is 2408, for LocoScript (a rather ancient dos text editor). Note that a couple of other people have reported unrelated bugs in that bug due to the similarity of the messages (Unsupported VGA register: 0x...). The patch won't fix LocoScript though, just remove a fixme. There's a bit more detail in my response on Wine patches.

I'm happy to be more verbose in my patch descriptions - I've become terser as a result of not getting any feedback on submissions. I'm happy to see the last crop generated some feedback though; I'll try to be more descriptive in the future.

Hopefully that puts the inquiring minds to rest ;-)

Cheers
Jon



      


From royshea at gmail.com  Tue Jul  8 18:01:37 2008
From: royshea at gmail.com (Roy Shea)
Date: Tue, 8 Jul 2008 16:01:37 -0700
Subject: [1 of 2] comctl32: add test for disabling owner of modal property
	sheets
In-Reply-To: <1215555761.6862.5.camel@vincent>
References: <1215555761.6862.5.camel@vincent>
Message-ID: <bb6a273e0807081601q2a47c56ene4aa507e45c6e9de@mail.gmail.com>

Hello Vincent,

Looks like you've some DOS line breaks mixed into this patch through the
register_parent_wnd_class function.  Not sure if you meant to do that.

Peace,
-Roy



On Tue, Jul 8, 2008 at 3:22 PM, Vincent Povirk <vincent at codeweavers.com> wrote:
>
>
>
>
>


From madewokherd+d41d at gmail.com  Tue Jul  8 19:15:53 2008
From: madewokherd+d41d at gmail.com (Vincent Povirk)
Date: Tue, 8 Jul 2008 19:15:53 -0500
Subject: [1 of 2] comctl32: add test for disabling owner of modal property
	sheets
In-Reply-To: <bb6a273e0807081601q2a47c56ene4aa507e45c6e9de@mail.gmail.com>
References: <1215555761.6862.5.camel@vincent>
	<bb6a273e0807081601q2a47c56ene4aa507e45c6e9de@mail.gmail.com>
Message-ID: <ced95fe0807081715m51612717o51f3ecc5c7905616@mail.gmail.com>

I did not; it's an artifact of copying/pasting from an old test case.

Vincent Povirk


On Tue, Jul 8, 2008 at 6:01 PM, Roy Shea <royshea at gmail.com> wrote:
> Hello Vincent,
>
> Looks like you've some DOS line breaks mixed into this patch through the
> register_parent_wnd_class function.  Not sure if you meant to do that.
>
> Peace,
> -Roy
>
>
>
> On Tue, Jul 8, 2008 at 3:22 PM, Vincent Povirk <vincent at codeweavers.com> wrote:
>>
>>
>>
>>
>>
>
>
>


From owen at owenrudge.net  Tue Jul  8 19:35:11 2008
From: owen at owenrudge.net (Owen Rudge)
Date: Wed, 09 Jul 2008 01:35:11 +0100
Subject: Slovak translation for shlwapi
In-Reply-To: <20080709001624.933B47C00C@mail-mx-1.alinet.sk>
References: <20080709001624.933B47C00C@mail-mx-1.alinet.sk>
Message-ID: <487407BF.5050900@owenrudge.net>

Hi Kario,

 > btw. if you want that i send to you diff/patch file,
 > please write me the full command for git

You should avoid sending messages in HTML to the mailing lists. Send 
them in plain text instead. With regards to generating a patch, see this 
wiki page:

   
http://wiki.winehq.org/GitWine#head-f7a29e7ed999b5924748a60c5a1cd4a019032d26

Regards,

-- 
Owen Rudge
http://www.owenrudge.net/


From wine-devel at kievinfo.com  Tue Jul  8 19:48:26 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Tue, 08 Jul 2008 18:48:26 -0600
Subject: bug 14365: do not touch high address space (initial stack,  
	user_space_limit)
In-Reply-To: <4873AE54.2090504@BitWagon.com>
References: <4873AE54.2090504@BitWagon.com>
Message-ID: <48740ADA.1080909@kievinfo.com>

John Reiser wrote:
> Attached is the patch for http://bugs.winehq.org/show_bug.cgi?id=14365
> do not touch high address space (initial stack, user_space_limit)
So what's wrong with what Wine doing now? The part you removed states what 
it's there for - to prevent needless allocation attempts at the end of the 
address space.

> 
> -- John Reiser, jreiser at BitWagon.com
> 
> --- wine-1.0/libs/wine/mmap.c	2008-06-17 07:07:31.000000000 -0700
> +++ po49996-2008-06-30/wine-1.0/libs/wine/mmap.c	2008-06-30 17:18:29.000000000 -0700
> @@ -233,7 +233,9 @@
>      return try_mmap_fixed( addr, size, PROT_NONE, flags, get_fdzero(), 0 );
>  #endif
>      ptr = mmap( addr, size, PROT_NONE, flags, get_fdzero(), 0 );
> -    if (ptr != addr && ptr != (void *)-1)  munmap( ptr, size );
> +    if (ptr != addr && ptr != (void *)-1) {
> +         munmap( ptr, size );
> +    }
>      return (ptr == addr);
>  }
What's the point of this change?


>  
> @@ -321,8 +323,8 @@
>      struct reserved_area *area;
>      struct list *ptr;
>  #if defined(__i386__) && !defined(__FreeBSD__) && !defined(__FreeBSD_kernel__)  /* commented out until FreeBSD gets fixed */
> -    char stack;
> -    char * const stack_ptr = &stack;
> +    //char stack;
> +    //char * const stack_ptr = &stack - (10*1024*1024);  // 10M stack expansion
>      char *user_space_limit = (char *)0x7ffe0000;
No C++ comments please. If you removing something - remove it don't comment it.

Vitaliy.


From wine-devel at kievinfo.com  Tue Jul  8 19:57:21 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Tue, 08 Jul 2008 18:57:21 -0600
Subject: bug 14370: adjust timeout interval for virtulaizers
In-Reply-To: <4873B053.1060904@BitWagon.com>
References: <4873B053.1060904@BitWagon.com>
Message-ID: <48740CF1.1000200@kievinfo.com>

John Reiser wrote:
> Attached is the patch for http://bugs.winehq.org/show_bug.cgi?id=14370
> adjust timeout interval for virtulaizers

This should go into registry not environment. See other discussion about the 
same topic.

Vitaliy.


From wine-devel at kievinfo.com  Tue Jul  8 20:03:34 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Tue, 08 Jul 2008 19:03:34 -0600
Subject: Slovak translation for comctl32
In-Reply-To: <20080708222528.0CC3F7C1A1@mail-mx-1.alinet.sk>
References: <20080708222528.0CC3F7C1A1@mail-mx-1.alinet.sk>
Message-ID: <48740E66.8090701@kievinfo.com>

Kario wrote:
> hi, my name is Mario Kacmar and I am from Slovakia
> 
> I made Slovak translation for comctl32
> 
> please commit this patch
> 
> if there is needed GPL header, feel free to append it
> 
>  
You have to explicitly state the license of your contribution. Not the GPL 
will not work, as Wine is LGPL v2.

All patches should be in unified diff format diffed from the top of the 
tree. Use of GIT highly encouraged but not required.

See here for more details: http://wiki.winehq.org/SubmittingPatches

Vitaliy.


From leslie_alistair at hotmail.com  Tue Jul  8 20:45:06 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Wed, 9 Jul 2008 11:45:06 +1000
Subject: msxml3/test: Added ISAXXMLReader test. (4/18) (resend)
References: <200807082053.43537.piotr.caban@gmail.com>
Message-ID: <g5156a$uc5$1@ger.gmane.org>


"Piotr Caban" <piotr.caban at gmail.com> wrote in message 
news:200807082053.43537.piotr.caban at gmail.com...
> ---
> dlls/msxml3/tests/Makefile.in |    3 +-
> dlls/msxml3/tests/saxreader.c |  225
> +++++++++++++++++++++++++++++++++++++++++
> 2 files changed, 227 insertions(+), 1 deletions(-)
> create mode 100644 dlls/msxml3/tests/saxreader.c
>
>hr = ISAXXMLReader_putContentHandler(reader, &contentHandler);
>+ ok(hr == S_OK, "Expected S_OK, got %08x\n", hr);
>
Hi Piotr,
   What about more tests for invalid parameters?
eg. hr = ISAXXMLReader_putContentHandler(reader, NULL);

Add some tests for get_contentHandler to confirm that putContentHandler 
works.

Best Regards
 Alistair Leslie-Hughes 




From leslie_alistair at hotmail.com  Tue Jul  8 20:48:09 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Wed, 9 Jul 2008 11:48:09 +1000
Subject: msxml3: Added ISAXMLReader_getContentHandler implementation
	(2/18)(resend)
References: <200807082052.26353.piotr.caban@gmail.com>
Message-ID: <g515c0$uoo$1@ger.gmane.org>

"Piotr Caban" <piotr.caban at gmail.com> wrote in message 
news:200807082052.26353.piotr.caban at gmail.com...
> ---
> dlls/msxml3/saxreader.c |    8 ++++++--
> 1 files changed, 6 insertions(+), 2 deletions(-)
>


--------------------------------------------------------------------------------


Hi Piotr,
  You need to check the parameter is not NULL, and add tests cases.

Best Regards
 Alistair Leslie-Hughes 




From truiken at gmail.com  Tue Jul  8 20:54:03 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 8 Jul 2008 20:54:03 -0500
Subject: msxml3/test: Added ISAXXMLReader test. (4/18) (resend)
In-Reply-To: <g5156a$uc5$1@ger.gmane.org>
References: <200807082053.43537.piotr.caban@gmail.com>
	<g5156a$uc5$1@ger.gmane.org>
Message-ID: <22821af30807081854v254b3f07tc5fbbe349c2c322a@mail.gmail.com>

On Tue, Jul 8, 2008 at 8:45 PM, Alistair Leslie-Hughes
<leslie_alistair at hotmail.com> wrote:
>
> "Piotr Caban" <piotr.caban at gmail.com> wrote in message
> news:200807082053.43537.piotr.caban at gmail.com...
>> ---
>> dlls/msxml3/tests/Makefile.in |    3 +-
>> dlls/msxml3/tests/saxreader.c |  225
>> +++++++++++++++++++++++++++++++++++++++++
>> 2 files changed, 227 insertions(+), 1 deletions(-)
>> create mode 100644 dlls/msxml3/tests/saxreader.c
>>
>>hr = ISAXXMLReader_putContentHandler(reader, &contentHandler);
>>+ ok(hr == S_OK, "Expected S_OK, got %08x\n", hr);
>>
> Hi Piotr,
>   What about more tests for invalid parameters?
> eg. hr = ISAXXMLReader_putContentHandler(reader, NULL);
>
> Add some tests for get_contentHandler to confirm that putContentHandler
> works.
>

Alistair,

Piotr already said that he's just trying to get the initial tests in.
More tests can be added later, by Piotr and anyone else that feels
like more tests are needed.

-- 
James Hawkins


From leslie_alistair at hotmail.com  Tue Jul  8 20:59:05 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Wed, 9 Jul 2008 11:59:05 +1000
Subject: msxml3: Implemented domdoc_put_documentElement. (6/18) (resend)
References: <200807082054.16342.piotr.caban@gmail.com>
Message-ID: <g5160g$am$1@ger.gmane.org>


"Piotr Caban" <piotr.caban at gmail.com> wrote in message 
news:200807082054.16342.piotr.caban at gmail.com...
> ---
> dlls/msxml3/domdoc.c |   22 ++++++++++++++++++----
> 1 files changed, 18 insertions(+), 4 deletions(-)
>


--------------------------------------------------------------------------------


Hi Piotr,
  Your missing test cases.

Best Regards
 Alistair Leslie-Hughes 




From leslie_alistair at hotmail.com  Tue Jul  8 21:07:43 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Wed, 9 Jul 2008 12:07:43 +1000
Subject: msxml3/test: Added ISAXXMLReader test. (4/18) (resend)
References: <200807082053.43537.piotr.caban@gmail.com><g5156a$uc5$1@ger.gmane.org>
	<22821af30807081854v254b3f07tc5fbbe349c2c322a@mail.gmail.com>
Message-ID: <g516gn$1h6$1@ger.gmane.org>


>
> Alistair,
>
> Piotr already said that he's just trying to get the initial tests in.
> More tests can be added later, by Piotr and anyone else that feels
> like more tests are needed.
>
Hi James,
  I know that,  but with 18 patches sent, and this is only test for SAX.  If 
there
was another patch that added more tests, I would not of sent a reminder.

Best Regards
 Alistair Leslie-Hughes




From truiken at gmail.com  Tue Jul  8 21:16:04 2008
From: truiken at gmail.com (James Hawkins)
Date: Tue, 8 Jul 2008 21:16:04 -0500
Subject: msxml3/test: Added ISAXXMLReader test. (4/18) (resend)
In-Reply-To: <g516gn$1h6$1@ger.gmane.org>
References: <200807082053.43537.piotr.caban@gmail.com>
	<g5156a$uc5$1@ger.gmane.org>
	<22821af30807081854v254b3f07tc5fbbe349c2c322a@mail.gmail.com>
	<g516gn$1h6$1@ger.gmane.org>
Message-ID: <22821af30807081916o1e509045v322a82da30c0cdba@mail.gmail.com>

On Tue, Jul 8, 2008 at 9:07 PM, Alistair Leslie-Hughes
<leslie_alistair at hotmail.com> wrote:
>
>>
>> Alistair,
>>
>> Piotr already said that he's just trying to get the initial tests in.
>> More tests can be added later, by Piotr and anyone else that feels
>> like more tests are needed.
>>
> Hi James,
>  I know that,  but with 18 patches sent, and this is only test for SAX.  If
> there
> was another patch that added more tests, I would not of sent a reminder.
>

I'm mentoring Piotr for SOC, and he knows that he needs to write more
tests and plans on doing so.  With these 18 patches, he was working to
fix the Photoshop installer, not completely and thoroughly implement
this feature.  If you have a problem with the current implementation
as represented by these patches, please let us know; otherwise, let's
get these patches in and he'll submit more tests before the project is
over (tests are a part of the project).

-- 
James Hawkins


From leslie_alistair at hotmail.com  Tue Jul  8 21:21:45 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Wed, 9 Jul 2008 12:21:45 +1000
Subject: msxml3/test: Added ISAXXMLReader test. (4/18) (resend)
References: <200807082053.43537.piotr.caban@gmail.com><g5156a$uc5$1@ger.gmane.org><22821af30807081854v254b3f07tc5fbbe349c2c322a@mail.gmail.com><g516gn$1h6$1@ger.gmane.org>
	<22821af30807081916o1e509045v322a82da30c0cdba@mail.gmail.com>
Message-ID: <g517b1$3jr$1@ger.gmane.org>


> I'm mentoring Piotr for SOC, and he knows that he needs to write more
> tests and plans on doing so.  With these 18 patches, he was working to
> fix the Photoshop installer, not completely and thoroughly implement
> this feature.  If you have a problem with the current implementation
> as represented by these patches, please let us know; otherwise, let's
> get these patches in and he'll submit more tests before the project is
> over (tests are a part of the project).
>
Hi James,
   Wont say another word on Tests. (Hopefully we'll see a test patch 
shortly).
I've had already had a look though the patches, and have made a few a 
comments.

Best Regards
 Alistair Leslie-Hughes




From shelnutt2 at gmail.com  Tue Jul  8 22:38:53 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Tue, 8 Jul 2008 23:38:53 -0400
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807080821q71223f1eqf83d83ec252235bf@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<6fc03d800807070959y28b71fbapa0d77469c907828a@mail.gmail.com>
	<6fc03d800807071009o334d653k38fd88ee3ef16a4f@mail.gmail.com>
	<3a768c550807071021i1c340bb1p5f228026b1fcc03b@mail.gmail.com>
	<6fc03d800807071352t2c366951wb12909ad8a8dcf9@mail.gmail.com>
	<3a768c550807071429g269fac10qfd85d1c777cc7e6a@mail.gmail.com>
	<6fc03d800807071451u314e0e7axa8130a14536e29c6@mail.gmail.com>
	<3a768c550807071459wbaf05ectb4b9ad17d5d2997a@mail.gmail.com>
	<6fc03d800807071944q3d1b308an8927ab819ed8d057@mail.gmail.com>
	<6fc03d800807080821q71223f1eqf83d83ec252235bf@mail.gmail.com>
Message-ID: <6fc03d800807082038u6c7c8fbdqc8b3466e472b9147@mail.gmail.com>

I've spent the whole day reading different things and I'm just not sure why
it is creating an empty file. I'm still getting the same error messages even
when using winemaker correctly.

shelnutt at Ubuntu32-L:~/wine/patches/cuda$ make
winegcc -shared cuda.dll.spec -mno-cygwin -o cuda.dll.so cudart.o
/usr/local/cuda/lib/libcudart.so.2.0  -lodbc32 -lole32 -loleaut32 -lwinspool
-luuid -lcudart
gcc: /usr/local/cuda/lib/libcudart.so.2.0: linker input file unused because
linking not done
winebuild: libcudart.so.2-jP21n2.o is an empty file
winegcc: winebuild failed
make: *** [cuda.dll.so] Error 2

Can someone at least point me in the right direction? Google gives me
nothing and I can't find anything about this.
 I know the linking part is just saying that there is no need to link in
this file.

Now I thought it might be because I don't have a proper .res file as
winemaker didn't set it up to build one. I used winebuild
 winebuild --dll -fPIC -o -spec -Ecuda.dll.spec

and now I the -spec file which has some interesting code but I have no clue
what to do with it. I think I need to use wrc to compile a .res file but it
wants a .res file as input.

My coding is good, now I'm just trying to figure out how to get wine to
compile the damn thing.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080708/b1c312b9/attachment.htm 

From wine-devel at kievinfo.com  Wed Jul  9 00:15:25 2008
From: wine-devel at kievinfo.com (Vitaliy Margolen)
Date: Tue, 08 Jul 2008 23:15:25 -0600
Subject: Alexandre Julliard : dinput: Don' t depend on the dxerr8 static
	library in the tests.
In-Reply-To: <E1KGIxz-0006EO-T9@wine.codeweavers.com>
References: <E1KGIxz-0006EO-T9@wine.codeweavers.com>
Message-ID: <4874496D.6030506@kievinfo.com>

Alexandre Julliard wrote:
> Module: wine
> Branch: master
> Commit: b648dac7e12f593589661d03449e0f092b363f87
> URL:    http://source.winehq.org/git/wine.git/?a=commit;h=b648dac7e12f593589661d03449e0f092b363f87
> 
> Author: Alexandre Julliard <julliard at winehq.org>
> Date:   Tue Jul  8 17:49:03 2008 +0200
> 
> dinput: Don't depend on the dxerr8 static library in the tests.
> 
> ---
> 
>  dlls/dinput/tests/Makefile.in |    2 +-
>  dlls/dinput/tests/device.c    |   27 ++++++------
>  dlls/dinput/tests/joystick.c  |   95 ++++++++++++++++-------------------------
>  dlls/dinput/tests/keyboard.c  |   39 ++++++++---------
>  dlls/dinput/tests/mouse.c     |   27 ++++++------
>  5 files changed, 83 insertions(+), 107 deletions(-)
> 
> Diff:   http://source.winehq.org/git/wine.git/?a=commitdiff;h=b648dac7e12f593589661d03449e0f092b363f87
> 
> 
> 

Any particular reason for this patch? It makes it that much more complicated 
to decipher what the error code is.

Vitaliy.


From winehacker at gmail.com  Wed Jul  9 01:27:00 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Wed, 9 Jul 2008 02:27:00 -0400
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <5963B75B-F12E-41CE-AC48-0D3256390CC1@java.pl>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
	<D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
	<486E996F.5000907@sprintpcs.com> <486EF6C0.20109@codeweavers.com>
	<5963B75B-F12E-41CE-AC48-0D3256390CC1@java.pl>
Message-ID: <19e31a080807082327j50a3d241xaefd65244afc0028@mail.gmail.com>

On Mon, Jul 7, 2008 at 5:41 AM, Adam Strzelecki <ono at java.pl> wrote:
> OK, I'm sorry. I don't want to accuse anybody, I just made a false
> equation between Alexandre and CodeWeavers taken from About Us page.
> It was just said once that winequartz.drv won't go into official Wine,
> and the top reason was Objective-C and this was just a bizarre
> decision for me. Objective-C is almost as old as C++ and it was just
> chosen for an object model of OSX (NextStep previously) in opposition
> to pure C messaging of Windows and C++ for COM interfaces, etc. So
> IMHO no for Objective-C means no for decent Mac OSX support, period.

I don't know if having the quartzdrv in Winehq, even if was written in
pure C would be a good idea. I think there is a lot of pressure on him
to accept it (I've pestered him about it enough before) but he needs
to be free to break the driver interface from time to time to improve
it and its really forcing him to do work twice if quartzdrv and x11drv
are both in the winehq repo.

I think everybody would be better served if there was a "blessed"
branch or git repo that quartzdrv was maintained in, where it could be
done in Objective-C or however its maintainer wanted to do it, and
Winehq could recommend users wanting it to go there. If the maintainer
does not do a good job keeping it stable, fast and passing all of the
wine tests, Alexandre could always revoke his blessing. I created a
branch on repo.or.cz to do this but it needs more attention than I've
been able to give it lately. If we just accept that quartzdrv might
never be merged its not a big deal. Winehq users, CodeWeavers and
anyone else can still pull from it and or throw resources at it to
make it better, without adding more work on Julliard.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From wine-patches at kievinfo.com  Tue Jul  8 20:12:54 2008
From: wine-patches at kievinfo.com (Vitaliy Margolen)
Date: Tue, 08 Jul 2008 19:12:54 -0600
Subject: [PATCH 2/5] dinput: Stop and unload effect when freeing it.
In-Reply-To: <d30ad4e0807071138l3ee6436ey27458b02c5cae590@mail.gmail.com>
References: <4870490B.7050808@kievinfo.com>
	<d30ad4e0807071138l3ee6436ey27458b02c5cae590@mail.gmail.com>
Message-ID: <48741096.3020905@kievinfo.com>

Daniel Remenak wrote:
> On Sat, Jul 5, 2008 at 9:24 PM, Vitaliy Margolen
> <wine-patches at kievinfo.com> wrote:
> <snip>
>> +        LinuxInputEffectImpl_Stop(iface);
>> +        LinuxInputEffectImpl_Unload(iface);
> <snip>
> 
> Vitaliy,
> 
> Native behavior is for Unload to stop the effect also (see msdn or
> test it yourself), so the call to Stop here is unnecessary.  If the
> call to Stop is required, it must be done in Unload, not Release, as
> it's not unusual to unload an effect without releasing it when a game
> has a large number of available effect instances.
> 
> It is my understanding that no explicit call to Stop is needed, either
> in Release or Unload, as evdev has the same behavior documented (see
> section 3.3 of ff.txt in the kernel docs).
> 
> The call to Unload is certainly correct, and I don't think there's
> anything strictly wrong with calling Stop; just make sure it's not
> covering up a bug in Unload.
> 

You probably right. I did not experiment a lot with force feedback. Was 
trying to apply the same assumptions that exist in other places in dinput - 
anything that's being freed first have to stop then remove itself from the 
system.

Just trying to prevent any possible bugs that could be caused by not 
stopping/unloading force feedback effects.

Vitaliy.


From scriptkid at mail.ru  Wed Jul  9 01:46:09 2008
From: scriptkid at mail.ru (Vladimir Pankratov)
Date: Wed, 09 Jul 2008 11:46:09 +0500
Subject: Slovak translation for shlwapi
In-Reply-To: <20080709001624.933B47C00C@mail-mx-1.alinet.sk>
References: <20080709001624.933B47C00C@mail-mx-1.alinet.sk>
Message-ID: <48745EB1.2080606@mail.ru>

Kario wrote:
> hi, i write slovak translation for shlwapi,
> 
> if there is needed GPL header, feel free to append it
> 
> and write me if i must include GPL
> 
> please commit, thanks, bye
> 
>  
> 
> see attachment
> 
>  
> 
> btw. if you want that i send to you diff/patch file,
> 
> please write me the full command for git
> 
> 
> 
> === reklama ======================================
> http://mail.szm.com - e-mail a priestor na www stranku zadarmo
> http://webhosting.szm.com - domeny a webhosting za najnizsie ceny
> 
> 
> 
> ------------------------------------------------------------------------
> 
> 

Hello.
Instruction for translate.
Copy the English file as your file (let's say Sk.rc).
Modify the LANGUAGE line. Lookup you language code in include/winnt.h 
and the sublangage rule for your language on SublangNeutral (or copy 
them from another file in your langauge)
Translate the string
If you havn't GIT, use diff -u.

If you need more information please visit 
http://www.winehq.org/site/sending_patches, or feel free to write letter 
to me...

Good luck.



From julliard at winehq.org  Wed Jul  9 02:27:41 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 09 Jul 2008 09:27:41 +0200
Subject: Alexandre Julliard : dinput: Don' t depend on the dxerr8 static
	library in the tests.
In-Reply-To: <4874496D.6030506@kievinfo.com> (Vitaliy Margolen's message of
	"Tue, 08 Jul 2008 23:15:25 -0600")
References: <E1KGIxz-0006EO-T9@wine.codeweavers.com>
	<4874496D.6030506@kievinfo.com>
Message-ID: <87vdzfo6tu.fsf@wine.dyndns.org>

Vitaliy Margolen <wine-devel at kievinfo.com> writes:

> Any particular reason for this patch? It makes it that much more complicated 
> to decipher what the error code is.

It's necessary to allow make crosstest to work with the Wine libraries
instead of the broken mingw ones.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Jul  9 03:41:56 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 09 Jul 2008 10:41:56 +0200
Subject: [PATCH] user32: Add test for GetDC
In-Reply-To: <200807071557.26947.shpigor@etersoft.ru> (Ilya Shpigor's message
	of "Mon, 7 Jul 2008 15:57:26 +0400")
References: <200807071557.26947.shpigor@etersoft.ru>
Message-ID: <87r6a3o3e3.fsf@wine.dyndns.org>

Ilya Shpigor <shpigor at etersoft.ru> writes:

> Add test for GetDC. This test check is WM_PAINT message send by GetDC 
> function.

There isn't even a GetDC call in that test. Most likely all you are
seeing is that expose events generate WM_PAINT, which is as it should
be. What are you trying to test?

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Jul  9 03:46:55 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 09 Jul 2008 10:46:55 +0200
Subject: wininet: tests/http.c: Improve HttpOpenRequest test
In-Reply-To: <4874070D.6070902@zacbrown.org> (Zac Brown's message of "Tue, 08
	Jul 2008 17:32:13 -0700")
References: <4874070D.6070902@zacbrown.org>
Message-ID: <87mykro35s.fsf@wine.dyndns.org>

Zac Brown <zac at zacbrown.org> writes:

> +    SetLastError(0xdeadbeef);
>      ret = HttpSendRequest(request, NULL, 0, NULL, 0);
>      ok(ret, "HttpSendRequest failed: %u\n", GetLastError());
> +    ok(GetLastError() == ERROR_FILE_NOT_FOUND ||
> +       GetLastError() == ERROR_SUCCESS,
> +       "HttpSendRequest failed, got %u.\n", GetLastError());
>      ok(InternetCloseHandle(request), "Close request handle failed\n");

Testing last error on success is not useful, unless it's explicitly
specified that last error is set, or there is an app that depends on it.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Jul  9 03:57:56 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 09 Jul 2008 10:57:56 +0200
Subject: bug 14361: co-operate with valgrind at execv
In-Reply-To: <4873AC66.5000908@BitWagon.com> (John Reiser's message of "Tue,
	08 Jul 2008 11:05:26 -0700")
References: <4873AC66.5000908@BitWagon.com>
Message-ID: <87iqvfo2nf.fsf@wine.dyndns.org>

John Reiser <jreiser at BitWagon.com> writes:

> Attached is the patch for http://bugs.winehq.org/show_bug.cgi?id=14361
> co-operate with valgrind at execv

You shouldn't need anything like that, running the whole thing including
the preloader under valgrind should work fine. At worst some
reservations will fail but that shouldn't be an issue for the apps that
we'd want to valgrind.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Jul  9 04:10:47 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 09 Jul 2008 11:10:47 +0200
Subject: [1/2] richedit: Prevented cursor flicker while moving over
	selection bar
In-Reply-To: <5c6ee3b70807080819p6495871cp1652e51ba53d5f4f@mail.gmail.com>
	(Dylan Smith's message of "Tue, 8 Jul 2008 11:19:45 -0400")
References: <5c6ee3b70807080819p6495871cp1652e51ba53d5f4f@mail.gmail.com>
Message-ID: <877ibvo220.fsf@wine.dyndns.org>

"Dylan Smith" <dylan.ah.smith at gmail.com> writes:

> diff --git a/dlls/riched20/editor.c b/dlls/riched20/editor.c
> index 7e90096..96ab4aa 100644
> --- a/dlls/riched20/editor.c
> +++ b/dlls/riched20/editor.c
> @@ -1663,10 +1663,13 @@ static int ME_CalculateClickCount(HWND hWnd, UINT msg, WPARAM wParam,
>      return clickNum;
>  }
>  
> -static BOOL ME_SetCursor(ME_TextEditor *editor, int x)
> +static BOOL ME_SetCursor(ME_TextEditor *editor)
>  {
> +  POINT pt;
> +  GetCursorPos(&pt);
> +  ScreenToClient(editor->hWnd, &pt);

In general GetCursorPos should be avoided. It incurs an X server
round-trip, and it's asynchronous so the position may not match the
message you are currently processing. Something like GetMessagePos is
usually better.

-- 
Alexandre Julliard
julliard at winehq.org


From huw at codeweavers.com  Wed Jul  9 04:32:20 2008
From: huw at codeweavers.com (Huw Davies)
Date: Wed, 9 Jul 2008 10:32:20 +0100
Subject: [Gdiplus 07/15] Stub GdipFillRegion
In-Reply-To: <1215588827.13206.27.camel@belthazor-saved.triad.rr.com>
References: <1215588827.13206.27.camel@belthazor-saved.triad.rr.com>
Message-ID: <20080709093220.GA5326@merlot.physics.ox.ac.uk>

On Wed, Jul 09, 2008 at 03:33:47AM -0400, Adam Petaccia wrote:
> ---
>  dlls/gdiplus/gdiplus.spec |    2 +-
>  dlls/gdiplus/region.c     |   11 +++++++++++
>  2 files changed, 12 insertions(+), 1 deletions(-)
> 
> diff --git a/dlls/gdiplus/region.c b/dlls/gdiplus/region.c
> index 3d95723..717119f 100644
> --- a/dlls/gdiplus/region.c
> +++ b/dlls/gdiplus/region.c
> @@ -156,6 +156,17 @@ GpStatus WINGDIPAPI GdipDeleteRegion(GpRegion *region)
>      return NotImplemented;
>  }
>  
> +GpStatus WINGDIPAPI GdipFillRegion(GpGraphics* graphics, GpBrush* brush,
> +        GpRegion* region)
> +{
> +    if (!(graphics && brush && region))
> +        return InvalidParameter;
> +
> +    FIXME("(%p, %p, %p): stub\n", graphics, brush, region);
> +
> +    return NotImplemented;
> +}
> +

Msdn lists this in the 'graphics' section of the gdiplus flat api, so I'd
suggest it goes in graphics.c

Huw.
-- 
Huw Davies
huw at codeweavers.com


From julliard at winehq.org  Wed Jul  9 04:39:49 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 09 Jul 2008 11:39:49 +0200
Subject: [PATCH 2/2] user32: Set WM_NOSIZE for windows smaller than
	SM_CXMINTRACK/SM_CYMINTRACK.
In-Reply-To: <558b2f5c0807081555t7d5e5d2fr4efc88f136f0bf01@mail.gmail.com>
	(Lei Zhang's message of "Tue, 8 Jul 2008 15:55:04 -0700")
References: <558b2f5c0807081555t7d5e5d2fr4efc88f136f0bf01@mail.gmail.com>
Message-ID: <873amjo0pm.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> I'm trying to make the test in patch 1/2 pass.
>
> - I want DEFWND_HandleWindowPosChanged to see SWP_NOCLIENTSIZE = 1.
> - SWP_NOCLIENTSIZE gets set to 0 in SWP_DoNCCalcSize because the
> client size has changed.
> - the client size has changed because the window size has changed?
> - the window size changed because it was 100, and
> GetSystemMetrics(SM_CXMINTRACK) returns 112.
>
> so it looks like  I just need to set SWP_NOSIZE.

That's certainly wrong too, I think you are still on the wrong track.
You need to write more test cases.

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Wed Jul  9 05:36:46 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 09 Jul 2008 12:36:46 +0200
Subject: msvcrt: Fix printf exponent with tests (resend/update)
In-Reply-To: <456752.81312.qm@web56606.mail.re3.yahoo.com> (Jon Griffiths's
	message of "Sat, 5 Jul 2008 15:27:12 -0700 (PDT)")
References: <456752.81312.qm@web56606.mail.re3.yahoo.com>
Message-ID: <87vdzfmji9.fsf@wine.dyndns.org>

Jon Griffiths <jon_p_griffiths at yahoo.com> writes:

> diff --git a/dlls/msvcrt/wcs.c b/dlls/msvcrt/wcs.c
> index 14daf90..bbbc3f1 100644
> --- a/dlls/msvcrt/wcs.c
> +++ b/dlls/msvcrt/wcs.c
> @@ -481,6 +481,44 @@ static void pf_integer_conv( char *buf, int buf_len, pf_flags *flags,
>      return;
>  }
>  
> +/* pf_fixup_exponent: convert a string containing a 1 or 2 digit exponent
> +   to 3 digits, accounting for padding, in place */

The comments don't match the code, you don't handle a 1 digit exponent.

-- 
Alexandre Julliard
julliard at winehq.org


From huw at codeweavers.com  Wed Jul  9 05:58:23 2008
From: huw at codeweavers.com (Huw Davies)
Date: Wed, 9 Jul 2008 11:58:23 +0100
Subject: [Gdiplus 11/15] Implement GdipCreateRegionRect
In-Reply-To: <1215588841.13206.35.camel@belthazor-saved.triad.rr.com>
References: <1215588841.13206.35.camel@belthazor-saved.triad.rr.com>
Message-ID: <20080709105823.GB5326@merlot.physics.ox.ac.uk>

On Wed, Jul 09, 2008 at 03:34:01AM -0400, Adam Petaccia wrote:
> ---
>  dlls/gdiplus/region.c       |   28 ++++++++++++++++++++++++----
>  dlls/gdiplus/tests/region.c |    8 ++++----
>  2 files changed, 28 insertions(+), 8 deletions(-)
> 
> diff --git a/dlls/gdiplus/region.c b/dlls/gdiplus/region.c
> index 59e2fa6..de86ce1 100644
> --- a/dlls/gdiplus/region.c
> +++ b/dlls/gdiplus/region.c
> @@ -129,12 +129,32 @@ GpStatus WINGDIPAPI GdipCreateRegionPath(GpPath *path, GpRegion **region)
>      return Ok;
>  }
>  
> -GpStatus WINGDIPAPI GdipCreateRegionRect(GDIPCONST GpRectF *rect, GpRegion **region)
> +GpStatus WINGDIPAPI GdipCreateRegionRect(GDIPCONST GpRectF *rect,
> +        GpRegion **region)
>  {
> -    FIXME("(%p, %p): stub\n", rect, region);
> +    GpPath *path;
> +    GpStatus stat;
>  
> -    *region = NULL;
> -    return NotImplemented;
> +    if (!(rect && region))
> +        return InvalidParameter;
> +
> +    TRACE("%p, %p\n", rect, region);
> +
> +    *region = GdipAlloc(sizeof(GpRegion*));
> +    if(!*region)
> +        return OutOfMemory;
> +
> +    stat = GdipCreatePath(FillModeAlternate, &path);
> +    if (stat != Ok) { GdipDeleteRegion(*region); return stat;}
> +    stat = GdipAddPathRectangle(path, rect->X, rect->Y,
> +            rect->Width, rect->Height);
> +    if (stat != Ok) { GdipDeleteRegion(*region); return stat;}
> +    stat = GdipCreateRegionPath(path, region);
> +    if (stat != Ok) { GdipDeleteRegion(*region); return stat;}
> +
> +    GdipDeletePath(path);
> +
> +    return Ok;
>  }


This doesn't look right.  See the GdipGetRegionData tests (and extend
them to add paths), these are supposed to help understanding how
regions are stored.  It looks to me that a region is stored as a
sequence of rects and paths that are combined with various CombineMode
ops.

I'll send a patch that adds paths to the test in a bit.

Huw. 
-- 
Huw Davies
huw at codeweavers.com


From hongbo_ni at hotmail.com  Wed Jul  9 07:06:22 2008
From: hongbo_ni at hotmail.com (Hongbo Ni)
Date: Wed, 9 Jul 2008 22:06:22 +1000
Subject: user32: Problem using SetClassLongW to subclass built-in control
	(Edit)
Message-ID: <BAY118-W20A6B8E0937B3AB246C43694960@phx.gbl>

Hi, 
 
Summary: SetClassLongW(hEdit, GCL_WNDPROC,(DWORD)NewEditWndProc) in Wine differs from Windows.
 
Background:  when a standard built-in window class (such as Edit for example) is registered initially, 
the window system register the class with two Procedures (procA and ProcW) and assign a handle as 
WNDPROC to the class.  If a Edit window is created using CreateWindowExA, it will be an Ansi Window. 
If a Edit window is created using CreateWindowExW, it will be an Unicode Window. This fine in Wine.
 
Problem: I globally subclass the Edit class using SetClassLongW using following code
------------------------------------------------------------------------------------------------------------
  HWND hEdit = CreateWindowExA(0,"Edit", "E1",WS_POPUP,0, 0, 1,1,NULL,NULL,NULL,NULL);  OldEditWndProc =(WNDPROC)SetClassLongW(hEdit, GCL_WNDPROC,(DWORD)NewEditWndProc);
------------------------------------------------------------------------------------------------------------
After this subclass, Wine behaves different from Windows
 
In Windows: a new Edit windows created by CreateWindowsExA((0,"Edit",...) is a Still an Ansi Windows
                   a new Edit windows created by CreateWindowsExW((0,"Edit",...) is a Unicode Windows
 
But in Wine, new Edit windows created by CreateWindowsExA or CreateWindowsExW are all Unicode Windows.
I checked wine 1.1 source code , basically the call to
SetClassLongW(hEdit, GCL_WNDPROC,(DWORD)NewEditWndProc) has set the Edit class proc to Unicode Only.
So regardless how you create the Edit window, it will be Unicode window.
 
This is understandable but it's different form windows. causing my application to mis-behave.
 
More problem, the OldEditWndProc returned above is only the procW of Edit class, if we try to
undo the subclass with
       SetClassLongW(hEdit, GCL_WNDPROC,(DWORD)OldEditWndProc );
the Edit class also lost it's procA.
 
Discussion: How wine could do the same as windows?
 
SetClassLongW(hEdit, GCL_WNDPROC,(DWORD)NewEditWndProc) should
 
1. return the proc handle of the class, instead of procW.
 
2. set both ProcA and ProcW of Edit class to NewEditWndProc.
    so  NewEditWndProc need to handle both messages from Ansi and Unicode Edit control.
 
I don't know what is the best way to fix this. Please help.
 
I have posted a Test application on Bugzilla #14350, please try.
 
Regards
Hongbo
 
 
 
_________________________________________________________________
Are you paid what you're worth? Find out: SEEK Salary Centre
http://a.ninemsn.com.au/b.aspx?URL=http%3A%2F%2Fninemsn%2Eseek%2Ecom%2Eau%2Fcareer%2Dresources%2Fsalary%2Dcentre%2F%3Ftracking%3Dsk%3Ahet%3Asc%3Anine%3A0%3Ahot%3Atext&_t=764565661&_r=OCT07_endtext_salary&_m=EXT
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080709/bef87334/attachment.htm 

From huw at codeweavers.com  Wed Jul  9 09:41:36 2008
From: huw at codeweavers.com (Huw Davies)
Date: Wed, 9 Jul 2008 15:41:36 +0100
Subject: [Gdiplus 11/15] Implement GdipCreateRegionRect
In-Reply-To: <20080709105823.GB5326@merlot.physics.ox.ac.uk>
References: <1215588841.13206.35.camel@belthazor-saved.triad.rr.com>
	<20080709105823.GB5326@merlot.physics.ox.ac.uk>
Message-ID: <20080709144136.GA5365@merlot.physics.ox.ac.uk>

On Wed, Jul 09, 2008 at 11:58:23AM +0100, Huw Davies wrote:
> This doesn't look right.  See the GdipGetRegionData tests (and extend
> them to add paths), these are supposed to help understanding how
> regions are stored.  It looks to me that a region is stored as a
> sequence of rects and paths that are combined with various CombineMode
> ops.

Hi Adam,

In fact you want to store the region elements as a binary tree,
something like this:

typedef enum element_type
{
    rect_element = 0x10000000,
    path_element,
    empty_element,
    infinite_element
} element_type_t;

typedef struct region_element
{
    DWORD type_or_op; /* One of the CombineModes or element_type_t */
    union
    {
        GpRectF rect;
        GpPath *path;
        struct
        {
            struct region_element *first;
            struct region_element *second;
        } operands;
    } elem_data;
} region_element_t;

struct GpRegion
{
    region_element_t root;
};

A region element is either a rect, path or a combining op (in which
case it has two children, 'first' and 'second').  The data returned by
GdipGetRegionData is then basically what happens if you walk the tree,
favouring the 'first' node at every branch.

Does that make sense?

Huw.
-- 
Huw Davies
huw at codeweavers.com


From adam at tpetaccia.com  Wed Jul  9 09:56:48 2008
From: adam at tpetaccia.com (Adam Petaccia)
Date: Wed, 09 Jul 2008 10:56:48 -0400
Subject: [Gdiplus 11/15] Implement GdipCreateRegionRect
In-Reply-To: <20080709144136.GA5365@merlot.physics.ox.ac.uk>
References: <1215588841.13206.35.camel@belthazor-saved.triad.rr.com>
	<20080709105823.GB5326@merlot.physics.ox.ac.uk>
	<20080709144136.GA5365@merlot.physics.ox.ac.uk>
Message-ID: <1215615408.6779.13.camel@belthazor-saved.triad.rr.com>

I was just about to reply to your first mail when I found this pop up.

Anyway, 
?To quote MSDN: 

"The Region class describes an area of the display surface. The area can
be any shape. In other words, the boundary of the area can be a
combination of curved and straight lines. Regions can also be created
from the interiors of rectangles, paths, or a combination of these.
Regions are used in clipping and hit-testing operations."

Because the area can be any shape, including curved lines, I chose
GpPath as the base object. I imagined the data you're talking about
stored in an array of regionOperation structs, or something of the like
- so we still have the ability to do non-rectangular hit-testing and can
now getRegionData. I'll write some more tests to confirm/deny this
behavior. 

On Wed, 2008-07-09 at 15:41 +0100, Huw Davies wrote:
> On Wed, Jul 09, 2008 at 11:58:23AM +0100, Huw Davies wrote:
> > This doesn't look right.  See the GdipGetRegionData tests (and extend
> > them to add paths), these are supposed to help understanding how
> > regions are stored.  It looks to me that a region is stored as a
> > sequence of rects and paths that are combined with various CombineMode
> > ops.
> 
> Hi Adam,
> 
> In fact you want to store the region elements as a binary tree,
> something like this:
> 
> typedef enum element_type
> {
>     rect_element = 0x10000000,
>     path_element,
>     empty_element,
>     infinite_element
> } element_type_t;
> 
> typedef struct region_element
> {
>     DWORD type_or_op; /* One of the CombineModes or element_type_t */
>     union
>     {
>         GpRectF rect;
>         GpPath *path;
>         struct
>         {
>             struct region_element *first;
>             struct region_element *second;
>         } operands;
>     } elem_data;
> } region_element_t;
I had something in mind that resembled this, but without a union. That's
a better idea.

> struct GpRegion
> {
>     region_element_t root;
> };
> 
> A region element is either a rect, path or a combining op (in which
> case it has two children, 'first' and 'second').  The data returned by
> GdipGetRegionData is then basically what happens if you walk the tree,
> favouring the 'first' node at every branch.
I had an idea of something like that.

> Does that make sense?
All of it.
> 
> Huw.

I didn't mean to imply that I ignored the region.c header, but I didn't
use any of its information for the bounds tests yet, so I didn't add
them to the struct (and I've learned to add things as needed).

Thanks for the additional help.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080709/76ccb7db/attachment.pgp 

From huw at codeweavers.com  Wed Jul  9 11:00:48 2008
From: huw at codeweavers.com (Huw Davies)
Date: Wed, 9 Jul 2008 17:00:48 +0100
Subject: [Gdiplus 11/15] Implement GdipCreateRegionRect
In-Reply-To: <1215615408.6779.13.camel@belthazor-saved.triad.rr.com>
References: <1215588841.13206.35.camel@belthazor-saved.triad.rr.com>
	<20080709105823.GB5326@merlot.physics.ox.ac.uk>
	<20080709144136.GA5365@merlot.physics.ox.ac.uk>
	<1215615408.6779.13.camel@belthazor-saved.triad.rr.com>
Message-ID: <20080709160048.GB5365@merlot.physics.ox.ac.uk>

On Wed, Jul 09, 2008 at 10:56:48AM -0400, Adam Petaccia wrote:
> I didn't mean to imply that I ignored the region.c header, but I didn't
> use any of its information for the bounds tests yet, so I didn't add
> them to the struct (and I've learned to add things as needed).

The bounds checks are really the second stage.  I'd get the
CreateRegion functions working correctly first of all, and check that
you're happy that the GetRegionData stuff could be made to work (even
if you don't actually code it).  Once you have that, you know you're
storing the data in a similar way to native gdiplus.  Then you can go
on to work on the bounds (which would appear to be non-trivial - good
luck!).

Huw.
-- 
Huw Davies
huw at codeweavers.com


From wine at mkarcher.dialup.fu-berlin.de  Wed Jul  9 11:21:21 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Wed, 09 Jul 2008 18:21:21 +0200
Subject: [dplayx 02/29] Tests for DirectPlayCreate
In-Reply-To: <82e274890807090848l3d5d872fmfd6240bc3bd0adaa@mail.gmail.com>
References: <82e274890807090848l3d5d872fmfd6240bc3bd0adaa@mail.gmail.com>
Message-ID: <1215620481.17834.36.camel@hermes2.karcher.local>

Hello Ismael,

reviewing this patch shows some issues.

?> +#define _okHR(expected, result)                         \
> +    ok( (expected) == (result),                         \
> +        "expected=%d(%s) got=%d(%s)\n",                 \
> +        HRESULT_CODE(expected), dpResult2str(expected), \
> +        HRESULT_CODE(result), dpResult2str(result) );
I dislike the order of the parameters and the name. You would write
 ok( hr == DP_OK, "Something failed with %x\n", hr);
In this line, "hr" is before "DP_OK". So as an analogy, I also want to
write
  _okHR( hr, DD_OK );

Why do you start the macro name with an underscore? And last but not
least: As I see it, a static inline would do the job too, and is always
preferrable to macros.

> +    heap = HeapCreate( 0, 0, 0 );
Do you have any reason to create your own heap? Each windows process
already comes equipped with a standard heap you can obtain using the API
function GetProcessHeap, so this line:
> +    IUnknown* pUnk = HeapAlloc( heap, 0, sizeof(LPDWORD) );
would then look like:
+    IUnknown* pUnk = HeapAlloc( GetProcessHeap(), 0, sizeof(LPDWORD) );

Another point is that this line is totally wrong anyway. An IUnknown* is
a pointer to an COM object, which starts with a vtable pointer. You let
pUnk point to uninitialized memory. While it doesn't matter in this case
(as DirectPlayCreate will never access what the pointer points to), it
is really bad style. I understand the intention to test that aggregation
is not supported for DirectPlay, but you still should keep the contract
of the creation function that pUnk either is NULL or points to a valid
COM object. A basic COM object is just a pointer to a vtable that
contains a QueryInterface method that returns "this" for IUnknown and
fails in every other case, an AddRef method that returns 2 and does
nothing, and a Release method that returns 1 and does nothing else.


> ?+    /* pUnk==NULL, pDP!=NULL */
> +    hr = DirectPlayCreate( NULL, &pDP, NULL );
> +    _okHR( DPERR_INVALIDPARAMS, hr );
> +    hr = DirectPlayCreate( (LPGUID) &_GUID_NULL, &pDP, NULL );
> +    _okHR( DP_OK, hr );
> +    hr = DirectPlayCreate( (LPGUID) &DPSPGUID_TCPIP, &pDP, NULL );
> +    todo_wine _okHR( DP_OK, hr );

Here you are leaking DirectPlay objects. If DirectPlayCreate worked, you
have to release the object before you overwrite pDP (by passing it to
DirectPlayCreate again) using IDirectPlay_Release(pDP).

Regards,
  Michael Karcher



From juan.lang at gmail.com  Wed Jul  9 11:30:53 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Wed, 9 Jul 2008 09:30:53 -0700
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807082038u6c7c8fbdqc8b3466e472b9147@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<6fc03d800807071009o334d653k38fd88ee3ef16a4f@mail.gmail.com>
	<3a768c550807071021i1c340bb1p5f228026b1fcc03b@mail.gmail.com>
	<6fc03d800807071352t2c366951wb12909ad8a8dcf9@mail.gmail.com>
	<3a768c550807071429g269fac10qfd85d1c777cc7e6a@mail.gmail.com>
	<6fc03d800807071451u314e0e7axa8130a14536e29c6@mail.gmail.com>
	<3a768c550807071459wbaf05ectb4b9ad17d5d2997a@mail.gmail.com>
	<6fc03d800807071944q3d1b308an8927ab819ed8d057@mail.gmail.com>
	<6fc03d800807080821q71223f1eqf83d83ec252235bf@mail.gmail.com>
	<6fc03d800807082038u6c7c8fbdqc8b3466e472b9147@mail.gmail.com>
Message-ID: <3a768c550807090930l58caa08frf34ba99c153d6b3d@mail.gmail.com>

> shelnutt at Ubuntu32-L:~/wine/patches/cuda$ make
> winegcc -shared cuda.dll.spec -mno-cygwin -o cuda.dll.so cudart.o
> /usr/local/cuda/lib/libcudart.so.2.0  -lodbc32 -lole32 -loleaut32 -lwinspool
> -luuid -lcudart
> gcc: /usr/local/cuda/lib/libcudart.so.2.0: linker input file unused because
> linking not done
> winebuild: libcudart.so.2-jP21n2.o is an empty file
> winegcc: winebuild failed
> make: *** [cuda.dll.so] Error 2

Why do you need to link explicitly to libcudart.so.2.0?  Try omitting
that to see what happens.
--Juan


From truiken at gmail.com  Wed Jul  9 11:36:09 2008
From: truiken at gmail.com (James Hawkins)
Date: Wed, 9 Jul 2008 11:36:09 -0500
Subject: [dplayx 02/29] Tests for DirectPlayCreate
In-Reply-To: <1215620481.17834.36.camel@hermes2.karcher.local>
References: <82e274890807090848l3d5d872fmfd6240bc3bd0adaa@mail.gmail.com>
	<1215620481.17834.36.camel@hermes2.karcher.local>
Message-ID: <22821af30807090936y3c82f4d3ocd7c86b1ffd55c9c@mail.gmail.com>

On Wed, Jul 9, 2008 at 11:21 AM, Michael Karcher
<wine at mkarcher.dialup.fu-berlin.de> wrote:
> Hello Ismael,
>
> reviewing this patch shows some issues.
>
> ?> +#define _okHR(expected, result)                         \
>> +    ok( (expected) == (result),                         \
>> +        "expected=%d(%s) got=%d(%s)\n",                 \
>> +        HRESULT_CODE(expected), dpResult2str(expected), \
>> +        HRESULT_CODE(result), dpResult2str(result) );
> I dislike the order of the parameters and the name. You would write
>  ok( hr == DP_OK, "Something failed with %x\n", hr);
> In this line, "hr" is before "DP_OK". So as an analogy, I also want to
> write
>  _okHR( hr, DD_OK );
>
> Why do you start the macro name with an underscore? And last but not
> least: As I see it, a static inline would do the job too, and is always
> preferrable to macros.
>

We use macros for this (ok*/expected) all over the code base whenever
the check is small enough.  See dlls/comctl32/tests/trackbar.c:28 for
an example.  If you use an inlined function, you either have to pass
the __LINE__ value to the function or wrap the call to the function in
a macro anyway.

-- 
James Hawkins

From razielmine at gmail.com  Wed Jul  9 12:15:34 2008
From: razielmine at gmail.com (Ismael Barros)
Date: Wed, 9 Jul 2008 20:15:34 +0300
Subject: [dplayx 02/29] Tests for DirectPlayCreate
In-Reply-To: <1215620481.17834.36.camel@hermes2.karcher.local>
References: <82e274890807090848l3d5d872fmfd6240bc3bd0adaa@mail.gmail.com>
	<1215620481.17834.36.camel@hermes2.karcher.local>
Message-ID: <82e274890807091015j65322668nff1847b8f52172dc@mail.gmail.com>

Thanks for the review :)

On 7/9/08, Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> wrote:
> Hello Ismael,
>
> reviewing this patch shows some issues.
>
> ?> +#define _okHR(expected, result)                         \
>> +    ok( (expected) == (result),                         \
>> +        "expected=%d(%s) got=%d(%s)\n",                 \
>> +        HRESULT_CODE(expected), dpResult2str(expected), \
>> +        HRESULT_CODE(result), dpResult2str(result) );
> I dislike the order of the parameters and the name. You would write
>  ok( hr == DP_OK, "Something failed with %x\n", hr);
> In this line, "hr" is before "DP_OK". So as an analogy, I also want to
> write
>   _okHR( hr, DD_OK );

Depending on the situation I write ok( DP_OK == hr ) instead of ok( hr
== DP_OK, ... ), specially if instead of "hr" there is a DirectPlay
call or some complex expression, in order to improve readability.
Regarding this second case, I decided to use the (expected, result)
order, but it's true that sometimes it can be confusing.

> Why do you start the macro name with an underscore?

Because _okHR compares HRESULT codes, but there's also _ok to compare
integers, or _okFlags to compare flags (the main difference being how
to print info about the expected and actual values), or _okStr to
compare strings.

> And last but not
> least: As I see it, a static inline would do the job too, and is always
> preferrable to macros.

The main reason of using ditry macros instead of functions was to
preserve the __LINE__ number, otherwise the debug information provided
is pretty much useless.

>> +    heap = HeapCreate( 0, 0, 0 );
> Do you have any reason to create your own heap? Each windows process
> already comes equipped with a standard heap you can obtain using the API
> function GetProcessHeap, so this line:
>> +    IUnknown* pUnk = HeapAlloc( heap, 0, sizeof(LPDWORD) );
> would then look like:
> +    IUnknown* pUnk = HeapAlloc( GetProcessHeap(), 0, sizeof(LPDWORD) );

That's what I used in the begining, but I've got some HeapAllocs that
I don't free. This is intended, as freeing that memory would make the
code unnecessarily complex, I can't use static local variables (I use
the result of the function inside the same ok() or trace()), and
loosing memory is always undesirable but not critical in a test case.
The main problem was to get yelled when valgrind complains about the
memory leak, and Kai Blin advised me to use my own heap to avoid
valgrind complains.
Anyway is this is too dirty I'll have no problem in doing it "correctly".

> Another point is that this line is totally wrong anyway. An IUnknown* is
> a pointer to an COM object, which starts with a vtable pointer. You let
> pUnk point to uninitialized memory. While it doesn't matter in this case
> (as DirectPlayCreate will never access what the pointer points to), it
> is really bad style. I understand the intention to test that aggregation
> is not supported for DirectPlay, but you still should keep the contract
> of the creation function that pUnk either is NULL or points to a valid
> COM object. A basic COM object is just a pointer to a vtable that
> contains a QueryInterface method that returns "this" for IUnknown and
> fails in every other case, an AddRef method that returns 2 and does
> nothing, and a Release method that returns 1 and does nothing else.

I just wrote is to check the return value in case of pUnk != NULL, but
there would be no problem in either removing that test (it's probably
unneeded) or doing it the right way.

>
>> ?+    /* pUnk==NULL, pDP!=NULL */
>> +    hr = DirectPlayCreate( NULL, &pDP, NULL );
>> +    _okHR( DPERR_INVALIDPARAMS, hr );
>> +    hr = DirectPlayCreate( (LPGUID) &_GUID_NULL, &pDP, NULL );
>> +    _okHR( DP_OK, hr );
>> +    hr = DirectPlayCreate( (LPGUID) &DPSPGUID_TCPIP, &pDP, NULL );
>> +    todo_wine _okHR( DP_OK, hr );
>
> Here you are leaking DirectPlay objects. If DirectPlayCreate worked, you
> have to release the object before you overwrite pDP (by passing it to
> DirectPlayCreate again) using IDirectPlay_Release(pDP).

Roger

> Regards,
>   Michael Karcher
>
>

From julliard at winehq.org  Wed Jul  9 13:29:47 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Wed, 09 Jul 2008 20:29:47 +0200
Subject: Crashes in winetest under wine
In-Reply-To: <bcab73240807072242v74971f64i58658baf593fece8@mail.gmail.com>
	(Austin Lund's message of "Tue, 8 Jul 2008 15:42:02 +1000")
References: <bcab73240807022356k4e0be5b0me7b6de8b5f6a4aca@mail.gmail.com>
	<bcab73240807061611g6e5f11e7maecc1faee5b6ea27@mail.gmail.com>
	<bcab73240807072242v74971f64i58658baf593fece8@mail.gmail.com>
Message-ID: <87od56nc6c.fsf@wine.dyndns.org>

"Austin Lund" <austin.lund at gmail.com> writes:

> 2008/7/7 Austin Lund <austin.lund at gmail.com>:
>> 2008/7/3 Austin Lund <austin.lund at gmail.com>:
>>> I get a crash all the time in winetest since 1.0.  Seems there is not
>>> a problem with any of the tests themselves (i.e. running make test).
>>>
>>> The last few lines of output from winetest is:
>>>
>>> fixme:xrandr:X11DRV_XRandR_SetCurrentMode Cannot change screen BPP from 32 to 8
>>> fixme:xrandr:X11DRV_XRandR_SetCurrentMode Cannot change screen BPP from 32 to 16
>>> err:x11settings:X11DRV_ChangeDisplaySettingsEx No matching mode found
>>> 1440x900x24 @0! (XRandR)
>>> err:ntdll:RtlpWaitForCriticalSection section 0x7bc91824 "loader.c:
>>> loader_section" wait timed out in thread 0039, blocked by 0036,
>>> retrying (60 sec)
>>> wine: Critical section 7bc91824 wait failed at address 0x7bc3ab60
>>> (thread 0039), starting debugger...
>>> err:seh:raise_exception Unhandled exception code c0000194 flags 0 addr
>>> 0x7bc3ab60

The problem is the localspl/spoolss/winspool.drv dependency mess, trying
to load one of these dlls causes a crash inside the loader, which then
causes the loader section to not be released properly.

-- 
Alexandre Julliard
julliard at winehq.org


From kai.blin at gmail.com  Wed Jul  9 13:51:08 2008
From: kai.blin at gmail.com (Kai Blin)
Date: Wed, 9 Jul 2008 20:51:08 +0200
Subject: [dplayx 02/29] Tests for DirectPlayCreate
In-Reply-To: <82e274890807091015j65322668nff1847b8f52172dc@mail.gmail.com>
References: <82e274890807090848l3d5d872fmfd6240bc3bd0adaa@mail.gmail.com>
	<1215620481.17834.36.camel@hermes2.karcher.local>
	<82e274890807091015j65322668nff1847b8f52172dc@mail.gmail.com>
Message-ID: <200807092051.11586.kai.blin@gmail.com>

On Wednesday 09 July 2008 19:15:34 Ismael Barros wrote:
>
> >> +    heap = HeapCreate( 0, 0, 0 );
> >
> > Do you have any reason to create your own heap? Each windows process
> > already comes equipped with a standard heap you can obtain using the API

> That's what I used in the begining, but I've got some HeapAllocs that
> I don't free. This is intended, as freeing that memory would make the
> code unnecessarily complex, I can't use static local variables (I use
> the result of the function inside the same ok() or trace()), and
> loosing memory is always undesirable but not critical in a test case.
> The main problem was to get yelled when valgrind complains about the
> memory leak, and Kai Blin advised me to use my own heap to avoid
> valgrind complains.
> Anyway is this is too dirty I'll have no problem in doing it "correctly".

This might just be me getting used to Samba's libtalloc too much, but what 
downside is there to allocate all memory for a test case on one heap and just 
freeing that once you're done?

Cheers,
Kai

-- 
Kai Blin
WorldForge developer  http://www.worldforge.org/
Wine developer        http://wiki.winehq.org/KaiBlin
Samba team member     http://www.samba.org/samba/team/
--
Will code for cotton.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part.
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080709/a9452537/attachment.pgp 

From andre.wisplinghoff at gmail.com  Wed Jul  9 06:36:19 2008
From: andre.wisplinghoff at gmail.com (Andre Wisplinghoff)
Date: Wed, 9 Jul 2008 13:36:19 +0200
Subject: Feedback for "Regedit: Implement deleting multiple values"
Message-ID: <544f39c10807090436u1fe831d5id9dd237466ab79d5@mail.gmail.com>

Hallo,

my patch [1] wasn't applied. Can anyone give me a hint what wasn't OK with
it?
Thanks for your time.

Best Regards
- Andre Wisplinghoff

[1] http://www.winehq.org/pipermail/wine-patches/2008-July/057227.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080709/75d660f1/attachment.htm 

From ivan at etersoft.ru  Wed Jul  9 08:23:35 2008
From: ivan at etersoft.ru (Ivan Sinitsin)
Date: Wed, 9 Jul 2008 17:23:35 +0400
Subject: mshtml.dll:Add implementation of HTMLDocument_(Get|Set)Title
In-Reply-To: <486E4074.8000102@codeweavers.com>
References: <200807041117.53391.ivan@etersoft.ru>
	<486E4074.8000102@codeweavers.com>
Message-ID: <200807091723.36465.ivan@etersoft.ru>

? ????????? ?? Friday 04 July 2008 19:23:32 ?? ????????:
> Ivan Sinitsin wrote:
> > Changelog:
> >     mshtml.dll:Add implementation of HTMLDocument_(Get|Set)Title
>
> First of all it would be nice if you could add a test case for these.
>
Hi, 

I make test for HTMLDocument_(Get|Set)Title.
What do you think about it? Is it right?

On IE it - ok, but Gecko - failed.

>
> Jacek

--
Sinitsin Ivan
-------------- next part --------------
From 1456122d0ec239b1e34bc409c560f0da4ce39f2a Mon Sep 17 00:00:00 2001
From: Sinitsin Ivan <ivan at etersoft.ru>
Date: Wed, 9 Jul 2008 17:16:38 +0400
Subject: [PATCH] add test for HTMLDocument_(Get|Put)Title

---
 dlls/mshtml/tests/htmldoc.c |   27 +++++++++++++++++++++++++++
 1 files changed, 27 insertions(+), 0 deletions(-)

diff --git a/dlls/mshtml/tests/htmldoc.c b/dlls/mshtml/tests/htmldoc.c
index 4de5286..1eecb59 100644
--- a/dlls/mshtml/tests/htmldoc.c
+++ b/dlls/mshtml/tests/htmldoc.c
@@ -3664,6 +3664,32 @@ static void test_external(IUnknown *unk, BOOL initialized)
     IHTMLWindow2_Release(htmlwin);
 }
 
+static void test_Title(IUnknown *unk)
+{
+    IHTMLDocument2 *htmldoc;
+    BSTR ptitle, gtitle;
+    const WCHAR title[] = {
+    'H','T','M','L',' ','T','i','t','l','e',0};
+    HRESULT hres;
+
+    hres = IUnknown_QueryInterface(unk, &IID_IHTMLDocument2, (void**)&htmldoc);
+    ok(hres == S_OK, "QueryInterface(IID_IHTMLWindow2) failed: %08x\n", hres);
+
+    ptitle = SysAllocString(title);
+
+    hres = IHTMLDocument2_put_title(htmldoc, ptitle);
+    ok(hres == S_OK, "put_Title failed: %08x\n", hres);
+
+    hres = IHTMLDocument2_get_title(htmldoc, &gtitle);
+    ok(hres == S_OK, "get_Title failed: %08x\n", hres);
+
+    ok(!lstrcmpiW(ptitle, gtitle), "title not equal \n");
+
+    SysFreeString(ptitle);
+    SysFreeString(gtitle);
+    IHTMLDocument2_Release(htmldoc);
+}
+
 static void test_StreamLoad(IUnknown *unk)
 {
     IPersistStreamInit *init;
@@ -3785,6 +3811,7 @@ static void test_HTMLDocument(BOOL do_load)
     test_OnAmbientPropertyChange(unk);
     test_Window(unk, TRUE);
     test_external(unk, TRUE);
+    if (do_load) test_Title(unk);
 
     test_UIDeactivate();
     test_OleCommandTarget(unk);
-- 
1.5.4.5.GIT


From chris.kcat at gmail.com  Wed Jul  9 17:18:42 2008
From: chris.kcat at gmail.com (Chris Robinson)
Date: Wed, 9 Jul 2008 15:18:42 -0700
Subject: Revert "winemp3: Don't keep unused data buffered."
In-Reply-To: <b130c85e0807091144y50cefb24gb663a10df53eae04@mail.gmail.com>
References: <b130c85e0807091144y50cefb24gb663a10df53eae04@mail.gmail.com>
Message-ID: <200807091518.42998.chris.kcat@gmail.com>

On Wednesday 09 July 2008 11:44:17 am Maarten Lankhorst wrote:
> This reverts commit 8f46a5119249562aceabff6d120948cbfacb6423.
> The data isn't unused, mp3's can set up 'bit buckets', so while the
> bit rate is constant, some data is needed anyway for later playback.
> ---

I don't believe reverting this is correct. Some apps needed this change to 
keep from stopping the stream prematurely (indeed, acmwrapper does not make 
sure all data is flushed out after using all input data). See bug 11659 
<http://bugs.winehq.org/show_bug.cgi?id=11659>.


From xixsimplicityxix at gmail.com  Wed Jul  9 17:33:44 2008
From: xixsimplicityxix at gmail.com (John Klehm)
Date: Wed, 9 Jul 2008 17:33:44 -0500
Subject: Feedback for "Regedit: Implement deleting multiple values"
In-Reply-To: <544f39c10807090436u1fe831d5id9dd237466ab79d5@mail.gmail.com>
References: <544f39c10807090436u1fe831d5id9dd237466ab79d5@mail.gmail.com>
Message-ID: <78a7dad00807091533s8b20265r7e18be6270a38751@mail.gmail.com>

On Wed, Jul 9, 2008 at 6:36 AM, Andre Wisplinghoff
<andre.wisplinghoff at gmail.com> wrote:
> Hallo,
>
> my patch [1] wasn't applied. Can anyone give me a hint what wasn't OK with
> it?
> Thanks for your time.
>

Couple non code things:

1) Real name in the patch.
2) No html email

--John Klehm


From wine at mkarcher.dialup.fu-berlin.de  Wed Jul  9 17:47:59 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Thu, 10 Jul 2008 00:47:59 +0200
Subject: [dplayx 02/29] Tests for DirectPlayCreate
In-Reply-To: <82e274890807091015j65322668nff1847b8f52172dc@mail.gmail.com>
References: <82e274890807090848l3d5d872fmfd6240bc3bd0adaa@mail.gmail.com>
	<1215620481.17834.36.camel@hermes2.karcher.local>
	<82e274890807091015j65322668nff1847b8f52172dc@mail.gmail.com>
Message-ID: <1215643679.24017.26.camel@hermes2.karcher.local>

Am Mittwoch, den 09.07.2008, 20:15 +0300 schrieb Ismael Barros:
> Thanks for the review :)
No problem.


> On 7/9/08, Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> wrote:
> > I dislike the order of the parameters and the name. You would write
> Because _okHR compares HRESULT codes, but there's also _ok to compare
> integers, or _okFlags to compare flags (the main difference being how
> to print info about the expected and actual values), or _okStr to
> compare strings.
OK, taking back the criticism on parameter order. Passing the actual
value last is common practice in the user32 test, so your variant has a
precedence case in wine. Yet I couldn't find these kind of macros
starting with an underscore. More on that point below.

> > And last but not
> > least: As I see it, a static inline would do the job too, and is always
> > preferrable to macros.
> The main reason of using ditry macros instead of functions was to
> preserve the __LINE__ number, otherwise the debug information provided
> is pretty much useless.
Yes, you are right of course. I didn't think of __LINE__ (also James
noted the same thing). Now you get to the point where a precedence case
for identifiers with an underscore are used: shell32/tests/shlexec.c.
They have inline functions, called _okFooBar which take file and line as
parameter, and have a macro okFooBar which calls the _okFooBar method,
so the test case writer does not get to see the identifier starting with
an underscore. Thats how I feel about them: They are internal
identifiers, telling you "if you use this directly, you better know very
well what you are doing; most probably there is a safer or easier way to
accomplish the goal". In this case, the _okFooBar function is meant just
for the easier okFooBar macro.

> >> +    heap = HeapCreate( 0, 0, 0 );
> > Do you have any reason to create your own heap? Each windows process
> > already comes equipped with a standard heap you can obtain using the API
> > function GetProcessHeap, so this line:
> >> +    IUnknown* pUnk = HeapAlloc( heap, 0, sizeof(LPDWORD) );
> > would then look like:
> > +    IUnknown* pUnk = HeapAlloc( GetProcessHeap(), 0, sizeof(LPDWORD) );
> 
> That's what I used in the begining, but I've got some HeapAllocs that
> I don't free.
OK. That's a point. I didn't expect it, though. I would like a comment
in there along
  /* Create an extra heap to throw away garbage after tests */

> This is intended, as freeing that memory would make the
> code unnecessarily complex, I can't use static local variables (I use
> the result of the function inside the same ok() or trace()), and
> loosing memory is always undesirable but not critical in a test case.
You can use static variables, if you go along the lines of of
get_temp_buffer in libs/wine/debug.c, where a static local array is
cyclical indexed. This might not be a good idea, though, depending on
how long the result has to stay alive.

> > Another point is that this line is totally wrong anyway. An IUnknown* is
> > a pointer to an COM object, which starts with a vtable pointer. You let
> > pUnk point to uninitialized memory. While it doesn't matter in this case
> > (as DirectPlayCreate will never access what the pointer points to), it
> > is really bad style. I understand the intention to test that aggregation
> > is not supported for DirectPlay, but you still should keep the contract
> > of the creation function that pUnk either is NULL or points to a valid
> > COM object. A basic COM object is just a pointer to a vtable that
> > contains a QueryInterface method that returns "this" for IUnknown and
> > fails in every other case, an AddRef method that returns 2 and does
> > nothing, and a Release method that returns 1 and does nothing else.
> I just wrote is to check the return value in case of pUnk != NULL, but
> there would be no problem in either removing that test (it's probably
> unneeded) or doing it the right way.
A test case is always good, if it does not take too much execution time.
These tests with NULL pointers seemed strange to me when I first
encountered, as sometimes NULL pointers are passed into functions where
they are not useful or even forbidden by the documented contract. But as
wine is all about fulfilling the same contract as the windows
implementation which might deviate from MSDN, the test case serves as
documentation of Windows behavior, which is good.

But in my opinion, testing of the reaction to contract violation should
not go into passing somehow valid-looking pointers, that do not point to
anything sensible. And the main point was, that I really don't get why
it must be a heap pointer. The an LPDWORD on the stack would do as well
as allocating sizeof(LPDWORD) area.

Regards,
  Michael Karcher



From m.b.lankhorst at gmail.com  Wed Jul  9 18:18:50 2008
From: m.b.lankhorst at gmail.com (Maarten Lankhorst)
Date: Wed, 9 Jul 2008 16:18:50 -0700
Subject: Revert "winemp3: Don't keep unused data buffered."
In-Reply-To: <200807091518.42998.chris.kcat@gmail.com>
References: <b130c85e0807091144y50cefb24gb663a10df53eae04@mail.gmail.com>
	<200807091518.42998.chris.kcat@gmail.com>
Message-ID: <b130c85e0807091618k35c5c6by72c574f93fd9dccd@mail.gmail.com>

Hi Chris,

2008/7/9 Chris Robinson <chris.kcat at gmail.com>:
> On Wednesday 09 July 2008 11:44:17 am Maarten Lankhorst wrote:
>> This reverts commit 8f46a5119249562aceabff6d120948cbfacb6423.
>> The data isn't unused, mp3's can set up 'bit buckets', so while the
>> bit rate is constant, some data is needed anyway for later playback.
>> ---
>
> I don't believe reverting this is correct. Some apps needed this change to
> keep from stopping the stream prematurely (indeed, acmwrapper does not make
> sure all data is flushed out after using all input data). See bug 11659
Try any mp3 in windows media player 10 with and without your patch, it
makes mp3 playback there completely broken.

Cheers,
Maarten.


From alex at thehandofagony.com  Wed Jul  9 18:29:21 2008
From: alex at thehandofagony.com (Alexander Nicolaysen =?utf-8?q?S=C3=B8rnes?=)
Date: Thu, 10 Jul 2008 01:29:21 +0200
Subject: Feedback for "Regedit: Implement deleting multiple values"
In-Reply-To: <544f39c10807090436u1fe831d5id9dd237466ab79d5@mail.gmail.com>
References: <544f39c10807090436u1fe831d5id9dd237466ab79d5@mail.gmail.com>
Message-ID: <200807100129.21209.alex@thehandofagony.com>

P? Onsdag 09 juli 2008 , 13:36:19 skrev Andre Wisplinghoff:
> Hallo,
>
> my patch [1] wasn't applied. Can anyone give me a hint what wasn't OK with
> it?
> Thanks for your time.
>

You could use standard MessageBox() instead of making messagebox() non-static.


Alexander N. S?rnes

> Best Regards
> - Andre Wisplinghoff
>
> [1] http://www.winehq.org/pipermail/wine-patches/2008-July/057227.html




From chris.kcat at gmail.com  Wed Jul  9 18:42:34 2008
From: chris.kcat at gmail.com (Chris Robinson)
Date: Wed, 9 Jul 2008 16:42:34 -0700
Subject: Revert "winemp3: Don't keep unused data buffered."
In-Reply-To: <b130c85e0807091618k35c5c6by72c574f93fd9dccd@mail.gmail.com>
References: <b130c85e0807091144y50cefb24gb663a10df53eae04@mail.gmail.com>
	<200807091518.42998.chris.kcat@gmail.com>
	<b130c85e0807091618k35c5c6by72c574f93fd9dccd@mail.gmail.com>
Message-ID: <200807091642.34705.chris.kcat@gmail.com>

On Wednesday 09 July 2008 04:18:50 pm Maarten Lankhorst wrote:
> Try any mp3 in windows media player 10 with and without your patch, it
> makes mp3 playback there completely broken.

As mentioned in the bug <http://bugs.winehq.org/show_bug.cgi?id=11805>

The problem is either the lack of error propogating from winemp3.acm (all 
errors by it are swallowed up and acmStreamConvert returns no error), or very 
small data sources (such that not enough is provided to decode at least one 
full frame) do need to be buffered. Some testing needs to be done, although 
<http://bugs.winehq.org/show_bug.cgi?id=11659> clearly shows that "extra" 
data is not held when given enough to produce some output.


From shelnutt2 at gmail.com  Wed Jul  9 19:23:18 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Wed, 9 Jul 2008 20:23:18 -0400
Subject: CUDA wrapper
In-Reply-To: <3a768c550807091626x7310a611g9e3d14cbb2522d5d@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<6fc03d800807080821q71223f1eqf83d83ec252235bf@mail.gmail.com>
	<6fc03d800807082038u6c7c8fbdqc8b3466e472b9147@mail.gmail.com>
	<3a768c550807090930l58caa08frf34ba99c153d6b3d@mail.gmail.com>
	<6fc03d800807091539t426babearc69d3e65112edfbe@mail.gmail.com>
	<3a768c550807091542r7651ac16l5442a453e0bad70f@mail.gmail.com>
	<6fc03d800807091603w620a8186xf83f423c618fc66a@mail.gmail.com>
	<3a768c550807091612m612e0008oc53a725d3868916f@mail.gmail.com>
	<6fc03d800807091625r3826f250p208832d06c97c724@mail.gmail.com>
	<3a768c550807091626x7310a611g9e3d14cbb2522d5d@mail.gmail.com>
Message-ID: <6fc03d800807091723r14862b3h991bf6e9b254e8ca@mail.gmail.com>

Well at least it compiled, but it isn't working. We are still getting the
message that the function isn't implemented.

Initializing Nvidia gpu library
cudaMalloc CUDAStream::Allocate failed feature is not yet implemented


Now both cudamalloc and all four cuda stream's, cudaStreamCreate, Destroy,
Query and Synchronize were implemented.
I thought maybe it was because in the spec file I had the cudaStream's as
pointers (ptr) so I switched them to long but ti didn't make a difference.
Originally the argument was "stream" but I can't get any argument but ptr
and long to pass the winegcc for spec files.

http://shelnutt.twomurs.com/patches/cuda/cuda.dll.spec

Does wine need to somehow be made aware of the presence of the
cudart.dll.sofile? We tried putting it in both the system32 and the
lib folder but it
seems also that maybe WINE needs to be made aware of it?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080709/4506cd48/attachment.htm 

From austin.lund at gmail.com  Wed Jul  9 20:54:20 2008
From: austin.lund at gmail.com (Austin Lund)
Date: Thu, 10 Jul 2008 11:54:20 +1000
Subject: Crashes in winetest under wine
In-Reply-To: <87od56nc6c.fsf@wine.dyndns.org>
References: <bcab73240807022356k4e0be5b0me7b6de8b5f6a4aca@mail.gmail.com>
	<bcab73240807061611g6e5f11e7maecc1faee5b6ea27@mail.gmail.com>
	<bcab73240807072242v74971f64i58658baf593fece8@mail.gmail.com>
	<87od56nc6c.fsf@wine.dyndns.org>
Message-ID: <bcab73240807091854hc9ccb6epc8fbb2aa5432b356@mail.gmail.com>

2008/7/10 Alexandre Julliard <julliard at winehq.org>:
> "Austin Lund" <austin.lund at gmail.com> writes:
>
>> 2008/7/7 Austin Lund <austin.lund at gmail.com>:
>>> 2008/7/3 Austin Lund <austin.lund at gmail.com>:
>>>> I get a crash all the time in winetest since 1.0.  Seems there is not
>>>> a problem with any of the tests themselves (i.e. running make test).
>>>>
>>>> The last few lines of output from winetest is:
>>>>
>>>> fixme:xrandr:X11DRV_XRandR_SetCurrentMode Cannot change screen BPP from 32 to 8
>>>> fixme:xrandr:X11DRV_XRandR_SetCurrentMode Cannot change screen BPP from 32 to 16
>>>> err:x11settings:X11DRV_ChangeDisplaySettingsEx No matching mode found
>>>> 1440x900x24 @0! (XRandR)
>>>> err:ntdll:RtlpWaitForCriticalSection section 0x7bc91824 "loader.c:
>>>> loader_section" wait timed out in thread 0039, blocked by 0036,
>>>> retrying (60 sec)
>>>> wine: Critical section 7bc91824 wait failed at address 0x7bc3ab60
>>>> (thread 0039), starting debugger...
>>>> err:seh:raise_exception Unhandled exception code c0000194 flags 0 addr
>>>> 0x7bc3ab60
>
> The problem is the localspl/spoolss/winspool.drv dependency mess, trying
> to load one of these dlls causes a crash inside the loader, which then
> causes the loader section to not be released properly.
>
> --
> Alexandre Julliard
> julliard at winehq.org
>

I have opened bug 14351.


From bunglehead at gmail.com  Wed Jul  9 21:43:01 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Thu, 10 Jul 2008 06:43:01 +0400
Subject: gdiplus: Add a trailing '\n' to Wine traces.
In-Reply-To: <48753AF1.8010407@free.fr>
References: <48753AF1.8010407@free.fr>
Message-ID: <48757735.7050803@gmail.com>

Francois Gouget wrote:
> ---
>
> I believe it's independent from the spelling fixes patch. I'll 
> resubmit if not.
>
>  dlls/gdiplus/font.c  |    2 +-
>  dlls/gdiplus/image.c |    2 +-
>  2 files changed, 2 insertions(+), 2 deletions(-)
I think you should just remove a bracket here:

-    FIXME("%p (%s), %f, %p\n)", font,
+    FIXME("%p (%s), %f, %p\n", font,




From leslie_alistair at hotmail.com  Wed Jul  9 21:50:36 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Thu, 10 Jul 2008 12:50:36 +1000
Subject: gdiplus: Add a trailing '\n' to Wine traces.
References: <48753AF1.8010407@free.fr>
Message-ID: <g53tcs$jmt$1@ger.gmane.org>

> @@ -327,7 +327,7 @@ GpStatus WINGDIPAPI 
> GdipGetFontHeightGivenDPI(GDIPCONST GpFont *font, REAL dpi,
> {
>     if (!(font && height)) return InvalidParameter;
>
> -    FIXME("%p (%s), %f, %p\n)", font,
> +    FIXME("%p (%s), %f, %p\n)\n", font,
 The first \n in the fixme should be removed.

Best Regards
 Alistair Leslie-Hughes 




From stefan at codeweavers.com  Wed Jul  9 23:01:09 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Wed, 9 Jul 2008 23:01:09 -0500
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807091723r14862b3h991bf6e9b254e8ca@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>	<6fc03d800807080821q71223f1eqf83d83ec252235bf@mail.gmail.com>	<6fc03d800807082038u6c7c8fbdqc8b3466e472b9147@mail.gmail.com>	<3a768c550807090930l58caa08frf34ba99c153d6b3d@mail.gmail.com>	<6fc03d800807091539t426babearc69d3e65112edfbe@mail.gmail.com>	<3a768c550807091542r7651ac16l5442a453e0bad70f@mail.gmail.com>	<6fc03d800807091603w620a8186xf83f423c618fc66a@mail.gmail.com>	<3a768c550807091612m612e0008oc53a725d3868916f@mail.gmail.com>	<6fc03d800807091625r3826f250p208832d06c97c724@mail.gmail.com>	<3a768c550807091626x7310a611g9e3d14cbb2522d5d@mail.gmail.com>
	<6fc03d800807091723r14862b3h991bf6e9b254e8ca@mail.gmail.com>
Message-ID: <007b01c8e241$96739d10$c35ad730$@com>

Wine links against cudart.dll.so from /usr/lib/ or wherever it is. You don't
have to put it in C:\windows\... .

 

You can put a TRACE or ERR into the cudaMalloc(or whatever) function
implementation in your code to write a message to check if the functions are
properly called. I suspect they are, and that libcudart.so writes those
errors. This would then mean that the Windows and Linux cuda libraries are
different, and some features are missing in the Linux version. If that is
true, the only thing you can do is to contact Nvidia and ask them for help

 

 

From: wine-devel-bounces at winehq.org [mailto:wine-devel-bounces at winehq.org]
On Behalf Of Seth Shelnutt
Sent: Wednesday, July 09, 2008 7:23 PM
To: Juan Lang; wine-devel at winehq.org
Subject: Re: CUDA wrapper

 

Well at least it compiled, but it isn't working. We are still getting the
message that the function isn't implemented.

Initializing Nvidia gpu library
cudaMalloc CUDAStream::Allocate failed feature is not yet implemented


Now both cudamalloc and all four cuda stream's, cudaStreamCreate, Destroy,
Query and Synchronize were implemented.
I thought maybe it was because in the spec file I had the cudaStream's as
pointers (ptr) so I switched them to long but ti didn't make a difference.
Originally the argument was "stream" but I can't get any argument but ptr
and long to pass the winegcc for spec files.

http://shelnutt.twomurs.com/patches/cuda/cuda.dll.spec

Does wine need to somehow be made aware of the presence of the cudart.dll.so
file? We tried putting it in both the system32 and the lib folder but it
seems also that maybe WINE needs to be made aware of it?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080709/31712026/attachment.htm 

From hongbo_ni at hotmail.com  Thu Jul 10 03:00:40 2008
From: hongbo_ni at hotmail.com (Hongbo Ni)
Date: Thu, 10 Jul 2008 18:00:40 +1000
Subject: [PATCH] RE: user32: Problem using SetClassLongW to subclass
	built-in control (Edit)
In-Reply-To: <BAY118-W20A6B8E0937B3AB246C43694960@phx.gbl>
References: <BAY118-W20A6B8E0937B3AB246C43694960@phx.gbl>
Message-ID: <BAY118-W52EBAC153ED65A65F593D594910@phx.gbl>


Hi,

I have write a patch for the problem, please comment.

===========================================================================
--- wine-1.1.0-orig/dlls/user32/class.c 2008-06-28 00:24:42.000000000 +1000
+++ wine-1.1.0/dlls/user32/class.c      2008-07-10 17:35:11.000000000 +1000
@@ -906,9 +906,18 @@ static ULONG_PTR CLASS_SetClassLong( HWN
         retval = 0;  /* Old value is now meaningless anyway */
         break;
     case GCLP_WNDPROC:
-        retval = (ULONG_PTR)WINPROC_GetProc( class->winproc, unicode );
-        class->winproc = WINPROC_AllocProc( unicode ? NULL : (WNDPROC)newval,
-                                            unicode ? (WNDPROC)newval : NULL );
+        if( unicode && class->winproc == EDIT_winproc_handle )
+        {
+            retval = class->winproc;
+            /* if subclassing Edit class, WndProc must handle both Ansi and Unicode Message*/
+            class->winproc = WINPROC_AllocProc( (WNDPROC)newval, (WNDPROC)newval );
+        }
+        else
+        {
+            retval = (ULONG_PTR)WINPROC_GetProc( class->winproc, unicode );
+            class->winproc = WINPROC_AllocProc( unicode ? NULL : (WNDPROC)newval,
+                                                unicode ? (WNDPROC)newval : NULL );
+        }
         break;
     case GCLP_HBRBACKGROUND:
         retval = (ULONG_PTR)class->hbrBackground;

--- wine-1.1.0-orig/dlls/user32/winproc.c       2008-06-28 00:24:42.000000000 +1000
+++ wine-1.1.0/dlls/user32/winproc.c    2008-07-10 17:35:11.000000000 +1000
@@ -145,7 +145,7 @@ static inline WINDOWPROC *alloc_winproc(
     /* check if we already have a winproc for that function */
     if (!(proc = find_winproc( funcA, funcW )))
     {
-        if (funcA && funcW)
+        if (funcA && funcW && builtin_used < BUILTIN_WINPROCS )
         {
             assert( builtin_used < BUILTIN_WINPROCS );
             proc = &winproc_array[builtin_used++];

=====================================================================================
________________________________
> From: hongbo_ni at hotmail.com
> To: wine-devel at winehq.org
> Subject: user32: Problem using SetClassLongW to subclass built-in control (Edit)
> Date: Wed, 9 Jul 2008 22:06:22 +1000
> 
> Hi,
> 
> Summary: SetClassLongW(hEdit, GCL_WNDPROC,(DWORD)NewEditWndProc) in Wine differs from Windows.
> 
> Background:  when a standard built-in window class (such as Edit for example) is registered initially,
> the window system register the class with two Procedures (procA and ProcW) and assign a handle as
> WNDPROC to the class.  If a Edit window is created using CreateWindowExA, it will be an Ansi Window.
> If a Edit window is created using CreateWindowExW, it will be an Unicode Window. This fine in Wine.
> 
> Problem: I globally subclass the Edit class using SetClassLongW using following code
> ------------------------------------------------------------------------------------------------------------
>   HWND hEdit = CreateWindowExA(0,"Edit", "E1",WS_POPUP,0, 0, 1,1,NULL,NULL,NULL,NULL);
>   OldEditWndProc =(WNDPROC)SetClassLongW(hEdit, GCL_WNDPROC,(DWORD)NewEditWndProc);
> ------------------------------------------------------------------------------------------------------------
> After this subclass, Wine behaves different from Windows
> 
> In Windows: a new Edit windows created by CreateWindowsExA((0,"Edit",...) is a Still an Ansi Windows
>                    a new Edit windows created by CreateWindowsExW((0,"Edit",...) is a Unicode Windows
> 
> But in Wine, new Edit windows created by CreateWindowsExA or CreateWindowsExW are all Unicode Windows.
> I checked wine 1.1 source code , basically the call to
> SetClassLongW(hEdit, GCL_WNDPROC,(DWORD)NewEditWndProc) has set the Edit class proc to Unicode Only.
> So regardless how you create the Edit window, it will be Unicode window.
> 
> This is understandable but it's different form windows. causing my application to mis-behave.
> 
> More problem, the OldEditWndProc returned above is only the procW of Edit class, if we try to
> undo the subclass with
>        SetClassLongW(hEdit, GCL_WNDPROC,(DWORD)OldEditWndProc );
> the Edit class also lost it's procA.
> 
> Discussion: How wine could do the same as windows?
> 
> SetClassLongW(hEdit, GCL_WNDPROC,(DWORD)NewEditWndProc) should
> 
> 1. return the proc handle of the class, instead of procW.
> 
> 2. set both ProcA and ProcW of Edit class to NewEditWndProc.
>     so  NewEditWndProc need to handle both messages from Ansi and Unicode Edit control.
> 
> I don't know what is the best way to fix this. Please help.
> 
> I have posted a Test application on Bugzilla #14350, please try.
> 
> Regards
> Hongbo
> 
> 
> 
> 
> ________________________________
> Find out: SEEK Salary Centre Are you paid what you're worth? 

_________________________________________________________________
Are you paid what you're worth? Find out: SEEK Salary Centre
http://a.ninemsn.com.au/b.aspx?URL=http%3A%2F%2Fninemsn%2Eseek%2Ecom%2Eau%2Fcareer%2Dresources%2Fsalary%2Dcentre%2F%3Ftracking%3Dsk%3Ahet%3Asc%3Anine%3A0%3Ahot%3Atext&_t=764565661&_r=OCT07_endtext_salary&_m=EXT

From winehacker at gmail.com  Thu Jul 10 03:06:15 2008
From: winehacker at gmail.com (Steven Edwards)
Date: Thu, 10 Jul 2008 04:06:15 -0400
Subject: Support of USB hardware tokens
In-Reply-To: <200807081805.38572.amorozov@etersoft.ru>
References: <a71bd89a0807070442p3bd7ea3x463aaf3810a006a1@mail.gmail.com>
	<200807081805.38572.amorozov@etersoft.ru>
Message-ID: <19e31a080807100106s2c403c51l7264a3abd3422671@mail.gmail.com>

On Tue, Jul 8, 2008 at 10:05 AM, Alexander Morozov <amorozov at etersoft.ru> wrote:
> Conformance tests should consist of a driver and a program to load
> it. I do not know other method to call functions from ntoskrnl.exe and
> usbd.sys on Windows. But I have a problem with building drivers with MinGW. I
> was able to create a driver which is loading on Wine with manual editing of
> PE header but it does not work on Windows and I do not understand what should
> change to fix this. Did somebody build NT drivers with MinGW?

Look at how the ReactOS guys are doing it. I know for a fact that some
of their developers build certain drivers like the ReactOS VBE driver
and test it under NT4 and others so Mingw can do it.

-- 
Steven Edwards

"There is one thing stronger than all the armies in the world, and
that is an idea whose time has come." - Victor Hugo


From fgouget at free.fr  Thu Jul 10 03:48:40 2008
From: fgouget at free.fr (Francois Gouget)
Date: Thu, 10 Jul 2008 10:48:40 +0200 (CEST)
Subject: gdiplus: Add a trailing '\n' to Wine traces.
In-Reply-To: <48757735.7050803@gmail.com>
References: <48753AF1.8010407@free.fr> <48757735.7050803@gmail.com>
Message-ID: <alpine.DEB.1.10.0807101047220.23600@amboise.dolphin>

On Thu, 10 Jul 2008, Nikolay Sivov wrote:
[...]
> >  dlls/gdiplus/font.c  |    2 +-
> >  dlls/gdiplus/image.c |    2 +-
> >  2 files changed, 2 insertions(+), 2 deletions(-)
> I think you should just remove a bracket here:
> 
> -    FIXME("%p (%s), %f, %p\n)", font,
> +    FIXME("%p (%s), %f, %p\n", font,

Damn, that's why I manually review all these changes. I couldn't see 
straight at the time obviously. I will resubmit.

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
May your Tongue stick to the Roof of your Mouth with the Force of a Thousand Caramels.


From huw at codeweavers.com  Thu Jul 10 04:21:35 2008
From: huw at codeweavers.com (Huw Davies)
Date: Thu, 10 Jul 2008 10:21:35 +0100
Subject: [Gdiplus 2/3] Add a test for a floating-point triangle
In-Reply-To: <1215665095.6779.30.camel@belthazor-saved.triad.rr.com>
References: <1215665095.6779.30.camel@belthazor-saved.triad.rr.com>
Message-ID: <20080710092135.GA11644@merlot.physics.ox.ac.uk>

Hi Adam,

This is mainly a brain-dump, there's nothing wrong the patch.


On Thu, Jul 10, 2008 at 12:44:55AM -0400, Adam Petaccia wrote:
> ---
>  dlls/gdiplus/tests/region.c |   38 ++++++++++++++++++++++++++++++++++++++
>  1 files changed, 38 insertions(+), 0 deletions(-)
> 
> diff --git a/dlls/gdiplus/tests/region.c b/dlls/gdiplus/tests/region.c
> index 1b1b047..7b1eba5 100644
> --- a/dlls/gdiplus/tests/region.c
> +++ b/dlls/gdiplus/tests/region.c
> @@ -361,6 +361,44 @@ todo_wine
>      expect(Ok, status);
>      status = GdipDeleteRegion(region);
>      expect(Ok, status);

> +    status = GdipGetRegionDataSize(region, &needed);
> +    expect(Ok, status);
> +    ok(needed == 72, "Expected 72, got %d\n", needed);
> +    status = GdipGetRegionData(region, (BYTE*)buf, sizeof(buf), &needed);
> +    expect(Ok, status);
> +    expect_dword(buf, 64);
> +    trace("buf[1] = %08x\n", buf[1]);
> +    expect_dword(buf + 2, RGNDATA_MAGIC);
> +    expect_dword(buf + 3, 0);
> +    expect_dword(buf + 4, RGNDATA_PATH);
> +
> +    expect_dword(buf + 5, 48);
> +    expect_dword(buf + 6, RGNDATA_MAGIC);
> +    expect_dword(buf + 7, 4);
> +    expect_dword(buf + 8, 0);
> +    expect_float(buf + 9, 5.6);
> +    expect_float(buf + 10, 6.2);
> +    expect_float(buf + 11, 7.2);
> +    expect_float(buf + 12, 8.9);
> +    expect_float(buf + 13, 8.1);
> +    expect_float(buf + 14, 1.6);
> +    expect_float(buf + 15, 5.6);
> +    expect_float(buf + 16, 6.2);

There's one more DWORD left here (buf + 17).

I realised after I sent in my last lot of tests that this is the BYTE
array of PathPointType*s packed into DWORDs (hence the 0x81...... vs
0x01...... that you noted in an earlier patch).

As you've also noticed there are two ways of storing paths, if all the
co-ords are short ints then they get stored that way and the
0x00004000 bit of buf + 8 is set.  Otherwise the co-ords are stored as floats.

In addition, the 0x00002000 bit of that same DWORD corresponds to the FillMode
of the path.

Anyway, good work!

Huw.
-- 
Huw Davies
huw at codeweavers.com


From msclrhd at googlemail.com  Thu Jul 10 03:41:08 2008
From: msclrhd at googlemail.com (Reece Dunn)
Date: Thu, 10 Jul 2008 09:41:08 +0100
Subject: [PATCH] RE: user32: Problem using SetClassLongW to subclass
	built-in control (Edit)
In-Reply-To: <BAY118-W52EBAC153ED65A65F593D594910@phx.gbl>
References: <BAY118-W20A6B8E0937B3AB246C43694960@phx.gbl>
	<BAY118-W52EBAC153ED65A65F593D594910@phx.gbl>
Message-ID: <3f4fd2640807100141w203bfe6sef4caf6c28e9b742@mail.gmail.com>

2008/7/10 Hongbo Ni <hongbo_ni at hotmail.com>:
> I have write a patch for the problem, please comment.
> +        if( unicode && class->winproc == EDIT_winproc_handle )

Is it just the EDIT window procedure that is affected? I suspect that
this will apply to all classes that have A and W variants.

I also suspect that this is wrong. AFAICS, the class name Windows uses
is "EDIT", not "EDITA"/"EDITW"; the problem lies in SetWindowProc, so
it is likely you need to track both the A and W procs, selecting the
appropriate one depending on the variant of SetWindowProc is called.
CreateWindow would also need to select the correct one and
RegisterWindowClass would need to set the A and W variants initially.
However, I am not sure on this, so you need tests.

Also, this patch (when sent to the wine-patches list) will stand a
better chance of getting in if there are some tests to verify the
behaviour on Windows and deficiency in Wine.

You need to check what procs are returned when. Use your original
email as the basis for the test.

Thanks for improving Wine,
- Reece


From julliard at winehq.org  Thu Jul 10 06:40:04 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 10 Jul 2008 13:40:04 +0200
Subject: regedit: 3/7 Convert the rest of setValue to unicode
In-Reply-To: <200807092352.57864.alex@thehandofagony.com> ("Alexander
	Nicolaysen =?utf-8?Q?S=C3=B8rnes=22's?= message of "Wed, 9 Jul 2008
	23:52:57 +0200")
References: <200807092352.57864.alex@thehandofagony.com>
Message-ID: <87hcaym0h7.fsf@wine.dyndns.org>

Alexander Nicolaysen S?rnes <alex at thehandofagony.com> writes:

> @@ -185,13 +199,16 @@ static DWORD getDataType(LPSTR *lpValue, DWORD* parse_type)
>          *lpValue+=ptr->len;
>          if (type == -1) {
>              char* end;
> +            char* buf = HeapAlloc(GetProcessHeap(), 0, (lstrlenW(*lpValue)+1)*sizeof(WCHAR));
> +            WideCharToMultiByte(CP_ACP, 0, *lpValue, -1, buf, (lstrlenW(*lpValue)+1)*sizeof(WCHAR), NULL, NULL);
>              /* "hex(xx):" is special */
> -            type = (int)strtoul( *lpValue , &end, 16 );
> -            if (**lpValue=='\0' || *end!=')' || *(end+1)!=':') {
> +            type = (int)strtoul( buf , &end, 16 );
> +            if (*buf=='\0' || *end!=')' || *(end+1)!=':') {
>                  type=REG_NONE;
>              } else {
> -                *lpValue=end+2;
> +                *lpValue += (end - buf)*sizeof(WCHAR) + 2;

The last line is not correct, besides we have strtoulW so you don't need
any of that W->A conversion.

-- 
Alexandre Julliard
julliard at winehq.org


From fgouget at free.fr  Thu Jul 10 07:06:57 2008
From: fgouget at free.fr (Francois Gouget)
Date: Thu, 10 Jul 2008 14:06:57 +0200 (CEST)
Subject: [dplayx 02/29] Tests for DirectPlayCreate
In-Reply-To: <200807092051.11586.kai.blin@gmail.com>
References: <82e274890807090848l3d5d872fmfd6240bc3bd0adaa@mail.gmail.com>
	<1215620481.17834.36.camel@hermes2.karcher.local>
	<82e274890807091015j65322668nff1847b8f52172dc@mail.gmail.com>
	<200807092051.11586.kai.blin@gmail.com>
Message-ID: <alpine.DEB.1.10.0807101405140.18163@amboise.dolphin>

On Wed, 9 Jul 2008, Kai Blin wrote:

> On Wednesday 09 July 2008 19:15:34 Ismael Barros wrote:
> >
> > >> +    heap = HeapCreate( 0, 0, 0 );
> > >
> > > Do you have any reason to create your own heap? Each windows process
> > > already comes equipped with a standard heap you can obtain using the API
> 
> > That's what I used in the begining, but I've got some HeapAllocs that
> > I don't free. This is intended, as freeing that memory would make the
> > code unnecessarily complex, I can't use static local variables (I use
> > the result of the function inside the same ok() or trace()), and
> > loosing memory is always undesirable but not critical in a test case.
> > The main problem was to get yelled when valgrind complains about the
> > memory leak, and Kai Blin advised me to use my own heap to avoid
> > valgrind complains.
> > Anyway is this is too dirty I'll have no problem in doing it "correctly".
> 
> This might just be me getting used to Samba's libtalloc too much, but what 
> downside is there to allocate all memory for a test case on one heap and just 
> freeing that once you're done?

Would it cause trouble for Valgrind? I.e. will Valgrind recognize that 
the heap destruction actually frees all the relevant HeapAlloc() 
calls? Or will it just report massive memory leakage?

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                  Hiroshima '45 - Czernobyl '86 - Windows '95


From mikolaj at zalewski.pl  Thu Jul 10 07:33:46 2008
From: mikolaj at zalewski.pl (=?UTF-8?B?TWlrb8WCYWogWmFsZXdza2k=?=)
Date: Thu, 10 Jul 2008 14:33:46 +0200
Subject: user32: Problem using SetClassLongW to subclass	built-in control
	(Edit)
In-Reply-To: <BAY118-W52EBAC153ED65A65F593D594910@phx.gbl>
References: <BAY118-W20A6B8E0937B3AB246C43694960@phx.gbl>
	<BAY118-W52EBAC153ED65A65F593D594910@phx.gbl>
Message-ID: <487601AA.6060100@zalewski.pl>

  As it was written, you need to write some more tests for such changes. 
It required a few iterations before we got 
SetWindowLongPtr(GWLP_WNDPROC, ...) right, so this might be also not 
easy. The tests for SetWindowLongPtr are in dlls/user32/tests/class.c. 
Some things I can think of that requires checking:

1. Is the edit class still special after changing the winproc - does the 
unicodeness of controls created after the SetClassLongPtr call depend on 
whether CreateWindowA or CreateWindowW was used
2. Does the same winproc really receive both Unicode and ANSI messages. 
That's the strangest thing in your patch. Does calling SetWindowTextW 
and SetWindowTextA call the same function, but once with a Unicode 
string in lparam and the other time with an ANSI string.
3. Does GetClassLongPtr[AW] return an address or a winproc handle (there 
is a IS_WINPROC_HANDLE macro in dlls/users32/tests/class.c). The same 
for GetWindowLongPtr[AW]. If point 1 is true then it would be good to 
check it for controls created with both CreateWindowA and W
4. Does this apply only to the edit class or to all built-in classes. 
The edit class is special from the point of view of GetWindowLongPtr so 
it may be also special here.

  I think, knowing the answers to these questions would make it easier 
to create a good patch. This patch seems very strange as it seems 
unlikely that the same function would be used for both the A and W calls.

Miko?aj


From fgouget at free.fr  Thu Jul 10 07:34:32 2008
From: fgouget at free.fr (Francois Gouget)
Date: Thu, 10 Jul 2008 14:34:32 +0200 (CEST)
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <5963B75B-F12E-41CE-AC48-0D3256390CC1@java.pl>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
	<D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
	<486E996F.5000907@sprintpcs.com> <486EF6C0.20109@codeweavers.com>
	<5963B75B-F12E-41CE-AC48-0D3256390CC1@java.pl>
Message-ID: <alpine.DEB.1.10.0807101417450.18163@amboise.dolphin>

On Mon, 7 Jul 2008, Adam Strzelecki wrote:
[...]
> It was just said once that winequartz.drv won't go into official Wine,  
> and the top reason was Objective-C and this was just a bizarre  
> decision for me. Objective-C is almost as old as C++ and it was just  
> chosen for an object model of OSX (NextStep previously) in opposition  
> to pure C messaging of Windows and C++ for COM interfaces, etc.

Hehe. If it can comfort you, code submissions in Cobol and Fortran would 
be refused too, even though these languages are older than C++. As far 
as I know only C is accepted for the Wine core, and for support scripts 
and development tools Bourne shell and Perl scripts are accepted too. 
There are at least three reasons for that:
 * The first and probably most important reason is that we want to avoid 
a proliferation of languages which would make it harder to compile Wine 
(multiple tool chains), and also harder for developpers to understand 
the code. Currently if you write a test or modify notepad and you get a 
crash in winex11, you will be able to look at the winex11 code and 
hopefully figure out the reason for the crash. If winex11 was written in 
C++ you would first have to understand C++ in order to figure things 
out. The same goes with an Objective-C winequartz driver.
 * Additional languages may also be causing trouble for winedbg. I'm not 
entirely sure about that one but I believe additional code is needed to 
properly parse the C++ debug information and thus produce proper 
backtraces, be able to inspect the contents of objects, etc (actually 
I'm not sure winedbg supports C++ right now). Adding code in Objective-C 
would probably entail another round of extensions.
 * Finally, at least for C++, there was an issue with ABI stability. It 
used to be that a C++ program compile with a version of g++ (e.g. 3.3) 
would not be able to use a C++ library compiled with an older or newer 
version of g++ (2.95 or 4.x). Things may have become a bit more stable 
on that front. Also this may not apply to Objective-C on Mac OS X 
(presumably Apple does not want to break all the 3rd party applications 
everytime they upgrade they upgrade the standard compiler).


> So IMHO no for Objective-C means no for decent Mac OSX support, 
> period.

Is it really technically impossible to access the Quartz APIs or write 
Mac applications using C?

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
        It really galls me that most of the computer power in the world
                          is wasted on screen savers.
                     Chris Caldwell from the GIMPS project
                       http://www.mersenne.org/prime.htm


From hongbo_ni at hotmail.com  Thu Jul 10 08:07:14 2008
From: hongbo_ni at hotmail.com (Hongbo Ni)
Date: Thu, 10 Jul 2008 23:07:14 +1000
Subject: [PATCH] RE: user32: Problem using SetClassLongW to subclass
	built-in control (Edit)
In-Reply-To: <3f4fd2640807100141w203bfe6sef4caf6c28e9b742@mail.gmail.com>
References: <BAY118-W20A6B8E0937B3AB246C43694960@phx.gbl>
	<BAY118-W52EBAC153ED65A65F593D594910@phx.gbl> 
	<3f4fd2640807100141w203bfe6sef4caf6c28e9b742@mail.gmail.com>
Message-ID: <BAY118-W38E9AA34E8675D10515F2094910@phx.gbl>

Dear Reece,
 
Thanks for your comments.
> > I have write a patch for the problem, please comment.> > + if( unicode && class->winproc == EDIT_winproc_handle )> > Is it just the EDIT window procedure that is affected? I suspect that> this will apply to all classes that have A and W variants.
I encounter this problem with EDIT window. When I look at wine code, i thought the same.
But it turn out this is needed only for EDIT, doing the same for other built-in control causing
wine to behave different from window. The fact that someone added the var 
EDIT_winproc_handle is for hacking EDIT class for GetWindowLong.  see
 
---/dlls/user32/win.c line 1911 in WIN_GetWindowLong()----------------------------------
    case GWLP_WNDPROC:        /* This looks like a hack only for the edit control (see tests). This makes these controls         * more tolerant to A/W mismatches. The lack of W->A->W conversion for such a mismatch suggests         * that the hack is in GetWindowLongPtr[AW], not in winprocs.         */        if (wndPtr->winproc == EDIT_winproc_handle && (!unicode != !(wndPtr->flags & WIN_ISUNICODE)))            retvalue = (ULONG_PTR)wndPtr->winproc;        else            retvalue = (ULONG_PTR)WINPROC_GetProc( wndPtr->winproc, unicode );        break;--------------------------------------------------------------------------------------------------
> I also suspect that this is wrong. AFAICS, the class name Windows uses> is "EDIT", not "EDITA"/"EDITW"; the problem lies in SetWindowProc, so> it is likely you need to track both the A and W procs, selecting the> appropriate one depending on the variant of SetWindowProc is called.> CreateWindow would also need to select the correct one and> RegisterWindowClass would need to set the A and W variants initially.> However, I am not sure on this, so you need tests.
SetWindowProc is for subclass a windows that is already created. It only affects one window.
WIN_SetWindowProc will call to WIN_GetWindowLong  to return old WndProc. so 
SetWindowProc will use the same hack for return Edit window WndProc (handle to a
struct of ProcA & ProcW). Normally it only return procA or ProcW.
 
SetClassLongW(hEDIT,GCLP_WNDPROC,proc) for global subclass, and will affect all  EDIT 
windows created after. 
 
for SetClassLong(Ptr), there must be similar hack. That is what I have done, but maybe
not totally right. 
 
One thing I am thinking is  for Built-in control classes with procA and procW,
(Set|Get)ClassLong(hEDIT,GCLP_WNDPROC,proc) should return class->wndproc, so it can be
restored later. So similar hack is needed for CLASS_GetClassLong(h,GCLP_WNDPROC..)
 
But doing this only for EDIT
 
/* if subclassing Edit class, WndProc must handle both Ansi and Unicode Message*/
class->winproc = WINPROC_AllocProc( (WNDPROC)newval, (WNDPROC)newval );
 
> Also, this patch (when sent to the wine-patches list) will stand a> better chance of getting in if there are some tests to verify the> behaviour on Windows and deficiency in Wine.
I have included a test application with source in bugzilla #14350,
the EDIT window on the About dialogbox is non-unicode on Window
but Unicode on Wine. My patch fixed that.
> You need to check what procs are returned when. Use your original> email as the basis for the test.
(Set|Get)ClassLongW(hEDIT,GCLP_WNDPROC,proc) only retrun procW of
the class, so for built-in class with both procA&W, procA is lost in those
2 line of code.
 
oldProc = SetClassLongW(hEDIT,GCLP_WNDPROC,NewProc); //only return procW.
SetClassLong(hEDIT,GCLP_WNDPROC,oldProc); 
//suppose to restore proc for Edit, but only restored procW, procA lost
 
because now Edit class only have ProcW, if you call CreateWindowExA('EDIT',..).
the created window is Unicode because it will find out it only have procW.
 
 
Regards
Hongbo
 
 
_________________________________________________________________
Are you paid what you're worth? Find out: SEEK Salary Centre
http://a.ninemsn.com.au/b.aspx?URL=http%3A%2F%2Fninemsn%2Eseek%2Ecom%2Eau%2Fcareer%2Dresources%2Fsalary%2Dcentre%2F%3Ftracking%3Dsk%3Ahet%3Asc%3Anine%3A0%3Ahot%3Atext&_t=764565661&_r=OCT07_endtext_salary&_m=EXT
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080710/472693c3/attachment-0001.htm 

From ono at java.pl  Thu Jul 10 08:22:34 2008
From: ono at java.pl (Adam Strzelecki)
Date: Thu, 10 Jul 2008 15:22:34 +0200
Subject: winequartz.drv Mac OS X UI discontinued?
In-Reply-To: <alpine.DEB.1.10.0807101417450.18163@amboise.dolphin>
References: <169F6047-C9D9-4C25-9E39-28AFE06C366D@java.pl>
	<200803021850.04583.stefan@codeweavers.com>
	<19e31a080803021053u74f564fo7b6a9fdd6676a37@mail.gmail.com>
	<EEDB1C7D-011E-431A-97FA-9C0E24015C82@free.fr>
	<D4593677-794F-45A0-89C8-8A8179C1BBFA@java.pl>
	<486E996F.5000907@sprintpcs.com> <486EF6C0.20109@codeweavers.com>
	<5963B75B-F12E-41CE-AC48-0D3256390CC1@java.pl>
	<alpine.DEB.1.10.0807101417450.18163@amboise.dolphin>
Message-ID: <A0BC05B5-C550-49D6-9E4C-4F85057BF701@java.pl>

> Is it really technically impossible to access the Quartz APIs or write
> Mac applications using C?

Well it is possible, for example iTunes is non Objective-C Carbon  
(API) app AFAIK. Problem is that Carbon (pure C interface) is  
considered as deprecated by Apple and may disappear from future  
releases of OSXes at all, most 98% of applications are Objective-C  
Cocoa anyway. Moreover most of the functionality introduced in 10.5 or  
10.4 went just into Cocoa, and never was backported to Carbon.
So it isn't matter that it isn't possible, but it is IMHO more  
reasonable to do it in Objective-C.

Best regards,
-- 
Adam Strzelecki |: nanoant.com :|



From andre.wisplinghoff at gmail.com  Thu Jul 10 08:28:56 2008
From: andre.wisplinghoff at gmail.com (Andre Wisplinghoff)
Date: Thu, 10 Jul 2008 15:28:56 +0200
Subject: Feedback for "Regedit: Implement deleting multiple values"
Message-ID: <48760E98.5030003@gmail.com>

Hallo,

thanks for your help. I just resend my patch, with these issues 
considered. The standard MessageBox function is now used. The localized 
message is read in framewnd.c and errors treated the same way as it was 
with the messagebox function in edit.c.

Best Regards
- Andre Wisplinghoff


From dank at kegel.com  Thu Jul 10 09:15:35 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 10 Jul 2008 07:15:35 -0700
Subject: New winetricks 20080704: added firefox3,
	kde verbs (and a whole lot of other stuff)
In-Reply-To: <200807061845.51260.lav@etersoft.ru>
References: <a71bd89a0807040752u26b35248s24d4912880472da@mail.gmail.com>
	<200807061845.51260.lav@etersoft.ru>
Message-ID: <a71bd89a0807100715s690685e1u7bdce65db65c6b28@mail.gmail.com>

2008/7/6 Vitaly Lipatov <lav at etersoft.ru>:
> Please check attached patch with fixes agains 20080704 version of winetricks.
>
> Changes:
> - introduce WINDIR variable with Unix path to windows dir (and use it
> instead "$WINEPREFIX"/drive_c/windows)

That, along with Vitaliy's suggestion of not hardcoding it, sounds good,
but it shouldn't be mixed in with other changes.

> - wrap kdialog/xmessage using with variable to disable extra requires during
> creating a rpm package

I don't see how the variable helps.  Do you want to allow overriding it?

And what rpm package are you talking about?

> - add missed quites and remove extra spaces

Which quotes are missing?  I just fixed a couple on
the definitions of programfilesdir_win and programfilesdir_unix, see
http://code.google.com/p/winezeug/source/detail?r=99

- Dan


From xixsimplicityxix at gmail.com  Thu Jul 10 10:22:20 2008
From: xixsimplicityxix at gmail.com (John Klehm)
Date: Thu, 10 Jul 2008 10:22:20 -0500
Subject: regedit: Implement deleting multiple values (resend)
In-Reply-To: <48760CA5.40706@gmail.com>
References: <48760CA5.40706@gmail.com>
Message-ID: <78a7dad00807100822h792eee07h4b13d0b4ed58251c@mail.gmail.com>

On Thu, Jul 10, 2008 at 8:20 AM, Andre Wisplinghoff
<andre.wisplinghoff at gmail.com> wrote:
> Changelog:
> Regedit: Implement deleting multiple values
>
> Changes from first send as suggested @ wine-devel:
> - Use standard MessageBox instead of making the messagebox function from
> edit.c non-static
> - Real name in patch, no HTML Mail
>

Hello Andre,

I would wait till tomorrow to see if AJ's scripts pick up your patch
but usually a good indicator of how it came through the system can be
seen by checking pipermail.

http://www.winehq.org/pipermail/wine-patches/2008-July/057590.html

is your latest resend.  Clicking on the url at the bottom for the
attachment yields a blank screen for me. This could be a sign that
somehow the scripts on the backend of the mail server lost your patch
due to encoding or how you attached it.  Unfortunately I don't know
which or exactly what the fix is so you might have to experiment.

So you might have to ask on the list again and point out that piper
mail didn't pick it up.

The strange thing is your patch shows up in gmail inlined in the
message just fine for me, which is why I suggest to wait and see if
AJ's scripts can also pick it up.

Best of luck,
John


From julliard at winehq.org  Thu Jul 10 10:35:50 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Thu, 10 Jul 2008 17:35:50 +0200
Subject: [PATCH 2/2] user32: Set WM_NOSIZE for windows smaller than
	SM_CXMINTRACK/SM_CYMINTRACK.
In-Reply-To: <558b2f5c0807092257g786d5805xf53a588ccfaff709@mail.gmail.com>
	(Lei Zhang's message of "Wed, 9 Jul 2008 22:57:29 -0700")
References: <558b2f5c0807092257g786d5805xf53a588ccfaff709@mail.gmail.com>
Message-ID: <877ibtn44p.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> I added more tests for this and also looked at the trace log from the
> tests. My last patch was definitely wrong because it prevents the
> window/client size from changing, whereas they do change on Windows. I
> check for this in the tests now.
>
> I looked at the content of the WM_WINDOWPOSCHANGED messages, and I
> noticed SWP_NOCLIENTSIZE was set for the cases where the window is too
> small. So SWP_DoNCCalcSize seems like the right place to check for
> this, and not clear SWP_NOCLIENTSIZE.

You are still on the wrong track, you shouldn't mess with the SWP_*
flags at all. What you have to do is figure out where the size limits
should be enforced on the window; once you fix this, SetWindowPos will
automatically get the right flags because the size will be clamped to
the limit.

-- 
Alexandre Julliard
julliard at winehq.org


From winesku at googlemail.com  Thu Jul 10 10:48:30 2008
From: winesku at googlemail.com (Stefan Kuhr)
Date: Thu, 10 Jul 2008 17:48:30 +0200
Subject: Fallback from RPC_C_AUTHN_GSS_NEGOTIATE to RPC_C_AUTHN_WINNT if
	no SPNEGO package available
In-Reply-To: <81a474f0807030120g21226bb3sb23d1da445552650@mail.gmail.com>
References: <81a474f0807011110k66f669afp77ce5d42d7c08839@mail.gmail.com>
	<1096648c0807020301l3940e7a5g7627ee8f878ae824@mail.gmail.com>
	<81a474f0807020451s6ab83cf0he24b84ea6b6bf6c6@mail.gmail.com>
	<1096648c0807021451s5403b2a5x7fb20c33c1914433@mail.gmail.com>
	<81a474f0807030120g21226bb3sb23d1da445552650@mail.gmail.com>
Message-ID: <81a474f0807100848q32246cb6wa3d6b234c01d617@mail.gmail.com>

Hi Rob,

On Thu, Jul 3, 2008 at 10:20 AM, Stefan Kuhr <winesku at googlemail.com> wrote:
> <snip>
> Ok, I'll do that and resend the modified patch. It probably also needs
> a fixme for an entire different reason: Once a Negotiate provider is
> available in WINE, my patch won't do any harm, but it is going to be
> dead code that can be removed then.
>

I already sent a revised patch to the patch mailing list a week ago.
Do you think that one is now acceptable?

Cheers,

-- 
Stefan Kuhr


From razielmine at gmail.com  Thu Jul 10 14:04:11 2008
From: razielmine at gmail.com (Ismael Barros)
Date: Thu, 10 Jul 2008 22:04:11 +0300
Subject: [dplayx 02/29] Tests for DirectPlayCreate
In-Reply-To: <1215643679.24017.26.camel@hermes2.karcher.local>
References: <82e274890807090848l3d5d872fmfd6240bc3bd0adaa@mail.gmail.com>
	<1215620481.17834.36.camel@hermes2.karcher.local>
	<82e274890807091015j65322668nff1847b8f52172dc@mail.gmail.com>
	<1215643679.24017.26.camel@hermes2.karcher.local>
Message-ID: <82e274890807101204v757ab038t88598e8144331ca8@mail.gmail.com>

>> > And last but not
>> > least: As I see it, a static inline would do the job too, and is always
>> > preferrable to macros.
>> The main reason of using ditry macros instead of functions was to
>> preserve the __LINE__ number, otherwise the debug information provided
>> is pretty much useless.
> Yes, you are right of course. I didn't think of __LINE__ (also James
> noted the same thing). Now you get to the point where a precedence case
> for identifiers with an underscore are used: shell32/tests/shlexec.c.
> They have inline functions, called _okFooBar which take file and line as
> parameter, and have a macro okFooBar which calls the _okFooBar method,
> so the test case writer does not get to see the identifier starting with
> an underscore. Thats how I feel about them: They are internal
> identifiers, telling you "if you use this directly, you better know very
> well what you are doing; most probably there is a safer or easier way to
> accomplish the goal". In this case, the _okFooBar function is meant just
> for the easier okFooBar macro.

Sounds fine, I'll change it.

>> >> +    heap = HeapCreate( 0, 0, 0 );
>> > Do you have any reason to create your own heap? Each windows process
>> > already comes equipped with a standard heap you can obtain using the API
>> > function GetProcessHeap, so this line:
>> >> +    IUnknown* pUnk = HeapAlloc( heap, 0, sizeof(LPDWORD) );
>> > would then look like:
>> > +    IUnknown* pUnk = HeapAlloc( GetProcessHeap(), 0, sizeof(LPDWORD) );
>> 
>> That's what I used in the begining, but I've got some HeapAllocs that
>> I don't free.
> OK. That's a point. I didn't expect it, though. I would like a comment
> in there along
>   /* Create an extra heap to throw away garbage after tests */

No problem.

>> This is intended, as freeing that memory would make the
>> code unnecessarily complex, I can't use static local variables (I use
>> the result of the function inside the same ok() or trace()), and
>> loosing memory is always undesirable but not critical in a test case.
> You can use static variables, if you go along the lines of of
> get_temp_buffer in libs/wine/debug.c, where a static local array is
> cyclical indexed. This might not be a good idea, though, depending on
> how long the result has to stay alive.

Hm, yeah, I thought about a cyclic buffer but wanted to keep the code simple. However this heap thing is creating some skepticism, so I'll go that way.

>> > Another point is that this line is totally wrong anyway. An IUnknown* is
>> > a pointer to an COM object, which starts with a vtable pointer. You let
>> > pUnk point to uninitialized memory. While it doesn't matter in this case
>> > (as DirectPlayCreate will never access what the pointer points to), it
>> > is really bad style. I understand the intention to test that aggregation
>> > is not supported for DirectPlay, but you still should keep the contract
>> > of the creation function that pUnk either is NULL or points to a valid
>> > COM object. A basic COM object is just a pointer to a vtable that
>> > contains a QueryInterface method that returns "this" for IUnknown and
>> > fails in every other case, an AddRef method that returns 2 and does
>> > nothing, and a Release method that returns 1 and does nothing else.
>> I just wrote is to check the return value in case of pUnk != NULL, but
>> there would be no problem in either removing that test (it's probably
>> unneeded) or doing it the right way.
> A test case is always good, if it does not take too much execution time.
> These tests with NULL pointers seemed strange to me when I first
> encountered, as sometimes NULL pointers are passed into functions where
> they are not useful or even forbidden by the documented contract. But as
> wine is all about fulfilling the same contract as the windows
> implementation which might deviate from MSDN, the test case serves as
> documentation of Windows behavior, which is good.
>
> But in my opinion, testing of the reaction to contract violation should
> not go into passing somehow valid-looking pointers, that do not point to
> anything sensible. And the main point was, that I really don't get why
> it must be a heap pointer. The an LPDWORD on the stack would do as well
> as allocating sizeof(LPDWORD) area.

I've been checking how this is done in other tests, and it's particularly interesting how they do it in ddraw/tests/refcount.c:81:
  hr = IDirectDraw7_CreatePalette(DDraw7, DDPCAPS_ALLOW256 | DDPCAPS_8BIT, Table, &palette, (void *) 0xdeadbeef);
This is the only example in the current code. I could either do it that way (not correct, but simple), or use some IUnknown interface. I tried to get the IUnknown of the classes I have access to, DirectPlay or DirectPlayLobby, but the current implementation is not able to return an interface for IID_IUnknown (it just fails with E_NOINTERFACE), so I would have to fix that too (and I'm not very sure about how to do it, without breaking anything. Would returning any of the existing interfaces that have CreateInstance, AddRef and Release, be correct? This seems to be done a lot in other dlls)


From james.keane at gmail.com  Thu Jul 10 14:13:18 2008
From: james.keane at gmail.com (James Keane)
Date: Thu, 10 Jul 2008 15:13:18 -0400
Subject: What's the holdup with RegisterHotKey and UnregisterHotKey??
Message-ID: <afe7fe050807101213o2d109509q39e768933c761138@mail.gmail.com>

Hey everyone!

Just wanted to bring to your attention
http://bugs.winehq.org/show_bug.cgi?id=1348 again, and ask what is the
holdup?  As far as I can see it appears a solution and working patch
has been posted.  I am interested in getting this into the main tree
and wondering what kind of modifications have to be made to the patch
supplied to make it happen.

  ------- Comment  #8 From Robert Reif  2007-02-17 15:45:56  -------
The reason I was given by Alexandre is that the functionality should be moved
into the server.

Why is it not possible to accept this patch and then start working on
moving it into the server?  With a quick look the only changes from
the patch and the git, is the change from dll/user to dll/user32.

Cheers!
James


From winesku at googlemail.com  Thu Jul 10 14:30:40 2008
From: winesku at googlemail.com (Stefan Kuhr)
Date: Thu, 10 Jul 2008 21:30:40 +0200
Subject: How do I write an exception filter?
Message-ID: <81a474f0807101230j340e4e2du8780d3664a884d6c@mail.gmail.com>

Hello everyone,

I would like to know what the proper way is to write an exception
filter function for WINE code. Most of the WINE exception filtering
seems to be done with the __EXCEPT_PAGE_FAULT macro, for whatever
reason. In all other places I see the macro __EXCEPT with a filter
function of this prototype

LONG WINAPI filter(EXCEPTION_POINTERS *);

However, I have the need to implement a filter function that takes
additional formal parameters such as the values of local parameters of
the function where the SEH frame resides. Alternatively, I would like
to do something like the following (in MSVC parlance), where the
exception filter is a simple boolean expression:

__try
{
  PDWORD pdwCommStatus = ....;
  PDWORD pdwFaultStatus = ....;
  doSomething();
}
__except(  (pdwCommStatus||pdwFaultStatus) ? EXCEPTION_EXECUTE_HANDLER
: EXCEPTION_CONTINUE_SEARCH  )
{
   // handle the exception

}


In include/wine/exception.h, a comment from AJ says that
"__EXCEPT(filter_func,param)" is the proper way to do it but "param"
is not explained at all and "filter_func must be defined with the
WINE_EXCEPTION_FILTER macro", as the comment says. However, a search
for WINE_EXCEPTION_FILTER yields no results.


So, how do I do these things in WINE properly? Did I overlook something obvious?

-- 
Stefan


From ovek at arcticnet.no  Thu Jul 10 14:55:56 2008
From: ovek at arcticnet.no (Ove Kaaven)
Date: Thu, 10 Jul 2008 15:55:56 -0400
Subject: How do I write an exception filter?
In-Reply-To: <81a474f0807101230j340e4e2du8780d3664a884d6c@mail.gmail.com>
References: <81a474f0807101230j340e4e2du8780d3664a884d6c@mail.gmail.com>
Message-ID: <4876694C.6080305@arcticnet.no>

Stefan Kuhr wrote:
> In include/wine/exception.h, a comment from AJ says that
> "__EXCEPT(filter_func,param)" is the proper way to do it but "param"
> is not explained at all

I think that comment must be very old, the macros don't implement any 
"param".

> So, how do I do these things in WINE properly?

In general, within Wine code, it's impossible. In standard C, a function 
cannot reference a local variable of another function. It might be 
possible with some trickery (e.g. declaring explicit register/volatile 
variables), or with special compiler support (MSVC obviously has special 
support for it, and perhaps gcc nested functions or something could be 
used).

For Wine, you'd have to come up with something else. Whatever the filter 
function needs should be available in some other form than a stack 
variable, like maybe some global or thread-local (TLS) variable, or 
perhaps from some function call.

Also perhaps consider whether you need a filter function this complex at 
all...



From winesku at googlemail.com  Thu Jul 10 15:24:11 2008
From: winesku at googlemail.com (Stefan Kuhr)
Date: Thu, 10 Jul 2008 22:24:11 +0200
Subject: How do I write an exception filter?
In-Reply-To: <4876694C.6080305@arcticnet.no>
References: <81a474f0807101230j340e4e2du8780d3664a884d6c@mail.gmail.com>
	<4876694C.6080305@arcticnet.no>
Message-ID: <81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>

Hello Ove,

On Thu, Jul 10, 2008 at 9:55 PM, Ove Kaaven <ovek at arcticnet.no> wrote:
> <snip>
> In general, within Wine code, it's impossible. In standard C, a function
> cannot reference a local variable of another function. It might be possible
> with some trickery (e.g. declaring explicit register/volatile variables), or
> with special compiler support (MSVC obviously has special support for it,
> and perhaps gcc nested functions or something could be used).
>
> For Wine, you'd have to come up with something else. Whatever the filter
> function needs should be available in some other form than a stack variable,
> like maybe some global or thread-local (TLS) variable, or perhaps from some
> function call.

Maybe there is something I simply don't understand. What I mean is
something like this:

__try
{
 PDWORD pdwCommStatus = ....;
 PDWORD pdwFaultStatus = ....;
 doSomething();
}
__except(MySpecialFilter(GetExceptionCode(),pdwCommStatus, pdwFaultStatus)  )
{
  // handle the exception

}

This is something quite common in Win32, as far as I can tell. As an
alternative, I would like to use the simple ternary operation in the
code snippet in my OP. Maybe I am too ignorant, because I have only
coded for Windows the last 15 years and I have some difficulties now
trying to prepare a patch for WINE, so bear with me, but I cannot see
why that would be trickery.


>
> Also perhaps consider whether you need a filter function this complex at
> all...
>

I need that. I would like to implement comm status and fault status
awareness in WINE's rpcrt4, because my applications crash in WINE
because of the lack of proper comm status and fault status awareness
in WINE's RPC implementation. From debugging NdClientCall2 in XP I
deduce I need this.


Cheers,

-- 
Stefan Kuhr


From juan.lang at gmail.com  Thu Jul 10 15:28:08 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 10 Jul 2008 13:28:08 -0700
Subject: How do I write an exception filter?
In-Reply-To: <81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>
References: <81a474f0807101230j340e4e2du8780d3664a884d6c@mail.gmail.com>
	<4876694C.6080305@arcticnet.no>
	<81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>
Message-ID: <3a768c550807101328g2d8a7ca0q6677db1b571418f7@mail.gmail.com>

> I need that. I would like to implement comm status and fault status
> awareness in WINE's rpcrt4, because my applications crash in WINE
> because of the lack of proper comm status and fault status awareness
> in WINE's RPC implementation. From debugging NdClientCall2 in XP I
> deduce I need this.

I hate to be the one to break it to you, but debugging ndrclientCall2
in XP precludes you from contributing to wine's implementation.
--Juan


From winesku at googlemail.com  Thu Jul 10 15:30:44 2008
From: winesku at googlemail.com (Stefan Kuhr)
Date: Thu, 10 Jul 2008 22:30:44 +0200
Subject: How do I write an exception filter?
In-Reply-To: <81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>
References: <81a474f0807101230j340e4e2du8780d3664a884d6c@mail.gmail.com>
	<4876694C.6080305@arcticnet.no>
	<81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>
Message-ID: <81a474f0807101330w15a1270eq7646a5f1da699ad7@mail.gmail.com>

Hi everyone,

On Thu, Jul 10, 2008 at 10:24 PM, Stefan Kuhr <winesku at googlemail.com> wrote:
> Hello Ove,
>
> On Thu, Jul 10, 2008 at 9:55 PM, Ove Kaaven <ovek at arcticnet.no> wrote:
>> <snip>
>> In general, within Wine code, it's impossible. In standard C, a function
>> cannot reference a local variable of another function. It might be possible
>> with some trickery (e.g. declaring explicit register/volatile variables), or
>> with special compiler support (MSVC obviously has special support for it,
>> and perhaps gcc nested functions or something could be used).
>>
>> For Wine, you'd have to come up with something else. Whatever the filter
>> function needs should be available in some other form than a stack variable,
>> like maybe some global or thread-local (TLS) variable, or perhaps from some
>> function call.
>
> Maybe there is something I simply don't understand. What I mean is
> something like this:
>
> __try
> {
>  PDWORD pdwCommStatus = ....;
>  PDWORD pdwFaultStatus = ....;
>  doSomething();
> }
> __except(MySpecialFilter(GetExceptionCode(),pdwCommStatus, pdwFaultStatus)  )
> {
>  // handle the exception
>
> }


Oh stupid me.

PDWORD pdwCommStatus = ....;
PDWORD pdwFaultStatus = ....;


should be placed outside the try block.

-- 
Stefan Kuhr


From winesku at googlemail.com  Thu Jul 10 15:32:43 2008
From: winesku at googlemail.com (Stefan Kuhr)
Date: Thu, 10 Jul 2008 22:32:43 +0200
Subject: How do I write an exception filter?
In-Reply-To: <3a768c550807101328g2d8a7ca0q6677db1b571418f7@mail.gmail.com>
References: <81a474f0807101230j340e4e2du8780d3664a884d6c@mail.gmail.com>
	<4876694C.6080305@arcticnet.no>
	<81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>
	<3a768c550807101328g2d8a7ca0q6677db1b571418f7@mail.gmail.com>
Message-ID: <81a474f0807101332m72f22b35kb1a4bebbb0da0b9c@mail.gmail.com>

Hi Juan,

On Thu, Jul 10, 2008 at 10:28 PM, Juan Lang <juan.lang at gmail.com> wrote:
>> I need that. I would like to implement comm status and fault status
>> awareness in WINE's rpcrt4, because my applications crash in WINE
>> because of the lack of proper comm status and fault status awareness
>> in WINE's RPC implementation. From debugging NdClientCall2 in XP I
>> deduce I need this.
>
> I hate to be the one to break it to you, but debugging ndrclientCall2
> in XP precludes you from contributing to wine's implementation.
> --Juan
>

Oh, I did not know that. What should I do now? Does that mean I can
never ever contribute something to improve that function?

-- 
Stefan


From juan.lang at gmail.com  Thu Jul 10 15:34:52 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 10 Jul 2008 13:34:52 -0700
Subject: How do I write an exception filter?
In-Reply-To: <81a474f0807101332m72f22b35kb1a4bebbb0da0b9c@mail.gmail.com>
References: <81a474f0807101230j340e4e2du8780d3664a884d6c@mail.gmail.com>
	<4876694C.6080305@arcticnet.no>
	<81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>
	<3a768c550807101328g2d8a7ca0q6677db1b571418f7@mail.gmail.com>
	<81a474f0807101332m72f22b35kb1a4bebbb0da0b9c@mail.gmail.com>
Message-ID: <3a768c550807101334x6c096f09i3b42a8049b1c1891@mail.gmail.com>

> Oh, I did not know that. What should I do now? Does that mean I can
> never ever contribute something to improve that function?

I'm afraid so.
--Juan


From winesku at googlemail.com  Thu Jul 10 15:38:52 2008
From: winesku at googlemail.com (Stefan Kuhr)
Date: Thu, 10 Jul 2008 22:38:52 +0200
Subject: How do I write an exception filter?
In-Reply-To: <3a768c550807101334x6c096f09i3b42a8049b1c1891@mail.gmail.com>
References: <81a474f0807101230j340e4e2du8780d3664a884d6c@mail.gmail.com>
	<4876694C.6080305@arcticnet.no>
	<81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>
	<3a768c550807101328g2d8a7ca0q6677db1b571418f7@mail.gmail.com>
	<81a474f0807101332m72f22b35kb1a4bebbb0da0b9c@mail.gmail.com>
	<3a768c550807101334x6c096f09i3b42a8049b1c1891@mail.gmail.com>
Message-ID: <81a474f0807101338o572b4434h386d39caa072b0b5@mail.gmail.com>

H everyone,

On Thu, Jul 10, 2008 at 10:34 PM, Juan Lang <juan.lang at gmail.com> wrote:
>> Oh, I did not know that. What should I do now? Does that mean I can
>> never ever contribute something to improve that function?
>
> I'm afraid so.
> --Juan
>

Stupid me. How could I have prevented that? Is there some sort of
'Code of Ethics' of the WINE project that I should have read before
and that tells me not to debug a binary from MS in order to improve a
WINE implementation?

-- 
Stefan


From leslie_alistair at hotmail.com  Thu Jul 10 15:39:34 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Fri, 11 Jul 2008 06:39:34 +1000
Subject: msxml3: oldChild in xmlnode_removeChild may be NULL
In-Reply-To: <200807101522.21110.piotr.caban@gmail.com>
References: <200807101522.21110.piotr.caban@gmail.com>
Message-ID: <48767386.2060203@hotmail.com>

Piotr Caban wrote:
> ---
>  IXMLDOMNode_Release(child);
>  IXMLDOMNode_AddRef(childNode);
>- *oldChild = childNode;
>+
>+ if(oldChild)
>+ *oldChild = childNode;
>return S_OK; 
> 
Hi Piotr,
   Your leaking childNode, it should be destroyed in this case.

Best Regards
  Alistair Leslie-Hughes



From truiken at gmail.com  Thu Jul 10 15:44:31 2008
From: truiken at gmail.com (James Hawkins)
Date: Thu, 10 Jul 2008 15:44:31 -0500
Subject: What's the holdup with RegisterHotKey and UnregisterHotKey??
In-Reply-To: <afe7fe050807101213o2d109509q39e768933c761138@mail.gmail.com>
References: <afe7fe050807101213o2d109509q39e768933c761138@mail.gmail.com>
Message-ID: <22821af30807101344w3f80b878g5a37c909415aca5d@mail.gmail.com>

On Thu, Jul 10, 2008 at 2:13 PM, James Keane <james.keane at gmail.com> wrote:
> Hey everyone!
>
> Just wanted to bring to your attention
> http://bugs.winehq.org/show_bug.cgi?id=1348 again, and ask what is the
> holdup?  As far as I can see it appears a solution and working patch
> has been posted.  I am interested in getting this into the main tree
> and wondering what kind of modifications have to be made to the patch
> supplied to make it happen.
>
>  ------- Comment  #8 From Robert Reif  2007-02-17 15:45:56  -------
> The reason I was given by Alexandre is that the functionality should be moved
> into the server.
>
> Why is it not possible to accept this patch and then start working on
> moving it into the server?  With a quick look the only changes from
> the patch and the git, is the change from dll/user to dll/user32.
>

If the correct way to do it is X, and the current implementation does
it by Y, which is not correct, then why would we accept the patch that
implements Y?  By definition it's a hack, and if we did accept it,
there'd be no incentive to fix the hack, because everything would
already work (just in the wrong way).

-- 
James Hawkins


From juan.lang at gmail.com  Thu Jul 10 15:46:41 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 10 Jul 2008 13:46:41 -0700
Subject: How do I write an exception filter?
In-Reply-To: <81a474f0807101338o572b4434h386d39caa072b0b5@mail.gmail.com>
References: <81a474f0807101230j340e4e2du8780d3664a884d6c@mail.gmail.com>
	<4876694C.6080305@arcticnet.no>
	<81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>
	<3a768c550807101328g2d8a7ca0q6677db1b571418f7@mail.gmail.com>
	<81a474f0807101332m72f22b35kb1a4bebbb0da0b9c@mail.gmail.com>
	<3a768c550807101334x6c096f09i3b42a8049b1c1891@mail.gmail.com>
	<81a474f0807101338o572b4434h386d39caa072b0b5@mail.gmail.com>
Message-ID: <3a768c550807101346r132ca57cg95ba64f5a3b181f9@mail.gmail.com>

> Stupid me. How could I have prevented that? Is there some sort of
> 'Code of Ethics' of the WINE project that I should have read before
> and that tells me not to debug a binary from MS in order to improve a
> WINE implementation?

It's on the Developers' FAQ on the wiki:
http://wiki.winehq.org/DeveloperFaq#head-fed5011434f62ae1a88baebfb8193a37ea795101

I admit the warning is pretty well buried.  It's been discussed here
on wine-devel on several occasions, searching for "wine disassembly'
will produce one such thread.
--Juan


From juan.lang at gmail.com  Thu Jul 10 15:48:54 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 10 Jul 2008 13:48:54 -0700
Subject: How do I write an exception filter?
In-Reply-To: <81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>
References: <81a474f0807101230j340e4e2du8780d3664a884d6c@mail.gmail.com>
	<4876694C.6080305@arcticnet.no>
	<81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>
Message-ID: <3a768c550807101348k5d818832ld2acee6b1c7e7ae1@mail.gmail.com>

> I need that. I would like to implement comm status and fault status
> awareness in WINE's rpcrt4, because my applications crash in WINE
> because of the lack of proper comm status and fault status awareness
> in WINE's RPC implementation. From debugging NdClientCall2 in XP I
> deduce I need this.

Now that we've established you can't do this yourself, a hint on how
you can help us:  file a bug describing the problem, and produce as
small a test case as you can that shows the problem in Wine.  Ideally
you can write a regression test that succeeds on Windows and fails on
Wine.  That should give the devs here a pretty strong hint about what
needs to be done.

Thanks,
--Juan


From leslie_alistair at hotmail.com  Thu Jul 10 15:51:20 2008
From: leslie_alistair at hotmail.com (Alistair Leslie-Hughes)
Date: Fri, 11 Jul 2008 06:51:20 +1000
Subject: msxml3/tests: Added more tests to ISAXXMLReader_putContentHandler
	and   ISAXXMLReader_getContentHandler,
	added todo test for ISAXXMLReader_parse
In-Reply-To: <200807101522.14741.piotr.caban@gmail.com>
References: <200807101522.14741.piotr.caban@gmail.com>
Message-ID: <48767648.1080006@hotmail.com>

Piotr Caban wrote:
> ---
>  +    hr = ISAXXMLReader_getContentHandler(reader, &lpContentHandler); 

Hi Piotr,
   You might want to add the test.
hr = ISAXXMLReader_getContentHandler(reader, NULL);

Best Regards
  Alistair Leslie-Hughes


From james.keane at gmail.com  Thu Jul 10 16:01:19 2008
From: james.keane at gmail.com (James Keane)
Date: Thu, 10 Jul 2008 17:01:19 -0400
Subject: What's the holdup with RegisterHotKey and UnregisterHotKey??
In-Reply-To: <22821af30807101344w3f80b878g5a37c909415aca5d@mail.gmail.com>
References: <afe7fe050807101213o2d109509q39e768933c761138@mail.gmail.com>
	<22821af30807101344w3f80b878g5a37c909415aca5d@mail.gmail.com>
Message-ID: <afe7fe050807101401y6e0996f0g20a32e0ea529d107@mail.gmail.com>

Yes that makes complete sense, but in this case how would the
implementation be better if we moved it into the wineserver?  Isn't
the point of having seperate drivers for X11 and quartz etc, is to
take advantage of exposed interfaces ie Hotkeys?

Also, how am I as a wine outsider suppose to implement X if I don't
know what it is; this is why I asked.

Let me rephrase my original question then: why is it better to move
this in the server?

James

On Thu, Jul 10, 2008 at 4:44 PM, James Hawkins <truiken at gmail.com> wrote:
> On Thu, Jul 10, 2008 at 2:13 PM, James Keane <james.keane at gmail.com> wrote:
>> Hey everyone!
>>
>> Just wanted to bring to your attention
>> http://bugs.winehq.org/show_bug.cgi?id=1348 again, and ask what is the
>> holdup?  As far as I can see it appears a solution and working patch
>> has been posted.  I am interested in getting this into the main tree
>> and wondering what kind of modifications have to be made to the patch
>> supplied to make it happen.
>>
>>  ------- Comment  #8 From Robert Reif  2007-02-17 15:45:56  -------
>> The reason I was given by Alexandre is that the functionality should be moved
>> into the server.
>>
>> Why is it not possible to accept this patch and then start working on
>> moving it into the server?  With a quick look the only changes from
>> the patch and the git, is the change from dll/user to dll/user32.
>>
>
> If the correct way to do it is X, and the current implementation does
> it by Y, which is not correct, then why would we accept the patch that
> implements Y?  By definition it's a hack, and if we did accept it,
> there'd be no incentive to fix the hack, because everything would
> already work (just in the wrong way).
>
> --
> James Hawkins
>


From truiken at gmail.com  Thu Jul 10 16:03:38 2008
From: truiken at gmail.com (James Hawkins)
Date: Thu, 10 Jul 2008 16:03:38 -0500
Subject: What's the holdup with RegisterHotKey and UnregisterHotKey??
In-Reply-To: <afe7fe050807101401y6e0996f0g20a32e0ea529d107@mail.gmail.com>
References: <afe7fe050807101213o2d109509q39e768933c761138@mail.gmail.com>
	<22821af30807101344w3f80b878g5a37c909415aca5d@mail.gmail.com>
	<afe7fe050807101401y6e0996f0g20a32e0ea529d107@mail.gmail.com>
Message-ID: <22821af30807101403s722dcab3qf275de875cc5532e@mail.gmail.com>

On Thu, Jul 10, 2008 at 4:01 PM, James Keane <james.keane at gmail.com> wrote:
> Yes that makes complete sense, but in this case how would the
> implementation be better if we moved it into the wineserver?  Isn't
> the point of having seperate drivers for X11 and quartz etc, is to
> take advantage of exposed interfaces ie Hotkeys?
>
> Also, how am I as a wine outsider suppose to implement X if I don't
> know what it is; this is why I asked.
>
> Let me rephrase my original question then: why is it better to move
> this in the server?
>

If more people knew the answer to your question, it would probably be
implemented by now :-)  Usually the reason to move something into the
server is to share common functionality, with each frontend (X11,
quartz) augmenting that common backend with their own functionality.

-- 
James Hawkins


From winesku at googlemail.com  Thu Jul 10 16:22:33 2008
From: winesku at googlemail.com (Stefan Kuhr)
Date: Thu, 10 Jul 2008 23:22:33 +0200
Subject: How do I write an exception filter?
In-Reply-To: <81a474f0807101330w15a1270eq7646a5f1da699ad7@mail.gmail.com>
References: <81a474f0807101230j340e4e2du8780d3664a884d6c@mail.gmail.com>
	<4876694C.6080305@arcticnet.no>
	<81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>
	<81a474f0807101330w15a1270eq7646a5f1da699ad7@mail.gmail.com>
Message-ID: <81a474f0807101422o568a7091m3974fb1317b78fc0@mail.gmail.com>

Hello everyone,

On Thu, Jul 10, 2008 at 10:30 PM, Stefan Kuhr <winesku at googlemail.com> wrote:
>>
>> __try
>> {
>>  PDWORD pdwCommStatus = ....;
>>  PDWORD pdwFaultStatus = ....;
>>  doSomething();
>> }
>> __except(MySpecialFilter(GetExceptionCode(),pdwCommStatus, pdwFaultStatus)  )
>> {
>>  // handle the exception
>>
>> }
>
>
> Oh stupid me.
>
> PDWORD pdwCommStatus = ....;
> PDWORD pdwFaultStatus = ....;
>
>
> should be placed outside the try block.
>


Now that we all know that I cannot contribute anymore to improving
NdrClientCall2 and that I also failed to properly write a code snippet
that obeys variable scope rules, could someone give an answer to my
original problem?

OMG, this afternoon is a real disaster :-(

Thanks,

-- 
Stefan Kuhr


From juan.lang at gmail.com  Thu Jul 10 16:37:15 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Thu, 10 Jul 2008 14:37:15 -0700
Subject: How do I write an exception filter?
In-Reply-To: <81a474f0807101422o568a7091m3974fb1317b78fc0@mail.gmail.com>
References: <81a474f0807101230j340e4e2du8780d3664a884d6c@mail.gmail.com>
	<4876694C.6080305@arcticnet.no>
	<81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>
	<81a474f0807101330w15a1270eq7646a5f1da699ad7@mail.gmail.com>
	<81a474f0807101422o568a7091m3974fb1317b78fc0@mail.gmail.com>
Message-ID: <3a768c550807101437ob044357jed55d66af6af0087@mail.gmail.com>

> Now that we all know that I cannot contribute anymore to improving
> NdrClientCall2 and that I also failed to properly write a code snippet
> that obeys variable scope rules, could someone give an answer to my
> original problem?

I think Ove answered it already:  basically you can't access a
locally-scoped variable from the exception handler in Wine, even if
the variable is declared outside the scope of the try block.  You'd
have to move the variable to some other scope to be able to access it
from the exception handler.
--Juan


From wine at mkarcher.dialup.fu-berlin.de  Thu Jul 10 16:46:00 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Thu, 10 Jul 2008 23:46:00 +0200
Subject: [dplayx 02/29] Tests for DirectPlayCreate
In-Reply-To: <82e274890807101204v757ab038t88598e8144331ca8@mail.gmail.com>
References: <82e274890807090848l3d5d872fmfd6240bc3bd0adaa@mail.gmail.com>
	<1215620481.17834.36.camel@hermes2.karcher.local>
	<82e274890807091015j65322668nff1847b8f52172dc@mail.gmail.com>
	<1215643679.24017.26.camel@hermes2.karcher.local>
	<82e274890807101204v757ab038t88598e8144331ca8@mail.gmail.com>
Message-ID: <1215726360.24017.86.camel@hermes2.karcher.local>

Am Donnerstag, den 10.07.2008, 22:04 +0300 schrieb Ismael Barros:
> >> >> +    heap = HeapCreate( 0, 0, 0 );
> >> > Do you have any reason to create your own heap? Each windows process
> >> > already comes equipped with a standard heap you can obtain using the API
> >> > function GetProcessHeap, so this line:
> >> >> +    IUnknown* pUnk = HeapAlloc( heap, 0, sizeof(LPDWORD) );
> >> > would then look like:
> >> > +    IUnknown* pUnk = HeapAlloc( GetProcessHeap(), 0, sizeof(LPDWORD) );
> >> 
> >> That's what I used in the begining, but I've got some HeapAllocs that
> >> I don't free.
> > OK. That's a point. I didn't expect it, though. I would like a comment
> > in there along
> >   /* Create an extra heap to throw away garbage after tests */
> No problem.
[...]
> Hm, yeah, I thought about a cyclic buffer but wanted to keep the code simple.
> However this heap thing is creating some skepticism, so I'll go that way.
For me, the create-heap-and-throw-away approach is OK, but as it is not
the way it is usually handled in wine, I would like to see a comment.
Perhaps AJ prefers cyclic buffers or throw-away heaps. Or perhaps he
doesn't care how it is done in test cases.

> > But in my opinion, testing of the reaction to contract violation should
> > not go into passing somehow valid-looking pointers, that do not point to
> > anything sensible. And the main point was, that I really don't get why
> > it must be a heap pointer. The an LPDWORD on the stack would do as well
> > as allocating sizeof(LPDWORD) area.
> I've been checking how this is done in other tests, and it's
> particularly interesting how they do it in ddraw/tests/refcount.c:81:
>   hr = IDirectDraw7_CreatePalette(DDraw7, DDPCAPS_ALLOW256 | DDPCAPS_8BIT, Table, &palette, (void *) 0xdeadbeef);
I don't think this line is good style, but I still like it more than
your program, as this will definitely crash if the pointer is
derefenced, while your variant makes the function derefencing the
pointer accessing uninitialized data.

> This is the only example in the current code. I could either do it
> that way (not correct, but simple), or use some IUnknown interface. I
> tried to get the IUnknown of the classes I have access to, DirectPlay
> or DirectPlayLobby, but the current implementation is not able to
> return an interface for IID_IUnknown (it just fails with
> E_NOINTERFACE),
Thats bad. Every COM object must return a valid interface pointer for
IID_IUnknown. And even worse: The IID_IUnknown pointer *has* to be
stable. So if you do the following (pretend that CreateFooBar(REFIID,
DWORD, IUnknown*) is a factory function:

  IFooBar *fb1, *fb2;
  IUnknown *unk1, *unk2;
  fb1 = CreateFooBar(IID_IFooBar, 0, NULL);
  IFooBar_QueryInterface(fb1, IID_IUnknown, &unk1);
  IFooBar_QueryInterface(fb1, IID_IFooBar, (IUnknown*)&fb2);
  IFooBar_Release(fb1);
  IFooBar_QueryInterface(fb2, IID_IUnknown, &unk2);
  IFooBar_Release(fb2);
  ok(unk1 == unk2, "COM violation: IUnknown interface must be stable!");
  IUnknown_Release(unk1);
  IUnknown_Release(unk2);

The COM specification guarantees the test to succeed, independent of
what type IFooBar has! DirectPlay currently has no permanent COM object,
but creates a new object on the fly in QueryInterface; this is needed to
support the different vtables.

> so I would have to fix that too (and I'm not very sure about how to do
> it, without breaking anything. Would returning any of the existing
> interfaces that have CreateInstance, AddRef and Release, be correct?
If they were permanent, it would be OK. All COM interfaces are derived
from IUnknown, and can thus be used as IUnknown. The only catch is the
object lifetime uniqueness of the IUnknown interface.

>  This seems to be done a lot in other dlls)
For ddraw for example, it is correct. The IDirectDrawImpl object is live
until all references to it (including the IUnknown one) are gone.

Regards,
  Michael Karcher



From zac at zacbrown.org  Thu Jul 10 17:01:03 2008
From: zac at zacbrown.org (Zac Brown)
Date: Thu, 10 Jul 2008 15:01:03 -0700
Subject: winhttp: tests/winhttp.c[new]: Add test for WinHttpOpenRequest
In-Reply-To: <487685A4.8060605@zacbrown.org>
References: <487685A4.8060605@zacbrown.org>
Message-ID: <4876869F.1060301@zacbrown.org>

Zac Brown wrote:
> Add test for WinHttpOpenRequest. This test is modeled after 
> wininet/tests/http.c's InternetOpenRequest_test function.
> 
> This is the first of many tests for getting Bug 14381 
> (http://bugs.winehq.org/show_bug.cgi?id=14381) fixed with regard to 
> WinHTTP.
> 
> 
> ------------------------------------------------------------------------
> 
> ---
>  Makefile.in                    |    2 +
>  configure                      |    3 +
>  dlls/Makefile.in               |    1 +
>  dlls/winhttp/tests/Makefile.in |   13 +++++
>  dlls/winhttp/tests/winhttp.c   |  105 ++++++++++++++++++++++++++++++++++++++++
>  5 files changed, 124 insertions(+), 0 deletions(-)
>  create mode 100644 dlls/winhttp/tests/Makefile.in
>  create mode 100644 dlls/winhttp/tests/winhttp.c
> 
> diff --git a/Makefile.in b/Makefile.in
> index 1b35079..6a56e44 100644
> --- a/Makefile.in
> +++ b/Makefile.in
> @@ -495,6 +495,7 @@ ALL_MAKEFILES = \
>  	dlls/winex11.drv/Makefile \
>  	dlls/wing32/Makefile \
>  	dlls/winhttp/Makefile \
> +	dlls/winhttp/tests/Makefile \
>  	dlls/wininet/Makefile \
>  	dlls/wininet/tests/Makefile \
>  	dlls/winmm/Makefile \
> @@ -924,6 +925,7 @@ dlls/winequartz.drv/Makefile: dlls/winequartz.drv/Makefile.in dlls/Makedll.rules
>  dlls/winex11.drv/Makefile: dlls/winex11.drv/Makefile.in dlls/Makedll.rules
>  dlls/wing32/Makefile: dlls/wing32/Makefile.in dlls/Makedll.rules
>  dlls/winhttp/Makefile: dlls/winhttp/Makefile.in dlls/Makedll.rules
> +dlls/winhttp/tests/Makefile: dlls/winhttp/tests/Makefile.in dlls/Maketest.rules
>  dlls/wininet/Makefile: dlls/wininet/Makefile.in dlls/Makedll.rules
>  dlls/wininet/tests/Makefile: dlls/wininet/tests/Makefile.in dlls/Maketest.rules
>  dlls/winmm/Makefile: dlls/winmm/Makefile.in dlls/Makedll.rules
> diff --git a/configure b/configure
> index d9f9b65..a276261 100755
> --- a/configure
> +++ b/configure
> @@ -22416,6 +22416,8 @@ ac_config_files="$ac_config_files dlls/wing32/Makefile"
>  
>  ac_config_files="$ac_config_files dlls/winhttp/Makefile"
>  
> +ac_config_files="$ac_config_files dlls/winhttp/tests/Makefile"
> +
>  ac_config_files="$ac_config_files dlls/wininet/Makefile"
>  
>  ac_config_files="$ac_config_files dlls/wininet/tests/Makefile"
> @@ -23481,6 +23483,7 @@ do
>      "dlls/winex11.drv/Makefile") CONFIG_FILES="$CONFIG_FILES dlls/winex11.drv/Makefile" ;;
>      "dlls/wing32/Makefile") CONFIG_FILES="$CONFIG_FILES dlls/wing32/Makefile" ;;
>      "dlls/winhttp/Makefile") CONFIG_FILES="$CONFIG_FILES dlls/winhttp/Makefile" ;;
> +    "dlls/winhttp/tests/Makefile") CONFIG_FILES="$CONFIG_FILES dlls/winhttp/tests/Makefile" ;;
>      "dlls/wininet/Makefile") CONFIG_FILES="$CONFIG_FILES dlls/wininet/Makefile" ;;
>      "dlls/wininet/tests/Makefile") CONFIG_FILES="$CONFIG_FILES dlls/wininet/tests/Makefile" ;;
>      "dlls/winmm/Makefile") CONFIG_FILES="$CONFIG_FILES dlls/winmm/Makefile" ;;
> diff --git a/dlls/Makefile.in b/dlls/Makefile.in
> index d130f35..1a77dc0 100644
> --- a/dlls/Makefile.in
> +++ b/dlls/Makefile.in
> @@ -362,6 +362,7 @@ TESTSUBDIRS = \
>  	usp10/tests \
>  	uxtheme/tests \
>  	version/tests \
> +	winhttp/tests \
>  	wininet/tests \
>  	winmm/tests \
>  	winspool.drv/tests \
> diff --git a/dlls/winhttp/tests/Makefile.in b/dlls/winhttp/tests/Makefile.in
> new file mode 100644
> index 0000000..3f35e08
> --- /dev/null
> +++ b/dlls/winhttp/tests/Makefile.in
> @@ -0,0 +1,13 @@
> +TOPSRCDIR = @top_srcdir@
> +TOPOBJDIR = ../../..
> +SRCDIR    = @srcdir@
> +VPATH     = @srcdir@
> +TESTDLL   = winhttp.dll
> +IMPORTS   = winhttp ws2_32 kernel32
> +
> +CTESTS = \
> +	winhttp.c
> +
> + at MAKE_TEST_RULES@
> +
> + at DEPENDENCIES@  # everything below this line is overwritten by make depend
> diff --git a/dlls/winhttp/tests/winhttp.c b/dlls/winhttp/tests/winhttp.c
> new file mode 100644
> index 0000000..afc9d97
> --- /dev/null
> +++ b/dlls/winhttp/tests/winhttp.c
> @@ -0,0 +1,105 @@
> +/*
> + * WinHTTP - tests
> + *
> + * Copyright 2008 Google (Zac Brown)
> + *
> + * This library is free software; you can redistribute it and/or
> + * modify it under the terms of the GNU Lesser General Public
> + * License as published by the Free Software Foundation; either
> + * version 2.1 of the License, or (at your option) any later version.
> + *
> + * This library is distributed in the hope that it will be useful,
> + * but WITHOUT ANY WARRANTY; without even the implied warranty of
> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
> + * Lesser General Public License for more details.
> + *
> + * You should have received a copy of the GNU Lesser General Public
> + * License along with this library; if not, write to the Free Software
> + * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
> + * 02110-1301, USA
> + */
> +
> +#define COBJMACROS
> +
> +#include <stdarg.h>
> +#include <stdio.h>
> +#include <stdlib.h>
> +
> +#include <windef.h>
> +#include <winbase.h>
> +#include <winhttp.h>
> +
> +#include "wine/test.h"
> +
> +/* Function pointer declarations for functions being used */
> +static HINTERNET (WINAPI *pWinHttpOpen) (LPCWSTR pwszUserAgent, DWORD dwAccessType,
> +    LPCWSTR pwszProxyName, LPCWSTR pwszProxyBypass, DWORD dwFlags);
> +static HINTERNET (WINAPI *pWinHttpConnect) (HINTERNET hSession, LPCWSTR pwszServerName,
> +    INTERNET_PORT nServerPort, DWORD dwReserved);
> +static HINTERNET (WINAPI *pWinHttpOpenRequest) (HINTERNET hConnect, LPCWSTR pwszVerb,
> +    LPCWSTR pwszObjectName, LPCWSTR pwszVersion, LPCWSTR pwszReferrer,
> +    LPCWSTR* ppwszAcceptTypes, DWORD dwFlags);
> +static BOOL (WINAPI *pWinHttpSendRequest) (HINTERNET hRequest, LPCWSTR pwszHeaders,
> +    DWORD dwHeadersLength, LPVOID lpOptional, DWORD dwOptionalLength,
> +    DWORD dwTotalLength, DWORD_PTR dwContext);
> +static BOOL (WINAPI *pWinHttpCloseHandle) (HINTERNET hInternet);
> +
> +static const WCHAR test_useragent[] = {'W','i','n','e',' ','R','e','g','r','e','s','s','i','o','n',' ','T','e','s','t',0};
> +static const WCHAR test_server[] = {'w','i','n','e','h','q','.','o','r','g',0};
> +
> +/* BEGIN TESTS */
> +
> +static void test_OpenRequest (void)
> +{
> +    BOOL ret;
> +    HINTERNET session, request, connection;
> +    session = request = connection = NULL;
> +
> +    session = pWinHttpOpen (test_useragent, WINHTTP_ACCESS_TYPE_DEFAULT_PROXY, WINHTTP_NO_PROXY_NAME, WINHTTP_NO_PROXY_BYPASS, 0);
> +    todo_wine ok (session != NULL, "WinHttpOpen failed to open session.\n");
> +
> +    /* Test with a bad server name */
> +    SetLastError (0xdeadbeef);
> +    connection = pWinHttpConnect (session, NULL, INTERNET_DEFAULT_HTTP_PORT, 0);
> +    ok (connection == NULL, "WinHttpConnect succeeded in opening connection to NULL server argument.\n");
> +    todo_wine ok (GetLastError() == ERROR_INVALID_PARAMETER, "Expected ERROR_INVALID_PARAMETER, got %u.\n", GetLastError());
> +
> +    /* Test with a valid server name */
> +    connection = pWinHttpConnect (session, test_server, INTERNET_DEFAULT_HTTP_PORT, 0);
> +    todo_wine ok (connection != NULL, "WinHttpConnect failed to open a connection, error: %u.\n", GetLastError());
> +
> +    request = pWinHttpOpenRequest (connection, NULL, NULL, NULL, WINHTTP_NO_REFERER, WINHTTP_DEFAULT_ACCEPT_TYPES, 0);
> +    if (request == NULL && GetLastError() == ERROR_WINHTTP_NAME_NOT_RESOLVED)
> +    {
> +        skip("Network unreachable, skipping.\n");
> +        goto done;
> +    }
> +    todo_wine ok (request != NULL, "WinHttpOpenrequest failed to open a request, error: %u.\n", GetLastError());
> +
> +    ret = pWinHttpSendRequest (request, WINHTTP_NO_ADDITIONAL_HEADERS, 0, NULL, 0, 0, 0);
> +    todo_wine
> +    {
> +        ok (ret == TRUE, "WinHttpSendRequest failed: %u\n", GetLastError());
> +        ok (WinHttpCloseHandle (request), "WinHttpCloseHandle failed on closing request.\n");
> +    }
> +
> + done:
> +    todo_wine
> +    {
> +        ok (WinHttpCloseHandle (connection), "WinHttpCloseHandle failed on closing connection.\n");
> +        ok (WinHttpCloseHandle (session), "WinHttpCloseHandle failed on closing session.\n");
> +    }
> +}
> +
> +START_TEST (winhttp)
> +{
> +    HMODULE hmod = LoadLibraryA ("winhttp.dll");
> +
> +    pWinHttpOpen = (void *) GetProcAddress (hmod, "WinHttpOpen");
> +    pWinHttpConnect = (void *) GetProcAddress (hmod, "WinHttpConnect");
> +    pWinHttpOpenRequest = (void *) GetProcAddress (hmod, "WinHttpOpenRequest");
> +    pWinHttpSendRequest = (void *) GetProcAddress (hmod, "WinHttpSendRequest");
> +    pWinHttpCloseHandle = (void *) GetProcAddress (hmod, "WinHttpCloseHandle");
> +
> +    test_OpenRequest();
> +}
> 
> 
> ------------------------------------------------------------------------
> 
> 

As a note this passes on Win XP as well as Win 2003.


From truiken at gmail.com  Thu Jul 10 17:05:18 2008
From: truiken at gmail.com (James Hawkins)
Date: Thu, 10 Jul 2008 17:05:18 -0500
Subject: winhttp: main.c: Add stub implementation for
	WinHttpGetDefaultProxyConfiguration
In-Reply-To: <48768620.5090508@zacbrown.org>
References: <48768620.5090508@zacbrown.org>
Message-ID: <22821af30807101505h588c9ebax1ddf8d753f9470b6@mail.gmail.com>

On Thu, Jul 10, 2008 at 4:58 PM, Zac Brown <zac at zacbrown.org> wrote:
> Add stub implementation for WinHttpGetDefaultProxyConfiguration
>

+BOOL WINAPI WinHttpGetDefaultProxyConfiguration (WINHTTP_PROXY_INFO*
pProxyInfo)
+{
+    FIXME("(%p): stub\n", pProxyInfo);
+
+    SetLastError(ERROR_NOT_SUPPORTED);
+    return FALSE;
+}

You need to be consistent with the style of the rest of the file (no
space after function names before opening parenthesis).

-- 
James Hawkins


From hverbeet at gmail.com  Thu Jul 10 17:12:00 2008
From: hverbeet at gmail.com (H. Verbeet)
Date: Fri, 11 Jul 2008 00:12:00 +0200
Subject: What's the holdup with RegisterHotKey and UnregisterHotKey??
In-Reply-To: <22821af30807101403s722dcab3qf275de875cc5532e@mail.gmail.com>
References: <afe7fe050807101213o2d109509q39e768933c761138@mail.gmail.com>
	<22821af30807101344w3f80b878g5a37c909415aca5d@mail.gmail.com>
	<afe7fe050807101401y6e0996f0g20a32e0ea529d107@mail.gmail.com>
	<22821af30807101403s722dcab3qf275de875cc5532e@mail.gmail.com>
Message-ID: <d658b69e0807101512l412ece35k6b72055b9cf7e958@mail.gmail.com>

2008/7/10 James Hawkins <truiken at gmail.com>:
> If more people knew the answer to your question, it would probably be
> implemented by now :-)  Usually the reason to move something into the
> server is to share common functionality, with each frontend (X11,
> quartz) augmenting that common backend with their own functionality.
>
I imagine that in the case of hotkeys making it work across processes
is a consideration as well.


From ovek at arcticnet.no  Thu Jul 10 17:32:44 2008
From: ovek at arcticnet.no (Ove Kaaven)
Date: Thu, 10 Jul 2008 18:32:44 -0400
Subject: How do I write an exception filter?
In-Reply-To: <81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>
References: <81a474f0807101230j340e4e2du8780d3664a884d6c@mail.gmail.com>	
	<4876694C.6080305@arcticnet.no>
	<81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>
Message-ID: <48768E0C.6040300@arcticnet.no>

Stefan Kuhr wrote:
> This is something quite common in Win32, as far as I can tell.

Yes, like I said, MSVC has special compiler support. In MSVC, __try, 
__except, etc, are compiler builtins (not macros as in Wine). But they 
are Microsoft extensions, they can't be implemented using standard C.

>> Also perhaps consider whether you need a filter function this complex at
>> all...
>>
> 
> I need that. I would like to implement comm status and fault status
> awareness in WINE's rpcrt4, because my applications crash in WINE
> because of the lack of proper comm status and fault status awareness
> in WINE's RPC implementation. From debugging NdClientCall2 in XP I
> deduce I need this.

Well, I'd expect it to be generally better to just have the appropriate 
exception raised in the first place, rather than conditionally handle it 
depending on something unrelated to the exception information.


From zac at zacbrown.org  Thu Jul 10 17:40:38 2008
From: zac at zacbrown.org (Zac Brown)
Date: Thu, 10 Jul 2008 15:40:38 -0700
Subject: winhttp: tests/winhttp.c[new]: Add test for WinHttpOpenRequest
In-Reply-To: <487685A4.8060605@zacbrown.org>
References: <487685A4.8060605@zacbrown.org>
Message-ID: <48768FE6.3000206@zacbrown.org>

Zac Brown wrote:
> Add test for WinHttpOpenRequest. This test is modeled after 
> wininet/tests/http.c's InternetOpenRequest_test function.
> 
> This is the first of many tests for getting Bug 14381 
> (http://bugs.winehq.org/show_bug.cgi?id=14381) fixed with regard to 
> WinHTTP.
> 
> 
> ------------------------------------------------------------------------
> 
> ---
>  Makefile.in                    |    2 +
>  configure                      |    3 +
>  dlls/Makefile.in               |    1 +
>  dlls/winhttp/tests/Makefile.in |   13 +++++
>  dlls/winhttp/tests/winhttp.c   |  105 ++++++++++++++++++++++++++++++++++++++++
>  5 files changed, 124 insertions(+), 0 deletions(-)
>  create mode 100644 dlls/winhttp/tests/Makefile.in
>  create mode 100644 dlls/winhttp/tests/winhttp.c
> 
> diff --git a/Makefile.in b/Makefile.in
> index 1b35079..6a56e44 100644
> --- a/Makefile.in
> +++ b/Makefile.in
> @@ -495,6 +495,7 @@ ALL_MAKEFILES = \
>  	dlls/winex11.drv/Makefile \
>  	dlls/wing32/Makefile \
>  	dlls/winhttp/Makefile \
> +	dlls/winhttp/tests/Makefile \
>  	dlls/wininet/Makefile \
>  	dlls/wininet/tests/Makefile \
>  	dlls/winmm/Makefile \
> @@ -924,6 +925,7 @@ dlls/winequartz.drv/Makefile: dlls/winequartz.drv/Makefile.in dlls/Makedll.rules
>  dlls/winex11.drv/Makefile: dlls/winex11.drv/Makefile.in dlls/Makedll.rules
>  dlls/wing32/Makefile: dlls/wing32/Makefile.in dlls/Makedll.rules
>  dlls/winhttp/Makefile: dlls/winhttp/Makefile.in dlls/Makedll.rules
> +dlls/winhttp/tests/Makefile: dlls/winhttp/tests/Makefile.in dlls/Maketest.rules
>  dlls/wininet/Makefile: dlls/wininet/Makefile.in dlls/Makedll.rules
>  dlls/wininet/tests/Makefile: dlls/wininet/tests/Makefile.in dlls/Maketest.rules
>  dlls/winmm/Makefile: dlls/winmm/Makefile.in dlls/Makedll.rules
> diff --git a/configure b/configure
> index d9f9b65..a276261 100755
> --- a/configure
> +++ b/configure
> @@ -22416,6 +22416,8 @@ ac_config_files="$ac_config_files dlls/wing32/Makefile"
>  
>  ac_config_files="$ac_config_files dlls/winhttp/Makefile"
>  
> +ac_config_files="$ac_config_files dlls/winhttp/tests/Makefile"
> +
>  ac_config_files="$ac_config_files dlls/wininet/Makefile"
>  
>  ac_config_files="$ac_config_files dlls/wininet/tests/Makefile"
> @@ -23481,6 +23483,7 @@ do
>      "dlls/winex11.drv/Makefile") CONFIG_FILES="$CONFIG_FILES dlls/winex11.drv/Makefile" ;;
>      "dlls/wing32/Makefile") CONFIG_FILES="$CONFIG_FILES dlls/wing32/Makefile" ;;
>      "dlls/winhttp/Makefile") CONFIG_FILES="$CONFIG_FILES dlls/winhttp/Makefile" ;;
> +    "dlls/winhttp/tests/Makefile") CONFIG_FILES="$CONFIG_FILES dlls/winhttp/tests/Makefile" ;;
>      "dlls/wininet/Makefile") CONFIG_FILES="$CONFIG_FILES dlls/wininet/Makefile" ;;
>      "dlls/wininet/tests/Makefile") CONFIG_FILES="$CONFIG_FILES dlls/wininet/tests/Makefile" ;;
>      "dlls/winmm/Makefile") CONFIG_FILES="$CONFIG_FILES dlls/winmm/Makefile" ;;
> diff --git a/dlls/Makefile.in b/dlls/Makefile.in
> index d130f35..1a77dc0 100644
> --- a/dlls/Makefile.in
> +++ b/dlls/Makefile.in
> @@ -362,6 +362,7 @@ TESTSUBDIRS = \
>  	usp10/tests \
>  	uxtheme/tests \
>  	version/tests \
> +	winhttp/tests \
>  	wininet/tests \
>  	winmm/tests \
>  	winspool.drv/tests \
> diff --git a/dlls/winhttp/tests/Makefile.in b/dlls/winhttp/tests/Makefile.in
> new file mode 100644
> index 0000000..3f35e08
> --- /dev/null
> +++ b/dlls/winhttp/tests/Makefile.in
> @@ -0,0 +1,13 @@
> +TOPSRCDIR = @top_srcdir@
> +TOPOBJDIR = ../../..
> +SRCDIR    = @srcdir@
> +VPATH     = @srcdir@
> +TESTDLL   = winhttp.dll
> +IMPORTS   = winhttp ws2_32 kernel32
> +
> +CTESTS = \
> +	winhttp.c
> +
> + at MAKE_TEST_RULES@
> +
> + at DEPENDENCIES@  # everything below this line is overwritten by make depend
> diff --git a/dlls/winhttp/tests/winhttp.c b/dlls/winhttp/tests/winhttp.c
> new file mode 100644
> index 0000000..afc9d97
> --- /dev/null
> +++ b/dlls/winhttp/tests/winhttp.c
> @@ -0,0 +1,105 @@
> +/*
> + * WinHTTP - tests
> + *
> + * Copyright 2008 Google (Zac Brown)
> + *
> + * This library is free software; you can redistribute it and/or
> + * modify it under the terms of the GNU Lesser General Public
> + * License as published by the Free Software Foundation; either
> + * version 2.1 of the License, or (at your option) any later version.
> + *
> + * This library is distributed in the hope that it will be useful,
> + * but WITHOUT ANY WARRANTY; without even the implied warranty of
> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
> + * Lesser General Public License for more details.
> + *
> + * You should have received a copy of the GNU Lesser General Public
> + * License along with this library; if not, write to the Free Software
> + * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
> + * 02110-1301, USA
> + */
> +
> +#define COBJMACROS
> +
> +#include <stdarg.h>
> +#include <stdio.h>
> +#include <stdlib.h>
> +
> +#include <windef.h>
> +#include <winbase.h>
> +#include <winhttp.h>
> +
> +#include "wine/test.h"
> +
> +/* Function pointer declarations for functions being used */
> +static HINTERNET (WINAPI *pWinHttpOpen) (LPCWSTR pwszUserAgent, DWORD dwAccessType,
> +    LPCWSTR pwszProxyName, LPCWSTR pwszProxyBypass, DWORD dwFlags);
> +static HINTERNET (WINAPI *pWinHttpConnect) (HINTERNET hSession, LPCWSTR pwszServerName,
> +    INTERNET_PORT nServerPort, DWORD dwReserved);
> +static HINTERNET (WINAPI *pWinHttpOpenRequest) (HINTERNET hConnect, LPCWSTR pwszVerb,
> +    LPCWSTR pwszObjectName, LPCWSTR pwszVersion, LPCWSTR pwszReferrer,
> +    LPCWSTR* ppwszAcceptTypes, DWORD dwFlags);
> +static BOOL (WINAPI *pWinHttpSendRequest) (HINTERNET hRequest, LPCWSTR pwszHeaders,
> +    DWORD dwHeadersLength, LPVOID lpOptional, DWORD dwOptionalLength,
> +    DWORD dwTotalLength, DWORD_PTR dwContext);
> +static BOOL (WINAPI *pWinHttpCloseHandle) (HINTERNET hInternet);
> +
> +static const WCHAR test_useragent[] = {'W','i','n','e',' ','R','e','g','r','e','s','s','i','o','n',' ','T','e','s','t',0};
> +static const WCHAR test_server[] = {'w','i','n','e','h','q','.','o','r','g',0};
> +
> +/* BEGIN TESTS */
> +
> +static void test_OpenRequest (void)
> +{
> +    BOOL ret;
> +    HINTERNET session, request, connection;
> +    session = request = connection = NULL;
> +
> +    session = pWinHttpOpen (test_useragent, WINHTTP_ACCESS_TYPE_DEFAULT_PROXY, WINHTTP_NO_PROXY_NAME, WINHTTP_NO_PROXY_BYPASS, 0);
> +    todo_wine ok (session != NULL, "WinHttpOpen failed to open session.\n");
> +
> +    /* Test with a bad server name */
> +    SetLastError (0xdeadbeef);
> +    connection = pWinHttpConnect (session, NULL, INTERNET_DEFAULT_HTTP_PORT, 0);
> +    ok (connection == NULL, "WinHttpConnect succeeded in opening connection to NULL server argument.\n");
> +    todo_wine ok (GetLastError() == ERROR_INVALID_PARAMETER, "Expected ERROR_INVALID_PARAMETER, got %u.\n", GetLastError());
> +
> +    /* Test with a valid server name */
> +    connection = pWinHttpConnect (session, test_server, INTERNET_DEFAULT_HTTP_PORT, 0);
> +    todo_wine ok (connection != NULL, "WinHttpConnect failed to open a connection, error: %u.\n", GetLastError());
> +
> +    request = pWinHttpOpenRequest (connection, NULL, NULL, NULL, WINHTTP_NO_REFERER, WINHTTP_DEFAULT_ACCEPT_TYPES, 0);
> +    if (request == NULL && GetLastError() == ERROR_WINHTTP_NAME_NOT_RESOLVED)
> +    {
> +        skip("Network unreachable, skipping.\n");
> +        goto done;
> +    }
> +    todo_wine ok (request != NULL, "WinHttpOpenrequest failed to open a request, error: %u.\n", GetLastError());
> +
> +    ret = pWinHttpSendRequest (request, WINHTTP_NO_ADDITIONAL_HEADERS, 0, NULL, 0, 0, 0);
> +    todo_wine
> +    {
> +        ok (ret == TRUE, "WinHttpSendRequest failed: %u\n", GetLastError());
> +        ok (WinHttpCloseHandle (request), "WinHttpCloseHandle failed on closing request.\n");
> +    }
> +
> + done:
> +    todo_wine
> +    {
> +        ok (WinHttpCloseHandle (connection), "WinHttpCloseHandle failed on closing connection.\n");
> +        ok (WinHttpCloseHandle (session), "WinHttpCloseHandle failed on closing session.\n");
> +    }
> +}
> +
> +START_TEST (winhttp)
> +{
> +    HMODULE hmod = LoadLibraryA ("winhttp.dll");
> +
> +    pWinHttpOpen = (void *) GetProcAddress (hmod, "WinHttpOpen");
> +    pWinHttpConnect = (void *) GetProcAddress (hmod, "WinHttpConnect");
> +    pWinHttpOpenRequest = (void *) GetProcAddress (hmod, "WinHttpOpenRequest");
> +    pWinHttpSendRequest = (void *) GetProcAddress (hmod, "WinHttpSendRequest");
> +    pWinHttpCloseHandle = (void *) GetProcAddress (hmod, "WinHttpCloseHandle");
> +
> +    test_OpenRequest();
> +}
> 
> 
> ------------------------------------------------------------------------
> 
> 

Ignore this patch, comments from James warrant a revision.


From robertshearman at gmail.com  Thu Jul 10 18:01:58 2008
From: robertshearman at gmail.com (Rob Shearman)
Date: Fri, 11 Jul 2008 00:01:58 +0100
Subject: How do I write an exception filter?
In-Reply-To: <81a474f0807101422o568a7091m3974fb1317b78fc0@mail.gmail.com>
References: <81a474f0807101230j340e4e2du8780d3664a884d6c@mail.gmail.com>
	<4876694C.6080305@arcticnet.no>
	<81a474f0807101324g791e02fbxf1e63471e3c14cb@mail.gmail.com>
	<81a474f0807101330w15a1270eq7646a5f1da699ad7@mail.gmail.com>
	<81a474f0807101422o568a7091m3974fb1317b78fc0@mail.gmail.com>
Message-ID: <1096648c0807101601k1e1b32a8hf915e32a99058fc6@mail.gmail.com>

2008/7/10 Stefan Kuhr <winesku at googlemail.com>:
> Now that we all know that I cannot contribute anymore to improving
> NdrClientCall2 and that I also failed to properly write a code snippet
> that obeys variable scope rules, could someone give an answer to my
> original problem?

Hi Stefan,

There is already a bug logged for this issue, but I hadn't got around
to implementing it yet. The primary reason being the complexity
associated with doing exception handling for one case (objects)
without exception handling for the other case (non-object code). There
is also the issue of possibly creating conflicts by re-indenting a
large chunk of code, but we will just have to suck that up. So leave
it with me and I'll let you know when I have something to test.

-- 
Rob Shearman


From piotr.caban at gmail.com  Thu Jul 10 18:16:00 2008
From: piotr.caban at gmail.com (Piotr Caban)
Date: Fri, 11 Jul 2008 01:16:00 +0200
Subject: msxml3/tests: Added more tests to ISAXXMLReader_putContentHandler
	and ISAXXMLReader_getContentHandler,
	added todo test for ISAXXMLReader_parse
In-Reply-To: <48767648.1080006@hotmail.com>
References: <200807101522.14741.piotr.caban@gmail.com>
	<48767648.1080006@hotmail.com>
Message-ID: <200807110116.00567.piotr.caban@gmail.com>

Hi Alistair,

On Thursday 10 of July 2008 22:51:20 you wrote:
>    You might want to add the test.
> hr = ISAXXMLReader_getContentHandler(reader, NULL);

I have added the test and fixed ISAXXMLReader_getContentHandler and 
ISAXXMLReader_getErrorHandler functions. Thanks for your help.

Regards,
Piotr




From dank at kegel.com  Thu Jul 10 19:02:03 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 10 Jul 2008 17:02:03 -0700
Subject: gdiplus: Test for CharacterRange.
Message-ID: <a71bd89a0807101702m1f0ec832hf6d2c6b0286ca95e@mail.gmail.com>

Hi Adam,
http://source.winehq.org/git/wine.git/?a=commit;h=2f7bb7c5385c86dced1c7e1d183c8a2a38699a50
seems to trigger a valgrind warning in your test code.

http://kegel.com/wine/valgrind/logs-2008-07-10-07.15/vg-gdiplus_stringformat-diff.txt

+ Conditional jump or move depends on uninitialised value(s)
+    at  winetest_vok (test.h:259)
+    by  winetest_ok (test.h:304)
+    by  test_characterrange (stringformat.c:67)
+    by  func_stringformat (stringformat.c:87)
+    by  run_test (test.h:452)
+    by  main (test.h:501)
+  Uninitialised value was created by a stack allocation
+    at  test_characterrange (stringformat.c:53)

Could you have a look?

Thanks,
Dan


From zac at zacbrown.org  Thu Jul 10 19:14:07 2008
From: zac at zacbrown.org (Zac Brown)
Date: Thu, 10 Jul 2008 17:14:07 -0700
Subject: winhttp: main.c: Add stub implementation
	for	WinHttpGetDefaultProxyConfiguration
In-Reply-To: <48768620.5090508@zacbrown.org>
References: <48768620.5090508@zacbrown.org>
Message-ID: <4876A5CF.8080504@zacbrown.org>

Zac Brown wrote:
> Add stub implementation for WinHttpGetDefaultProxyConfiguration
> 
> 

Ignore this, formatting is wrong.



From james.keane at gmail.com  Thu Jul 10 19:48:04 2008
From: james.keane at gmail.com (James Keane)
Date: Thu, 10 Jul 2008 20:48:04 -0400
Subject: What's the holdup with RegisterHotKey and UnregisterHotKey??
In-Reply-To: <d658b69e0807101512l412ece35k6b72055b9cf7e958@mail.gmail.com>
References: <afe7fe050807101213o2d109509q39e768933c761138@mail.gmail.com>
	<22821af30807101344w3f80b878g5a37c909415aca5d@mail.gmail.com>
	<afe7fe050807101401y6e0996f0g20a32e0ea529d107@mail.gmail.com>
	<22821af30807101403s722dcab3qf275de875cc5532e@mail.gmail.com>
	<d658b69e0807101512l412ece35k6b72055b9cf7e958@mail.gmail.com>
Message-ID: <afe7fe050807101748q3f7a100eg6cb4f753ed28c827@mail.gmail.com>

The supplied patch does work across process

On Thu, Jul 10, 2008 at 6:12 PM, H. Verbeet <hverbeet at gmail.com> wrote:
> 2008/7/10 James Hawkins <truiken at gmail.com>:
>> If more people knew the answer to your question, it would probably be
>> implemented by now :-)  Usually the reason to move something into the
>> server is to share common functionality, with each frontend (X11,
>> quartz) augmenting that common backend with their own functionality.
>>
> I imagine that in the case of hotkeys making it work across processes
> is a consideration as well.
>


From dank at kegel.com  Thu Jul 10 19:49:32 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 10 Jul 2008 17:49:32 -0700
Subject: New winetricks 20080710: new verb ogg, fixes for firefox and divx.
Message-ID: <a71bd89a0807101749o2f55a3f7o462d07dc78a58e3d@mail.gmail.com>

Another week, another winetricks.

The big news is that Maarten now has a good
directshow filter for the Schroedinger codec,
and that it runs on Wine finally.
To see it in action, do
  rm winetricks
  wget http://kegel.com/wine/winetricks
  wget http://kegel.com/wine/codecdemo
  bash codecdemo
then choose the options to install ogg and xvid;
then choose the option to play the example ogg dirac file Acadiane.ogg.
It should work (with some artifacts).

This is big news because Schroedinger is potentially
a good enough, free enough codec to achieve world domination
one of these days (once all the bugs are worked out).

Online as always at
  http://kegel.com/wine/winetricks
or
  http://winezeug.googlecode.com

Changes since July 4th's wine-devel annoucement:

r101 Added Schroedinger directshow filter (w00t!)
r100 Add ogg codec to winetricks and codecdemo
r99 add missing quotes on backtick; should fix problem reported by
Philippe Roubach?
r98 Updated divx
r97 Fixed URL for firefox3 (thanks Shing-Shong Shei),
 Fixed silent install for firefox3
 Added firefox synonym for firefox3


From dank at kegel.com  Thu Jul 10 19:53:47 2008
From: dank at kegel.com (Dan Kegel)
Date: Thu, 10 Jul 2008 17:53:47 -0700
Subject: New winetricks 20080710: new verb ogg,
	fixes for firefox and divx. Schroedinger support!
Message-ID: <a71bd89a0807101753o1a4eed36qbd6a79ef5eafa457@mail.gmail.com>

Another week, another winetricks.

The big news is that Maarten now has a good
directshow filter for the Schroedinger codec,
and that it runs on Wine finally.
To see it in action, do
  rm winetricks
  wget http://kegel.com/wine/winetricks
  wget http://kegel.com/wine/codecdemo
  bash codecdemo
then choose the options to install ogg and xvid;
then choose the option to play the example ogg dirac file Acadiane.ogg.
It should work (with some artifacts).

This is big news because Schroedinger is potentially
a good enough, free enough codec to achieve world domination
one of these days (once all the bugs are worked out).

It's also big news because now I owe Maarten a beer.

Online as always at
  http://kegel.com/wine/winetricks
or
  http://winezeug.googlecode.com

Changes since July 4th's wine-devel annoucement:

r101 Added Schroedinger directshow filter (w00t!)
r100 Add ogg codec to winetricks and codecdemo
r99 add missing quotes on backtick; should fix problem reported by
Philippe Roubach?
r98 Updated divx
r97 Fixed URL for firefox3 (thanks Shing-Shong Shei),
 Fixed silent install for firefox3
 Added firefox synonym for firefox3


From julliard at winehq.org  Fri Jul 11 07:24:07 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 11 Jul 2008 14:24:07 +0200
Subject: quartz: Fix incorrect use of mtCurrent in transform filter
In-Reply-To: <b130c85e0807102144t57ec6503w3621bdcc7a5024e9@mail.gmail.com>
	(Maarten Lankhorst's message of "Thu, 10 Jul 2008 21:44:28 -0700")
References: <b130c85e0807102144t57ec6503w3621bdcc7a5024e9@mail.gmail.com>
Message-ID: <87y748lic8.fsf@wine.dyndns.org>

"Maarten Lankhorst" <m.b.lankhorst at gmail.com> writes:

> ---
> mtCurrent is cleared when connecting, so this may cause weird bugs
> during connection.

This doesn't work:

../../../tools/runtest -q -P wine -M qedit.dll -T ../../.. -p qedit_test.exe.so mediadet.c && touch mediadet.ok
err:quartz:OutputPin_Connect cbFormat: 0
pin.c:943: OutputPin_Connect: Assertion `pmtCandidate->pbFormat' failed.
wine: Assertion failed at address 0x601b0b87 (thread 0009), starting debugger...
Unhandled exception: assertion failed in 32-bit code (0x601b0b87).
Register dump:
 CS:0023 SS:002b DS:002b ES:002b FS:0063 GS:006b
 EIP:601b0b87 ESP:0032fa50 EBP:0032fa58 EFLAGS:00000206(   - 00      - -IP1)
 EAX:00000000 EBX:00001acf ECX:00001acf EDX:00000006
 ESI:0032faf8 EDI:602c8ff4
Stack dump:
0x0032fa50:  602c8ff4 602d19f0 0032fb84 601b2281
0x0032fa60:  00000006 0032faf8 00000000 7d57b460
0x0032fa70:  00000068 7d57b468 0032fa9c 601ede11
0x0032fa80:  0032fabc 7d57b468 7d57b4cc 0032fb94
0x0032fa90:  602c8ff4 0000004a 7d57b468 0032fb68
0x0032faa0:  601e7c7b 7d57b468 0000004a 0032fbac
Backtrace:
=>1 0x601b0b87 gsignal+0x3f() in libc.so.6 (0x0032fa58)
  2 0x601b2281 abort+0x101() in libc.so.6 (0x0032fb84)
  3 0x601a9ed4 __assert_fail+0xf0() in libc.so.6 (0x0032fbc8)
  4 0x60d7af84 OutputPin_Connect+0x184(iface=0x12f510, pReceivePin=0x12fe50, pmt=0x0) [/home/julliard/wine/wine/dlls/quartz/pin.c:965] in quartz (0x0032fc28)
  5 0x60d2a52a MediaDet_put_Filename+0x5aa(iface=<register ESI not in topmost frame>, newVal=0x122834) [/home/julliard/wine/wine/dlls/qedit/mediadet.c:416] in qedit (0x0032fd58)
  6 0x6053f375 func_mediadet+0x4d5() [/home/julliard/wine/wine/dlls/qedit/tests/mediadet.c:150] in qedit_test (0x0032fe68)
  7 0x60540280 run_test+0x130(name=0x1103ee) [/home/julliard/wine/wine/dlls/qedit/tests/../../../include/wine/test.h:454] in qedit_test (0x0032fea8)
  8 0x60540483 main+0x133(argc=<register ECX not in topmost frame>, argv=<register ECX not in topmost frame>) [/home/julliard/wine/wine/dlls/qedit/tests/../../../include/wine/test.h:502] in qedit_test (0x0032fed8)
  9 0x60540c38 __wine_spec_exe_entry+0x88(peb=0x7ffdf000) [/home/julliard/wine/wine/dlls/winecrt0/exe_entry.c:36] in qedit_test (0x0032ff08)
  10 0x7b87ade8 start_process+0x98(arg=0x0) [/home/julliard/wine/wine/dlls/kernel32/process.c:904] in kernel32 (0x0032ffe8)
  11 0x60028b47 wine_switch_to_stack+0x17() in libwine.so.1 (0x00000000)

-- 
Alexandre Julliard
julliard at winehq.org


From julliard at winehq.org  Fri Jul 11 08:28:59 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Fri, 11 Jul 2008 15:28:59 +0200
Subject: [PATCH 1/2] user32: Add more tests for SetWindowPos.
In-Reply-To: <558b2f5c0807101409j67c02013m8c060ed01c69fe54@mail.gmail.com>
	(Lei Zhang's message of "Thu, 10 Jul 2008 14:09:43 -0700")
References: <558b2f5c0807101409j67c02013m8c060ed01c69fe54@mail.gmail.com>
Message-ID: <87r6a0lfc4.fsf@wine.dyndns.org>

"Lei Zhang" <thestig at google.com> writes:

> +static UINT sequence_contains(UINT msg)
> +{
> +    static const struct message end_of_sequence = { 0, 0, 0, 0 };
> +    const struct message *actual;
> +    UINT num = 0;
> +
> +    add_message(&end_of_sequence);
> +    actual = sequence;
> +
> +    while (actual->message)
> +    {
> +        if (actual->message == msg) num++;
> +        actual++;
> +    }
> +    return num;
> +}

The fix looks good now, but you should really test the message sequences
instead of just counting a single message. We have already all the
necessary mechanisms for this.

-- 
Alexandre Julliard
julliard at winehq.org


From juan.lang at gmail.com  Fri Jul 11 09:35:36 2008
From: juan.lang at gmail.com (Juan Lang)
Date: Fri, 11 Jul 2008 07:35:36 -0700
Subject: extending setupapi
Message-ID: <3a768c550807110735x3ed70703o9af51591f02c523e@mail.gmail.com>

Hi Pieter, overall your patch looks good, but it has some minor errors
that get in the way:

-    struct DeviceInfo *devInfo = SETUPDI_AllocateDeviceInfo(set, set->cDevices,
-            instanceId, phantom);
+    struct DeviceInfo *devInfo;

     TRACE("%p, %s, %d, %s, %d\n", set, debugstr_guid(guid), devInst,
             debugstr_w(instanceId), phantom);

+    devInfo = SETUPDI_AllocateDeviceInfo(set, set->cDevices,
+            instanceId, phantom);
+
This change is unrelated to the function you're implementing, please
send it in a separate patch if you want this change to go in.

+    TRACE("%s, %s, %p, %08x, %p, %s, %p\n", debugstr_guid(class),
+          debugstr_a(enumstr), parent, flags, deviceset,
+          debugstr_a(machine), reserved);
+
Same here..

-    HKEY interfacesKey = SetupDiOpenClassRegKeyExW(interface, KEY_READ,
-            DIOCR_INTERFACE, NULL, NULL);
+    HKEY interfacesKey;

     TRACE("%p, %s, %s, %08x\n", DeviceInfoSet, debugstr_guid(interface),
             debugstr_w(enumstr), flags);

+    interfacesKey = SetupDiOpenClassRegKeyExW(interface, KEY_READ,
+            DIOCR_INTERFACE, NULL, NULL);
+
and here..

@@ -3549,6 +3558,10 @@ HKEY WINAPI SetupDiOpenClassRegKeyExW(
     LPCWSTR lpKeyName;
     LONG l;

+    TRACE("%s, %08x, %08x, %s, %p\n", debugstr_guid(ClassGuid),
+          samDesired, Flags,
+          debugstr_w(MachineName), Reserved);
+
and here.

+@ stdcall SetupDiOpenDeviceInterfaceRegKey(ptr ptr long long)
 @ stdcall SetupDiOpenDeviceInterfaceA(ptr str long ptr)
-@ stub SetupDiOpenDeviceInterfaceRegKey
In general we alphabetize function names in spec files, so please
don't change the order.

Thanks for your help with Wine.
--Juan


From razielmine at gmail.com  Fri Jul 11 10:11:28 2008
From: razielmine at gmail.com (Ismael Barros)
Date: Fri, 11 Jul 2008 18:11:28 +0300
Subject: [dplayx 02/29] Tests for DirectPlayCreate
In-Reply-To: <1215726360.24017.86.camel@hermes2.karcher.local>
References: <82e274890807090848l3d5d872fmfd6240bc3bd0adaa@mail.gmail.com>
	<1215620481.17834.36.camel@hermes2.karcher.local>
	<82e274890807091015j65322668nff1847b8f52172dc@mail.gmail.com>
	<1215643679.24017.26.camel@hermes2.karcher.local>
	<82e274890807101204v757ab038t88598e8144331ca8@mail.gmail.com>
	<1215726360.24017.86.camel@hermes2.karcher.local>
Message-ID: <82e274890807110811u6941e0b1n44af7c0dd839ee63@mail.gmail.com>

On 7/11/08, Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> wrote:
> Am Donnerstag, den 10.07.2008, 22:04 +0300 schrieb Ismael Barros:
>> I've been checking how this is done in other tests, and it's
>> particularly interesting how they do it in ddraw/tests/refcount.c:81:
>>   hr = IDirectDraw7_CreatePalette(DDraw7, DDPCAPS_ALLOW256 | DDPCAPS_8BIT,
>> Table, &palette, (void *) 0xdeadbeef);
> I don't think this line is good style, but I still like it more than
> your program, as this will definitely crash if the pointer is
> derefenced, while your variant makes the function derefencing the
> pointer accessing uninitialized data.

If it's not that bad, would it be okay to leave it with the deadbeef
solution, with a TODO comment to do it the right way later? Right now
I would like to focus on other functionality (correct networking etc),
and maybe leave that kind of details for after GSoC. From a pragmatic
point of view, I doubt many games make use of theese COM features,
while they still can't properly enumerate service providers.

>> This is the only example in the current code. I could either do it
>> that way (not correct, but simple), or use some IUnknown interface. I
>> tried to get the IUnknown of the classes I have access to, DirectPlay
>> or DirectPlayLobby, but the current implementation is not able to
>> return an interface for IID_IUnknown (it just fails with
>> E_NOINTERFACE),
> Thats bad. Every COM object must return a valid interface pointer for
> IID_IUnknown. And even worse: The IID_IUnknown pointer *has* to be
> stable. So if you do the following (pretend that CreateFooBar(REFIID,
> DWORD, IUnknown*) is a factory function:
>
>   IFooBar *fb1, *fb2;
>   IUnknown *unk1, *unk2;
>   fb1 = CreateFooBar(IID_IFooBar, 0, NULL);
>   IFooBar_QueryInterface(fb1, IID_IUnknown, &unk1);
>   IFooBar_QueryInterface(fb1, IID_IFooBar, (IUnknown*)&fb2);
>   IFooBar_Release(fb1);
>   IFooBar_QueryInterface(fb2, IID_IUnknown, &unk2);
>   IFooBar_Release(fb2);
>   ok(unk1 == unk2, "COM violation: IUnknown interface must be stable!");
>   IUnknown_Release(unk1);
>   IUnknown_Release(unk2);
>
> The COM specification guarantees the test to succeed, independent of
> what type IFooBar has! DirectPlay currently has no permanent COM object,
> but creates a new object on the fly in QueryInterface; this is needed to
> support the different vtables.

Great input, I'll bear it in mind :)


From wine at mkarcher.dialup.fu-berlin.de  Fri Jul 11 10:47:30 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Fri, 11 Jul 2008 17:47:30 +0200
Subject: [dplayx 02/29] Tests for DirectPlayCreate
In-Reply-To: <82e274890807110811u6941e0b1n44af7c0dd839ee63@mail.gmail.com>
References: <82e274890807090848l3d5d872fmfd6240bc3bd0adaa@mail.gmail.com>
	<1215620481.17834.36.camel@hermes2.karcher.local>
	<82e274890807091015j65322668nff1847b8f52172dc@mail.gmail.com>
	<1215643679.24017.26.camel@hermes2.karcher.local>
	<82e274890807101204v757ab038t88598e8144331ca8@mail.gmail.com>
	<1215726360.24017.86.camel@hermes2.karcher.local>
	<82e274890807110811u6941e0b1n44af7c0dd839ee63@mail.gmail.com>
Message-ID: <1215791250.8831.5.camel@hermes2.karcher.local>

Am Freitag, den 11.07.2008, 18:11 +0300 schrieb Ismael Barros:
> On 7/11/08, Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> wrote:
> If it's not that bad, would it be okay to leave it with the deadbeef
> solution, with a TODO comment to do it the right way later? Right now
> I would like to focus on other functionality (correct networking etc),
> and maybe leave that kind of details for after GSoC. From a pragmatic
> point of view, I doubt many games make use of theese COM features,
> while they still can't properly enumerate service providers.
Probably no one ever calls DirectPlayCreate with unkOuter != NULL, as it
is documented to not work. You may well postpone this check, it seems to
be academic. On the other hand, it is quite easy. I have attached a
patch to make the DirectDrawPalette creation test use a real IUnknown.
You can copy that, if you like.

> Great input, I'll bear it in mind :)
That's what wine-devel is for.

Regards,
  Michael Karcher
-------------- next part --------------
A non-text attachment was scrubbed...
Name: iunknown.diff
Type: text/x-patch
Size: 1967 bytes
Desc: not available
Url : http://www.winehq.org/pipermail/wine-devel/attachments/20080711/c621ba02/attachment.bin 

From scott at open-vote.org  Fri Jul 11 14:20:38 2008
From: scott at open-vote.org (Scott Ritchie)
Date: Fri, 11 Jul 2008 12:20:38 -0700
Subject: Installing Wine's fonts system-wide: which ones are worthwhile?
Message-ID: <4877B286.5010405@open-vote.org>

After being partially inspired by Ubuntu brainstorm, it occurred to me
that some of our fonts would be useful everywhere, but the current Wine
package keeps its fonts to itself.  Tahoma, for instance, could be
useful if someone tries to open a Word document in Open Office.

The solution varies across distributions, however in Ubuntu and Debian's
case it means naming the fonts specifically and creating a hints file.

So, which ones should be installed this way?

Thanks,
Scott Ritchie


From bunglehead at gmail.com  Fri Jul 11 15:49:37 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sat, 12 Jul 2008 00:49:37 +0400
Subject: [2/3] appwiz.cpl: Read uninstallable applications from registry, 
	add to list.
In-Reply-To: <4877C6A3.4070906@owenrudge.net>
References: <4877C6A3.4070906@owenrudge.net>
Message-ID: <4877C761.7000001@gmail.com>

Owen Rudge wrote:

+    while (iter)
+    {
+        if (iter->title)
+            HeapFree(hHeap, 0, iter->title);
+
+        if (iter->path)
+            HeapFree(hHeap, 0, iter->path);
+
+        if (iter->icon)
+            HeapFree(hHeap, 0, iter->icon);
+
+        if (iter->publisher)
+            HeapFree(hHeap, 0, iter->icon);
+
+        if (iter->version)
+            HeapFree(hHeap, 0, iter->icon);
+
+        next = iter->next;
+        HeapFree(hHeap, 0, iter);
+        iter = next;
+    }

Seems to be a copy-paste



From owen at owenrudge.net  Fri Jul 11 15:55:05 2008
From: owen at owenrudge.net (Owen Rudge)
Date: Fri, 11 Jul 2008 21:55:05 +0100
Subject: [2/3] appwiz.cpl: Read uninstallable applications from registry,
	add to list.
References: <4877C6A3.4070906@owenrudge.net> <4877C761.7000001@gmail.com>
Message-ID: <CCCE516ADBD4451DB9F77EBEC00A9CC5@lan.owenrudge.net>

> Seems to be a copy-paste

Well spotted, apparently both my mentor and I managed to miss this! Shall 
get that sorted now...

-- 
Owen Rudge
http://www.owenrudge.net/ 



From scott at open-vote.org  Fri Jul 11 17:42:42 2008
From: scott at open-vote.org (Scott Ritchie)
Date: Fri, 11 Jul 2008 15:42:42 -0700
Subject: Installing Wine's fonts system-wide: which ones are worthwhile?
In-Reply-To: <4877C998.4090100@yahoo.co.uk>
References: <4877B286.5010405@open-vote.org> <4877C998.4090100@yahoo.co.uk>
Message-ID: <4877E1E2.1080002@open-vote.org>

Hin-Tak Leung wrote:
> Scott Ritchie wrote:
>> After being partially inspired by Ubuntu brainstorm, it occurred to me
>> that some of our fonts would be useful everywhere, but the current Wine
>> package keeps its fonts to itself.  Tahoma, for instance, could be
>> useful if someone tries to open a Word document in Open Office.
>>
>> The solution varies across distributions, however in Ubuntu and Debian's
>> case it means naming the fonts specifically and creating a hints file.
>>
>> So, which ones should be installed this way?
> 
> It used to make some difference, but lately with the Liberation fonts,
> it doesn't any more.
> 
> If you insist, just dropping the fonts into ${HOME}/.fonts for a per-user
> basis (all applications of this user), or /usr/share/fonts or
> thereabouts for
> truly system-wise installation. I don't think you need to name the fonts
> specially or doing anything with hints or whatever. Sym-links also work,
> I believe.
> 
> 
> 
Liberation fonts doesn't include Tahoma, however.  On Ubuntu, the
liberation fonts also not installed by default.  Which brings up a
related question: should the Wine package depend on them?  It seems like
having liberation fonts available would be helpful to Wine, and
therefore they should be installed when Wine is.

On Debian systems, font packages are also supposed to have special
configuration files so they can be handled properly by the font manager.
 I'll write these, but the point is it's not quite as simple as changing
the install path to do it correctly.



Regardless, there's still the question of which Wine fonts to do this
with.  Just Tahoma?  Or more?

Thanks,
Scott Ritchie


From hintak_leung at yahoo.co.uk  Fri Jul 11 15:59:04 2008
From: hintak_leung at yahoo.co.uk (Hin-Tak Leung)
Date: Fri, 11 Jul 2008 21:59:04 +0100
Subject: Installing Wine's fonts system-wide: which ones are worthwhile?
In-Reply-To: <4877B286.5010405@open-vote.org>
References: <4877B286.5010405@open-vote.org>
Message-ID: <4877C998.4090100@yahoo.co.uk>

Scott Ritchie wrote:
> After being partially inspired by Ubuntu brainstorm, it occurred to me
> that some of our fonts would be useful everywhere, but the current Wine
> package keeps its fonts to itself.  Tahoma, for instance, could be
> useful if someone tries to open a Word document in Open Office.
> 
> The solution varies across distributions, however in Ubuntu and Debian's
> case it means naming the fonts specifically and creating a hints file.
> 
> So, which ones should be installed this way?

It used to make some difference, but lately with the Liberation fonts, it 
doesn't any more.

If you insist, just dropping the fonts into ${HOME}/.fonts for a per-user
basis (all applications of this user), or /usr/share/fonts or thereabouts for
truly system-wise installation. I don't think you need to name the fonts
specially or doing anything with hints or whatever. Sym-links also work, I believe.





From truiken at gmail.com  Fri Jul 11 20:28:16 2008
From: truiken at gmail.com (James Hawkins)
Date: Fri, 11 Jul 2008 20:28:16 -0500
Subject: failing gdiplus:font tests
Message-ID: <22821af30807111828o73710740oa7ed757a0d0f6188@mail.gmail.com>

Hi Adam,

Tests you added in the following commit rely on the Arial font being
installed, which is not necessarily the case.  You can check out [1]
for the test output of a system that does not have the Arial font.
You should either test a font that is guaranteed to be installed
(Tahoma?) or use some API to enumerate the available fonts and test
one of those.

commit fe3d38d1a0e19e503048f8338f8f26cd0668d364
Author: Adam Petaccia <adam at tpetaccia.com>
Date:   Sat Jun 21 13:02:56 2008 -0400

    gdiplus: Tests for new font functions.

[1] http://test.winehq.org/data/8fd6f0e26ae28f2ba4938e2fbcc4851f47baa53c/wine_xp_as-fed9-lap/gdiplus:font.html

Thanks,
James Hawkins


From truiken at gmail.com  Fri Jul 11 20:31:53 2008
From: truiken at gmail.com (James Hawkins)
Date: Fri, 11 Jul 2008 20:31:53 -0500
Subject: failing gdiplus:matrix tests
Message-ID: <22821af30807111831o6ff21a74j54b1451a78092741@mail.gmail.com>

Hi Nikolay,

Tests you added in the following commit fail on all platforms.  Did
you run the tests in Windows?

commit d7999a008be5d7e95fcd86019adc79b0359ae8d4
Author: Nikolay Sivov <bunglehead at gmail.com>
Date:   Tue Jul 8 01:32:36 2008 +0400

    gdiplus: GdipInvertMatrix implementation with tests.

-- 
James Hawkins


From truiken at gmail.com  Fri Jul 11 20:34:07 2008
From: truiken at gmail.com (James Hawkins)
Date: Fri, 11 Jul 2008 20:34:07 -0500
Subject: failing gdiplus:pathiterator tests
Message-ID: <22821af30807111834m1a01a4feya29dced91732e5b@mail.gmail.com>

Hi Nikolay,

Tests you added in the following two commits fail on all platforms.
Did you run the tests in Windows?  Please do not send any more test
patches before testing on Windows first.

commit d93ad02216d28851b2be07d8ee89671a7354761f
Author: Nikolay Sivov <bunglehead at gmail.com>
Date:   Thu Jul 3 10:42:13 2008 +0400

    gdiplus: Construction/desctruction tests for PathIterator.


commit 0a9937c534823df161f0b911dd410a508ea4a148
Author: Nikolay Sivov <bunglehead at gmail.com>
Date:   Sat Jul 5 13:02:36 2008 +0400

    gdiplus: GdipPathIterNextMarker implementation with tests.

-- 
James Hawkins


From austin.lund at gmail.com  Fri Jul 11 21:04:32 2008
From: austin.lund at gmail.com (Austin Lund)
Date: Sat, 12 Jul 2008 12:04:32 +1000
Subject: riched20: Added windowless text services tests (resent)
In-Reply-To: <bcab73240807061939u45300f39xdb0beeedb5ded3be@mail.gmail.com>
References: <bcab73240807061939u45300f39xdb0beeedb5ded3be@mail.gmail.com>
Message-ID: <bcab73240807111904m3dcd1f88r7ed0f48f50d79edd@mail.gmail.com>

I haven't heard anything about this patch.

I know it is large, but the function headers and wrappers are necessary.

Is there anything in particular wrong with it?

Is there anything that could make it more obviously correct?

2008/7/7 Austin Lund <austin.lund at gmail.com>:
> Changes from previously sent patch:
>
> Removed typeof() from DEFINE_THISCALL_WRAPPER.
> Simplified the ITextHost QueryInterface function.
> Removed code that allocated memory for the IUnknown interface.
>


From truiken at gmail.com  Sat Jul 12 02:07:15 2008
From: truiken at gmail.com (James Hawkins)
Date: Sat, 12 Jul 2008 02:07:15 -0500
Subject: failing gdiplus:matrix tests
In-Reply-To: <48785628.9060601@gmail.com>
References: <22821af30807111831o6ff21a74j54b1451a78092741@mail.gmail.com>
	<48785628.9060601@gmail.com>
Message-ID: <22821af30807120007h2284c95r1ba9651ac8ff4fa9@mail.gmail.com>

On Sat, Jul 12, 2008 at 1:58 AM, Nikolay Sivov <bunglehead at gmail.com> wrote:
> James Hawkins wrote:
>>
>> Hi Nikolay,
>>
>> Tests you added in the following commit fail on all platforms.  Did
>> you run the tests in Windows?
>>
>> commit d7999a008be5d7e95fcd86019adc79b0359ae8d4
>> Author: Nikolay Sivov <bunglehead at gmail.com>
>> Date:   Tue Jul 8 01:32:36 2008 +0400
>>
>>    gdiplus: GdipInvertMatrix implementation with tests.
>>
>
> No, I never tried to run the test binary on Windows. I always try get test
> results
> trough my own test application and use these results in Wine test.
> Of course I will fix this, could you explain how to build tests on Windows?
> I never did such thing.
>

http://wiki.winehq.org/CompilingDLLsUsingMingw

'make crosstest' works if you have a patched mingw.  You can get the patches at:

http://www.astro.gla.ac.uk/users/paulm/Cross/

If you end up not being able to build the tests, ask someone on
wine-devel to build them for you.

-- 
James Hawkins


From truiken at gmail.com  Sat Jul 12 02:08:12 2008
From: truiken at gmail.com (James Hawkins)
Date: Sat, 12 Jul 2008 02:08:12 -0500
Subject: failing gdiplus:matrix tests
In-Reply-To: <48785628.9060601@gmail.com>
References: <22821af30807111831o6ff21a74j54b1451a78092741@mail.gmail.com>
	<48785628.9060601@gmail.com>
Message-ID: <22821af30807120008g76d9f7c4k96e863dad82e5b77@mail.gmail.com>

On Sat, Jul 12, 2008 at 1:58 AM, Nikolay Sivov <bunglehead at gmail.com> wrote:
> James Hawkins wrote:
>>
>> Hi Nikolay,
>>
>> Tests you added in the following commit fail on all platforms.  Did
>> you run the tests in Windows?
>>
>> commit d7999a008be5d7e95fcd86019adc79b0359ae8d4
>> Author: Nikolay Sivov <bunglehead at gmail.com>
>> Date:   Tue Jul 8 01:32:36 2008 +0400
>>
>>    gdiplus: GdipInvertMatrix implementation with tests.
>>
>
> No, I never tried to run the test binary on Windows. I always try get test
> results
> trough my own test application and use these results in Wine test.
> Of course I will fix this, could you explain how to build tests on Windows?
> I never did such thing.
>

http://wiki.winehq.org/CompilingDLLsUsingMingw

'make crosstest' works if you have a patched mingw.  You can get the patches at:

http://www.astro.gla.ac.uk/users/paulm/Cross/

If you end up not being able to build the tests, ask someone on
wine-devel to build them for you.

-- 
James Hawkins


From bunglehead at gmail.com  Sat Jul 12 02:09:49 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sat, 12 Jul 2008 11:09:49 +0400
Subject: failing gdiplus:matrix tests
In-Reply-To: <22821af30807120007h2284c95r1ba9651ac8ff4fa9@mail.gmail.com>
References: <22821af30807111831o6ff21a74j54b1451a78092741@mail.gmail.com>	
	<48785628.9060601@gmail.com>
	<22821af30807120007h2284c95r1ba9651ac8ff4fa9@mail.gmail.com>
Message-ID: <487858BD.6000206@gmail.com>

James Hawkins wrote:
> On Sat, Jul 12, 2008 at 1:58 AM, Nikolay Sivov <bunglehead at gmail.com> wrote:
>   
>> James Hawkins wrote:
>>     
>>> Hi Nikolay,
>>>
>>> Tests you added in the following commit fail on all platforms.  Did
>>> you run the tests in Windows?
>>>
>>> commit d7999a008be5d7e95fcd86019adc79b0359ae8d4
>>> Author: Nikolay Sivov <bunglehead at gmail.com>
>>> Date:   Tue Jul 8 01:32:36 2008 +0400
>>>
>>>    gdiplus: GdipInvertMatrix implementation with tests.
>>>
>>>       
>> No, I never tried to run the test binary on Windows. I always try get test
>> results
>> trough my own test application and use these results in Wine test.
>> Of course I will fix this, could you explain how to build tests on Windows?
>> I never did such thing.
>>
>>     
>
> http://wiki.winehq.org/CompilingDLLsUsingMingw
>
> 'make crosstest' works if you have a patched mingw.  You can get the patches at:
>
> http://www.astro.gla.ac.uk/users/paulm/Cross/
>
> If you end up not being able to build the tests, ask someone on
> wine-devel to build them for you.
>   
Ok, I'll try this.


From Stefan.Leichter at camline.com  Sat Jul 12 02:30:11 2008
From: Stefan.Leichter at camline.com (Stefan Leichter)
Date: Sat, 12 Jul 2008 09:30:11 +0200
Subject: [winehq] broken link
Message-ID: <200807120930.11807.Stefan.Leichter@camline.com>

Hi,

when i click on the "Development" link in the "Development" section i get an 
404 error. Can someone please fix this.

Thanks
Stefan


From bunglehead at gmail.com  Sat Jul 12 02:34:45 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sat, 12 Jul 2008 11:34:45 +0400
Subject: failing gdiplus:matrix tests
In-Reply-To: <22821af30807120007h2284c95r1ba9651ac8ff4fa9@mail.gmail.com>
References: <22821af30807111831o6ff21a74j54b1451a78092741@mail.gmail.com>	
	<48785628.9060601@gmail.com>
	<22821af30807120007h2284c95r1ba9651ac8ff4fa9@mail.gmail.com>
Message-ID: <48785E95.7070901@gmail.com>

James Hawkins wrote:
> On Sat, Jul 12, 2008 at 1:58 AM, Nikolay Sivov <bunglehead at gmail.com> wrote:
>   
>> James Hawkins wrote:
>>     
>>> Hi Nikolay,
>>>
>>> Tests you added in the following commit fail on all platforms.  Did
>>> you run the tests in Windows?
>>>
>>> commit d7999a008be5d7e95fcd86019adc79b0359ae8d4
>>> Author: Nikolay Sivov <bunglehead at gmail.com>
>>> Date:   Tue Jul 8 01:32:36 2008 +0400
>>>
>>>    gdiplus: GdipInvertMatrix implementation with tests.
>>>
>>>       
>> No, I never tried to run the test binary on Windows. I always try get test
>> results
>> trough my own test application and use these results in Wine test.
>> Of course I will fix this, could you explain how to build tests on Windows?
>> I never did such thing.
>>
>>     
>
> http://wiki.winehq.org/CompilingDLLsUsingMingw
>
> 'make crosstest' works if you have a patched mingw.  You can get the patches at:
>
> http://www.astro.gla.ac.uk/users/paulm/Cross/
>
> If you end up not being able to build the tests, ask someone on
> wine-devel to build them for you.
>   
As I see we need patch only w32api package. Could this be done after 
installation of all Debian packages?


From lats at yless4u.com.au  Sat Jul 12 03:37:01 2008
From: lats at yless4u.com.au (Jeff Latimer)
Date: Sat, 12 Jul 2008 18:37:01 +1000
Subject: [winehq] broken link
In-Reply-To: <200807120930.11807.Stefan.Leichter@camline.com>
References: <200807120930.11807.Stefan.Leichter@camline.com>
Message-ID: <48786D2D.7000301@yless4u.com.au>

Stefan Leichter wrote:
> when i click on the "Development" link in the "Development" section i get an 
> 404 error. Can someone please fix this.
>   
Its been in bugzilla for a while,  [Bug 13898] Busted Development link. 


From julliard at winehq.org  Sat Jul 12 04:24:50 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Sat, 12 Jul 2008 11:24:50 +0200
Subject: failing gdiplus:matrix tests
In-Reply-To: <22821af30807120007h2284c95r1ba9651ac8ff4fa9@mail.gmail.com>
	(James Hawkins's message of "Sat, 12 Jul 2008 02:07:15 -0500")
References: <22821af30807111831o6ff21a74j54b1451a78092741@mail.gmail.com>
	<48785628.9060601@gmail.com>
	<22821af30807120007h2284c95r1ba9651ac8ff4fa9@mail.gmail.com>
Message-ID: <87bq13lajh.fsf@wine.dyndns.org>

"James Hawkins" <truiken at gmail.com> writes:

> 'make crosstest' works if you have a patched mingw.  You can get the patches at:
>
> http://www.astro.gla.ac.uk/users/paulm/Cross/

You no longer need a patched mingw, crosstest uses the Wine import libs now.

-- 
Alexandre Julliard
julliard at winehq.org


From bunglehead at gmail.com  Sat Jul 12 04:28:16 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sat, 12 Jul 2008 13:28:16 +0400
Subject: failing gdiplus:matrix tests
In-Reply-To: <87bq13lajh.fsf@wine.dyndns.org>
References: <22821af30807111831o6ff21a74j54b1451a78092741@mail.gmail.com>	<48785628.9060601@gmail.com>	<22821af30807120007h2284c95r1ba9651ac8ff4fa9@mail.gmail.com>
	<87bq13lajh.fsf@wine.dyndns.org>
Message-ID: <48787930.5070806@gmail.com>

Alexandre Julliard wrote:
> "James Hawkins" <truiken at gmail.com> writes:
>
>   
>> 'make crosstest' works if you have a patched mingw.  You can get the patches at:
>>
>> http://www.astro.gla.ac.uk/users/paulm/Cross/
>>     
>
> You no longer need a patched mingw, crosstest uses the Wine import libs now.
So this page http://wiki.winehq.org/CompilingDLLsUsingMingw will be 
enough to build crosstest binaries?


From julliard at winehq.org  Sat Jul 12 05:42:50 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Sat, 12 Jul 2008 12:42:50 +0200
Subject: failing gdiplus:matrix tests
In-Reply-To: <48787930.5070806@gmail.com> (Nikolay Sivov's message of "Sat, 12
	Jul 2008 13:28:16 +0400")
References: <22821af30807111831o6ff21a74j54b1451a78092741@mail.gmail.com>
	<48785628.9060601@gmail.com>
	<22821af30807120007h2284c95r1ba9651ac8ff4fa9@mail.gmail.com>
	<87bq13lajh.fsf@wine.dyndns.org> <48787930.5070806@gmail.com>
Message-ID: <87y747jsd1.fsf@wine.dyndns.org>

Nikolay Sivov <bunglehead at gmail.com> writes:

> Alexandre Julliard wrote:
>> You no longer need a patched mingw, crosstest uses the Wine import libs now.
> So this page http://wiki.winehq.org/CompilingDLLsUsingMingw will be
> enough to build crosstest binaries?

You don't need any of that, just do a 'make crosstest' in the normal
tree.

-- 
Alexandre Julliard
julliard at winehq.org


From bunglehead at gmail.com  Sat Jul 12 09:13:24 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sat, 12 Jul 2008 18:13:24 +0400
Subject: Question about crosstest build
Message-ID: <4878BC04.4040200@gmail.com>

Hi.

Could someone explain me in details how could I build crosstest binaries 
on Linux (Debian) to run them on WinXP?
Now I've done the following:
    - clean up my wine tree with 'make clean';
    - installed mingw32 package
    - use configure parameters from 
http://wiki.winehq.org/CompilingDLLsUsingMingw
    - use 'make crosstest' from tree top.

After building wine tools I've got:

make[1]: Entering directory `/home/mrlarch/wine/dlls'
make[2]: Entering directory `/home/mrlarch/wine/dlls/d3dx9_36'
../../tools/winebuild/winebuild -w --def -o d3dx9_36.def --export 
./d3dx9_36.spec
false -k -l libd3dx9.a -d d3dx9_36.def
make[2]: *** [libd3dx9.a] Error 1
make[2]: Leaving directory `/home/mrlarch/wine/dlls/d3dx9_36'
make[1]: *** [d3dx9_36/libd3dx9.a] Error 2
make[1]: Leaving directory `/home/mrlarch/wine/dlls'
make: *** [dlls/__crosstest__] Error 2

What should I do with that?




From wine at mkarcher.dialup.fu-berlin.de  Sat Jul 12 09:20:56 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sat, 12 Jul 2008 16:20:56 +0200
Subject: Question about crosstest build
In-Reply-To: <4878BC04.4040200@gmail.com>
References: <4878BC04.4040200@gmail.com>
Message-ID: <1215872456.8831.19.camel@hermes2.karcher.local>

Am Samstag, den 12.07.2008, 18:13 +0400 schrieb Nikolay Sivov:
> Hi.
> 
> Could someone explain me in details how could I build crosstest binaries 
> on Linux (Debian) to run them on WinXP?
> Now I've done the following:
>     - clean up my wine tree with 'make clean';
>     - installed mingw32 package
>     - use configure parameters from 
> http://wiki.winehq.org/CompilingDLLsUsingMingw
>     - use 'make crosstest' from tree top.
> 
> After building wine tools I've got:
> 
> make[1]: Entering directory `/home/mrlarch/wine/dlls'
> make[2]: Entering directory `/home/mrlarch/wine/dlls/d3dx9_36'
> ../../tools/winebuild/winebuild -w --def -o d3dx9_36.def --export 
> ./d3dx9_36.spec
> false -k -l libd3dx9.a -d d3dx9_36.def
[...]
> What should I do with that?

Read your configure log. mingw was obviously not found, and false (a
command that always fails) was written instead to the makefile.

Regards,
  Michael Karcher



From bunglehead at gmail.com  Sat Jul 12 09:32:32 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sat, 12 Jul 2008 18:32:32 +0400
Subject: Question about crosstest build
In-Reply-To: <1215872456.8831.19.camel@hermes2.karcher.local>
References: <4878BC04.4040200@gmail.com>
	<1215872456.8831.19.camel@hermes2.karcher.local>
Message-ID: <4878C080.8060704@gmail.com>

Michael Karcher wrote:
> Am Samstag, den 12.07.2008, 18:13 +0400 schrieb Nikolay Sivov:
>   
>> Hi.
>>
>> Could someone explain me in details how could I build crosstest binaries 
>> on Linux (Debian) to run them on WinXP?
>> Now I've done the following:
>>     - clean up my wine tree with 'make clean';
>>     - installed mingw32 package
>>     - use configure parameters from 
>> http://wiki.winehq.org/CompilingDLLsUsingMingw
>>     - use 'make crosstest' from tree top.
>>
>> After building wine tools I've got:
>>
>> make[1]: Entering directory `/home/mrlarch/wine/dlls'
>> make[2]: Entering directory `/home/mrlarch/wine/dlls/d3dx9_36'
>> ../../tools/winebuild/winebuild -w --def -o d3dx9_36.def --export 
>> ./d3dx9_36.spec
>> false -k -l libd3dx9.a -d d3dx9_36.def
>>     
> [...]
>   
>> What should I do with that?
>>     
>
> Read your configure log. mingw was obviously not found, and false (a
> command that always fails) was written instead to the makefile.
>
> Regards,
>   Michael Karcher
>
>   
Thanks, it works now.


From fgouget at free.fr  Sat Jul 12 11:22:30 2008
From: fgouget at free.fr (Francois Gouget)
Date: Sat, 12 Jul 2008 18:22:30 +0200 (CEST)
Subject: Installing Wine's fonts system-wide: which ones are
 worthwhile?
In-Reply-To: <4877E1E2.1080002@open-vote.org>
References: <4877B286.5010405@open-vote.org> <4877C998.4090100@yahoo.co.uk>
	<4877E1E2.1080002@open-vote.org>
Message-ID: <alpine.DEB.1.10.0807121820530.16707@amboise.dolphin>

On Fri, 11 Jul 2008, Scott Ritchie wrote:
[...]
> On Ubuntu, the
> liberation fonts also not installed by default.  Which brings up a
> related question: should the Wine package depend on them?  It seems like
> having liberation fonts available would be helpful to Wine, and
> therefore they should be installed when Wine is.

Depend or Recommend: I don't think so. Maybe suggest though.


-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                            $live{free} || die "";


From fgouget at free.fr  Sat Jul 12 11:33:52 2008
From: fgouget at free.fr (Francois Gouget)
Date: Sat, 12 Jul 2008 18:33:52 +0200 (CEST)
Subject: winhttp: tests/winhttp.c[new]: Add test for WinHttpOpenRequest
In-Reply-To: <4876869F.1060301@zacbrown.org>
References: <487685A4.8060605@zacbrown.org> <4876869F.1060301@zacbrown.org>
Message-ID: <alpine.DEB.1.10.0807121832360.16707@amboise.dolphin>

On Thu, 10 Jul 2008, Zac Brown wrote:

> Zac Brown wrote:
> > Add test for WinHttpOpenRequest. This test is modeled after 
> > wininet/tests/http.c's InternetOpenRequest_test function.
> > 
> > This is the first of many tests for getting Bug 14381 
> > (http://bugs.winehq.org/show_bug.cgi?id=14381) fixed with regard to 
> > WinHTTP.
[...]
> As a note this passes on Win XP as well as Win 2003.

In other notes you may want to be a bit more selective when quoting past 
emails. This will make your emails much more readable. Really!

-- 
Francois Gouget <fgouget at free.fr>              http://fgouget.free.fr/
                              145 = 1! + 4! + 5!


From wine at mkarcher.dialup.fu-berlin.de  Sat Jul 12 12:07:44 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sat, 12 Jul 2008 19:07:44 +0200
Subject: [dplayx] New library dpwsockx, needed by dplayx
In-Reply-To: <82e274890807120846g5c43858dp74ca03f68107ca47@mail.gmail.com>
References: <82e274890807120733r7290a579qa39cebb991c618e@mail.gmail.com>
	<82e274890807120846g5c43858dp74ca03f68107ca47@mail.gmail.com>
Message-ID: <1215882464.8831.25.camel@hermes2.karcher.local>

Am Samstag, den 12.07.2008, 18:46 +0300 schrieb Ismael Barros:
> I'm sorry, that patch lacked a header file, this is the fixed patch.

I would put the dplaysp.h file into include, not dlls/dpwsockx. It
contains definitions for all DirectPlay service providers, so it might
be useful if a modem provider or a direct serial connection provider
will be implemented. Is there a reason not to do so?

Regards,
  Michael Karcher



From truiken at gmail.com  Sat Jul 12 12:24:39 2008
From: truiken at gmail.com (James Hawkins)
Date: Sat, 12 Jul 2008 12:24:39 -0500
Subject: [2/3] gdiplus: fix GdipPathIterNextMarker behaviour on path
	without markers. fix tests.
In-Reply-To: <1215881764.8936.7.camel@debian.localdomain>
References: <1215881764.8936.7.camel@debian.localdomain>
Message-ID: <22821af30807121024o5810cf33ka81e7393767d2d14@mail.gmail.com>

On Sat, Jul 12, 2008 at 11:56 AM, Nikolay Sivov <bunglehead at gmail.com> wrote:
> Changelog:
>    -  Fix GdipPathIterNextMarker behaviour on path without markers. Make tests pass on native.
>
> ---
>  dlls/gdiplus/pathiterator.c       |    3 ++-
>  dlls/gdiplus/tests/pathiterator.c |    6 +++---
>  2 files changed, 5 insertions(+), 4 deletions(-)
>
> diff --git a/dlls/gdiplus/pathiterator.c b/dlls/gdiplus/pathiterator.c
> index 55b0782..3d3b1dc 100644
> --- a/dlls/gdiplus/pathiterator.c
> +++ b/dlls/gdiplus/pathiterator.c
> @@ -140,7 +140,8 @@ GpStatus WINGDIPAPI GdipPathIterNextMarker(GpPathIterator* iterator, INT *result
>     /* first call could start with second point as all subsequent, cause
>        path couldn't contain only one */
>     for(i = iterator->marker_pos + 1; i < iterator->pathdata.Count; i++){
> -        if(iterator->pathdata.Types[i] & PathPointTypePathMarker){
> +        if((iterator->pathdata.Types[i] & PathPointTypePathMarker) ||
> +           (i == iterator->pathdata.Count - 1)){
>             *startIndex = iterator->marker_pos;
>             if(iterator->marker_pos > 0) (*startIndex)++;
>             *endIndex   = iterator->marker_pos = i;
> diff --git a/dlls/gdiplus/tests/pathiterator.c b/dlls/gdiplus/tests/pathiterator.c
> index 071c1d5..6498bb3 100644
> --- a/dlls/gdiplus/tests/pathiterator.c
> +++ b/dlls/gdiplus/tests/pathiterator.c
> @@ -114,7 +114,7 @@ static void test_nextmarker(void)
>     GdipCreatePathIter(&iter, path);
>     stat = GdipPathIterNextMarker(iter, &result, &start, &end);
>     expect(Ok, stat);
> -    expect(0, result);
> +    if(stat == Ok) expect(TRUE, (result == 4) && (start == 0) && (end == 3));

Why are you checking if stat == Ok?  You're linking what should be
separate tests together.  You also need to put each of these checks
into separate tests.  If the test fails, you have no idea (without
debugging further) which one of those checks fails.  They're called
unit tests for a reason.

>     GdipDeletePathIter(iter);
>
>     /* one marker */
> @@ -125,7 +125,7 @@ static void test_nextmarker(void)
>     expect(TRUE, (start == 0) && (end == 3) && (result == 4));
>     stat = GdipPathIterNextMarker(iter, &result, &start, &end);
>     expect(Ok, stat);
> -    expect(0, result);
> +    if(stat == Ok) expect(0, result);

Same thing as above.

>     GdipDeletePathIter(iter);
>
>     /* two markers */
> @@ -140,7 +140,7 @@ static void test_nextmarker(void)
>     expect(TRUE, (start == 4) && (end == 5) && (result == 2));
>     stat = GdipPathIterNextMarker(iter, &result, &start, &end);
>     expect(Ok, stat);
> -    expect(0, result);
> +    if(stat == Ok) expect(0, result);

Same.

-- 
James Hawkins


From razielmine at gmail.com  Sat Jul 12 12:25:10 2008
From: razielmine at gmail.com (Ismael Barros)
Date: Sat, 12 Jul 2008 20:25:10 +0300
Subject: [dplayx] New library dpwsockx, needed by dplayx
In-Reply-To: <1215882464.8831.25.camel@hermes2.karcher.local>
References: <82e274890807120733r7290a579qa39cebb991c618e@mail.gmail.com>
	<82e274890807120846g5c43858dp74ca03f68107ca47@mail.gmail.com>
	<1215882464.8831.25.camel@hermes2.karcher.local>
Message-ID: <82e274890807121025w640b23d0s11a3c8ace3b3e9d3@mail.gmail.com>

Nop, actually I also thought the best solution would be to move that
file to include, because in fact it's just copied from dlls/dplayx,
but AFAIK wine doesn't want to put in include files that are not
originally present in Windows.

However, if it's okay I'll move it, much better. I will also have to
implement a stub modem provider, so I would have to copy that
dplaysp.h again to dlls/dpmodemx, and any change in those definitions
would have to be done three times...

On 7/12/08, Michael Karcher <wine at mkarcher.dialup.fu-berlin.de> wrote:
> Am Samstag, den 12.07.2008, 18:46 +0300 schrieb Ismael Barros:
>> I'm sorry, that patch lacked a header file, this is the fixed patch.
>
> I would put the dplaysp.h file into include, not dlls/dpwsockx. It
> contains definitions for all DirectPlay service providers, so it might
> be useful if a modem provider or a direct serial connection provider
> will be implemented. Is there a reason not to do so?
>
> Regards,
>   Michael Karcher
>
>


-- 
...yet even then, we ran like the wind, whilst our laughter echoed,
under cerulean skies...


From bunglehead at gmail.com  Sat Jul 12 12:37:27 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sat, 12 Jul 2008 21:37:27 +0400
Subject: [2/3] gdiplus: fix GdipPathIterNextMarker behaviour on path
	without markers. fix tests.
In-Reply-To: <22821af30807121024o5810cf33ka81e7393767d2d14@mail.gmail.com>
References: <1215881764.8936.7.camel@debian.localdomain>
	<22821af30807121024o5810cf33ka81e7393767d2d14@mail.gmail.com>
Message-ID: <4878EBD7.2060808@gmail.com>

James Hawkins wrote:
> On Sat, Jul 12, 2008 at 11:56 AM, Nikolay Sivov <bunglehead at gmail.com> wrote:
>   
>> Changelog:
>>    -  Fix GdipPathIterNextMarker behaviour on path without markers. Make tests pass on native.
>>
>> ---
>>  dlls/gdiplus/pathiterator.c       |    3 ++-
>>  dlls/gdiplus/tests/pathiterator.c |    6 +++---
>>  2 files changed, 5 insertions(+), 4 deletions(-)
>>
>> diff --git a/dlls/gdiplus/pathiterator.c b/dlls/gdiplus/pathiterator.c
>> index 55b0782..3d3b1dc 100644
>> --- a/dlls/gdiplus/pathiterator.c
>> +++ b/dlls/gdiplus/pathiterator.c
>> @@ -140,7 +140,8 @@ GpStatus WINGDIPAPI GdipPathIterNextMarker(GpPathIterator* iterator, INT *result
>>     /* first call could start with second point as all subsequent, cause
>>        path couldn't contain only one */
>>     for(i = iterator->marker_pos + 1; i < iterator->pathdata.Count; i++){
>> -        if(iterator->pathdata.Types[i] & PathPointTypePathMarker){
>> +        if((iterator->pathdata.Types[i] & PathPointTypePathMarker) ||
>> +           (i == iterator->pathdata.Count - 1)){
>>             *startIndex = iterator->marker_pos;
>>             if(iterator->marker_pos > 0) (*startIndex)++;
>>             *endIndex   = iterator->marker_pos = i;
>> diff --git a/dlls/gdiplus/tests/pathiterator.c b/dlls/gdiplus/tests/pathiterator.c
>> index 071c1d5..6498bb3 100644
>> --- a/dlls/gdiplus/tests/pathiterator.c
>> +++ b/dlls/gdiplus/tests/pathiterator.c
>> @@ -114,7 +114,7 @@ static void test_nextmarker(void)
>>     GdipCreatePathIter(&iter, path);
>>     stat = GdipPathIterNextMarker(iter, &result, &start, &end);
>>     expect(Ok, stat);
>> -    expect(0, result);
>> +    if(stat == Ok) expect(TRUE, (result == 4) && (start == 0) && (end == 3));
>>     
>
> Why are you checking if stat == Ok?  You're linking what should be
> separate tests together.  You also need to put each of these checks
> into separate tests.  If the test fails, you have no idea (without
> debugging further) which one of those checks fails.  They're called
> unit tests for a reason.
>   
I don't think so. If the call fails testing return value doesn't make 
any sense. In this case 'result' is uninitialized and remains 
uninitialized after a call if it fails (here I mean a native too). So 
why should we check something which has unpredictable value?
By the way first time I saw this here 
8fd6f0e26ae28f2ba4938e2fbcc4851f47baa53c..
 


From truiken at gmail.com  Sat Jul 12 12:40:01 2008
From: truiken at gmail.com (James Hawkins)
Date: Sat, 12 Jul 2008 12:40:01 -0500
Subject: [dplayx] New library dpwsockx, needed by dplayx
In-Reply-To: <82e274890807121025w640b23d0s11a3c8ace3b3e9d3@mail.gmail.com>
References: <82e274890807120733r7290a579qa39cebb991c618e@mail.gmail.com>
	<82e274890807120846g5c43858dp74ca03f68107ca47@mail.gmail.com>
	<1215882464.8831.25.camel@hermes2.karcher.local>
	<82e274890807121025w640b23d0s11a3c8ace3b3e9d3@mail.gmail.com>
Message-ID: <22821af30807121040u5f8a036fl268ac06e718b4c74@mail.gmail.com>

On Sat, Jul 12, 2008 at 12:25 PM, Ismael Barros <razielmine at gmail.com> wrote:
> Nop, actually I also thought the best solution would be to move that
> file to include, because in fact it's just copied from dlls/dplayx,
> but AFAIK wine doesn't want to put in include files that are not
> originally present in Windows.
>
> However, if it's okay I'll move it, much better. I will also have to
> implement a stub modem provider, so I would have to copy that
> dplaysp.h again to dlls/dpmodemx, and any change in those definitions
> would have to be done three times...
>

If it's not in the SDK, it can't go into include.  Also, please
bottom-post on this mailing list.

-- 
James Hawkins


From razielmine at gmail.com  Sat Jul 12 12:49:56 2008
From: razielmine at gmail.com (Ismael Barros)
Date: Sat, 12 Jul 2008 20:49:56 +0300
Subject: [dplayx] New library dpwsockx, needed by dplayx
In-Reply-To: <22821af30807121040u5f8a036fl268ac06e718b4c74@mail.gmail.com>
References: <82e274890807120733r7290a579qa39cebb991c618e@mail.gmail.com>
	<82e274890807120846g5c43858dp74ca03f68107ca47@mail.gmail.com>
	<1215882464.8831.25.camel@hermes2.karcher.local>
	<82e274890807121025w640b23d0s11a3c8ace3b3e9d3@mail.gmail.com>
	<22821af30807121040u5f8a036fl268ac06e718b4c74@mail.gmail.com>
Message-ID: <82e274890807121049v5e93a551u6a061342dd45e109@mail.gmail.com>

On 7/12/08, James Hawkins <truiken at gmail.com> wrote:
> On Sat, Jul 12, 2008 at 12:25 PM, Ismael Barros <razielmine at gmail.com>
> wrote:
>> Nop, actually I also thought the best solution would be to move that
>> file to include, because in fact it's just copied from dlls/dplayx,
>> but AFAIK wine doesn't want to put in include files that are not
>> originally present in Windows.
>>
>> However, if it's okay I'll move it, much better. I will also have to
>> implement a stub modem provider, so I would have to copy that
>> dplaysp.h again to dlls/dpmodemx, and any change in those definitions
>> would have to be done three times...
>>
>
> If it's not in the SDK, it can't go into include.  Also, please
> bottom-post on this mailing list.

As the Peter Hunnisett (author of dplaysp.h) told me, you have to ask
Microsoft for the documentation and interface to create a new service
provider, as this information was not made public because they never
thought it were to become useful for anyone. I suppose this file was
extracted from that documentation, but I can't confirm it yet.


From truiken at gmail.com  Sat Jul 12 13:34:30 2008
From: truiken at gmail.com (James Hawkins)
Date: Sat, 12 Jul 2008 13:34:30 -0500
Subject: [2/3] gdiplus: fix GdipPathIterNextMarker behaviour on path
	without markers. fix tests.
In-Reply-To: <4878EBD7.2060808@gmail.com>
References: <1215881764.8936.7.camel@debian.localdomain>
	<22821af30807121024o5810cf33ka81e7393767d2d14@mail.gmail.com>
	<4878EBD7.2060808@gmail.com>
Message-ID: <22821af30807121134t30a7fdc5p37a7a2640037cea9@mail.gmail.com>

On Sat, Jul 12, 2008 at 12:37 PM, Nikolay Sivov <bunglehead at gmail.com> wrote:
> James Hawkins wrote:
>>
>> On Sat, Jul 12, 2008 at 11:56 AM, Nikolay Sivov <bunglehead at gmail.com>
>> wrote:
>>
>>>
>>> Changelog:
>>>   -  Fix GdipPathIterNextMarker behaviour on path without markers. Make
>>> tests pass on native.
>>>
>>> ---
>>>  dlls/gdiplus/pathiterator.c       |    3 ++-
>>>  dlls/gdiplus/tests/pathiterator.c |    6 +++---
>>>  2 files changed, 5 insertions(+), 4 deletions(-)
>>>
>>> diff --git a/dlls/gdiplus/pathiterator.c b/dlls/gdiplus/pathiterator.c
>>> index 55b0782..3d3b1dc 100644
>>> --- a/dlls/gdiplus/pathiterator.c
>>> +++ b/dlls/gdiplus/pathiterator.c
>>> @@ -140,7 +140,8 @@ GpStatus WINGDIPAPI
>>> GdipPathIterNextMarker(GpPathIterator* iterator, INT *result
>>>    /* first call could start with second point as all subsequent, cause
>>>       path couldn't contain only one */
>>>    for(i = iterator->marker_pos + 1; i < iterator->pathdata.Count; i++){
>>> -        if(iterator->pathdata.Types[i] & PathPointTypePathMarker){
>>> +        if((iterator->pathdata.Types[i] & PathPointTypePathMarker) ||
>>> +           (i == iterator->pathdata.Count - 1)){
>>>            *startIndex = iterator->marker_pos;
>>>            if(iterator->marker_pos > 0) (*startIndex)++;
>>>            *endIndex   = iterator->marker_pos = i;
>>> diff --git a/dlls/gdiplus/tests/pathiterator.c
>>> b/dlls/gdiplus/tests/pathiterator.c
>>> index 071c1d5..6498bb3 100644
>>> --- a/dlls/gdiplus/tests/pathiterator.c
>>> +++ b/dlls/gdiplus/tests/pathiterator.c
>>> @@ -114,7 +114,7 @@ static void test_nextmarker(void)
>>>    GdipCreatePathIter(&iter, path);
>>>    stat = GdipPathIterNextMarker(iter, &result, &start, &end);
>>>    expect(Ok, stat);
>>> -    expect(0, result);
>>> +    if(stat == Ok) expect(TRUE, (result == 4) && (start == 0) && (end ==
>>> 3));
>>>
>>
>> Why are you checking if stat == Ok?  You're linking what should be
>> separate tests together.  You also need to put each of these checks
>> into separate tests.  If the test fails, you have no idea (without
>> debugging further) which one of those checks fails.  They're called
>> unit tests for a reason.
>>
>
> I don't think so. If the call fails testing return value doesn't make any
> sense. In this case 'result' is uninitialized and remains uninitialized
> after a call if it fails (here I mean a native too). So why should we check
> something which has unpredictable value?
> By the way first time I saw this here
> 8fd6f0e26ae28f2ba4938e2fbcc4851f47baa53c..
>

An API defines a unique output* for the set of all possible inputs.
When you write unit tests, you verify that the implementation of the
API conforms to the definition.  In the case of Wine, our definition
of the Win32 API is the test results from running the Wine test suite
in Windows.  While msdn is a good reference, it's not always correct
and we can't test our implementation against it.

In all the cases where you've added checks for (stat != Ok), stat does
equal Ok in Windows.  Thus, the definition of the API for those inputs
is that the functions return Ok.  If, for a hypothetical example, one
version of gdiplus did not return Ok, we would probably mark that as
broken.  That leads me to my next point.

You say you added the checks because it's wrong to check the value of
an uninitialized variable.  You are correct in that it is wrong to
check the value of an uninitialized variable.  Where you are mistaken
is that, by the definition of this API, none of these out variables
will be uninitialized in these cases.  One area where your tests are
lacking is that you don't control all of the input.  Even in the
failure case, you should initialize all out variables to some magic
value and then check the values of those parameters after the failed
call.  Either the values were unchanged, and thus still hold the magic
value, or they are set to some other value.  One bonus of this
practice is that, even if the test fails in Wine when it should
succeed, you're guaranteed to never read the value of an uninitialized
variable.

So to answer your question, there should be no unpredictable values in
a well-written test.

* or a unique set of acceptable outputs, e.g., multiple GetLastError values.

-- 
James Hawkins


From wine at mkarcher.dialup.fu-berlin.de  Sat Jul 12 14:21:00 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sat, 12 Jul 2008 21:21:00 +0200
Subject: [dplayx] New library dpwsockx, needed by dplayx
In-Reply-To: <22821af30807121040u5f8a036fl268ac06e718b4c74@mail.gmail.com>
References: <82e274890807120733r7290a579qa39cebb991c618e@mail.gmail.com>
	<82e274890807120846g5c43858dp74ca03f68107ca47@mail.gmail.com>
	<1215882464.8831.25.camel@hermes2.karcher.local>
	<82e274890807121025w640b23d0s11a3c8ace3b3e9d3@mail.gmail.com>
	<22821af30807121040u5f8a036fl268ac06e718b4c74@mail.gmail.com>
Message-ID: <1215890460.8831.28.camel@hermes2.karcher.local>

Am Samstag, den 12.07.2008, 12:40 -0500 schrieb James Hawkins:
> On Sat, Jul 12, 2008 at 12:25 PM, Ismael Barros <razielmine at gmail.com> wrote:
> > but AFAIK wine doesn't want to put in include files that are not
> > originally present in Windows.
> If it's not in the SDK, it can't go into include.  Also, please
> bottom-post on this mailing list.

OK, you got a point. So, what about an uninstalled file in include/wine?
Not all files from there get installed.

Regards,
  Michael Karcher



From truiken at gmail.com  Sat Jul 12 14:31:36 2008
From: truiken at gmail.com (James Hawkins)
Date: Sat, 12 Jul 2008 14:31:36 -0500
Subject: [dplayx] New library dpwsockx, needed by dplayx
In-Reply-To: <1215890460.8831.28.camel@hermes2.karcher.local>
References: <82e274890807120733r7290a579qa39cebb991c618e@mail.gmail.com>
	<82e274890807120846g5c43858dp74ca03f68107ca47@mail.gmail.com>
	<1215882464.8831.25.camel@hermes2.karcher.local>
	<82e274890807121025w640b23d0s11a3c8ace3b3e9d3@mail.gmail.com>
	<22821af30807121040u5f8a036fl268ac06e718b4c74@mail.gmail.com>
	<1215890460.8831.28.camel@hermes2.karcher.local>
Message-ID: <22821af30807121231r123614abq73f3c6ffc76bce41@mail.gmail.com>

On Sat, Jul 12, 2008 at 2:21 PM, Michael Karcher
<wine at mkarcher.dialup.fu-berlin.de> wrote:
> Am Samstag, den 12.07.2008, 12:40 -0500 schrieb James Hawkins:
>> On Sat, Jul 12, 2008 at 12:25 PM, Ismael Barros <razielmine at gmail.com> wrote:
>> > but AFAIK wine doesn't want to put in include files that are not
>> > originally present in Windows.
>> If it's not in the SDK, it can't go into include.  Also, please
>> bottom-post on this mailing list.
>
> OK, you got a point. So, what about an uninstalled file in include/wine?
> Not all files from there get installed.
>

Maybe.  You'd have to ask Julliard.

-- 
James Hawkins


From bunglehead at gmail.com  Sat Jul 12 15:43:16 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sun, 13 Jul 2008 00:43:16 +0400
Subject: [2/3] gdiplus: fix GdipPathIterNextMarker behaviour on path
	without markers. fix tests.
In-Reply-To: <22821af30807121134t30a7fdc5p37a7a2640037cea9@mail.gmail.com>
References: <1215881764.8936.7.camel@debian.localdomain>	
	<22821af30807121024o5810cf33ka81e7393767d2d14@mail.gmail.com>	
	<4878EBD7.2060808@gmail.com>
	<22821af30807121134t30a7fdc5p37a7a2640037cea9@mail.gmail.com>
Message-ID: <48791764.7070506@gmail.com>

James Hawkins wrote:
> On Sat, Jul 12, 2008 at 12:37 PM, Nikolay Sivov <bunglehead at gmail.com> wrote:
>   
>> James Hawkins wrote:
>>     
>>> On Sat, Jul 12, 2008 at 11:56 AM, Nikolay Sivov <bunglehead at gmail.com>
>>> wrote:
>>>
>>>       
>>>> Changelog:
>>>>   -  Fix GdipPathIterNextMarker behaviour on path without markers. Make
>>>> tests pass on native.
>>>>
>>>> ---
>>>>  dlls/gdiplus/pathiterator.c       |    3 ++-
>>>>  dlls/gdiplus/tests/pathiterator.c |    6 +++---
>>>>  2 files changed, 5 insertions(+), 4 deletions(-)
>>>>
>>>> diff --git a/dlls/gdiplus/pathiterator.c b/dlls/gdiplus/pathiterator.c
>>>> index 55b0782..3d3b1dc 100644
>>>> --- a/dlls/gdiplus/pathiterator.c
>>>> +++ b/dlls/gdiplus/pathiterator.c
>>>> @@ -140,7 +140,8 @@ GpStatus WINGDIPAPI
>>>> GdipPathIterNextMarker(GpPathIterator* iterator, INT *result
>>>>    /* first call could start with second point as all subsequent, cause
>>>>       path couldn't contain only one */
>>>>    for(i = iterator->marker_pos + 1; i < iterator->pathdata.Count; i++){
>>>> -        if(iterator->pathdata.Types[i] & PathPointTypePathMarker){
>>>> +        if((iterator->pathdata.Types[i] & PathPointTypePathMarker) ||
>>>> +           (i == iterator->pathdata.Count - 1)){
>>>>            *startIndex = iterator->marker_pos;
>>>>            if(iterator->marker_pos > 0) (*startIndex)++;
>>>>            *endIndex   = iterator->marker_pos = i;
>>>> diff --git a/dlls/gdiplus/tests/pathiterator.c
>>>> b/dlls/gdiplus/tests/pathiterator.c
>>>> index 071c1d5..6498bb3 100644
>>>> --- a/dlls/gdiplus/tests/pathiterator.c
>>>> +++ b/dlls/gdiplus/tests/pathiterator.c
>>>> @@ -114,7 +114,7 @@ static void test_nextmarker(void)
>>>>    GdipCreatePathIter(&iter, path);
>>>>    stat = GdipPathIterNextMarker(iter, &result, &start, &end);
>>>>    expect(Ok, stat);
>>>> -    expect(0, result);
>>>> +    if(stat == Ok) expect(TRUE, (result == 4) && (start == 0) && (end ==
>>>> 3));
>>>>
>>>>         
>>> Why are you checking if stat == Ok?  You're linking what should be
>>> separate tests together.  You also need to put each of these checks
>>> into separate tests.  If the test fails, you have no idea (without
>>> debugging further) which one of those checks fails.  They're called
>>> unit tests for a reason.
>>>
>>>       
>> I don't think so. If the call fails testing return value doesn't make any
>> sense. In this case 'result' is uninitialized and remains uninitialized
>> after a call if it fails (here I mean a native too). So why should we check
>> something which has unpredictable value?
>> By the way first time I saw this here
>> 8fd6f0e26ae28f2ba4938e2fbcc4851f47baa53c..
>>
>>     
>
> An API defines a unique output* for the set of all possible inputs.
> When you write unit tests, you verify that the implementation of the
> API conforms to the definition.  In the case of Wine, our definition
> of the Win32 API is the test results from running the Wine test suite
> in Windows.  While msdn is a good reference, it's not always correct
> and we can't test our implementation against it.
>   
If you mean that an API's defined by a mapping of all possible inputs to 
a set of outputs I'm agreed.
> In all the cases where you've added checks for (stat != Ok), stat does
> equal Ok in Windows.  Thus, the definition of the API for those inputs
> is that the functions return Ok.  If, for a hypothetical example, one
> version of gdiplus did not return Ok, we would probably mark that as
> broken.  That leads me to my next point.
>
> You say you added the checks because it's wrong to check the value of
> an uninitialized variable.  You are correct in that it is wrong to
> check the value of an uninitialized variable.  Where you are mistaken
> is that, by the definition of this API, none of these out variables
> will be uninitialized in these cases.  One area where your tests are
> lacking is that you don't control all of the input.  Even in the
> failure case, you should initialize all out variables to some magic
> value and then check the values of those parameters after the failed
> call.  Either the values were unchanged, and thus still hold the magic
> value, or they are set to some other value.  One bonus of this
> practice is that, even if the test fails in Wine when it should
> succeed, you're guaranteed to never read the value of an uninitialized
> variable.
>   
So you mean here that in this case testing return value should be 
unlinked to testing outputs, that these tests are  independent. Maybe it 
really helps when behaviour changes (API changes in fact) from version 
to version. So maybe it's the better way to split this and let it both 
test fail.
> So to answer your question, there should be no unpredictable values in
> a well-written test.
>
> * or a unique set of acceptable outputs, e.g., multiple GetLastError values.
Yes, I thought about some special 'magic' values for output arguments. 
Some deadbeef should be acceptable.
Thanks for comments I'll repost these fixes.


From truiken at gmail.com  Sat Jul 12 16:21:35 2008
From: truiken at gmail.com (James Hawkins)
Date: Sat, 12 Jul 2008 16:21:35 -0500
Subject: [2/3] gdiplus: Fix test for PathIterator + make it pass on native
	and Wine (try2)
In-Reply-To: <1215897099.11601.6.camel@debian.localdomain>
References: <1215897099.11601.6.camel@debian.localdomain>
Message-ID: <22821af30807121421o498f8201tab48f935595dc6bf@mail.gmail.com>

On Sat, Jul 12, 2008 at 4:11 PM, Nikolay Sivov <bunglehead at gmail.com> wrote:
> Changelog:
>    - Fix test for PathIterator + make it pass on native and Wine
> ---
>  dlls/gdiplus/pathiterator.c       |    3 ++-
>  dlls/gdiplus/tests/pathiterator.c |    5 +++--
>  2 files changed, 5 insertions(+), 3 deletions(-)
>
> diff --git a/dlls/gdiplus/pathiterator.c b/dlls/gdiplus/pathiterator.c
> index 55b0782..3d3b1dc 100644
> --- a/dlls/gdiplus/pathiterator.c
> +++ b/dlls/gdiplus/pathiterator.c
> @@ -140,7 +140,8 @@ GpStatus WINGDIPAPI GdipPathIterNextMarker(GpPathIterator* iterator, INT *result
>     /* first call could start with second point as all subsequent, cause
>        path couldn't contain only one */
>     for(i = iterator->marker_pos + 1; i < iterator->pathdata.Count; i++){
> -        if(iterator->pathdata.Types[i] & PathPointTypePathMarker){
> +        if((iterator->pathdata.Types[i] & PathPointTypePathMarker) ||
> +           (i == iterator->pathdata.Count - 1)){
>             *startIndex = iterator->marker_pos;
>             if(iterator->marker_pos > 0) (*startIndex)++;
>             *endIndex   = iterator->marker_pos = i;
> diff --git a/dlls/gdiplus/tests/pathiterator.c b/dlls/gdiplus/tests/pathiterator.c
> index 071c1d5..90725dc 100644
> --- a/dlls/gdiplus/tests/pathiterator.c
> +++ b/dlls/gdiplus/tests/pathiterator.c
> @@ -95,7 +95,8 @@ static void test_nextmarker(void)
>     GpPath *path;
>     GpPathIterator *iter;
>     GpStatus stat;
> -    INT start, end, result;
> +    INT start, end;
> +    INT result = (INT)0xdeadbeef;
>
>     /* NULL args
>        BOOL out argument is local in wrapper class method,
> @@ -114,7 +115,7 @@ static void test_nextmarker(void)
>     GdipCreatePathIter(&iter, path);
>     stat = GdipPathIterNextMarker(iter, &result, &start, &end);
>     expect(Ok, stat);
> -    expect(0, result);
> +    expect(TRUE, (result == 4) && (start == 0) && (end == 3));

Please break these out into their own tests.  Like I said before, they
are independent, and if one of them fails, it's impossible to tell
from the test results which one is wrong.  Also, none of the tests
should be (returned == expected) == TRUE.  It should simply be
expect(expected, returned).

-- 
James Hawkins


From truiken at gmail.com  Sat Jul 12 16:26:15 2008
From: truiken at gmail.com (James Hawkins)
Date: Sat, 12 Jul 2008 16:26:15 -0500
Subject: [3/3] gdiplus: Make GdipInvertMatrix test pass on native
In-Reply-To: <1215897142.11601.9.camel@debian.localdomain>
References: <1215897142.11601.9.camel@debian.localdomain>
Message-ID: <22821af30807121426o8c00a28s88e7e0fe648ae796@mail.gmail.com>

On Sat, Jul 12, 2008 at 4:12 PM, Nikolay Sivov <bunglehead at gmail.com> wrote:
> Changelog:
>    - Make GdipInvertMatrix test pass on native
>
> ---
>  dlls/gdiplus/tests/matrix.c |   23 +++++++++++++++++------
>  1 files changed, 17 insertions(+), 6 deletions(-)
>
> diff --git a/dlls/gdiplus/tests/matrix.c b/dlls/gdiplus/tests/matrix.c
> index 16c1517..daf61ea 100644
> --- a/dlls/gdiplus/tests/matrix.c
> +++ b/dlls/gdiplus/tests/matrix.c
> @@ -27,6 +27,19 @@
>
>  #define expect(expected, got) ok(got == expected, "Expected %.8x, got %.8x\n", expected, got)
>
> +/* compare matrix data with some tolerance */
> +BOOL m_equalf(REAL *m1, REAL *m2)
> +{
> +    BOOL ret = TRUE;
> +    INT i;
> +
> +    for(i = 0; i < 6; i++){
> +        ret = ret && (fabsf(m1[i] - m2[i]) < 1e-5);
> +    }
> +
> +    return ret;
> +}
> +
>  static void test_constructor_destructor(void)
>  {
>     GpStatus status;
> @@ -119,12 +132,12 @@ static void test_isinvertible(void)
>     GdipDeleteMatrix(matrix);
>  }
>
> +static REAL minverted[] = {1.0/9.0, 2.0/9.0, 4.0/9.0, -1.0/9.0, -2.0, -1.0};
>  static void test_invert(void)
>  {
>     GpStatus status;
>     GpMatrix *matrix = NULL;
> -    GpMatrix *inverted = NULL;
> -    BOOL equal;
> +    REAL mdata[6];
>
>     /* NULL */
>     status = GdipInvertMatrix(NULL);
> @@ -141,11 +154,9 @@ static void test_invert(void)
>     status = GdipInvertMatrix(matrix);
>     expect(Ok, status);
>
> -    GdipCreateMatrix2(1.0/9.0, 2.0/9.0, 4.0/9.0, -1.0/9.0, -2.0, -1.0, &inverted);
> -    GdipIsMatrixEqual(matrix, inverted, &equal);
> -    expect(TRUE, equal);
> +    GdipGetMatrixElements(matrix, mdata);
> +    expect(TRUE, m_equalf(mdata, minverted));
>

Why are you creating a new function that allows tolerance when you
control the matrix you're comparing it to?  Allowing slop is
acceptable in some circumstances, but not in this case, when there is
one exact value (or matrix of values) returned.

-- 
James Hawkins


From bunglehead at gmail.com  Sat Jul 12 16:35:52 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sun, 13 Jul 2008 01:35:52 +0400
Subject: [3/3] gdiplus: Make GdipInvertMatrix test pass on native
In-Reply-To: <22821af30807121426o8c00a28s88e7e0fe648ae796@mail.gmail.com>
References: <1215897142.11601.9.camel@debian.localdomain>
	<22821af30807121426o8c00a28s88e7e0fe648ae796@mail.gmail.com>
Message-ID: <487923B8.3060205@gmail.com>

James Hawkins wrote:
> On Sat, Jul 12, 2008 at 4:12 PM, Nikolay Sivov <bunglehead at gmail.com> wrote:
>   
>> Changelog:
>>    - Make GdipInvertMatrix test pass on native
>>
>> ---
>>  dlls/gdiplus/tests/matrix.c |   23 +++++++++++++++++------
>>  1 files changed, 17 insertions(+), 6 deletions(-)
>>
>> diff --git a/dlls/gdiplus/tests/matrix.c b/dlls/gdiplus/tests/matrix.c
>> index 16c1517..daf61ea 100644
>> --- a/dlls/gdiplus/tests/matrix.c
>> +++ b/dlls/gdiplus/tests/matrix.c
>> @@ -27,6 +27,19 @@
>>
>>  #define expect(expected, got) ok(got == expected, "Expected %.8x, got %.8x\n", expected, got)
>>
>> +/* compare matrix data with some tolerance */
>> +BOOL m_equalf(REAL *m1, REAL *m2)
>> +{
>> +    BOOL ret = TRUE;
>> +    INT i;
>> +
>> +    for(i = 0; i < 6; i++){
>> +        ret = ret && (fabsf(m1[i] - m2[i]) < 1e-5);
>> +    }
>> +
>> +    return ret;
>> +}
>> +
>>  static void test_constructor_destructor(void)
>>  {
>>     GpStatus status;
>> @@ -119,12 +132,12 @@ static void test_isinvertible(void)
>>     GdipDeleteMatrix(matrix);
>>  }
>>
>> +static REAL minverted[] = {1.0/9.0, 2.0/9.0, 4.0/9.0, -1.0/9.0, -2.0, -1.0};
>>  static void test_invert(void)
>>  {
>>     GpStatus status;
>>     GpMatrix *matrix = NULL;
>> -    GpMatrix *inverted = NULL;
>> -    BOOL equal;
>> +    REAL mdata[6];
>>
>>     /* NULL */
>>     status = GdipInvertMatrix(NULL);
>> @@ -141,11 +154,9 @@ static void test_invert(void)
>>     status = GdipInvertMatrix(matrix);
>>     expect(Ok, status);
>>
>> -    GdipCreateMatrix2(1.0/9.0, 2.0/9.0, 4.0/9.0, -1.0/9.0, -2.0, -1.0, &inverted);
>> -    GdipIsMatrixEqual(matrix, inverted, &equal);
>> -    expect(TRUE, equal);
>> +    GdipGetMatrixElements(matrix, mdata);
>> +    expect(TRUE, m_equalf(mdata, minverted));
>>
>>     
>
> Why are you creating a new function that allows tolerance when you
> control the matrix you're comparing it to?  Allowing slop is
> acceptable in some circumstances, but not in this case, when there is
> one exact value (or matrix of values) returned.
Of course there's only one value of inverted matrix. GDI+ uses floating 
point values for matrix elements so don't you think the result could be 
slightly different due different calculation algorithms?


From truiken at gmail.com  Sat Jul 12 16:55:39 2008
From: truiken at gmail.com (James Hawkins)
Date: Sat, 12 Jul 2008 16:55:39 -0500
Subject: [3/3] gdiplus: Make GdipInvertMatrix test pass on native
In-Reply-To: <487923B8.3060205@gmail.com>
References: <1215897142.11601.9.camel@debian.localdomain>
	<22821af30807121426o8c00a28s88e7e0fe648ae796@mail.gmail.com>
	<487923B8.3060205@gmail.com>
Message-ID: <22821af30807121455t6a98a0cao927fedf080a928a7@mail.gmail.com>

On Sat, Jul 12, 2008 at 4:35 PM, Nikolay Sivov <bunglehead at gmail.com> wrote:
> James Hawkins wrote:
>>
>> On Sat, Jul 12, 2008 at 4:12 PM, Nikolay Sivov <bunglehead at gmail.com>
>> wrote:
>>
>>>
>>> Changelog:
>>>   - Make GdipInvertMatrix test pass on native
>>>
>>> ---
>>>  dlls/gdiplus/tests/matrix.c |   23 +++++++++++++++++------
>>>  1 files changed, 17 insertions(+), 6 deletions(-)
>>>
>>> diff --git a/dlls/gdiplus/tests/matrix.c b/dlls/gdiplus/tests/matrix.c
>>> index 16c1517..daf61ea 100644
>>> --- a/dlls/gdiplus/tests/matrix.c
>>> +++ b/dlls/gdiplus/tests/matrix.c
>>> @@ -27,6 +27,19 @@
>>>
>>>  #define expect(expected, got) ok(got == expected, "Expected %.8x, got
>>> %.8x\n", expected, got)
>>>
>>> +/* compare matrix data with some tolerance */
>>> +BOOL m_equalf(REAL *m1, REAL *m2)
>>> +{
>>> +    BOOL ret = TRUE;
>>> +    INT i;
>>> +
>>> +    for(i = 0; i < 6; i++){
>>> +        ret = ret && (fabsf(m1[i] - m2[i]) < 1e-5);
>>> +    }
>>> +
>>> +    return ret;
>>> +}
>>> +
>>>  static void test_constructor_destructor(void)
>>>  {
>>>    GpStatus status;
>>> @@ -119,12 +132,12 @@ static void test_isinvertible(void)
>>>    GdipDeleteMatrix(matrix);
>>>  }
>>>
>>> +static REAL minverted[] = {1.0/9.0, 2.0/9.0, 4.0/9.0, -1.0/9.0, -2.0,
>>> -1.0};
>>>  static void test_invert(void)
>>>  {
>>>    GpStatus status;
>>>    GpMatrix *matrix = NULL;
>>> -    GpMatrix *inverted = NULL;
>>> -    BOOL equal;
>>> +    REAL mdata[6];
>>>
>>>    /* NULL */
>>>    status = GdipInvertMatrix(NULL);
>>> @@ -141,11 +154,9 @@ static void test_invert(void)
>>>    status = GdipInvertMatrix(matrix);
>>>    expect(Ok, status);
>>>
>>> -    GdipCreateMatrix2(1.0/9.0, 2.0/9.0, 4.0/9.0, -1.0/9.0, -2.0, -1.0,
>>> &inverted);
>>> -    GdipIsMatrixEqual(matrix, inverted, &equal);
>>> -    expect(TRUE, equal);
>>> +    GdipGetMatrixElements(matrix, mdata);
>>> +    expect(TRUE, m_equalf(mdata, minverted));
>>>
>>>
>>
>> Why are you creating a new function that allows tolerance when you
>> control the matrix you're comparing it to?  Allowing slop is
>> acceptable in some circumstances, but not in this case, when there is
>> one exact value (or matrix of values) returned.
>
> Of course there's only one value of inverted matrix. GDI+ uses floating
> point values for matrix elements so don't you think the result could be
> slightly different due different calculation algorithms?
>

If you write and test the results in Windows, you won't have to guess
what the results will be.  No I don't think the results will be
slightly different.  Higher-precision arithmetic doesn't mean more
slop.

-- 
James Hawkins


From bunglehead at gmail.com  Sat Jul 12 17:21:50 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sun, 13 Jul 2008 02:21:50 +0400
Subject: [3/3] gdiplus: Make GdipInvertMatrix test pass on native
In-Reply-To: <22821af30807121455t6a98a0cao927fedf080a928a7@mail.gmail.com>
References: <1215897142.11601.9.camel@debian.localdomain>	
	<22821af30807121426o8c00a28s88e7e0fe648ae796@mail.gmail.com>	
	<487923B8.3060205@gmail.com>
	<22821af30807121455t6a98a0cao927fedf080a928a7@mail.gmail.com>
Message-ID: <48792E7E.1010302@gmail.com>

James Hawkins wrote:
> On Sat, Jul 12, 2008 at 4:35 PM, Nikolay Sivov <bunglehead at gmail.com> wrote:
>   
>> James Hawkins wrote:
>>     
>>> On Sat, Jul 12, 2008 at 4:12 PM, Nikolay Sivov <bunglehead at gmail.com>
>>> wrote:
>>>
>>>       
>>>> Changelog:
>>>>   - Make GdipInvertMatrix test pass on native
>>>>
>>>> ---
>>>>  dlls/gdiplus/tests/matrix.c |   23 +++++++++++++++++------
>>>>  1 files changed, 17 insertions(+), 6 deletions(-)
>>>>
>>>> diff --git a/dlls/gdiplus/tests/matrix.c b/dlls/gdiplus/tests/matrix.c
>>>> index 16c1517..daf61ea 100644
>>>> --- a/dlls/gdiplus/tests/matrix.c
>>>> +++ b/dlls/gdiplus/tests/matrix.c
>>>> @@ -27,6 +27,19 @@
>>>>
>>>>  #define expect(expected, got) ok(got == expected, "Expected %.8x, got
>>>> %.8x\n", expected, got)
>>>>
>>>> +/* compare matrix data with some tolerance */
>>>> +BOOL m_equalf(REAL *m1, REAL *m2)
>>>> +{
>>>> +    BOOL ret = TRUE;
>>>> +    INT i;
>>>> +
>>>> +    for(i = 0; i < 6; i++){
>>>> +        ret = ret && (fabsf(m1[i] - m2[i]) < 1e-5);
>>>> +    }
>>>> +
>>>> +    return ret;
>>>> +}
>>>> +
>>>>  static void test_constructor_destructor(void)
>>>>  {
>>>>    GpStatus status;
>>>> @@ -119,12 +132,12 @@ static void test_isinvertible(void)
>>>>    GdipDeleteMatrix(matrix);
>>>>  }
>>>>
>>>> +static REAL minverted[] = {1.0/9.0, 2.0/9.0, 4.0/9.0, -1.0/9.0, -2.0,
>>>> -1.0};
>>>>  static void test_invert(void)
>>>>  {
>>>>    GpStatus status;
>>>>    GpMatrix *matrix = NULL;
>>>> -    GpMatrix *inverted = NULL;
>>>> -    BOOL equal;
>>>> +    REAL mdata[6];
>>>>
>>>>    /* NULL */
>>>>    status = GdipInvertMatrix(NULL);
>>>> @@ -141,11 +154,9 @@ static void test_invert(void)
>>>>    status = GdipInvertMatrix(matrix);
>>>>    expect(Ok, status);
>>>>
>>>> -    GdipCreateMatrix2(1.0/9.0, 2.0/9.0, 4.0/9.0, -1.0/9.0, -2.0, -1.0,
>>>> &inverted);
>>>> -    GdipIsMatrixEqual(matrix, inverted, &equal);
>>>> -    expect(TRUE, equal);
>>>> +    GdipGetMatrixElements(matrix, mdata);
>>>> +    expect(TRUE, m_equalf(mdata, minverted));
>>>>
>>>>
>>>>         
>>> Why are you creating a new function that allows tolerance when you
>>> control the matrix you're comparing it to?  Allowing slop is
>>> acceptable in some circumstances, but not in this case, when there is
>>> one exact value (or matrix of values) returned.
>>>       
>> Of course there's only one value of inverted matrix. GDI+ uses floating
>> point values for matrix elements so don't you think the result could be
>> slightly different due different calculation algorithms?
>>
>>     
>
> If you write and test the results in Windows, you won't have to guess
> what the results will be.  No I don't think the results will be
> slightly different.  Higher-precision arithmetic doesn't mean more
> slop.
>   
Higher then what? Bitwise comparison of floating point values is useless 
in most cases. The constant for inverted matrix provided in test is 
exact product of invert operation. Such difference is acceptable here. 
The tolerance could be decreased to 1e-7 I think but I don't see any 
reason for that.



From wine at mkarcher.dialup.fu-berlin.de  Sat Jul 12 17:42:17 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sun, 13 Jul 2008 00:42:17 +0200
Subject: [3/3] gdiplus: Make GdipInvertMatrix test pass on native
In-Reply-To: <22821af30807121455t6a98a0cao927fedf080a928a7@mail.gmail.com>
References: <1215897142.11601.9.camel@debian.localdomain>
	<22821af30807121426o8c00a28s88e7e0fe648ae796@mail.gmail.com>
	<487923B8.3060205@gmail.com>
	<22821af30807121455t6a98a0cao927fedf080a928a7@mail.gmail.com>
Message-ID: <1215902537.8831.47.camel@hermes2.karcher.local>

Am Samstag, den 12.07.2008, 16:55 -0500 schrieb James Hawkins:
> >>> -    GdipCreateMatrix2(1.0/9.0, 2.0/9.0, 4.0/9.0, -1.0/9.0, -2.0, -1.0,
> > Of course there's only one value of inverted matrix.
Which is not representable as a finite binary fraction.

> > GDI+ uses floating
> > point values for matrix elements so don't you think the result could be
> > slightly different due different calculation algorithms?
As they say: Never compare floating point numbers for equality. So I
understand your point. Especially if unrepresentable values are
involved.

> If you write and test the results in Windows, you won't have to guess
> what the results will be.
Right. Testing against Windows is the only method of verifying whether
Wine does the right things, but floating point arithmetic, which is
inherently prone to rounding errors, should IMHO be accounted for by
allowing slight variances.

> No I don't think the results will be
> slightly different.  Higher-precision arithmetic doesn't mean more
> slop.
What do you mean with higher-precision arithmetic? Floating point
arithmetic *always* means slop, as soon as numbers that can't be written
as finite binary fractions are involved. In this concrete case, I
suspect you are right. There is just one obvious algorithm[1] to invert
a 2x2 Matrix, which is so simple that it cannot be stated in numerically
non-equivalent ways (remember, a+(b+c) is not necessarily equal to (a
+b)+c)), so I would expect the results to be really identical on windows
if the input numbers are small integers. Still, the fractions with nine
in the denominator make me worry. Couldn't we use a matrix with a
determinant of 8 or 16 instead of nine? This would make nice floats you
can definitely compare for equality.

As a side note: I don't like the implementation of m_equalf, as it
checks for absolute deviation instead of relative deviation. The values
used have the same order of magnitude as 1, so it does not matter for
this test. But: This very criterion is also used in in
GdipIsMatrixInvertible, where I consider it highly questionable, as long
as it is not backed by API tests.

Nikolay: Please write a test whether the matrix
  1.0/131072, 2.0/131072, 4.0/131072, -1/131072, 0, 0
is invertible. According to your criterion, it is *not* invertible, as
the determinant will be 9.0/17179869184, which is way below 1e-5, but
this matrix still *is* invertible. What happens on Windows?

Regards,
  Michael Karcher

[1] Which I found (as expected) when looking at dlls/gdiplus/matrix.c



From wine at mkarcher.dialup.fu-berlin.de  Sat Jul 12 18:14:31 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sun, 13 Jul 2008 01:14:31 +0200
Subject: [3/3] gdiplus: Make GdipInvertMatrix test pass on native
In-Reply-To: <3f4fd2640807121556h6d84838jaebdca30062c5f51@mail.gmail.com>
References: <1215897142.11601.9.camel@debian.localdomain>
	<22821af30807121426o8c00a28s88e7e0fe648ae796@mail.gmail.com>
	<487923B8.3060205@gmail.com>
	<22821af30807121455t6a98a0cao927fedf080a928a7@mail.gmail.com>
	<1215902537.8831.47.camel@hermes2.karcher.local>
	<3f4fd2640807121556h6d84838jaebdca30062c5f51@mail.gmail.com>
Message-ID: <1215904471.8831.57.camel@hermes2.karcher.local>

Am Samstag, den 12.07.2008, 23:56 +0100 schrieb Reece Dunn:
> > Nikolay: Please write a test whether the matrix
> >  1.0/131072, 2.0/131072, 4.0/131072, -1/131072, 0, 0
> > is invertible. According to your criterion, it is *not* invertible, as
> > the determinant will be 9.0/17179869184, which is way below 1e-5, but
> > this matrix still *is* invertible. What happens on Windows?
> The identity matrix would also be a nice test case - for the other GDI
> and DirectX matrix operations as well.
Yes. Excellent idea! Determinant is one. Division by one is exact. This
should definitely yield exact results.

Now, add the identity matrix scaled by a big power of two (like 2^60)
and divided by that power of two. Powers of two are as good as a simple
one if you are on floating point numbers.

If you are brave enough to really find out what happens (might be
different depending on Windows version, instruction sets available and
things like that), also try the identity matrix scaled by 2^66 and
2^(-66). The square of 2^66 overflows a 32 bit floating point number.
So, if you calculate within x87 coprocessor registers, you can invert
the matrix. If you store to double variables too. If you store to float
variables or calc via SSE or 3Dnow! (overkill for a matrix inversion, I
know), matrix inversion probably fails, if no tricks are used.

Regards,
  Michael Karcher



From dank at kegel.com  Sat Jul 12 18:16:43 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 12 Jul 2008 16:16:43 -0700
Subject: [3/3] gdiplus: Make GdipInvertMatrix test pass on native
Message-ID: <a71bd89a0807121616l2e648662l82d045bb3e58505f@mail.gmail.com>

James wrote:
> > GDI+ uses floating point values for matrix elements so
>> don't you think the result could be slightly different...
>
>  No I don't think the results will be slightly different.
> Higher-precision arithmetic doesn't mean more slop.

Floating point equality comparisons need an error tolerance.
See e.g.

http://teaching.idallen.com/cst8110/97s/floating_point.html
http://docs.hp.com/en/B3906-90006/ch03s05.html
http://en.wikipedia.org/wiki/Floating_point#Accuracy_problems
http://search.cpan.org/~dagolden/Test-Number-Delta-1.03/lib/Test/Number/Delta.pm

And testing matrix math routines is even trickier, it
helps to have a really good math background there...


From wine at mkarcher.dialup.fu-berlin.de  Sat Jul 12 18:33:31 2008
From: wine at mkarcher.dialup.fu-berlin.de (Michael Karcher)
Date: Sun, 13 Jul 2008 01:33:31 +0200
Subject: [3/3] gdiplus: Make GdipInvertMatrix test pass on native
In-Reply-To: <1215904471.8831.57.camel@hermes2.karcher.local>
References: <1215897142.11601.9.camel@debian.localdomain>
	<22821af30807121426o8c00a28s88e7e0fe648ae796@mail.gmail.com>
	<487923B8.3060205@gmail.com>
	<22821af30807121455t6a98a0cao927fedf080a928a7@mail.gmail.com>
	<1215902537.8831.47.camel@hermes2.karcher.local>
	<3f4fd2640807121556h6d84838jaebdca30062c5f51@mail.gmail.com>
	<1215904471.8831.57.camel@hermes2.karcher.local>
Message-ID: <1215905611.8831.60.camel@hermes2.karcher.local>

Am Sonntag, den 13.07.2008, 01:14 +0200 schrieb Michael Karcher:
> Am Samstag, den 12.07.2008, 23:56 +0100 schrieb Reece Dunn:
> If you are brave enough to really find out what happens (might be
> different depending on Windows version, instruction sets available and
> things like that), also try the identity matrix scaled by 2^66 and
> 2^(-66). The square of 2^66 overflows a 32 bit floating point number.
Sorry, forgot denormals. The square of 2^(-66) *is* exactly
represenatable as float! Use 2^(-80) to be sure that the square
underflows.

Regards,
  Michael Karcher



From dank at kegel.com  Sat Jul 12 19:06:55 2008
From: dank at kegel.com (Dan Kegel)
Date: Sat, 12 Jul 2008 17:06:55 -0700
Subject: [3/3] gdiplus: Make GdipInvertMatrix test pass on native
In-Reply-To: <a71bd89a0807121616l2e648662l82d045bb3e58505f@mail.gmail.com>
References: <a71bd89a0807121616l2e648662l82d045bb3e58505f@mail.gmail.com>
Message-ID: <a71bd89a0807121706u2e6d335cua86f2bd2eb19eae7@mail.gmail.com>

On Sat, Jul 12, 2008 at 4:16 PM, Dan Kegel <dank at kegel.com> wrote:
> Floating point equality comparisons need an error tolerance.
> See e.g.
>
> http://teaching.idallen.com/cst8110/97s/floating_point.html
> http://docs.hp.com/en/B3906-90006/ch03s05.html
> http://en.wikipedia.org/wiki/Floating_point#Accuracy_problems
> http://search.cpan.org/~dagolden/Test-Number-Delta-1.03/lib/Test/Number/Delta.pm

Someone goaded me into finding better links (thanks...), so:

http://code.google.com/p/googletest/ is a test framework that
gets it right, I think.  After peeking at its source, I recalled
the magic buzzword: ULP.  Searching for floating point comparison ULP
finds better links than I found before,  e.g.
http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm
- Dan


From shelnutt2 at gmail.com  Sat Jul 12 19:52:11 2008
From: shelnutt2 at gmail.com (Seth Shelnutt)
Date: Sat, 12 Jul 2008 20:52:11 -0400
Subject: CUDA wrapper
In-Reply-To: <007b01c8e241$96739d10$c35ad730$@com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>
	<3a768c550807090930l58caa08frf34ba99c153d6b3d@mail.gmail.com>
	<6fc03d800807091539t426babearc69d3e65112edfbe@mail.gmail.com>
	<3a768c550807091542r7651ac16l5442a453e0bad70f@mail.gmail.com>
	<6fc03d800807091603w620a8186xf83f423c618fc66a@mail.gmail.com>
	<3a768c550807091612m612e0008oc53a725d3868916f@mail.gmail.com>
	<6fc03d800807091625r3826f250p208832d06c97c724@mail.gmail.com>
	<3a768c550807091626x7310a611g9e3d14cbb2522d5d@mail.gmail.com>
	<6fc03d800807091723r14862b3h991bf6e9b254e8ca@mail.gmail.com>
	<007b01c8e241$96739d10$c35ad730$@com>
Message-ID: <6fc03d800807121752m3f650754j87688adc168801ef@mail.gmail.com>

OK, I've fixed a few mistakes in the .spec file and we are getting further,
but I tried debugging the output but I am not sure what it all means.

zerix01 at DeepThought:~/.wine/drive_c/Program Files/Folding at home
/Folding at home-gpu$ winedbg Folding at home.exe
WineDbg starting on pid 0024
start_process () at /media/md0/wine/wine/dlls/kernel32/process.c:904
0x7b877d02 start_process+0xc2
[/media/md0/wine/wine/dlls/kernel32/process.c:904] in kernel32: movl
%esi,0x0(%esp)
904 ExitThread( entry( peb ) );
Wine-dbg>n
fixme:d3d:IWineD3DImpl_FillGLCaps OpenGL implementation supports 32 vertex
samplers and 32 total samplers
fixme:d3d:IWineD3DImpl_FillGLCaps Expected vertex samplers +
MAX_TEXTURES(=8) > combined_samplers
fixme:win:EnumDisplayDevicesW ((null),0,0x33f40c,0x00000000), stub!
err:seh:raise_exception Unhandled exception code c0000005 flags 0 addr
0xf7facaaf
Invalid address (0x7b877d07 start_process+0xc7) for breakpoint 0, disabling
it
Process of pid=0024 has terminated
Wine-dbg>

I believe the key line is Invalid address (0x7b877d07 start_process+0xc7)
for breakpoint 0, disabling it . But what exactly that means I am not sure,
I mean I don't know which function it is saying is missing or messed up.
Also from the documentation and from the nvidia forums it seems that both
libraries are exactly the same, and it is said that there is no difference
in writing a program for Linux vs. Windows, but I assume that is minus the
direct3d functions, which I know the folding at home program doesn't use.

On Thu, Jul 10, 2008 at 12:01 AM, Stefan D?singer <stefan at codeweavers.com>
wrote:

>  Wine links against cudart.dll.so from /usr/lib/ or wherever it is. You
> don't have to put it in C:\windows\... .
>
>
>
> You can put a TRACE or ERR into the cudaMalloc(or whatever) function
> implementation in your code to write a message to check if the functions are
> properly called. I suspect they are, and that libcudart.so writes those
> errors. This would then mean that the Windows and Linux cuda libraries are
> different, and some features are missing in the Linux version. If that is
> true, the only thing you can do is to contact Nvidia and ask them for help
>
>
>
>
>
> *From:* wine-devel-bounces at winehq.org [mailto:
> wine-devel-bounces at winehq.org] *On Behalf Of *Seth Shelnutt
> *Sent:* Wednesday, July 09, 2008 7:23 PM
> *To:* Juan Lang; wine-devel at winehq.org
> *Subject:* Re: CUDA wrapper
>
>
>
> Well at least it compiled, but it isn't working. We are still getting the
> message that the function isn't implemented.
>
>
> Initializing Nvidia gpu library
> cudaMalloc CUDAStream::Allocate failed feature is not yet implemented
>
>
> Now both cudamalloc and all four cuda stream's, cudaStreamCreate, Destroy,
> Query and Synchronize were implemented.
> I thought maybe it was because in the spec file I had the cudaStream's as
> pointers (ptr) so I switched them to long but ti didn't make a difference.
> Originally the argument was "stream" but I can't get any argument but ptr
> and long to pass the winegcc for spec files.
>
> http://shelnutt.twomurs.com/patches/cuda/cuda.dll.spec
>
> Does wine need to somehow be made aware of the presence of the
> cudart.dll.so file? We tried putting it in both the system32 and the lib
> folder but it seems also that maybe WINE needs to be made aware of it?
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080712/7b466a50/attachment.htm 

From stefan at codeweavers.com  Sat Jul 12 22:02:17 2008
From: stefan at codeweavers.com (=?windows-1252?Q?Stefan_D=F6singer?=)
Date: Sat, 12 Jul 2008 22:02:17 -0500
Subject: CUDA wrapper
In-Reply-To: <6fc03d800807121752m3f650754j87688adc168801ef@mail.gmail.com>
References: <6fc03d800807061223o239d1bd5p39fc99d638f30a56@mail.gmail.com>	<3a768c550807090930l58caa08frf34ba99c153d6b3d@mail.gmail.com>	<6fc03d800807091539t426babearc69d3e65112edfbe@mail.gmail.com>	<3a768c550807091542r7651ac16l5442a453e0bad70f@mail.gmail.com>	<6fc03d800807091603w620a8186xf83f423c618fc66a@mail.gmail.com>	<3a768c550807091612m612e0008oc53a725d3868916f@mail.gmail.com>	<6fc03d800807091625r3826f250p208832d06c97c724@mail.gmail.com>	<3a768c550807091626x7310a611g9e3d14cbb2522d5d@mail.gmail.com>	<6fc03d800807091723r14862b3h991bf6e9b254e8ca@mail.gmail.com>	<007b01c8e241$96739d10$c35ad730$@com>
	<6fc03d800807121752m3f650754j87688adc168801ef@mail.gmail.com>
Message-ID: <001801c8e494$dc31c0c0$94954240$@com>

I have no idea regarding that crash, but from the rest of the log it seems
that the app is initializing a d3d device; This means you'll probably have
to implement cuda<->d3d communication

 

 

From: wine-devel-bounces at winehq.org [mailto:wine-devel-bounces at winehq.org]
On Behalf Of Seth Shelnutt
Sent: Saturday, July 12, 2008 7:52 PM
To: wine-devel at winehq.org
Subject: Re: CUDA wrapper

 

OK, I've fixed a few mistakes in the .spec file and we are getting further,
but I tried debugging the output but I am not sure what it all means.

zerix01 at DeepThought:~/.wine/drive_c/Program
Files/Folding at home/Folding at home-gpu$ winedbg Folding at home.exe
WineDbg starting on pid 0024
start_process () at /media/md0/wine/wine/dlls/kernel32/process.c:904
0x7b877d02 start_process+0xc2
[/media/md0/wine/wine/dlls/kernel32/process.c:904] in kernel32: movl
%esi,0x0(%esp)
904 ExitThread( entry( peb ) );
Wine-dbg>n
fixme:d3d:IWineD3DImpl_FillGLCaps OpenGL implementation supports 32 vertex
samplers and 32 total samplers
fixme:d3d:IWineD3DImpl_FillGLCaps Expected vertex samplers +
MAX_TEXTURES(=8) > combined_samplers
fixme:win:EnumDisplayDevicesW ((null),0,0x33f40c,0x00000000), stub!
err:seh:raise_exception Unhandled exception code c0000005 flags 0 addr
0xf7facaaf
Invalid address (0x7b877d07 start_process+0xc7) for breakpoint 0, disabling
it
Process of pid=0024 has terminated
Wine-dbg>

I believe the key line is Invalid address (0x7b877d07 start_process+0xc7)
for breakpoint 0, disabling it . But what exactly that means I am not sure,
I mean I don't know which function it is saying is missing or messed up.
Also from the documentation and from the nvidia forums it seems that both
libraries are exactly the same, and it is said that there is no difference
in writing a program for Linux vs. Windows, but I assume that is minus the
direct3d functions, which I know the folding at home program doesn't use.

On Thu, Jul 10, 2008 at 12:01 AM, Stefan D?singer <stefan at codeweavers.com>
wrote:

Wine links against cudart.dll.so from /usr/lib/ or wherever it is. You don't
have to put it in C:\windows\... .

 

You can put a TRACE or ERR into the cudaMalloc(or whatever) function
implementation in your code to write a message to check if the functions are
properly called. I suspect they are, and that libcudart.so writes those
errors. This would then mean that the Windows and Linux cuda libraries are
different, and some features are missing in the Linux version. If that is
true, the only thing you can do is to contact Nvidia and ask them for help

 

 

From: wine-devel-bounces at winehq.org [mailto:wine-devel-bounces at winehq.org]
On Behalf Of Seth Shelnutt
Sent: Wednesday, July 09, 2008 7:23 PM
To: Juan Lang; wine-devel at winehq.org
Subject: Re: CUDA wrapper

 

Well at least it compiled, but it isn't working. We are still getting the
message that the function isn't implemented.



Initializing Nvidia gpu library
cudaMalloc CUDAStream::Allocate failed feature is not yet implemented


Now both cudamalloc and all four cuda stream's, cudaStreamCreate, Destroy,
Query and Synchronize were implemented.
I thought maybe it was because in the spec file I had the cudaStream's as
pointers (ptr) so I switched them to long but ti didn't make a difference.
Originally the argument was "stream" but I can't get any argument but ptr
and long to pass the winegcc for spec files.

http://shelnutt.twomurs.com/patches/cuda/cuda.dll.spec

Does wine need to somehow be made aware of the presence of the cudart.dll.so
file? We tried putting it in both the system32 and the lib folder but it
seems also that maybe WINE needs to be made aware of it?

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080712/69066cef/attachment-0001.htm 

From bunglehead at gmail.com  Sat Jul 12 22:00:45 2008
From: bunglehead at gmail.com (Nikolay Sivov)
Date: Sun, 13 Jul 2008 07:00:45 +0400
Subject: [3/3] gdiplus: Make GdipInvertMatrix test pass on native
In-Reply-To: <1215902537.8831.47.camel@hermes2.karcher.local>
References: <1215897142.11601.9.camel@debian.localdomain>	
	<22821af30807121426o8c00a28s88e7e0fe648ae796@mail.gmail.com>	
	<487923B8.3060205@gmail.com>	
	<22821af30807121455t6a98a0cao927fedf080a928a7@mail.gmail.com>
	<1215902537.8831.47.camel@hermes2.karcher.local>
Message-ID: <48796FDD.7050308@gmail.com>

Michael Karcher wrote:
> Am Samstag, den 12.07.2008, 16:55 -0500 schrieb James Hawkins:
>   
>>>>> -    GdipCreateMatrix2(1.0/9.0, 2.0/9.0, 4.0/9.0, -1.0/9.0, -2.0, -1.0,
>>>>>           
>>> Of course there's only one value of inverted matrix.
>>>       
> Which is not representable as a finite binary fraction.
>
>   
>>> GDI+ uses floating
>>> point values for matrix elements so don't you think the result could be
>>> slightly different due different calculation algorithms?
>>>       
> As they say: Never compare floating point numbers for equality. So I
> understand your point. Especially if unrepresentable values are
> involved.
>
>   
>> If you write and test the results in Windows, you won't have to guess
>> what the results will be.
>>     
> Right. Testing against Windows is the only method of verifying whether
> Wine does the right things, but floating point arithmetic, which is
> inherently prone to rounding errors, should IMHO be accounted for by
> allowing slight variances.
>
>   
>> No I don't think the results will be
>> slightly different.  Higher-precision arithmetic doesn't mean more
>> slop.
>>     
> What do you mean with higher-precision arithmetic? Floating point
> arithmetic *always* means slop, as soon as numbers that can't be written
> as finite binary fractions are involved. In this concrete case, I
> suspect you are right. There is just one obvious algorithm[1] to invert
> a 2x2 Matrix, which is so simple that it cannot be stated in numerically
> non-equivalent ways (remember, a+(b+c) is not necessarily equal to (a
> +b)+c)), so I would expect the results to be really identical on windows
> if the input numbers are small integers. Still, the fractions with nine
> in the denominator make me worry. Couldn't we use a matrix with a
> determinant of 8 or 16 instead of nine? This would make nice floats you
> can definitely compare for equality.
>
> As a side note: I don't like the implementation of m_equalf, as it
> checks for absolute deviation instead of relative deviation. The values
> used have the same order of magnitude as 1, so it does not matter for
> this test. But: This very criterion is also used in in
> GdipIsMatrixInvertible, where I consider it highly questionable, as long
> as it is not backed by API tests.
>   
You're absolutely right. m_equalf id used as a temporary solution just 
to make the test pass with this deviation, which is acceptable in this 
particular initial data, to show that GdipInvertMatrix works in the 
main. But check  in GdipIsMatrixInvertible should be replaced, I'm fully 
agreed here. I'll try to choose appropriate method to do so (using 
Windows test results too of course).
> Nikolay: Please write a test whether the matrix
>   1.0/131072, 2.0/131072, 4.0/131072, -1/131072, 0, 0
> is invertible. According to your criterion, it is *not* invertible, as
> the determinant will be 9.0/17179869184, which is way below 1e-5, but
> this matrix still *is* invertible. What happens on Windows?
>   
On Windows it shows the following:

0.00000000, 32768.000, 65536.000, -16384.000, 0.00000000, 0.00000000

So native criterion differs.
> Regards,
>   Michael Karcher
>
> [1] Which I found (as expected) when looking at dlls/gdiplus/matrix.c
>   


From hongbo_ni at hotmail.com  Sun Jul 13 00:43:14 2008
From: hongbo_ni at hotmail.com (Hongbo Ni)
Date: Sun, 13 Jul 2008 15:43:14 +1000
Subject: user32: Problem using SetClassLongW to subclass	built-in
	control (Edit)
In-Reply-To: <BAY118-W38E9AA34E8675D10515F2094910@phx.gbl>
References: <BAY118-W20A6B8E0937B3AB246C43694960@phx.gbl>
	<BAY118-W52EBAC153ED65A65F593D594910@phx.gbl> 
	<3f4fd2640807100141w203bfe6sef4caf6c28e9b742@mail.gmail.com> 
	<BAY118-W38E9AA34E8675D10515F2094910@phx.gbl>
Message-ID: <BAY118-W268EC5E3B95499DA4FCFF994920@phx.gbl>

Hi Everyone,
 
It turns out my previous patch was not right to solve the problem.
 
After writing a win32 application for debuging the impact of SetClassLongW, 
I found out that something is abnormal in windows.
 
After a built-in class (which has procA and procW) is subclassed by
SetClassLong(Ptr)W(hWnd, GCL_WNDPROC, newProcW);
 
If you create a window of the same built-in class (such as Edit) using CreateWindow(Ex)A,
the created window got it's wnd.procA = class.newProcW. The created window is Ansi.
 
That is right, the newProcW is going to receive Ansi message - [ABNORMAL].
I have captured the debug screen, here is the screenshot
http://www.njstar.com/devimg/SetClassLongW-debug.png
 
Where in Wine, created window is Unicode, with wnd.procW = class.newProcW.
newProcW will only receive Unicode message.
 
That is the difference between Window and Wine regarding to subclass built-in control.
This observation explains exactly what I have seen in my App.
 
With this knowledge it's now easy to create the patch.
 
 
_________________________________________________________________
Windows Live Messenger?treats you to 30 free emoticons -?Bees, cows, tigers and more!
http://livelife.ninemsn.com.au/article.aspx?id=567534
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.winehq.org/pipermail/wine-devel/attachments/20080713/35b743bb/attachment.htm 

From julliard at winehq.org  Sun Jul 13 03:21:05 2008
From: julliard at winehq.org (Alexandre Julliard)
Date: Sun, 13 Jul 2008 10:21:05 +0200
Subject: [2/3] gdiplus: fix GdipPathIterNextMarker behaviour on path
	without markers. fix tests.
In-Reply-To: <4878EBD7.2060808@gmail.com> (Nikolay Sivov's message of "Sat, 12
	Jul 2008 21:37:27 +0400")
References: <1215881764.8936.7.camel@debian.localdomain>
	<22821af30807121024o5810cf33ka81e7393767d2d14@mail.gmail.com>
	<4878EBD7.2060808@gmail.com>
Message-ID: <87bq12jitq.fsf@wine.dyndns.org>

Nikolay Sivov <bunglehead at gmail.com> writes:

> I don't think so. If the call fails testing return value doesn't make 
> any sense. In this case 'result' is uninitialized and remains 
> uninitialized after a call if it fails (here I mean a native too). So 
> why should we check something which has unpredictable value?
> By the way first time I saw this here 
> 8fd6f0e26ae28f2ba4938e2fbcc4851f47baa53c..

The difference is that this was a todo_wine, so it's expected to fail
and we don't want to test uninitialized data since that can cause random
test failures.

In your case the test is expected to succeed, so the only way you'll get
uninitialized data is when the first test fails, and then it doesn't
matter if we get a random second failure, the test failed already.

-- 
Alexandre Julliard
julliard at winehq.org


