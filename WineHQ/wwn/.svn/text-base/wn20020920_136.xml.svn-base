<?xml version="1.0" ?>
<kc>

<title>Kernel Cousin Wine</title>
<author email="vinn@theshell.com">Brian Vincent</author>
<issue num="136" date="09/20/2002"/>
<intro>
 <p>This is the 136th release of the Wine's kernel 
  cousin publication. Its main goal is to distribute widely
  what's going on around Wine (the Un*x Windows emulator).
 </p></intro>


<stats posts="158" size="483" contrib="47" multiples="23" lastweek="19">

<person posts="17" size="67" who="Martin Wilck &lt;Martin.Wilck@Fujitsu-Siemens.com&gt;" />
<person posts="17" size="46" who="Dimitrie O. Paun &lt;dpaun@rogers.com&gt;" />
<person posts="15" size="38" who="Alexandre Julliard &lt;julliard@winehq.org&gt;" />
<person posts="13" size="29" who="Francois Gouget &lt;fgouget@free.fr&gt;" />
<person posts="9" size="71" who="Steven Edwards &lt;Steven_Ed4153@yahoo.com&gt;" />
<person posts="8" size="17" who="=Sylvain Petreolle &lt;spetreolle@yahoo.fr&gt;" />
<person posts="7" size="25" who="steve.lustbader@philips.com" />
<person posts="7" size="14" who="Andriy Palamarchuk &lt;apa3a@yahoo.com&gt;" />
<person posts="5" size="14" who="Jan Kratochvil &lt;short@ucw.cz&gt;" />
<person posts="5" size="13" who="Uwe Bonnes &lt;bon@elektron.ikp.physik.tu-darmstadt.de&gt;" />
<person posts="5" size="12" who="Eric Pouech &lt;eric.pouech@wanadoo.fr&gt;" />
<person posts="4" size="8" who="Raul Dias &lt;chaos@swi.com.br&gt;" />
<person posts="3" size="7" who="P. Christeas &lt;p_christ@hol.gr&gt;" />
<person posts="2" size="9" who="Huw Davies &lt;huw@codeweavers.com&gt;" />
<person posts="2" size="7" who="Casper Hornstrup &lt;chorns@users.sourceforge.net&gt;" />
<person posts="2" size="6" who="Fabian Cenedese &lt;Cenedese@indel.ch&gt;" />
<person posts="2" size="6" who="Michael Stefaniuc &lt;mstefani@redhat.de&gt;" />
<person posts="2" size="4" who="Shachar Shemesh &lt;wine-devel@sun.consumer.org.il&gt;" />
<person posts="2" size="4" who="Dmitry Timoshkov &lt;dmitry@baikal.ru&gt;" />
<person posts="2" size="4" who="Paul Millar &lt;paulm@astro.gla.ac.uk&gt;" />
<person posts="2" size="4" who="Duane Clark &lt;dclark@akamail.com&gt;" />
<person posts="2" size="4" who="Ian D. Stewart &lt;idstewart@compuvative.com&gt;" />
<person posts="2" size="4" who="Jeremy White &lt;jwhite@codeweavers.com&gt;" />
<person posts="1" size="4" who="Mike McCormack &lt;mikem@codeweavers.com&gt;" />
<person posts="1" size="3" who="Chris Thielen &lt;chris@luethy.net&gt;" />
<person posts="1" size="3" who="Jeff Smith &lt;whydoubt@hotmail.com&gt;" />
<person posts="1" size="3" who="Jon &lt;jon_p_griffiths@yahoo.com&gt;" />
<person posts="1" size="3" who="Martin Cracauer &lt;cracauer@cons.org&gt;" />
<person posts="1" size="3" who="Rolf Kalbermatter &lt;r.kalbermatter@hccnet.nl&gt;" />
<person posts="1" size="3" who="Alexander Gottwald &lt;alexander.gottwald@s1999.tu-chemnitz.de&gt;" />
<person posts="1" size="2" who="Jesse Allen &lt;uh_ja@gmx.net&gt;" />
<person posts="1" size="2" who="Igor Izyumin &lt;igor@mlug.missouri.edu&gt;" />
<person posts="1" size="2" who="Rick Romero &lt;rick@valeoinc.com&gt;" />
<person posts="1" size="2" who="Ilja Kamps &lt;ikarus@ikarus.ath.cx&gt;" />
<person posts="1" size="2" who="James Tabor &lt;jimtabor@adsl-64-217-116-74.dsl.hstntx.swbell.net&gt;" />
<person posts="1" size="2" who="Thomas Wickline &lt;twickline2@triad.rr.com&gt;" />
<person posts="1" size="2" who="Bill Medland &lt;billmedland@look.ca&gt;" />
<person posts="1" size="2" who="Vincent Beron &lt;vberon@mecano.gme.usherb.ca&gt;" />
<person posts="1" size="2" who="Tony Lambregts &lt;tony_lambregts@telusplanet.net&gt;" />
<person posts="1" size="2" who="Ann and Jason Edmeades &lt;us@the-edmeades.demon.co.uk&gt;" />
<person posts="1" size="2" who="Gil Hauer &lt;gilh@sympatico.ca&gt;" />
<person posts="1" size="2" who="Juraj Hercek &lt;juraj@syncad.com&gt;" />
<person posts="1" size="2" who="Jon Griffiths &lt;jon_p_griffiths@yahoo.com&gt;" />
<person posts="1" size="1" who="Gyorgy Szombathelyi  &lt;gyurco@freemail.hu&gt;" />
<person posts="1" size="1" who="Jacek Bator &lt;jbator@man.poznan.pl&gt;" />

</stats>







<section
	title="News: ZDNet User Poll, LinuxJournal Review" 
	subject="News"
	archive=""
	posts="2"
	startdate="09/14/2002"
	enddate="09/20/2002"
>
<topic>News</topic>
<p>It looks like I missed 
<a href="http://techupdate.zdnet.com/techupdate/stories/main/0,14179,2861621,00.html">a review</a> of CrossOver Office
from back in April.  
It seems ZDNet's informal web poll at the time produced the following
results:</p>
<quote who="ZDNet"><p>
Would your company switch its desktop PCs from Windows to Linux if Windows apps could run on Linux? Of the more than 15,000 respondents, 58 percent said they'd make the switch immediately; another 25 percent said they'd consider dumping Windows in favor of Linux within a year.</p> </quote>

<p>The author of the original article, Rich Castagna, wrote a
followup <a href="http://techupdate.zdnet.com/techupdate/stories/main/0,14179,2878206,00.html">discussing</a> it.  The numbers are pretty dramatic, even
more so if you think about what the response would have been only a
few years ago.  Of course, I don't place much more confidence in ZDNet
polls than I do Slashdot, but it's interesting to see.</p>

<p>My all-time favorite tech magazine, Linux Journal, has 
<a href="http://www.linuxjournal.com/article.php?sid=6153&amp;mode=thread&amp;order=0&amp;thold=0#comments">a review</a> of
CrossOver Office.  It goes into detail on installation and has bunch
of screenshots.  The author, Jeffrey McDonald, was particularly glad
to be able to run Outlook.</p>
</section>

<section 
	title="NetAPI32.DLL Work" 
	subject="An attempt at LogonUser()"
	archive="http://www.winehq.org/hypermail/wine-devel/2002/09/0448.html" 
	posts="15" 
	startdate="09/16/2002"
	enddate="09/18/2002" 
>
<topic>Integration</topic>
<p>Martin Wilck asked what was being done with
regards to the netapi32.dll:</p>
<quote who="Martin Wilck"><p>
The app I am trying to port with winelib makes heavy use of calls to
the netapi32 DLL to check for permissions, etc.
</p><p>
I just took a glance over the spec file and found it consists mainly of
stubs.
</p><p>
Is anybody (Mike?) currently working on netapi32, are there plans to
implement larger parts, what are the main problems?
</p><p>
I guess this points towards the general Wine/Samba integration that Mike
has been talking about earlier...
</p></quote>

<p>Andriy Palamarchuk admitted to taking a stab at it:</p>
<quote who="Andriy Palamarchuk"><p>
 I'm now working to implement some netapi32 calls.
 My implementations use information, provided by Wine
 or give some dummy values.
 Do you think this will be enough for your application? 
 You can give me the list of calls your application
 uses - I'll give preference to implementing them.
</p><p>
 Sure the right approach would be to integrate it with
 Samba but I was not going to do it right now.
</p></quote>

<p>Martin explained exactly what he was looking for:</p>
<quote who="Martin Wilck"><p>
identification and access right verification.
Currently I rather tend to replace all this by "native unix"
verification. I actually don't think it's a good idea for my app to
bypass the Unix system. 
</p><p>
In this context, one idea would be to simply route requests like these
to Unix services like PAM. There may even be a samba Authorization
service for PAM installed. That way it might actually be possible to map
authorization issues like this correctly from wine to e.g. a PDC, but
through the native Unix interface, and without creating a Samba+Wine
"monster" app. This is far future of course.
</p></quote>

<p>Two days later Martin posted a patch integrating Wine with
PAM for authentication.  He asked for comments:</p>
<quote who="Martin Wilck"><p>
Log Message:</p>
<ul><p>
        Attempt to code LogonUser() using an interface between Wine and
        the PAM library.
</p><p>        
        Normally, this will validate Unix username/password pairs.
        If PAM is suitably configured (for using winbind), usernames
        and passwords can be obtained from a Windows Domain controller.
</p><p>
        It is even possible for system administrators to setup a special
        authorization scheme for wine by editing "/etc/pam.d/wine".
</p></ul>
<p>
Status: </p>
<p><ul>
	Compiles, simple (non-unicode) test program authenticates 
        successfully against Unix and Windows PDC accounts 
	(and fails with wrong password).
</ul></p>
<p>
Fixmes:</p>
<ul><p>
        ** LogonUserW() is untested, and I have little experience with 
        Unicode transformations in wine. Be prepared for bugs there.
</p><p>
	The LICENSE of PAM is rather unclear - on 
	<a href="http://sourceforge.net/projects/pam">
	http://sourceforge.net/projects/pam</a>
	it says "BSD License, GNU General Public License (GPL)".
	But I expect no problem with Wine linking against it.
</p><p>
        The flags to LogonUser() are ignored, and the resulting Token
        is meaningless because wine currently has no concept of security
        tokens. 
</p><p>
	To make this really useful, more support for security issues needs to be
	implemented - but this function is (almost) sufficient for me :-)
</p><p>
        There are no security checks on the parameters (are they null-terminated?),
        because I'm not sure how to do that (enforce maximum length? If yes, which?).
</p><p>
        Perhaps the code should have gone into security.c rather than advapi.c.
        Or does the whole stuff belong somewhere in ntdll?
</p></ul></quote>

<p>The next day Andriy 
 <a href="http://www.winehq.org/hypermail/wine-patches/2002/09/0175.html">submitted</a>
  some work that implemented <quote who="Andriy Palamarchuk">
 NetQueryDisplayInformation, NetUserGetInfo, created
 conformance tests, other netapi32 bug fixes and
 improvements.</quote></p>

</section>



<section 
	title="WinASPI.DLL Work" 
	subject="winaspi + libscg"
	archive="http://www.winehq.org/hypermail/wine-devel/2002/09/0421.html" 
	posts="3" 
	startdate="09/17/2002"
	enddate="09/18/2002" 
>
<topic>Integration</topic>

<p>Gy&#246;rgy Szombathelyi is working on rewriting wnaspi.dll to work with
an existing lower level library.  ASPI is the Advanced SCSI Programming
Interface and used as an interface between host adapters and device
drivers.  Gy&#246;rgy was looking for some apps
to test some of the more obscure parts,
<quote who="Gyorgy Szombathelyi">
I'm working on a rewrite of the winaspi module, using Joerg Schilling's 
libscg. (libscg is a scsi transport library, with support of many platforms, 
cdrecord, cdrdao uses it). I'm nearly finished, but I could test only 
winaspi32 (with nero and isobuster), I need a software that uses the 16 bit 
aspi interface to test it. Anyone knows such a software that uses wnaspi.dll?
</quote></p>

<p>Tony Lambregts didn't think it was too important,
<quote who="Tony Lambregts">
I don't think you will find too many of this type (16 bit software using 
aspi) due to the fact that the aspi interface is newer than the 32 bit api.
</quote>  Dimi Paun agreed, 
<quote who="Dimitrie Paun">
Yeah, 16bit is rather dead, just go ahead with your changes, and if they
break anything, you'll find an application to test with... :)</quote>
</p>

<p>A few days later Gy&#246;rgy 
<a href="http://www.winehq.org/hypermail/wine-patches/2002/09/0182.html">
submitted</a> a patch. </p>

</section>






<section
        title="Mixing Unix and Windows Calls"
        subject="more MSVCRT fun"
        archive="http://www.winehq.org/hypermail/wine-devel/2002/09/0417.html"
        posts="2"
        startdate="09/17/2002"
        enddate="09/18/2002"
>
<topic>Winelib</topic>
<p>
Steve Lustbader had a problem clashes between Windows and Unix function
calls:</p>
<quote who="Steve Lustbader"><p>
In my winelib app, most of the cpp files use MSVCRT
only, and thanks to Martin I've gotten those to compile.
</p><p>
 A couple of my source files, however, use a mix of MSVCRT
 and standard glibc (fork, exec, etc).  When I include unistd.h,
 lots of function definitions conflict with msvcrt/io.h.  How can
 I get this mix to compile?  Does the @ignore in the spec file
 trick from the Winelib user's guide still apply, or has it been
 changed (or removed altogether)?
</p></quote>

<p>Martin Wilck suggested trying:</p>
<quote who="Martin Wilck"><p>
Here's what I would try: Encapsulate the Unix-specific calls in
a separate source file(s) that compiles against the system headers,
wrap the Unix calls in functions exported by these files, and then
"simply" link the winelibwise and unixwise parts of your application.
</p><p> 
Dividing the two worlds over source files should have other
benefits as well, softwaredesignwise :-)
</p></quote>

</section>



<section 
	title="No More Perl Regression Tests" 
	subject="Re: [Bug 529] - Running Perl regression tests on Windows"
	archive="http://www.winehq.org/hypermail/wine-devel/2002/09/0433.html" 
	posts="2" 
	startdate="09/18/2002"
	enddate="09/18/2002" 
>
<topic>Testing</topic>
<p>Steven Edwards requested comments about closing out
<a href="http://bugs.winehq.org/show_bug.cgi?id=529">bug 529.</a>  
It seems through private 
correspondence it was decided to just close it out
and not deal with the perl framework any more.  Steven's
explanation was:</p>
<quote who="Steven Edwards"><p>
 This bug can be closed as Alexandre has said that
 the regression suite will be
 dropping perl as no one uses it and its a bitch to
 get working on Windows. Trust
 me I have tried
</p></quote>

</section>








</kc>
