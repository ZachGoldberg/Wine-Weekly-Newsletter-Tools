<?xml version="1.0" ?>
<kc>

<title>Wine Traffic</title>

<author contact="http://www.theshell.com/~vinn">Brian Vincent</author>
<issue num="281" date="07/01/2005" />
<intro> <p>This is the 281st issue of the Wine Weekly News publication.
Its main goal is to lose keys. It also serves to inform you of what's going on around Wine. Wine is an open source implementation of the Windows API on top of X and Unix.  Think of it as a Windows compatibility layer.  Wine does not require Microsoft Windows, as it is a completely alternative implementation consisting of 100% Microsoft-free code, but it can optionally use native system DLLs if they are available.   You can find more info at <a href="http://www.winehq.org">www.winehq.org</a></p> </intro>
<stats posts="153" size="550" contrib="63" multiples="34" lastweek="29">

<person posts="10" size="36" who="Dmitry Timoshkov" />
<person posts="9" size="26" who="Saulius Krasuckas" />
<person posts="8" size="22" who="Michael Jung" />
<person posts="6" size="14" who="Alexandre Julliard" />
<person posts="5" size="17" who="Oliver Stieber" />
<person posts="5" size="14" who="Andreas Mohr" />
<person posts="5" size="13" who="Mike McCormack" />
<person posts="4" size="15" who="Uwe Bonnes" />
<person posts="4" size="13" who="Vijay Kiran Kamuju" />
<person posts="4" size="12" who="Tom Wickline" />
<person posts="4" size="12" who="Stefan D&#246;singer" />
<person posts="4" size="12" who="Jacek Caban" />
<person posts="4" size="11" who="Gerald Pfeifer" />
<person posts="4" size="11" who="Vitaliy Margolen" />
<person posts="3" size="46" who="Anderson Lizardo" />
<person posts="3" size="17" who="Mitchell Mebane" />
<person posts="3" size="12" who="Chris Morgan" />
<person posts="3" size="9" who="Jonathan Ernst" />
<person posts="3" size="9" who="Hans Leidekker" />
<person posts="3" size="9" who="Robert Shearman" />
<person posts="3" size="8" who="Jeremy Newman" />
<person posts="3" size="8" who="Ivan Gyurdiev" />
<person posts="2" size="22" who="Holly Bostick" />
<person posts="2" size="11" who="Vikram Kumar" />
<person posts="2" size="9" who="Robert Reif" />
<person posts="2" size="8" who="=?ISO-8859-1?Q?Alex_Villac=ED=ADs_Lasso?=" />
<person posts="2" size="7" who="Christoph" />
<person posts="2" size="7" who="Jeremy White" />
<person posts="2" size="6" who="Marcus Meissner" />
<person posts="2" size="6" who="Paul van Schayck" />
<person posts="2" size="5" who="Paul Vriens" />
<person posts="2" size="5" who="Mike Hearn" />
<person posts="3" size="7" who="Dimi Paun" />
<person posts="2" size="5" who="Chuck Hall" />
<person posts="1" size="7" who="Giuseppe AMATO" />
<person posts="1" size="5" who="=?UTF-8?B?QWxleCBWaWxsYWPDrcKtcyBMYXNzbw==?=" />
<person posts="1" size="5" who="Paul Vriens" />
<person posts="1" size="4" who="Vitaly Lipatov" />
<person posts="1" size="4" who="=?ISO-8859-1?Q?J=FCrgen_Schmied?=" />
<person posts="1" size="3" who="Tony Lambregts" />
<person posts="1" size="3" who="Fernando Vilas" />
<person posts="1" size="3" who="Christian Costa" />
<person posts="1" size="3" who="Phil Krylov" />
<person posts="1" size="3" who="Gerold J. Wucherpfennig" />
<person posts="1" size="3" who="Michael Stefaniuc" />
<person posts="1" size="3" who="Ove Kaaven" />
<person posts="1" size="2" who="Rolf Kalbermatter" />
<person posts="1" size="2" who="Ivan Leo Puoti" />
<person posts="1" size="2" who="(jakov)" />
<person posts="1" size="2" who="Brian Vincent" />
<person posts="1" size="2" who="James Hawkins" />
<person posts="1" size="2" who="Michael =?iso-8859-1?q?B=FCttner?=" />
<person posts="1" size="2" who="Glen Kaukola" />
<person posts="1" size="2" who="Joe Baker" />
<person posts="1" size="2" who="Shachar Shemesh" />
<person posts="1" size="2" who="Rolf Kalbermatter" />
<person posts="1" size="2" who="Scott Ritchie" />
<person posts="1" size="2" who="Juan Lang" />
<person posts="1" size="2" who="Joseph Garvin" />
<person posts="1" size="2" who="Sascha Cunz" />
<person posts="1" size="1" who="Serge NOEL" />

</stats>
<section 
	title="News: Wine-20050628, CXOffice &amp; Macs; Status Updates"
	subject="News"
	archive="http://www.codeweavers.com/about/general/press/?id=20050622"
	posts="3"
	startdate="06/25/2005"
	enddate="07/01/2005"
>
<topic>News</topic>
<p>
First off, this week Alexandre dumped wine-20050628 upon the world.
The release included these notable changes:</p>
<quote who="Alexandre Julliard"><p>
WHAT'S NEW with Wine-20050628: (see 
<a href="http://cvs.winehq.com/cvsweb/wine/ChangeLog?rev=1.95&amp;content-type=text/x-cvsweb-markup">ChangeLog</a>
 for details)
<ul>
        <li> Configuration settings moved to the registry.</li>
        <li> Graphical Wine configuration tool is now enabled.</li>
        <li> More MSI and OLE improvements.</li>
        <li> Reorganisation of the DirectDraw directory.</li>
        <li> Initial support for webcams.</li>
        <li> Lots of bug fixes.</li></ul>
</p></quote>

<p>Last week I completely overlooked a press release from CodeWeavers and
it's definitely worthy of attention.  With MacOS moving to Intel it opens
a door for Wine to be ported and used for porting.  CodeWeavers
<a href="http://www.codeweavers.com/about/general/press/?id=20050622">announced</a>
a new initiative in that direction.  From the press release:</p>
<quote who="CodeWeavers">
<p>
CodeWeavers, Inc., the leading Windows-to-Linux software developer, today 
announced a major expansion of its software porting capabilities to include 
support for Windows-to-Macintosh application porting. The new capabilities, 
made possible by Apple's eventual move to Intel x86 chips, promises to 
significantly reduce the time and cost of developing Mac versions of Windows 
software, opening new possibilities for mid-tier Windows software companies.
</p><p>
    "Apple's decision to shift to Intel chips is good news for many Windows 
developers who, for reasons of time and/or expense, have never created Mac
 versions of their key applications," said Jeremy White, CEO of CodeWeavers. 
"CodeWeavers can give these developers a low-cost and near-instant path to 
market through the use of CrossOver technology."</p></quote> 

<p>Below you'll find the beginning of a thread that appeared on the Darwine
mailing list concerning this.  All in all this is pretty exciting and it
offers a lot of interesting possibilities for Wine and CodeWeavers.</p>

<p>Tom Wickline has gone through and updated Wine's 
<a href="http://www.winehq.com/site/status">status pages</a> to reflect 
work that's been done over the past six months.  As usual, these are rough
estimates of how well things are implemented.  If you look at the 
status page <a href="http://www.winehq.com/site/status_changelog">changelog</a>
to get a feel for what's been worked on.  Wine development is steamrolling
ahead with 10MB of patches hitting the mailing list in June alone.  
Historically Wine, and most open source projects, usually experiences a lull 
in patches during June, July and August but that definitely isn't the case
this year.
</p>

</section>
<section 
	title="The config File Has Died!"
	subject="wine/documentation/samples config"
	archive="http://www.winehq.com/hypermail/wine-devel/2005/06/0665.html"
	posts="1"
	startdate="06/28/2005"
>
<topic>Configuration</topic>
<p>At <a href="?issue=272">WineConf '05</a> Alexandre set a deadline for
removing the config file: June 30th, 2005.  The changes to start that 
process began in earnest about three weeks ago.  This week the config
file died a quiet death in time for the CVS drop of wine-20050628:</p>
<quote who="Alexandre Julliard"><p>
<table>
<tr><td>ChangeSet ID:</td><td>	18504</td></tr>
<tr><td>CVSROOT:</td><td>	/opt/cvs-commit</td></tr>
<tr><td>Module name:</td><td>	wine</td></tr>
<tr><td>Changes by:</td><td>	julliard@wine.codeweavers.com	2005/06/28 08:55:21</td></tr></table></p><p>

Removed files:
<ul>
	documentation/samples: config </ul></p><p>

Log message:
<ul>
	Get rid of the sample configuration file.</ul></p><p>

Patch: <a href="http://cvs.winehq.org/patch.py?id=18504">
http://cvs.winehq.org/patch.py?id=18504</a></p>
</quote>

<p>We've been covering this topic for about two years since the work on
winecfg began.  It's great to see a major piece of Wine's usability
fall into place.  In fact, the commit date was even two days earlier
than the deadline.</p>

<p>So what does that mean for anyone using Wine?  Well, be careful right
now.  There's still code in Wine that parses the old <tt>~/.wine/config </tt>,
and those entries still get read into the 
<tt>HKLM\Software\Wine\Wine\Config</tt>
branch.  However, those entries are dead.  All of the real Wine settings 
have been migrated elsewhere in the registry.  To configure Wine, your first
stop should be to check out the <tt>winecfg</tt> program to see if it can make a
change in the registry for you.  If you feel like changing registry
settings using <tt>regedit</tt>, you should first look in 
<tt>HKCU\Software\Wine </tt>
since many settings have been migrated there. </p> 

<p>The next work to be done in this area will remove the actual code
that reads the config file.  In the meantime, if you have a config file
you'll want to archive the settings somewhere and then ditch it.</p>

</section>
<section 
	title="CodeWeavers &amp; Darwine"
	subject="Slightly OT; we've announced a roadmap to the Mac"
	archive="http://sourceforge.net/mailarchive/forum.php?thread_id=7572412&amp;forum_id=26200"
	posts="9"
	startdate="06/22/2005"
	enddate="06/24/2005"
>
<topic>Ports</topic>
<p>On the 
<a href="http://darwine.opendarwin.org/">Darwine</a> 
mailing list, Jeremy White announced the following
concerning a Mac port:</p>
<quote who="Jeremy White"><p>
 I just wanted to let folks know that we've officially
 announced that we'll be providing CrossOver Office for the
 Mac.  We will likely be using/supporting/aiding + abetting
 the Darwine project/process as our way of achieving that.
</p><p> 
 This is pretty exciting for us; we've done a lot of
 Mac work through the years, and have some Mac bigots on
 staff.  We'd just never seen a way to make a Mac version
 of CrossOver make business sense...until now.
</p><p> 
 We're still figuring out just how we want to attack this,
 and so on (and waiting for our dev kit to arrive &lt;g&gt;)
 Right now, we're trying to encourage
 ISVs to partner with us; the more interest we can generate
 now, the more energy we can put into this prior to the
 official Intel/Mac launch.
</p><p> 
 But I figured I'd drop a note to let folks know,
 and to say thank you for all the work you've put in.
 I hope we can pitch in and help out!</p></quote>

<p>The Darwine folks seemed happy to have CodeWeavers support
and by the end of the week some CodeWeavers staff were discussing
items on the mailing list.</p>
</section>
<section 
	title="UnixFS for Windows Desktop"
	subject="unixfs registered by default now in cvs"
	archive="http://www.winehq.com/hypermail/wine-devel/2005/06/0832.html"
	posts="3"
	startdate="06/30/2005"
>
<topic>Configuration</topic>
<p>Michael Jung announced a new addition to all of Wine's controls:</p>
<quote who="Michael Jung"><p>
With the current CVS version, the unixfs shell namespace extension is now 
registered by default at the desktop. So if you do a 'regsvr32 shell32' you 
will see the unix filesystem in the file dialogs. It's probably still quite 
buggy though. It would be cool if we could get the biggest problems sorted 
out before the next release. So if you have an application, which doesn't 
work due to unixfs, please report to wine-devel.
</p><p>
If you don't want to use unixfs, because you don't like it or because it 
totally breaks your setup, you can delete the following registry-key and you 
should be back to the old behaviour:
</p><p>
<tt>HKLM\Software\Microsoft\Windows\CurrentVersion\Explorer\Desktop\Namespace\ 
 {9D20AAE8-0625-44B0-9CA7-71889C2254D9}</tt>
</p><p>
This will also help you to figure out if a problem is due to unixfs. If you do 
'regsvr32 shell32' again, the key will be re-created.</p></quote>

<p>Dimi wondered why registering it was necessary,
<quote who="Dimitrie Paun">
This is fantastic! Way to go Michael, you've nailed an important
integration issue. BTW, if it is registered by default, why do we 
need to 'regsvr32 shell32'?</quote></p>

<p>Michael explained only existing users of Wine required it,
<quote who="Michael Jung">
 Thanks. If you start without a .wine directory, you won't need the 'regsvr32 
 shell32'. So for a fresh install, you will end up with unixfs. But if you 
 already have a '.wine' directory and want unixfs to be registered, you'll 
 have to do it by hand. 
</quote></p>


</section>




<section 
	title="Microsoft HTML Help"
	subject="Anybody looking for a pet Wine project?"
	archive="http://www.winehq.com/hypermail/wine-devel/2005/06/0824.html"
	posts="3"
	startdate="06/30/2005"
>
<topic>MSHTML</topic>
<p>Jacek Caban has been working on implementing MSHTML for a while now.
He's refocused his efforts on integrating with a Linux build of Mozilla.
The way to do that relies on the XEMBED protocol for X.  However there's
definitely some issues there.  We covered that in past issues.  This
week Mike McCormack brought up something that could be developed in
parallel:</p>
<quote who="Mike McCormack">
<p>
If anybody is looking for a small project, I've got just the thing for you!
</p><p>
hh.exe and hhctrl.ocx are two components of the Microsoft HTML help 
engine.  hh.exe is a small wrapper around hhctrl.ocx, which is the HTML 
help viewer.
</p><p>
hhctrl.ocx embeds IE and feeds it HTML documents decoded from .chm files 
with itss.dll (the Infotech storage system).  Implementing hhctrl.ocx 
would make an excellent test case for IE embedding that Jacek is working 
on, and for itss.dll.
</p><p>
So most of the components are already in place (or will be soon) to make 
HTML help work... any takers to fill in the dots?
</p><p>
The reward is, like most of Wine code, to say "I made that work" :)
</p><p>
Let me know if you're interested.
</p></quote>

<p>Jacek described some more details about how to tackle it:</p>
<quote who="Jacek Caban"><p>

I think it will be great to have it done. I'd like to
point out one thing for the way to implement it:
the most important is to have it working with
native shdocvw.dll and mshtml.dll. It won't work
with builtin in their current state, but it
will be fixed soon and I believe it can be in CVS
even if it doesn't work without these dlls.
While implementing then we shouldn't pay too much
attention to get it working with Mozilla ActiveX
Control - it will never work perfectly and I hope
to get rid of its dependency soon. Of course you
may get it working, but, as my tests show, it's
far from compatible with MS. Also, we need to
use itss.dll, which is impossible with Mozilla ActiveX
(I'm not sure if Mozilla has support for chm protocol,
but even if so it's worse to use it).
</p><p>
About implementing hh.exe... it seems to be
pretty easy. Attached is (not tested) implementation:-)
</p><p>
Another related idea is, as I have spoken with
Mike on irc, to use html help in winecfg. It looks
like a nice way to have a complex and integrated
help. This would mean that we need to implement
the chm compiler. To do so we may use chmlib:
<a href="http://66.93.236.84/~jedwin/projects/chmlib/">
http://66.93.236.84/~jedwin/projects/chmlib/</a>
that Mike used in itss to decompress chm.
</p><p>
As a conclusion: it would be really good to have
this working in Wine. It uses most of IE's related API
(I didn't mention URLMoniker here, which also needs
some work) and getting it to work out of box will be
a great test for Wine.
</p></quote>

<p>The hh.exe program Jacek mentioned is simply a wrapper around the
hhctrl.ocx control:</p>
<quote who="Jacek Caban"><p>
<code>
#include &lt;windows.h&gt;<br /><br />

typedef int WINAPI DOWINMAIN(HMODULE hMod, LPSTR cmdline);<br /><br />

int WINAPI WinMain(HINSTANCE hInst, HINSTANCE hPrevInst, LPSTR cmdline, int cmdshow)<br />
{
<ul><code>
    HMODULE hModule;<br />
    DOWINMAIN *doWinMain;<br /><br />

    hModule = LoadLibrary("hhctrl.ocx");<br />
    doWinMain = GetProcAddress(hModule, "doWinMain");<br /><br />

    return doWinMain(hInst, cmdline);</code></ul>
}</code></p></quote>

</section>

<section 
	title="Summer of Code Results"
	subject="Follow up to Google's Summer of Code"
	archive="http://www.winehq.com/hypermail/wine-devel/2005/06/0776.html"
	posts="1"
	startdate="06/28/2005"
>
<topic>Project Management</topic>
<p>Jeremy White announced the status of Google's Summer of Code.
We still haven't seen the details yet or who will be working with
Wine.  In the meantime, Jeremy outlined the process they went
through:</p>
<quote who="Jeremy White"><p>


As I'm sure you all know, Google has now accepted 6 students
to work on projects for Wine.
</p><p>
Alexandre, Dan Kegel, Lionel Ulmer, Dimi O'Paun and I worked on
the Wine committee that reviewed the applications, and we were all
impressed by the depth and quality of the applications, and we're
excited to have 6 fresh new workers on Wine.
</p><p>

We're working right now on connecting these 6
students with their mentors; we hope to
announce more details once we've made those
connections.
</p><p>

To be honest, we're running a bit behind here;
I think Google jumped into this without being as
prepared as you might otherwise hope, and there
have been challenges in figuring this all out.
(We're still largely clueless about the responsibilities
of mentors from Google's perspective, for example).
</p><p>

So, thanks to everyone that submitted a proposal.
</p><p>

I'd particularly like to thank those people that
submitted a great proposal and were not accepted.
</p><p>

To be quite honest, we were disappointed that Google only
selected 6 applicants; we put forward 18 different
applications that we thought were all worthy of funding.
</p><p>

So, thanks again to everyone, and most of all,
thanks to Google for spurring Wine development!


</p></quote>
</section>
<section 
	title="Google's Earth"
	subject="Google Earth"
	archive="http://www.winehq.com/hypermail/wine-devel/2005/06/0782.html"
	posts="1"
	startdate="06/28/2005"
>
<p>Google released a new application this week and apparently it works
pretty good with Wine.  I tried to download it and try it, but apparently
it's still under a limited beta test.  Jonathan Ernst reported:</p>
<quote who="Jonathan Ernst"><p>

I just wanted to let you know that the new Google Earth application is
working quite well under Wine. There is only an issue with the menus
disappearing under the pictures but it is very promising.
</p><p>
I wrote a message to google to let them know about it (they might want
to add that their application can work on other OSes than Windows).
</p><p>
Links:
<ul>
<li><a href="http://earth.google.com">
http://earth.google.com</a></li>
<li><a href="http://appdb.winehq.org/appview.php?appId=2292">
http://appdb.winehq.org/appview.php?appId=2292</a></li>
<li><a href="http://slashdot.org/articles/05/06/28/1733229.shtml?tid=217&amp;tid=95&amp;tid=159">
http://slashdot.org/articles/05/06/28/1733229.shtml?tid=217&amp;tid=95&amp;tid=159
</a></li></ul></p></quote>

<p>This comes on the heels of another Google application released last year
that also works great under Wine: 
<a href="http://www.picasa.com/">Picasa</a>.
</p>
</section>
<section 
	title="World of Warcraft Broken"
	subject="World of Warcraft"
	archive="http://www.winehq.com/hypermail/wine-devel/2005/06/0451.html"
	posts="21"
	startdate="06/14/2005"
	enddate="06/29/2005"
>
<topic>Fixes</topic>
<p>
Someone wrote in to report World of Warcraft was broken due to a patch
released by Blizzard:</p>
<quote who="Darckness"><p>
It's me again.  The latest WoW patch (1.5.1) broke stuff again, and now I'm 
unable to click on anything outside of menu items in game.  The issue seems to 
be related to camera angle, as I am able to click on items/people when I have 
my camera positioned just right.  It's basically unplayable at the moment 
though.
</p><p>
Anyway, I'd appreciate it if one of the OpenGL/D3D guys (it's most likely 
something that would be easily fixed by one of you) could take a look at it if 
they have some free time.</p></quote>

<p>Raphael Junqueira looked at it and figured out it really wasn't a
Wine problem, but a misbehaving application:</p>
<quote who="Raphael Junqueira"><p>

Well cedega seems to have the same problem (google) and they fixed it using
specific memory layout for WoW (mmap begins at 0x10000000)
Seems more a WoW bug than wine/cedega bug :)</p></quote>


<p>Ove K&#229;ven recognized the problem as well:</p>
<quote who="Ove Kaaven"><p>


It looks like a game bug related to virtual memory to me, and it's
possible to do a couple of configuration changes in Cedega to provoke
different virtual memory layouts, which apparently makes a difference.
Exactly why, I don't know. Since workarounds exist for now, and it's not
a simple bug to track down, and it's possible Blizzard may simply fix
the bug themselves in a future update, this is not important enough that
I've been told to drop my current tasks and do an in-depth investigation
of this instead.</p></quote>

<p>
Christoph Rudorff found an ugly workaround:</p>
<quote who="Christoph Rudorff"><p>

To me it looks like an overoptimized geometry problem. As long there is
only sky and no terrain or building behind the objects, you can klick
them. This is mostly the case, when you look up. Just like users reported.
</p><p>
I just wrote a lousy mmap wrapper which sets start to 0x10000000 . This
works for me with wine 20050601 and the latest from cvs.</p></quote>

<p>Aric Cyr found a different one:</p>
<quote who="Aric Cyr"><p>

Also, there is an interesting workaround for the clicking problem as well on
the Gentoo forums.  Seems to be working for the majority of people
(including myself).  It seems to reaffirm that the problem is indeed
the memory layout.
<ul>   <a href="http://forums.gentoo.org/viewtopic-p-2509340.html#2509340">
   http://forums.gentoo.org/viewtopic-p-2509340.html#2509340</a></ul></p>
</quote>
<p>Christoph went back and looked at it again and reported a similar
fix floating around:
</p><quote who="Christoph Rudorff"><p>
More interesting:
<a href="http://forums.gentoo.org/viewtopic-t-246098-postdays-0-postorder-asc-start-200.html?sid=3afd22e0a94b246c583b2d2bd043712f">
http://forums.gentoo.org/viewtopic-t-246098-postdays-0-postorder-asc-start-200.html?sid=3afd22e0a94b246c583b2d2bd043712f</a></p><p>

Gamers are playing with lib. wrapper ... just like me!
But I came to the same conclusion:
<ul><code>
static void initialize() __attribute__ ((constructor));<br /><br />

static void initialize() {
<ul><code>
       printf("Hurra !!!\n");<br />
       // _mmap = dlsym(RTLD_NEXT, "mmap");</code></ul>
}</code></ul></p><p>

Finally it is the printf which does the magic and not the wrapped mmap! The
above example also worked for me. Can we still solve this problem with
logic?
</p></quote>

<p>Mike Hearn thought it was just covering up a different problem,
<quote who="Mike Hearn">

Hehe, I highly doubt it's the printf. More likely, the LD_PRELOADed shared
library is modifying the address space in such a way that the WoW bug is
no longer triggered. I expect you could put anything there (that won't be
optimised out) and it'll still work.</quote></p>

<p>A newer patch came out from Blizzard, but apparently it didn't fix
the memory bug.</p>

</section></kc>
