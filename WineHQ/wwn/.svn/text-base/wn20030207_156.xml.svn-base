<?xml version="1.0" ?>
<kc>

<title>Kernel Cousin Wine</title>

<author email="vinn@theshell.com">Brian Vincent</author>

<issue num="156" date="02/07/2003" />

<intro>
<p>This is the 156th release of the Wine's kernel cousin publication. 
Its main goal is to subvert the dominant paradigm that PC applications
must be run on a Microsoft operating system.
It also serves to inform you of what's going on around Wine (the Un*x 
Windows emulator).</p>
</intro>



<stats posts="286" size="926" contrib="78" multiples="42" lastweek="37">

<person posts="37" size="135" who="Dan Kegel" />
<person posts="27" size="69" who="Dimitrie O. Paun" />
<person posts="14" size="37" who="Sylvain Petreolle" />
<person posts="13" size="87" who="Michael Stefaniuc" />
<person posts="10" size="32" who="Tony Lambregts" />
<person posts="10" size="25" who="Eric Pouech" />
<person posts="8" size="22" who="Francois Gouget" />
<person posts="8" size="21" who="Dmitry Timoshkov" />
<person posts="8" size="19" who="Duane Clark" />
<person posts="8" size="19" who="Shachar Shemesh" />
<person posts="7" size="22" who="Steven Edwards" />
<person posts="6" size="22" who="Scott Jackson" />
<person posts="6" size="15" who="Mike Hearn" />
<person posts="6" size="13" who="Lionel Ulmer" />
<person posts="6" size="15" who="Marcus Meissner" />
<person posts="5" size="21" who="Tom Wickline" />
<person posts="5" size="14" who="David Fraser" />
<person posts="5" size="11" who="Jeremy White" />
<person posts="4" size="48" who="Mathew McBride" />
<person posts="4" size="14" who="Geoff Thorpe" />
<person posts="4" size="12" who="Martin Wilck" />
<person posts="4" size="10" who="Mike Hearn" />
<person posts="6" size="13" who="Patrik Stridvall" />
<person posts="3" size="14" who="Christian Costa" />
<person posts="3" size="10" who="Thomas Mertes" />
<person posts="3" size="9" who="Kristoffer Ericson" />
<person posts="3" size="8" who="Rein Klazes" />
<person posts="3" size="8" who="Uwe Bonnes" />
<person posts="3" size="8" who="Ulrich Weigand" />
<person posts="3" size="7" who="Vincent Beron" />
<person posts="2" size="8" who="Raphael Junqueira" />
<person posts="2" size="8" who="Gregory M. Turner" />
<person posts="2" size="5" who="Alexandre Julliard" />
<person posts="2" size="5" who="Hetz Ben-Hamo" />
<person posts="2" size="4" who="(Warren_Baird)" />
<person posts="2" size="4" who="Felipe W Damasio" />
<person posts="2" size="4" who="Roger Young" />
<person posts="2" size="4" who="David Laight" />
<person posts="2" size="4" who="Gerald Pfeifer" />
<person posts="2" size="3" who="Hetz Ben Hamo" />
<person posts="2" size="3" who="Auge Mike" />
<person posts="1" size="5" who="Chris Tooley" />
<person posts="1" size="5" who="(aaronvaldes)" />
<person posts="1" size="3" who="(r.young)" />
<person posts="1" size="3" who="Paul Millar" />
<person posts="1" size="3" who="Dave Miller" />
<person posts="1" size="3" who="CC DBM" />
<person posts="1" size="3" who="Rick Romero" />
<person posts="1" size="3" who="Peter Hunnisett" />
<person posts="1" size="3" who="Sander van Leeuwen" />
<person posts="1" size="2" who="robert w hall" />
<person posts="1" size="2" who="Boris" />
<person posts="1" size="2" who="Mike McCormack" />
<person posts="1" size="2" who="Rolf Kalbermatter" />
<person posts="1" size="2" who="Huw D M Davies" />
<person posts="1" size="2" who=" (Dietrich Teickner)" />
<person posts="1" size="2" who="Andrew Hughes" />
<person posts="1" size="2" who="Dave" />
<person posts="1" size="2" who="Joerg Mayer" />
<person posts="1" size="2" who="Johan Gill" />
<person posts="1" size="2" who="Jeremy Newman" />
<person posts="1" size="2" who="Keith Matthews" />
<person posts="1" size="2" who="Fabian Cenedese" />
<person posts="1" size="2" who="David Filskov" />
<person posts="1" size="2" who="Phil Bordelon" />
<person posts="1" size="2" who="Brian Vincent" />
<person posts="1" size="2" who="Ferenc Wagner" />
<person posts="1" size="1" who="Ove Kaaven" />
<person posts="1" size="1" who="Andreas Mohr" />
<person posts="1" size="1" who="lucho" />
<person posts="1" size="1" who="Matthew Davison" />
<person posts="1" size="1" who="Stefan Leichter" />

</stats>


<section 
	title="News: Cross-compiling Windows Apps" 
	subject="News"
	archive="http://www-106.ibm.com/developerworks/linux/library/l-sc10.html?ca=dgr-lnxw01Xmingwin" 
	posts="1"
	startdate="02/01/2003"
	enddate="02/07/2003"
>
<topic>News</topic>
<p>
This isn't really related to Wine, but you might find it interesting.  IBM's
developerWorks web site has an article on 
<a href="http://www-106.ibm.com/developerworks/linux/library/l-sc10.html?ca=dgr-lnxw01Xmingwin">
cross-compiling Windows apps</a> on Linux,
<quote who="developerWorks">
 The Xmingwin/bin directory includes not just a cross-compiler, 
 but cross-linker, cross-library-manager, and almost two dozen 
 related tools for common developer operations. With a bit of 
 practice, you can generate deliverables for Windows just as easily 
 as you currently do for Linux, probably from the same Makefiles 
 you're already using.</quote></p>


</section>




<section 
	title="Threading Problems with glibc 2.3 (cont'd)" 
	subject="Re: Started playing with Wineserver on mingw/cygwin again"
	archive="http://www.winehq.org/hypermail/wine-devel/2003/01/1153.html" 
	posts="54"
	startdate="01/31/2003"
	enddate="02/06/2003"
>
<topic>Integration</topic>
<p><i>Preface: we began covering this last week in
<a href="http://www.winehq.org/news/?view=155#Threading%20Problems%20with%20glibc%202.3">issue #155</a></i></p><p>
The questions about the new threading model that can be enabled in
the latest glibc came up again.  This time Steven Edwards was
wondering about getting Wineserver to run under Cygwin, but
the discussion quickly delved into using pthreads for threading.  Marcus
Meissner once again pointed out the problem with the new threading 
is going to surface soon,
<quote who="Marcus Meissner">
RedHat Phoebe is affected already (is that 8.1?). Shipping soon.</quote></p>
<p>Mike Hearn mentioned some other early reports,
<quote who="Mike Hearn">
There were some rumblings on the crossover users list, so I think it's
safe to assume Phoebe is a no go</quote></p>
<p>However, Phil Bordelon said his Gentoo distribution with glibc 2.3.1
wasn't affected. Michael Stefaniuc explained that it was a combination
of a new kernel and glibc that caused the trouble,
<quote who="Michael Stefaniuc">
 you need also an nptl enabled kernel to enable the new threading
 model. This would be an actual 2.5 kernel or a 2.4 kernel from Red Hat's
 Rawhide or Phoebe.</quote></p>

<p>People began questioning exactly what needed to be changed how
long it would take.  Dimi Paun pointed out,
<quote who="Dimitrie Paun">
I know Ingo Molnar has been (one of) the
main developer working on the glibc threading stuff, and I also know he
used to follow the Wine project. I am sure he's not indifferent to our
fate, and being so deeply involved with the glibc changes, he's probably
an invaluable resource. Unfortunately, I'm not sure he's even aware of
the problem -- has anyone contacted him? Anyone want to do so? (Dan? :))
</quote></p>

<p>Michael discovered this issue had been recognized months
ago,
<quote who="Michael Stefaniuc">
 To resolve any doubts that Ingo isn't taking care of wine read this:
 <a href="http://lwn.net/Articles/6972/">
 http://lwn.net/Articles/6972/</a></quote></p>

<p>Michael also seems to have contacted Ingo privately and gotten the
following reply:</p>
<quote who="Michael Stefaniuc"><p>
here is Ingo's answer:
<ul><code>
could you try:
<ul>
         export LD_ASSUME_KERNEL=2.2.5
</ul>
 prior starting up Wine, does this fix the problem for you?
</code></ul></p></quote>

<p>Francois Gouget reported,
<quote who="Francois Gouget">
 According to reports on the CrossOver mailing lists this works on
 Phoebe 1 but does not work anymore on Phoebe 2.
 Also it causes Wine to fail on some platforms like SuSE 8.1 so it should
 not be blindly set.</quote></p>

<p>Michael did some testing and found that particular kernel had a
problem with signals and that it had already been replaced in the
latest Rawhide repository.  Testing with the even newer kernel
worked as expected. </p>

<p>Chris Tooley offered 
<a href="http://www.winehq.org/hypermail/wine-devel/2003/02/0266.html">another
workaround</a> involving a small library.  Apparently Wine
isn't the only program affected,
<quote who="Chris Tooley">
 there was a workaround on the vmware newsgroup (vmware is
 afflicted with a similar disease) that preloads a small .so to make it
 work.  This might be useful for some people.  I've used it with some
 success on my installation of wine.  </quote></p>

<p>Marcus noted that solution wouldn't work in all cases though either.
Then Marcus, Eric Pouech, and Ulrich Weigand started an exchange on
the exact problems faced and how capabilities of the new threading
model could be exploited.  Eric started with:
</p>
<quote who="Eric Pouech"><p>
among the things we have to take care of:
<ul>
<li> signals: signal, in current implementation, is sent to a thread. in 
nptl, it's sent to the process. So, lots of thread control has to be 
rewritten</li>
<li> in the same type of issues, getpid() now returns the same pid for all 
threads in a same process. Most of Wine code relies on having a 
different pid for each thread (this fix is needed, IIRC, for some 
Solaris port)</li></ul></p><p>

from what I've seen, the LDT/GDT with nptl should be easier:
<ul>
<li> for Win32 processes, as Ulrich already wrote, we could got rid of LDT 
(and only rely on GDT) for %fs and TEB allocation</li>
<li> for Win16 processes, we would still require LDT sharing across 
pthreads, which I don't how it's handled right now</li>
</ul></p><p>
and it's likely there are quite a few other items I forgot
</p></quote>

<p>(I'll attempt to add some explanation, but I'm pretty stupid
when it comes to memory management.  LDT is the "local
descriptor table" in Linux for user space.  Every task has
one LDT.  GDT is the "global descriptor table" for kernel
space.  TEB is more of a Windows concept - "thread environment
block".)</p>

<p>As far as thread control goes, Ulrich dug around and
discovered,
<quote who="Ulrich Weigand">
in the Linux / glibc 2.3.x case, there's a new gettid
call that returns a 'thread ID' that used to be the pid, and a new tkill
system call that can be used to send a signal to one TID, just like the
old Linux kill would send a signal to a specific thread.  I think using
those we could carry over our old Linux-specific hacks one to one, and
it still should work even if our threads are glibc 2.3.x pthreads.
</quote></p>

<p>Notably absent from the thread was Alexandre.  He jumped in to
add,
<quote who="Alexandre Julliard">
 I've been in touch with Ingo, and I'm looking into the issue. However
 I'm currently moving, so things are a bit hectic around here, and I
 don't have good internet access. Hopefully things will settle down a
 bit soon so that I can get some real work done...
</quote></p>

<p>Look for the thread to continue for a while.</p>

</section>




<section 
	title="RPC Data Marshalling (cont'd)" 
	subject="RPC marshalling patch"
	archive="http://www.winehq.org/hypermail/wine-devel/2003/02/0000.html" 
	posts="21"
	startdate="01/30/2003"
	enddate="02/03/2003"
>
<topic>Documentation</topic>
<topic>RPC / COM / OLE</topic>
<p>Last week I covered a thread where Greg Turner talked about 
figuring out to make remote procedure calls communicate over the
wire.  I left out the last paragraph of Greg's post where 
he mentioned,
<quote who="Greg Turner">

Combined with the pseudo-documentation of the format strings from MSDN, the 
Microsoft headers and MIDL output, the DCERPC source, tcpdump, etc., there's 
enough comprehensible clues out there to actually accomplish something -- it 
still feels pretty sparse to me, but I guess there's nothing I can do about 
that but forge ahead (or maybe shell out for the DCE package :) )
</quote></p>

<p>Following that, Dimi Paun replied with an offer:</p>
<quote who="Dimitrie Paun"><p>
The DCE package is like $400USD. Not that bad. Maybe we can put some money
togther (what about the Party Fund, that would be a good use of that money),
and buy the DCE docs for the Wine project.
</p><p>
I contribute $40USD, if other contribute to make the 400.
</p></quote>

<p>Pretty soon others joined in to reach the goal.  The following
people offering to donate some of their personal cash to get the
docs:
<ul>
<li>Dimitrie O. Paun  </li>
<li>Michael Stefaniuc  </li>
<li>Nick Capik  </li>
<li>Tom Wickline   </li>
<li>Gregory M. Turner   </li>
<li>Sylvain Petreolle   </li>
<li>Dan Kegel  </li>
<li>John Alvord  </li>
<li>Kirk Ruff  </li></ul>
</p>

<p>A little impasse was reached on how exactly the money
could be donated though - especially for folks not in the
United States.  Jeremy White posted a note about formalizing it:</p>
<quote who="Jeremy White">
<p>
I'm filing papers (on a personal basis ) in Minnesota to do business
as 'The Wine Project', and I've opened a personal account with
the name 'The Wine Project', and I'm a few days away from having
a Paypal button all ready to go to accept donations.
</p><p>
You can thank Tom for this; he's the one that harangued me into 
it &lt;grin&gt;.
</p><p>
I think I've mostly held up in the past because we didn't
have anything to spend money on.  However, Tom has pointed out
that we can use the money to fund travel for a Wineconf 2003,
and this also sounds like a worthy cause.
</p></quote>

<p>That led into the next thread...</p>

</section>






<section 
	title="Paypal Link" 
	subject="Paypal link"
	archive="http://www.winehq.org/hypermail/wine-devel/2003/02/0108.html" 
	posts="1"
	startdate="02/03/2003"
>
<topic>Project Management</topic>
<p>Jeremy White wrote in to announce a link he set up
for donations:</p>
<quote who="Jeremy White"><p>
There is now a Paypal donations link up at 
<a href="http://www.winehq.org/">www.winehq.org</a>;
donations there go into a bank account I opened
under the name "The Wine Project".
</p><p>
I promise to only embezzle small, unnoticeable amounts
of the funds &lt;grin&gt;.  
</p><p>
We should probably decide what we want to use this money
for; I'm happy to send of for the DCE package as soon
as the $400 accumulates (or to reimburse someone else).
</p><p>
Beyond that, I think Tom is right - we should fund a
periodic conference.  But I'll start a new thread for that.
</p></quote>

<p>What?  A conference?  Read on...</p>

</section>




<section 
	title="Wineconf 2003?" 
	subject="Wineconf 2003"
	archive="http://www.winehq.org/hypermail/wine-devel/2003/02/0111.html" 
	posts="9"
	startdate="02/03/2003"
	enddate="02/06/2003"
>
<topic>Project Management</topic>
<p>Last year's Wineconf 2002 gathered 30 of Wine's most active
developers together.  By most accounts, it was quite successful.
Jeremy decided to ask what everyone would think of having
another:</p>
<quote who="Jeremy White"><p>
I think we should have another Wineconf.
</p><p>
The last one was a blast, and I think helped lead to
a really great 2002 for Wine.
</p><p>
However, I'm not wealthy enough to fly everyone
around the world.  Maybe next year &lt;grin&gt;.
But just because Lindows isn't going to pay for it doesn't
mean we can't get together.
</p><p>
Assuming we have another Wineconf, the main questions are
where and when?
</p><p>
For where, I would think it's time to hold it in Europe.
</p><p>
On the other hand, if we hold it in St. Paul, I would
be happy to arrange (and pay for) a conference site.  It would
also let a lot more of us CodeWeavers make it.
</p><p>
Also, it would seem to make sense to hold it in 
conjunction with a Linux conference; that would probably make
it easier for others to do the travel.
</p><p>
Thoughts?  Comments?
</p></quote>

<p>People began tossing around ideas for European 
conferences.  </p>
<p>Dan Kegel:</p>
<quote who="Dan Kegel"><p>

 How about we hold it as a satellite conference
 to LinuxTag, Karlsruhe, Germany, 10-13 July 2003?
 LinuxTag is a very big, very cool event.
 See <a href="http://www.linuxtag.org/2003/en/conferences/cfp.html">
 http://www.linuxtag.org/2003/en/conferences/cfp.html</a>
</p><p>
I suppose the Linux Summit in Finland in Febrary is
another possibility: http://www.sot.com/en/sot/summit2003.shtml
but it's a much smaller (and colder!) show, and there
isn't really enough time before then to prepare.
</p>
</quote>

<p>Uwe Bonnes:</p>
<quote who="Uwe Bonnes"><p>
 Another event is Linux Kongress. In the last years, some funding by the
 german government was available for special interest groups. We already had
 a get together with that money 1999 in Erlangen.</p></quote>

<p>Keith Matthews</p>
<quote who="Keith Matthews"><p>
 There is also the Linux Developers Conference (run by UK Unix Users
 Group) in Edinburgh at the beginning of August. Might be an opportunity
 for someone to get to see the festival cheap.</p></quote>

</section>




<section 
	title="ReactOS v0.1" 
	subject="Re: CVS Update: reactos"
	archive="http://www.winehq.org/hypermail/wine-devel/2003/02/0019.html" 
	posts="3"
	startdate="02/01/2003"
	enddate="02/02/2003"
>
<topic>Ports</topic>
<p>Steven Edwards posted a message letting the Wine developers
know ReactOS had its first release.  ReactOS is intended to function
as a drop in replacement for those operating systems from Redmond.</p>
<quote who="Steven Edwards"><p>
Just wanted to let everyone know that we've hit our first major milestone with ReactOS. I don't
have the changelog in front of me but to some it up here it the list that I know off the top of my
head.
<ul>
<li>Self-hosted builds now works</li>
<li>CD-booting/Installing</li>
<li>Simple Windowing (User32 Code adapted from WINE)</li>
<li>More MS_VC applicaton/driver support</li>
<li>Started implementing support for WINE dlls</li>
<li>Better Networking support (TCP still broken)</li>
</ul></p><p>

Once WINE hits 1.x we will again take a snapshot of your tree so we have standard debugging
interfaces. Right now in or tree we don't use libwine but have our own dll that implements the
debug channels. We also still need to adapt a lot of the controls from WINE for our user32.
</p><p>
Thanks for all the help
</p></quote>

<p>Regarding adapting the controls, he explained in more detail, 
<quote who="Steven Edwards">
ATM I think wines comctl32 and shlwapi work under WindowsNT so once ReactOS gets a little more
fine tuned we should have no problems using them. There are still some issues with the commdlg32
and shell32 + everything else but we are working on it. Right now the big thing is to compleate
our user32/Win32K and then we can make better use of the WINE code. I am trying to get the rest of
the ReactOS people to also use the WINE regression test framework for our test suite so we can
share that also. Rest assured any fixes or new features will find their way back in to the main
wine tree.</quote></p>
</section>






<section 
	title="Windows API Database (cont'd)" 
	subject="Windows API database / map"
	archive="http://www.winehq.org/hypermail/wine-devel/2003/02/0118.html" 
	posts="7"
	startdate="02/03/2003"
	enddate="02/04/2003"
>
<topic>Documentation</topic>

<p>I guess this is the week of continuing threads.  
Dave Miller got to work on creating a "database" (or
at least at this point a list) of how various Windows DLLs
relate to each other.  For the most part the data has been
collected, now it's just a matter of putting it into a 
human-readable format:</p>
<quote who="Dave Miller"><p>
I've begun cross referencing the windows dlls in a 'map' format 
as Dan Kegel suggested.  I'm not finished yet because it seems 
when I sort alphabetically I am sorting the entire path.  Sample 
output is here:  
<ul>
<a href="http://home.ptd.net/~compsol/">
	 http://home.ptd.net/~compsol/</a>
</ul></p><p>
Be aware though this HTML is around 900K.  If anyone has comments 
or suggestions on how to improve it or the next logical step please 
let me know.
</p></quote>

<p>There's definitely a lot of useful data in there.  But for now
it just has what DLLs are being imported by another DLL.  Several
people had ideas for how to represent it.  Dimi Paun suggested: </p>
<quote who="Dimitrie Paun"><p>

Sure, here are my suggestions (in order of importance):
<ol>
<li> Transform the output to a matrix (a square matrix, a DLL per
     row &amp; column, the entry at row r and column c gets an X if
     the DLL on row r imports the DLL in column c.</li>
<li> Get rid of the path from the DLL filenames, it's useless, and
     it eats up space. That is, just say userenv.dll instead of 
     c:\windows\system32/userenv.dll.</li>
<li> Get rid of the .dll extension for similar reasons.</li>
<li> Remove the columns from the matrix that have no X's.</li>
<li> Order columns by order of importance. That is, the ones with
     more X's come first.</li></ol>
</p></quote>

<p>Shachar Shemesh had some ideas for how to go about ranking
the number of imports done by a DLL in order to make the resulting
matrix more organized.  Dan Kegel wanted, 
<quote who="Dan Kegel">
two numbers next to each
line: the number of libs imported directly and indirectly by the named file.
That would give some idea of "distance from the core".</quote></p>

</section>






<section 
	title="GDI Performance" 
	subject="GDI question"
	archive="http://www.winehq.org/hypermail/wine-devel/2003/02/0112.html" 
	posts="10"
	startdate="02/03/2003"
	enddate="02/04/2003"
>
<topic>Graphics</topic>
<p>Hetz Ben Hamo asked:</p>
<quote who="Hetz Ben Hamo"><p>

I'm testing some apps installation with either the free WineHQ, WineX, 
CrossOver Office, and many times I see buttons and other GUI related stuff in 
the wrong size or place, and I understand it's a GDI related issue, so here's 
3 questions..
<ol>
<li> Is the GDI implementation is so bad that it needs hacking per app to make 
it look ok? </li>

<li> Is there a way to take GDI parts from native WIndows and use it in Wine?</li>

<li> Funding - can any company (transgaming, CodeWeavers, others) can estimate 
the cost of rewriting a better (and faster - the speed of Wine graphics today 
is something in magnitude of 486 PC!) GDI? </li></ol></p></quote>

<p>Dimi Paun thought the problem might be in the X driver or the controls.
Mike Hearn felt most of the apps he ran had perfectly acceptable
performance and wanted to know if this was a real world problem.  Then
he went on to test it himself:</p>

<quote who="Mike Hearn"><p>
Well, I just tried a simple comparison of the Adobe SVG plugin under 
Wine and IE6 on Windows XP. Wine _is_ slower by a visible amount when 
doing repeated bitblts such as the plugin does on an animation I have, 
but it's certainly not something that'd actually affect real world 
usage. I don't think GDI performance is really an issue at present, most 
apps don't do these kind of repeated double-buffer switches (i assume 
flash doesn't actually use the gdi to render into its backbuffer?) so it 
only affects apps like photoshop and director/flash.
</p><p>
In particular when I run the SVG plugin, I can see a FIXME talking about 
a potential optimization, so really the issue is just a case of elbow 
grease for optimizations (esp in bitblt) rather than a rewrite I'd guess.
</p></quote>

<p>Not much more was discussed.  I guess it ranks as a known area of
optimization, but not exactly a high priority.  Johan Gill did
mention he had plans of looking at it,
<quote who="Johan Gill">
I'm looking at fixing up the DIBSection handling. Will probably submit 
something this year at least :)</quote></p>






</section>






</kc>

