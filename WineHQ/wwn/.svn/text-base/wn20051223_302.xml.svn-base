<?xml version="1.0" ?>
<kc>

<title>Wine Traffic</title>

<author contact="http://www.theshell.com/~vinn">Brian Vincent</author>
<issue num="302" date="12/23/2005" />
<intro> <p>This is the 302nd issue of the Wine Weekly News publication.
Its main goal is to cut new skins. It also serves to inform you of what's going on around Wine. Wine is an open source implementation of the Windows API on top of X and Unix.  Think of it as a Windows compatibility layer.  Wine does not require Microsoft Windows, as it is a completely alternative implementation consisting of 100% Microsoft-free code, but it can optionally use native system DLLs if they are available.   You can find more info at <a href="http://www.winehq.org">www.winehq.org</a></p> </intro>
<stats posts="359" size="672" contrib="96" multiples="59" lastweek="38">

<person posts="27" size="33" who="julliard at winehq.org (Alexandre Julliard)" />
<person posts="23" size="23" who="dank at kegel.com (Dan Kegel)" />
<person posts="21" size="42" who="Aric.Cyr at gmail.com (Aric Cyr)" />
<person posts="17" size="29" who="wine-devel at kievinfo.com (Vitaliy Margolen)" />
<person posts="18" size="29" who="rob at codeweavers.com (Robert Shearman)" />
<person posts="11" size="22" who="p.beutner at gmx.net (Peter Beutner)" />
<person posts="11" size="10" who="twickline at gmail.com (Tom Wickline)" />
<person posts="10" size="13" who="cihan at uq.edu.au (Cihan Altinay)" />
<person posts="9" size="16" who="jrliggett at cox.net (James Liggett)" />
<person posts="9" size="14" who="truiken at gmail.com (James Hawkins)" />
<person posts="11" size="15" who="marcus at jet.franken.de (Marcus Meissner)" />
<person posts="7" size="19" who="david.nolden.wine at art-master.de (David Nolden)" />
<person posts="7" size="12" who="scott at open-vote.org (Scott Ritchie)" />
<person posts="7" size="10" who="billmedland at mercuryspeed.com (Bill Medland)" />
<person posts="6" size="12" who="the3dfxdude at gmail.com (Jesse Allen)" />
<person posts="6" size="7" who="andi at rhlx01.fht-esslingen.de (Andreas Mohr)" />
<person posts="6" size="7" who="eric.pouech at wanadoo.fr (Eric Pouech)" />
<person posts="5" size="8" who="dmitry at baikal.ru (Dmitry Timoshkov)" />
<person posts="5" size="7" who="stefandoesinger at gmx.at (Stefan D&#246;singer)" />
<person posts="4" size="20" who="fenix at club-internet.fr (Raphael)" />
<person posts="4" size="14" who="jorishuizer at planet.nl (Joris Huizer)" />
<person posts="4" size="13" who="speeddymon at gmail.com (Tom Spear)" />
<person posts="4" size="11" who="oliver_stieber at yahoo.co.uk (Oliver Stieber)" />
<person posts="4" size="7" who="brian.vincent at gmail.com (Brian Vincent)" />
<person posts="4" size="7" who="molle.bestefich at gmail.com (Molle Bestefich)" />
<person posts="4" size="7" who="mjung at iss.tu-darmstadt.de (Michael Jung)" />
<person posts="4" size="6" who="willie at zeitgeistmedia.net (Willie Sippel)" />
<person posts="4" size="6" who="juan_lang at yahoo.com (Juan Lang)" />
<person posts="4" size="4" who="wine at troy.rollo.name (Troy Rollo)" />
<person posts="3" size="13" who="k04jg02 at kzoo.edu (Joseph Garvin)" />
<person posts="3" size="11" who="segin2005 at gmail.com (Segin)" />
<person posts="3" size="11" who="curritoamores at hotmail.com (Curro Amores)" />
<person posts="3" size="7" who="Sven.Paschukat at t-online.de (Sven Paschukat)" />
<person posts="3" size="7" who="tioduke at gmail.com (Sergio)" />
<person posts="3" size="6" who="wijn at wanadoo.nl (Rein Klazes)" />
<person posts="3" size="4" who="thunderbird2k at gmx.net (Roderick Colenbrander)" />
<person posts="3" size="3" who="wine.dev at web.de (Detlef Riekenberg)" />
<person posts="3" size="3" who="Paul.Vriens at xs4all.nl (Paul Vriens)" />
<person posts="3" size="3" who="mike at codeweavers.com (Mike McCormack)" />
<person posts="2" size="22" who="stefan.munz at itomig.de (Stefan Munz)" />
<person posts="2" size="7" who="giulian2003 at hotmail.com (Marinescu-Ghetau Iulian)" />
<person posts="2" size="7" who="paul at astro.gla.ac.uk (Paul Millar)" />
<person posts="2" size="5" who="aric.cyr at gmail.com (Aric Cyr)" />
<person posts="2" size="5" who="tony.lambregts at gmail.com (Tony Lambregts)" />
<person posts="2" size="4" who="frick at sc-networks.de (Christoph Frick)" />
<person posts="2" size="4" who="dominic.wise at ukonline.co.uk (Dominic Wise)" />
<person posts="2" size="4" who="patrol at sinus.cz (Pavel Troller)" />
<person posts="2" size="3" who="hans at it.vu.nl (Hans Leidekker)" />
<person posts="2" size="3" who="reif at earthlink.net (Robert Reif)" />
<person posts="2" size="3" who="bon at elektron.ikp.physik.tu-darmstadt.de (Uwe Bonnes)" />
<person posts="2" size="3" who="winehacker at gmail.com (Steven Edwards)" />
<person posts="2" size="3" who="daniel.r.kegel at gmail.com (Dan Kegel)" />
<person posts="2" size="2" who="jwhite at winehq.org (Jeremy White)" />
<person posts="2" size="2" who="a_villacis at palosanto.com (=?ISO-8859-1?Q?Alex_Villac=ED=ADs_Lasso?=)" />
<person posts="2" size="1" who="saulius2 at ar.fi.lt (Saulius Krasuckas)" />
<person posts="2" size="1" who="hverbeet at gmail.com (H. Verbeet)" />
<person posts="2" size="1" who="david.nolden at art-master.de (David Nolden)" />
<person posts="1" size="6" who="galeru at gmail.com (Corey McClymonds)" />
<person posts="1" size="4" who="astrand at cendio.se (=?iso-8859-1?Q?Peter_=C5strand?=)" />
<person posts="1" size="3" who="wino at piments.com" />
<person posts="1" size="3" who="dtremenak at gmail.com (Daniel Remenak)" />
<person posts="1" size="3" who="stefandoesinger at gmx.at (Stefan D&#246;singer)" />
<person posts="1" size="2" who="gladiac.lists at gmail.com (Christian Lachner)" />
<person posts="1" size="2" who="aric at codeweavers.com (Aric Stewart)" />
<person posts="1" size="2" who="xerox_xerox2000 at yahoo.co.uk (Louis. Lenders)" />
<person posts="1" size="2" who="jmayer at loplof.de (Joerg Mayer)" />
<person posts="1" size="2" who="ivg2 at cornell.edu (Ivan Gyurdiev)" />
<person posts="1" size="2" who="ananth.rao at lgsoftindia.com (Ananth Rao)" />
<person posts="1" size="2" who="david.guembel at gmx.de (David =?iso-8859-1?q?G=FCmbel?=)" />
<person posts="1" size="2" who="m.goemmel at compulab.de (Markus Goemmel" />
<person posts="1" size="2" who="david.guembel at gmx.de (David =?iso-8859-15?q?G=FCmbel?=)" />
<person posts="1" size="2" who="timschmidt at gmail.com (Tim Schmidt)" />
<person posts="1" size="1" who="adrian.munteanu at oracle.com (Adrian Munteanu)" />
<person posts="1" size="1" who="davidm at sjsoft.com (David Moore)" />
<person posts="1" size="1" who="fgouget at codeweavers.com (Francois Gouget)" />
<person posts="1" size="1" who="markknecht at gmail.com (Mark Knecht)" />
<person posts="1" size="1" who="lionel.ulmer at free.fr (Lionel Ulmer)" />
<person posts="1" size="1" who="tlp at liquidx.org (Travis Poppe)" />
<person posts="1" size="1" who="vberon at mecano.gme.usherb.ca (Vincent B&#233;ron)" />
<person posts="1" size="1" who="markus.amsler at oribi.org (Markus Amsler)" />
<person posts="1" size="1" who="speeddymon at gmail.com (Dustin Navea)" />
<person posts="1" size="1" who="infyquest at gmail.com (Vijay Kiran Kamuju)" />
<person posts="1" size="1" who="tom at dbservice.com (Tomas Carnecky)" />
<person posts="1" size="1" who="gmturner007 at ameritech.net (Gregory M. Turner)" />
<person posts="1" size="0" who="hfmlacerda at yahoo.com.br (Hudson Lacerda)" />
<person posts="1" size="0" who="ruediger.koerschulte at gmx.de (=?iso-8859-1?q?R=FCdiger_Koerschulte?=)" />
<person posts="1" size="0" who="stefandoesinger at gmx.at (Stefan =?utf-8?q?D=C3=B6singer?=)" />
<person posts="1" size="0" who="alex at thehandofagony.com (=?UTF-8?B?IkFsZXhhbmRlciBOLiBTw7hybmVzIg==?=)" />
<person posts="1" size="0" who="ivanleo at gmail.com (Ivan Leo Puoti)" />
<person posts="1" size="0" who="paul.vriens at xs4all.nl (Paul Vriens)" />
<person posts="1" size="0" who="magnus at itkonsult-olsen.com (Magnus Olsen)" />
<person posts="1" size="0" who="mike at plan99.net (Mike Hearn)" />
<person posts="1" size="0" who="vik at zone81.com (Vik Kumar)" />

</stats>
<section 
	title="News: Wine 0.9.4"
	subject="News"
	archive="http://www.winehq.org/?announce=0.9.4"
	posts="2"
>
<topic>News</topic>
<p>Merry Christmas!</p>

<p>Alexandre released Wine 0.9.4 this week.  In the announcement he
noted the following new items:</p>
<quote who="Alexandre Julliard"><p>
<ul>
 <li>Improvements to the IDL compiler.</li>
 <li>Some infrastructure work for loadable driver support.</li>
 <li>The usual assortment of Direct3D improvements.</li>
 <li>IME support in the edit control.</li>
 <li>Better support for AVI animations.</li>
 <li>Debugging support improvements.</li>
 <li>Relay traces now work on NX platforms.</li>
</ul>
</p></quote>

<p><a href="http://www.winehq.org/site/download">Download</a>, compile, be 
happy.</p>

<p>The 
<a href="http://darwine.opendarwin.org/">Darwine</a> guys have been tracking 
the new release schedule as well.  In their release they note,
<quote who="Darwine">
there is only a ppc version, but that should be enough to test the concepts of the distribution, and prepare the ground for the x86 version. </quote></p>
   

</section>
<section 
	title="Short Term Release Schedule"
	subject="Create new mailing list wine-isv?"
	archive="http://www.winehq.com/pipermail/wine-devel/2005-December/043445.html"
	posts="8"
>
<topic>Project Management</topic>
<p>
A thread within a thread popped up that led Tony Lambregts to question how
releases are done now.  It's a valid question since there really hasn't
been much of a discussion about the new release schedule Alexandre seems
to be following.  Tony wrote:</p>
<quote who="Tony Lambregts"><p>
&lt;Rant&gt;
Well that is a real sore spot with me. You know that I am a strong
supporter of wine but it really concerns me that we have gone beta and
not addressed preventing regressions from getting into our releases in
any way. We currently have no freeze or notification of exactly when
the next release is going to go out. Sure we had the one big code
freeze just before 0.9 but then we went back to releasing without any
notification. At this point even if our application maintainers test
their app every day there is no way for them to prevent that
regression going into the next release.
</p><p>
We had at least one known regression creep into 0.9.3. and maybe more
that could have been corrected if we had some warning.  I think that
going to beta without  any real attempt to provide even the most basic
freeze release cycle is not a good thing. At the very minimum I would
think that we should know when the releases are going to happen but we
do not even know that.
&lt;/Rant&gt;
</p></quote>

<p>Alexandre replied:</p>
<quote who="Alexandre Julliard"><p>
The idea is that people should test the releases. The point of the
beta phase is to encourage end users to test, and for this to happen
they need to be able to get binary packages, which is what the
releases are about. This is why I'm making releases more frequently
too, so that end users are able to test effectively without having to
build from CVS.
</p><p>
The goal is not to prevent regressions between every minor point
release, it's to make releases frequently enough that regressions can
be found and fixed quickly, so that they don't creep into the next
major release. Now, if you think that doesn't work I'm certainly open
to doing things differently. What do you suggest?
</p></quote>

<p>That led Tony to ask a few more questions to clarify how things are
progressing:</p>
<quote who="Tony Lambregts"><p>
Perhaps it's partly a matter of  perception then.
</p><p>
If I understand you, 0.9 was a major release then, and 0.9.1 and
company are minor releases, with the next major release being 1.0. So
I anticipate that we will have a major freeze before 1.0 just like we
had before 0.9?
</p><p>
Since I'm pretty sure we do not have the resources to do nightlies
like they did for Mozilla, then once certainly every two weeks is
better than once a month.
</p><p>
If we could count on a release every two weeks that would be ideal.
That way people like me who use CVS (or GIT) could help prevent
regressions even getting into the minor releases, which in turn would
encourage more people to use the minor releases. I would prefer to see
that releases were done on a Tuesday, myself, since I have more free
time to track down regressions on a weekend and with some luck get
them fixed on Monday. IMO doing this would be very beneficial to
application maintainers without really changing very much what you are
currently doing.
</p><p>
The next step up from this of course is to create a branch for bug
fixes only but at this point  I cannot say how beneficial that would
really be.
</p><p>
One more thing. At the rate we are using up minor numbers we will be
looking at at 1.0 being released sometime in March. This seems not to
bad to me since having a major release twice a year seems pretty
reasonable. Are we planning on doing release candidates for 1.0? Or
are we just freezing the main branch. It seems to me that with GIT
having release candidates is a lot easier then it would be with CVS.
</p></quote>

<p>Alexandre said there definitely would be a freeze before 1.0 and
replied point by point:</p>
<quote who=""><p>

The 0.9.x releases should be viewed as snapshots of the current
tree. They should be more stable than the alpha snapshots but that's
really because I'm being more reluctant to commit big changes as we
move forward. And this will be more and more the case until we get to
1.0; it's a gradual freezing process, the temperature is going down a
few degrees with every snapshot.
</p><p>
I'm planning to stick to the two weeks schedule, yes. Maybe weekly
releases would be even better, but IMO that would require more
automation of the release process so that the packages are available
faster.
</p><p>
There are usually a bunch of changes on Monday since they
accumulate during the weekend, so I prefer to make releases on
Wednesday or Thursday to leave some time for things to settle down.
</p><p>
There's no rule that says minor numbers have to be one digit ;-)
I think it's likely to be 12 rather than 6 months between major
releases, but we'll see...
</p><p>
And yes, the 1.0 release will be off the main branch, that's where
everybody is working so that's where 1.0 will be. After 1.0 there
could of course be a 1.0.x stable branch in parallel with the
development branch.
</p></quote>

<p>So there ya have it.  That's how releases are being done and that's
what you can expect until further notice.  If you regularly run a program with
Wine, it would be great if you could follow the releases and make sure
your program continues to run.  The <a href="http://appdb.winehq.org">AppDB</a>
and <a href="http://bugs.winehq.org">Bugzilla</a> are great ways to track
and report problems.</p>
</section>
<section 
	title="OSDL Desktop Summit"
	subject="[Desktop_architects] Portland, a w(h)iney comment"
	archive="http://lists.osdl.org/pipermail/desktop_architects/2005-December/000354.html"
	posts="1"
>
<topic>Project Management</topic>
<p>We mentioned a few weeks ago (WWN
<a href="http://www.winehq.com/?issue=299#Desktop%20Summit">#299</a>) that there
was a desktop summit being sponsored by OSDL.  Well, Jeremy White and Dan
Kegel both attended the event and Jeremy wrote the following over on
OSDL's <a href="http://lists.osdl.org/pipermail/desktop_architects/2005-December/000354.html">desktop_architects</a>
mailing list:</p>
<quote who="Jeremy White"><p>
Otto Wyss wrote:
<ul>
&gt; This discussion about "The Linux Desktop Integration Interface" is<br />
&gt; really amazing to read, it looks so obvious to me that the top inhibitor<br />
&gt; for a Linux desktop adoption is the application shortage<br />
&gt; (<a href="http://www.osdl.org/dtl/DTL_Survey_Report_Nov2005.pdf">http://www.osdl.org/dtl/DTL_Survey_Report_Nov2005.pdf</a>). </ul>
</p><p>
I have to confess that I was struck by this gap at our meeting
as well.  Missing applications was the #1 bullet point
on the summary page of that report, and not running
Windows application was the #3 bullet point on the second
half of that summary page; I think it was clearly a
key issue, and yet it was not squarely addressed
(although helping ISVs is obviously a critical step).
</p><p>
I find it further fascinating that no one displayed any interest
in the Wine Project during the Portland meetings.
Again, referring to the #1 bullet of the <i>user</i> survey,
missing applications included Photoshop, Quicken, AutoCAD,
and PageMaker.
</p><p>
No one seems to care that Wine runs 3 of those 4.
</p><p>
&lt;Rodney Dangerfield&gt;    We get no respect!   &lt;/Rodney Dangerfield&gt;
</p><p>
&lt;grin&gt;
</p><p>
Like Mr. Dangerfield, then, I'm going to bull ahead
and share what I would have liked to have said anyway.
</p><p>
The honest truth about Wine is that, while it's
an amazing technology, it is not yet at the stage where everything
"just works".
</p><p>
However, we are starting to get much closer to a point
where it is much more broadly useful.
In October, for the first time in our 12 year history, Wine
officially shifted out of Alpha and into Beta.  That
change did not come lightly, and should be taken
as a critical signal.
</p><p>
That is:  Wine is a genuinely useful tool.  It may not
run every application; it may not run the application
you need.  However, it is missing very few 'big pieces',
so it is reasonable to believe that any given application
will need only a modest amount of elbow grease in
order to be made useful.
</p><p>
I know that many folks have 'moral' issues with
Wine (I struggle with that all the time; how do you
think I feel about taking peoples money to make IE work?).
And I also know that Wine is not always the best tool for the job.
However, I think it is critical that it be included
in the calculus of any migration, as it can often
be a vital part of a successful transition.
</p><p>
My greatest fear is that people will try Wine,
have it fail, and then discard it.  A better approach
is to try Wine, if it fails, *ask* how hard it would
be to make it work, and then use that in any
migration decision.  I hate that people spend
tens or hundreds of thousands of dollars on Windows Terminal
Services when a fraction of that money could have
gotten them a much nicer solution with Wine.  We
need the cash; Microsoft doesn't.
</p><p>
That's it; didn't have that much to say; but now
I feel better &lt;grin&gt;
</p><p>
And the honest truth is that I didn't really need to be
present in Portland; we didn't have any major gaps that
group could have addressed.  While Wine certainly depends
on a range of other projects, we've actually found folks
are pretty good to us (when we bother to ask).  And our
greatest need is simply more developers, more money to pay
those developers, and the completion of the good work
the Software Freedom Law Center has started on our behalf
(or, to paraphrase, send lawyers, guns, and money &lt;grin&gt;).
</p></quote>

<p>So, while that's not really a summary of the event, it does
illustrate a bit of what went on.  It's really important for people
to get in the same room and discuss these kind of issues, so it's great
OSDL is fostering such discussions.  While Jeremy might have felt his
presence wasn't necessary, it's important for Wine to involved in the
greater community. </p> 
</section>
<section 
	title="Case Study: SynaptiCAD"
	subject="New Wine ISV case study: Synapticad"
	archive="http://www.winehq.com/pipermail/wine-devel/2005-December/043423.html"
	posts="1"
>
<topic></topic>
<p>Dan Kegel updated a case study from last year to include on his ISV
page:</p>
<quote who="Dan Kegel"><p>
Thanks to Stefan Munz of ITOMIG, I now have a nice writeup by Dan Notestein 
about <a href="http://www.syncad.com/">SynaptiCAD's</a> success
with Winelib; it's online at
  <ul><a href="http://kegel.com/wine/isv/synapticad.html">
  http://kegel.com/wine/isv/synapticad.html</a></ul></p><p>
It was first written about a year ago, but languished
in cyberspace.  I think I've given it its first home
on a web site, and updated it a bit after emailing with
Mr. Notestein.
</p></quote>

<p>From that page:</p>
<quote who="Dan Kegel"><p>
Given the huge amount of GUI code, a traditional port from Windows to Unix was simply not feasible and the maintenance effort to keep two such code bases in sync would be tremendous, so WineLib has been an excellent solution for us. If we were starting product development for the first time today, a cross-platform framework would be the obvious way to go, but trying to convert to a different framework API now would also be a huge undertaking.
</p></quote>

<p>The case study also made a reference to SynaptiCAD's internal development
team, notably Eric Frias and Juraj Hercek, submitting patches back to Wine. 
</p>
</section>
<section 
	title="Possible LGPL Violation: SpecOpS Labs"
	subject="has the LGPL licence fell through ?"
	archive="http://www.winehq.com/pipermail/wine-devel/2005-December/043558.html"
	posts="17"
>
<topic>Licensing</topic>
<p>
<a href="http://news.inq7.net/infotech/index.php?index=1&amp;story_id=60585">Apparently</a>
SpecOpsLabs has released a product based on their Project David stuff.  What 
is that?  Well, we don't really know.  The last time it came up it was 
determined they had simply stolen CodeWeavers CrossOver product.  They
haven't bothered to engage in any dialog with the community, so it's unknown
what their intentions are.  </p><p>
Tom Wickline pointed out the link above and Willie Sippel followed up by
mentioning it was a part of TurboLinux FUJI.  Tom asked if anyone knew where
the source code to the Wine changes were and Jeremy White reminded him:</p>
<quote who="Jeremy White"><p>
In fact, the only person that can demand anything with regard to the LGPL is
someone that is running their software.  So if someone has bought
a copy of TurboLinux 11 in Japan, they have the right to demand
a copy of the source code to the Wine bits in Project David; presumably
they'd have to ask Turbo Linux.
</p><p>
Be great if someone would do that...
</p></quote>

<p>Aric Cyr didn't feel there was anything to get worked up over so I
listed what's happened so far:</p>
<quote who="Brian Vincent"><p>
Well, there is such a thing as contributing to the community as
opposed to ripping it off.  They are perfectly within their rights to
work in a bubble or not share any of their ideas with anyone. They can
also make simple bugfixes in Wine and not even bother to submit a
patch to wine-patches.  Heck, they don't even need to send a thank you
note.  That's not the right thing to do and we all know it.
</p><p>
Wine has a track record of being ripped off by companies.  Perhaps
it's not as bad as other projects, such as Samba, but it's definitely
happened.  So far SpecOpsLabs have a pathetic track record that only
seems to be getting worse.  Let's run this down from the beginning:
<ol>
<li>  They showed off a product without any explanation that Wine was
involved.  In fact, at first they completely denied Wine was part of
their product:
<ul><li><a href="http://www.winehq.com/?issue=220#Project%20David%20?">WWN #220</a></li></ul></li>

<li>  Then Ge van Geldorp discovered that Wine really was part of it:
<ul><li><a href="http://www.winehq.com/?issue=222#Project%20David%20Uses%20CodeWeavers%20CrossOver%20Office">WWN #222</a></li></ul></li>

<li>  That was followed shortly thereafter by Mike McCormack discovering
a CrossOver only hack was visible in a screenshot.  So they basically
ripped off CodeWeavers.  SpecOpsLabs never had an explanation for why
a CrossOver specific bug somehow made it into their tree.  In fact,
they specifically denied using CXO:
<ul><li><a href="http://www.osviews.com/modules.php?op=modload&amp;name=News&amp;file=article&amp;sid=1454">OSViews</a></li>
</ul>

(Given the choice between believing Mike, who probably knows all of
the gory details about that bug, or SpecOpsLabs.. well, I think I'd
trust Mike any day of the week.  And twice on Sundays.)</li>

<li>  Then SpecOpsLabs sent one email to wine-devel asking for info on
how to contact Alexandre.  Honestly, how difficult is it to find
Alexandre's email address?  How many "Alexandre Julliard's" do you
think turn up when you type the name into Google?  Several members of
the Wine community graciously replied to the email with no response
from them.
<ul><li><a href="http://www.winehq.com/?issue=241#SpecOps%20Labs%20Steps%20Up">WWN #241</a></li>
</ul>
Everyone asked for more info so if they planned on contributing that
there wouldn't a duplication of effort.</li></ol>
</p><p>
All in all, we've graciously asked them to contribute and not gotten a
response in return.  You know what pisses me off though?  They can't
even spend five minutes sending a thank you note to wine-devel.
</p><p>
Merry Christmas, SpecOps.  I hope you enjoy your gift of 1.7 million
lines of code.</p></quote>

<p>Aric looked into it and noticed on SpecOps' 
<a href="http://www.specopslabs.com/partners-stratigicpartners.htm"><i>Partners</i></a>
page that IBM and TurboLinux were both listed.  Given their long history with
the community, presumably both of those companies would want to make sure the 
licensing was followed.</p>

<p>So, anyone out there have TurboLinux FUJI?  Do you have the source
code changes to Wine?</p>

</section>
<section 
	title="Building Wine on Sparcs"
	subject="SPARC assembly won't compile, problems with NT headers"
	archive="http://www.winehq.com/pipermail/wine-devel/2005-December/043604.html"
	posts="3"
>
<topic>Ports</topic>
<p>Troy Rollo wanted to know how to get Wine to compile on Sparc:</p>
<quote who="Troy Rollo"><p>
winegcc from the current WineHQ produces assembly output for SPARC systems
that cannot be processed by the assembler.
<ol>
<li> "<tt>operation combines symbols in different segments</tt>" error.<br />

This problem arises because the imports code attempts to generate a relocation
involving symbols in different segments (one in the text segment and one in
the data segment). SPARC assemblers (including gas on a SPARC) cannot deal
with relocations involving symbols in different segments. This only affects
position independent code and can be avoided by changing the assembly code
output in imports.c to something simpler.
</li>
<li> "<tt>can't resolve `_end' {*UND* section} - `.L__wine_spec_rva_base' {.data
section}</tt>"
<br />
This problem is more sinister. It arises from the same limitation as the first
problem, but is not susceptible to being worked around. The offending code is
the code that attempts to generate the NT header of the executable -
specifically the SizeOfImage element. I can't see any way at this point to
provide for this calculation to be done until after the linker output is
generated. I suspect the solution to this problem is to just output a zero in
this location and have winegcc modify the executable image to insert the
correct values after the linker has created it.
</li></ol></p><p>
Does anybody have any objections to this solution or another approach to
suggest?
</p></quote>

<p>Alexandre suggested,
<quote who="Alexandre Julliard">
You can probably fix it by defining an _end symbol, like we do for
MacOS. You certainly don't want to try modifying the binary after it
has been built.</quote></p>

<p>Eric Frias (of the aforementioned SynaptiCAD) provided a patch for
winebuild to fix both problems, the second doing what Alexandre suggested,
<quote who="Eric Frias">

I've attached the patches we're using for winebuild on SPARC.  This 
fixes both of the problems you're encountering.  I'm not sure if the fix 
is the right one, but it works quite nicely :-)  We use gcc/gas.
</quote></p>
</section>
<section 
	title="Trace Logs on Windows"
	subject="Comparing a complicated program startup to windows"
	archive="http://www.winehq.com/pipermail/wine-devel/2005-December/043478.html"
	posts="4"
>
<topic>Debugging</topic>
<p>With Wine you can easily generate debugging logs that trace the APIs
called by a program.  Corey McClymonds asked if there was a way to do
that on Windows, apparently to be able to compare the code paths used
by Windows' DLLs and Wine's:</p>
<quote who="Corey McClymonds"><p>
There is a game, known as Continuum, that has a very complicated setup
before it actually starts the game, to prevent cheating.  Due to this, the
relay is very large, about 4MB, before it starts to repeat itself.  I have
gotten the +loaddll and the +seh logs at the bottom.  I was just wondering,
would it be possible to do the same startup on a Windows machine, and
compare its relay to the relay from Wine.  If this is possible, how would I
go about this?</p></quote>

<p>Dmitry Timoshkov explained how to do it:</p>
<quote who="Dmitry Timoshkov"><p>
Get 
<a href="http://www.microsoft.com/whdc/devtools/debugging/default.mspx">Debugging Tools for Windows</a> 
and use logger.exe to get a log similar to
Wine relay log. Use +relay,+seh debug switches to create a log under Wine,
+loaddll is not useful at all for your purposes.
</p></quote>

</section></kc>
