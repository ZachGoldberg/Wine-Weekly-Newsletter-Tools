<?xml version="1.0" ?>
<kc>

<title>Wine Traffic</title>

<author contact="http://www.theshell.com/~vinn">Brian Vincent</author>
<issue num="206" date="01/23/2004" />
<intro> <p>This is the 206th issue of the Wine Weekly News publication.
Its main goal is to drink the koolaid. It also serves to inform you of what's going on around Wine. Wine is an open source implementation of the Windows API on top of X and Unix.  Think of it as a Windows compatibility layer.  Wine does not require Microsoft Windows, as it is a completely alternative implementation consisting of 100% Microsoft-free code, but it can optionally use native system DLLs if they are available.   You can find more info at <a href="http://www.winehq.org">www.winehq.org</a></p> </intro>
<stats posts="261" size="950" contrib="68" multiples="41" lastweek="34">

<person posts="28" size="84" who="Mike Hearn" />
<person posts="23" size="55" who="Alexandre Julliard" />
<person posts="20" size="124" who="Dmitry Timoshkov" />
<person posts="14" size="48" who="Dimitrie O. Paun" />
<person posts="11" size="32" who="Hans Leidekker" />
<person posts="10" size="25" who="Eric Pouech" />
<person posts="9" size="59" who="Frank Schruefer" />
<person posts="9" size="20" who="Francois Gouget" />
<person posts="8" size="23" who="Jason Edmeades" />
<person posts="6" size="50" who="Duane Clark" />
<person posts="6" size="40" who="Mike McCormack" />
<person posts="6" size="15" who="Jeremy Newman" />
<person posts="5" size="15" who="Stefan Leichter" />
<person posts="6" size="17" who="Sylvain Petreolle" />
<person posts="4" size="23" who="Chris Morgan" />
<person posts="4" size="19" who="Andreas Rosenberg" />
<person posts="4" size="13" who="Jeremy White" />
<person posts="4" size="10" who="Steven Edwards" />
<person posts="4" size="10" who="Martin Fuchs" />
<person posts="4" size="10" who="Rolf Kalbermatter" />
<person posts="4" size="8" who="Tom" />
<person posts="3" size="15" who="Shane Shields" />
<person posts="3" size="10" who="Gregory M. Turner" />
<person posts="3" size="8" who="Rein Klazes" />
<person posts="3" size="8" who="Vincent B&#233;ron" />
<person posts="3" size="8" who="Fabian Cenedese" />
<person posts="3" size="7" who="Boaz Harrosh" />
<person posts="3" size="15" who="Piotr Pawlow" />
<person posts="2" size="8" who="Michael Stefaniuc" />
<person posts="2" size="7" who="Paul Millar" />
<person posts="2" size="6" who="Gianluca Bosco" />
<person posts="2" size="6" who="(chmorgan)" />
<person posts="2" size="5" who="Vik" />
<person posts="2" size="4" who="Robert van Herk" />
<person posts="2" size="4" who="jds" />
<person posts="2" size="4" who="Marcelo Duarte" />
<person posts="2" size="4" who="Jakob Eriksson" />
<person posts="2" size="4" who="Gerald Pfeifer" />
<person posts="2" size="3" who="Jon Griffiths" />
<person posts="2" size="3" who="Martin Garton" />
<person posts="2" size="3" who="Ivan Leo Murray-Smith" />
<person posts="1" size="22" who="(jsheets)" />
<person posts="1" size="6" who="Paul R Streitman" />
<person posts="1" size="5" who="Rolf Kalbermatter" />
<person posts="1" size="5" who="Ove Kaaven" />
<person posts="2" size="7" who="Marcus Meissner" />
<person posts="1" size="4" who="MediaHost \(TM\)" />
<person posts="1" size="4" who="Huw D M Davies" />
<person posts="1" size="3" who="Robert Shearman" />
<person posts="1" size="3" who="Robert Reif" />
<person posts="1" size="3" who="Andreas Mohr" />
<person posts="1" size="3" who="Uwe Bonnes" />
<person posts="1" size="2" who="Kevin Koltzau" />
<person posts="1" size="2" who="Peter Hunnisett" />
<person posts="1" size="2" who="Dominik Strasser" />
<person posts="1" size="2" who="Acke Carlsson" />
<person posts="1" size="2" who="Anssi Hannula" />
<person posts="1" size="2" who="Shachar Shemesh" />
<person posts="1" size="1" who="Kirk Ruff" />
<person posts="1" size="1" who="Joshua Walker" />
<person posts="1" size="1" who="Brett I. Holcomb" />
<person posts="1" size="1" who="BiGgUn" />
<person posts="1" size="1" who="Kevin DeKorte" />
<person posts="1" size="1" who="Brian Vincent" />

</stats>
<section 
	title="News: Wine-20040121, TransGaming Stuff, C4" 
	subject="News"
	archive="http://sourceforge.net/project/showfiles.php?group_id=6241"
	posts="4"
	startdate="01/17/2004"
	enddate="01/23/2004"
>
<topic>News</topic>
<p>Welcome to another action packed issue of the Wine Weekly News -
a beer-soaked newsletter infatuated with Paris Hilton spam.  The
headlining news this week is a new Wine vintage:</p>
<quote who="Alexandre Julliard"><p>
WHAT'S NEW with Wine-20040121: (see 
<a href="http://cvs.winehq.org/cvsweb/wine/ChangeLog?rev=1.79&amp;content-type=text/x-cvsweb-markup">ChangeLog</a>
for details)
       <ul> 
	<li> Many improvements in the shell32 dll.</li>
        <li> Better support for constructors in C++ Winelib apps.</li>
        <li> Improved Regedit tool.</li>
        <li> Full support for graphic tablets.</li>
        <li> Lots of DirectMusic improvements.</li>
        <li> Better support for video playback.</li>
        <li> Full IME support for Asian locales.</li>
        <li> Lots of bug fixes.</li>
       </ul></p></quote>


<p>Now.. go 
<a href="http://sourceforge.net/project/showfiles.php?group_id=6241">download 
it</a> and submit patches for <i>all</i> of the bugs you find.</p>

<p>CodeWeavers announced a new initiative this week to help software
vendors port applications to Linux.  Jeremy White also started a thread
about part of this on wine-devel, I'll cover that next (which will clear
up some details concerning it.)  CodeWeavers' 
<a href="http://www.codeweavers.com/site/about/general/press/?id=20040120">announced
the CodeWeavers Desktop Linux Certification Program</a> on Tuesday.  From
the press release:</p>
<quote who="CodeWeavers"><p>
CodeWeavers' Desktop Linux Certification Program includes several key elements:
<ul>
<li> A new online CodeWeavers CrossOver Compatibility Center, 
nicknamed "C4", an Internet-based "headquarters" where Independent 
Software Vendors (ISVs) can get information about Linux desktop 
certification for their Windows applications. C4 also gives the 
Linux desktop community -- now numbering in the millions -- a place 
to "vote" for Linux support of specific Windows applications, as well 
as to pledge time and even money to see their favorite or essential 
Windows applications certified for the Linux desktop.</li>
<li> The debut of a Desktop Linux Certification Service. The fee-based 
service, now available to ISVs, provides certification testing of Windows 
products with CrossOver, CodeWeavers' industry-leading Windows-to-Linux 
application. Official CrossOver support provides de-facto certification 
of the application for all distributions of the Linux desktop.</li>
<li> A new "Desktop Linux Certified [tm]" logo for Windows applications 
that have passed desktop Linux certification testing. Authorized ISVs 
can place the logo on websites, packaging, product literature, and other 
marketing materials for their certified Windows applications.</li>
<li> The continuing maturation of WINE and The WINE Project, the global 
open-source movement to create a robust and far-reaching software "bridge" 
for Windows applications to Linux.</li>
</ul></p></quote>

<p>Hey Microsoft - here's your opportunity to get some software Linux
certified.</p>

<p>
TransGaming put out a slew of little news blurbs along with
their January development report.  If you're 
<a href="http://www.transgaming.com/showthread.php?news=104">wearing</a>
a TG t-shirt at LinuxWorld you might end up with a gift certificate.
So both of you guys with t-shirts be sure to show up. TG is also 
<a href="http://www.transgaming.com/showthread.php?news=103">looking
for WineX beta testers</a>.  <i>Steam</i> fans might be particularly
interested in that because support may be appearing in
<a href="http://www.transgaming.com/showthread.php?news=105">the
upcoming WineX 3.3</a>.  Finally, TG's newsletter gave a pointer to an 
<a href="http://www.usalug.com/reviews.php?op=showcontent&amp;id=6">
interview with Peter Hunnisett</a> by USALUG.  I thought was pretty lame.  
(<i>*whine* why do we have to pay for software *whine*</i>)
</p>

<p>In TransGaming development news, 
<a href="http://www.transgaming.com/showthread.php?news=106">Point2Play
1.2</a> came out this week. Multiuser capabilities now allow WineX packages
to be shared rather using a separate install for each.  German and Portugese
translations are also available and users are invited to translate the
package into other languages.  The 
<a href="http://www.transgaming.com/showthread.php?news=102">January 
Development Status and Voting Report</a> contains info on what they've
been up to behind the scenes:</p>
<quote who="TransGaming"><p>
Following the December development report we received an email from 
Jaroslav Kysela of SUSE, who kindly provided us with some technical 
insight on how to overcome the limitations we perceived in ALSA. With 
this information we now believe that we should be able to provide 
hardware mixing in a straightforward manner while also using memory 
mapping for data transfer. These two features combined have the 
possibility of providing some major improvements to speed with a 
complete rewrite of the winealsa sound driver.
</p><p>
Since the last report we have also been active with our Pixel Shader 
investigations. We now have a working pass-through implementation that 
allows us to pass pre-translated fragment programs into OpenGL. The next 
step here is for us to translate the D3D pixel shaders into OpenGL fragment 
programs, trying to support as many of the shader language versions as 
possible on the existing OpenGL fragment program specification. We will 
be working on refining this for inclusion into WineX as well as working 
proactively to address some of the limitations of the proposed OpenGL 2.0 
specs for fragment programs, making it a better translation target for D3D 
shaders version 2.0 and up. 
</p></quote>

<p>They also want you to stop voting for Half-Life 2 until they can
get a legal preview copy or the legal release.  If you hadn't
heard, the source code to the unreleased HL-2 
<a href="http://news.com.com/2100-7349_3-5087698.html">was stolen</a>
last September.  Valve's managing director, Gabe Newell,  
<a href="http://www.fragland.net/index.php?page=newsitem&amp;nid=6041">
thought</a> the leak was due to a security problem in Outlook,
<quote who="Gabe Newell">
At some point, keystroke recorders got installed on several machines
at Valve. Our speculation is that these were done via a buffer overflow
in Outlook's preview pane.</quote>   HL-2 was in the news again
this week as the 
<a href="http://games.slashdot.org/article.pl?sid=04/01/19/1752221&amp;mode=thread&amp;tid=126&amp;tid=127&amp;tid=186&amp;tid=204&amp;tid=95">FBI
conducted raids</a> on people suspected of stealing it.</p>

<p>More Xandros reviews are appearing.  The 
<a href="http://www.distrowatch.com/dwres.php?resource=review-xandros">review
from Distrowatch</a> briefly mentions CrossOver.  
<a href="http://www.extremetech.com/article2/0,3973,1448588,00.asp">ExtremeTech's
review</a>  goes into a  lot more detail about CrossOver integration.  </p>

<p>Finally, just as this was about to get published, I found
<a href="http://searchenterpriselinux.techtarget.com/qna/0,289202,sid39_gci944905,00.html">an 
interview with CodeWeavers' Jeremy White</a> on SearchEnterpriseLinux.com.</p>
</section>
 
<section 
	title="CodeWeavers CrossOver Compatibility Center" 
	subject="RFC on our new initiative"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/01/0688.html" 
	posts="16"
	startdate="01/20/2004"
	enddate="01/22/2004"
>
<topic>Project Management</topic>
<p>The news blurb above alluded to the 
<a href="http://www.codeweavers.com/site/compatibility/">CodeWeavers
CrossOver Compatibility Center</a>, or C4.  Jeremy White provided 
more details in an email to wine-devel:</p>
<quote who="Jeremy White"><p>
We've just launched a major new initiative, the
CodeWeavers CrossOver Compatibility Center.
</p><p>
You can check it out at
  <ul><a href="http://www.codeweavers.com/site/compatibility/">
  http://www.codeweavers.com/site/compatibility/</a></ul>
but I think it's fair to describe it as the appdb
on steroids.
</p><p>
I wanted to announce it here to give folks a sense of what we're
up to, and to apologize a bit in advance for stepping on
the toes of folks that have been doing good work within
the appdb.
</p><p>
However, the #1 problem we have had over the past year
or so is how to handle all the many, many requests
we get for applications not on our 'supported' list.
</p><p>
We've basically ended up sending people away,
which has been pretty unsatisfying.  Further, we
haven't had any good way of determining what our
priorities should be; we follow major paying clients,
but beyond that, we mostly just follow our gut
hunches in establishing priorities.  
</p><p>
We hope to end that; this new center lets our customers
vote for apps, and lets non customers make pledges.
We can hopefully follow those pledges to get apps
running (and we'd probably be open to having wine hackers
committing to support apps in exchange for a piece
of the pledges, but we haven't gotten there yet).
</p><p>
We've also, we hope, set the stage for a major new Wine
related initiative - we hope to encourage lots of ISVs
to certify their apps against Wine.  
</p><p>
The rationale for this is pretty simple - apps won't run
on Wine as well as they do on Windows until developers start
testing against Wine.  They've got to start somewhere - we're
trying to give them that beginning.
</p><p>
We're obviously also hoping that this will help us to continue
funding the work we've been able to do on Wine so far.  As much
of a struggle as it's been at times, we really feel lucky that
we've been able to do so much.  We hope that these initiatives
will give us an extra little boost so we can help push Wine
over the hump.
</p><p>
I sincerely believe that the day when we can honestly tell people
"It will most likely work nicely on Wine" is not long off.
</p><p>
I also believe in the tooth fairy and Santa Claus, so make what
you will of that &lt;grin&gt;.
</p><p>
At any rate, this is a brand new initiative for us; call it
a 0.1.7 release.  We're very open to comments and thoughts
and suggestions, so I would greatly appreciate any public
or private comments you have to make.
</p></quote>

<p>Wow.. talk about blurring some lines between commercial
and non-commercial development.  Users of the LGPL'ed Wine
benefit only indirectly from this.  CodeWeavers is a very
benevolent member of the Wine community and it's safe to assume
work done for their CrossOver line of products will eventually
make it into Wine.  Mike Hearn expressed concern along those
lines:</p>
<quote who="Mike Hearn"><p>

I'm also a tiny bit concerned that the site seems to blur its focus a bit
- it seems to be positioned as a replacement for the appdb, despite the
fact that it's CrossOver specific: I think there's enough forkage between
CX Office and Wine now to make them basically separate products. 
</p><p>
For instance, on the front page, there is this paragraph:
<ul>
	"Up to this point, the perception has been that Wine only runs a limited
	number of Windows applications. For instance, CodeWeavers' CrossOver
	Office only officially supports about a dozen applications. However, the
	truth is that CrossOver runs many Windows applications quite well,
	although they may not be officially supported. Now, we're raising the bar.
	We are confident that Wine has matured to the point that CrossOver will
	run 95% of all Windows applications by the end of 2005. This Compatibility
	Center has been established in order to document that progress as Wine
	makes the next great leap forward."
</ul></p><p>
This piece of text seems to use the names Wine and CrossOver interchangably, when
they are clearly different.
</p><p>
As for the database itself, well, it seems that it 
duplicates a lot of stuff needlessly - take "Alone in the dark".
In the appdb there is only one comment which is basically "Works great!",
but there is no indication the game works in C4. There's also no
indication in either database whether it actually works as of Jan 2004. 
</p><p>
Worst of all, there's no way to verify this except for a Wine developer buying
a copy of the game, checking it, and possibly fixing regressions. So I'm not
sure that an appdb type thing is even a good idea - a dedicated application 
maintainer who brings the app up to scratch, periodically checks it still works
and so on is easily more valuable than a hundred appdb entries saying "This 
app doesn't work June 1998" or whatever, even if you have far fewer of them.
</p><p>
The idea of advocates is a turn off for me. It sounds like a revival of the 
old application owners idea, except that (again) it's crossover specific. 
It also feels a bit misleading. I think we'd all agree that the following phrases:
<ul>
"Here at the Compatibility Center, we're looking for similarly talented 
individuals who have a passion to see their favorite Windows applications
running on Linux under CrossOver."
<br />
"Volunteer your time to get an application working."
</ul></p><p>
... makes it sound like all you have to do to get foo-app working is download CXO
nightlies and report back the results. We already have this in effect, it's called
bugzilla, and we all know that getting tester feedback of sufficiently high quality
to fix the bug is while not rare, not the expected outcome. Bugzilla and the appdb 
are littered with comments like, "The app starts but then I get a message about 
flat scrollbars which crashes wine".
</p><p>
Is the CrossOver team going to trawl through C4 looking for feedback
from the Advocates fixing bugs given (at best) a stack trace and a
logfile? It'd be nice but the incoming workload scales much better than
the workforce does.
</p><p>
Possibly there's something I'm missing here, like CXTest. Something like that 
sounds invaluable for tracking regressions if it works well, and maybe it's the
secret sauce. I'm not sure.
</p><p>
Finally (sorry guys! :) the FAQ lists the first advantage of C4 over the appdb as
the fact that it's maintained, but the cynic in me can't help noting that if you're
capable of maintaining C4 you'd be capable of doing the same for the appdb ;)
</p><p>
I know I'm giving you a hard time here, and while I really appreciate all you're doing
I thought I'd better air my concerns.
</p></quote>

<p>Jeremy wrote back to address the issues Mike brought up:</p>

<quote who="Jeremy White"><p>
I also have a crazy dream of buying thousands of MS Windows
titles, locking Aric in room until they all install, and then
nailing them all to the floor with CXTest.  I think this
is conceivable (except for the part where Aric goes crazy and
bludgeons his way out of the room with his laptop &lt;grin&gt;).  And,
I would argue, if were to truly make an effort to get every
application to install and come to the main menu, we could make
my prediction come true.  I just need a bit more money, and a secure
enough room to hold Aric...
</p><p>
We're genuinely motivated primarily
by a desire to see Wine fly.  However, we are also required by
our spouses and physical law to make enough money to eat.
</p><p>
C4 is intended as a community primarily surrounding CrossOver,
although the carry over to Wine is obvious.  Essentially,
the C4 community becomes another benefit of buying Wine from us,
rather than simply downloading it for free.
</p><p>
So, yes, it is intentional that C4 is focused around CrossOver.
</p><p>
But I am concerned about the impact this will have on the
appdb.  I didn't really want to step on the toes of anyone
that has been working on the appdb; that's a hard and largely
thankless job.  But I still believe in the original
vision of the appdb (that's why I paid Jer to build it);
I just think its going to work better in a context where
it has a chance to pay for itself, so I can afford to pay
someone the dirty job of keeping it up to date.
</p><p>
 Further, we do think that CXTest is going to
add a meaningful and useful component to this.  If nothing else,
I'm hoping that CXTest will let us 'lock' applications in so that
once they start working right, we can prevent them from regressing.
</p><p>
Again, the primary purpose of C4 is to give our customers somewhere
meaningful to go when they want to work on an app that is outside
of our 'supported' list.  People can either put their money or
their time where their mouth is, or stop bugging me &lt;grin&gt;.
</p><p>
As an aside, we have started working on a new policy of patch
submission.  We had always held an internal tree, worked against it,
and then submitted a delta after a release.  The merging started
to become unmanageable, and so we've switched policy so that
(ostensibly) all of our guys submit patches here first, and then
we merge into CrossOver frequently.  Once we get going with
C4 and CXTest, this should have the nice side effect that Wine
will get a regression testing tool and a company to run said
regression tests every night.  (Our goal is to be able to
pinpoint the exact patch that breaks half-life &lt;grin&gt;).
</p><p>
We don't get paid to maintain the appdb, and if we did maintain
it, we'd encourage people to *not* buy CrossOver, imho.  We do get paid
by people who buy CrossOver, and we've hopefully given them a reason
to be glad that they chose to give us their dollars.
</p><p>
I appreciate the concerns; I really appreciate that you looked
it over carefully and took the time to raise your concerns.
</p><p>
We're genuinely trying to figure out the best way forward, and we want
to do what's best for everyone involved.  
</p><p>
As a result, we're very open to suggested changes.
</p></quote>

<p>Greg Turner wondered how well the forums worked:</p>
<quote who="Greg Turner"><p>
Looks great to me; although there are not any discussions yet (or are there?) 
in the "forums" area to demonstrate the quality of the forum interface, if 
it's something along the lines of phpBB, then it's perfect.
</p><p>
In my mind, the appdb is great, but better, threaded, discussion areas were 
needed for people to really get serious about it.
</p><p>
As for wine vs CrossOver -- I presume that "plain old wine" users are welcome 
to participate?  If so, then there really isn't a problem.
</p></quote>

<p>Jeremy felt that was okay,
<quote who="Jeremy White">
 Our main emphasis
 is going to be on CrossOver, because we can quantify and control it.
 But we'll absolutely welcome general Wine conversations and users
 (but the version drop down boxes will all be CrossOver versions,
 for example).
</quote></p>

<p>CodeWeavers has managed to build a nice community around its products.
With a little luck that community will be sufficiently large enough to
help maintain C4.  It's something the Wine community has never really been
able to do with its <a href="http://appdb.winehq.org">AppDB</a>.  
That's not to say the AppDB isn't useful - if you dig deep enough you
may find the solution to your problems.  However, taking it to the next
step and allowing people to vote where commercial development $$$ will 
be spent seems like a wise move.</p>

</section>
<section 
	title="Winecfg Additions" 
	subject="[winecfg] - audio tab w/autodetection, misc"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/01/0146.html" 
	posts="6"
	startdate="01/04/2004"
	enddate="01/19/2004"
>
<topic>Configuration</topic>
<p>Winecfg recently saw some more additions.  If you've been
following the story so far then you'll know that's the
application that will someday be used to configure Wine. Right
now options are set in the .wine/config file but a graphical
interface is preferred.  Wine loads the config file entries
into a read-only branch of the registry upon startup.  When 
Winecfg is complete the config file can be ditched and all
options stored directly in the registry.  Some of the more
obscure options will require regedit to edit them.  Wine really
needs a developer to tackle this.  Robert van Herk and Chris
Morgan have recently made additions so it's possible things 
are on an upswing.  What Robert did was,
<quote who="Robert van Herk">
Added a tabsheet that allows the user to change the dll overrides,
both globally and per app.</quote></p>

<p>
Chris' addition involved adding some audio configuration:

<quote who="Chris Morgan">
This patch adds an "Audio" tab to configure the audio driver that wine should 
be using.  I also put together an autodetection routine that isn't complete 
and is almost certainly not portable.  If you see anything that can be 
improved or that needs to be conditional upon platform feel free to send me 
some mail.  Autodetection also needs support for Nas and audioIo.  Also added 
support for double clicking in the "Drives" tab on a given drive and linked 
this to opening the edit dialog.
</quote></p>

<p>Mike Hearn wondered if maybe the detection code needed to be put in Wine
rather than a separate program.  Chris wasn't sure,
<quote who="Chris Morgan">
If other people think it makes sense then yes, I think we should 
probably move the autodetection code to run at wine startup.  The 
code thus far is very much non-portable so while it should work 
under linux I'm not sure about other os's.  I've considered also 
trying to dynamically load the sound libraries and use their 
library calls to detect the sound libraries.  Any improvments or 
suggestions are more than welcome.  The autodetection works well 
for me though so I'd imagine it would work for most linux end-users.
</quote></p>

<p>Alexandre committed the changes as is.</p>

</section>

<section 
	title="Graph of CVS Commit History" 
	subject="Re: RFC on our new initiative"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/01/0725.html" 
	posts="4"
	startdate="01/21/2004"
>
<topic>Project Management</topic>
<p>During the course of a discussion Mike Hearn wondered
what a graph of CVS commits would look like.  Rein Klazes
put together the data:</p>
<quote who="Rein Klazes"><p>
A quick awk script on my cvs in box produced monthly number of cvs
commits. That includes the commits to winehq.
</p><p>
Output attached, a graph produced with gnumeric is on
<ul>
<a href="http://home.wanadoo.nl/~wijn/wine/cvs.png">
http://home.wanadoo.nl/~wijn/wine/cvs.png </a></ul></p>
</quote>

<p>Mike wondered why the end of 1998 seemed so productive.
Rein felt two factors might have had a hand it: in October
CVS mistakenly reported the same commit more than once, however at
the time Corel was actively working on Wine and there genuinely
were a lot of commits.</p>

<p>Note - this graph does not reflect the size of the Wine
source code.  It's only the commits.  Anyone want to produce a
graph of how much has been added?  I think it would be interesting
to see the trend.  </p>

</section>
<section 
	title="MSHTML Changes" 
	subject="Re: Try using the Mozilla Active X control in MSHTML"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/01/0525.html" 
	posts="5"
	startdate="01/16/2004"
	enddate="01/17/2004"
>
<topic>Integration</topic>
<p>We've sort of discussed this before.. the elusive IWebBrowser
control.  It's used by AOL, Quicken, Outlook, and lots of other
apps.  For more info, see the discussion last year in issues
<a href="http://www.winehq.org/?issue=141#Web%20Browser%20Integration%20Needed">#141</a>,
<a href="http://www.winehq.org/?issue=147#IWebBrowser%20Status">#147</a>, and
<a href="http://www.winehq.org/?issue=153#IWebBrowser%20Status%20/%20More%20Ideas">#153</a>.
Along similar lines, Mike McCormack posted a patch to
begin using the Mozilla ActiveX control in place of Microsoft's
parsing engine (MSHTML):</p>
<quote who="Mike McCormack"><p>
Since some people have been complaining that MSHTML is a useless 
distraction in it's current form (there's some element of truth in 
that), here's a small patch to redirect calls to Mozilla's Active X 
control.  You need to add a "mshtml"="builtin,native" override in the 
config file and download and install the control before this patch can 
try to use it:
<ul><a href="http://www.iol.ie/~locka/mozilla/control.htm">
http://www.iol.ie/~locka/mozilla/control.htm</a></ul></p><p>
This patch hasn't been tested too much... but it's better than the 
current implementation of MSHTML :)
</p></quote>

<p>Dimi wanted to know how well it worked:</p>
<quote who="Dimitrie Paun">
<p>
Very nice Mike! I guess this requires a Win32 build of Mozilla, no?
Anyway, if the patch goes in, it would be nice if our good packagers
can come up with a binary package (say, wine-mozilla?) that just
installs alongside with the wine package and provides this capability.
</p><p>
BTW Mike, did you try to see if HTML Helps works with the
Mozilla control? We had a task to add CHM support to WinHelp,
but first we needed an implementation for IWebBrowser.
People were arguing that Mozilla is not that IE compatible,
and that using it for the IWebBrowser component will not work
for a lot of cases, but I still think this is the way forward.
Even if we chose in the future to have another IWebBrowser
implementation based on khtml, this will nicely fill in the 
gap in the meanwhile, without any maintenance problems for us.
</p></quote>

<p>Mike said an initial try didn't work:</p>
<quote who="Mike McCormack"><p>
I didn't really have much time to do testing with it... tried to use it 
in place of IE6 and IE4's mshtml, but it didn't work.
</p><p>
Using Mozilla to implement IWebBrowser seems to be the Right Way for me, 
as the Mozilla project is already trying to do that themselves... it's a 
common goal that we can work together on!
</p><p>
It would be pretty cool if we could compile Mozilla as a winelib app, or 
figure out how to do get debugging info out of the control so we could 
see what needs to be fixed for it to work.
</p><p>
I'm pretty interested to work on this too, but unfortunately there's 
other "real work" that I need to get done at the moment.
</p></quote>

</section>

<section 
	title="Broken Apps: IE Setup and Lotus Notes?" 
	subject="Lotus Notes broken in recent CVS"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/01/0753.html" 
	posts="2"
	startdate="01/21/2004"
	enddate="01/22/2004"
>
<topic>News</topic>
<p>Normally I don't report on broken apps, I rarely even
report on working apps.  This week two different reports 
came in for some widely used programs not working.  First,
Mike Hearn sent a message to the list about Internet
Explorer issues:</p>

<quote who="Mike Hearn"><p>
A large UXTHEME update was committed in the last few days. It appears
this causes the IE installer to crash. I'm currently bogged down with
exams, it'll go on my list of regressions to track down and nail, but
may take a few days or weeks, depending on how things go here. For now
I'd suggest using 20031212, CVS is highly unstable and iesetup regresses
all the time at the moment.
</p><p>
I've copied this one to wine-devel as well so Kevin can see the crash.
</p></quote>

<p>The work Mike refers to are some large patches from Kevin Koltzau
that implement Windows' theming (i.e. uxtheme.dll).   We covered some
discussion of uxtheme.dll back in
<a href="http://www.winehq.org/?issue=191#Theming%20&amp;%20UXTheme.DLL">issue# 191</a>.
Kevin followed through with that work and now we're beginning to see
the foundation of it appear.  As Kevin stated in one of the patches,
<quote who="Kevin Koltzau">
This implements just enough at the moment to possibly trick some applications into
thinking theming is actually available, which could break them (mostly display issues
if the app ignores errors on theme drawing functions)
This will only be an issue if you have a theme installed and selected in your registry
</quote></p>

<p>The other app having problems is Lotus Notes.  Paul Streitman
reported,
<quote who="Paul Streitman">
      For the last couple days, Lotus Notes (5.0.11) has been broken under
CVS Wine.  Since Wine was released as a snapshot, I thought that I had
better speak up because it is still broken and no one else seems to have
noticed a problem with whatever recently changed..
</quote></p>

<p>Both of these apps see widespread use under Wine and there will likely
be fixes to them soon.  If you have a problem with Wine-20040121 you
may want to consider building Wine from 
<a href="http://www.winehq.org/site/cvs">the latest CVS</a>.  It's
not that hard to do and may fix your problems.</p>

</section>
<section 
	title="Running MS Office" 
	subject="[Fwd: Bug#224498: A recipe of potential use to MS Office 97 aspiring users on Debian]"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/01/0546.html" 
	posts="1"
	startdate="01/16/2004"
>
<p>There's lots of info out there on running MS Office with Wine, including
<a href="http://frankscorner.org/modules.php?op=modload&amp;name=Sections&amp;file=index&amp;req=viewarticle&amp;artid=20&amp;page=1">
Frank's Corner</a>, but I thought it might be nice to include some 
instructions that appeared on wine-devel this week:</p>
<quote who="Emmanuel Charpentier"><p>
First, a big "Thank you" to Ove : maintaining a Debian package is work, and 
maintaining a beast such as Wine is *hard* work. I feel very grateful to 
Debian maintainers, and to Ove.
</p><p>
I have read the bug report about MS Office and the consecutive somewhat 
heated argument. While I won't delve in the "necessities" of using MS 
programs, I agree that there is not yet a free tool able to reach into .mdb 
databases sent by people you can't demand another format. (Yes, I'm aware 
of the .mdb tools. They crash on me any time I try to use them on a French 
.mdb ...). Ant that might be justification enough to try to get Wine 
working with that piece of s...oftware.
</p><p>
The following recipe *might* help people not yet able to get rid of MS 
Office. Start by getting the latest (20031212) version of wine (that's in 
unstable for you, Debian users ...). This version seems to be a *vast* 
improvement over whatever I tried before (last time was summer '03, IIRC).
</p><p>
You will need a working Windows 98 installation (for which, of course, you 
have a valid license...). But you'll have to start with a fresh no-windows 
installation. The simplest way I found is to rename any previous 
.wine/config file and .wine/fake-windows directory, then to call winsetup 
and to ask for the creation of a new config file without Windows installation.
</p><p>
Starting from here, install from the MS cdrom : wine /cdrom/install.exe. 
This installation will copy a lot of files, then FAIL. That's not a problem.
</p><p>
You'll then grab the following files from your working Windows installation:
<ul>
<li> stdole32.tlb (This one is the only one needed for Winword, PowerPoint and 
maybe Excel).</li>
<li> ole32.dll</li>
<li> vbajet32.dll (and maybe vba332.dll (that's not a typo), can't recall at 
the moment).</li>
<li> oleaut32.dll</li>
<li> msacnv30.dll</li>
<li> tzisolat.dll</li>
<li> (maybe) odbc.dll</li></ul></p><p>
IIRC, all of this, except vba332.dll come from the \Windows\System 
directory of your native Win98 installation and go to 
.wine/fake_windows/Windows/System directory.
In the .wine/config file, mark these libraries as "native,builtin" in the 
[DLLOverrides] section.
</p><p>
Restart the installation of MS Office from the CD. This time, the 
installation should work (and be much faster than the first time around, 
since almost all file already exist). It will complaint that it cannot 
DDE-connect to the desktop (in order to create the shortcuts), but that's 
harmless : just hit "Ignore".
</p><p>
The first launch of the applications may be painful : at first run, MS 
Office apps try to launch a "helpful" dialog box "presenting" the 
application, which have trouble communicating with the main program. I 
found that minimizing and restoring the main window may help. Don't ask me why.
</p><p>
As far as my limited test can tell, Winword and PowerPoint work fine. With 
the relevant fonts in xfs and a correct CUPS setup, printing is automatic 
and gives very good results.
</p><p>
MS Access still gives me guff : I have Cyrillic characters in place of 
Western accented characters, form creation dialog boxes have serious quirks 
(e. g. the "Properties" dialog box fights for focus with the "Save as" 
dialog box in Design mode), I had a crash trying to display an "outer join" 
view, etc ... But that is infinitely better that no MS Access at all ... I 
have now some hope of solving some of these hurdles.
</p><p>
The SR1 and SR2 "service packs" can be installed with no problems.
</p><p>
Hoping this helps,
<ul><ul><ul>
					Emmanuel Charpentier
</ul></ul></ul></p><p>
PS : Ove, if you think this might be of interest elsewhere, and does not 
step too rudely on the (very) sensitive toes of DFSG and Social Contract, 
please feel free to forward to any relevant place, cut and paste or 
paraphrase at will ...
</p><p>
PPS : Mandatory disclaimer : I found this by trial and error. I might be 
wrong. But that's my problem. Now, I won't accept *ANY* responsibility for 
the (mis-)use you may make of this information, either technical or legal. 
In other words, you're on your own : if this blows your system, drowns your 
basement, launches against you a thousand of ships full of angered 
Microsoft lawyers, shaves your cat or rapes your grandma (or vice-versa), 
that's *YOUR* problem, buddy, not mine.
</p></quote>

<p>(Normally I wouldn't include the extraneous stuff in an email, but
Emmanuel's was pretty amusing.)
</p>
</section>

<section 
	title="INSENG.DLL Stubs" 
	subject="INSENG, IActiveSetup and ICifFile interfaces ..."
	archive="http://www.winehq.org/hypermail/wine-devel/2004/01/0631.html" 
	posts="3"
	startdate="01/18/2004"
>
<topic>Creating Stubs</topic>
<p>Mike McCormack investigated an obscure DLL:</p>
<quote who="Mike McCormack"><p>
This is a stub implementation of the undocumented IActiveSetup from 
Internet Explorer's INSENG.DLL.  I'm not sure that any other software 
except for Internet Explorer uses INSENG, however in case anybody is ever 
interested in it, I'm posting it here.
</p><p>
To build this dll in wine place the following 3 files in dlls/inseng, 
remove the #MKDLL_SKIP line from Makefile.in, add dlls/inseng/Makefile 
to configure.ac and run make_dlls.
</p><p>
Hopefully this will be of use to somebody someday...
</p></quote>

<p>Mike Hearn asked the obvious question,
<quote who="Mike Hearn">If IE ships it, and uses it internally, why do 
we need to reimplement it?</quote>  Mike admitted it was more of a
mistake than anything else:</p>
<quote who="Mike McCormack"><p>
Well, I don't think we need to implement it, unless we find some other 
program that uses it but doesn't install IE first.
</p><p>
I started writing this because IE didn't seem to install INSENG.DLL when 
  using Version=win2k, but later found that it was a weird dll override 
problem.
</p><p>
Rather than just throw away the work from that misadventure, I decided 
to post it here in case somebody did need it or was curious :)
</p></quote>

</section></kc>
