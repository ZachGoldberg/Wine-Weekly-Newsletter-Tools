<?xml version="1.0" ?>
<kc>


<title>Kernel Cousin Wine</title>

<author email="vinn@theshell.com">Brian Vincent</author>

<issue num="132" date="08/24/2002" />

<intro>
<p>
This is the 132nd release of the Wine's kernel cousin publication. Its main
goal is to distribute widely what's going on around Wine (the Un*x Windows
emulator). </p>

</intro>




<stats posts="224" size="720" contrib="64" multiples="36" lastweek="26">

<person posts="17" size="57" who="Bill Medland &lt;Bill.Medland@accpac.com&gt;" />
<person posts="13" size="37" who="Dmitry Timoshkov &lt;dmitry@baikal.ru&gt;" />
<person posts="12" size="58" who="Shachar Shemesh &lt;wine-devel@sun.consumer.org.il&gt;" />
<person posts="11" size="30" who="Alexandre Julliard &lt;julliard@winehq.org&gt;" />
<person posts="10" size="34" who="Raul Dias &lt;chaos@swi.com.br&gt;" />
<person posts="9" size="29" who="Fabian Cenedese &lt;Cenedese@indel.ch&gt;" />
<person posts="8" size="28" who="Bill Medland &lt;billmedland@look.ca&gt;" />
<person posts="8" size="19" who="Andreas Mohr &lt;andi@rhlx01.fht-esslingen.de&gt;" />
<person posts="7" size="25" who="Vincent Beron &lt;vberon@mecano.gme.usherb.ca&gt;" />
<person posts="7" size="19" who="Rein Klazes &lt;rklazes@xs4all.nl&gt;" />
<person posts="7" size="18" who="Andriy Palamarchuk &lt;apa3a@yahoo.com&gt;" />
<person posts="7" size="17" who="Sylvain Petreolle &lt;spetreolle@yahoo.fr&gt;" />
<person posts="6" size="16" who="Dimitrie O. Paun &lt;dpaun@rogers.com&gt;" />
<person posts="6" size="14" who="Steven Edwards &lt;steven_ed4153@yahoo.com&gt;" />
<person posts="5" size="27" who="Grzegorz Prokopski &lt;greg@sente.pl&gt;" />
<person posts="5" size="12" who="Robert Lunnon &lt;bob@yarrabee.net.au&gt;" />
<person posts="5" size="11" who="Eric Pouech &lt;eric.pouech@wanadoo.fr&gt;" />
<person posts="5" size="11" who="Jeremy Newman &lt;jnewman@codeweavers.com&gt;" />
<person posts="4" size="11" who="Tony Lambregts &lt;tony_lambregts@telusplanet.net&gt;" />
<person posts="4" size="9" who="leanne &lt;leanne@thizlinux.com&gt;" />
<person posts="4" size="8" who="Ove Kaaven &lt;ovehk@ping.uio.no&gt;" />
<person posts="4" size="8" who="lawson_whitney@juno.com" />
<person posts="3" size="31" who="Oliver Sampson &lt;olsam@quickaudio.com&gt;" />
<person posts="3" size="17" who="Tommy Schultz Lassen &lt;tlassen@tlassen.dk&gt;" />
<person posts="3" size="8" who="Dimitrie O. Paun &lt;dimi@bigfoot.com&gt;" />
<person posts="3" size="6" who="Lionel Ulmer &lt;lionel.ulmer@free.fr&gt;" />
<person posts="2" size="10" who="Pierre Beyssac &lt;pb@fasterix.frmug.org&gt;" />
<person posts="2" size="8" who="Paul Millar &lt;paulm@astro.gla.ac.uk&gt;" />
<person posts="2" size="8" who="sauer@studcs.uni-sb.de" />
<person posts="2" size="6" who="Patrik Stridvall &lt;ps@leissner.se&gt;" />
<person posts="2" size="5" who="Shaya Potter &lt;spotter@cs.columbia.edu&gt;" />
<person posts="2" size="5" who="jhurst@ii.net &lt;jhurst@ii.net&gt;" />
<person posts="2" size="5" who="Michael Cardenas &lt;michaelc@lindows.com&gt;" />
<person posts="2" size="5" who="Francois Gouget &lt;fgouget@free.fr&gt;" />
<person posts="2" size="4" who="Dusan Vujosevic &lt;dusanv@cadlink.com&gt;" />
<person posts="2" size="3" who="Spanke, Alexander &lt;A.Spanke@arz.de&gt;" />
<person posts="1" size="13" who="Steve Whine &lt;stevewhine2002@yahoo.co.uk&gt;" />
<person posts="1" size="5" who="Steve M &lt;smilley654@yahoo.com&gt;" />
<person posts="1" size="5" who="Crispen Scott &lt;C.Scott@astronautics.com&gt; (by way of Crispen Scott &lt;C.Scott@Astronautics.com&gt;)" />
<person posts="1" size="4" who="Carl Sopchak &lt;carl.sopchak@cegis123.com&gt;" />
<person posts="1" size="3" who="Ann and Jason Edmeades &lt;us@the-edmeades.demon.co.uk&gt;" />
<person posts="1" size="3" who="Brad Campbell &lt;brad@seme.com.au&gt;" />
<person posts="1" size="3" who="Guy L. Albertelli &lt;galberte@neo.lrun.com&gt;" />
<person posts="1" size="3" who="Gerald Pfeifer &lt;pfeifer@dbai.tuwien.ac.at&gt;" />
<person posts="1" size="2" who="Steve Whine &lt;stevewhine2002@yahoo.co.uk&gt;" />
<person posts="1" size="2" who="John K. Hohm &lt;jhohm@acm.org&gt;" />
<person posts="1" size="2" who="&lt;mayonaise@beer.com&gt;" />
<person posts="1" size="2" who="Joerg Mayer &lt;jmayer@loplof.de&gt;" />
<person posts="1" size="2" who="Rolf Kalbermatter &lt;r.kalbermatter@hccnet.nl&gt;" />
<person posts="1" size="2" who="David Laight &lt;david@l8s.co.uk&gt;" />
<person posts="1" size="2" who="Shachar Shemesh &lt;sun@consumer.org.il&gt;" />
<person posts="1" size="2" who="Jurgen Van Gael &lt;jurgen.vangael@student.kuleuven.ac.be&gt;" />
<person posts="1" size="2" who="Heiko Nardmann &lt;h.nardmann@secunet.de&gt;" />
<person posts="1" size="2" who="Steven Rubenstein &lt;SJR@ElectricSpectric.com&gt;" />
<person posts="1" size="2" who="tom &lt;twickline2@triad.rr.com&gt;" />
<person posts="1" size="2" who="Claudiu Costin &lt;claudiuc@kde.org&gt;" />
<person posts="1" size="2" who="Dan Kegel &lt;dank@kegel.com&gt;" />
<person posts="1" size="1" who="Ulrich Weigand &lt;weigand@immd1.informatik.uni-erlangen.de&gt;" />
<person posts="1" size="1" who="List vmn &lt;list@vmn.com.br&gt;" />
<person posts="1" size="1" who="us@the-edmeades.demon.co.uk" />
<person posts="1" size="1" who="juergen.schmied@debitel.net" />
<person posts="1" size="1" who="Igor &lt;furlan@telocity.com&gt;" />
<person posts="1" size="1" who="Eleknader &lt;eleknader@phnet.fi&gt;" />

</stats>

<section 
	title="News: CrossOver Office Server Edition" 
	subject="News" 
	archive="http://kt.zork.net/wine/topics.html#News" 
	posts="2" 
	startdate="08/08/2002" 
	enddate="08/24/2002"
>
<topic>News</topic>
<p>Some big announcements from the Wine commercial front.  We'll start 
with TransGaming. </p>
<p>The <a href="http://www.transgaming.com/news.php?newsid=43">
press release</a> from TransGaming announced three new games
available: "KOHAN: Immortal Sovereigns", "KOHAN: Ahriman's Gift" and 
"KOHAN: Immortal Sovereigns - Special Awards Edition."  Available
where?  At TransGaming's 
<a href="http://www.transgaming.com/webstore.php?in=1">new webstore</a>.
Itching for a new addiction?  Twenty dollars will get you a new game.
The Kohan games are available for download through the webstore.
</p>
<p>CodeWeavers has released a beta of a server edition of CrossOver Office
version 1.2.  From their web page:</p>
<quote who="CodeWeavers"> 
<p>
 CrossOver Office Server Edition allows you to run your favorite Windows productivity 
 applications in a distributed thin-client environment under Linux, without needing 
 Microsoft Operating System licenses for each client machine. CrossOver Office Server 
 Edition allows you to satisfy the needs of literally hundreds of concurrent users, all 
 from a single server. 
</p><p>
 Server Edition is also a great addition to Solaris environments, since our built-in support 
 for Solaris desktops makes running Windows applications a possibility on Sun workstations 
 as well. This makes CrossOver Office Server Edition an outstanding choice for engineering, 
 CAD/CAM, scientific, and other high-performance workgroup computing environments. 
</p></quote>
<p>I imagine one of the first things people will think of is licensing.  Obviously
 the above statement about not <i>"needing Microsoft Operating System licenses for 
 each client machine"</i> is no different than the standard CrossOver Office product.
But what about the usage of the applications?  No doubt CodeWeavers has thought long
and hard about this.  They have a page about 
<a href="http://www.codeweavers.com/products/cxofficeserver/no_hassle_licensing.php">
licensing</a> on their website.
</p>
<p>And out of LinuxWorld came 
<a href="http://www.osnews.com/story.php?news_id=1541">this</a> 
report on <a href="http://www.osnews.com">OSNews.com</a>:</p>
<quote who="OSNews.com"><p>
 CodeWeavers were there, they were presenting Office under Linux, and they 
 are creating two new products, one of which is the ability to run Photoshop 
 properly under Linux! In fact, they had a beta ready to ship, but they found 
 some last minute bugs, that put the release on hold.
</p></quote>
<p>In case you're wondering, here's what the <a href="http://appdb.codeweavers.com">
app database</a> says about 
<a href="http://appdb.codeweavers.com/appview.php?appId=20&amp;versionId=660">Adobe Illustrator 9.0</a>
and <a href="http://appdb.codeweavers.com/appview.php?appId=17&amp;versionId=88">Photoshop 6.0</a>
</p>

</section>







<section 
	title="Converting SGML Wine Docs" 
	subject="sgml" 
	archive="http://www.winehq.org/hypermail/wine-devel/2002/08/0150.html" 
	posts="5" 
	startdate="08/14/2002" 
	enddate="08/14/2002"
>
<topic>Documentation</topic>
<p>Fabian Cenedese wanted to know a good way to view the Wine
documention,
<quote who="Fabian Cenedese">
What is the easiest way to view/print the wine-help files that are in sgml?
I fiddled around with sgmltools but couldn't get a useful output </quote>
 </p>

<p>Vincent Beron answered first, 
<quote who="Vincent Beron">
 Running '<code>make</code>' in the documentation directory. It will create an HTML and a 
 PS copy of it. Else, I think there's a current copy on 
 <a href="http://www.winehq.org">http://www.winehq.org</a>.
</quote></p>

<p>Andriy Palamarchuk clarified that, 
<quote who="Andriy Palamarchuk">
I'm afraid just running "make" is not enough. You'll have to run "<code>make html</code>".
</quote></p>

<p>Lawson Whitney produced a little one-liner shell script to be used as a viewer:</p>
<quote who="Lawson Whitney"><p>
I use this:<ul><code>

#!/bin/sh<br />
#&lt;wine&gt;/documentation/*.sgml reader (c) 2000- Lawson Whitney<br />
# Use, distribute, or change at your own risk.<br />
sed -e 's/&lt;[^&lt;&gt;]*&gt;//g' -e 's/&lt;/&lt;/g' -e 's/&gt;/&gt;/g' $1 |less -ni
</code></ul></p>
</quote>

<p>Jeremy Newman suggested a different, low-tech, approach and the rationale for it:</p>
<quote who="Jeremy Newman"><p>
The EASIEST would be to download the PDF versions at:
<a href="http://www.winehq.org/site/documentation">
 http://www.winehq.org/site/documentation</a>
</p><p>
This would give you the best output. Printing the HTML would not look
nearly as nice.
</p><p>
You could make the PDF versions yourself from the tree, but you would
need to have all the correct SGML to PDF utils installed. There is a
script in the documentation directory called 'make_winehq'. Take a look
at that script, or just run it to build the HTML, PDF, and PS versions
of the documentation.
</p></quote>

</section>














<section 
	title="BiDi Support" 
	subject="Re: Add BiDi infrastructure" 
	archive="http://www.winehq.org/hypermail/wine-devel/2002/08/0201.html" 
	posts="12" 
	startdate="08/16/2002" 
	enddate="08/20/2002"
>
<topic>Internationalization</topic>
<p>Shachar Shemesh posted some infrastructure for forthcoming
bidi support via the fribidi libraryu.  Alexandre suggested:</p>
<quote who="Alexandre Julliard"><p>
I suggest you write the real code first, and let us worry about the
configure stuff later. There is no point in adding configure
dependencies for nonexistent code, and once the code is done we can
have a better idea of what dependencies you actually need.
</p><p>
As mentioned already, I think including the fribidi algorithms
directly in the code is a better approach, but the only way to really
say which is the right way is to get something working.
</p></quote>
<p>Shachar pointed out, 
<quote who="Shachar Shemesh">
 I have the creeping suspicion you don't realize just how much of a 
 shortcut using fribidi is. All of the stuff we have there already that 
 says "exteremely preliminary" is going to be replaced with approximately 
 four to five lines of code.</quote></p>
<p>Alexandre replied,
<quote who="Alexandre Julliard">
 Knowing Microsoft, I have the creeping suspicion that it's not going
 to be that easy. I'd be very happy to be proven wrong, but there's
 only one way to do that, and it's to show us the code. Not the
 configure checks, the actual code.</quote></p>

<p>Shachar had some ideas about the implementation though,
<quote who="Shachar Shemesh">
 At the moment, I think it is particularily counter-useful to have 
 mandatory BiDi support in Wine, as this means (among mere applying the 
 BiDi algorithm) translating each string printed to UTF-32 and back 
 (unless we can say for sure that no BiDi is going to be required - 
 haven't found a really good algorithm for that yet, but I'm working on
 it). Not having the proper library on your machine is a pretty good way 
 of indicating that BiDi is not interesting to you (and is, more or less, 
 the way MS tackled the exact same dillema).</quote></p>

<p>Alexandre wondered about using FriBiDi as an external library:
</p><quote who="Alexandre Julliard"><p>
 Well, obviously the number one reason for having that code inside Wine
 is that we can make it work with UTF-16 and skip the conversion step.
 And if there's really a need to disable BiDi for performance reasons,
 a config option is a much better way than trying to guess depending on
 the existence of an external library.
</p><p>
 The only interesting question is whether using the external library
 allows us to do everything we need with reasonable performance, and
 whether it makes things easier. The only way to answer that is to try
 it one way or the other and see what you come up with. 
</p><p>
 If you think using the external library is the way to go, fine, do it
 that way and submit a patch. Then we can start really discussing
 it. And don't worry about configure checks or packaging issues; we'll
 deal with that later on.
</p></quote>

<p>Shachar <a href="http://www.winehq.org/hypermail/wine-devel/2002/08/0228.html">posted</a>
a preliminary patch and noted:
</p><quote who="Shachar Shemesh"><p>
No actual patch, yet, as I still have a few heap corruptions in certain 
cases. Attached, however, is the preliminary "Wine with external 
libfribidi". Do your worst, come back with an opinion. This is not, yet, 
cleaned up, but the interface is a pretty good representation of what 
the final version is going to be.
</p><p>
As a bynote, I will add that it seems that libfribidi may not be as 
mature as I have hoped, and if problems keep popping up, I will put it 
into our code myself (or, more preciseley, try). It will not be an easy 
task, as it currently carries it's own unicode tables, configure 
scripts, and so on. Since you vulenteered to help with this.... ;-).
</p></quote>
<p>Later, he added, 
<quote who="Shachar Shemesh">
Is fribidi going to support all the functionality we are likely to need? 
Yes, I believe it will. That is why I tried to stress the amount of 
shortcutting this library is going to get us. Implementing the various 
unicode algorithms is a pain, and one to be avoided. If, at some stage 
in the future, it turns out that some programs really do need classes 
from GetCharacterPlacement, well, we'll have this discussion again.
</quote></p>
<p>Alexandre disagreed,
<quote who="Alexandre Julliard">
 That's not acceptable. It's perfectly OK to say that we won't
 implement some things until we find something that needs them, but
 it's not OK to pick a design that will prevent us from implementing
 them once they are needed (and they *will* become needed someday).
</quote></p>

<p>Shachar felt it was good enough and didn't think there would
ever really be a need to develop this further.  Alexandre was cautious
though,
<quote who="Alexandre Julliard">
 What I'm saying is that it's not a good idea to start using fribidi,
 create dependencies and problems for packagers, etc. if we know that
 it's a wrong design and that we will need to replace it. The truth is
 that bidi is not really a priority feature (as shown by the number of
 people interested in making it work), and so it doesn't really matter
 if it works tomorrow or only in 3 months. What matters is to pick a
 correct design so that if more people start to care they can build on
 it, instead of having to throw it away and restart from scratch.
</quote></p>

</section>




<section 
	title="Separating 16-bit Functions" 
	subject="Re: wine/ dlls/gdi/Makefile.in dlls/gdi/bidi16.c d ..." 
	archive="http://www.winehq.org/hypermail/wine-devel/2002/08/0190.html" 
	posts="2" 
	startdate="08/15/2002" 
	enddate="08/16/2002"
>
<topic>Project Management</topic>
<p>Alexandre did a CVS commit and noted,
<quote who="Alexandre Julliard">
Moved a large number of 16-bit functions to a separate gdi16.c file.
</quote>  Dimi Paun thought it was good start:</p>
<quote who="Dimitrie Paun"><p>
This is a great idea that I've been advocating for a loooong time now &lt;g&gt;.
</p><p>
I think moving 16 bit code into separate files is cool:
<ul>
  <li> runtime efficiency: If 16 bit code is not invoked, it's not going to be
     paged in during execution</li>
  <li> code neatness: developers working on the 32-bit code (which is
     _the_ code in Wine) will not get distracted by silly 16-to-32-to-16 bit 
     conversions.</li>
  <li> helps correctness: 16-bit code is in general a simple:
  <ul>
	<li>16-to-32 bit conversion</li>
	<li>call the 32-bit equivalent function</li>
	<li>32-to-16 bit conversion</li>
  </ul>
     Which means there is a lot of repetition, template-like coding. Any
     departure from the usual pattern is a *lot* more easily spotted by
     the naked eye if it's present in a file that does just that.</li>
  <li> 16-to-32 bit: we can more easily see (and fix) cases where 32 bit
     code calls 16 bit code.</li>
</ul></p><p>
For all these reasons, I think we should have _all_ 16-bit code into 
separate files. Always. Who knows, maybe we can have makefiles
done such a way that we can avoid compiling 16 bit code altogether! :)
Even if only as a simple check that no 32 bit code calls down to 16 bit...
</p><p>
And again, the _same_ rationale applies to xxxW &amp; xxxA functions,
but I'll not pursue this point for now ;).
</p></quote>


</section>







<section 
	title="Quartz.DLL Replacement" 
	subject="new quartz dll ??" 
	archive="http://www.winehq.org/hypermail/wine-users/2002/08/0044.html" 
	posts="13" 
	startdate="08/09/2002" 
	enddate="08/17/2002"
>
<topic>Multimedia</topic>
<p>Mark Hannessen noticed:</p>
<quote who="Mark Hannessen"><p>
 i just found out that transgaming has a new "quartz dll" in there CVS.
 it apears to use ffmpeg libavcodec.
</p><p>
 the good news:
 libavcodec is LGPL !!!
</p><p>
 so there is a good chance that the entire quartz dll is going to be LGPL
</p></quote>
<p>Ove K&#229;ven pointed him to the license file:
</p><quote who="Ove Kaaven"><p>
 Going to be? It has been for a while already... from the LICENSE file that
 was in effect for the WineX 2.1 release (CVS tag "winex-2-1", in the
 "winex-2-0-branch", where the new quartz code is taking shape):
</p><p>
 Additionally, the following components are covered by the GNU Lesser
 General Public License, found in the LICENCE.LGPL file:
<ul>
  dlls/avicap32/<br />
  dlls/msdmo/<br />
  dlls/quartz/<br />
  dlls/msacm/winemp3<br />
  programs/regsvr32
</ul></p></quote>
</section>





<section 
	title="Wine and GnuPOC" 
	subject="is this known to you (wine gurus) ?" 
	archive="http://www.winehq.org/hypermail/wine-devel/2002/08/0287.html" 
	posts="1" 
	startdate="08/22/2002" 
>

<topic>Integration</topic>
<p>Someone pointed out there's a toolchain using Wine that compiles
EPOC applications:</p>
<quote who="Igor"><p>
GnuPoc makes it possible to develop EPOC applications on your GNU/Linux 
machine.
</p><p>
 It is using GNU make, Wine and GCC crosscompiler for ARM.
</p><p>
<a href="http://gnupoc.sourceforge.net/">http://gnupoc.sourceforge.net/</a>
</p></quote>
<p>What is EPOC you ask?  It's a "32 bit operating system developed 
by Psion and now Symbian Ltd (also called Symbian OS)".  Typical uses
are cell phones and PDA's.  Using Wine it's possible to run the software
development kits published by various manufacturers.</p>

</section>
</kc>

