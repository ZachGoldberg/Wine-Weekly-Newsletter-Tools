<?xml version="1.0" ?>
<kc>


<title>Kernel Cousin Wine</title>

<author email="vinn@theshell.com">Brian Vincent</author>

<issue num="129" date="07/19/2002" />

<intro>
<p>
This is the 129th release of the Wine's kernel cousin publication. Its main
goal is to distribute widely what's going on around Wine (the Un*x Windows
emulator). </p>

</intro>


<stats posts="166" size="611" contrib="56" multiples="29" lastweek="30">

<person posts="13" size="33" who="Francois Gouget &lt;fgouget@free.fr&gt;" />
<person posts="11" size="26" who="Steven Edwards &lt;steven_ed4153@yahoo.com&gt;" />
<person posts="10" size="24" who="Alexandre Julliard &lt;julliard@winehq.org&gt;" />
<person posts="9" size="30" who="Eric Pouech &lt;eric.pouech@wanadoo.fr&gt;" />
<person posts="7" size="14" who="Andriy Palamarchuk &lt;apa3a@yahoo.com&gt;" />
<person posts="6" size="19" who="Uwe Bonnes &lt;bon@elektron.ikp.physik.tu-darmstadt.de&gt;" />
<person posts="6" size="17" who="Shachar Shemesh &lt;wine-devel@sun.consumer.org.il&gt;" />
<person posts="6" size="16" who="Bill Medland &lt;Bill.Medland@accpac.com&gt;" />
<person posts="6" size="15" who="Dmitry Timoshkov &lt;dmitry@baikal.ru&gt;" />
<person posts="5" size="29" who="Gregg Mattinson &lt;gm138242@scot.canada.sun.com&gt;" />
<person posts="5" size="17" who="Max &lt;max@veneto.com&gt;" />
<person posts="5" size="13" who="Juergen Schmied &lt;juergenschmied@lycos.de&gt;" />
<person posts="5" size="13" who="Carl Sopchak &lt;carl.sopchak@cegis123.com&gt;" />
<person posts="5" size="11" who="Andreas Mohr &lt;andi@rhlx01.fht-esslingen.de&gt;" />
<person posts="4" size="13" who="Michael Stefaniuc &lt;mstefani@redhat.com&gt;" />
<person posts="4" size="11" who="Tony Lambregts &lt;tony_lambregts@telusplanet.net&gt;" />
<person posts="3" size="20" who="Guy L. Albertelli &lt;galberte@neo.lrun.com&gt;" />
<person posts="3" size="10" who="Jon Griffiths &lt;jon_p_griffiths@yahoo.com&gt;" />
<person posts="3" size="9" who="Duane Clark &lt;dclark@akamail.com&gt;" />
<person posts="3" size="8" who="John K. Hohm &lt;jhohm@acm.org&gt;" />
<person posts="3" size="7" who="Michael Cardenas &lt;michael.cardenas@lindows.com&gt;" />
<person posts="3" size="6" who="Lionel Ulmer &lt;lionel.ulmer@free.fr&gt;" />
<person posts="2" size="8" who="Oliver Ob &lt;ob_ok@gmx.net&gt;" />
<person posts="2" size="7" who="Massimo &lt;max@veneto.com&gt;" />
<person posts="2" size="6" who="Mike McCormack &lt;mikem@codeweavers.com&gt;" />
<person posts="2" size="5" who="Jesse Allen &lt;uh_ja@gmx.net&gt;" />
<person posts="2" size="5" who="Anthony Tuininga &lt;tuiningas_ml@shaw.ca&gt;" />
<person posts="2" size="4" who="Rein Klazes &lt;rklazes@xs4all.nl&gt;" />
<person posts="3" size="4" who="Joshua Thielen &lt;joshua_thielen@yahoo.com&gt;" />
<person posts="1" size="134" who="friest &lt;friest@acm.org&gt;" />
<person posts="1" size="9" who="Ann and Jason Edmeades &lt;us@the-edmeades.demon.co.uk&gt;" />
<person posts="1" size="4" who="Dimitrie O. Paun &lt;dimi@bigfoot.com&gt;" />
<person posts="1" size="3" who="Jason Filby &lt;jasonfilby@yahoo.com&gt;" />
<person posts="1" size="2" who="Steinar Herland &lt;steinar.herland@gecko.no&gt;" />
<person posts="1" size="2" who="admiral coeyman &lt;admiral@corner.net&gt;" />
<person posts="1" size="2" who="Christian Costa &lt;titan.costa@wanadoo.fr&gt;" />
<person posts="1" size="2" who="Paul Millar &lt;paulm@astro.gla.ac.uk&gt;" />
<person posts="1" size="2" who="Shachar Shemesh &lt;iglu-web@sun.consumer.org.il&gt;" />
<person posts="1" size="2" who="Oliver Sampson &lt;olsam@quickaudio.com&gt;" />
<person posts="1" size="2" who="P. Christeas &lt;p_christ@hol.gr&gt;" />
<person posts="1" size="2" who="David A. Bartmess &lt;dingodave@edingo.net&gt;" />
<person posts="1" size="2" who="KJK::Hyperion &lt;noog@libero.it&gt;" />
<person posts="2" size="5" who="Juergen Schmied &lt;juergenschmied@lycos.de&gt;" />
<person posts="1" size="2" who="Lanny DeVaney &lt;ldevaney@redhat.com&gt;" />
<person posts="1" size="2" who="leanne &lt;leanne@thizlinux.com&gt;" />
<person posts="1" size="2" who="Patrik Stridvall &lt;ps@leissner.se&gt;" />
<person posts="1" size="2" who="Matthieu Foillard &lt;m.foillard@taktile.com&gt;" />
<person posts="1" size="2" who="Ove Kaaven &lt;ovehk@ping.uio.no&gt;" />
<person posts="1" size="1" who="David Laight &lt;david@l8s.co.uk&gt;" />
<person posts="1" size="1" who="Roland &lt;roland@netquant.com.br&gt;" />
<person posts="1" size="1" who="Warren_Baird@cimmetry.com" />
<person posts="1" size="1" who="Rob - &lt;mypublicaccount@hotmail.com&gt;" />
<person posts="1" size="1" who="Hetz Ben Hamo &lt;hetz@kde.org&gt;" />

</stats>

<section
  title="News"
  subject="News"
  archive="http://www.winehq.org/news/announce.php?rel=1.64"
  posts="1"
  startdate="07/11/2002"
  enddate="07/17/2002"
>
<topic>News</topic>
<p>Wine-20020710 fell out of the CVS tree last week.  Alexandre
noted the following:</p>
<quote who="Alexandre Julliard"><p>
WHAT'S NEW with Wine-20020710: (see ChangeLog for details)
<ul>
	<li> DirectSound 8 and DirectInput 8 support.
	</li><li> Many OLE improvements.
	</li><li> Support for font downloading in Postscript driver.
	</li><li> ALSA sound driver.
	</li><li> More portability fixes, particularly for Sparc.
	</li><li> Lots of bug fixes.
</li></ul></p></quote>
<p>Also worth noting is some of the attention the Wine programs are
receiving.  Rolled into this release is some attention for Notepad
(it now uses the RichText edit control) courtesy of Andriy Palamarchuk.
Eric Pouech also submitted a patch to begin resurrecting Winhelp, though
it didn't make it into this release.  </p>





</section>





<section
  title="Using NT Pathnames"
  subject="Re: FindFirstFile/FindNextFile on SMB shares"
  archive="http://www.winehq.org/hypermail/wine-devel/2002/07/0259.html"
  posts="3"
  startdate="07/16/2002"
  enddate="07/16/2002"
>
<topic>Filesystems</topic>
<p>Mike McCormack submitted a patch implementing some
filesystem functions on public windows shares.  Eric
Pouech responded, <quote who="Eric Pouech">
I think the FS implementation gets more and more awful
we need to structure it a bit more (like introducing a real FS driver
model in Wine, and then implement several drivers DOS, SMB...)
comments are welcome
</quote></p>

<p>Obviously Mike had thought about this too and replied with some
ideas:</p>
<quote who="Mike McCormack">
<p>
I agree with you, the FS implementation is a total mess.
</p><p>
My thoughts for the FS implementation are this:

<li>  Modify the wineserver interface to pass NT pathnames. Wineserver
    will decide what is a device, a path etc. One possible exception
    is UNC path names. (preliminary patch already posted to wine-patches)
    </li>

<li>  In the client side, convert dos path names, device names and any
    other filenames to NT path names. Call NTDLL functions only and let
    NTDLL talk to the server. Kernel32 should contain few or no server
    calls. The server should decide whether the file is a device or a
    normal disk file.<br />
    eg. CreateFile("COM1:") -&gt; NtCreateFile("\Devices\Serial0") -&gt; server<br />
        CreateFile("A:) -&gt; NtCreateFile("\Devices\A:") -&gt; server<br />
        CreateFile("C:\xyz.txt") -&gt; NtCreateFile("\Devices\C:\xyz.txt")
    </li>

<li>  Implement "a real driver model" in the client side for dealing with
    ReadFile, WriteFile, delete, rename, SetFilePointer, etc. Probably a
    structure containing function pointers for each operation, which can
    be registered with the client and referred to from wineserver by an
    index.</li>

<li>  Make directories use real server handles, rather than pointers to
    client structures. NtCreateFile supports taking a directory handle
    and a relative path name from that directory to open files. I've
    tried to keep my SMB implementation separate from everything else to
    facilitate this.</li>
</p><p>
As you probably know, I've been working on #1 (see my patch from a few
weeks ago). Dmitry Tmishkov has also been doing some work to unicodify
the entire file API. His work should be available in two weeks or so.
</p><p>
The blocker for #1 is to convince Alexandre that NT really deals with
paths the way my patch does... which involves writing some test
programs on NT. We need to understand the NtQueryDirectoryFile function
in more detail to do this.
</p></quote>

</section>





<section 
	title="AppDB Hits 1000 Entries" 
	subject="AppDB: great news !" 
	archive="http://www.winehq.org/hypermail/wine-devel/2002/07/0210.html" 
	posts="3" 
	startdate="07/12/2002" 
>
<topic>Project Management</topic>

<p>Andreas Mohr reported,
<quote who="Andreas Mohr">
 I just wanted to let you know that the appliation database
 (<a href="http://appdb.codeweavers.com">http://appdb.codeweavers.com</a>) 
 just managed to reach 1000 entries !!
</quote></p>

<p>Roland pointed out that it would be better if there were a 1000 apps
that worked flawlessly.  Francois Gouget provided a link to the apps
that work the best:</p>
<quote who="Francois Gouget">
<p>
Look for applications with a rating of 5. For instance in a fake_windows
configuration:</p><p>
[ <a href="http://appdb.winehq.org/stdquery.php?fields%5B%5D=appFamily.appId&amp;fields%5B%5D=appFamily.appName&amp;fields%5B%5D=appFamily.webPage&amp;rating=5&amp;system=fake&amp;linesPerPage=100">
<i>link</i></a> ]
</p><p>
And remember, preventing rating inflation is the responsibility of
everyone.
</p></quote>


</section>









<section 
	title="Configuring for Sparc Solaris" 
	subject="solaris configure strangness" 
	archive="http://www.winehq.org/hypermail/wine-devel/2002/07/0275.html" 
	posts="8" 
	startdate="07/17/2002" 
	enddate="07/18/2002"
>
<topic>Integration</topic>

<p>Shachar Shemesh tried to compile Wine on Sparc Solaris 2.8.  
He reported a lot of problems trying to configure it that were
similar to:</p>
<quote who="Shachar Shemesh"><p>
<ul><code>
	checking resolv.h usability... no<br />
	checking resolv.h presence... yes<br />
	checking for resolv.h... yes
</code></ul>
</p></quote>

<p>Francois Gouget explained:</p>
<quote who="Francois Gouget"><p>
 It means that:
<ul><code>
   #include &lt;resolv.h&gt;<br />
   int main() { return 0; }
</code></ul></p><p>
 does not compile, but that <code>/usr/include/resolv.h</code> exists.
</p><p>
 In other words, resolv.h depends on other headers that you must include
 before including resolv.h itself.`
 So to have a clean configure, the above header must be moved out of the
 big AC_CHECK_HEADERS and into their individual checks where we can
 specifically test for these dependencies. See for instance XShm.h (only
 a vague quide).
</p></quote>
<p>Shachar explained exactly why he was trying to get Wine to work
on Sparc:
</p>
<quote who="Shachar Shemesh"><p>
 I'll try, but I only have solaris machines at work, and this is far from 
 my main focus on Wine (I'm working on BiDi, if you remember correctly
 ;-). I am only looking into solaris at all because at work we use some 
 windows compat library for solaris (don't remember the name, but it
 wasn't mainsoft's) for the GUI part of the product. I am sprinkling the 
 idea to the Unix GUI team here to check Wine out.
</p><p>
 The response so far has been moderately positive. (using those compat 
 libraries incurs a non-trivial per-seat license that goes to MS, as 
 well as horrible support. They have been complaining that response time 
 on one incident was ONE YEAR!!!! and the idea of having the sources to 
 the library itself were appealing to them). The main problem was that it 
 would take over two days of effort just looking into it, and they cannot 
 spare the time.
</p></quote>
<p>Francois just suggested hacking the autoconf script to get it to
work.  Gregg Mattinson mentioned he might have some time to work on
the Solaris issues.  Two hours later he replied with a patch and
noted, <quote who="Gregg Mattinson">
 This patch fixes the configure problems reported to wine-devel by Shachar 
 Shemesh.  I have only tested it on sparc/solaris.  This patch must be applied 
 after my __sparc__ not defined patch sent to wine-patches on July 17.</quote>
</p>
<p>Francois tested it on FreeBSD and reported configure warnings on that
platform also went away.</p>



</section>








<section 
	title="Memory Handling Problem Found" 
	subject="Virtual Pages difference - Spotted with VirtualQuery()" 
	archive="http://www.winehq.org/hypermail/wine-devel/2002/07/0292.html" 
	posts="4" 
	startdate="07/18/2002" 
>
<topic>Memory Management</topic>

<p>Max wrote in with a detailed bug report after finding VirtualQuery() turned
up a memory handling problem:
</p>
<quote who="Max"><p>
As usual, AutoCAD seems to be a good test-bench for wine :-)
I spotted the problem that seemed coming from VirtualQuery function, but
that is (I guess... hmmmm) more a problem of memory handling in wine.
</p>
<p>
<a href="http://www.winehq.org/hypermail/wine-devel/2002/07/att-0292/01-VirtualQueryTest.cpp">
Attached</a> is the test source (compiled in Borland CBuilder, but should work 
with any compiler, apart some unuseful pragma's).
If needed I can post the compiled too :-)
</p></quote>
<p>
To get around the particular problem he was having he 
made AutoCAD 2000 think it had a different protection flag.
Andreas Mohr provided more information regarding the problem,
<quote who="Andreas Mohr">
 PE files don't get their image mapping done correctly
 (i.e. wrong page protection flags for various memory image sections).
 I once tried to fix it, but it turned out to be a bit problematic
 (crashes), so I gave up on it again.
 See relevant code in loader/* (probably pe_image.c).
</quote></p>

</section>


</kc>
