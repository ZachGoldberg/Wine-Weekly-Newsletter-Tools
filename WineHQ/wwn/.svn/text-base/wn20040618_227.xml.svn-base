<?xml version="1.0" ?>
<kc>

<title>Wine Traffic</title>

<author contact="http://www.theshell.com/~vinn">Brian Vincent</author>
<issue num="227" date="06/18/2004" />
<intro> <p>This is the 227th issue of the Wine Weekly News publication.
Its main goal is to dig holes in the ground. It also serves to inform you of what's going on around Wine. Wine is an open source implementation of the Windows API on top of X and Unix.  Think of it as a Windows compatibility layer.  Wine does not require Microsoft Windows, as it is a completely alternative implementation consisting of 100% Microsoft-free code, but it can optionally use native system DLLs if they are available.   You can find more info at <a href="http://www.winehq.org">www.winehq.org</a></p> </intro>
<stats posts="158" size="928" contrib="53" multiples="23" lastweek="18">

<person posts="21" size="53" who="Alexandre Julliard" />
<person posts="20" size="76" who="Mike Hearn" />
<person posts="11" size="63" who="Shachar Shemesh" />
<person posts="8" size="82" who="Luca Capello" />
<person posts="7" size="251" who="Twickline" />
<person posts="7" size="31" who="Dimitrie O. Paun" />
<person posts="7" size="20" who="Eric Pouech" />
<person posts="5" size="13" who="Lionel Ulmer" />
<person posts="5" size="12" who="Joel Konkle-Parker" />
<person posts="4" size="141" who="Johane" />
<person posts="4" size="18" who="Filip Navara" />
<person posts="4" size="10" who="James Dean Anderson" />
<person posts="4" size="8" who="Gerald Pfeifer" />
<person posts="3" size="9" who="Jonathan Fosburgh" />
<person posts="3" size="8" who="Rein Klazes" />
<person posts="3" size="5" who="Ivan" />
<person posts="2" size="7" who="Chris Morgan" />
<person posts="2" size="6" who="John Birrell" />
<person posts="2" size="6" who="James Courtier-Dutton" />
<person posts="2" size="5" who="Dmitry Timoshkov" />
<person posts="2" size="4" who="Steven Edwards" />
<person posts="2" size="3" who="Jon Griffiths" />
<person posts="1" size="6" who="Richard Gobeille" />
<person posts="1" size="5" who="Krishna Murthy" />
<person posts="1" size="4" who="Christoph Lindemann" />
<person posts="1" size="4" who="Uwe Bonnes" />
<person posts="1" size="4" who="Paul Millar" />
<person posts="1" size="4" who="Wolfgang Glunz" />
<person posts="1" size="3" who=" (=?utf-8?q?Andr=C3=A9_Johansen?=)" />
<person posts="1" size="3" who="Paul Davis" />
<person posts="1" size="3" who="Kurt Pfeifle" />
<person posts="1" size="3" who="jordan lougheed" />
<person posts="1" size="3" who="Rick Romero" />
<person posts="1" size="2" who="Mike Kost" />
<person posts="1" size="2" who="Paul R Streitman" />
<person posts="1" size="2" who="Saulius Krasuckas" />
<person posts="1" size="2" who="Oliver" />
<person posts="1" size="2" who="Mike McCormack" />
<person posts="1" size="2" who="Andrei Barbu" />
<person posts="1" size="2" who="Chris Morgan" />
<person posts="1" size="2" who="Christof Meerwald" />
<person posts="1" size="2" who="Phil Krylov" />
<person posts="1" size="2" who="Ferenc Wagner" />
<person posts="1" size="2" who="Robert Shearman" />
<person posts="1" size="2" who="Gerhard W. Gruber" />
<person posts="1" size="2" who="Matt Beaumont" />
<person posts="1" size="1" who="Stefan Leichter" />
<person posts="1" size="1" who="David Purucker" />
<person posts="1" size="1" who="root" />
<person posts="1" size="1" who="Brian Vincent" />
<person posts="1" size="1" who="Damjan Jovanovic" />

</stats>
<section 
	title="News: Wine-20040615, Interview with Lionel Ulmer, CXO 3.0.1" 
	subject="News"
	archive="http://cvs.winehq.com/cvsweb/wine/ANNOUNCE?rev=1.89&amp;content-type=text/x-cvsweb-markup" 
	posts="2"
	startdate="06/12/2004"
	enddate="06/18/2004"
>
<topic>News</topic>
<p>Alexandre is back from vacation.  After steamrolling
through a patch backlog he put out Wine-20040615 on 
Tuesday:</p>
<quote who="Alexandre Julliard"><p>
WHAT'S NEW with Wine-20040615: (see 
  <a href="http://cvs.winehq.com/cvsweb/wine/ChangeLog?rev=1.84&amp;content-type=text/x-cvsweb-markup">ChangeLog</a> for details)
<ul>
        <li> Major winedbg rewrite using the dbghelp dll.</li>
        <li> New Wine preloader to reserve memory areas at startup.</li>
        <li> Many improvements to the audio support.</li>
         <li> Lots of bug fixes.</li></ul>
</p></quote>

<p>As always, head over to 
  <a href="http://www.winehq.com/site/download">Wine's download page</a>
  to snag a copy.  </p>

<p>We published an 
<a href="http://www.winehq.com/?interview=15">interview
with Lionel Ulmer</a> this week.  Lionel is one of Wine's DirectX gurus
and has been involved with Wine for almost six years.</p>

<p>CodeWeavers 
<a href="http://crossover.codeweavers.com/pipermail/announce/2004-June/000024.html">announced</a>
a bugfix release of CrossOver Office, version 3.0.1.  The primary 
fixes are aimed at Fedora Core 2 users.  Jeremy White made it clear
in his announcement that this is just a minor release,
<quote who="Jeremy White">
 Please don't feel that you have to upgrade to this release;
 if everything is working well (and you're not on Fedora),
 sitting pat is a perfectly fine choice.</quote></p>

<p>CodeWeavers and Lycoris have 
<a 
href="http://www.codeweavers.com/site/about/general/press/?id=20040616">teamed
up</a> to offer a product that bundles CrossOver Office with the Lycoris 
Desktop/LX distribution. <quote who="CodeWeavers">
Lycoris will also begin selling CrossOver Office as a standalone product to 
the public via all Lycoris wholesale and retail outlets as well as its Lycoris 
store.</quote></p>

<p>Over at O'Reilly's LinuxDevCenter.com there's an article
titled <i><a href="http://www.linuxdevcenter.com/pub/a/linux/2004/06/10/win4lin.html">Windows
Compatibility for the Linux Desktop</a></i>.  It briefly mentions both Wine
and CrossOver Office as a way to run Windows applications on Linux.  However,
the article is very specific: it's goal is to get Microsoft Project running.
The best solution they found to do that is Win4Lin.  Of course that
means, <quote who="LinuxDevCenter.com">
you'll need a licensed copy of Windows to use</quote>. They admit that 
CrossOver Office would have been a nice solution,
<quote who="LinuxDevCenter.com">
CodeWeavers doesn't offer support for Project. If it had, CrossOver would have 
been a good choice: it's fast, resource-light, and inexpensive </quote></p>

</section>
<section 
	title="Mouse Handling" 
	subject="Re: dlls/dinput/mouse.c warp handling"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/06/0317.html" 
	posts="6"
	startdate="06/16/2004"
	enddate="06/17/2004"
>
<topic>DirectX</topic>
<topic>IO</topic>
<p>James Dean Anderson posted a patch to improve mouse
handling in some games:</p>
<quote who="James Dean Anderson"><p>
 this is a more complete version of my mouse patch in which I tried to 
 remove this funny mouse-warping-stuff.
</p><p>
 the mouse feels much better this way, but I am new to wine and maybe I 
 missed something important and/or did not remove the mouse-warping cleanly.
</p></quote>

<p>Lionel Ulmer didn't like the patch at all:</p>
<quote who="Lionel Ulmer"><p>
 Errrm, do you understand exactly what you remove and why it was in the code ?
</p><p>
 Basically, if you remove mouse warping, when you play games like Quake, you
 will only be able to turn to your right (or left :-) ) for a fixed amount...
 I.e. up until the point where the mouse will hit the right border of the
 window. I agree though that 2D games (like StarCraft or others) will feel a
 LOT better with a patch like that, but it's plainly wrong.
</p><p>
 The only way to fix this is to sometimes warp the mouse back in the middle
 of the window (or to use DGAMouse (or to write a new X11 extension :-) )).
</p></quote>

<p>James admitted he didn't know what it was but asked for an
explanation to help understand better:</p>
<quote who="James Dean Anderson"><p>
 There are several things in wine I don't know yet (e.g. 
 what does GEN_EVENT do exactly / what are these critical-sections / etc.).
 But I think doing mouse-warping in 3 states and across different 
 functions is much to complicated and while it works great in MaxPayne, 
 it behaves strangely in WWIIOL.</p><p>
 I tried to do it in a simpler way.</p><p>
 Maybe I'll just try to understand wine a little deeper and post a more 
 elaborated patch later.</p><p>
 Sound and joystick don't work too well in WWIIOL too (the joystick seems 
 to send random data / I get only 1 channel of the sounds) so there's 
 still a lot to do.</p></quote>

<p>Lionel described how the mouse handling functioned:</p>
<quote who="Lionel Ulmer"><p>
Well this is related to the way DInput works: you have two ways to get
information from your devices, either you get an immediate picture of the
device state at a given time (GetDeviceState) or you can get all the
individual timestamped events that occurred since last time you queried the
device (GetDeviceData).
</p><p>
So GEN_EVENT simply queues a hardware event into the queue that can be
queried via 'GetDeviceData'.
</p><p>
The critical sections are here because you can have one thread queuing
events (Wine's hardware event thread) while another (the game) can access
the data, which means you need to protect against concurrent usage.
</p><p>
The warping in three states has been disabled for a long time now (it is
only enabled if you #define MOUSE_HACK). It's an idea that worked once, but
not anymore due to mouse event compression in some core part of Wine's input
handling. The idea was that, basically, as the fact of warping the mouse
WILL generate an X11 event for you, you could detect when the warp was
actually done by checking when the ext mouse position corresponds to your
warp position. Which would prevent some 'glitches' if you got a queued X11
event back from before the warp buf after you issued the warp command to the
X11 server.
</p><p>
As to doing it only in the 'mouse even hook' I agree that it is cleaner that
way (I missed this line when checking your patch so I thought that you
removed warping completely :-) ). The only problem here is that you may have
a LOT more warps done that way than in the previous way. For example, if X11
generates 10 X mouse events for each game 'frame', you will warp your mouse
10 times more with your code than with the current one (which only warped
the mouse when the game actually queries the device).
</p><p>
But the main way to rework this would be to put the complete warping stuff
in the X11 driver (as the way it's done now is fundamentally flawed for some
games).
</p><p>
Note also that it would be much nicer to do a 'rectangle' warp instead of a
'point' wrap: do not wrap on each mouse event, but only when the mouse goes
out of a centred rectangle which would be about half the size of the
screen. This would have the advantage of smoother mouse movements as it
would minimize a lot the number of warps.
</p><p>
And DGAMouse support / X11 extension writing would be the other way :-)
</p></quote>

<p>James thanked him for the explanation.</p>

</section>
<section 
	title="Doc Update &amp; Critical Section Explanation" 
	subject="Re: dlls/dinput/mouse.c warp handling"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/06/0333.html" 
	posts="6"
	startdate="06/16/2004"
	enddate="06/17/2004"
>
<topic>Architecture</topic>
<p>As an answer to part of James' question above, Mike
Hearn described what Wine's critical section handling
was all about:</p>

<quote who="Mike Hearn">
<p>
I bugged Newman yesterday and because he's a total rockstar he fixed the
bug in the doc generation script, so the latest developer guide is now on
the net:
  <ul><a href="http://winehq.com/site/docs/winedev-guide/threading">
  http://winehq.com/site/docs/winedev-guide/threading</a></ul>
</p><p>
explains the Wine multi-threading in more detail than you probably want,
however if you read the first section it may help. Basically a critical
section is a mutex (or MUTual EXclusion): when one thread has entered the
critical section all other threads that try to enter queue up at the
entrance until the thread currently inside leaves.
</p><p>
This allows you to prevent multiple threads from running the same piece of
code at once. It's essential for things like linked list manipulation.
Because the entirety of Win32 is thread safe you will see this sort of
thing all over the place.
</p><p>
If a thread deadlocks on a critical section (i.e. is queued up waiting to
enter for a long time) you will see a message like this:
<ul><code>
err:ntdll:RtlpWaitForCriticalSection thread 0x9 timed out waiting for
thread 0x10 in 0x12345678 (?)
</code></ul></p><p>
The ? means the critical section is unnamed. Virtually all Wine internal
sections are named so you can identify them, so ? normally means the
section was created by an application.
</p></quote>

</section>
<section 
	title="Nuking Wineinstall" 
	subject="Do we still need wineinstall?"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/06/0242.html" 
	posts="3"
	startdate="06/13/2004"
	enddate="06/15/2004"
>
<topic>Configuration</topic>
<p>Over the past few months some changes have been made
behind the scenes to have Wine use some sensible default
configuration values.  For example, the filesystem rewrite
removed the need for all the drive settings.  
Mike Hearn wanted to know if it was time to begin 
making more obvious changes to Wine's configuration:</p>
<quote who="Mike Hearn"><p>
I've been running without a config file for a while now, and have fixed
various misc bugs related to that as I go - I'm sure there are some more
in there, but as the config file is destined for eventual doom anyway I am
wondering if we still need wineinstall at all?
</p><p>
Currently, it's possible to use Wine quite successfully just by doing a
standard <tt>./configure</tt>, <tt>make</tt>, <tt>make install</tt>. 
When you run wine for the first
time wineprefixcreate will be used to setup ~/.wine, merge the
registry, create the fake windows drive and so on. The only piece you
don't get is the default config file, but that doesn't seem to make much
difference any more. At least, the defaults should be in the code not the
config file as people never upgrade that bit anyway :)
</p><p>
So - do we still need it?
</p></quote>

<p>Dimi thought it might be time,
<quote who="Dimitrie Paun">
You have my vote to nuke it :) (getting rid of it is on the 0.9 TODO BTW)
</quote></p>

<p>It still exists in the latest Wine snapshot that came out
this week, but perhaps by next month Alexandre will have 
removed it.</p>

</section>
<section 
	title="Photoshop With No Config File" 
	subject="[PHOTOSHOP7] not installable, OS not supported, for NT4 service pack &gt;= 6a"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/06/0291.html" 
	posts="3"
	startdate="06/16/2004"
>
<topic>Configuration</topic>
<topic>Fixes</topic>
<p>Luca Capello followed Mike's suggestion and tried out running
some applications without a config file.  He reported a problem
with Adobe Photoshop 7.0:</p>
<quote who="Luca Capello"><p>
'Adobe Photoshop 7.0' can't be installed: the problem is grave, as the
installation process doesn't start at all.
</p><p>

I can see the 'Photoshop 7' logo window, but then another window appears
with this message:
<ul><code>
	"This operating system is not supported by this installation.
	For Windows NT 4, you must have service pack 6a or greater to
	install.

	Setup will now quit."
</code></ul></p><p>
And pressing OK causes nothing, I mean, I don't need to press OK to have
'wine' quitting: I can leave the message window open and continue to use
the 'gnome-terminal' with no problem.
</p><p>
Again, with the 'fake_windows' provided by the 'WineTools' [2], I can
install 'Photoshop 7.0' with all the options (including 'ImageReady').
The only problem I get is an error creating the icon set, but pressing
'OK' lets the installation process to finish cleanly.
</p><p>
Solutions?
</p></quote>

<p>Mike quickly diagnosed the problem,
<quote who="Mike Hearn">
This is probably because we default to using DLL linkage heuristics in the
no config file case. These are frequently wrong, most people just set
their config file to default to Win98. I sent a patch to create a new
"auto" version to restore the old behaviour and set the default version to
98, does it help?</quote></p>

<p>Luca reported success with the patch.  </p>
</section>
<section 
	title="Games Testing Update" 
	subject="Game Testing Update - 20040505"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/06/0212.html" 
	posts="1"
	startdate="06/11/2004"
>
<topic>Testing</topic>
<p>Mike Kost took the time to put together some nice tests
of various games with Wine.  He provided links to demos and
opened <a href="http://bugs.winehq.org">Bugzilla tickets</a>
on things that didn't work:</p>
<quote who="Mike Kost"><p>
 Here is a continuation of my game testing efforts. Same rules still apply in my 
 efforts: All games tested are freely available as demos or F/OSS games on the 
 Internet and they don't work right. I know 20040505 is showing its age, but  
 there isn't a 200406xx yet.
</p><p>
Since my last report:
<ul>
<li> Bugzlla bugs #2128 &amp; #2129 have closed. The problems were self-correcting</li>
<li> 2 More Bugs Filed
	<ul>
     	<li>#2276 - Screen refresh/redraw errors in Austerlitz demo</li>
	<li>#2277 - Redraw/refresh errors for Remote Assault demo</li></ul></li>
<li> Stopped testing The War Engine. I don't want to juggle more than 4 programs 
at a time and I want to pick up Galactic Civilization.</li></ul>
</p><p>
<u>Austerlitz Summary</u></p><p>
Bug #2276 is newly filed and the unhandled exception error is no longer 
present.
There is still a screen redraw error
</p><p>
Full report:
<ul><a href="http://www.tashcorp.net/Wine/Austerlitz/austerlitz-20040505.html">
http://www.tashcorp.net/Wine/Austerlitz/austerlitz-20040505.html</a></ul>
</p><p>

<u>Dominions II</u>
</p><p>
No noticeable change. Dominions II still has screen redraw errors and mouse 
errors.
</p><p>
Full report:
<ul><a href="http://www.tashcorp.net/Wine/DominionsII/dominionsII-20040505.html">
http://www.tashcorp.net/Wine/DominionsII/dominionsII-20040505.html</a></ul>
</p><p>

<u>Remote Assault</u>
</p><p>
Remote Assault has started running but has several refresh/redraw errors. 
There are several new 'err:ddraw' messages:
<ul><code>
err:ddraw:set_render_state Unhandled dwRenderStateType ...
</code></ul></p><p>
and
<ul><code>
err:ddraw:Main_DirectDrawSurface_Lock  Invalid values in LPRECT !!!
</code></ul>
</p><p>
Full report:
<ul><a href="http://www.tashcorp.net/Wine/RemoteAssault/remoteassault-20040505.html">
http://www.tashcorp.net/Wine/RemoteAssault/remoteassault-20040505.html</a></ul></p>
</quote>

</section>
<section 
	title="Systray Patch Update" 
	subject="Game Testing Update - 20040505"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/06/0270.html" 
	posts="1"
	startdate="06/11/2004"
>
<topic>Testing</topic>
<p>Mike Hearn maintains a patch that allows apps to dock 
in the system tray.  He went through and updated
<a href="http://www.winehq.com/hypermail/wine-devel/2004/06/att-0270/01-systray2.patch__charset_UTF-8">his
patch</a> and explained what was stopping it from being committed to CVS:</p>
<quote who="Mike Hearn"><p>
This version is resynced against CVS HEAD, and now does a ShowWindow in
the right place (just after the embed notification not in some random WM
message).
</p><p>
This won't be merged so I'm sending it to wine-devel not wine-patches.
Getting it merged is blocking on either somebody giving me example code
for [un]marshalling an HICON into a block of memory or (best fix) images
being moved into the wineserver. This is on Ulrich's todo list but if
anybody wants to beat him to it, go ahead, it's still some time off yet.
</p></quote>

</section></kc>
