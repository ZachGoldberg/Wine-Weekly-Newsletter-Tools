<?xml version="1.0" ?>
<kc>

<title>Wine Traffic</title>

<author contact="http://www.theshell.com/~vinn">Brian Vincent</author>
<issue num="221" date="04/30/2004" />
<intro> <p>This is the 221st issue of the Wine Weekly News publication.
Its main goal is to travel! It also serves to inform you of what's going on around Wine. Wine is an open source implementation of the Windows API on top of X and Unix.  Think of it as a Windows compatibility layer.  Wine does not require Microsoft Windows, as it is a completely alternative implementation consisting of 100% Microsoft-free code, but it can optionally use native system DLLs if they are available.   You can find more info at <a href="http://www.winehq.org">www.winehq.org</a></p> </intro>
<stats posts="204" size="1125" contrib="66" multiples="34" lastweek="43">

<person posts="17" size="48" who="Dimitrie O. Paun" />
<person posts="14" size="39" who="Dmitry Timoshkov" />
<person posts="13" size="31" who="Alexandre Julliard" />
<person posts="12" size="29" who="Jakob Eriksson" />
<person posts="11" size="34" who="Ferenc Wagner" />
<person posts="10" size="27" who="Mike Hearn" />
<person posts="9" size="27" who="Kevin Koltzau" />
<person posts="8" size="22" who="Francois Gouget" />
<person posts="6" size="12" who="Krzysztof Foltman" />
<person posts="5" size="17" who="Shachar Shemesh" />
<person posts="5" size="12" who="Ivan Leo Murray-Smith" />
<person posts="5" size="10" who="Lionel Ulmer" />
<person posts="5" size="10" who="R.U. Deranged" />
<person posts="4" size="15" who="Robert Reif" />
<person posts="4" size="14" who="Tim Hentenaar" />
<person posts="4" size="12" who="Eric Pouech" />
<person posts="3" size="480" who="Henk Poley" />
<person posts="3" size="22" who="Saulius Krasuckas" />
<person posts="3" size="8" who="Brian Vincent" />
<person posts="3" size="7" who="Hans Leidekker" />
<person posts="3" size="7" who="Ylia K" />
<person posts="3" size="7" who="Paul Millar" />
<person posts="3" size="7" who="Brett I. Holcomb" />
<person posts="3" size="6" who="Jeremy Newman" />
<person posts="2" size="72" who="emmanuel maillard" />
<person posts="2" size="6" who="hatky" />
<person posts="2" size="5" who="Raphael" />
<person posts="2" size="5" who="Stefan Leichter" />
<person posts="2" size="4" who="Duane Clark" />
<person posts="2" size="3" who="Marcus Meissner" />
<person posts="2" size="3" who="Steven Edwards" />
<person posts="2" size="3" who="Abby Ricart" />
<person posts="1" size="8" who="Florian Wunderlich" />
<person posts="1" size="8" who="Brian Vincent" />
<person posts="1" size="6" who="Kenny Love" />
<person posts="1" size="4" who="Sylvain Petreolle" />
<person posts="1" size="4" who="Kevin F. Quinn" />
<person posts="1" size="3" who="Mike McCormack" />
<person posts="1" size="3" who="Rafael Avila de Espindola" />
<person posts="1" size="3" who="Sergio =?ISO-8859-1?Q?L=F3pez?=" />
<person posts="1" size="3" who="Vincent B&#233;ron" />
<person posts="1" size="3" who="James Gregory" />
<person posts="1" size="3" who="Christian Costa" />
<person posts="2" size="6" who="Chris Morgan" />
<person posts="1" size="3" who="Chris McKenzie" />
<person posts="1" size="2" who="Rein Klazes" />
<person posts="1" size="2" who="Jakob Eriksson" />
<person posts="1" size="2" who="Joel Konkle-Parker" />
<person posts="1" size="2" who="Robert Shearman" />
<person posts="1" size="2" who="Ulrich Czekalla" />
<person posts="1" size="2" who="Roderick Colenbrander" />
<person posts="1" size="2" who="Mauro Carvalho Chehab" />
<person posts="1" size="2" who="Falcifer" />
<person posts="1" size="2" who="David Hammerton" />
<person posts="1" size="2" who="Santosh Siddheshwar" />
<person posts="1" size="2" who="Juan Lang" />
<person posts="1" size="2" who="=?iso-8859-1?q?Ant=F3nio=20Serra?=" />
<person posts="1" size="2" who="(brettholcomb)" />
<person posts="1" size="1" who="Filip Navara" />
<person posts="1" size="1" who=" &lt;greensh@knology.net&gt;" />
<person posts="1" size="1" who="Robert van Herk" />
<person posts="1" size="1" who="kosta" />

</stats>
<section 
	title="News: Return of the Interviews" 
	subject="News"
	archive="http://www.costarica.com/Home" 
	posts="2"
	startdate="04/24/2004"
	enddate="04/30/2004"
>
<topic>News</topic>
<p>I'm going to be in on vacation next week, so there won't
be an issue of the Wine Weekly News.  I'll be in Costa
Rica staying as far away from computers as I can.</p>

<p>But I couldn't leave you folks without something to read.
So we're kicking off another season of interviews with Wine
developers.  Last year we did a dozen interviews that are now
archived on the Wine <a href="http://www.winehq.org/site/who">
Who's Who</a> page.  So in lieu of news next week we'll be 
publishing an interview.  Jeremy Newman will probably post
the interview next Thursday or Friday, look for the news
on <a href="http://www.winehq.org">WineHQ</a>.  Next 
week <a href="http://www.winehq.org/?interview=13">this link</a>
will be active and should take you there.  
</p><p>
I should also note that the process is rather arbitrary. 
There's definitely some developers who have been around a
while that we haven't interviewed yet.  Likewise, there's
some people I met at WineConf that have been up
to some interesting things.  People keep talking about this
guy named Alexandre Julliard and asking when we'll interview
him.  I suppose at some point this summer we'll look him up
and fire off some questions.</p>

</section>

<section 
	title="Window Management Ideas" 
	subject="Window management protocol extensions"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/04/0654.html" 
	posts="3"
	startdate="04/24/2004"
>
<topic>Window Management</topic>
<p>Window Management remains an issue for Wine.  It's on the
to-do list for revamping but that work is likely months away
unless someone jumps in or we clone Alexandre.  Mike Hearn
tried to spark a discussion with some ideas:</p>
<quote who="Mike Hearn"><p>
The latest WM problems caused by Metacity preventing windows from being
moved offscreen prompted to raise the issue of having a Wine specific
extension to the NETWM (EWMH) protocol into which we can easily add
whatever semantics we need to map win32 windowing to X windowing more
easily.
</p><p>
The idea would be that we have a new property/set of properties we can
mark windows with, _NET_WM_WINDOWS_EMULATION for instance, and standards
compliant window managers will take note and not do things that break us.
</p><p>
Short of actually doing all our own window management, this is probably
the best way to fix the obscure bugs caused by different interpretations
WMs have of what various hints mean. The current NETWM border hints are
semantic not presentational, so we cannot rely on particular
intepretations. The MWM hints are even worse - they are apparently
undocumented, and most modern WM authors consider them deprecated. Thanks
to their undocumentedness, WMs vary in their interpretation of these too:
<ul><a href="http://bugs.kde.org/show_bug.cgi?id=73294">
http://bugs.kde.org/show_bug.cgi?id=73294</a>
</ul></p><p>
So, I'd like to start gathering ideas on what sort of things we'd like to
have in the NETWM spec, seeing as how many WMs conform to it these days.
</p><p>
First up is a way to ensure the WM doesn't attempt to keep the window
onscreen of course :) Other things we probably want are related to border
styles, an absolutely crystal-clear no-wriggling-possible equivalent to
PPosition as apparently the wording of the ICCCM allows WM authors to
ignore this if they want. We might also want to look at where we use
unmanaged windows and see if we can replace them with the use of managed
windows+hints.
</p><p>
We can probably hack around the lack of these things for now, but being
able to use these hints where possible will probably keep a lot of us from
going grey-haired early :)
</p></quote>

<p>David Hammerton thought it was a good idea,
<quote who="David Hammerton">
 Just wanted to chime in here and remind you of our discussion on IRC 
 just then. I think this is a great idea and I sure do have a lot to say 
 on this topic (in terms of what I'd like to see in the spec) - but I 
 won't be able to go over it for at least a week (probably longer). I'm 
 sure some of my colleagues have a lot to say on this topic, too.
</quote></p>  That was the extent of the discussion.

</section>

<section 
	title="More Filesystem Work" 
	subject="CVS Invalid path for c:\\Windows"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/04/0685.html" 
	posts="5"
	startdate="04/25/2004"
	enddate="04/28/2004"
>
<topic>Filesystems</topic>
<p>Brett Holcomb ran into a filesystem problem and wondered
if someone had any idea what was wrong:</p>
<quote who="Brett Holcomb"><p>
I installed from CVS today and when I start wine I get the error below.
This happens even with the standard config file that it creates.  I've
checked both my and the config file and can't find any errors.  I'm
including the c drive part of the config file.
</p><p>
Any ideas why this is telling me this?
</p><p>

Error:
<ul><code>
Invalid path L"c:\\Windows" for L"windows" directory: does not exist.
Perhaps you have not properly edited your Wine configuration file
(/home/brett/.wine-cvs/config)</code></ul></p></quote>

<p>Alexandre then mentioned the recent filesystem changes have
made the Path directive of the config file obsolete,
<quote who="Alexandre Julliard">
Path entries from the config file are no longer used. Check the
contents of your ~/.wine/dosdevices directory.</quote></p>

</section>
<section 
	title="When Stubs Are FIXME's" 
	subject="Re: SetCalendarInfoA and SetCalendarInfoW implementations"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/04/0780.html" 
	posts="2"
	startdate="04/28/2004"
	enddate="04/28/2004"
>
<topic>Creating Stubs</topic>
<p>If you've stumbled around in Wine for a while you've probably
seen all the stubbed out functions.  These are placeholders for
parts of the Win32 API that haven't been implemented yet.  
Sometimes the functionality isn't utilized enough to justify
development and an application can fail gracefully if it isn't
implemented.  Other times the API is so obtuse no one has had
a chance to develop it.  However, when we speak of creating a
stubbed out function it often refers to an empty implementation of
it that doesn't return a useful value.  William Lahti submitted
his first patch this week and asked a very valid question about
such behavior:</p>
<quote who="William Lahti"><p>
	I have implemented the SetCalendarInfoA and SetCalendarInfoW API
functions in dlls/kernel/time.c. I am aware that you generally do not like it
when more than 1 thing is changed, but SetCalendarInfoA is not much more than 
a call to SetCalendarInfoW. I am also curious as to why both functions were 
listed as stdcalls rather than stubs when they were both stubs in the source 
file.</p></quote>

<p>Vincent B&#233;ron had a good explanation of it:</p>
<quote who="Vincent Beron"><p>
There are two levels of stubs: "real stubs", and dummy functions.
</p><p>
stub is used in a spec file when there's no implementation whatsoever of
a given function, not even a dummy one. If an app tries to use that
function, it results in a segmentation fault (and usually a crash to the
debugger).
</p><p>
In the case of SetCalendarInfo{A,W}, some dummy function existed, so
they were callable by an app without it crashing (hence the stdcall
declaration). Of course it wouldn't actually do much, that's what your
implementation is for. The "stub" in the FIXME is to remind people that
some function is not really there, although it's been called.
</p><p>
The line is difficult to draw between the two types of stub: some apps
will crash with a real stub and need a dummy one, some other ones will
crash with a dummy one and will route around real stubs. Usually it's
done on a case by case basis.
</p></quote>

</section>

<section 
	title="Compiler Alignment Differences" 
	subject="Alignment testing"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/04/0698.html" 
	posts="5"
	startdate="04/26/2004"
>
<topic>Testing</topic>
<p>Hans Leidekker tracked down a bug that seemed to be
compiler dependent:</p>
<quote who="Hans Leidekker"><p>
kernel/tests/generated.c currently shows one failure
when the executable is compiled with MinGW. Investigation
shows that MinGW and GCC differ when it comes to alignment
of doubles (i.e. a 64 bit wide type).
</p><p>
I have constructed the test below that shows the difference
between MinGW and GCC. My question is, could someone compile
this with MSVC &gt;= 6, run it, and report the outcome here?
</p></quote>

<p>Dmitry Timoshkov did and Hans put together a table of
the results:</p>
<quote who="Hans Leidekker"><p>
<table><tr><td>&#160;</td>                         
			 <td>MSVC</td><td>MinGW</td><td>  GCC</td></tr>

<tr><td>Alignment of __int64:</td><td>     8</td><td>      8</td><td>      8</td></tr>
<tr><td>Size of __int64:</td><td>          8</td><td>      8</td><td>      8</td></tr>
<tr><td colspan="4"> &#160;</td></tr>
<tr><td>Alignment of large_int:</td><td>   8</td><td>      8</td><td>      4</td></tr>
<tr><td>Size of large_int:</td><td>        8</td><td>      8</td><td>      8</td></tr>
<tr><td colspan="4"> &#160;</td></tr>
<tr><td>Alignment of container1:</td><td>  8</td><td>      8</td><td>      4</td></tr>
<tr><td>Size of container1:</td><td>       16</td><td>     16</td><td>     12</td></tr>
<tr><td colspan="4"> &#160;</td></tr>
<tr><td>Alignment of container2:</td><td>  8</td><td>      8</td><td>      4</td></tr>
<tr><td>Size of container2:</td><td>       16</td><td>     16</td><td>     12</td></tr>
<tr><td colspan="4"> &#160;</td></tr>
<tr><td>Alignment of container3:</td><td>  8</td><td>      8</td><td>      4</td></tr>
<tr><td>Size of container3:</td><td>       8</td><td>      8</td><td>      8</td></tr>
</table></p><p>
Clearly GCC is the odd one out. When a double is embedded in
a structure GCC does not adjust the alignment of the structure
to the size of a double.
</p><p>
So, should we add -malign-double to the compiler flags?
</p></quote>

<p>Alexandre had a different idea,
<quote who="Alexandre Julliard">
No, that would break Unix compatibility. We have to explicitly pad the
structures that need it.</quote></p>

<p>After going back over the original generated test, Hans
realized another problem might be lurking.  Some things don't
get defined that need to.</p>

</section>

</kc>
