<?xml version="1.0" ?>
<kc>

<title>Wine Traffic</title>

<author contact="http://www.theshell.com/~vinn">Brian Vincent</author>

<issue num="164" date="04/04/2003" />

<intro>
<p>This is the 164th release of the Wine's kernel cousin publication. 
 Its main goal is to frantically catch up with Wine development after
 being on vacation.
 It also serves to inform you of what's going on around Wine (the Un*x 
 Windows emulator).</p>
</intro>



<stats posts="185" size="556" contrib="52" multiples="27" lastweek="27">

<person posts="30" size="105" who="Dimitrie O. Paun" />
<person posts="28" size="65" who="Alexandre Julliard" />
<person posts="19" size="45" who="Sylvain Petreolle" />
<person posts="10" size="28" who="Mike Hearn" />
<person posts="9" size="30" who="Adam Gundy" />
<person posts="8" size="20" who="Eric Pouech" />
<person posts="6" size="26" who="Bill Medland" />
<person posts="6" size="19" who="Francois Gouget" />
<person posts="6" size="16" who="Uwe Bonnes" />
<person posts="5" size="13" who="Steven Edwards" />
<person posts="3" size="11" who="Michael Stefaniuc" />
<person posts="3" size="8" who="Gerald Pfeifer" />
<person posts="3" size="8" who="Paul McNett" />
<person posts="3" size="7" who="Rod Taylor" />
<person posts="3" size="7" who="Jeremy Newman" />
<person posts="2" size="8" who="Rolf Kalbermatter" />
<person posts="2" size="6" who="Kevin Cousins" />
<person posts="3" size="8" who="Davide Giannotti" />
<person posts="2" size="6" who="Steven Garrison" />
<person posts="2" size="5" who="Ove Kaaven" />
<person posts="2" size="5" who="Kevin DeKorte" />
<person posts="2" size="5" who="Brad Campbell" />
<person posts="2" size="4" who="Paul Millar" />
<person posts="2" size="4" who="Robert Shearman" />
<person posts="2" size="4" who="Ian Schmidt" />
<person posts="1" size="26" who="Ulrich Weigand" />
<person posts="1" size="5" who="Joshua Thielen" />
<person posts="1" size="4" who="juraj" />
<person posts="1" size="3" who="Riccardo 'Jack' Lucchetti" />
<person posts="1" size="2" who="Juraj Hercek" />
<person posts="1" size="2" who="Gregory M. Turner" />
<person posts="1" size="2" who="Z_God" />
<person posts="1" size="2" who="Dmitry Timoshkov" />
<person posts="1" size="2" who="Patrik Stridvall" />
<person posts="1" size="2" who="Dan Kegel" />
<person posts="1" size="2" who="Robert Reif" />
<person posts="1" size="2" who="Vilppa Salt" />
<person posts="1" size="2" who="Tuch" />
<person posts="1" size="2" who="Maxime Bellenge" />
<person posts="1" size="2" who="Rolf Kalbermatter" />
<person posts="2" size="3" who="Vitaliy Margolen" />
<person posts="1" size="1" who="Mathew McBride" />
<person posts="1" size="1" who="Andreas Mohr" />
<person posts="1" size="1" who="BiGgUn" />
<person posts="1" size="1" who="Rein Klazes" />

</stats>


<section 
	title="News: Interviews, Reviews, Other News" 
	subject="News"
	archive="http://www.winehq.org/" 
	posts="4"
	startdate="03/29/2003"
	enddate="04/04/2003"
>
<topic>News</topic>

<p>Have you looked at the new <a href="http://www.winehq.org">WineHQ</a>?
We've got <a href="http://www.winehq.org/?interviews=1">interviews</a>!
The first one went up on Tuesday, Ove K&#229;ven was the victim.  Stay tuned for
another one this Tuesday.  Thanks goes to Jeremy Newman for posting these on
WineHQ for me.  I'd also like to thank Thomas Wickline, Juliusz Gonera, and
Ender for the screenshots they submitted.  Jeremy had a hard time grabbing
them from my web site so only a few made it in (maybe in the future we can
figure out a way to get others on there.)  I intend to keep all of
them you submitted; there's a collection of <a href="http://www.theshell.com/~vinn/ss">all
the screenshots</a> as well as <a href="http://www.theshell.com/~vinn/ss/preview.html">a
gallery</a> showcasing some of the better ones.</p>

<p>Development is rolling along nicely.  We've seen three weeks of daily
CVS commits!  (Suffice to say, if you're running Wine-20030318 it's considered
out of date.)  There was a bit of a patch pileup in February, but things are
definitely rolling along again.  Over the past few weeks Alexandre's caught up
on the backlog, committed substantial changes of his own, and reworked others' patches.  Speaking of
which, if you submitted any patches that didn't get into CVS you may want to
revisit them.  Also, I expect sometime this week we'll see another snapshot appear
out of CVS.
</p>

<p>OSNews did an <a href="http://www.osnews.com/story.php?news_id=3170&amp;page=1">interview with Miguel de Icaza</a> about Mono.
He only briefly mentions Wine but does provide a link to <a href="http://www.go-mono.com/screenshots.html">
screenshots of Mono</a> showing Wine integration.  You'll
also find a short introduction about <a href="http://www.go-mono.com/winforms.html">
Windows.Forms</a> on their website including this interesting quote,
<quote who="Mono">
 In terms of integrating visually with the desktop, we are hoping to contribute to 
 the Wine project an mechanism to make it use the Gtk+ themes on X11 and Cocoa on 
 MacOS to render the widgets, and get the native look and feel on each of these 
 platforms. </quote></p>

<p>In other vaguely related news, Guru Labs put together an excellent
<a href="http://www.gurulabs.com/RedHatLinux9-review.html">
technical review of RedHat 9.0</a>.  Normally I skip over reviews of 
new distros - they just don't provide enough level of detail to make
it worth reading.  This article was excellent though.  If you're considering
upgrading or installing RedHat 9.0 it's a must-read.  And yes, it does happen
to mention the problems with NPTL + Wine on Linux.  (A little more info on
that below.)</p>

</section>






<section 
	title="Wine &amp; RedHat 9.0" 
	subject=""
	archive="http://www.winehq.org/hypermail/wine-devel/2003/04/0.html" 
	posts="4"
	startdate="04/03/2003"
>
<topic>Fixes</topic>
<p>As discussed in detail in past issues, RedHat 9.0 has a problem
with Wine.  RedHat's using a new threading library that didn't quite
get along with Wine.  Alexandre has done a lot of work in this area
over the past few weeks and on Tuesday committed some changes that
prompted Dimi to ask:
<quote who="Dimitrie Paun">
I've noticed you've checked in already some NTPL patches.
Does this mean that Wine is ready for RH9? Can I go ahead
and upgrade my system?</quote></p>

<p>Alexandre replied,
<quote who="Alexandre Julliard">
 Yes, it's supposed to work. You have to use <tt>--with-nptl</tt> for now, I'm
 hoping to make it switchable at run time later; but apart from that
 it's mostly ready.</quote></p>

<p>Dimi wanted to know if it could just be automatically detected when
Wine is configured, but Alexandre didn't think so,
<quote who="Alexandre Julliard">
No, it really has to be determined at run time, there is no guarantee
that the glibc that you are using at build time will be the same at
run time. We could try to determine a default value for the
<tt>--with-nptl</tt> flag, but it's not trivial, and we need to get rid of the
flag anyway.</quote></p>


<p>So take it all with a grain of salt - most of the heavy lifting seems 
done, but it might not work for you.  Refer to 
<a href="http://www.winehq.org/index.phpwwn/163#Making%20Wine%20Run%20With%20glibc%202.3">issue
#163</a> for the appropriate workaround.  Or dig through the 
<a href="http://www.winehq.org/hypermail/wine-devel/">wine-devel archives</a>.
</p>
</section>




<section 
	title="Compiling With gcc 2.96" 
	subject="Re: Compiling WINE - Hopeless situation? :)"
	archive="http://www.winehq.org/hypermail/wine-devel/2003/03/0818.html" 
	posts="10"
	startdate="03/29/2003"
	enddate="03/30/2003"
>
<topic>Build Process</topic>
<p>

Matt Bailey needed some help compiling Wine with gcc 2.96 - the
version that originally shipped with RedHat 7.0.  In response Sylvain
Petreolle mentioned, <quote who="Sylvain Petreolle">
update gcc to version 3.x.x, gcc2.96 was a broken unofficial
version of RedHat</quote></p>

<p>Ian Schmidt, Michael Stefaniuc, and Dan Kegel all wrote in
to mention that it should work just fine.  The C++ ABI incompatibilities
were a known problem, but it shouldn't have any effect on Wine.  The
last time gcc 2.96 was mentioned was back 
<a href="http://www.winehq.org/index.phpwwn/92#RH%207.1%20gcc%20fixes%20compiler%20bug">in issue #92</a>
when James Juran suggested ditching the gcc 2.96-69 packages that shipped with RH 7.0 in favor of
the gcc-2.96-81 packages that came with RH 7.1.  </p>

</section>






<section 
	title="Duplicated Include Parameters?" 
	subject="Compiling Wine sources with duplicated include parameters"
	archive="http://www.winehq.org/hypermail/wine-devel/2003/04/0009.html" 
	posts="9"
	startdate="04/01/2003"
	enddate="04/02/2003"
>
<topic>Build Process</topic>
<p>In the "I-noticed-that-too" category, Rolf Kalbermatter asked:</p>
<quote who="Rolf Kalbermatter"><p>
While downloading and compiling the latest CVS sources I noticed that the
command line for each (most?) source files reads like
<ul><code>
 gcc -c -I. -I. -I../../include -I../../include ............. or similar
</code></ul></p><p>
This is not a serious problem but the duplication of the two include parameters
strikes me as odd and definitely unnecessary, making the command line unnecessarily
long.
</p><p>
Seems like something in the makefile generation is causing this.
</p></quote>

<p>Alexandre explained the reasoning, 
<quote who="Alexandre Julliard">
 It's needed for out of tree builds, in that case the include paths are
 all different.</quote></p>

<p>Dimi wondered when that was ever needed though,
<quote who="Dimitrie Paun">
 True, but why do we need the -I.? Do we need to ever include anything
 from the current build dir?</quote></p>

<p>To which Alexandre replied, 
<quote who="Alexandre Julliard">
 Yes, some headers are generated, for instance the y.tab.h files.
</quote>  Francois Gouget and Dimi still felt it was unnecessary and
that the include paths were provided elsewhere, but Alexandre assured
them there was a method to the madness, 
<quote who="Alexandre Julliard">
 Believe it or not, all that stuff is here for a reason.
</quote></p>
</section>





<section 
	title="How to Just Access a Windows DLL" 
	subject="Whither specmaker?"
	archive="http://www.winehq.org/hypermail/wine-devel/2003/04/0000.html" 
	posts="2"
	startdate="04/01/2003"
>
<topic>Winelib</topic>
<p>Kevin Cousins needed some info on a problem that comes up fairly
often with developers of other projects.  Say you have this great DLL
available on Windows, how can you use functions in it via a native
Linux program?  Unfortunately the answer is usually not what they
want to hear.  Kevin mentioned what he worked on:</p>
<quote who="Kevin Cousins"><p>
 my problem is the oft-asked "How do I call functions in a Windows
DLL from an ELF process?"  I appreciate WineLib is an option, and have
run into a number of snarls along that path:
<ol>
<li> I have created a .dll.so to wrap calls to the offending Windows DLL.
   Calls are made through static function pointers which have been
   initialised in the .dll.so by calls to GetProcAddress() from what
   would be the DllMain() function there.  I've not managed to get Wine
   to call that DllMain() function of my .dll.so, other than through a
   breakpoint in the debugger, and explicitly calling the function at
   that time.  This way, my code runs even returning from calls to the
   Windows DLL, but mysteriously, no output file is written!
</li><li>
 I occasionally see user32.dll.so barf with a SEGV with the call stack
   mentioning res_146() deep during the first call to wine_dlopen().
</li></ol></p><p>
I've also had a look at avifile, mplayer, and xine, to investigate how
they do things.  Linking avifile/plugins/libwin32/loader/libloader.a to
my application means I can run as far as attempting to execute DllMain()
on my Windows DLL before I see gut-wrenching a SEGV.
</p><p>
What are other people doing?
</p></quote>

<p>Mike Hearn confirmed he was on the right track:</p>
<quote who="Mike Hearn"><p>
Well, see me discussing that with Bill a few days ago on the mailing
list archives. Basically you have to make the whole ELF process into a
WineLib app, at the moment you can't just call out from a standard linux
binary into WineLib. IIRC mplayer does this by copy and pasting some
wine code, then hacking it lots, even then that's only for codecs which
are extremely simple programs.
</p><p>
The basic problem is that there isn't any good way to initialise WineLib
without using the wine loader program at the moment.
</p></quote>



</section>

</kc>

