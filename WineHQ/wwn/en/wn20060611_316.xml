<?xml version="1.0" ?>
<kc>

<title>Wine Traffic</title>

<author contact="http://www.theshell.com/~vinn">Brian Vincent</author>
<issue num="316" date="06/11/2006" />
<intro> <p>This is the 316th issue of the Wine Weekly News publication.
Its main goal is to rip apart the washer. It also serves to inform you of what's going on around Wine. Wine is an open source implementation of the Windows API on top of X and Unix.  Think of it as a Windows compatibility layer.  Wine does not require Microsoft Windows, as it is a completely alternative implementation consisting of 100% Microsoft-free code, but it can optionally use native system DLLs if they are available.   You can find more info at <a href="http://www.winehq.org">www.winehq.org</a></p> </intro>
<stats posts="243" size="362" contrib="63" multiples="40" lastweek="40">

<person posts="21" size="39" who="adger44 at hotmail.com (Nick Burns)" />
<person posts="20" size="33" who="ead1234 at hotmail.com (EA Durbin)" />
<person posts="18" size="15" who="mike at codeweavers.com (Mike McCormack)" />
<person posts="14" size="11" who="dank at kegel.com (Dan Kegel)" />
<person posts="10" size="11" who="julliard at winehq.org (Alexandre Julliard)" />
<person posts="10" size="10" who="mike at plan99.net (Mike Hearn)" />
<person posts="9" size="11" who="rob at codeweavers.com (Robert Shearman)" />
<person posts="8" size="11" who="wine-devel at kievinfo.com (Vitaliy Margolen)" />
<person posts="8" size="10" who="truiken at gmail.com (James Hawkins)" />
<person posts="7" size="11" who="molle.bestefich at gmail.com (Molle Bestefich)" />
<person posts="6" size="7" who="eric.pouech at wanadoo.fr (Eric Pouech)" />
<person posts="6" size="7" who="wine.dev at web.de (Detlef Riekenberg)" />
<person posts="6" size="7" who="Andrew.Talbot at talbotville.com (Andrew Talbot)" />
<person posts="5" size="4" who="dmitry at codeweavers.com (Dmitry Timoshkov)" />
<person posts="4" size="12" who="jave27 at gmail.com (Jason Green)" />
<person posts="4" size="11" who="frick at sc-networks.de (Christoph Frick)" />
<person posts="4" size="5" who="Stephen.Clark at seclark.us (Stephen Clark)" />
<person posts="4" size="5" who="jwstolk at gmail.com (Jaap Stolk)" />
<person posts="4" size="4" who="the3dfxdude at gmail.com (Jesse Allen)" />
<person posts="4" size="3" who="hverbeet at gmail.com (H. Verbeet)" />
<person posts="3" size="13" who="astrand at cendio.se (=?iso-8859-1?Q?Peter_=C5strand?=)" />
<person posts="3" size="7" who="ivg2 at cornell.edu (Ivan Gyurdiev)" />
<person posts="3" size="4" who="jorishuizer at planet.nl (Joris Huizer)" />
<person posts="3" size="4" who="k04jg02 at kzoo.edu (Joseph Garvin)" />
<person posts="3" size="3" who="p.beutner at gmx.net (Peter Beutner)" />
<person posts="3" size="2" who="ns03ja at brocku.ca (Neil Skrypuch)" />
<person posts="3" size="2" who="hans at it.vu.nl (Hans Leidekker)" />
<person posts="3" size="2" who="marcus at jet.franken.de (Marcus Meissner)" />
<person posts="2" size="8" who="moose.anoni at gmail.com (Anoni Moose)" />
<person posts="2" size="5" who="jonathan at ernstfamily.ch (Jonathan Ernst)" />
<person posts="2" size="5" who="chris.kcat at gmail.com (Chris)" />
<person posts="2" size="5" who="dominic.wise at ukonline.co.uk (Dominic Wise)" />
<person posts="2" size="4" who="fenix at club-internet.fr (Raphael)" />
<person posts="2" size="3" who="clinton at elemtech.com (Clinton Stimpson)" />
<person posts="2" size="3" who="pancha at mail.nnov.ru (Andrey Turkin)" />
<person posts="2" size="3" who="dj015 at yahoo.com (Damjan Jovanovic)" />
<person posts="2" size="2" who="pancha at Mail.nnov.ru (Andrey Turkin)" />
<person posts="2" size="2" who="mstefani at redhat.com (Michael Stefaniuc)" />
<person posts="2" size="1" who="andi at rhlx01.fht-esslingen.de (Andreas Mohr)" />
<person posts="2" size="1" who="lav at etersoft.ru (Vitaly Lipatov)" />
<person posts="1" size="3" who="leon_fraitak at mail.ru (Leon Freitag)" />
<person posts="1" size="3" who="nlaw at mic-nucmed.co.uk (Nick Law)" />
<person posts="1" size="2" who="eric.pouech at gmail.com (Eric Pouech)" />
<person posts="1" size="2" who="stefandoesinger at gmx.at (Stefan D&#246;singer)" />
<person posts="1" size="2" who="blin at gmx.net (Kai Blin)" />
<person posts="1" size="1" who="jwhite at codeweavers.com (Jeremy White)" />
<person posts="1" size="1" who="fenix at club-internet.fr" />
<person posts="1" size="1" who="Jonathan at ErnstFamily.ch (Jonathan Ernst)" />
<person posts="1" size="1" who="tony.lambregts at gmail.com (Tony Lambregts)" />
<person posts="1" size="1" who="christian.gmeiner at students.fh-vorarlberg.ac.at (Christian Gmeiner)" />
<person posts="1" size="1" who="cmorgan at alum.wpi.edu (Chris Morgan)" />
<person posts="1" size="1" who="burnus at net-b.de (Tobias Burnus)" />
<person posts="1" size="0" who="ahziem1 at mailbolt.com (Andrew Ziem)" />
<person posts="1" size="0" who="skissane at gmail.com (Simon Kissane)" />
<person posts="1" size="0" who="willie at zeitgeistmedia.net (Willie Sippel)" />
<person posts="1" size="0" who="juan_lang at yahoo.com (Juan Lang)" />
<person posts="1" size="0" who="Paul.Vriens at xs4all.nl (Paul Vriens)" />
<person posts="1" size="0" who="hallo at michael-kaufmann.ch (Michael Kaufmann)" />
<person posts="1" size="0" who="jakob at vmlinux.org (Jakob Eriksson)" />
<person posts="1" size="0" who="reif at earthlink.net (Robert Reif)" />
<person posts="1" size="0" who="wine at shadovald.dyndns.org (Aneurin Price)" />
<person posts="1" size="0" who="h.davies1 at physics.ox.ac.uk (Huw Davies)" />

</stats>
<section 
	title="GLSL Support"
	subject="wined3d: Another GLSL shader status update"
	archive="http://www.winehq.com/pipermail/wine-devel/2006-June/048193.html"
	posts="12"
>
<topic>DirectX</topic>
<p>Lots and lots and lots of work is going on in the DirectX world and
we've got some new developers involved.  Everything from minor bugfixes
to complete rewrites of certain areas are in the works.  A lot of the
discussion is going on in #winehackers, but some of it trickles to the
mailing list for review.  This week we're going to take a look at shaders.</p>

<p>Shaders are a graphics concept that allows for extremely complex scenes
to be rendered very quickly.  They generally come in two flavors: pixel
shaders and vertex shaders.  At the heart of shaders are complex math
operations generally involving things like matrices.  Remember all that
matrix math from calc III?  Me neither.  On modern graphics cards these
math calculations can be performed directly in the specially designed
GPUs of the graphics cards rather than using the CPU of the computer.
In the end, you get fancy 3D graphics.  Shaders are responsible for 
creating fog effects, creating lighting and shadowing, etc.  </p>

<p>Now, on Windows shaders are implemented by taking Direct3D calls and
transforming the actions into Microsoft's "High Level Shader Language", or HLSL,
that gets passed down to the graphics card.  HLSL allows shader "programs"
to be created that instruct the graphics processor what to do.  On
Windows, HLSL gets compiled to machine code by the DirectX libraries and
pushed down to the graphics card for execution.  That's a lot of overhead
for Wine and fortunately it's not necessary.</p>


<p>On Linux, the mechanism to access the hardware of the graphics card
is OpenGL.  OpenGL 2.0 has more extensive shader support than previous versions
and there's been an interest for Wine to be able to take advantage of
that support.  The OpenGL Shader Language (GLSL) approved by the OpenGL
architectural review board and contained in the OpenGL 2.0 spec outlines
an advanced shading language based on C.  Using GLSL gives developers
low-level control of the graphics pipeline similar to HLSL, except the
compilation of the GLSL programs gets done within the OpenGL driver.  </p><p>
Wine has had shader support for 
quite a while, but it's relied on an older, less complete method.  This week
GLSL support was added by Jason Green in a series of large patches.  Jason
first posted an update a few weeks ago about the work and included some
screenshots:</p>
<quote who="Jason Green"><p>
I'm working on the conversion from DirectX pixel and vertex shaders to
GLSL function and have made a good bit of progress this weekend.  At
the moment, I'm able to run just about every simple vertex shader
(version &lt;= 1.4, and a few 2.0's) that I can find which already works
on ARB_vertex_program (the current way that Wine handles this).  I'm
having a bit more trouble with pixel shaders, but I haven't really dug
into it yet.  Some of the really simple ones work, but I believe I'm
missing a step in the texture binding code somewhere.
</p><p>
I've posted a patch to enable this shader generation here:

<ul><a href="http://cmhousing.net/wine/glsl_hack4.diff">
http://cmhousing.net/wine/glsl_hack4.diff</a></ul>
</p><p>
If you want to try this and help debug things, you'll have to apply
the patch (it's against the current git tree as of 2:00 AM EST, May
30th).  Plus, you'll need a video card and driver capable of using
GLSL (type 'glxinfo' and look for "GL_ARB_shading_language_100") .
You'll also have to set a new registry key in your Wine installation
(it is case sensitive):

<ul><tt>HKEY_CURRENT_USER\Software\Wine\Direct3D\UseGLSL = "enabled"</tt></ul>
</p><p>
Here are a few comparison screenshots (note, yes, they should be identical  ;-):
<ul>
<li><a href="http://www.cmhousing.net/wine/aniso_arb.png">
http://www.cmhousing.net/wine/aniso_arb.png</a> (vanilla wine, or with
UseGLSL != "enabled")</li>
<li><a href="http://www.cmhousing.net/wine/aniso_glsl.png">
http://www.cmhousing.net/wine/aniso_glsl.png</a> (using GLSL)</li>

<li><a href="http://www.cmhousing.net/wine/grass_arb.png">
http://www.cmhousing.net/wine/grass_arb.png</a></li>

<li><a href="http://www.cmhousing.net/wine/grass_glsl.png">
http://www.cmhousing.net/wine/grass_glsl.png</a></li>

<li><a href="http://www.cmhousing.net/wine/dolphin2_glsl.png">
http://www.cmhousing.net/wine/dolphin2_glsl.png</a> (DX8 SDK dolphin 
sample)</li>

<li><a href="http://www.cmhousing.net/wine/civ4_glsl.png">
http://www.cmhousing.net/wine/civ4_glsl.png</a>  (not *quite* there yet ;-)</li>
</ul></p><p>
In theory, once this all works, we'll be able to support shader model
2.0+, which a lot of newer games either require or strongly suggest
(aka prettier graphics).  Now, there are plenty of other bugs to be
worked out in wined3d, so this isn't the holy grail of patches or
anything, but it will take us that much closer to supporting new
games.  Please lend a hand if you're able to.  Thanks!
</p><p>
(by the way, many thanks to the entire #winehackers crew for all the
help along the way so far, it's been fun)</p></quote>

<p>Then last week another update was given shortly before
the patch was committed, Jason described a bit about it:</p>
<quote who="Jason Green"><p>
Well, I've fixed the speed issues with using GLSL (it's now just as
fast as ARB shaders for the ones that actually work correctly) and
gotten a few other things to work correctly.  However, I'm still
having issues with certain pixel/vertex shader combinations.  Ohsix
caught on that it may have to do with sampler limits on graphics cards
and how sampling/textures are handled differently in GLSL than with ARB.
 I'm not sure at the moment and could use some help.
<ul>
<a href="http://cmhousing.net/wine/glsl_hack6.diff">
http://cmhousing.net/wine/glsl_hack6.diff</a></ul></p><p>

is the diff against the most recent git tree.  There are still some
ugly hacks lying around in there.  Note that I've separated out most
of the GLSL functions into a new file "glsl_shader.c".  Once again, to
use GLSL instead of ARB shaders, you'll have to apply this patch, have
a graphics card that's capable of GLSL, and add the following case
senstive registry key:
<ul>
<tt>HKCU\Software\Wine\Direct3D\UseGLSL = "enabled"</tt></ul></p><p>
(String value)</p></quote>

<p>There was some discussion about the patch and Mike Hearn requested
a bit of documentation be added to describe how it all works.  Jason
did so and you can find an in-depth description of Wine's
<a href="http://wiki.winehq.org/DirectX-Shaders">DirectX shaders</a>
on the wiki. </p>


</section>
<section 
	title="OpenAL Audio Driver"
	subject="Feedback requested on an OpenAL audio driver patch"
	archive="http://www.winehq.com/pipermail/wine-devel/2006-June/048273.html"
	posts="15"
>
<topic>Multimedia</topic>
<p>Wine's audio has been scrutinized lately.  There's a lot of issues with
getting sound to Just Work with Wine, not the least of which is 
communicating properly with the underlying hardware.  There's also some
fragmentation going on with Wine's audio.  Rather than having one audio
driver that works properly, we have five drivers subtly (and even
not so subtly) broken.  On top of that, other platforms require other
implementations.  </p><p>

This week Nick Burns posted a patch for an OpenAL audio driver.  In case
you're not familiar with it, and I wasn't till the patch appeared, OpenAL is, 
<quote who="OpenAL">
a cross-platform 3D audio API appropriate for use with gaming applications and 
many other types of audio applications.</quote>  As you can imagine, there
was a bit of skepticism regarding the patch.  On the one hand, it's great
to see people jumping into Wine development and as such there was a fair
amount of feedback and tips given regarding the patch.  On the other hand,
it adds one more driver to a framework badly needing attention in other
areas.  Nick seems to be aiming for support of Mac OS X since another patch
touched on that area.  In that regard, it's nice to see even more work
being done for that platform.</p>

<p>From Nick's original post:</p>
<quote who="Nick Burns"><p>
 I have started work on an openal driver for wine...
So far I have playback and recording working (with minor issues)
(for some reason the DSound HEL is unhappy with my driver)
</p><p>
OpenAL seems to have enough functionality to do the job.
</p><p>
Are there any problems with using OpenAL for such a purpose?
</p><p>
The reason for using OpenAL is for platforms that don't have alsa/oss/esd/...
support
For one it gives a chance to test audio on windows for example -- and on mac
osx (although the winecoreaudio driver is making great progress).
</p></quote>

<p>Eric Pouech, who's done a lot of low-level work on audio, replied:</p>
<quote who="Eric Pouech"><p>
Planning to use OpenAL for portability reasons is a bad idea IMO:
<ul>
<li> it won't support the mapping required by dsound (unless we decide to
drop the HW support)</li>
<li> OpenAL is overkill (in terms of API) for  portability (PortAudio would
be better IMO)</li>
<li> OpenAL doesn't support recording AFAICT</li></ul></p></quote>

<p>Nick addressed each of those issues:</p>
<quote who="Nick Burns"><p>
OpenAL 1.1 supports recording... (1.0 does not have recording so that is a
problem yes.)
My driver handles this atm -- it checks for recording capabilities and
supports accordingly.
</p><p>
The OpenAL api is rather simple:
for playback you make buffers and queue them then poll them (to find out
when they are done.) There are some extensions that cut out
copies/support eax/. I have not looked at 'em yet.  (support 2d and 3d audio)
For recording (1.1 only): start capturing -- poll (get data -- if there)
-- stop recording.
</p><p>
The dsound mapping stuff I want to understand better (are there any docs for
this?) I am sure we can layer it on OpenAL (hopefully good.)
</p><p>
PortAudio looks like a good choice as well -- afaict -- but I don't have any
experience with it (not that I had any openal exp when i started that driver)
</p></quote>

<p>Nick then posted a patch, got a lot of feedback, and reposted his work
again.  With the second round patch he announced some changes:</p>
<quote who="Nick Burns"><p>
I finally figured out my dsound HEL problem (was making too many buffers) --
now I wait and only use a few buffers.
</p><p>
It seemed to work well for GTA3, Tribes2 and FlatOut (requires a binary patch
to run) (dsound) -- and for SndRec32 (win/wout)
Games and ...App... tested under Mac OS X x86 -- Mac Book Pro.
</p><p>
Remove the disable 'OPENAL_DISABLE_IN' to test wavein. (Forced off due to
some issues of my OpenAL framework (I could only record at 44k -- could not
figure out how to force 44k only for wavein) -- others may have better luck)
</p><p>
So here is my patch --
It adds it to winecfg, the makefile.in, configure.ac
And it adds the new files (the actual driver why not)
</p><p>
I would like any feedback ppl out there may have.
</p></quote>

<p>With those changes it led Robert Reif to ask how well Wine's regression
tests worked when run in interactive mode.  Nick didn't know there was
an interactive mode to the tests and after running them he reported,
<quote who="Nick Burns">
So I ran dsound_test and winmm_test (interactive mode?) on the command line.
There are some failures -- but no crashing
Some games like Carmageddon2 are unhappy with openal atm.</quote></p>

<p>Will another driver get added?  The jury is out.  Thus far the patch
hasn't made it in.
</p>

</section>
<section 
	title="Fedora Packages Update"
	subject="Broken FC5 packages - stay clear."
	archive="http://www.winehq.org/pipermail/wine-devel/2006-June/048496.html"
	posts="4"
>
<topic>Packaging</topic>
<p>Last week we mentioned updated Wine packages were appearing on 
<a href="http://download.fedora.redhat.com/pub/fedora/linux/extras/5/i386/repodata/repoview/W.group.html">Fedora 
Extras</a>.  This week Vitaliy Margolen warned everyone not use them
since someone on irc appeared to have a broken package.  That was news
to Andreas Bierfert, who until now hasn't said anything about building
the packages:</p>
<quote who="Andreas Bierfert"><p>
Be sure it is compiled with everything that FC/FE{3,4,5,devel} can support. The
only thing is that some stuff is split out into subpackages and if users want
that support they need to install it. Take a look at debian for example. Fedora
Extras wine layout is basically the same. For the X driver... that should work
out of the box so I suspect that the user has a different problem. In any way
direct FE wine users to 
<a href="http://bugzilla.redhat.com">http://bugzilla.redhat.com</a> to file 
bug against wine.  This way I can easily track such bugs and decide if they 
should be filed against wine or if it really is a packaging but.</p></quote>

<p>If you look in the package repository, you'll see there are 11 packages
for Wine.  A big chunk of that is to split out the various audio drivers,
but there are packages that put TWAIN and LDAP support in separate packages.
It led Mike Hearn to question why it was done:</p>
<quote who="Mike Hearn"><p>
We had this problem with Debian, where people didn't install the "utils"
package and apps broke mysteriously. Unless you have a lot of experience
of Wine debugging you cannot detect this easily ... please, there's no
reason to split this stuff up as Wine will load everything in a failsafe
fashion so there is no need to mark the package as depending on a million
things.</p><p>
Out of interest what are the 11 packages?
</p></quote>

<p>Andreas explained:</p>
<quote who="Andreas Bierfert"><p>
Well from a wine perspective I see that this makes sense, but if you take a look
at all the dependencies it is another story... installing wine is one thing...
ending up with zillion dependencies is a whole different story for lots of
people where e.g. bandwidth is still a problem or who rather want to have a
slim system. I, as a packager, sit between the chairs and in this case I see why
splitting up wine made sense in debian and why it made sense for Fedora Extras
as well. The question is what to split and what to leave in. The stuff that has
been split from just having one 'wine' package is stuff that made sense and in
ways interacts best with what Fedora Core ships with the distro. Sure there are
improvements to be made and suggestions are always welcome :) but doing it the
way it is done now made lots of people happy (and gave me positive feedback).
</p><p>
[<i>the packages are:</i>]
<ul>
<li>wine</li>
<li>wine-arts</li>
<li>wine-capi</li>
<li>wine-cms</li>
<li>wine-esd</li>
<li>wine-jack</li>
<li>wine-ldap</li>
<li>wine-nas</li>
<li>wine-tools</li>
<li>wine-twain</li></ul></p><p>

These are the 10 packages which are relevant for a 'normal' user where wine and
wine-tools are the major ones. They are built from the wine sources (without
winemp3). Then there is:
<ul>
<li>wine-debuginfo</li>
<li>wine-devel</li></ul></p><p>

These two are more or less only interesting for
packagers/developers etc.
</p><p>
For more details take a look here:
<ul><a href="http://cvs.fedora.redhat.com/viewcvs/rpms/wine/FC-5/?root=extras">
http://cvs.fedora.redhat.com/viewcvs/rpms/wine/FC-5/?root=extras</a>
</ul></p><p>
And of course build from the wine-docs sources is the wine-docs rpm:
<ul><li>wine-docs:
<a href="http://cvs.fedora.redhat.com/viewcvs/rpms/wine-docs/?root=extras">
http://cvs.fedora.redhat.com/viewcvs/rpms/wine-docs/?root=extras</a>
</li></ul></p></quote>

</section>
<section 
	title="AppDB Update"
	subject="How are we doing?"
	archive="http://www.winehq.com/pipermail/wine-devel/2006-May/048007.html"
	posts="65"
>
<topic>WineHQ</topic>
<topic>Status Updates</topic>
<p>As part of a discussion about how well regressions are being
tackled, Tony Lambregts gave his thoughts regarding, an update on
how the AppDB is doing, and ideas for how people could help:</p>
<quote who="Tony Lambregts"><p>
Since I have Administrated both the AppDB and Bugzilla for quite a while
I would say that this is about even with regressions keeping pace with
improvements. What seems to be improving is the rate at which the
regressions are caught and fixed.
</p><p>
Catching regressions early is critical to fixing them and the faster
release cycle helps but only if the user upgrades in a timely fashion.
</p><p>
Some programs have been Rock Solid for years (eg: SimCity 3000) while
others are not. Myst worked for years and then fell victim the
Windows Management rewrite and I have just recently been able to run it
again but it is still very unstable.
</p><p>
Overall I am seeing a lot more activity in bugzilla since we went
to 0.9.0 as I am sure most of you are aware:
<ul>
501  in Apr 2005<br />
1492 in Apr 2006<br />
<br />
610  in May 2005<br />
1174 in May 2006
</ul></p><p>
 Some may call it a flood
but overall I think this has been a good thing. The real downside to
this is that it takes a lot more of my time to go through each email and
see if I can assist and that the proper bug links are in place.
</p><p>
Going to winecfg has made the product more user friendly but we
still seem to be a long way away from "It Just Works" in a lot of cases.
</p><p>
In the interm I believe the AppDB has helped a lot. I think that the
work that we have put into it has paid off fairly well to a point. So
far we have added:
<ul>
<li> Application Maintainers that can modify application entries on an
App by App basis.</li>

<li> Notification emails so that people (Administrators, Maintainers and
Monitors) are kept up to date on changes to applications.</li>

<li> Bug links to track bugs affecting an application.</li>

<li> Test results to track how well an application runs on a Wine version
and help spot regressions</li>

<li> Lots of small improvements.</li>
</ul></p><p>
Lots of thanks to Chris Morgan and Jonathan Ernst and everyone else
that submited patches to get it to its current state.
</p><p>
However there are a number of things that are needed still.
<ul>
<li> We need a general search page.</li>

<li> It would be nice to have the ability for people to have classes of
rights so that they can add/change/delete certain fields IE:
"Application Description" without having to become a maintainer or
administrator.<ul> </ul>

There is a todo list here as well: 
<a href="http://wiki.winehq.org/AppdbInfo">http://wiki.winehq.org/AppdbInfo</a>
<ul> </ul>
If anyone has experience with PHP or wants to gain some, there is a real
need for your help.
</li>

<li> A newsgroup set up that works the same as bugs so that anyone can see
the notifications generated by the AppDB.
<ul> </ul>
I asked Jeremy Newman for this before but I don't think that I explained
the need for it very well. (trying again)
</li>

<li> More Maintainers:

If you have an app that you run on a regular basis please consider
becoming a maintainer for that app.
</li>
<li> More Administrators:

The Application Queue is not being processed in a timely fashion.
<ul> </ul>
For myself I am busy with my day job, working on upgrading bugzilla, and
burnt out/frustrated trying to keep up with Application submissions (I am
too soft hearted to reject some submissions that probably should be
rejected). Keeping up with the Application Queue is a tough job (for me
at least, at this time) and at this point just reviewing some of the
submissions makes my head hurt.
<ul> </ul>
Alexander Nicolaysen Sornes and KillerTux have picked up some of the
slack but I think we could use some more help.
<ul> </ul>
This job is time consuming, tedious, thankless and does not come with a
paycheck. It requires attention to detail and is a position of trust and
responsibility. On the plus side it does NOT require any programming
skills. So... if this sounds like something you would like to do please
send an email to appdb@winehq.org explaining why you you think you would
be a good AppDB Administrator. (The guys in the white coats will be
around ASAP)
</li></ul></p>
</quote>





</section>
<section 
	title="Anonymous Patches"
	subject="notepad patches (search/replace, etc)"
	archive="http://www.winehq.com/pipermail/wine-devel/2006-June/048441.html"
	posts="5"
>
<topic>Patches</topic>
<p>This week a series of patches appeared all at once from Anoni Moose.
That's quite interesting because it shows someone took a lot of time to
work on Wine and then went to submit all the work at once... under an
anonymous name.  Andi Mohr was thankful for the patches but asked:</p>
<quote who="Andreas Mohr"><p>
I can't help but say that your parents must have been giving you a
rather "funny" name...
</p><p>
Or, IOW, do we have any guidelines about "Anoni Moose" submissions
to our project? Are they ok, not ok, ok? Loves me, loves me not, ...
</p><p>
Anyway, thanks for a very nice collection of patches!</p></quote>

<p>That led Christoph Frick to ask,
<quote who="Christoph Frick">
What is the difference between anonymous submissions, that we can spot
and which we don't? Maybe you are a fake ;)</quote></p>

<p>Andi replied:</p>
<quote who="Andreas Mohr"><p>
Darn, I knew fully well that exactly this objection would arise... ;)
</p><p>
Me, I've been created as an IRC bot happily typing away for about a decade
without anyone noticing...
</p><p>
Oh, that's not true in fact, people do know that I'm real, since someone
has been showing up at CodeWeavers and various wineconfs pretending to be me ;)
</p><p>
So I guess it's fully a non-issue after all since the internet is a completely
anonymous space anyway and patches can only be judged by their quality,
not by their origin. Sorry for the noise!
</p></quote>

<p>Alexandre did weigh in on the situation:</p>
<quote who="Alexandre Julliard"><p>
Of course there's no real difference, but collaboration is based on
trust, and it's hard to trust people who don't even want to give out
their name. Obviously you can give me a false name, but I'll figure it
out eventually, and then trust you even less than an anonymous
submitter so there's really no point in trying to cheat.
</p><p>
If you have good reasons for wanting to remain anonymous, please
discuss it with me in private and we can arrange something; but
otherwise please use your real name.</p></quote>

</section></kc>
