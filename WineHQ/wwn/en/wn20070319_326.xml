<?xml version="1.0" ?>
<kc>

<title>Wine Traffic</title>

<author contact="http://www.theshell.com/~vinn">Brian Vincent</author>
<issue num="326" date="03/19/2007" />
<intro> <p>This is the 326th issue of the Wine Weekly News publication.
Its main goal is to buy hamburger buns. It also serves to inform you of what's going on around Wine. Wine is an open source implementation of the Windows API on top of X and Unix.  Think of it as a Windows compatibility layer.  Wine does not require Microsoft Windows, as it is a completely alternative implementation consisting of 100% Microsoft-free code, but it can optionally use native system DLLs if they are available.   You can find more info at <a href="http://www.winehq.org">www.winehq.org</a></p> </intro>
<stats posts="193" size="346" contrib="68" multiples="35" lastweek="41">

<person posts="12" size="12" who="hverbeet at gmail.com (H. Verbeet)" />
<person posts="12" size="11" who="dmitry at codeweavers.com (Dmitry Timoshkov)" />
<person posts="10" size="10" who="dank at kegel.com (Dan Kegel)" />
<person posts="9" size="27" who="speeddymon at gmail.com (Tom Spear)" />
<person posts="9" size="9" who="dimi at lattica.com (Dimi Paun)" />
<person posts="9" size="9" who="julliard at winehq.org (Alexandre Julliard)" />
<person posts="8" size="16" who="truiken at gmail.com (James Hawkins)" />
<person posts="8" size="11" who="eric.pouech at wanadoo.fr (Eric Pouech)" />
<person posts="7" size="9" who="infyquest at gmail.com (Vijay Kiran Kamuju)" />
<person posts="5" size="21" who="kai.blin at gmail.com (Kai Blin)" />
<person posts="10" size="36" who="stefandoesinger at gmx.at (Stefan D&#246;singer)" />
<person posts="5" size="7" who="wjsqudtlr at gmail.com (Byeong-Sik Jeon)" />
<person posts="4" size="19" who="kingofallhearts999 at gmail.com (Bryan Haskins)" />
<person posts="4" size="7" who="wine-devel at kievinfo.com (Vitaliy Margolen)" />
<person posts="4" size="6" who="wine at kapila.force9.co.uk (Kapila De Silva)" />
<person posts="4" size="3" who="wine.dev at web.de (Detlef Riekenberg)" />
<person posts="3" size="5" who="thestig at google.com (Lei Zhang)" />
<person posts="3" size="3" who="paul.vriens.wine at gmail.com (Paul Vriens)" />
<person posts="3" size="3" who="Andrew.Talbot at talbotville.com (Andrew Talbot)" />
<person posts="3" size="2" who="flexo at holycrap.org (Felix Nawothnig)" />
<person posts="3" size="1" who="jacek at codeweavers.com (Jacek Caban)" />
<person posts="2" size="26" who="ehoover at mines.edu (Erich Hoover)" />
<person posts="2" size="6" who="mschaadt at gmail.com (Mike Schaadt)" />
<person posts="2" size="4" who="der.fabe at gmx.net (Fabian Bieler)" />
<person posts="2" size="3" who="m.b.lankhorst at gmail.com (Maarten Lankhorst)" />
<person posts="2" size="3" who="joris_huizer at yahoo.com (Joris Huizer)" />
<person posts="2" size="2" who="twickline at gmail.com (Tom Wickline)" />
<person posts="2" size="2" who="the3dfxdude at gmail.com (Jesse Allen)" />
<person posts="2" size="1" who="fgouget at free.fr (Francois Gouget)" />
<person posts="2" size="1" who="remco47 at yahoo.com (Remco)" />
<person posts="2" size="1" who="rob at codeweavers.com (Robert Shearman)" />
<person posts="2" size="1" who="us at edmeades.me.uk (Ann &amp; Jason Edmeades)" />
<person posts="2" size="1" who="jwhite at winehq.org (Jeremy White)" />
<person posts="2" size="1" who="jnewman at codeweavers.com (Jeremy Newman)" />
<person posts="1" size="7" who="mrmessiah at gmail.com (Chris Howe)" />
<person posts="1" size="4" who="giles at gilesfreeserv.com (Giles Cameron)" />
<person posts="1" size="4" who="Phil.Lodwick at EFI.COM (Phil Lodwick)" />
<person posts="1" size="4" who="aric at codeweavers.com (Aric Stewart)" />
<person posts="1" size="2" who="ken at codeweavers.com (Ken Thomases)" />
<person posts="1" size="2" who="carlfongheiser at gmail.com (Carl Fongheiser)" />
<person posts="1" size="1" who="mattfinn at gmail.com (Matt Finnicum)" />
<person posts="1" size="1" who="thunder.m at czela.net (Mirek)" />
<person posts="1" size="1" who="chris.kcat at gmail.com (Chris Robinson)" />
<person posts="1" size="1" who="winehacker at gmail.com (Steven Edwards)" />
<person posts="1" size="1" who="bugzilla at tut.by (Andrew O. Shadoura)" />
<person posts="1" size="1" who="xerox_xerox2000 at yahoo.co.uk (Louis Lenders)" />
<person posts="1" size="1" who="nathan.andrew.williams at gmail.com (Nathan Williams)" />
<person posts="1" size="1" who="mike at fireburn.co.uk (Michael Lothian)" />
<person posts="1" size="1" who="dclark at akamail.com (Duane Clark)" />
<person posts="1" size="1" who="chmorgan at gmail.com (Chris Morgan)" />
<person posts="1" size="1" who="alex at thehandofagony.com (Alexander Nicolaysen Sornes" />
<person posts="1" size="0" who="kermos at somrek.net (Stephan Rose)" />
<person posts="1" size="0" who="julienc at psychologie-fr.org (Julien)" />
<person posts="1" size="0" who="mstefani at redhat.com (Michael Stefaniuc)" />
<person posts="1" size="0" who="mikolaj at zalewski.pl (=?UTF-8?B?TWlrb8WCYWogWmFsZXdza2k=?=)" />
<person posts="1" size="0" who="meissner at suse.de (Marcus Meissner)" />
<person posts="1" size="0" who="jan.wine at zerebecki.de (Jan Zerebecki)" />
<person posts="1" size="0" who="juan_lang at yahoo.com (Juan Lang)" />
<person posts="1" size="0" who="c-d.hailfinger.devel.2006 at gmx.net (Carl-Daniel Hailfinger)" />
<person posts="1" size="0" who="saulius2 at ar.fi.lt (Saulius Krasuckas)" />
<person posts="1" size="0" who="andras at csevego.net (=?iso-8859-1?q?Kov=E1cs_Andr=E1s?=)" />
<person posts="1" size="0" who="ze_real_neo at yahoo.fr (Benoit Pradelle)" />
<person posts="1" size="0" who="ivg231 at gmail.com (Ivan Gyurdiev)" />
<person posts="1" size="0" who="methril at ono.com (Methril)" />
<person posts="1" size="0" who="tom at dbservice.com (Tomas Carnecky)" />

</stats>
<section 
	title="News: Wine 0.9.33, Coverity Changes"
	subject="News"
	archive="http://www.winehq.com/pipermail/wine-devel/2007-February/.html"
	posts="1"
>
<topic>News</topic>
<p>Time for the bi-monthly Wine release.  Wine 0.9.33 fell from the
sky last week and the following changes were noted:</p>
<quote who="Alexandre Julliard"><p>
<ul>
<li> Many Direct3D fixes and performance improvements.</li>
<li> More comctl32 tests and some bug fixes.</li>
<li> Compatibility improvements in cmd.exe.</li>
<li> Still more fixes to builtin OLE.</li>
<li> Support for process control on Solaris.</li>
</ul></p></quote><p>
A Indian technology magazine named <i>Digit</i> wrote an article on
in their <a href="http://www.thinkdigit.com/thinkdigit_2007/index.php?action=article&amp;prodid=399"><i>What 
Lies Beneath</i></a> column in their March issue.  It's a pretty good overview
of Wine and CrossOver.  From the article:</p>
<quote who="Digit"><p>
There is a way you can save on your OS costs, though. You could still switch to 
Linux, and thanks to software like CrossOver and Wine you can run your Windows 
applications within Linux itself. These programs give Windows applications a 
"friendly environment" to run in, essentially fooling them into believing 
they're running inside the OS they're supposed to. CrossOver is actually a 
paid version of Wine, offering you a bunch of extra features and more 
user-friendliness.
</p></quote><p>
This barely falls in the news category.  Coverity changed their
<a href="http://scan.coverity.com/">scan</a> and promised more
updates are on their way.  One new feature that looks like it'll
get added is graphs.  Wine's current bug tally sits at 84 bugs fixed,
26 verified but not fixed, and 297 uninspected on a codebase of 
1.5 million lines. </p>
</section>
<section 
	title="DSound &amp; ALSA Project"
	subject="My plans for SOC"
	archive="http://www.winehq.com/pipermail/wine-devel/2007-March/054931.html"
	posts="4"
>
<topic>Summer of Code 2007</topic>
<topic>Multimedia</topic>
<p>There's been some good proposals for Summer of Code projects this year.
Maarten Lankhorst wrote in with a proposal to fix an area of Wine that
needs some attention.  Maarten already has some familiarity with this
which is even better.  He wrote:</p>
<quote who="Maarten Lankhorst"><p>
For the summer of code I'm planning to improve the dsound code and alsa
code, to make alsa finally better than OSS, in a way that will get
accepted into the wine tree, for that I'm thinking of improving on the
following fronts:
</p><p>
Winealsa:<ul>
<li> Add mixer device and aux controls</li>
<li> Implement dsound capture</li>
<li> Separate the initialisation of the directsound code from the waveout
code, to allow creation of multiple dmix devices.</li>
<li> Try to configure alsa to allow arbitrarily big buffers, working around
the alsa problem that only up to a certain amount can be allocated for
buffers, certain programs (for example winamp) may require more.</li>
<li> Remove the queuing thread and use Lock() and Unlock() instead.</li>
<li> Make it run so well, people wouldn't want to use OSS anymore.</li>
</ul>
</p><p>
Both dsound/winealsa:<ul>
<li> Allow proper usage of Lock() and Unlock() for sound drivers, it's not
used properly or even tested in current dsound code.</li>
<li> Rework some of the dsound code, to allow mixing to be done in
winealsa, and fix possible errors that can be caused by it.</li>
<li> Improve the dsound software mixer code to allow mixing and (if
possible) be less prone to buffer underruns.</li>
</ul>
</p><p>
The challenge is to get this working right, without too much of an
impact hit. I also will have to work around alsa limitations: I cannot
make buffers arbitrarily big, while in windows they can be. It seems no
2 programs use dsound in the same way, so I will have to test with
various different programs to get everything working.
</p><p>
I'll try to get in contact with alsa-devel first, if there is a way to
change buffer size to something arbitrary, it is worth it in the long
run to use that method. A manual fix seems to be close everything using
alsa, then echo 256 > /proc/asound/card0/pcm0p/sub0/prealloc, but I am
hoping there is an easier way to fix it, in either case I am afraid I
will have to put some memory buffer code in winealsa as fallback.
</p><p>
If there's still some time left, I'll also try to get some 3d sound code
in, using some openal code, the license seems to be lgpl compatible, or
I will try to get support for multiple (4, 5.1 ?) speakers working, it
depends a little on how fast I can get this to work in a nice shape.
</p></quote>

<p>There were a lot of positive comments about this project.</p>
</section>
<section 
	title="Winecfg DirectX Options"
	subject="WineCfg and DirectX options"
	archive="http://www.winehq.com/pipermail/wine-devel/2007-March/055069.html"
	posts="7"
>
<topic>Configuration</topic>
<p>
Michael Lothian asked:
</p><quote who="Michael Lothian"><p>
Has anyone thought about adding the directx options to the Graphics
tab in WineCfg
</p><p>
Just now I've been testing all the work that's been done on the graphics
layer on different games so I've been switching on and off GLSL and
changing backbuffer to fbo etc using regedit
</p><p>
Would it not be better to change these things easily instead to allow
for wider testing.
</p><p>
PS With GLSL and FBO Tomb Raider Legent Opening Level Sequence the
cliffs are black
</p></quote>

<p>Quite a few people agreed with Michael, but Henri Verbeet replied:</p>
<quote who="Henri Verbeet"><p>

It's not something you should have to configure. Eventually
GLSL and FBOs should simply become the defaults, and if it doesn't
work that's a bug. I think GLSL is basically at the point where in
general it's at least as good as the ARB backend, FBOs will need a bit
more work.
</p></quote>

<p>Stefan D&#246;singer disagreed a bit and thought there might be a place
for some options:</p>
<quote who="Stefan Dosinger"><p>
GLSL is OK IMO, because some drivers (*cough* macos *cough*) have serious 
problems with glsl. It could be included into the shader dropdown box. The 
issue that needs to be dealt with is that we can't combine arb vertex shaders 
and glsl pixel shaders or vice versa.
</p><p>
Video memory size maybe too. There are vendor dependent ways to read it, but 
implementing them is pretty nasty (requires some private  to winex11.drv). 
Although we had that discussion a number of times already and we only agreed 
on a registry key so far.
</p><p>
Offscreen rendering should have fbos fixed and made default, otherwise use 
backbuffer (not pbuffer because backbuffer with aux buffers is cheaper). I 
don't think it is a good idea to add it to winecfg	
</p><p>
I don't think render target locking should be configurable as is. That 
rendering should be fixed to catch NOP locks some games do (which does the 
same as glFinish() on windows).
</p><p>
What I have considered is some performance vs correctness slider. With 
decreased correctness things like render target locking or drawStridedSlow 
are disabled. If the correctness is decreased even more some properly 
implemented, but known to be expensive settings could be deactivated, like 
smooth shading, per pixel fog (ok. not sure if that is expensive). Windows 
drivers have such a setting, so why shouldn't we :-) . This slider could also 
cover some software emulated features like vertex blending (if we ever get 
that).
Of course we shouldn't pollute the wined3d code with if (someSetting) 
statements either.
</p></quote>

<p>This seems like a project waiting for someone new to come along and
implement.
</p>

</section>
<section 
	title="New Benchmarks"
	subject="Benchmark quandary"
	archive="http://www.winehq.com/pipermail/wine-devel/2007-March/055024.html"
	posts="3"
>
<topic>Testing</topic>
<p>Benchmarks lie and now we've got some updated ones of our own.
Tom Wickline wrote in to let everyone know about some updated benchmarks
he ran:</p>
<quote who="Tom Wickline"><p>
I have some benchmarks posted here: 
<ul><a href="http://wiki.winehq.org/BenchMark-0.9.5">
http://wiki.winehq.org/BenchMark-0.9.5</a></ul>
as well as here: 
<ul><a href="http://wiki.winehq.org/BenchMark-0.9.6">
http://wiki.winehq.org/BenchMark-0.9.6</a></ul>
</p><p>
And I have all the Graphics test in PCMark 04 running, but the app is
crashing between test, but if I run them one at a time they will
complete.. The quandary is would posting the test results from each
test while not run as a whole but separately be of use? and would this
be unfair when comparing the results against XP?
</p></quote>

<p>Dan Kegel thought it would be fine to either put a disclaimer that the
tests were run separately on Linux or to just verify that running the
tests separately on Windows didn't produce a different result.</p>
</section>
<section 
	title="Status of Mac OS X Port"
	subject="Status of Wine &amp; Mac OS X"
	archive="http://www.winehq.com/pipermail/wine-devel/2007-March/055019.html"
	posts="4"
>
<topic>Ports</topic>
<p>Rafa Campos wanted to know how the port of Wine to Mac OS X was
progressing:
</p><quote who="Rafa Campos"><p>

I was looking through the mailing list archives about the status of wine 
working in Intel-Macs.
I'd like to start helping the wine project making some effort in 
Macintel computer, and i like to reach some 3D approach that works in Mac.
</p></quote>

<p>  Well, it just so happens that Mac OS X is now a first
class citizen when it comes to running Wine.  Alexandre replied first,
<quote who="Alexandre Julliard">
It should work pretty much the same as on Linux. You do need an X11
server since the quartz driver isn't functional yet.</quote></p> 

<p>Stefan D&#246;singer gave move detail about the 3D side of things:</p>
<quote who="Stefan Dosinger"><p>

The Direct3D and OpenGL parts are working too, but I am struggling with some 
driver issues. Namely GLSL shaders are completely broken, but Jason Green 
tells me that this is MacOS'es fault. Other than that a few handy Nvidia 
extensions are missing, but apple has its own, so we may want to add a few 
codepaths for apple exts to wined3d. I did that for GL_APPLE_fence so far, 
but there are maybe others.
</p><p>
What needs work for getting 3D stuff working better is the quartz backend. I 
haven't done any comparison benchmarks yet, but I think we're loosing a bit 
of performance due to the X server (But not as much as many mac users think), 
and there are some window setup issues because of the X server and quartz-wm.
</p></quote>


</section></kc>
