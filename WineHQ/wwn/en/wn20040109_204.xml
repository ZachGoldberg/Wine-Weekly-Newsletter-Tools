<?xml version="1.0" ?>
<kc>

<title>Wine Traffic</title>

<author contact="http://www.theshell.com/~vinn">Brian Vincent</author>
<issue num="204" date="01/09/2004" />
<intro> <p>This is the 204th issue of the Wine Weekly News publication.
Its main goal is to ponder. It also serves to inform you of what's going on around Wine. Wine is an open source implementation of the Windows API on top of X and Unix.  Think of it as a Windows compatibility layer.  Wine does not require Microsoft Windows, as it is a completely alternative implementation consisting of 100% Microsoft-free code, but it can optionally use native system DLLs if they are available.   You can find more info at <a href="http://www.winehq.org">www.winehq.org</a></p> </intro>
<stats posts="308" size="1353" contrib="72" multiples="48" lastweek="26">

<person posts="47" size="112" who="Alexandre Julliard" />
<person posts="34" size="130" who="Dimitrie O. Paun" />
<person posts="21" size="50" who="Mike Hearn" />
<person posts="14" size="48" who="Eric Pouech" />
<person posts="13" size="217" who="Steven Edwards" />
<person posts="12" size="53" who="Ferenc Wagner" />
<person posts="10" size="21" who="Juan Lang" />
<person posts="7" size="13" who="Jakob Eriksson" />
<person posts="6" size="18" who="Bill Medland" />
<person posts="6" size="16" who="Boaz Harrosh" />
<person posts="5" size="52" who="Jeremy Shaw" />
<person posts="7" size="19" who="Marcus Meissner" />
<person posts="5" size="12" who="Uwe Bonnes" />
<person posts="5" size="9" who="Ivan Leo Murray-Smith" />
<person posts="4" size="176" who="Aric Stewart" />
<person posts="4" size="44" who="Chris Morgan" />
<person posts="4" size="18" who="Michael Stefaniuc" />
<person posts="4" size="12" who="Dan Timis" />
<person posts="4" size="11" who="Dmitry Timoshkov" />
<person posts="4" size="10" who="(chmorgan)" />
<person posts="4" size="10" who="Robert Shearman" />
<person posts="4" size="10" who="Ove Kaaven" />
<person posts="4" size="7" who="Tom" />
<person posts="3" size="16" who="Christian Costa" />
<person posts="3" size="13" who="Mike McCormack" />
<person posts="3" size="11" who="Ralf Juengling" />
<person posts="3" size="9" who="P. Christeas" />
<person posts="3" size="7" who="Dimitrie O. Paun" />
<person posts="3" size="7" who="Jeremy White" />
<person posts="3" size="6" who="Jeremy Newman" />
<person posts="3" size="6" who="Oleg Prokhorov" />
<person posts="2" size="22" who="Subhobroto  Sinha" />
<person posts="2" size="15" who="Kevin Koltzau" />
<person posts="2" size="9" who="Brian Vincent" />
<person posts="2" size="8" who="Stefan Leichter" />
<person posts="2" size="8" who="Fabian Cenedese" />
<person posts="2" size="6" who="Vik" />
<person posts="2" size="6" who="Rok Mandeljc" />
<person posts="2" size="5" who="grant williamson" />
<person posts="2" size="5" who="Shachar Shemesh" />
<person posts="2" size="5" who="Vincent B&#233;ron" />
<person posts="2" size="4" who=" (Wim Lewis)" />
<person posts="2" size="4" who="Huw D M Davies" />
<person posts="2" size="4" who="Sylvain Petreolle" />
<person posts="2" size="4" who="Gregory M. Turner" />
<person posts="2" size="3" who="Peter Hartshorn" />
<person posts="2" size="3" who="Thomas Brix Larsen" />
<person posts="1" size="12" who="Mike Kost" />
<person posts="1" size="4" who="Alex Stewart" />
<person posts="1" size="4" who="Paul Sheer" />
<person posts="1" size="4" who="Ulrich Czekalla" />
<person posts="1" size="4" who="Nyef" />
<person posts="1" size="4" who="Dan Kegel" />
<person posts="1" size="3" who="Joerg Mayer" />
<person posts="1" size="2" who="David Hammerton" />
<person posts="1" size="2" who="Kirill Smelkov" />
<person posts="1" size="2" who="Martin Fuchs" />
<person posts="1" size="2" who="(brettholcomb)" />
<person posts="1" size="2" who="Robert van Herk" />
<person posts="1" size="2" who="Robert Glowczynski" />
<person posts="1" size="2" who="Richard Cohen" />
<person posts="1" size="2" who="Rein Klazes" />
<person posts="1" size="2" who="Wim Lewis" />
<person posts="1" size="2" who="Duane Clark" />
<person posts="1" size="2" who="Ge van Geldorp" />
<person posts="1" size="2" who="Bruce Zhang (HangZhou)" />
<person posts="1" size="2" who="Lionel Ulmer" />
<person posts="1" size="1" who="Flameeyes" />
<person posts="1" size="1" who="=?iso-8859-1?q?John?=" />
<person posts="1" size="1" who="Francois Gouget" />

</stats>
<section 
	title="News: Xandros Review" 
	subject="News"
	archive="http://www.osnews.com/story.php?news_id=5564&amp;page=5"
	posts="1"
	startdate="01/03/2004"
	enddate="01/09/2004"
>
<topic>News</topic>
<p>Barry Smith 
<a href="http://www.osnews.com/story.php?news_id=5564&amp;page=5">reviewed 
Xandros 2.0 Deluxe</a> for OSNews.com.  He briefly mentions the included
CrossOver products integrated into the system:</p>
<quote who="Barry Smith"><p>
CodeWeavers worked as expected. It ran MS Office and Adobe Photoshop and Paint Shop Pro quite well. CodeWeavers did have the potentially annoying habit of trying to automatically install any and all Windows disks that you stuck into either drive, but such is life and the feature can easily be disabled. I call CodeWeavers a neutral aspect as far as my use goes. But for someone who really needs to run a few specialized Windows programs, and who cannot or will not setup a dual boot system, this is a good alternative. </p></quote>

</section>
<section 
	title="File Handling" 
	subject="Comment on new file implementation"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/01/0220.html" 
	posts="3"
	startdate="01/06/2004"
	enddate="01/07/2004"
>
<topic>Filesystems</topic>
<topic>Architecture</topic>
<p>Eric Pouech is doing extensive work on Wine's mechanism for
working with files and filesystems.  The scope of work is pretty
extensive and delves into some core parts of Wine.  After all,
making a Windows application think the underlying Linux filesystems
are native is a pretty daunting task.  Eric has been working on
this for quite a few months.  The resulting changes will probably
be some of the biggest we've seen in months.  Eric made available
some of his work and asked people to comment on it:</p>
<quote who="Eric Pouech"><p>
The current output is a large patch, available here:
<ul>
<a href="http://perso.wanadoo.fr/pouech-eric/ep-file.diff.gz"> 
http://perso.wanadoo.fr/pouech-eric/ep-file.diff.gz</a> (400 KB uncompressed)
</ul></p><p>
It's not completely ready yet for inclusion, however some ongoing 
discussions could overlap with what I've currently done (like how to 
configure drive without a config file, SMB handling...). So better 
discuss it widely (yet another flame war).
</p><p>
The benefit of the patch:
<ul>
<li> all file creation, opening, directory browsing is now done in ntdll 
instead of kernel32</li>
<li> file IO management can be cleanly separated between kernel32 and ntdll (1)</li>
<li> files/ directory could be removed (not done in the patch (also nuked 
include/drive.h and include/file.h)</li>
<li> homogeneous drive &amp; device handling (we no longer store those objects
in the server). Drive and device are now standard file handles (from a 
Windows point of view).</li>
<li> a few current Wine bugs have been fixed (see the todo_wine removed in 
the tests subdirs)</li>
<li> we no longer rely on the Wine config dir for the drive settings</li>
<li> partial NT volume management implementation</li>
<li> most of the volume related information (&amp; ioctl) are done on the real 
unix device attached to the volume</li>
</ul>
</p><p>
What has been removed (from current implementation):
<ul>
<li> file system options (all FS are considered case insensitive)</li>
<li> per drive code page (all drives are now handled with the wine specfic 
UNIXCP code page)</li></ul>

</p><p>
What still needs some improvement
<ul>
<li> fix all the introduced bugs (even if all the current tests actually pass)</li>
<li> setting a first default environment (even if tools/winefs provides it - 
     see below)</li></ul></p></quote>

<p>Eric <a href="http://www.winehq.org/hypermail/wine-devel/2004/01/0220.html">
went on</a> to describe in detail how filesystems would be defined and
managed.  The instructions are quite clear and actually seem to boil down
to something really simple: apply patch, run the new winefs tool, report
things that break.</p>


<p>Dimi looked at it and liked it:</p>
<quote who="Dimitrie Paun"><p>

I have to admit I haven't read the patch, but the idea looks good.
I personally like the use of the filesystem for this sort of thing
(I'm a one-value-per-file kinda guy, and I'd put a lot more into
the filesystem, generally speaking, if I had my way :)).
</p><p>
Here are a few random thoughts on it:
<ul>
  <li> it seems we're duplicating a bit stuff like udev/proc,
     but we can't rely on them, so I guess it's not a big
     deal. However, somehow we should keep in mind that
     udev will allow for hotplugging disks etc, and we should
     keep an open eye to integrate with that in the future.</li>

  <li> I assume ${WINEPREFIX}/{dos,}device point somewhere
     in the user's home dir (~/...), right?</li>

  <li> I hope Alexandre likes the idea, and we can get it
     in sooner, rather than later (before WineConf? :))</li></ul>
</p><p> 
Cool stuff.
</p></quote>

<p>Juan Lang had a question about handling paths:</p>
<quote who="Juan Lang"><p>
Eric, the sooner the better as far as I'm concerned.
</p><p>
In my quick read of the patch I didn't see any
translating from the Win32 namespace to the NT
namespace; do you plan to do anything there?
</p><p>
To pick a (bad) example, the name \\server\share\file
is valid in the Win32 namespace, but not in the NT
namespace; it must be translated to
\??\UNC\server\share\file
</p><p>
Since you mentioned SMB, I will too:  don't worry too
much, it's currently broken anyway.  As long as the
code's cleaner it should be easier to fix (and this
looks much cleaner).</p></quote>
</section>

<section 
	title="DCOM To-Do List" 
	subject="Will DCOM98 be pulled?"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/01/0140.html" 
	posts="7"
	startdate="01/04/2003"
	enddate="01/05/2003"
>
<topic>RPC / COM / OLE</topic>
<p>Mike Hearn expressed concern that Microsoft may pull
some software a lot of people use,
<quote who="Mike Hearn">
 I noticed that Win98 is about to be finally obsoleted. After this, it's
 possible Microsoft will do the same as they did with IE and other stuff
 for Win95 and pull downloads from their website. This is a problem,
 because we currently need the DCOM downloads in order for some apps to
 work - can somebody with legal knowledge check the EULA and see if we
 are allowed to redistribute this file?
</quote></p>

<p>Ivan Leo Murray-Smith glanced at it and reported,
<quote who="Ivan Leo Murray-Smith">
No legal knowledge needed, the EULA at
<a href="http://www.microsoft.com/com/dcom/dcom98/eula.asp">
http://www.microsoft.com/com/dcom/dcom98/eula.asp</a>
is very clear, and says that the user cannot distribute the dcom installer.
</quote></p> 

<p>In early version of Windows 9x, DCOM was added as a separate download.
So it's possible to download dcom95 and install it.  Wine has gradually 
improved it's DCOM / OLE support over the past few years.  It's now to the
point where a lot of very useful code has been written but not merged.  Mike 
and Ove K&#229;ven have been the active workers lately, but things have been
stalled for about 6 months.  Mike has 
<a href="http://www.winehq.org/hypermail/wine-patches/2003/12/0134.html">a hefty patch</a>
based on some work Ove did, but it needs to be cleaned up and submitted.</p>

<p>Discussion about what was missing from the builtin implementation.  
Ove brought up the first issue,
<quote who="Ove Kaaven">
Nobody has yet added typelib stuff to widl, eh... I guess I could whip
up a framework or something to help with that, since nobody else has yet
done it...
</quote></p>

<p>Mike Hearn outlined more items:</p>
<quote who="Mike Hearn"><p>
Actually, in the last 4 days I recruited somebody to hack on this from
IRC. He seems pretty competent and is currently implementing the
ICreateTypeLib[2] interfaces I think. Alexander (nyef), are you tracking
wine-devel yet?
</p><p>
If you could work on the widl backend of course that'd be fantastic. I'm
still hoping to get back to properly submitting your DCOM/apartments work
soon, but I have 3 or 4 higher priority things on my todo list currently.
</p><p>
I think once those two things are done we'll be able to make do without
native DCOM in like 95% of cases..... we'd still need it for code that
uses NdrClientCall but I think that'd be the only major missing feature
remaining.
</p></quote>

<p>Boaz Harrosh and Rob Shearman both mentioned they were interested
in working on the typelib stuff.  Rob may even have some code that
could be used:</p>

<quote who="Rob Shearman"><p>
I thought about moving
all of the typelib stuff to a library (because ITypeLib and ICreateTypeLib
must be part of the same object), so that we could use it from widl as part
of the build process.
</p><p>
I have a load of code that implements NdrClientCall2 (what's the difference
between NdrClientCall and NdrClientCall2?). I am just starting work on
NdrServerCall2/NdrStubCall2.
</p></quote>

<p>The next day Ove started on adding some new features to widl:</p>
<quote who="Ove Kaaven"><p>
With this patch, widl can be made to parse a suitably adapted version of
the stdole2.odl file previously sent to wine-patches (but it can't yet
generate anything useful from it). Not unchanged, though, as widl is
supposed to be more of a MIDL than a mktyplib (even though I can't seem
to convince MIDL to generate stdole32.tlb). And there's a new typelib.c
file to eventually fill in...
</p><p>
Log:<br />
Added rules to parse library, coclass, dispinterface, and module
definitions, and a number of attributes, and cleaned up a few things.
Started on a typelib generation framework.</p>
</quote>

<p>Ove also submitted some small patches he had laying around.</p>
</section>
<section 
	title="Debating Kernel Support For I/O" 
	subject="Re: netapi32: implement NetServerEnum and NetShareEnum"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/01/0051.html" 
	posts="24"
	startdate="01/02/2004"
	enddate="01/04/2004"
>
<topic>Architecture</topic>
<p>Alexandre came back from vacation last week and activity 
picked up quite a bit.  He immediately did a bunch of commits
to CVS then began debating some patches.  Juan Lang's work
(mentioned last week in 
<a href="http://www.winehq.org/wwn/203#Bein'%20A%20Playa%20In%20Da%20Hood">issue #203</a>)
drew some heat and it started with a simple comment from
Alexandre,
<quote who="Alexandre Julliard">
 You can't share C files across dlls, this violates
 dll separation and it won't build properly.
</quote></p>

<p>Juan wasn't sure where it should go,
<quote who="Juan Lang">
 Is making a static SMB
 library preferrable?  I haven't yet discovered the
 interface MS uses to SMB (public or private), so I
 haven't been able to hide it in the real place.
</quote></p>

<p>Alexandre thought it was best implemented elsewhere,
<quote who="Alexandre Julliard">
 As I said already, IMO the file I/O stuff should go in the kernel. The
 current approach is broken, as you noted in your FIXMEs.
</quote></p>

<p>Eric Pouech asked for a clarification of what kernel
meant - the kernel32 DLL, kernel32/ntdll combination, etc.
Alexandre cleared up the confusion,
<quote who="Alexandre Julliard"> 
 In this case I mean the Linux kernel,
 this stuff cannot be done efficiently in user space.
</quote></p>

<p>Juan wasn't sure what direction to take,
<quote who="Juan Lang">
 File I/O, fine.  But how about named pipes? 
 Mailslots?  They are implemented with nearly the same
 SMBs, and belong in kernel32 or ntdll.  netapi32 needs
 'em too, for these two functions.
</quote></p>

<p>Mike McCormack offered to help:</p>
<quote who="Mike McCormack"><p>
 I'm happy to work with you (or even do most of the work) to put named 
 pipes and mailslots into the kernel.  We just need to figure out a way 
 to reuse what's already in the kernel (smbfs) in a sensible way.
</p><p>
 I was thinking of making a new socket family or something along those 
 lines...
</p></quote>

<p>Dimi was worried that the timeline for getting this included
in the kernel might be a while.  Asking people to upgrade their
kernel seemed a bit daunting.  Alexandre didn't think it was too
much to ask.  He added that kernel support would probably even
be required for local named pipes.  Juan wondered why and Alexandre
replied,
<quote who="Alexandre Julliard">
Mike can probably give you more details, but there are some features
that cannot be supported on standard socket pairs, for instance
switching between byte and message modes on the fly, or some of the
blocking conditions.</quote></p>

<p>Juan felt that condition could be handled without kernel support,
<quote who="Juan Lang">
The named pipe state can be queried via the
QNmPHandState SMB and changed via the SetNmPHandState
SMB.  See the X/Open IPC mechanisms for SMB, p114 and
p116 (<a href="http://www.opengroup.org/products/publications/catalog/c195.htm">
http://www.opengroup.org/products/publications/catalog/c195.htm</a>
)</quote></p>

<p>Alexandre still thought that it wouldn't be possible to do it in
user space:</p>
<quote who="Alexandre Julliard"><p>
Setting the message type was an example of things that require kernel
support in the local case. Obviously you cannot send SMB requests on a
socketpair.
</p><p>
In the remote case, what we need is for the kernel to manage the whole
protocol, so that we can do read() and write() calls as if it were a
normal socket. You cannot manage the protocol in the client process,
it breaks down as soon as two threads (or worse, processes) share the
same pipe.
</p></quote>

<p>Juan responded,
<quote who="Juan Lang">
 Again, why?  The named pipe server has to support
 multiple accesses, so multiple processes can create
 unique connections to the same pipe, and let the
 server worry about concurrency.  Even if that weren't
 the case, using a synchronization object and shared
 data in the wineserver would be able to control
 access.  In the multithreaded case, you only need to
 implement concurrent control in the dll that
 implements named pipes (most appropriately ntdll).  I
 had to synchronize NetBIOS receives across threads in
 netapi32.dll, and this doesn't seem any harder.
</quote></p>

<p>Alexandre thought putting it in the server would be a problem,
<quote who="Alexandre Julliard">
You have to do inter-process synchronization, pipe handles can be
shared between processes. I don't see how you can do that without
putting everything into the wine server, which is the same as putting
it into the kernel except with a large performance hit (and not only
for named pipes, but for all file I/O, since it will prevent many
optimizations). But feel free to prove me wrong; I haven't studied the
protocol in detail so maybe I'm missing something.
</quote></p>

</section>
<section 
	title="Winebrowser Converted to Winelib" 
	subject="winebrowser winelib application"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/01/0109.html" 
	posts="1"
	startdate="01/03/2004"
>
<topic>Utilities</topic>
<p>Last week I mentioned the winebrowser script written by Chris Morgan
(<a href="http://www.winehq.org/wwn/203#Launching%20Native%20Browsers">
http://www.winehq.org/wwn/203#Launching%20Native%20Browsers</a>).  This
week Chris gave an update,
<quote who="Chris Morgan">
Alexandre wanted winebrowser implemented as a winelib application and also to 
be more easily configured.  Here is the winebrowser winelib application.  It 
uses a registry key (I'm not sure if this is the correct path for the key 
since I didn't see any other config keys in the registry) and creates a key 
with the defaults if no key exists.
</quote></p>

<p>The 
<a href="http://www.winehq.org/hypermail/wine-devel/2004/01/0109.html">source 
to winebrowser</a> can be found attached to his original email.</p>

</section>



<section 
	title="Donations Set Up On Sourceforge" 
	subject="Donations at SourceForge"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/01/0150.html" 
	posts="2"
	startdate="01/05/2004"
	enddate="01/  /2004"
>
<topic>Project Management</topic>
<p>
Dimi announced the ability to make donations to Wine through the
Sourceforge download page:</p> 
<quote who="Dimitrie Paun"><p>
After intense setup work from Alexandre and myself (about 3
clicks per person :P), we've managed to enable donations
through our SourceForge page:
<ul>
   <a href="http://sourceforge.net/projects/wine/">
   http://sourceforge.net/projects/wine/</a>
</ul></p><p>
Direct donation link:
<ul>
   <a href="http://sourceforge.net/donate/index.php?group_id=6241">
   http://sourceforge.net/donate/index.php?group_id=6241</a>
</ul></p><p>
Now, to test the new facility, we need as many users as
possible make all sorts of donations to the project...;)
</p></quote>

</section>
<section 
	title="Updated Tablet Support" 
	subject="wintab work"
	archive="http://www.winehq.org/hypermail/wine-devel/2004/01/0292.html" 
	posts="1"
	startdate="01/08/2004"
>
<topic>Graphics</topic>
<p>CodeWeavers' Aric Stewart put together some work he's
done to better support tablets:</p>
<quote who="Aric Stewart"><p>
Sorry all, This is way way way _way_ overdue. But it is really the first 
time i have had a chance to really take some time and review the changes 
Alexandre gave me, retest everything and put together a patch against 
the tip.
</p><p>
I did some quick testing and it appears that this will work.
</p><p>
I have broken it into 2 patches
</p><p>
wine_wintab.diff is all the wintab work except for the x11drv stuff
wine_x11_wintab.diff is the changes to x11drv. The reason for this is 
because i still have the ime patch that i submitted earlier in my wine 
tree so i had to had edit that x11 patch to try to make it not dependent 
on the xim stuff being already applied. This make there a chance that 
there are bits that may not apply cleanly, and if you are committing 
both of my patches (xim and this) then they won't apply cleanly without a 
bit of fudging.
</p><p>
I am also giving you 2 test applications i used for wintab testing. 
SYSPRESS.EXE and TILTTEST.EXE These applications helped a lot on testing 
things. They where found on the wacom developers site, i think i still 
have the source kicking around somewhere.
</p><p>
Changelog:  Enables Tablet support with both Tilt and Pressure
</p></quote>

<p>The test applications can be found 
<a href="http://www.winehq.org/hypermail/wine-devel/2004/01/0292.html">attached</a>
to his email.  </p>

</section>

<section 
	title="WineConf 2004 Agenda &amp; Info" 
	subject="Wineconf update"
	archive="http://www.winehq.org/hypermail/wineconf/2004/01/0002.html" 
	posts="4"
	startdate="01/06/2004"
>
<topic>WineConf 2004</topic>
<p>WineConf 2004 is coming up in just a few weeks.  Jeremy White
is the organizing force behind the conference.  He posted two
emails  this week and updated the 
<a href="http://www.winehq.org/wineconf">WineConf</a> information
page.  Jeremy proposed the following agenda:</p>

<quote who="Jeremy White"><p>
At this point, the plan is to have a very open 
schedule with a lot of time for informal discussions.
Furthermore, we will keep a white board of discussion topics
and make time and room for those ad hoc discussion topics.
With that said, we will have a formal schedule as follows:</p>
<p>
<table border="1" cellpadding="5" cellspacing="0">
<tr>
<td>Saturday, 8:30-9:30 am</td>
  <td>Pastries and coffee, meeting time</td>
</tr>

<tr>
<td>Saturday, 9:30-10:15 am</td>
  <td>Opening keynote - Alexandre Julliard</td>
</tr>
<tr>
<td>Saturday, 10:45-12:00 am</td>
  <td>Wine 1.0 Discussion, led by Dimitrie O. Paun</td>
</tr>
<tr>
<td>Saturday, 12:00 am-1:00 pm</td>

<td>Lunch (hot hoagies + pizza)</td>
</tr>
<tr>
<td>Saturday, 1:00 pm-2:00 pm</td>
<td>Making it work: discussion on techniques for getting an app to run, led by Tom Wickline</td>
</tr>
<tr>
<td>Saturday, 2:30 pm-3:30 pm</td>
<td>(two sessions)<br />Discussion on internationalization, led by Shachar, AND<br />
So you want to be a Wine hacker?, led by Mike Hearn</td>

</tr>
<tr>
<td>Saturday, 4:00 pm -  5:00 pm</td>
<td>Explore the Ice Palace at the St. Paul Winter Carnival</td>
</tr>
<tr>
<td>Saturday, 6:00 pm -  8:00 pm</td>
<td>Dinner, Wine, and recreation at the Mall of America</td>
</tr>
<tr>
<td>Saturday, 9:00 pm -  ???</td>
<td>Libations, working hack groups back at HQ</td>

</tr>

<tr>
<td colspan="2">&#160;</td>
</tr>

<tr>
<td>Sunday, 8:30 am -  9:30 am</td>
<td>Donuts and coffee</td>
</tr>
<tr>
<td>Sunday, 9:30 am -  10:15 am</td>
<td>Porting it: discussion of Winelib, led by Francois Gouget and Dimitrie O. Paun</td>

</tr>
<tr>
<td>Sunday, 10:15 am -  12:00 am</td>
<td>This space intentionally left blank</td>
</tr>
<tr>
<td>Sunday, 1:00 pm -  2:00 pm</td>
<td>OLE, led by Marcus Meissner</td>
</tr>

<tr>
<td>Sunday, 2:30 pm -  ???</td>

<td>Hacking games, playing games, led by Lionel Ulmer</td>
</tr>
</table></p></quote>

<p>Jeremy arranged for a group rate at a Best Western for
$58 /night.  For those on a stricter budget he found a 
youth hostel for $25 /night.  </p>
<p>
Jeremy also wondered about remote participation.
The last WineConf had a streaming video feed which was
great for folks who couldn't attend.  However, it wasn't
interactive at all.  Jeremy wondered if it would be
worth pursuing something similar:</p>
<quote who="Jeremy White"><p>
One thing I would like to do is to stream audio
from the conference out to the web and also work very hard
to include folks from #winehq (or maybe #wineconf) 
in some of the sessions.
</p><p>
The sessions I thought made particular sense were
the ones around Wine 1.0 as well as on OLE and Games.
</p><p>
Does anyone recall being remote to the last Wineconf?  
Did it work at all?  Is there anything we could/should do to 
enable others to join us, if only virtually?
(Please feel free to tell me that it didn't work worth beans
and we should just drop it, btw &lt; g &gt;).
</p></quote>



</section>


</kc>
