<?xml version="1.0" ?>
<kc>

<title>Wine Traffic</title>

<author contact="http://www.theshell.com/~vinn">Brian Vincent</author>
<issue num="307" date="03/05/2006" />
<intro> <p>This is the 307th issue of the Wine Weekly News publication.
Its main goal is to not puke when watching network television. It also serves to inform you of what's going on around Wine. Wine is an open source implementation of the Windows API on top of X and Unix.  Think of it as a Windows compatibility layer.  Wine does not require Microsoft Windows, as it is a completely alternative implementation consisting of 100% Microsoft-free code, but it can optionally use native system DLLs if they are available.   You can find more info at <a href="http://www.winehq.org">www.winehq.org</a></p> </intro>
<stats posts="106" size="206" contrib="61" multiples="22" lastweek="32">

<person posts="7" size="5" who="hverbeet at gmail.com (H. Verbeet)" />
<person posts="6" size="18" who="stefandoesinger at gmx.at (Stefan D&#246;singer)" />
<person posts="4" size="18" who="fenix at club-internet.fr (Raphael)" />
<person posts="4" size="13" who="infyquest at gmail.com (Vijay Kiran Kamuju)" />
<person posts="4" size="5" who="mike at codeweavers.com (Mike McCormack)" />
<person posts="4" size="4" who="lav at etersoft.ru (Vitaly Lipatov)" />
<person posts="4" size="3" who="julliard at winehq.org (Alexandre Julliard)" />
<person posts="3" size="8" who="segin2005 at gmail.com (Segin)" />
<person posts="3" size="6" who="wine.dev at web.de (Detlef Riekenberg)" />
<person posts="3" size="4" who="wine-devel at kievinfo.com (Vitaliy Margolen)" />
<person posts="3" size="3" who="Aric.Cyr at gmail.com (Aric Cyr)" />
<person posts="2" size="9" who="christian.gmeiner at students.fh-vorarlberg.ac.at (Christian Gmeiner)" />
<person posts="2" size="7" who="stefandoesinger at gmx.at (Stefan =?utf-8?q?D=C3=B6singer?=)" />
<person posts="2" size="5" who="thunderbird2k at gmx.net (Roderick Colenbrander)" />
<person posts="2" size="3" who="wmhrae at hotmail.com (W.M. Horst)" />
<person posts="3" size="4" who="rob at codeweavers.com (Rob Shearman)" />
<person posts="2" size="2" who="sreenivas at inmage.net (Sreenivas Tatti)" />
<person posts="2" size="2" who="gerald at pfeifer.com (Gerald Pfeifer)" />
<person posts="2" size="2" who="mike at plan99.net (Mike Hearn)" />
<person posts="2" size="1" who="dank at kegel.com (Dan Kegel)" />
<person posts="3" size="3" who="meissner at suse.de (Marcus Meissner)" />
<person posts="2" size="1" who="dmitry at codeweavers.com (Dmitry Timoshkov)" />
<person posts="1" size="8" who="martin.bayo at gmail.com (Martin Jorge Bayo)" />
<person posts="1" size="7" who="wijn at wanadoo.nl (Rein Klazes)" />
<person posts="1" size="6" who="riku at sdf-eu.org (Riku Hintukainen)" />
<person posts="1" size="4" who="gladiac.lists at gmail.com (Christian Lachner)" />
<person posts="1" size="3" who="dtremenak at gmail.com (Daniel Remenak)" />
<person posts="1" size="3" who="astrand at cendio.se (=?iso-8859-1?Q?Peter_=C5strand?=)" />
<person posts="1" size="3" who="juan_lang at yahoo.com (Juan Lang)" />
<person posts="1" size="2" who="jorishuizer at planet.nl (Joris Huizer)" />
<person posts="1" size="2" who="p.beutner at gmx.net (Peter Beutner)" />
<person posts="1" size="2" who="fgouget at free.fr (Francois Gouget)" />
<person posts="1" size="1" who="signman359 at gmail.com (Rich Gilson)" />
<person posts="1" size="1" who="jwhite at codeweavers.com (Jeremy White)" />
<person posts="1" size="1" who="ngompa13 at gmail.com (Neal Gompa)" />
<person posts="1" size="1" who="elprans at gmail.com (Elvis Pranskevichus)" />
<person posts="1" size="1" who="leidola at newcon.de (Olaf Leidinger)" />
<person posts="1" size="1" who="dimitryn at perm.ru (Dimitry Naldayev)" />
<person posts="1" size="1" who="aric.cyr at gmail.com (Aric Cyr)" />
<person posts="1" size="1" who="pgr at arcelectronicsinc.com (paul)" />
<person posts="1" size="1" who="tobert at gmail.com (Al Tobey)" />
<person posts="1" size="1" who="vasvir at iit.demokritos.gr (Vassilis Virvilis)" />
<person posts="1" size="1" who="ahziem1 at mailbolt.com (Andrew Z)" />
<person posts="1" size="1" who="jan.wine at zerebecki.de (Jan Zerebecki)" />
<person posts="1" size="1" who="dj015 at yahoo.com (Damjan Jovanovic)" />
<person posts="1" size="1" who="winehacker at gmail.com (Steven Edwards)" />
<person posts="1" size="0" who="vbudovsk at cs.rmit.edu.au (Vitaly Budovski)" />
<person posts="1" size="0" who="linz at li-pro.net (Stephan Linz)" />
<person posts="1" size="0" who="rolf.kalbermatter at citeng.com (Rolf Kalbermatter)" />
<person posts="1" size="0" who="saulius2 at ar.fi.lt (Saulius Krasuckas)" />
<person posts="1" size="0" who="eric.pouech at wanadoo.fr (Eric Pouech)" />
<person posts="1" size="0" who="mekjedi at bluebottle.com (MattK)" />
<person posts="1" size="0" who="wine at electrozaur.com (Boaz Harrosh)" />
<person posts="1" size="0" who="david.adam at u-picardie.fr (david.adam)" />
<person posts="1" size="0" who="w3seek at reactos.com (Thomas Weidenmueller)" />
<person posts="1" size="0" who="johnlen at inbox.ru (Evgeny F)" />
<person posts="1" size="0" who="dimi at lattica.com (Dimi Paun)" />
<person posts="1" size="0" who="andi at rhlx01.fht-esslingen.de (Andreas Mohr)" />

</stats>
<section 
	title="News: Wine 0.9.9"
	subject="News"
	archive="http://www.winehq.com/announce/0.9.9"
	posts="1"
>
<topic>News</topic>
<p>Wine 0.9.9 came out this past week.  There seems to be a lot more
user-facing additions in this release compared to some of the other
recent releases.  Alexandre 
<a href="http://www.winehq.com/announce/0.9.9">noted</a> the following 
changes:</p>
<quote who="Alexandre Julliard"><p>
<ul>
  <li> Many new features and improvements in Richedit.</li>
  <li> More Web browser support.</li>
  <li> Recursive directory change notifications.</li>
  <li> Wine installation is now fully relocatable.</li>
  <li> Direct3D 8 and 9 now use the same code.</li>
  <li> Many debugger improvements.</li>
  <li> Systray is now handled by the explorer process.</li>
</ul></p></quote>

<p>Grab the binary off the 
<a href="http://www.winehq.org/download">download page</a> or
<a href="http://wiki.winehq.org/GitWine">git</a> it.
</p>
</section>
<section 
	title="Valgrind and Wine Revisited"
	subject="Re: Wine &amp; Valgrind"
	archive="http://sourceforge.net/mailarchive/message.php?msg_id=14918474"
	posts="1"
>
<topic>Debugging</topic>
<p>
It's been known for a long time that using Wine with Valgrind has the
potential to uncover problems.  In the past, special patches have been
required with for Wine or Valgrind or both.  Eric Pouech has spent some
time working on this recently and created a 
<a href="http://wiki.winehq.org/Wine_and_Valgrind">Wine_and_Valgrind</a>
wiki page to document the progress.  From that page:</p>
<quote who="Eric Pouech"><p>
 	 	
<a href="http://www.valgrind.org">Valgrind</a> is a set of tools aimed at 
finding bugs in programs. For example, the tool memcheck allows to identify read
access to a memory location which hasn't been initialized, which is handy in 
some cases.
</p><p>
Since Wine uses a lots of tricks to run, Valgrind didn't behave well with Wine. 
To make a long story short, Valgrind takes the binary code of any program, 
translated into an intermediary binary code of its own, inserts the checks 
required (for example for memcheck, it traces every read and write operation to 
memory), and then generates back the binary code for the target processor. 
This also requires lots of action for a smooth integration with the 
OS (intercepting the system calls, getting a knowledge of the threads...).
</p><p>
The good news (now), is that Valgrind 3.1.0 runs out of the box on Wine. Even 
if there was a specific port of Valgrind (2.x) to run under Wine, we strongly 
suggest using Valgrind 3.1.0. 
</p></quote>

<p>Eric had to make changes to both Valgrind and Wine to get to this point.
No discussion occurred on the Wine mailing lists, but there were some
interesting threads over on the Valgrind developer list.  Eric gave an
update a few weeks ago on that list where things stand:</p>
<quote who="Eric Pouech"><p>
 A summary of where we stand for making Valgrind and Wine work well 
 together. The starting point is Valgrind 3.1.0 and Wine 0.9.7.
</p><p> 
 First of all (reminder) Valgrind &amp; Wine now work (mostly) out of the box 
 together.
</p><p> 
 Here's a list of (known) problems faced:
<ol>
 <li> missing support for some ioctls (HDMA, serial). Added to Valgrind (now 
 in branch, at least of x86)</li>

 <li> missing support for tkill syscall. Added to Valgrind (now in branch), Wine
 fixed to use the better tgkill syscall (0.9.8)</li>

 <li> some missing instrumentation of Wine (regarding stack manipulation). 
 Wine fixed (0.9.8)</li>

 <li> possibility to change EIP in signal handler. Added to Valgrind (now in 
 branch, for x86).</li>

 <li> trapno is not passed in signal handlers. A hacky patch proposed, and 
 rightfully rejected. Solution in sight (Tom Hughes), not yet in branch.</li>

 <li> missing instruction emulation in VEX (x86, and likely amd 64). Wine 
 needs:
 <ul>
 	push/pop [ds,es,ss]<br />
 	iret (on 32bit intercall, cs not changed)(*)<br />
 	int 3<br />
 	cli/sti<br />
      (*) actually, Wine would require much more for 16bit emulation, but
 	I don't think it's reasonable, nor a short term goal, to use Valgrind  
        &amp; Wine for 16bit code.</ul>
 
      The push/pop code was easy to fix (it's already written). However
      iret will be a bit trickier (I have a dirty hack for iret and int 3,
      but likely Julian would rather do it himself ;-). We can try to get
      rid of the cli/sti pair.</li>

 <li> missing stack backtrace information
      <p>
 	As already explained, the first thread of a process is handled
 	as follows: it starts using the stack created from the process
          creation (from Unix). As the process may require a larger stack
          (from the Windows definition of the PE header), the Wine loader
          always create a second stack at the loader startup, and switch
          execution to that second stack when calling the PE module entry
 	point.
        </p><p>
 	The outcome of this, from a Valgrind point of view, is that we get two
 	stacks (values are important):
        <ul>
 	<li> first stack at 0xBE??????</li>
 	<li> second stack at 0x20?????? (ie below the first one).</li></ul>
 	The second stack is declared to Valgrind by Wine.
 	When Valgrind needs to print a backtrace (for any issue), in
 	get_StackTrace2 there's a test:
        <ul><code>
 	   if (fp_min + VG_(clo_max_stackframe) &lt;= fp_max) {</code></ul>
 	Here fp_min gets its value from the second stack (in the
 	0x20?????? area, and fp_max in the 0xbe?????? area). The outcome
 	is that no backtrace is generated :-/. Trying to remove the test
 	(or increase the max_stackframe value) provides some other
 	issues as not all the area in the 0x20????? - 0xbe000000 is
 	mapped, hence having some crashes.
        </p><p>
 	This one is a bit more hairy to fix. I have a patch that mixes
 	the max_stackframe test, with some extra test about the stacks
 	that are known by Valgrind (and checking that info for the backtrace
 	really points to the stack). But since Valgrind doesn't make use of
 	this information, it must be for good reasons.</p></li></ol>
</p><p> 
 The net result of this is:
<ul>
 <li> because of 7., we cannot get a full backtrace of an issue found by 
 Valgrind. Currently, we disabled the offending test in get_StackTrace2 pointed
 out in 7. With the listed side effects (crashes), and we'd like to have 
 something working out of the box (from the Valgrind branches)</li>
 <li> because of 5. and 6., we cannot use Wine and Valgrind on programs 
 triggering exceptions (the missing parts in 5. and 6. are only used in those 
 occasions).</li></ul></p><p>
 
 I'd really like to see 5., 6. and 7. fixed. Let me know if you need some 
   help.</p><p>
 
 The good side of the story:
<ul>
 <li> we ran the regression tests (from the Wine regression test suite) on 5 
 DLLs under Valgrind, and fixed something like 15 potential issues and bugs 
 (even if some tests don't work under Valgrind yet)</li>
 <li> that's worth going further and run the full Wine regression tests under 
Valgrind.</li></ul></p></quote>

<p> Profile.  Fix bugs.  Have fun.</p> 

</section>
<section 
	title="DirectDraw via WineD3D"
	subject="DirectDraw -&gt; WineD3D patch"
	archive="http://www.winehq.com/pipermail/wine-devel/2006-March/045420.html"
	posts="1"
>
<topic>DirectX</topic>
<p>Wine's DirectDraw implementation is getting stale around the edges.  
It's gotten us a long way, but Stefan D&#246;singer announced plans a
while ago to begin transitioning it toward more modern interfaces
(see WWN <a href="http://www.winehq.com/wwn/301#Accelerating%20DirectDraw">#301</a> for more details.)
This week he announced the initial version:</p>
<quote who="Stefan Dosinger"><p>
I've brought my DirectDraw over WineD3D patch in a form where I want to show 
it to the public for review. I've uploaded it to 
<a href="http://stud4.tuwien.ac.at/~e0526822/">
http://stud4.tuwien.ac.at/~e0526822/</a>, where it is described in detail (below 
the game list).
</p><p>
If there are no fundamental objections against it, I'll start sending patches 
for WineD3D. The changes I'll make in small patches :) are:
<ul>
<li> Header fixes, that wined3d_interface.h can be included with d3d.h</li>
<li> Adding methods to WineD3D for DirectDraw rendering</li>
<li> Adding the 2D only surface implementation to WineD3D</li></ul>
</p><p>
When WineD3D is ready, I'll send a patch for dlls/ddraw to wine-devel and 
wine-user for a broad regression testing, and when the regressions are out, 
the ddraw can be replaced (From my POV, AJ has the last word of course ;) )
</p></quote>

<p>DirectDraw sitting on top of WineD3D, the WineD3D layer can best decide
how to get the pixels on the screen the fastest way: plain X11 rendering,
DGA, or OpenGL.  It also opens the door to begin moving Wine's Direct3D 
version 7 code over to WineD3D.  Going forward, there can be some huge
performance improvements realized.  For example, it's known that 2D graphics
requiring depth conversion are quite slow and would be greatly accelerated
by offloading that to the video card using OpenGL.  </p>
<p>Stefan's page, referenced in the email above, includes the following
notes (as well as a bunch of cool screenshots):</p>
<quote who="Stefan Dosinger"><p>
Basically all rendering and screen setup is done in WineD3D, and all DirectDraw and Direct3D7 specific management is handled in ddraw. Because of that, the ddraw.dll is much bigger, compared to d3d8.dll or d3d9.dll. It handles the decoding of the horrible DirectDraw data types, thunks and wrappers for older DirectDraw and Direct3D interface versions as well as many DirectDraw-specific things as surface attachments and complex surfaces. Screen setup and rendering is done in WineD3D.
</p><p>
There are a few changes to WineD3D:
<ul>
    <li> Initialization is split up in an OpenGL-free part and an 
IWineD3DDevice::Init3D method which initializes the 3D functions. This split 
is not yet complete, so an opengl lib must be installed and some ddraw 
games (nfs3) crash in opengl calls called during initialization. The 
IWineD3DDevice::Relase code has been split up too. IWineD3DDevice has methods 
to setup the screen without a Direct3D swapchain</li>
    <li> An second surface implementation was added, IWineX11Surface, which 
handles 2D only-operations with the old surface_dib code. It will be renamed 
to WineGDISurface, and WineX11Surface will use Xrender, WineD3DSurface will 
get the ability to do 2D rendering with OpenGL</li>
    <li> DirectDraw rendering methods such as IWineD3DSurface::Blt, 
IWineD3DSurface::BltFast and IWineD3DSurface::Flip have been added, along with 
related calls.</li>
    <li> Some DirectDraw data types will be added to 
include/wine/wined3d_types.h, and d3d9 types which are used by the wined3d 
header and don't exist in d3d.h will be added to wined3d_types too. At the 
moment, those definitions reside in dlls/ddraw/d3d_compat.h.</li></ul></p>
</quote>


</section>

<section 
	title="Launching Native Apps"
	subject="Launch native Linux apps?"
	archive="http://www.winehq.com/pipermail/wine-devel/2006-March/045248.html"
	posts="2"
>
<topic>Configuration</topic>
<p>Rich Gilson asked a question this week about launching native 
Linux apps:</p>
<quote who="Rich Gilson"><p>

Is it possible to set Wine up so that it can launch native Linux apps?  For 
example, set your native copy of Acrobat Reader to be associated to PDF 
extensions in Wine, or even use the Linux plugin while using a browser?
</p></quote>

<p>Stefan D&#246;singer gave an example of it:</p>
<quote who="Stefan Dosinger"><p>
I have done this with Kmail and others. You have to add a few registry keys in 
HKCL and HKLM. Basically, you can launch any Linux app from wine by its full 
path and pass command line arguments. There's of course the problem of 
converting Windows paths to Unix paths.
</p><p>
At <a href="http://www.winehq.com/fun_projects">
http://www.winehq.com/fun_projects</a> my Kmail registry entries are 
described. For examples how to use Open Office, you have to google.
</p><p>
I don't think that executing a Linux Plugin in a Win32 browser is possible, 
but CrossOver allows you to do the reverse.
</p></quote>

</section>
<section 
	title="Thinking About WineConf 2006"
	subject="Wineconf 2006"
	archive="http://www.winehq.com/pipermail/wine-devel/2006-March/045273.html"
	posts="1"
>
<topic>WineConf 2006</topic>
<p>The topic of WineConf 2006 has come up over the past few months, but
no concrete plans have been made.  Last year we were fortunate and had
some wonderful individuals come forward to help organize a great event in
Germany.  The discussion for this year hasn't gotten much further than thinking
we'd like to have it somewhere in the UK.  In fact, most of that discussion
occurred last year in Stuttgart.  Jeremy White wrote in with a bit of an
update on where things stood:</p>
<quote who="Jeremy White"><p>
We've run into a bit of a snag around Wineconf 2006.
</p><p>
Huw was trying to pull something together for this summer,
but he's asked to beg off (he's going to be out with
a thyroid operation for a bit; prognosis looks good, but...).
</p><p>
Rob stepped up and volunteered to pull something together
in Reading in the UK, and has been a good sport about
getting it together.
</p><p>
Sadly, the dates haven't been working out very well.
</p><p>
Rob and I were trying to get something together for
May 13th (all other dates in May don't work for one reason
or another), but then internal folks here started
telling us that that was way too soon.
</p><p>
The problem with trying for June is that travel costs
in June are astronomical; plane flights for example are
twice the cost in June than in May.
</p><p>
So what I'd like to ask is that people that are interested
in coming to Wineconf give us a bit of feedback:
<ul>
  <a href="http://www.winehq.org/wineconf/survey06">
  http://www.winehq.org/wineconf/survey06</a></ul>
</p><p>
Also, I'd like to request that follow ups to this shift over
to the Wineconf mailing list:
<ul>
  <a href="http://www.winehq.org/mailman/listinfo/wineconf">
  http://www.winehq.org/mailman/listinfo/wineconf</a></ul>
</p><p>
For those of you that don't know, Wineconf is our
kinda sorta annual technical conference.  It's a place
where Wine developers gather to heckle Alexandre,
talk about the mythical Wine 1.0, and marvel that
there are 60 other people as crazy as themselves &lt;grin&gt;.
</p><p>
There isn't usually any fee, although you have to bear your own travel costs.
Everyone is welcome, but the focus is very technical and developer focused,
so 'regular' users may feel a bit out of place.
</p></quote>

<p>So I'll just toss this out there for anyone who might be able to
help us out.  Basically we're looking for a small venue for 2 days that can 
hold about 60 people (with Internet access), nearby hotel(s), and .. that's
about it.  We're a pretty simple group.  As mentioned, we're really
leaning toward the UK simply because it's a fairly central location
that's easy to get to.  Jeremy had an inclination that September might
be more friendly for travel.  If you have any friends who might be able
to comp us 50 room nights at an English resort, you might be our new best
friend. </p>
</section></kc>
