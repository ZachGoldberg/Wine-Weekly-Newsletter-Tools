<?xml version="1.0" ?>
<kc>

  <title>Kernel Cousin Wine</title>

  <author email="vinn@theshell.com">Brian Vincent</author>

  <issue num="114" date="01/29/2002" />

  <intro>
    <p>This is the 114th release of the Wine's kernel cousin
    publication. Its main goal is to distribute widely what's
    going on around Wine (the Un*x Windows emulator).</p>

    <p>Typically I've been putting the latest news here in the
    introduction. This is bad for several reasons, most importantly
    it makes searching archives hard. Also, it's soon going to
    unfriendly to some scripts I run. So from now on I'm going to
    be adding news as the first section below.</p>
  </intro>

  <stats posts="297" size="1092" contrib="67" multiples="39"
  lastweek="27">
    <person posts="40" size="103"
    who="Alexandre Julliard &lt;julliard@winehq.org&gt;" />

    <person posts="31" size="78"
    who="Dimitrie O. Paun &lt;dimi@cs.toronto.edu&gt;" />

    <person posts="25" size="128"
    who="Andriy Palamarchuk &lt;apa3a@yahoo.com&gt;" />

    <person posts="19" size="71"
    who="Lawson Whitney &lt;lawson_whitney@juno.com&gt;" />

    <person posts="12" size="42"
    who="David Elliott &lt;dfe@tgwbd.org&gt;" />

    <person posts="12" size="34"
    who="Francois Gouget &lt;fgouget@free.fr&gt;" />

    <person posts="9" size="25"
    who="Dmitry Timoshkov &lt;dmitry@baikal.ru&gt;" />

    <person posts="9" size="23"
    who="Andreas Mohr &lt;andi@rhlx01.fht-esslingen.de&gt;" />

    <person posts="8" size="40"
    who="Martin Wilck &lt;Martin.Wilck@fujitsu-siemens.com&gt;" />

    <person posts="8" size="33"
    who="Uwe Bonnes &lt;bon@elektron.ikp.physik.tu-darmstadt.de&gt;" />

    <person posts="7" size="24"
    who="Duane Clark &lt;dclark@akamail.com&gt;" />

    <person posts="7" size="16"
    who="Ove K&#229;ven &lt;ovehk@ping.uio.no&gt;" />

    <person posts="6" size="14"
    who="Bill Medland &lt;medbi01_1@accpac.com&gt;" />

    <person posts="5" size="70"
    who="Patrik Stridvall &lt;ps@leissner.se&gt;" />

    <person posts="5" size="16"
    who="Ori Pessach &lt;ori_pessach_blah@yahoo.com&gt;" />

    <person posts="5" size="10"
    who="Hetz Ben Hamo &lt;hetz@kde.org&gt;" />

    <person posts="4" size="18"
    who="Gerard Patel &lt;gerard.patel@nerim.net&gt;" />

    <person posts="4" size="12"
    who="Lionel Ulmer &lt;lionel.ulmer@free.fr&gt;" />

    <person posts="4" size="11"
    who="Steven Edwards &lt;Steven_Ed4153@yahoo.com&gt;" />

    <person posts="4" size="8"
    who="Sylvain Petreolle &lt;spetreolle@yahoo.fr&gt;" />

    <person posts="3" size="36"
    who="Gavriel State &lt;gav@transgaming.com&gt;" />

    <person posts="3" size="34"
    who="Nog &lt;nog@sdf.lonestar.org&gt;" />

    <person posts="3" size="22"
    who="Shane Shields &lt;locutusenterprises@yahoo.com&gt;" />

    <person posts="3" size="12"
    who="Daniel Walker &lt;diwalker@earthlink.net&gt;" />

    <person posts="3" size="10"
    who="Guy L. Albertelli &lt;galberte@neo.lrun.com&gt;" />

    <person posts="3" size="9"
    who="Bill Medland &lt;Bill.Medland@accpac.com&gt;" />

    <person posts="3" size="8"
    who="Jukka Heinonen &lt;jhei@iki.fi&gt;" />

    <person posts="3" size="7"
    who="Dan Kegel &lt;dank@kegel.com&gt;" />

    <person posts="2" size="21"
    who="Peter Hunnisett &lt;peter@transgaming.com&gt;" />

    <person posts="2" size="11"
    who="Mike McCormack &lt;mike_mccormack@start.com.au&gt;" />

    <person posts="2" size="10"
    who="Keith Matthews &lt;keith_m@sweeney.demon.co.uk&gt;" />

    <person posts="2" size="7"
    who="Marcus Meissner &lt;marcus@jet.franken.de&gt;" />

    <person posts="2" size="7"
    who="Srdjan Matovina &lt;srdjan@scot.canada.sun.com&gt;" />

    <person posts="2" size="6"
    who="Daniel Davis &lt;planetes@cfl.rr.com&gt;" />

    <person posts="3" size="7"
    who="Eric Pouech &lt;eric.pouech@wanadoo.fr&gt;" />

    <person posts="2" size="5"
    who="Rein Klazes &lt;rklazes@xs4all.nl&gt;" />

    <person posts="2" size="4"
    who="Jakob Eriksson &lt;jakob@vmlinux.org&gt;" />

    <person posts="2" size="3"
    who="Roland &lt;roland@netquant.com.br&gt;" />

    <person posts="2" size="3"
    who="Steven Edwards &lt;steven_ed4153@yahoo.com&gt;" />

    <person posts="1" size="9"
    who="Christian Schmitt &lt;chris.81@gmx.de&gt;" />

    <person posts="1" size="7"
    who="Niclas Carlsson &lt;nkarlsso@ra.abo.fi&gt;" />

    <person posts="1" size="5"
    who="Heiko Nardmann &lt;h.nardmann@secunet.de&gt;" />

    <person posts="1" size="3"
    who="Casper Hornstrup &lt;chorns@users.sourceforge.net&gt;" />

    <person posts="1" size="3" who="juergen.schmied@debitel.net" />

    <person posts="1" size="3"
    who="Sander van Leeuwen &lt;sandervl@xs4all.nl&gt;" />

    <person posts="1" size="3"
    who="Aric Stewart &lt;aric@codeweavers.com&gt;" />

    <person posts="1" size="2"
    who="Gerhard W. Gruber &lt;sparhawk@gmx.at&gt;" />

    <person posts="1" size="2"
    who="Dave Hawkes &lt;daveh-wine@cadlink.com&gt;" />

    <person posts="1" size="2"
    who="Michael Stefaniuc &lt;mstefani@redhat.de&gt;" />

    <person posts="1" size="2"
    who="Bernhard Rosenkraenzer &lt;bero@redhat.de&gt;" />

    <person posts="1" size="2"
    who="Meths &lt;meths@btinternet.com&gt;" />

    <person posts="1" size="2"
    who="Jeremy White &lt;jwhite@codeweavers.com&gt;" />

    <person posts="1" size="2"
    who="clemens &lt;therapy@endorphin.org&gt;" />

    <person posts="1" size="2"
    who="Ilja Kamps &lt;ikarus@ikarus.ath.cx&gt;" />

    <person posts="1" size="2"
    who="Sander Wichers &lt;wichers@usa.net&gt;" />

    <person posts="1" size="2"
    who="Brian Elliott &lt;bde3@yahoo.com&gt;" />

    <person posts="1" size="2"
    who="Zhang Shu &lt;jo-c@is.aist-nara.ac.jp&gt;" />

    <person posts="1" size="2"
    who="Nerijus Baliunas &lt;nerijus@users.sourceforge.net&gt;" />

    <person posts="1" size="2"
    who="Martin Wilck &lt;martin@tropos.de&gt;" />

    <person posts="1" size="1"
    who="John Atkinson &lt;john.atkinson@metagence.com&gt;" />

    <person posts="1" size="1"
    who="James Juran &lt;jamesjuran@alumni.psu.edu&gt;" />

    <person posts="1" size="1"
    who="Scott Sipe &lt;css3@duke.edu&gt;" />

    <person posts="1" size="1"
    who="Isolation &lt;iso_lation@hotmail.com&gt;" />

    <person posts="1" size="1"
    who="lee johnson &lt;lee@imyourhandiman.com&gt;" />
  </stats>

 


<section
  title="News: Wired Story, LindowsOS Preview"
  subject="News"
  topic1="News"
  archive="http://www.winehq.org/hypermail/wine-cvs/2002/01/0147.html"
  posts="2"
  startdate="01/14/2002"
  enddate="01/29/2002"
>

<p>Alexandre tagged a new release of Wine - 20020122.  In the announcement he noted:
<ul>
    <li> Lots of improvements to asynchronous I/O.</li>
    <li> Beginnings of unit testing infrastructure.</li>
    <li> Inter-process DDE should work now.</li>
    <li> Lots of bug fixes.</li>
</ul></p>
<p>There have been a ton of CVS commits after that.  Jeremy White contributed a large
patch to improve Office functionality.  He didn't have time to break it up into pieces and
asked for volunteers.  Duane Clark, Huw Davies, and Dimitrie Paun responded and broke it
up into 30+ patches.  Alexandre also committed a patch from Huw Davies that uses the 
Xrender extension to support client side font rendering - thereby providing anti-aliased 
text.  Mike McCormack also came up with a patch that to remove X borders and title
bars on managed windows, so the Windows are still managed and they look like a normal 
Windows window.</p>

<p>There's a couple of good articles about Wine this week.  First, there's a
story on <a href="http://www.wired.com">Wired</a> titled 
<a href="http://www.wired.com/news/business/0,1367,49719,00.html">Can WINE Ferment Move
to Linux?</a>.  There's some good quotes in there from Jeremy White.  Also this
week, Adam Wiggins <a href="http://people.trustcommerce.com/~adam/office.html">describes</a>
how his entire office converted over to using open source desktops.  In the
<a href="http://people.trustcommerce.com/~adam/office2.html">second part</a> Adam describes
some of the applications he's using - CodeWeavers' CrossOver Plugin made the list.</p>

<p>The other big Wine news this week appears over on <a href="http://www.newsforge.com">NewsForge</a>.
Tina Gasperson <a href="http://www.newsforge.com/article.pl?sid=02/01/25/1811226">
reviewed</a> the sneak preview release of LindowsOS.  Tina found that the distribution basically
consists of KDE, KDE apps, and WINE.  She had a lot of trouble installing Windows applications,
which shouldn't come as a huge surprise.  However, the scariest part is the installation uses
root as the main user.  As Tina describes, <quote who="Tina Gasperson">
 Not only did the installation process not give us the opportunity to add users other than root, 
 it didn't even explain that we *should* add users other than root, didn't tell us that the account 
 was root, and even tended to discourage us from entering the optional security password for root, 
 because, "if you lose this password it cannot be recovered."  This is a huge security problem,
I can't even imagine the amount of damage that could be done.  With the vast array of user tools
and configuration options available there is no reason for doing that. 

</quote>
</p>

</section>




 



<section
  title="Disk Error Fixed"
  subject="Re: SetEndOfFile fix"
  topic1="Patches"
  archive="http://www.winehq.org/hypermail/wine-devel/2002/01/0395.html"
  posts="8"
  startdate="01/20/02"
  enddate="01/27/02"
>

<p> Rein Klazes submitted a patch with this note, <quote who="Rein Klazes">
 This fixes office 97 MSword error (disk full or write protected) when
 saving files on a vfat partition. MSword calls <code>SetEndOfFile()</code> which
 uses <code>ftruncate()</code> that, in Linux, cannot grow files in this filesystem.</quote></p>

<p>Andreas Mohr replied:</p>
<quote who="Andreas Mohr"><p>
 Ah ! :-)))
</p><p>
 I already suspected this to be the case.
 At least I already found due to some error code that some ftruncate()
 must have failed, and I think I thus called it an ftruncate problem.
</p><p>
 Oh, and yes, that error condition was in the server, too, so it must have
 been this ftruncate.
</p><p>
 And one more: In several cases, some guys reported that programs needed some
 "touch"ing before being able to save a file.
 What do you wanna bet that *this* is the problem that's now solved ?? :)
</p><p>
 In short: a very important fix, I think.
</p><p>
 I guess we can call you a Wine Master now ;)
</p></quote>

<p>Guy Albertelli exchanged some emails with Rein about using it with a 2.2.12 kernel,
<quote who="Guy Albertelli">
 This was a great catch. It was the reason Scandisk complained about
 OutlookExpress's files (see my message from 1/11/2001). However your fix
 still fails on my outdated kernel (2.2.12-20). The attached version seems to
 work better on this kernel.</quote>  After looking at Guy's patch Lawson Whitney
wondered why bothering to use ftruncate() at all when a combination of 
lseek() and write() would appear to fix the same problem.  Rein explained
that wouldn't work if you needed to shrink the file.
</p>

</section>




 


<section
  title="Patch to Improve Microsoft Office 2000 Functionality"
  subject="Re: Patch to improve Microsoft Office 2000 functionality"
  topic1="Patches"
  archive="http://www.winehq.org/hypermail/wine-devel/2002/01/0477.html"
  posts="5"
  startdate="01/24/02"
  enddate="01/25/02"
>

<p>Jeremy White posted a huge patch to wine-patches to Office
2000 functionality.  He didn't have time to split it up into smaller chunks
or to verify it worked against the current CVS.  He explained:</p>
<quote who="Jeremy White"><p>
    The following large patch substantially improves the
 behaviour of Microsoft Office with Wine.
</p><p>
 Notes:
<ol>
    <li>  Since this is such a signficant patch, I feel it is
 important to say that all of this code is released
 under the terms of the Wine license.
    </li>
    <li>  This applies to Wine as of November 23, 2001.
 I apologize for not submitting smaller patches, but
 we kept not having time to sync this with WineHQ;
 by getting it out now, maybe some other folks will help out &lt;grin&gt;.
    </li>
</ol>
</p>
</quote>

<p>
Duane Clark replied,
<quote who="Duane Clark">
 I'll be happy to sync this to the current CVS, test it out with the apps 
 I have, and chop it up into a series of patches, if no one else wants to 
 take that on.</quote>  Dimitrie Paun decided to take on some of it
explaining, <quote who="Dimitrie Paun">
 I suggest you pass the listview.c chucks over to me. I've just completed a
 major update to the ListView ctrl, and (a) none of the updates in the
 patch will apply, and (b) I have the code fresh in my mind.</quote></p>

<p>Dimitrie is currently working on some common controls stuff so Duane
began splitting it out and sending it to him.  A flurry of patches has
begun arriving on wine-patches.
</p>

</section>





 


<section
  title="New SDL Driver"
  subject="A new SDL back-end we've been toying with"
  topic1="Multimedia"
  archive="http://www.winehq.org/hypermail/wine-devel/2002/01/0519.html"
  posts="10"
  startdate="01/26/02"
  enddate="01/29/02"
>

<p>Gavriel State put out some code TransGaming put together:</p>
<quote who="Gavriel State">
<p>
 We just put this together for some testing, and thought that someone might
 find it handy.  I'm not submitting it to wine-patches, since we haven't
 tested it on the most recent winehq tree, but it should be pretty easy to 
 integrate in.  It's not 100% complete by any means, but it has both GDI
 bitmap and DDraw support.  We can vouch that it runs some of the DDraw 
 samples, but beyond that, who knows.
</p><p>
 That said, the SDL driver should be a useful alternative to the ttydrv 
 for testing purposes.  
</p></quote>

<p>David Elliott replied:</p>
<quote who="David Elliott"><p>
 Very interesting.  I was considering making an RFB (the VNC protocol) 
 backend for Wine for about the same reason.  That is that the only really 
 decent driver is X11 right now since ttydrv is fairly useless.
</p><p>
 Hmm, maybe I should actually do that.  As an added bonus since VNC is just 
 basically a generic framebuffer it would allow a fairly easy port to 
 another generic framebuffer interface such as LinuxFB (or whatever the new 
 hot-shit FB project for Linux is these days).
</p></quote>
<p>Gavriel went on to explain:</p>
<quote who="Gavriel State"><p>
 Well, the sdldrv is a long way from being capable of that kind of thing. 8-)
</p><p>
 The big thing that's missing is a real GDI renderer.  It's great to have
 something that can kind-of do a bitblt, but if you want to have windows
 and menus and such on the screen, a real renderer is needed.  Aside from
 BitBlit-ing, it would need to handle polygons, brushes, pens, clipping, 
 and most painfully, text.  It's possible that some of Huw's recent work
 might help there, but I'm not sure - I think that XRender actually requires
 X...
</p><p>
 Now, the interesting thing is this: Once we have a GDI renderer, we can
 eliminate a *huge* amount of DIBSection cruft from the X11 driver.  Currently
 Wine goes through astounding manipulations to get X to draw things for
 us when we should be doing it ourselves.  This is very slow, and affects 
 more apps than you might think (ie: WordPerfect).
</p><p>
 We actually have a co-op student (Hi Jonathan!) who we've asked to look 
 into this a bit.  He's quite new to Wine, and has some other duties 
 as well, but I'm sure that he would be interested in sharing the work. 8-)
</p></quote>

<p>Having just generic framebuffer support would be a huge step towards
supporting embedded devices.  However, this hasn't been focus by anyone
and likely won't be for a long time.</p>

</section>





 


<section
  title="Versioning as 1.0 Nears"
  subject="Sooo quiet..."
  topic1=""
  archive="http://www.winehq.org/hypermail/wine-devel/2002/01/0545.html"
  posts="15"
  startdate="01/28/02"
  enddate="01/29/02"
>

<p>One topic that comes up from time to time, especially in online 
forums, is Wine's versioning scheme.  Some people complain that
releases named "20020122" mean nothing and wish Wine followed a
format such as .80, etc. leading up towards a 1.0 release.  One of
the arguments in the past has been Wine is in continual development
and rather than making a 0.8 release followed up with
stabler releases it's better to keep adding new features.
This time Dimitrie Paun started it with:</p>
<quote who="Dimitrie Paun"><p>
 ... I feel like starting a flamewar, just to get some
 traffic on this list :)
</p><p>
 Speaking of which, I figured I should rattle Alexandre's cage :)
 So here I go:
</p><p>
 Wine's been around for 8 (_eight_) years (how time flies)! It is my
 understanding that we're approaching the 1.0 status. I say, let's change
 the versioning scheme, just to give the outside world a feeling of
 progress. Really, I think the current scheme kindda hurts us on a PR
 level.
</p><p>
 We can start with something like 0.90.0. This should give us plenty
 numbers to the upcoming 1.0, don't you think?
</p></quote>

<p>Eric Pouech summarized a lot of thoughts with:
<quote who="Eric Pouech"><p>
 IMO, what's important behind version numbers isn't the version in
 itself, but rather:
 <ol>
 <li> the goal you want to reach</li>
 <li>the milestones between where you stand and 1) </li>
 </ol>
 speaking on 1), it's has been discussed a bit before, but no clear
 definition has been put up.
 you can either describe Wine 1.0 in terms of:
 <ul><br />
 a) what should Wine 1.0 do? in other words, which apps to you want
   it to run?<br />
 b) what should Wine 1.0 be able to do? in other words, the functions
   you want to be implemented.<br />
 </ul>
 this functional vs technical controversy isn't new.
</p><p>
 Some folks were more interested in the a) approach. It's what
 TransGaming did (does) with a target on games (as applications). Some
 others may suggest (O|o)ffice applications (it seems CodeWeavers folks
 have been busy on this matter lately ;-)
</p><p>
 Some other (including Alexandre) were more in favor of the technical 
 approach. This would include finishing the major hurdles. IIRC the
 discussion at that time, I think most of them have been removed
<ul>
 <li> address space separation: mostly done (even if some USER issues still
  need to be debugged)</li>
 <li> window management rewrite: still in progress</li>
 <li> TrueType handling: at least done with Huw latest patches and using
  XRender (on Xfree >= 4.0.0)</li>
</ul>
 Alexandre biggest argument at that time was to stabilize the wineserver
 protocol definition, so we could upgrade user's side component in a
 rather stable manner.
</p><p>
 Anyway, on a more pragmatic term, let's see what needs to be done:
 from the a) view:
<ul>
 <li>let most of the installers work. This would require some OLE tweaking.
  TransGaming has part of it, but isn't ready yet for submission</li>
</ul>
</p><p>
 from the b) view:
<ul>
 <li> stabilize the wineserver protocol (there's still a few pending issues
  to be added).</li>
 <li> put up a decent regression test in place (framework AND tests)</li>
 <li> Unicode support (wide, has to be precised a bit)</li>
 <li> finish the window management issues</li>
 <li> let the documentation be in sync with the code</li>
 <li> fix a guzillion bugs</li>
</ul></p></quote>
<p>David Elliott pointed out that if you want to know what's been fixed,
then just read the ChangeLog or check out the Wine CVS archives.  Jeremy
White mentioned:</p>
<quote who="Jeremy White"><p>
 It's funny, I've spent the last two years trying to convince Alexandre
 we should have an 0.9, but now I think I've reversed my original
 opinion and think we should stick with our current scheme until 1.0.
</p><p>
 Also, I think what's most important about 1.0 is not 1.0 itself,
 but it is the promise inherent in 1.1 - that 1.1 will do everything
 1.0 did, and a little more.  To that end, I agree that we should
 finalize the Wine server protocol, and it sure wouldn't hurt
 to have a nice regression system in place as well.
</p></quote>
<p>Alexandre explained:</p>
<quote who="Alexandre Julliard">
<p> Do you want me to commit patches, or do you want a flamewar?  You
 can't have both &lt;g&gt;
</p><p>
 Seriously, it is planned to have a 0.9 version, but I don't want to
 use the name for any random version, otherwise it doesn't mean
 anything more than the current scheme. My plan is to have 0.9 mark the
 point where all the 1.0 features are in place and all that remains is
 bug fixing. Then the 0.9.x series will be a progressive code freeze
 (each release being a little colder than the previous one) converging
 towards 1.0.
</p></quote>
<p>Eric Pouech wondered what was holding up a 0.9 release. Alexandre
replied that inter-process window handling/window management and 
the continuing DLL separation were what was left.</p>
</p>

</section>





 


<section
  title="Window Management Problems with Pajama Sam"
  subject="Pajama Sam's unmanaged window"
  topic1="Patches"
  archive="http://www.winehq.org/hypermail/wine-devel/2002/01/0522.html"
  posts="6"
  startdate="01/27/02"
  enddate="01/28/02"
>

<p>Ori Pessach was having a problem with window management 
in a game:</p>
<quote who="Ori Pessach"><p>
 I spent some time trying to hunt down the window management problems I 
 reported a while ago (dialogs displayed by the game Pajama Sam appearing 
 behind the main window, and sometimes not getting keyboard focus).
</p><p>
 I found that the game's main window simply wasn't managed. The game opens a 
 window that covers the entire screen, and doesn't have a caption. 
 is_window_managed(), in dlls/x11drv/window.c therefore returns FALSE for that 
 window, and (I'm guessing here) since Wine is running in managed mode, it 
 manages that window poorly. Switching desktops in KDE doesn't remove the 
 window from the screen, it's impossible to get any window to display on top 
 of the game window, and in general, several functions in x11drv/winpos.c 
 behave badly when Wine has a mix of managed and unmanaged windows.
</p><p>
 Changing is_window_managed()'s default return value to TRUE makes the game 
 behave much better, but not perfectly. The KDE panel stays on top of the game 
 window - it can be hidden away, but Windows handles this differently, letting 
 the game window obscure the task bar. I'm inclined to call this a KDE 
 problem, rather than a Wine problem. 
</p><p>
 Also, I don't know whether the tests in is_window_managed() cover all the 
 cases in which a window should stay unmanaged. Right now, is_window_managed() 
 tests for child windows and tool windows, and returns FALSE for those 
 windows. Are there any other types of windows that shouldn't be managed?
</p></quote>
<p>Ove K&aring;ven replied with a pointer to a recent patch he submitted
concerning stuff like this.  Ori asked:</p>
<quote who="Ori Pessach"><p>
 Does anybody know how X toolkits display tooltips, popup menus, etc.? I 
 would think that when running managed Wine, all window should be managed, and 
 the distinction should be between decorationless windows and everything else, 
 not managed windows and everything else.
</p><p>
 If nobody else wants to dig into this, I'll probably take a shot at it.
</p></quote>
<p>Ori dug into the problem and reported back the next day:</p>
<quote who="Ori Pessach"><p>
 With three small changes to menu.c, tooltips.c and window.c, things I'm 
 getting much better results with Pajam Sam et al, without getting WM 
 decorations on tooltips and context menus.
</p><p>
 The changes are:
<ul>
 <li> Changed is_window_managed()'s default return value to TRUE</li>
 <li> In tooltips.c, TOOLTIPS_NCCreate(), I set the WS_EX_TOOLWINDOW bit in the 
 tooltip's dwExStyle field. This, I believe, is the right thing to do 
 regardless of WM considerations, since MSDN specifies that tooltip windows 
 have that bit set. 
 (<a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/CommCtls/ToolTip/Styles.asp">
 http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/CommCtls/ToolTip/Styles.asp</a>)
 </li>
 <li> In menu.c, I replaced CreateWindowA() with CreateWindowExA(), passing 
 WS_EX_TOOLWINDOW as the first parameter. I'm not so sure about this one. I 
 don't know whether Windows does this (Win16 surely doesn't), and if it 
 doesn't, it might break apps that examine those bits.</li>
</ul></p><p>
 With these changes, Pajama Sam works correctly, except for the KDE panel 
 problem. I tested another app (WinRAR) for tooltip and context menu behavior, 
 and it worked fine. I'd be happier if somebody else tested this, too, before 
 submitting the patch. If someone with a Windows machine could check the 
 dwExStyle bits on menus somehow, that would be nice. I'll do it myself, as 
 soon as I can get my hands on the necessary software. (Windows, mostly).
</p></quote>

</section>

</kc>
