<?xml version="1.0" ?>
<kc>

<title>Wine Traffic</title>

<author contact="http://www.theshell.com/~vinn">Brian Vincent</author>
<issue num="306" date="02/26/2006" />
<intro> <p>This is the 306th issue of the Wine Weekly News publication.
Its main goal is to sleep on the couch. It also serves to inform you of what's going on around Wine. Wine is an open source implementation of the Windows API on top of X and Unix.  Think of it as a Windows compatibility layer.  Wine does not require Microsoft Windows, as it is a completely alternative implementation consisting of 100% Microsoft-free code, but it can optionally use native system DLLs if they are available.   You can find more info at <a href="http://www.winehq.org">www.winehq.org</a></p> </intro>
<stats posts="273" size="550" contrib="94" multiples="51" lastweek="50">

<person posts="21" size="76" who="stefandoesinger at gmx.at (Stefan D&#246;singer)" />
<person posts="15" size="14" who="julliard at winehq.org (Alexandre Julliard)" />
<person posts="13" size="12" who="dank at kegel.com (Dan Kegel)" />
<person posts="12" size="18" who="rob at codeweavers.com (Robert Shearman)" />
<person posts="11" size="15" who="wine.dev at web.de (Detlef Riekenberg)" />
<person posts="9" size="13" who="hverbeet at gmail.com (H. Verbeet)" />
<person posts="8" size="11" who="thunderbird2k at gmx.net (Roderick Colenbrander)" />
<person posts="6" size="12" who="infyquest at gmail.com (Vijay Kiran Kamuju)" />
<person posts="6" size="10" who="segin2005 at gmail.com (Segin)" />
<person posts="6" size="8" who="mike at codeweavers.com (Mike McCormack)" />
<person posts="5" size="9" who="wine at troy.rollo.name (Troy Rollo)" />
<person posts="5" size="7" who="eric.pouech at wanadoo.fr (Eric Pouech)" />
<person posts="5" size="6" who="wine-devel at kievinfo.com (Vitaliy Margolen)" />
<person posts="5" size="5" who="vapier at gentoo.org (Mike Frysinger)" />
<person posts="5" size="4" who="lav at etersoft.ru (Vitaly Lipatov)" />
<person posts="5" size="3" who="roli8200 at yahoo.de (Roland Kaser)" />
<person posts="4" size="11" who="signman359 at gmail.com (Rich Gilson)" />
<person posts="4" size="7" who="mike.king at pvxplus.com (Michael King)" />
<person posts="6" size="6" who="marcus at jet.franken.de (Marcus Meissner)" />
<person posts="4" size="4" who="truiken at gmail.com (James Hawkins)" />
<person posts="3" size="26" who="stefandoesinger at gmx.at (Stefan =?utf-8?q?D=C3=B6singer?=)" />
<person posts="3" size="14" who="wijn at wanadoo.nl (Rein Klazes)" />
<person posts="3" size="9" who="gladiac.lists at gmail.com (Christian Lachner)" />
<person posts="3" size="7" who="Aric.Cyr at gmail.com (Aric Cyr)" />
<person posts="3" size="7" who="the3dfxdude at gmail.com (Jesse Allen)" />
<person posts="3" size="4" who="phil at newstar.rinet.ru (Phil Krylov)" />
<person posts="3" size="4" who="k04jg02 at kzoo.edu (Joseph Garvin)" />
<person posts="3" size="3" who="tom at dbservice.com (Tomas Carnecky)" />
<person posts="3" size="3" who="twickline at gmail.com (Tom Wickline)" />
<person posts="3" size="3" who="bon at elektron.ikp.physik.tu-darmstadt.de (Uwe Bonnes)" />
<person posts="3" size="3" who="tony.lambregts at gmail.com (Tony Lambregts)" />
<person posts="3" size="3" who="hijinio at yahoo.com (Hiji)" />
<person posts="3" size="2" who="comargo at gmail.com (Cyril Margorin)" />
<person posts="3" size="2" who="chmorgan at gmail.com (Chris Morgan)" />
<person posts="3" size="2" who="mjung at iss.tu-darmstadt.de (Michael Jung)" />
<person posts="2" size="9" who="a_villacis at palosanto.com (=?ISO-8859-1?Q?Alex_Villac=ED=ADs_Lasso?=)" />
<person posts="2" size="8" who="sss at online.de (Olaf Schmidt)" />
<person posts="2" size="8" who="leidola at newcon.de (Olaf Leidinger)" />
<person posts="2" size="6" who="Terry_Higgins at cimmetry.com" />
<person posts="2" size="4" who="speeddymon at gmail.com (Tom Spear (Dustin Booker, Dustin Navea))" />
<person posts="2" size="4" who="dmitry.serpokryl at gmail.com (dmitry serpokryl)" />
<person posts="2" size="3" who="juan_lang at yahoo.com (Juan Lang)" />
<person posts="2" size="3" who="fgouget at free.fr (Francois Gouget)" />
<person posts="2" size="3" who="jonathan at ernstfamily.ch (Jonathan Ernst)" />
<person posts="2" size="3" who="kuba at mareimbrium.org (Kuba Ober)" />
<person posts="2" size="3" who="michael.meeks at novell.com (michael meeks)" />
<person posts="2" size="2" who="p.beutner at gmx.net (Peter Beutner)" />
<person posts="2" size="1" who="dimi at lattica.com (Dimi Paun)" />
<person posts="2" size="1" who="Stefan.Leichter at camLine.com (Stefan Leichter)" />
<person posts="2" size="1" who="exspasticcomics at yahoo.com (hippy hip)" />
<person posts="1" size="21" who="daniel.skorka at stud.uni-karlsruhe.de (Daniel Skorka)" />
<person posts="1" size="12" who="mekaananth at gmail.com (Ananth M)" />
<person posts="1" size="10" who="dj015 at yahoo.com (Damjan Jovanovic)" />
<person posts="1" size="6" who="TWhaymand05 at aol.com" />
<person posts="1" size="6" who="rmiller at auctionpay.com (Ryan Miller)" />
<person posts="1" size="5" who="sdaswani at boalthall.berkeley.edu (Susheel Daswani)" />
<person posts="1" size="4" who="ckane at intellitree.com (Coleman Kane)" />
<person posts="1" size="3" who="frick at sc-networks.de (Christoph Frick)" />
<person posts="1" size="3" who="aia21 at cam.ac.uk (Anton Altaparmakov)" />
<person posts="1" size="2" who="Paul.Vriens at xs4all.nl (Paul Vriens)" />
<person posts="1" size="2" who="frick at sc-networks.com (Christoph Frick)" />
<person posts="1" size="2" who="leiz at ucla.edu (Lei Zhang)" />
<person posts="1" size="2" who="Phil.Lodwick at EFI.COM (Phil Lodwick)" />
<person posts="1" size="2" who="gjwucherpfennig at gmx.net (Gerold J. Wucherpfennig)" />
<person posts="1" size="2" who="rdorsch at web.de (Rainer Dorsch)" />
<person posts="1" size="2" who="paul at astro.gla.ac.uk (Paul Millar)" />
<person posts="1" size="2" who="speeddymon at gmail.com (Tom Spear)" />
<person posts="1" size="1" who="martin-fuchs at gmx.net (Martin Fuchs)" />
<person posts="1" size="1" who="sebastian.schlingmann at web.de (Sebastian Schlingmann)" />
<person posts="1" size="1" who="andi at rhlx01.fht-esslingen.de (Andreas Mohr)" />
<person posts="1" size="1" who="n0dalus+wine at gmail.com (n0dalus)" />
<person posts="1" size="1" who="hat at tesarici.cz (Petr Tesarik)" />
<person posts="1" size="1" who="fgouget at codeweavers.com (Francois Gouget)" />
<person posts="1" size="1" who="roland.kaeser at swissforex.com (Roland Kaeser)" />
<person posts="1" size="1" who="willie at zeitgeistmedia.net (Willie Sippel)" />
<person posts="1" size="1" who="pgr at arcelectronicsinc.com (paul)" />
<person posts="1" size="1" who="jorishuizer at planet.nl (Joris Huizer)" />
<person posts="1" size="1" who="J.A.Gow at furrybubble.co.uk (Dr J A Gow)" />
<person posts="1" size="1" who="christian.gmeiner at students.fh-vorarlberg.ac.at (Christian Gmeiner)" />
<person posts="1" size="1" who="jau at oxit.fi (Jukka A. Ukkonen)" />
<person posts="1" size="1" who="blin at gmx.net (Kai Blin)" />
<person posts="1" size="0" who="jeffl at yless4u.com.au (Jeff Latimer)" />
<person posts="1" size="0" who="jeffl at yless4u.com.au (lats)" />
<person posts="1" size="0" who="molle.bestefich at gmail.com (Molle Bestefich)" />
<person posts="1" size="0" who="most at museresearch.com (Michael Ost)" />
<person posts="1" size="0" who="alleykat at gmail.com (Travis Watkins)" />
<person posts="1" size="0" who="h.davies1 at physics.ox.ac.uk (Huw D M Davies)" />
<person posts="1" size="0" who="rolf.kalbermatter at citeng.com (Rolf Kalbermatter)" />
<person posts="1" size="0" who="alex at thehandofagony.com (=?UTF-8?B?IkFsZXhhbmRlciBOLiBTw7hybmVzIg==?=)" />
<person posts="1" size="0" who="dmitry at codeweavers.com (Dmitry Timoshkov)" />
<person posts="1" size="0" who="paul.vriens at xs4all.nl (Paul Vriens)" />
<person posts="1" size="0" who="lats at yless4u.com.au (Jeff L)" />

</stats>
<section 
	title="News: Google &amp; Wine, v0.9.8"
	subject="News"
	archive="http://www.desktoplinux.com/news/NS9556554213.html"
	posts="2"
>
<topic>News</topic>
<p>DesktopLinux.com  
<a href="http://www.desktoplinux.com/news/NS9556554213.html">broke a story</a> 
last week that Google will be working with CodeWeavers to get Picasa working
under Linux.  It was followed by reports in 
<a href="http://www.pcmag.com/article2/0,1895,1926510,00.asp">PC Magazine</a>
and <a href="http://www.techspot.com/news/20454-googles-picasa-under-linux-will-use-wine.html">TechSpot</a>, 
though they simply copied the other article.  If you haven't used 
<a href="http://picasa.google.com/">Picasa</a>, I'd recommend downloading
it and trying it with Wine.  It actually works really well out of the box
and it's a great little program.  Personally, I still prefer something like
<a href="http://www.gnome.org/gnome-office/eog.shtml">EoG</a> for simple 
image viewing but Picasa really has a lot more features.  Given how well it
runs with Wine, it's not a stretch that CodeWeavers would consider
working on it.</p><p>
What's not clear is whether this is going to be a Winelib or Wine 
application.  I suspect it's going to be a straight up Windows application
with possibly a Winelib library or two for some native integration.  For
example, one of the features of Picasa is hooking into mail clients.  On
Linux it would be something that could be done differently with a native
library.  Otherwise, 99% of the program will be the same.  CodeWeavers 
will likely customize CrossOver Office to sit behind the scenes and do
all the Wine magic.  </p><p>
Now, could someone please get them to get 
<a href="http://earth.google.com/">Google Earth</a> working?  </p>

<p>In other news, Wine 0.9.8 came out.  Apparently a fix for Photoshop is
in there which seemed to make a lot of people happy.  Alexandre noted
the following changes:</p>
<quote who="Alexandre Julliard"><p>
<ul>
 <li>Better Web browser support.</li>
 <li>Beginnings of a Wordpad application.</li>
 <li>Many richedit improvements.</li>
 <li>A number of Direct3D fixes.</li>

 <li>A few more options in winecfg.</li></ul></p></quote>

<p>Go forth and <a href="http://www.winehq.com/download">download</a>.</p>
<p>Finally, I'd like to point out that Zack Brown's 
<a href="http://www.kerneltraffic.org">Kernel Traffic</a> site is on
hiatus.  While Zack will continue to post these as I write them, there's
always a chance his site will go offline.  If so, keep in mind that you
can continue to find them on <a href="http://www.winehq.org">WineHQ</a>.</p>

</section>
<section 
	title="D3D8 Changes"
	subject="Resubmit D3D8 Surface -&gt; WineD3D"
	archive="http://www.winehq.com/pipermail/wine-patches/2006-February/024356.html"
	posts="5"
>
<topic>DirectX</topic>
<p>Roderick Colenbrander has picked up the Direct3D flag and continued
some work done by Oliver Stieber.  The changes at hand involve adapting
Wine's Direct3D version 8 code to use the new wined3d layer that Wine's
D3D version 9 code uses.  There hasn't been a lot of discussion on 
wine-devel about it, but Roderick's patches have contained some excellent
descriptions of the changes going on.  If you notice some Direct3D 8
games behaving differently, it's because of this work.  I'll just
include Roderick's description of each patch to give you a feel for
where this is headed.</p>

<p>Patch #1: WineD3D CopyRects</p>
<quote who="Roderick Colenbrander"><p>
This patch is based on Oliver Stieber's D3D8->WineD3D work and adds the 
CopyRects method required by D3D8 to WineD3D.
</p></quote>

<p>Patch #2: Surfaces</p>
<quote who="Roderick Colenbrander"><p>

This is the first part of a 1700 line patch (based on Oliver Stieber's
d3d8 work) which moves big portions of the D3D8 surface code over to
WineD3D.
</p><p>
It moves the d3d8 surface 
structure over to wined3d. As moving all code over in one step to wined3d is 
not a good idea the old d3d8 code had to be made compatible with the new 
structure. This change required me to import some structures from the 
wined3d_private.h header until the move is over (the wined3d header can't be 
included by d3d8 as it conflicts with d3d8_private.h). Further some pieces of 
surface code were moved over to wined3d.
</p></quote>

<p>Patch #3: Textures</p>
<quote who="Roderick Colenbrander"><p>
This patch (based on Oliver Stieber's d3d8 code) moves d3d8's texturing code 
over to WineD3D. The patch adds new datatypes, replaces a few texture 
creation calls with wined3d code and updates code to work with the new 
datatypes. Unfortunately the patch is quite big because there's one texture 
base type of which all other texture types are instances.
</p></quote>

<p>Patch #4: Capabilities</p>
<quote who="Roderick Colenbrander"><p>
Both our d3d8 and wined3d dlls contain a routine which detects the 
capabilities of the videocard as advertised by the OpenGL driver. Right now 
various parts of D3D8 have been moved over to WineD3D. Various pieces of the 
code ported to WineD3D use these capabilities. Right now D3D8 contains a list
with capabilities but doesn't share it with WineD3D. Because of this some 
pieces of code failed, for instance wined3d's surface code for which I posted a 
workaround last week.
</p><p>
This patch moves the capability detection code over to WineD3D and lets the 
few existing parts which need the capabilities use the WineD3D capability 
structure (gl_info). This info structure contains next to 'flags' inidicating 
certain features also all GL/GLX functions pointers. Because D3D8 moves over 
to the wined3d gl_info structure all the gl prototypes in d3dcore_gl.h were 
unneeded and removed.
</p></quote>

<p>Patch #5: Everything Else</p>
<quote who="Roderick Colenbrander"><p>

The past few weeks I have been trying to split Oliver Stieber's d3d8 patches in 
small pieces. The patches I sent so far moved big parts of the surface, 
texture and capability detection code over to wined3d (roughly 1/3th of the 
total patch) These parts could safely be moved as they didn't depend on much 
other d3d8/wined3d functionality. The remaining texture, shader, primitive 
drawing code depends on stateblocks and swapchains which haven't been ported 
over yet. If I would move over for instance the remaining texture code the 
stateblock/swapchain code needs to moved too. The current d3d8 shader code 
would need to be made compatible with the wined3d stateblocks (which isn't 
possible because various datatypes in the stateblock changed; the wined3d 
stateblock uses incompatible wined3d datatypes which the shader code doesn't 
understand)
</p><p>
Other parts of the d3d8 code have similar issues, so they all depend on the 
stateblock/swapchain code. The only option is to move all this code at once. 
I talked with H. Verbeet and others and they thought that separating is 
nearly impossible too. (splitting would create too many new bugs and not 
everything is moveable)
</p><p>
The patch which I attached to this email removes the remaning d3d8 code over 
to WineD3D. (based on Oliver Stieber's code) The file d3d8.patch.bz2 makes 
changes to the current d3d8 code and also makes a few changes to wined3d in 
order to let wined3d create various objects for d3d8. The other two files 
need to be added to the d3d8 directory and replace the current shader code. 
As you will notice in the Makefile.in various d3d8 files aren't used anymore 
a next patch will clean up the d3d8_private.h file and remove the unneeded .c 
files.
</p></quote>
<p>That's a lot of changes!  Roderick has more issues to sort out, but
patches continue to roll in.</p>

</section>
<section 
	title="Current State of Lotus Notes"
	subject="wine-0.9.8 and Lotus Notes 6.5.1"
	archive="http://www.winehq.com/pipermail/wine-devel/2006-February/045089.html"
	posts="1"
>
<topic>Status Updates</topic>
<p>Lotus Notes is a popular application that folks like to run with Wine.
It's worked well for years and CodeWeavers supports it in CrossOver Office.
From time to time regressions happen, but it seems to be one application
where we hear about such things.  Rainer Dorsch dropped a note this week
to let everyone know how well things are working with the latest release:</p>
<quote who="Rainer Dorsch"><p>

Just wanted to report my wine experience with Lotus Notes 6.5.1:

I've run Lotus Notes with wine for a long time. What I notice with wine-0.9.8 
(though this was present in a few releases before but not in all releases):
<ul>
<li> Wine is noticeably faster than the snapshot 200412xx</li>
<li> I need to select win98 to get the file select box working</li>
<li> I need to set WINEDLLOVERRIDES="usp10=n"</li>
<li> Cut and paste between X and wine applications works only when selecting the 
appropriate entry in KDE's klipper. Previously, that worked transparently, 
when specifying "UsePrimary" = "1" in the [Clipboard] config stanza</li>
<li> The file select box shows for folders the symbol of files, e.g.</li>
</ul></p></quote>

</section>
<section 
	title="--rpath"
	subject="Alexandre Julliard : configure: Use --rpath if supported when building binaries to point to"
	archive="http://www.winehq.com/pipermail/wine-devel/2006-February/045133.html"
	posts="6"
>
<topic>Build Process</topic>
<p>Being able to relocate a Wine installation has been on the to-do list
for a long time.  It would be nice to just move the entire /usr/local/lib/wine
and associated programs without breaking anything.  Well, apparently this
week that fix finally made it in.  Alexandre committed a change with the
following note:</p>
<quote who="Alexandre Julliard"><p>

configure: Use <tt>--rpath</tt> if supported when building binaries to point to
the relative location of the wine libraries. 
</p></quote>

<p>That prompted Vitaly Lipatov of the ALT Linux team to ask for another
option,
<quote who="Vitaly Lipatov">
We need a <tt>--disable-rpath</tt> option in configure for rpath disable.
Rpaths is not useful  when WINE building for distribution.
Will I add <tt>--disable-rpath</tt> of there is a better suggestion?
</quote></p>

<p>Alexandre wanted to know why it wouldn't be useful and Vitaly answered:</p>
<quote who="Vitaly Lipatov"><p>
It is only useful when we run wine from the source tree.
</p><p>
There is no need for rpath if libwine is placed in a standard 
place such as /usr/lib
</p><p>
I got follow broken requires when build rpm package:
</p><p>
/usr/bin/../lib/libwine.so.1(WINE_1.0)
/usr/bin/../lib/libwine_unicode.so.1(WINE_1.0)
</p></quote>

<p>Alexandre explained a workaround:</p>
<quote who="Alexandre Julliard"><p>


It sounds like rpm needs a good whack on the head if it is unable to
cope with this. Anyway, you could always build with make LDEXERPATH="".
</p></quote>

<p>That worked for Vitaly.</p>

</section>
<section 
	title="Updated getwinegit.sh"
	subject="getwinegit.sh 0.2"
	archive="http://www.winehq.com/pipermail/wine-devel/2006-February/045004.html"
	posts="1"
>
<topic>Utilities</topic>
<p>Want an easy way to download and compile Wine from the git repository?
Christian Lachner updated his getwinegit.sh script:</p>
<quote who="Christian Lachner"><p>
I decided to make this release a bit more complete than the other ones
i did before. Bugfree (i hope ;)) and with readme. current version is
0.2.
</p><p>
This is the readme's content:</p>

<p><u>Intro</u></p><p>
getwinegit is a script which was designed to download/update, compile
and install the current wine-git-source-tree.</p>

<p><u>Usage</u></p><p>
Usage: <code>/usr/bin/getwinegit.sh -&lt;<i>mode</i>&gt;</code>
</p><p>
modes:
<ul>
 -0   update the local source-tree<br />
 -1   + compile the source<br />
 -2   + install<br />
 -3   no update; just compile the local source-tree and install<br />

 -h   help ;)</ul></p>

<p><u>Install</u></p><p>
Just copy getwinegit.sh wherever you want, make it executable and
create a softlink at /usr/bin. Then (or before) configure the script
by editing the variables in the head with your favourite editor.
(minimum is to set ENABLE="yes")</p>

<p><u>Changes</u></p><p>
0.2		first stable release.</p>

<p><u>Future?</u></p><p>
Tell me what you need and i will implement it... maybe :D
</p></quote>

<p>You can find the script <a href="http://www.winehq.com/pipermail/wine-devel/2006-February/045004.html">attached</a> to his announcement email.
</p>
</section>
<section 
	title="Fixing Memory Layout Issues"
	subject="Possibly crazy idea to deal with memory layout problems once and for all"
	archive="http://www.winehq.com/pipermail/wine-devel/2006-February/044979.html"
	posts="7"
>
<topic>Memory Management</topic>
<p>Troy Rollo ran into a problem with Wine and memory management.  He
thought of a crazy way to deal with it and asked for some input:</p>
<quote who="Troy Rollo"><p>
I have been looking at a problem that has arisen in recent versions, 
particularly when using some D3D games, in which the virtual address space 
above TASK_UNMAPPED_BASE becomes fragmented to the extent that eventually you 
get an out of memory condition, even though you still have well over a 
gigabyte free (even in a contiguous block!). This has led to some people 
using the 
<a href="http://www.winehq.org/pipermail/wine-devel/attachments/20060218/1b0f68bc/mmap.patch">attached</a>
 hack (first attachment) to get their D3D games to work.
</p><p>
After considering a lot of approaches to this problem that did not seem to get 
anywhere productive, it seemed that the only way to resolve it would be to 
get in between the application and any libraries, and the kernel. The 
solution I came up with is somewhat rude, but if we assume that any libraries 
that Wine uses only call mmap() and associated calls via the C library, then 
it may well do the trick, plus make it possible to implement other virtual 
memory APIs more effectively (and in a couple of cases eliminate calls to 
wineserver).
</p><p>
If wine_preloader were extended to have its own implementation of all the 
friends of mmap(), and to have its own implementation of the dynamic linker, 
then in principle it could make sure only its mmap (and not the C library's) 
is called. An even more aggressive approach might be to load the C library 
and stick jumps into its mmap that redirect to the preloader's versions. The 
preloader's mmap would keep track of mappings on its own and when it receives 
an mmap with a start address of "NULL", decides on its own what base address 
to use.</p></quote>

<p>Dan Kegel didn't think it was enough:</p>
<quote who="Dan Kegel"><p>


You can override mmap() in wine by just changing all
the places it's called.  (Having control over the source is
a wonderful thing.)  But if you want mmap to behave
truly differently, you'd probably need to change the
kernel.
</p><p>
I seem to recall somebody was working on a linux
kernel module for wine that just dealt with
program loading, but I can't recall who.
Perhaps he'll surface and comment on this.</p></quote>

<p>Mike McCormack followed up Dan's email with:</p>
<quote who="Mike McCormack"><p>


You can do that easily after glibc has loaded, but you won't know where 
glibc itself was loaded into the address space.
</p><p>
I discussed something like what Troy proposed with Vitaliy on IRC, but 
with the preloader looking up and overriding the mmap/munmap symbols in 
glibc.  That would hopefully give Wine control over most mmaps and 
munmaps, possible save us from having to reserve memory in the 
preloader, and allow more control of the address space.
</p><p>
It has a few problems though.  Firstly, we'd miss mmaps done with system 
calls.  Secondly, we'd have to make assumptions about what areas of 
memory the kernel would let us map, and what areas of memory were 
already used in the address map.
</p><p>
I had a go at creating a kernel based PE loader for Linux 2.6 by forward 
porting parts of David Howell's Wine kernel module.  It currently 
compiles, but that's about all.
</p><p>
Haven't had much time to spend on it lately, because I've been busy with 
work.
</p></quote>


</section>
<section 
	title="Sponsored Development"
	subject="Guitar Rig 2 in Linux/Wine"
	archive="http://www.winehq.com/pipermail/wine-devel/2006-February/045095.html"
	posts="3"
>
<p>Michael Ost with Muse Research asked if anyone was interested in doing
some development:</p>
<quote who="Michael Ost"><p>
We are interested in getting the new Guitar Rig 2 USB foot controller
supported in Linux/Wine. It's described here:
</p><p>
<ul><a href="http://www.native-instruments.com/index.php?id=guitarrig2_us">
http://www.native-instruments.com/index.php?id=guitarrig2_us</a></ul></p><p>

I assume from looking at it, that a USB driver would be required and
then perhaps some Wine tweaks to let the plugin open the USB driver.
</p><p>
Anyone interested in taking this on? We are hoping to do this as a trade
--- like you do this work and get a Receptor and/or some VST plugins for
your time.
</p><p>
BTW, we also have a job opening, posted here:

<ul><a href="http://www.craigslist.org/pen/sof/132110028.html">
http://www.craigslist.org/pen/sof/132110028.html</a></ul></p></quote>

<p>Michael then replied a few days later to let everyone know someone was
going to work on it:</p>
<quote who="Michael Ost"><p>

A guy from the linux-audio developers mailing list named Brian Sturk
replied and is interested in doing the work. He should be fine with the
linux driver side, but pointers in the Wine part of the project might be
useful. 
</p><p>
For now, I am assuming that the work would be open source and integrated
into linux and wine in the normal way. I believe the company will be
cooperative.</p></quote>

<p>One interesting thing here is that more work might be done to support
USB devices.  </p>
</section></kc>
