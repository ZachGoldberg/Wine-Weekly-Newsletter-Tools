<?xml version="1.0" ?>
<kc>

<title>Wine Traffic</title>

<author contact="http://www.theshell.com/~vinn">Brian Vincent</author>
<issue num="330" date="04/30/2007" />
<intro> <p>This is the 330th issue of the Wine Weekly News publication.
Its main goal is to buy a house. It also serves to inform you of what's going on around Wine. Wine is an open source implementation of the Windows API on top of X and Unix.  Think of it as a Windows compatibility layer.  Wine does not require Microsoft Windows, as it is a completely alternative implementation consisting of 100% Microsoft-free code, but it can optionally use native system DLLs if they are available.   You can find more info at <a href="http://www.winehq.org">www.winehq.org</a></p> </intro>
<stats posts="360" size="765" contrib="92" multiples="56" lastweek="43">

<person posts="35" size="88" who="speeddymon at gmail.com (Tom Spear)" />
<person posts="23" size="25" who="truiken at gmail.com (James Hawkins)" />
<person posts="20" size="17" who="dank at kegel.com (Dan Kegel)" />
<person posts="16" size="25" who="lich at math.spbu.ru (Kirill K. Smirnov)" />
<person posts="13" size="14" who="julliard at winehq.org (Alexandre Julliard)" />
<person posts="12" size="14" who="dmitry at codeweavers.com (Dmitry Timoshkov)" />
<person posts="11" size="45" who="kai.blin at gmail.com (Kai Blin)" />
<person posts="11" size="16" who="js at h3c.de (Jonathan Schleifer)" />
<person posts="10" size="13" who="wine-devel at kievinfo.com (Vitaliy Margolen)" />
<person posts="9" size="8" who="rob at codeweavers.com (Robert Shearman)" />
<person posts="20" size="81" who="stefandoesinger at gmx.at (Stefan D&#246;singer)" />
<person posts="8" size="8" who="hverbeet at gmail.com (H. Verbeet)" />
<person posts="7" size="16" who="eric.pouech at wanadoo.fr (Eric Pouech)" />
<person posts="7" size="5" who="wine.dev at web.de (Detlef Riekenberg)" />
<person posts="6" size="14" who="nlaw at nildram.co.uk (Nick Law)" />
<person posts="6" size="10" who="p.beutner at gmx.net (Peter Beutner)" />
<person posts="6" size="7" who="m.b.lankhorst at gmail.com (Maarten Lankhorst)" />
<person posts="5" size="10" who="paul.vriens.wine at gmail.com (Paul Vriens)" />
<person posts="5" size="7" who="yuvalfl at gmail.com (Yuval Fledel)" />
<person posts="5" size="5" who="laurent at vromman.org (Laurent Vromman)" />
<person posts="5" size="4" who="scott at open-vote.org (Scott Ritchie)" />
<person posts="4" size="11" who="Stefan.Leichter at camline.com (Stefan Leichter)" />
<person posts="4" size="10" who="ead1234 at hotmail.com (EA Durbin)" />
<person posts="4" size="4" who="sol11x86 at comcast.net" />
<person posts="6" size="5" who="meissner at suse.de (Marcus Meissner)" />
<person posts="3" size="98" who="fgouget at free.fr (Francois Gouget)" />
<person posts="3" size="14" who="us at edmeades.me.uk (Ann &amp; Jason Edmeades)" />
<person posts="3" size="13" who="sh at sourcecode.de (Stephan Hermann)" />
<person posts="3" size="7" who="thunder.m at czela.net (Mirek)" />
<person posts="3" size="7" who="stefan.munz at itomig.de (Stefan Munz)" />
<person posts="3" size="7" who="billmedland at shaw.ca (Bill Medland)" />
<person posts="3" size="6" who="huw at codeweavers.com (Huw Davies)" />
<person posts="3" size="4" who="infyquest at gmail.com (Vijay Kiran Kamuju)" />
<person posts="3" size="3" who="winehacker at gmail.com (Steven Edwards)" />
<person posts="3" size="3" who="auronsrv at gmx.net (Briareos)" />
<person posts="3" size="3" who="r.kalbermatter at hccnet.nl (Rolf Kalbermatter)" />
<person posts="3" size="3" who="twickline at gmail.com (Tom Wickline)" />
<person posts="3" size="3" who="ben at atomnet.co.uk (Ben Hodgetts)" />
<person posts="3" size="2" who="saulius2 at ar.fi.lt (Saulius Krasuckas)" />
<person posts="2" size="19" who="vit.hrachovy at sandbox.cz (Vit Hrachovy)" />
<person posts="2" size="6" who="frick at sc-networks.de (Christoph Frick)" />
<person posts="2" size="4" who="sol11x86 at comcast.net (Ben Taylor)" />
<person posts="2" size="3" who="dsh at linux.ucla.edu (Dan Hipschman)" />
<person posts="2" size="2" who="tony.lambregts at gmail.com (Tony Lambregts)" />
<person posts="2" size="2" who="thestig at google.com (Lei Zhang)" />
<person posts="2" size="2" who="Andrew.Talbot at talbotville.com (Andrew Talbot)" />
<person posts="2" size="2" who="andrewz at springsrescuemission.org (Andrew Ziem)" />
<person posts="2" size="2" who="jan.wine at zerebecki.de (Jan Zerebecki)" />
<person posts="2" size="2" who="alisson.gomesc at gmail.com (Alisson Gomes)" />
<person posts="2" size="1" who="juan_lang at yahoo.com (Juan Lang)" />
<person posts="2" size="1" who="mk144210 at bcm.edu (Misha Koshelev)" />
<person posts="2" size="1" who="lats at yless4u.com.au (Jeff L)" />
<person posts="1" size="5" who="jrliggett at cox.net (James Liggett)" />
<person posts="1" size="3" who="mihalw at gmail.com (=?ISO-8859-2?Q?=22Micha=B3_W=2E=22?=)" />
<person posts="1" size="3" who="pdherbemont at free.fr (Pierre d'Herbemont)" />
<person posts="1" size="2" who="c-d.hailfinger.devel.2006 at gmx.net (Carl-Daniel Hailfinger)" />
<person posts="1" size="2" who="rfairlie at kylebank.com (Robert Fairlie)" />
<person posts="1" size="2" who="titan.costa at wanadoo.fr (Christian Costa)" />
<person posts="1" size="2" who="the3dfxdude at gmail.com (Jesse Allen)" />
<person posts="1" size="2" who="jaka at kubje.org (=?UTF-8?B?SmFrYSBKYW7EjWFy?=)" />
<person posts="1" size="2" who="awaite2 at uiuc.edu (Alex Waite)" />
<person posts="1" size="1" who="alex at thehandofagony.com (Alexander Nicolaysen Sornes" />
<person posts="1" size="1" who="WrightA at AIB.EDU (Wright, Ann)" />
<person posts="1" size="1" who="Stefan.Leichter at camLine.com (Stefan Leichter)" />
<person posts="1" size="1" who="prahal at yahoo.com (Alban Browaeys)" />
<person posts="1" size="1" who="jwhite at winehq.org (Jeremy White)" />
<person posts="1" size="1" who="spencercw at googlemail.com (Chris Spencer)" />
<person posts="1" size="1" who="aric at codeweavers.com (Aric Stewart)" />
<person posts="1" size="1" who="bobl at optusnet.com.au (Robert Lunnon)" />
<person posts="1" size="1" who="marco at mandrivaclub.nl (marco)" />
<person posts="1" size="1" who="mounir.idrassi at idrix.fr" />
<person posts="1" size="1" who="ivg231 at gmail.com (Ivan Gyurdiev)" />
<person posts="1" size="0" who="xerox_xerox2000 at yahoo.co.uk (Louis Lenders)" />
<person posts="1" size="0" who="David.Adam at math.cnrs.fr" />
<person posts="1" size="0" who="inckie at gmail.com (Pedro Araujo Chaves Jr.)" />
<person posts="1" size="0" who="dimi at lattica.com (Dimi Paun)" />
<person posts="1" size="0" who="arab at szluug.org (Wojciech 'arab' Arabczyk)" />
<person posts="1" size="0" who="frank.richter at gmail.com (Frank Richter)" />
<person posts="1" size="0" who="mounir.idrassi at idrix.Fr" />
<person posts="1" size="0" who="jonathan at ernstfamily.ch (Jonathan Ernst)" />
<person posts="1" size="0" who="vbudovski at gmail.com (Vitaly Budovski)" />
<person posts="1" size="0" who="hans at it.vu.nl (Hans Leidekker)" />
<person posts="1" size="0" who="dank06 at kegel.com (Dan Kegel)" />
<person posts="1" size="0" who="markus.amsler at oribi.org (Markus Amsler)" />
<person posts="1" size="0" who="jacek at codeweavers.com (Jacek Caban)" />

</stats>
<section 
	title="News: Wine 0.9.36"
	subject="News"
	archive="http://www.winehq.com/pipermail/wine-devel/2007-February/.html"
	posts="2"
>
<topic>News</topic>
<p>Wine 0.9.36 came out on Friday.  Alexandre noted the following changes:
</p><quote who="Alexandre Julliard"><p>
<ul>
<li> Midi support in the CoreAudio driver.</li>
<li> Mixer support in the Alsa driver.</li>
<li> A lot of MSI fixes.</li>
<li> Implementation for most D3DRM functions.</li>
<li> The usual assortment of Direct3D fixes.</li>
</ul>

</p></quote>

<p>
<a href="http://yui.mine.nu/berry/">Berry Linux</a> is the latest distro to 
ship with Wine.  It features a core based on Fedora and Knoppix, a 3D enabled 
desktop, and a Japanese edition.  </p>

<p>Also, this is one of those odd weeks with some threads
that are almost worth covering.  You could translate that to mean I'm
too lazy to cover them because they didn't quite interest me.  At the
top of the list is a discussion of using the 
<a href="http://www.winehq.com/pipermail/wine-devel/2007-April/056173.html">Intel compiler</a> with Wine.
Previously this was known not to work because of some calling conventions
in icc, but apparently this seems better because Jonathan Schleifer got
Windows binaries to run.  Next up, a private company used Wine
<a href="http://www.winehq.com/pipermail/wine-devel/2007-April/056340.html">internally</a>
for a custom port and there were some questions related to that.  Finally,
Stefan D&#246;singer asked a question about 
whether Direct3D 
<a href="http://www.winehq.com/pipermail/wine-devel/2007-April/056377.html">features supported in software</a>
should be reported as things Wine is capable of rendering.  (The end result
of that one was it should be configurable via a registry setting since 
sometimes it will allow a game to run that otherwise couldn't.)  Follow those
links for more details.</p>


</section>
<section 
	title="ALSA Changes"
	subject="ALSA Changes"
	archive="http://code.google.com/soc/wine/appinfo.html?csaid=1804A40297BFD0B2"
	posts="6"
>
<topic>SoC 2007</topic>
<p>
 Last week Google 
<a href="http://code.google.com/soc/wine/about.html">announced</a> the Summer 
of Code projects for 2007.  On the list you'll find Maarten Lankhorst's 
project to <i>Improve sound in Wine</i>.  Basically that means beating the
ALSA driver into shape.  Maarten wrote a pretty good description of exactly
what he wants to do:</p>
<quote who="Maarten Lankhorst"><p>
In Linux, the most used sound backend for Wine is OSS, this is years obsoleted 
and doesn't work well with modern Linux systems. This is one of the weak sides 
of Wine, and I want to propose to improve the ALSA sound backend to be as 
good a backend as OSS, or if possible an even better backend.
</p><p>
This requires changes in the DirectSound emulation code, and in the winealsa 
driver. I have played around with it before, but as far as I can tell a lot of 
things need to be changed in the dsound and winealsa code:
<ul>
<li> DirectSound doesn't have proper support for secondary buffers at driver 
level. None of the Wine drivers needed it before, but the directsound software 
mixer works horrible, I'll try to get that working as well as fallback, but the 
mixing should really be done in alsa code if possible.
</li>
<li> Locking and Unlocking buffers in directsound doesn't forward to secondary 
buffers when needed.  This is very important for secondary buffers in alsa, 
as I want to use it for making sound run properly, hopefully it will work.
</li>
<li> Limitation of alsa: buffer size cannot be arbitrarily big, a workaround is 
needed, most likely buffer emulation in winealsa.  This is tricky, as it means 
writing from 1 bigger buffer into a smaller buffer, since we can assume that 
in those cases the buffer is big enough that a buffer underflow doesn't 
happen, it means that we can run a timer that fills the buffer.
</li>
<li> Winealsa currently doesn't have support for AUX and mixer controls.
This is needed to manipulate the mixer the same way as it's manipulated under 
windows and Wine, I don't think it's hard to accomplish but it's worth it for 
applications that play around with volume controls.
</li>
<li> Remove the separate thread used in winealsa, rework the code so it's not 
needed any more.  The current thread only causes stuttering of audio, it's 
better to remove it entirely by using alsa lock and unlock calls, which notify 
that there is some sound that can be played. Alsa then takes care of the 
playing etc so we wouldn't have to handle it.
</li>
<li> Implement dscapture for winealsa.   Sound capture code in alsa currently 
only exists for wave in, and not for directsound, this means that applications 
that use dscapture use a lot of cpu to get it working, applications like 
counter strike source take a deep performance hit from it.
</li>
<li> (Most importantly) Make ALSA run so well, people wouldn't want to use OSS 
driver any more.   No explanation needed.  If this is true, ALSA can become 
the standard driver in Wine (instead of OSS)
</li></ul></p>
<p><u>Why?</u></p><p>
The direct3d code in Wine is getting better and better with each release, games 
work better and better, but for sound in those games people still use OSS or 
a badly working ALSA driver. I want to play games on my Linux system and not have to 
close all other applications to get proper sound, since OSS wants to have 
exclusive access to sound.
</p></quote>

<p>This is an area in sore need of attention.  There's a lot of reasons
why it gets complicated, but the biggest is probably that sound is so
sensitive to delay.  If your display doesn't quite refresh for a second
most people barely notice.  If sound blips out for a second 
people start complaining.  Maarten began generating patches last week
and most of it was committed.  Here's description of the big ones committed
this week:
</p><quote who="Maarten Lankhorst"><p>
<ul>
<li>Implement opening/closing and caps of device</li>
<li>Introduce mixer code</li>
<li>Implement mixer controls, and add GetLineInfo</li>
<li>Implement GetLineControls in mixer</li>
<li>Implement Get/SetControlDetails in mixer</li>
</ul>
</p></quote>

<p>How substantial is all that?  Well, all total it's 1,533 lines of code. 
From the sounds of it, we're just seeing the tip of the iceberg.</p>

<p>In other sound news, Emmanuel Maillard dropped a 400 line patch that
implements initial MIDI support on Mac OS X.</p>
</section>
<section 
	title="Winscard Support"
	subject="Winscard support (for smart cards)"
	archive="http://www.winehq.com/pipermail/wine-devel/2007-April/056312.html"
	posts="14"
>
<topic>Integration</topic>
<p>Every once in a while a patch will appear out of the blue with some new
functionality for Wine.  Such is the case with an email that appeared
from Mounir Idrassi:</p>
<quote who="Mounir Idrassi"><p>
We have noticed that wine doesn't have the winscard dll responsible for the
support of smart cards under windows. For the need of one of our projects, we
are currently developing this dll for wine under Linux based on the pcsc-lite
library. Once done, we'll share it with the community. However, we would like
to know the reason behind the lack of winscard support. Is it simply because
no one needed it before or maybe there is an issue with the pcsc-lite license?
Thanks in advance for your information.
</p></quote>

<p>A few people replied that it wasn't done because no one had taken the
time to write the implementation.  Mounir replied that they were quite far
along in writing it.  Some folks would have rather seen a release early/release
often approach, but it didn't appear that was going to be the case.  Mounir
replied a few days later with a 2800 line patch:</p>
<quote who="Mounir Idrassi"><p>
We have managed to integrate our winscard source code into the wine source tree, including the configure.ac and Makefile.in files.
As described in the developer's guide, I am attaching with this email the output of the command "git format-patch origin".
Can someone please check if I have done it the right way? If this is ok, should I post it also to the patches mailing list.
For your information, our implementation uses pcsc-lite through wine_dlopen and wine_dlsym, so pcsc-lite is not required at compile time.
</p><p>
We have not included test files as they include the use of smart cards with 
proprietary applications.
I will try in the near future to include a wine implementation of a graphical 
tool that can manipulate smart cards using the wine winscard dll.
</p></quote>

<p>Kai Blin gave up trying to review such a large patch, but Eric Pouech
had some constructive commments to add (nearly all of which get echoed
the first time anyone starts developing Wine):</p>
<quote who="Kai Blin"><p>
From a cursory look, it looks to be a very good start !!!
</p><p>
A couple of comments though:
<ul>
<li> some functions are declared (), they should be (void) (it's C, not C++)</li>
<li> wstrlen already exists: it's strlenW (even if we don't check for NULL
strings)</li>
<li> don't use malloc/free but rather HeapAllocate... in windows, malloc
boils down to HeapAllocate through msvcrt, but in Wine it uses the glibc
one, which is not what you want</li>
<li> ConvertListToANSI: IMO, after computing the final length, only a
single call to MultiByteToWideChar is necessary (it will convert the
whole area)</li>
<li> ditto for ConvertListToWideChar</li>
<li> headers:
   <ul>
   <li> the rule for including new headers in Wine is really to have them
fully retyped... looking at the comments in the file, it looks to me you
mostly copied the existing headers and their comments as well</li>
   <li> some types are not the correct ones (at least on my latest SDK) =>
e.g. you use long for SCARDCONTEXT whereas it's defined as a ULONG_PTR
(it will not correctly work when compiling on a 64bit machine) (I'm not
saying that your code must be 64 compliant at first, but the headers
must be)</li></ul></li>
<li> spec file: don't define an entry point if you don't absolutely need it 
  (most of them should still be stubs)</li>
<li> you still use C++ comments, whereas Wine only allows C comments</li>
</ul>
</p><p>
from the inclusion into Wine, it's already way too big to be included in
a single operation. So, you should split up your work in smaller pieces.
For example:
<ul>
<li> patch #1-3: new header files</li>
<li> patch #4: bare DLL infrastructure (mostly .spec file (only stubs),
Makefile.in and .c file with DllMain, configure.ac)</li>
<li> patch #5: a small set of functions XXX (c file, modified .spec file)</li>
<li> patch #6: a small set of functions YYY (c file, modified .spec file)</li>
</ul></p><p>
It would be also interesting to think about having several C files for
the DLL (given the number of APIs to implement)
</p><p>
Finally, it seems that the DLL exports some variables =&gt; they have to be
specially handled (see details on how to do it in some other DLLs, like
msvcrt)
</p></quote>


</section>
<section 
	title="Wine Killing X?"
	subject="wine killing X?"
	archive="http://www.winehq.com/pipermail/wine-devel/2007-April/056399.html"
	posts="8"
>
<topic>Graphics</topic>
<p>Juan Lang experienced some strange behavior with newer releases of Wine
and wondered if anyone was seeing it:</p>
<quote who="Juan Lang"><p>
I just upgraded to the latest wine version and tried wineprefixcreate (no
.wine directory), and it kills X.  Nvidia drivers 1.0.9755.
</p><p>
Anyone else see this?</p></quote>

<p>From there people began pointing fingers at the nvidia driver.  Ben
Hodgetts guess that simply running <code>glxinfo</code> would also kill X.
Juan confirmed that was the case.  </p>

<p>However, other reports trickled in with cases where X would crash.  
There was no smoking gun and it was difficult to tell whether Wine or
the display driver was at fault.</p>

</section>
<section 
	title="SambaXP Report"
	subject="SambaXP 2007 Report, Day 1"
	archive="http://www.winehq.com/pipermail/wine-devel/2007-April/056254.html"
	posts="3"
>
<topic>News</topic>
<p>Kai Blin went to the SambaXP event last week, the Samba project's yearly 
conference in Germany, and wrote a report for Wine with things we might find 
interesting:</p>
<quote who="Kai Blin"><p><u>Day 1</u></p><p>
SambaXP started on monday with a tutorial from Jerry Carter, which was 
interesting but not really related to Wine. However, in the evening I finally 
managed to grab hold of Steve French to talk about implementing a remote 
named pipes interface in cifs. This afternoon, the actual conference is about 
to start, featuring a couple of talks about winbind, cifs and couple of other 
things that might be interesting for Wine.
</p><p>
For remote named pipes, Steve suggested to use mount to set up the pipes, 
switching from byte mode to message mode and back using chattr. I'll look 
into writing some example code for Steve to test and then we'll look into 
kicking that off.
</p><p>
That's it for the monday writeup, I expect that today will give more 
interesting things to write about.

</p><p><u>Day 2</u>
</p><p>

On Tuesday, I had the chance to talk to Sam Ranji from Microsoft at lunch.
</p><p>
He is leading the open source compatibility lab at Microsoft, a lab running 
only open source software. He told us that he was at SambaXP to figure out 
how Microsoft could help the Samba community and Samba customers.
</p><p>
The conversation was very polite, but not very much to a point. Sam seems to 
be pretty reasonable about talking to the open source community, but there is 
only so much he can do on the Microsoft side. Microsoft seems to acknowledge 
that there is need for a product like Samba out there and it looks like they 
have decided to play along. Sam mentioned that there were some bugs in Vista 
that severely hurt Samba interoperability and that Microsoft fixed them prior 
to the Vista release.
</p><p>
Simo Sorce then pointed out some cases where Microsoft used to cooperate with 
Samba and now stopped talking. Dan Shearer told an amusing anecdote about one 
project manager at Microsoft who wanted to use ports > 1024 for privileged 
services, and how Tridge wrote a perl script exploiting this potential 
vulnerability, before it even existed. 
</p><p>
Sam seems to be really interested in cooperating with Samba in the area of bug 
reports, and see where the cooperation can go from there. While this doesn't 
mean much for Wine, it seems like Microsoft finally is accepting that they 
can't just will open source software away. We will see how this develops.
</p><p>
----
</p><p>
Centeris is producing Centeris Likewise, a product that supports managing 
Linux/Unix products using standard Windows administration tools. Centeris' 
Krishna Ganugapati had a fast-paced talk about Likewise and named a couple of 
requirements for porting their .NET/Mono based management applications to 
Linux. Among the things they need are a library similar to netapi32, a 
library doing DCE/RPC and remote named pipes. Now, if you remember part 1 of 
my report, remote named pipes is something I already got started on.
</p><p>
Talking to Krishna after his talk, we both realized that cooperating in this 
area will give Centeris a way to port their product and Wine a way to just 
thunk to a native library instead of reinventing the wheel. Centeris is happy
to fund development in that area and then release this under a free license.
I will get into that some more after SoC.
</p><p><u>Day 3</u>
</p><p>
The last day of SambaXP was split into two tracks again, one being "case study 
and vendor report", the other a developer track. I spent most of my time in 
the developer track, but you might want to check out 
<a href="http://www.sambaxp.org/">http://www.sambaxp.org/</a>
in a week or two to see the slides (and listen to the oggs) of some of the 
case study talks.
</p><p>
A notable talk in the morning was Stefan Metzmacher's talk on active directory 
replication. Most of the audience seemed to miss the significance of the 
talk, but personally I think this is one of the important milestones in 
Samba's history. It's much easier now to move from a Windows PDC to a Samba 
PDC, as Samba can just grab the active directory via the normal replication 
routines.
</p><p>
Later that day Lars M&#252;ller from the Samba team was talking about uniform 
Samba binaries as a way to get feedback about fixed bugs without the user having
to know about compiling the sources. That might be an interesting idea to keep 
an eye on, Wine might want something similar once we go 1.0, and I figure 
that Samba will have something like that set up in 6-18 months.
</p><p>
The most interesting talk on Wednesday was given by Julien Kerihuel from 
OpenChange. The OpenChange people are building an open source replacement for 
Exchange. In order to properly support this, they are working on decoding the 
MAPI protocl, and they also provide a libmapi library for client 
applications. As a proof of concept, they have an evolution plugin that'll 
allow evolution to talk to exchange using MAPI. The talk had a couple of 
demonstrations of the functionality that were greeted with applause from the 
audience. While OpenChange still has a bumpy road ahead, I'm pretty sure they 
will manage. OpenChange is the Samba of groupware, definetely a project to 
watch.
</p><p>
The most exciting talk of the day, at least in my personal biased opinion, was 
in the case study track. But my perspective on that might be a little off, as 
that was the talk I was giving. I think it was received well by the audience.
It probably won't be too interesting for you folks as you already know what 
Wine is all about. ;)
</p><p>
The last talk I attended on that day was given by David Holder, who works for 
Erion, a company that does IPv6 consulting. He had analyzed the Samba source 
code to check how much work it would be to make Samba IPv6-ready. cifs and 
Samba4 are almost there, Samba3 needs some work. This is mostly due to the 
fact that NBT doesn't do IPv6 by design and some of the Samba3 code still is 
coupled to this.
</p><p>
This is the last installment of this year's SambaXP report. More about Samba 
from a Wine perspective will certainly follow.</p></quote>

</section>
<section 
	title="Mandriva RPM's"
	subject="Mandriva rpms"
	archive="http://www.winehq.com/pipermail/wine-devel/2007-April/055978.html"
	posts="4"
>
<topic>Packaging</topic>
<p>Marco Meijer announced he had created some Mandriva RPMs:</p>
<quote who="Marco Meijer"><p>
Ivan Leo Puoti  has not had much time lately to make the rpms for mandriva.
So I volunteered  to make them.
</p><p>
So I made a rpm from the latest rpm.
</p><p>
How do I get this rpm on the winehq download server ?
</p></quote>

<p>It didn't appear anyone set him up with access to the SourceForge
repository.  However, Anssi Hannula gave another source for Wine RPMs:</p>
<quote who="Anssi Hannula"><p>

Note that latest Wine RPMS for Mandriva 2007.0 are also available in the
official Mandriva main/backports repository.
</p><p>
Updating them to 0.9.35 has been delayed, however, due to an SVN outage
at Mandriva.</p></quote>

</section>
<section 
	title="Debugging Reports"
	subject="Better Debugging Possibilities for Wine on Ubuntu"
	archive="http://www.winehq.com/pipermail/wine-devel/2007-April/056066.html"
	posts="7"
>
<topic>Debugging</topic>
<p> Stephan Hermann wrote in asking about how Ubuntu could provide better
debugging reports:</p>
<quote who="Stephan Hermann"><p>
 As Scott Ritchie knows, I'm at the moment the reponsible person for
 Wine on Ubuntu.
 I hope that you all know, Ubuntu has a new system for filing
 crash reports and stacktraces. (named apport aka automatic crash
 reports, some documentation is found at 
 <a href="https://wiki.ubuntu.com/Apport">
 https://wiki.ubuntu.com/Apport)</a>
</p><p>
 Those reports are working quite well for all apps in Ubuntu, but not as
 expected for Wine, especially when windows apps are involved.
</p><p>
 We discussed yesterday about this problem, and now we want your help,
 to make things better.
</p><p>
 What we need from you:
       what you need from us (Ubuntu) to get better backtraces
 when wine crashes (especially wine-preloader)
</p></quote>

<p>Stephan provided
<a href="https://bugs.launchpad.net/ubuntu/+source/wine/+bug/90957">an example</a>
of the debugging info currently generated.  Marcus Meissner thought that 
information was pretty useless.  He suggested setting Wine up to automatically
generate a backtrace from winedbg:</p>
<quote who="Marcus Meissner"><p>
With:
<ul><code>
[Software\\Microsoft\\Windows NT\\CurrentVersion\\AeDebug] 1119019818<br />
"Auto"="1"<br />
"Debugger"="winedbg --auto %ld %ld"</code></ul></p><p>

in the registry Wine will call winedbg automatically on a crash and get
a Win32 aware backtrace.
</p><p>
It would already help to use wine-pthread instead of wine-preloader
for generating the backtrace. (Just replace it as traced binary.)
</p></quote>

<p>Vitaliy Margolen suggested some other info to include as well:</p>
<quote who="Vitaliy Margolen"><p>

In general the most useful pieces of information are ... complete
terminal output, $PWD and the command used to start an application. Also
the exact Wine version $(wine --version), and where did it come from
(self-compiled or binary). All of them are absent from the report.
</p></quote>

</section>
<section 
	title="Wine At LinuxTag 2007"
	subject="Linuxtag 2007 in Berlin"
	archive="http://www.winehq.com/pipermail/wine-devel/2007-April/056310.html"
	posts="4"
>
<topic>News</topic>
<p>Stefan Munz invited folks to help staff a booth at LinuxTag 2007 in
Berlin on May 30th - June 2nd:
</p><quote who="Stefan Munz"><p>
Finally we got a Wine booth at Linuxtag 2007 in Berlin. Everybody who wants to 
participate is welcome. I have to order exhibitor passes, so if anyone you wants 
to help out please contact me :-)
</p></quote>



</section>
<section
 title="WineConf 2007"
 subject="Wineconf 2007 survey"
 archive="http://www.winehq.com/pipermail/wineconf/2007-April/000451.html"
 posts="1"
>
<topic>WineConf 2007</topic>
<p>Unless you read the wineconf mailing list, you probably didn't see
this post by Jeremy White:</p>
<quote who="Jeremy White"><p>
Well, I was hoping that out of the chatter following my last email,
we'd have consensus about the location.
</p><p>
However, the overwhelming silence didn't really help :-/.  So, to try to
help get some forward momentum, I thought we should turn to a survey
again - then we'd just pick the most popular spot.
</p><p>
To that end, if you could visit this page:
<ul>
  <a href="http://www.winehq.org/wineconf/survey">
  http://www.winehq.org/wineconf/survey</a></ul>
</p></quote>

<p>
At this point the choice for WineConf 2007 definitely seemed
narrowed down to Zurich (with a possible satellite conference in LA),
Amsterdam (or Utrecht), or Bratislava Slovakia.   
If you have any comments, say you only would vote for Zurich if LA was 
truly going to work as a remote location, then you should add them in the
comment field.  The extremely tentative dates are probably in late September
or early October.  The dates are dependent on the location.</p>
</section></kc>
