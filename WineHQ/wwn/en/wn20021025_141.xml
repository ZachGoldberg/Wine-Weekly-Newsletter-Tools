<?xml version="1.0" ?>
<kc>

<title>Kernel Cousin Wine</title>

<author email="vinn@theshell.com">Brian Vincent</author>

<issue num="141" date="10/25/2002" />

<intro>

<p>This is the 141st release of the Wine's kernel cousin publication. Its
main goal is to distribute widely what's going on around Wine (the Un*x 
Windows emulator).</p></intro>



<stats posts="236" size="947" contrib="61" multiples="33" lastweek="35">

<person posts="47" size="115" who="Dimitrie O. Paun" />
<person posts="17" size="48" who="Alexandre Julliard" />
<person posts="13" size="139" who="Greg Turner" />
<person posts="10" size="24" who="Jeff Smith" />
<person posts="9" size="28" who="Martin Wilck" />
<person posts="8" size="39" who="Patrik Stridvall" />
<person posts="8" size="38" who="Sylvain Petreolle" />
<person posts="7" size="57" who="Francois Gouget" />
<person posts="7" size="34" who="David D. Hagood" />
<person posts="7" size="25" who="Dustin Navea" />
<person posts="7" size="22" who="Rein Klazes" />
<person posts="7" size="22" who="Uwe Bonnes" />
<person posts="6" size="13" who="Andreas Mohr" />
<person posts="5" size="26" who="Till Mossakowski" />
<person posts="4" size="20" who="Shachar Shemesh" />
<person posts="4" size="18" who="Vincent Beron" />
<person posts="4" size="11" who="Eric Pouech" />
<person posts="4" size="9" who="Ove Kaaven" />
<person posts="3" size="78" who="(sauer)" />
<person posts="3" size="9" who="Paul Rupe" />
<person posts="3" size="7" who="Dmitry Timoshkov" />
<person posts="3" size="6" who="Bobby Bingham" />
<person posts="4" size="21" who="Chris Morgan" />
<person posts="2" size="8" who="Stefan Leichter" />
<person posts="2" size="8" who="Michael Stefaniuc" />
<person posts="2" size="8" who="Kjetil S. Matheussen" />
<person posts="2" size="6" who="Lionel Ulmer" />
<person posts="2" size="6" who="Jukka Heinonen" />
<person posts="2" size="5" who="Thomas Wickline" />
<person posts="2" size="4" who="Steve Langasek" />
<person posts="2" size="4" who="Christian Costa" />
<person posts="2" size="3" who="Dan Fer" />
<person posts="1" size="6" who="Zsolt Rizsanyi" />
<person posts="1" size="5" who="admiral coeyman" />
<person posts="1" size="3" who="Fabian Cenedese" />
<person posts="1" size="3" who="Ben Stanley" />
<person posts="1" size="2" who="Carlos Lozano" />
<person posts="1" size="2" who="DanteAliegri" />
<person posts="1" size="2" who="Erland Lewin" />
<person posts="1" size="2" who="Marcus Meissner" />
<person posts="1" size="2" who="Malte Starostik" />
<person posts="1" size="2" who="Christian Neumair" />
<person posts="1" size="2" who="Steven Edwards" />
<person posts="1" size="2" who="Jonathan Gevaryahu" />
<person posts="1" size="2" who="Juergen Schmied" />
<person posts="1" size="2" who="Duane Clark" />
<person posts="1" size="2" who="Peter L Jones" />
<person posts="1" size="2" who="Rizsanyi Zsolt" />
<person posts="1" size="2" who="Michael Stefaniuc" />
<person posts="1" size="2" who="Steven Edwards" />
<person posts="1" size="2" who="(David.Goodenough)" />
<person posts="1" size="1" who="(ob_ok)" />
<person posts="1" size="1" who="Taybin Rutkin" />
<person posts="1" size="1" who="Andriy Palamarchuk" />
<person posts="1" size="1" who="P. Christeas" />
<person posts="1" size="1" who="Bill Medland" />
<person posts="1" size="1" who="Ender" />
<person posts="1" size="1" who="John K. Hohm" />

</stats>
<section 
	title="News: Xandros Release, WineX with Lycoris, Klez Virus" 
	subject="News"
	archive="http://www.eweek.com/article2/0,3959,640814,00.asp" 
	posts="1" 
	startdate="10/19/2002"
	enddate="10/25/2002">
>
<topic>News</topic>
<p>Xandros released their Desktop Linux product this week.  
You can find coverage from 
<a href="http://www.eweek.com/article2/0,3959,640814,00.asp">eWeek</a>,
<a href="http://newsforge.com/newsforge/02/10/21/1749230.shtml?tid=23">NewsForge</a>,
and the <a href="http://linuxtoday.com/news_story.php3?ltsn=2002-10-22-014-26-NW-DT-SW">
press release</a> itself.
>From the eWeek article:</p>
<quote who="eWeek"><p>
CrossOver for Xandros will combine functionality from CrossOver Office, 
which lets applications such as Microsoft Office and IBM's Lotus Software 
division's Notes run; and CrossOver Plugin, which lets Linux Web browsers 
use Windows Web applications, such as Windows Media Player, QuickTime and 
Shockwave.
</p><p>
Xandros Desktop users will be able to run or view these applications without 
having to buy, configure or install additional software on top of the operating 
system, officials said.
</p><p>
There is one hook: CodeWeavers will not provide support or maintenance upgrades 
for Xandros customers, who will have to pay separately for a CrossOver support 
contract.
</p></quote>

<p>From the NewsForge article,
<quote who="NewsForge">
 Of course, with CrossOver Office and CrossOver Plugin installed by default, 
 you'll also be able to install your Windows programs. Let me tell you: Internet 
 Explorer 5.5 runs beautifully in Xandros. I've used CrossOver to install Explorer 
 on Mandrake and SuSE, with only partial success. But everything about Explorer 
 is right this time: the fonts, the javascript, the layouts, the speed -- everything. 
</quote></p>

<p>
<a href="http://www.xandros.com">Xandros</a> also revamped their website in 
anticipation of the launch.  One page discusses 
<a href="http://www.xandros.com/windowscompatibility.html">Windows compatibility</a>
and shows how Xandros integrates with Samba and Wine (though not specifically 
mentioning either).  You can also purchase the Debian-based distribution from 
their new <a href="http://shop.xandros.com/">store</a> for $99.  
So what's next
for the company?   Coming soon (possibly with a very liberal definition of "soon")
will be a <a href="http://www.xandros.com/server.html">server edition</a> with
SOAP-based remote management tools and <a href="http://www.xandros.com/xn.html">Xandros
Networks</a> integrated into both the desktop and server products to provide
updates and new releases.</p>

<p>But the question really begs, is any of this the least bit new?  I mean, we've
been able to buy distributions in the store and online for a heck of a long time.
Automatic updates aren't really new.  Even the configuration and management of lots
of desktops really isn't that cutting edge.  CodeWeavers' Wine preview has been
available for Mandrake users for years.  However, if you think back to when Corel
released their distribution you'll remember that it raised the bar for all
distributions.  In general, Linux distributions seem to go through spurts of
changes, and it seems like its happening again.  Perhaps within the next year it
will just be expected that all distributions will be designed to have tight
Samba integration, limited Windows application support, and a desktop that's
even easier to navigate.  For more on what really differentiates Xandros,
check out <a href="http://www.consultingtimes.com/articles/xandros/launch.html">
this interview</a> with Ming Poon, Xandros' VP of Software Development.</p>

<p>In other disto news, Lycoris will be releasing it's distribution with
WineX included.  The press release reads:</p>
<quote who="DesktopLinux"><p>
Redmond, WA -- (press release) -- Continuing its leadership role in providing 
alternative desktop software, Lycoris partners with TransGaming to bring 
unprecedented cross-platform gaming into the hands of Desktop/LX users.
</p><p>
With the new Lycoris GamePak, Desktop/LX users gain simple installation of 
improved and enhanced Open Source games, plus the ability to play top Windows 
games, all in one box. Access to TransGaming's WineX software, which allows 
DirectX games to run on other platforms, will be included with the Lycoris 
GamePak, on retail store shelves this Holiday season.
</p><p>
Lycoris and TransGaming have reached an agreement that will also enable 
GamePak subscribers to get discounts on major Linux gaming titles such as 
TimeGate Studios' award winning game series Kohan, and promises to add 
value for users who move over to the Desktop/LX platform during the holidays.
</p><p>
Lycoris sees this as an important step to offering a viable alternative 
to Windows and giving gamers the excitement and action they expect.
</p></quote>

<p>Speaking of TransGaming, happy birthday!  They're a whopping one-year
old.  To celebrate, they gave a discount for all subscribers buying 
products on Tuesday, Oct 22nd.  Unfortunately I got the press release
too late on Friday to include in last weeks' issue, so if you didn't
hear about it you're out of luck.  Part of that announcement read:
<quote who="TransGaming">
 This is our way of letting you know how much we appreciate TransGamers. 
 Many of you who signed on last year when TransGaming first launched its 
 subscription service supporting a mere six games, are still with us today, 
 now enjoying over 150 titles on Linux. That's awesome and this anniversary 
 gift is our way of thanking you, and all members of the TransGamer community,
 for the support and interest we have received. </quote></p>

<p>But none of the above happened to be the big of the week.  That
prize goes to <a href="http://articles.linuxguru.net/view/198/">an
article</a> on linuxguru.net about Wine running the Klez virus.  This
isn't the first time Wine has had the distinction of running viruses
intended for other operating systems, but Klez is a little more 
known than the others.  Several people pointed out KMail really
does ask whether programs should be executed, as shown in this
<a href="http://lists.kde.org/?l=kde-devel&amp;m=103548062415354&amp;q=p5">screenshot</a>.
It should also be noted that Wine only runs with the same permissions
as the user executing it.  So if a user can mailbomb friends
by accessing a local MTA, so can Wine.  Securing Wine, daemons, and
anything else is left as an exercise for the reader.</p>
</section>



<section 
	title="RPC Update" 
	subject="An RPC progress report"
	archive="http://www.winehq.org/hypermail/wine-devel/2002/10/0583.html" 
	posts="4" 
	startdate="10/22/2002"
>
<topic>Status Updates</topic>
<p>Greg Turner set about merging a ton of RPC code written
by Ove K&#229;ven <kcref subject="" startdate="" />
and wrote in with an update about the status of the merge
and some of the new stuff he's working on:</p>

<quote who="Greg Turner">
<p>
Above what Ove already implemented, I really haven't done all that
much.  Frankly, in its current state, it is quite possible that the RPC
work I am doing will /detract/ from the stability of wine, until the
implementation is more complete.  RPC is painfully complicated,
and a victim of serious creeping featurism.  Microsoft makes it worse
by providing poorly documented extensions to the protocol, and a largely
undocumented marshalling API (much of which developers typically don't
have to learn because the API calls are generated by the MIDL compiler).
</p><p>
My target right now is to get a "hello world" API invocation to
work across processes using wine RPC.  Once that is achieved,
I plan to create a unit test for this.  Then, we'll have a framework
that we can begin to extend and implement "properly."  I am not there
yet, but I think I'm getting close.  I just have to implement marshalling
for strings, which, in theory, looks pretty easy.  There are probably many
bugs that need squashing before it works, and maybe some additional gaps
in functionality that I don't even realize exist yet... but I do think I'm
pretty near.
</p><p>
Now, what remains to be done?  Well, as Ove mentions in the TODO
for his units, "a whole lot."  Here are several things in no particular order:
<ul>
<li> widl is like MIDL for wine.  For wine to be a useful RPC platform, quite
  a bit of work needs to be done here.  widl currently doesn't generate stubs
  for RPC invocation -- it will need to; this is tricky because the MIDL compiler
  does some really weird stuff.  Then again, we don't necessarily have to
  make widl work like MIDL, so it could be worse.</li>

<li> RPC has a quite featureful error handling mechanism; none of it is implemented
  right now.</li>

<li> The server portions of the patch don't seem to be getting accepted by
  Alexandre.  My guess is that once I have a working test he'll conceed to
  let this in.  To implement this properly is tricky and possibly beyond my
  abilities; Ove seems to think the right way to do this is to use LPC
  (Local Procedure Call, another undocumented monster).  LPC has no implementation
  in wine and is not going to be trivial to create.</li>

<li> there are several different memory allocation schemes for MSRPC.
  I don't even understand what they all are yet, much less have them
  properly implemented.</li>

<li> MSRPC provides impersonation capabilities which currently are not possible
  to implement in wine.</li>

<li> Some transports are not yet implemented.  The existing transport implementations
  are incomplete.  (By transports I mean, tcp/ip, named-pipes, local procedure call,
  etc --- the various types of low-level plumbing that can be used to connect the
  client and the server).</li>

<li> Data marshalling is the means by which RPC represents data across process
  and machine boundaries.  MSRPC extends NDR format for this.  The wire
  protocol is mostly documented, but the MS API's to convert data-types in
  memory into NDR are not.  This, alone, is a sizable chunk of work.</li>

<li> ORPC is RPC for OLE; once we have a working RPC framework, we can
  use it to implement out-of-process OLE client/server communications.
  This will be a huge win for wine.  But again, it's a lot of work, and I'm no OLE
  expert (hell, I'm no RPC expert :)</li>

<li> Surely there is much more stuff I am forgetting.  Like Ove said, it's "a whole lot"
  of stuff, approximately as big a project as, say, DirectX.</li></ul>
</p><p>
Basically, RPC for wine is a huge beast of a project.  IMO it is probably the
biggest and most difficult-to-fill hole in wine's feature-completeness ATM.
In the short term, don't expect any miracles --- I really doubt that I'm
going to "solve" this (in my spare time!) anytime soon.  But, once
I start getting some results, I imagine others will be enticed to help out,
as contributors like Ove already have.  (To be clear: Ove enticed me, not
the other way around: He did all the "real" work, and deserves way
more credit than me for any success I may achieve in the near future).
</p></quote>

<p>Greg made available some of his work that hadn't been split up
yet and announced a large 
<a href="http://www.winehq.org/hypermail/wine-devel/2002/10/0577.html">patch</a>:</p>

<quote who="Greg Turner"><p>
I'm holding back on submitting an "official" patch to give Alexandre
the chance to catch up so I can start a new "F" series and not
stay forever conceptually forked from CVS wine.  But I thought he or
somebody else might like to see what's I'm up to so here goes (I'm also
having some HD troubles so, in case I have a meltdown, this will prevent
me from losing my work!)
</p><p>
I'm enclosing a diff relative to E_PL15 and also a bigger one of uncomitted 
changes relative to CVS wine (the E_PLxx series are inclusive of this latter
diff, so there is nothing new there).  I've indexed it as F_PL1 because
presumably F_PL0 will be yet another copy of the unmerged server
parts.
</p><p>
the E_PL15_unmerged patch does not include the F_PL1_pre0 patch,
so if you take CVS wine, apply E_PL15_unmerged.diff, and then
apply F_PL1_pre0.diff on top of that, you have my tree.  As usual,
this is not a hint to apply.</p>
<p>
CHANGELOG (for rpc_F_PL1_pre0 only):<br />
dlls/rpcrt4: ndr_marshall.c, ndr_midl.c, ndr_misc.h;
  include: rpcndr.h, wine/rpcfc.h: <br />
  Greg Turner
<ul>
<li> make explicit some hidden include dependencies</li>
<li> Implement NdrGetBuffer, NdrFreeBuffer, and 
  NdrConformantStringBufferSize</li>
<li> define the RPC_FC_C_CSTRING constant</li>
<li> perhaps I don't want those MIDL structs after all. removed.</li>
</ul></p></quote>
</section>









<section 
	title="Listview Update (con't)" 
	subject="Third listview status update"
	archive="http://www.winehq.org/hypermail/wine-devel/2002/10/0564.html" 
	posts="51" 
	startdate="10/22/2002"
	enddate="10/24/2002"
>
<topic>Status Updates</topic>
<p>Dimi Paun wrote in with another update about his
Listview progress:</p>
<quote who="Dimitrie Paun"><p>

 With my latest W-series patches, the listview should now
 be a pleasure to work with: fast, *no* flicker, etc.
 It should be a lot better than before I started working
 on it. If this is not the case (there are regressions,
 there is nasty flicker *anywhere*, it's slow, or in
 general it's not a pleasure to interact with it, i.e.
 you don't get a warm and fuzzy feeling) let me know now.
</p><p>
 Internally, the code is a lot cleaner. I have started on
 Sep. 9, 2002, at revision 1.138. A month and a half, and
 almost 150 revisions later, most of the code has changed
 multiple times. Large number of visible, and mostly invisible
 bugs have been fixed, a lot of corner cases covered, features
 implemented, listview has been made scalable, flicker has
 been eliminated by redrawing the absolute minimum, etc. 
 We are now on solid ground to implement more stuff.
</p><p>
 This has been an extenuating exercise. I am tired, and on
 top of it all, real life has knocked on my door. This does
 not mean I'll stop working on it, but it probably means
 that I will not be able to put as much time into it.
</p><p>
 For the above mentioned reasons, I think it's best for everybody
 if we stabilize the code as much as possible, before we start
 working on the large number of missing features. For this I need
 your help -- the few apps that I test with work just fine now. 
</p><p>
I would like to thank everybody that helped me with testing,
patches, or reporting bugs. I couldn't have done the half of
it without that support.
</p><p>
This sounds like this is a done deal. It's not. There's a lot
of stuff that remains to be done, but I needed some closure. :)
</p></quote>

<p>This pretty much generated a flurry of reports.  Dimi
squashed a lot more bugs and fixed many of the problems
reported.  Then he announced:</p>
<quote who="Dimitrie Paun"><p>
After my latest X-series patches (currently at X6), I am aware
of the following listview bugs:
</p><p>
Yes, you read correctly: NONE. :) 
</p><p>
So I ask you for one of two things:
bug reports or success stories
</p><p>
Otherwise, I'm gonna declare listview the coolest, nicest,
most huggable piece of code out there &lt;g&gt;.</p></quote>
</section>






<section 
	title="Commctrl Update" 
	subject="updated dlls/comctl32/commctrl.c comments"
	archive="http://www.winehq.org/hypermail/wine-patches/2002/10/0350.html" 
	posts="2" 
	startdate="10/22/2002"
>
<topic>Status Updates</topic>
<p>Christian Neumair noticed Dimi's update for listview added
to the header, so he decided to do the same for commctrl.c.  </p>
<quote who="Christian Neumair">
<p>
This code was audited for completeness against the documented features
of Comctl32.dll version 6.0 on Oct. 21, 2002, by Christian Neumair.
Unless otherwise noted, we believe this code to be complete, as per
the specification mentioned above.
If you discover missing features, or bugs, please note them below.
</p><p>
<u>TODO</u>
<ul>
   <li> implement GetMUILanguage + InitMUILanguage</li>
   <li> LibMain => DLLMain ("DLLMain takes over the functionality of both the
                           LibMain and the WEP function.", MSDN)</li>
   <li> finish NOTES for MenuHelp, GetEffectiveClientRect and GetStatusTextW</li>
   <li> FIXMEs + BUGS (search for them)</li></ul>
</p><p>
<u>Control Classes</u>
<ul>
   <li> ICC_ANIMATE_CLASS</li>
   <li> ICC_BAR_CLASSES</li>
   <li> ICC_COOL_CLASSES</li>
   <li> ICC_DATE_CLASSES</li>
   <li> ICC_HOTKEY_CLASS</li>
   <li> ICC_INTERNET_CLASSES</li>
   <li> ICC_LINK_CLASS (not yet implemented)</li>
   <li> ICC_LISTVIEW_CLASSES</li>
   <li> ICC_NATIVEFNTCTL_CLASS</li>
   <li> ICC_PAGESCROLLER_CLASS</li>
   <li> ICC_PROGRESS_CLASS</li>
   <li> ICC_STANDARD_CLASSES (not yet implemented)</li>
   <li> ICC_TAB_CLASSES</li>
   <li> ICC_TREEVIEW_CLASSES</li>
   <li> ICC_UPDOWN_CLASS</li>
   <li> ICC_USEREX_CLASSES</li>
   <li> ICC_WIN95_CLASSES</li></ul>
</p></quote>
</section>












<section 
	title="Wanted: AppDB Maintainer" 
	subject="WANTED (dead or alive): additional AppDB maintainer"
	archive="http://www.winehq.org/hypermail/wine-devel/2002/10/0479.html" 
	posts="3" 
	startdate="10/19/2002"
>
<topic>Project Management</topic>
<p>Andreas Mohr put out a call for help for the Application Database:</p>
<quote who="Andreas Mohr"><p>
 as I'm currently in my studies duties again and the AppDB submissions
 are piling up enormously (> 20 new entries in less than two weeks),
 I'm looking for one or two additional AppDB maintainers to do the
 Beowulf thingy ;-)
 (I'm talking about 
 <a href="http://appdb.winehq.org">http://appdb.winehq.org</a>, here)
</p><p>
 The job description can be found at
 <a href="http://www.winehq.org/about/index.php?contrib#active">
 http://www.winehq.org/about/index.php?contrib#active</a>
 Sadly enough, this description page has been online for several 
 months now, with (almost ?) nobody applying for any jobs listed.
</p></quote>

<p>Thomas Wickline, Bobby Bingham, and an unknown person offered to
 help out. Of course the job remains open for anyone else who wants 
 to help the Wine project.</p>
</section>






<section 
	title="Wine PR Manager Needed" 
	subject="Getting actively involved in the Wine project"
	archive="http://www.winehq.org/hypermail/wine-devel/2002/10/0482.html" 
	posts="1" 
	startdate="10/19/2002"
>
<topic>Project Management</topic>
<p>Thomas Wickline looked at the page Andi Mohr referenced above about
jobs available and noticed there was one posted for a PR Manager.
He reposted it to wine-devel:</p>
<quote who="Thomas Wickline"><p>
 <u>PR manager</u>
</p><p> 
 Currently we almost have no Public Relationship management at all. This 
 should change for the better.
</p><p>
 Currently almost the only form of PR is "preaching to the choir", since 
 we're having articles on online IT sites (by far most are Linux only !). 
 We should have much more coverage on traditional Windowsish sites and, 
 most importantly, in dead-tree newspapers, to enlighten the general 
 public also known as The Great Unwashed Masses !
</p></quote>
<p>He went on with some other ideas for drawing attention to Wine:</p>
<quote who="Thomas Wickline"><p>
 Wine users, CodeWeavers, &amp; WineX customers could do Previews/Demo's 
 at their local lug meetings as well.. This is what I did a couple months 
 back and it was a huge success there were Windows users at the meeting 
 to see Linux and Win app's being run on Linux ... Also it gives Linux 
 users a look at wine as well.  So I suggest that we try to encourage 
 wine users to volinteer to show Wine at their
 local user groups/Installfest/Computer shows and so on.
</p><p>
 This is not a PR manager but it is PR......
</p></quote>

<p>Anyone out there ever demo Wine for their LUG?  If you'd like to
write up some guidelines for how you did it, what you demonstrated, 
questions asked, etc, I'll post it here to help others out.  Send
email to <i>vinn</i> -at- <i>theshell.com</i>.</p>
</section>



<section 
	title="Web Browser Integration Needed" 
	subject="Re: WebBrowser"
	archive="http://www.winehq.org/hypermail/wine-devel/2002/10/0487.html" 
	posts="6" 
	startdate="10/19/2002"
	enddate="10/20/2002"
>
<topic>Project Management</topic>
<p>Malte Starostik posted a patch adding typedefs for IWebBrowser.
IWebBrowser is a set of interfaces Microsoft defined for Internet
Explorer that allow you to embed it within another program. It 
provides methods navigation, hyperlinking, etc.  Dimi Paun asked
if anyone wanted to work on actually hooking the IWebBrowser 
interface into the Gecko API so that applications could use Mozilla
to do page rendering and such.</p>

<p>Malte replied, <quote who="Malte Starostik">
Hmm, we're implementing the absolutely necessary parts in reaktivate 
with Konqueror, but that's run from inside Konq already, so it's a bit 
special. Maybe there would be a way to use either browser with those 
interfaces? :-)</quote></p>

<p>Dante Aliegri gave a link to some Mozilla hooks that implemented
the needed functionality,
 <quote who="Dante Aliegri">
 Fwiw, this has already been done in mozilla, and there is  documentation 
 on it at 
 <a href="http://www.iol.ie/~locka/mozilla/control.htm">
    http://www.iol.ie/~locka/mozilla/control.htm</a> 
 . So depend on how we want to do this,
 we could use this, and/or konq. I would think more people would want to 
 go the mozilla way since its tri-licence, and the fact that it already 
 works in windows :) But, that's just something to think about.
 </quote></p>

<p>Dimi thought it would be possible to use it, but cautioned,
 <quote who="Dimitrie Paun">
 The only problem is that it's in C++. And it's using ATL, which is,
 IIRC, some MS lib, right?</quote></p>
</section>







<section 
	title="Running Australia's eTax" 
	subject="eTax status report"
	archive="http://www.winehq.org/hypermail/wine-devel/2002/10/0600.html" 
	posts="1" 
	startdate="10/22/2002"
>
<topic>Fixes</topic>
<p>Ben Stanley wanted to let everyone he used Wine to
prepare his tax return:</p>
<quote who="Ben Stanley"><p>
 I have now completed using the eTax program from the Australian Taxation
 Office (
 <a href="http://www.ato.gov.au/">http://www.ato.gov.au/</a>
 ) under wine, and have some concluding remarks.
</p></quote>

<p>I'll interrupt and point out some things.. 
<ul><li>Australia's taxes are due October 31st, so that
    would translate into Really Soon.</li>
    <li>Australia's government is cool enough to provide 
    tax software for it's citizens.</li>
    <li>And on their web page they actually suggest 
    using an emulator if you don't have Windows (rather
    than assuming you're running an OS from Redmond.)</li></ul></p>
<p>Ben's notes were:</p>
<quote who="Ben Stanley"><p>
<ul>
<li> Yellow Note Popups over buttons: these notes pop up almost immediately
you put your mouse over a button, and if you click on them, the button
does not respond. This causes great user frustration, as you point the
mouse at a button, click the mouse, and nothing happens because the
popup note appeared and stole the mouse click. Perhaps this could be
solved by moving the popup note position so that it's not directly under
the mouse pointer? I don't know if this is an etax problem or a wine
problem. Workaround: move mouse over button and click again, or be very
quick with your mouse click the first time.</li>

<li> ListView (tree): when hovering over items with long names, the same
popup note appears, and also greedily steals mouse clicks, preventing
you from selecting the item underneath. The note must pass the mouse
click through for proper handling by the list item. Workaround: Wait for
popup to disappear and then click on list item.</li>

<li> I had some refresh issues with the print preview section of the
program. When it draws a page for the first time, all form fields appear
to be filled in correctly, but when scrolling the form fields are often
left blank when they should be filled in. This may be verified by going
forward and then back a page, to force a complete re-draw of the
original page, and verifying that fields which were previously blank are
now drawn properly.</li>

<li> I didn't try to submit the tax return under wine, as I did not know
about the wine integration of the web browser which would be used to
perform the submission. (I failed to download the security codes under
Mozilla, so I resorted to a Windows box for downloanding security codes
and submission.)</li>

<li> Help problems, partly to do with launching winhelp from within etax,
and also partly because WINE help can't yet read the etax help file
properly.</li></ul></p>
<p>
I used etax in the desktop windowing mode, as I had problems with both
the managed and unmanaged modes. I set all dlls to builtin (except for
"*").
</p><p>
This is the first year that I have been able to use eTax to do the tax
return. I want to thank all of the wine contributors for making it
possible! Last year I gave up and used a Windows box for the whole
thing.
</p></quote>
</section>











<section 
	title="Running Native Windows Utilities" 
	subject="using native regedit"
	archive="http://www.winehq.org/hypermail/wine-devel/2002/10/0581.html" 
	posts="4" 
	startdate="10/22/2002"
>
<topic>Fixes</topic>
<p>Jeff Smith wanted to run Windows' native reegedit, but
he couldn't figure out how:</p>
<quote who="Jeff Smith"><p>
  I know I must be missing something very simple, but I cannot seem to
 get native regedit to run.  The builtin version always runs instead.  The only
 thing I could think of was an entry in DllOverrides:<ul><code>
 "regedit.exe" = "native, builtin".  </code></ul></p><p>That did not work.</p>
</quote>

<p>Greg Turner suggested just renaming it to winregedit.exe before running
it.  Jeff thought that might be okay, but then a while later found the
solution he was looking for:</p>
<quote who="Jeff Smith"><p>
Found something: it works if I fully qualify the command name.</p>
<p>
I was trying this in the DllOverrides / command-line respectively:
<ul><code>
  "regedit.exe" = "native, builtin"<br />
  --dll regedit.exe=n,b</code></ul></p>
<p>
What I have to do for it to work is this:
<ul><code>
  "C:\\Windows\\regedit.exe" = "native, builtin"<br />
  --dll C:\\Windows\\regedit.exe=n,b</code></ul></p>
</quote>
<p>Some people thought this was pretty confusing, especially
because it wasn't really documented.  Alexandre explained the
reasoning, <quote who="Alexandre Julliard">
 It's the way it's supposed to work, because it mimics the way
 loadorder works for dlls: a simple "regedit.exe" matches only if
 regedit is in the system directory. Otherwise you need to specify the
 full path, or use a wildcard entry like "*regedit.exe".</quote></p>

<p>Sylvain Petreolle changed the sample 
<a href="http://cvs.winehq.org/cvsweb/wine/documentation/samples/config">config</a>
to explain this:</p>
<quote who="Sylvain Petreolle"><p><code>
 ; you can specify applications too<br />
 ; this one will apply for all notepad.exe<br />
 ;"*notepad.exe" = "native, builtin"<br />
 ; this one will apply only for a particular file<br />
 ;"C:\\windows\\regedit.exe" = "native, builtin"
</code></p></quote>
</section>








<section 
	title="Compiling Wine With glibc 2.3" 
	subject="Re: glibc 2.3 pthread patch"
	archive="http://www.winehq.org/hypermail/wine-devel/2002/10/0535.html" 
	posts="4" 
	startdate="10/20/2002"
>
<topic>Patches</topic>
<p>Ove K&#229;ven posted a patch with the following
note,
<quote who="Ove Kaaven">

 Now that glibc 2.3 is available for those bleeding-edge folks on debian
 unstable, it seems that Wines compiled on 2.2 won't run on 2.3 systems.
 The glibc folks did warn us about this a while ago though, so here's a
 patch that implements their suggestion for making wine compatible with as
 many glibc versions as possible. Perhaps Alexandre wants to use his
 WINE_GET_SONAME stuff to detect the name of the libc at configure time
 instead of at runtime like I do, though.
</quote></p>

<p>Ove's patch resolved fork and sigaction at runtime using dlsym()
rather than having it defined when compiled.
Alexandre replied, <quote who="Alexandre Julliard">
Funny, I was working on the same thing right now... But do you really
need to fetch the real libc handle?  It seems to me RTLD_NEXT should
be enough. </quote></p>

<p>Ove thought it might not be enough and wondered about other
DLLs breaking it,
<quote who="Ove Kaaven">
I'm not sure, what happens if opengl32.dll.so or d3d8.dll.so links against
a libGL.so that links against libpthread.so that overrides fork() ? Would
RTLD_NEXT then not go to the pthread fork() ? Or perhaps, it seems, you
grab the entry point before those dlls are loaded. Hmm.</quote></p>

<p>Alexandre said that was exactly the case and it shouldn't cause
any problems, <quote who="Alexandre Julliard">
 Yes, that's the idea. By the time we do PTHREAD_init_done only the
 wine binary and ntdll.dll.so should be loaded, all the rest will be
 loaded later. I guess it would be possible to break it by doing an
 LD_PRELOAD of a library linked with pthreads, but I don't think we
 need to worry about that.</quote></p>
</section>






</kc>

