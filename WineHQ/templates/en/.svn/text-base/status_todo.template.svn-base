<!--TITLE:[Wine Status Known To dos]-->

<h1>Wine Status - Known To Do's</h1>

<h3><a name="Window_management"></a>Window management<br></h3>

<ul>
<li>Rewrite Wine's window management code to be able to change the visual of an X window once the window has been created.</li>
<li>In Desktop mode all processes started from one Wine invocation should be confined to one desktop window.</li>
<li>Get rid of x windows for child windows.</li>
<li>Proper support for freedesktop.org standards.</li>

</ul>

<h3><a name="National_Language_Support"></a>National Language Support<br></h3>

<ul>
<li>We currently lack a way to model hierarchical resources like those required by calendar information (each locale has a variable
    number of calendars, with different attributes). This is a show stopper for completing the NLS Api (Get/EnumCalendarInfo etc).</li>
<li>Make sure ASCII functions call the Unicode one and not the other way around.</li>
<li>Add localization to more languages.(probably will stay forever.)</li>
<li>Add localization to more parts of Wine.(probably will stay forever.)</li>
<li>Better support of Chinese, Korean, Japanese...(currently in works)</li>
<li>Better support of BiDi - Arabic, Hebrew...</li>
</ul>  

<h3><a name="FreeBSD"></a>FreeBSD<br></h3>

<ul>
<li>Add support for MZ_SUPPORTED</li>
</ul>

<h3><a name="WINEDBG"></a>Winedbg<br></h3>

<ul>
<li>Speed up PDB support</li>
</ul>

<h3><a name="GDB"></a>GDB<br></h3>

<ul>
<li>Add the MSC/PDB info support to gdb</li>
</ul>

<h3><a name="DDE"></a>DDE<br></h3>

<ul>
<li>Enhance memory management issues (interprocess sending)</li>
</ul>

<h3><a name="Native_Programs"></a>Native Programs<br></h3>

<pre>
Regedit]

    * Import registry files generated by Windows 2000 regedit.

[winecfg]

    * A lot of testing still needs to be done

[Winhelp]

    * Fix invocation thru WinHelp
     - lots of macros are still missing
</pre>

<h3><a name="File_Management"></a>File Management<br></h3>

<ul>
<li>Allow flexibility in FS &quot;mounting&quot; (for example, SMB shares)</li>
</ul>

<h3><a name="FONTS"></a>Fonts<br></h3>

<ul>
<li>Subpixel rendering - a.k.a. ClearType</li>
<li>Reduce per font startup time</li>
</ul>

<h3><a name="Printers_"></a>Printers<br></h3>

<ul>
<li>Write a printer configuration applet</li>
<li>Implement the "Printers" - Folder (shell32)</li>
<li>Implement the Printer configuration Dialogs (shell32)</li>
</ul>

<h3><a name="Tools_"></a>Tools<br></h3>

<ul>
<li>Perform Windows' reboot operations automatically when required</li>
<li>Winemaker fixes</li>
<li>Run C regression tests on Windows with MSVC</li>
<li>Work on WRC as it does not find system headers</li>
<li>wineconsole: add configuration bar + resizing capabilities</li>
</ul>

<h3><a name="Instructions_"></a>Instructions<br></h3>

<ul>
<li>Documentation updates<br></li>
</ul>

<h3><a name="Aspect_or_Component_"></a>Aspect or Component<br></h3>

<ul>
<li>Review of Wine Server Protocol</li>
<li>Finalize Server Protocol</li>
<li>Visual C++'s native COM support</li>
<li>Create replacement of browser component (Internet Explorer/IExplore)</li>
</ul>

<h3><a name="PORTING"></a>Porting issues for Mingw/Cygwin/MS_VC/OpenWatcom<br></h3>

<ul>
<li>Remove/rewrite wineisms from code</li>
</ul>

<h3><a name="winex11.drv"></a>winex11.drv<br></h3>

<ul>
<li>Add support for keyboard layout APIs.</li>
<li>Better integration with window managers</li>
</ul>

<h3><a name="NTDLL"></a>NTDLL<br></h3>

<ul>
<li>Implement security APIs and make them use native OS security facilities.</li>
<li>Implement the undocumented "NT Ports" API (aka "LPC") used by NT's rpcrt4</li>
</ul>

<h3><a name="KERNEL32"></a>Kernel32<br></h3>

<ul>
<li>Split 16/32 function, finish moving stuff into ntdll (review FS & device support)</li>
<li>Implement non-local named pipes and mailslots over SMB</li>
<li>Implement SMB over Netbios</li>
</ul>

<h3><a name="NETAPI32"></a>Netapi32<br></h3>

<ul>
<li>Implement the Net* functions using rpcrt4</li>
<li>Implement NetServerEnum and NetShareEnum using SMB</li>
<li>Netbios support for IPX</li>
</ul>

<h3><a name="ws2_32.dll"></a>ws2_32.dll<br></h3>

<ul>
<li>SIO_GET_INTERFACE_LIST support for IPX</li>
<li>IPv6 support</li>
<li>More unit tests, e.g. for asynchronous IO.</li>
<li>Make sure OOB data is handled properly.</li>
<li>WS2: Implement service programming interface (SPI), use for supporting other services.</li>
<li>Try to provide more services such as IrDA natively.</li>
<li>Fix stubs left in ws2_32.spec</li>
</ul>

<h3><a name="CABINET"></a>Cabinet<br></h3>

<ul>
<li>Compression API's remain unimplemented</li>
</ul>

<h3><a name="rpcrt4"></a>RPCRT4<br></h3>

<ul>
<li>Fill out the matrix of per-type /Oi marshalling API's.</li>
<li>Some real RPC tests,although there are some tests of some peripheral rpcrt4 API's -- no actual RPC's are tested.</li>
<li>Implement full stub/proxy support for widl</li>
<li>Implement the OXID resolver and other ORPC peccadilloes</li>
</ul>

<h3><a name="DOS"></a>DOS<br></h3>

<ul>
<li>VM86 emulation still has races in irq handling.</li>
<li>DPMI supports now irqs but still not interrupt reflection.</li>
<li>Obsolete Win32s VxDs need to be deleted.</li>
<li>VxD handling should be rewritten so that it no longer uses a separate 16-bit DLL.</li>
<li>If Win16 program uses real mode code, there are code paths where Wine fails to properly initialize DOS memory.</li>
<li>DOS memory management code needs restructuring.</li>
<li>Ioport emulation code should be migrated to winedos.</li>
<li>VESA emulation is missing many important functions.</li>
<li>Bitplane VGA modes are totally unsupported.</li>
<li>Many DOS7 extensions are missing.</li>
<li>System timer code only supports simple cases.</li>
<li>DOS4GW does not work.</li>
<li>NTDLL still has lots of DOS emulation code.</li>
</ul>

<h3><a name="OLE"></a>OLE<br></h3>

<ul>
<li>Integrate ICreateTypeLib support with ITypeLib support</li>
<li>User defined types (e.g. IRecordInfo)</li>
<li>Custom marshalling functions for various data types</li>
</ul>

<h3><a name="DirectX"></a>DirectX<br></h3>

<p>The current <a href="http://wiki.winehq.org/DirectX-ToDo?action=show">DirectX</a> ToDo is located on the wiki.</p>


<h3><a name="MULTIMEDIA"></a>Multimedia<br></h3>

<pre>
sound drivers:
    * Improve the jack audio server, e.g. WaveIn & Resampling.
    * Implement the audio compression codecs.
    * Fix Sound Blaster emulation.

all audio architecture:
    * Improve audio latency
    * No longer use the hack in Wine sound drivers to map the DSound driver interface to an existing WinMM driver. 
     (impacts dsound.dll and winmm + all low level audio drivers)(will likely require a real installation scheme for MM drivers)

ALSA multimedia driver:
    * DirectSound capture 
    * Check for 1.0 correctness

MCI (Media Control Interface) drivers
    * Missing the mcianim drivers.

mciavi:
    * Handling of palettes
    * Recording
    * Lots of messages still need to be handled
    * Support more and less than one audio stream
    * Stopping while playing should stop audio playback ASAP
    * Opening must be possible without filename (use load later to)

avifil32: (sorted by decreasing priority)
    * Make the whole library thread save
    * Interface for AVI files:
      - native version has problems with reading our files
        (Is it still so?)
    * API for clipboard:
      - only stubs. (native version doesn't work).
    * AVIFileProxy is missing.
    * We have no implementation for IAVIStreaming, which doesn't
      result in missing functionality, but in possible performance
      loss. Even the native version has such an interface only for
      the AVI file handler.
      
msvfw32:
    * DrawDib needs some work:
     - Some flags are ignored
     - handle palette
    * semi-stub implementation for file dialogs with AVI preview.
      Need to use OFN_ENABLEHOOK flag.
    * Stub implementation for codec-selection-dialog
    * Resources are missing (also see the 2 above points)
    * StretchDib method is missing
    * Many 16-bit methods are missing
    * MCIWnd:
     - Bug: shouldn't open device with filename if none given.
     - Bug: Windows stays empty when opening of device fails.

avicap32: "Video Capture"
    * Capturegraphbuilder(1/2)
    * Infinite pin tee filter
    * Smart tee filter
    * vfwcapture
    * audiocapturefilter
    * avi muxer
    * avicompressor
    * filewriter
    * audio in mixer prop
    * vfw capture prop
    * avi mux prop
    * avi mux prop1

</pre>

<h3><a name="Low_priority_items_"></a>Low priority items<br></h3>

<ul>
<li>VxD support with dynamic loading</li>
</ul>
<br>

For the full 1.0 Bug List, please see <a href="http://bugs.winehq.com/buglist.cgi?keywords=tasklist">Tasklist</a>

<p>&nbsp;</p>
